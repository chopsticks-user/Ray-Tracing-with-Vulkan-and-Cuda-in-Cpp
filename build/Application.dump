
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 bd ff 01 00 	mov    0x1ffbd(%rip),%rax        # 22fc8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca ff 01 00    	push   0x1ffca(%rip)        # 22ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc ff 01 00    	jmp    *0x1ffcc(%rip)        # 22ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca ff 01 00    	jmp    *0x1ffca(%rip)        # 23000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 ff 01 00    	jmp    *0x1ffc2(%rip)        # 23008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba ff 01 00    	jmp    *0x1ffba(%rip)        # 23010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZSt9terminatev@plt>:
    3060:	ff 25 b2 ff 01 00    	jmp    *0x1ffb2(%rip)        # 23018 <_ZSt9terminatev@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@plt>:
    3070:	ff 25 aa ff 01 00    	jmp    *0x1ffaa(%rip)        # 23020 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@GLIBCXX_3.4.30>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <glfwDestroyWindow@plt>:
    3080:	ff 25 a2 ff 01 00    	jmp    *0x1ffa2(%rip)        # 23028 <glfwDestroyWindow@Base>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <_ZSt17__throw_bad_allocv@plt>:
    3090:	ff 25 9a ff 01 00    	jmp    *0x1ff9a(%rip)        # 23030 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <_ZSt25__throw_bad_function_callv@plt>:
    30a0:	ff 25 92 ff 01 00    	jmp    *0x1ff92(%rip)        # 23038 <_ZSt25__throw_bad_function_callv@GLIBCXX_3.4.14>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30b0:	ff 25 8a ff 01 00    	jmp    *0x1ff8a(%rip)        # 23040 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <vkGetPhysicalDeviceProperties@plt>:
    30c0:	ff 25 82 ff 01 00    	jmp    *0x1ff82(%rip)        # 23048 <vkGetPhysicalDeviceProperties@Base>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <__cxa_begin_catch@plt>:
    30d0:	ff 25 7a ff 01 00    	jmp    *0x1ff7a(%rip)        # 23050 <__cxa_begin_catch@CXXABI_1.3>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    30e0:	ff 25 72 ff 01 00    	jmp    *0x1ff72(%rip)        # 23058 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <strlen@plt>:
    30f0:	ff 25 6a ff 01 00    	jmp    *0x1ff6a(%rip)        # 23060 <strlen@GLIBC_2.2.5>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <_ZNSt6thread6_StateD2Ev@plt>:
    3100:	ff 25 62 ff 01 00    	jmp    *0x1ff62(%rip)        # 23068 <_ZNSt6thread6_StateD2Ev@GLIBCXX_3.4.22>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <__cxa_allocate_exception@plt>:
    3110:	ff 25 5a ff 01 00    	jmp    *0x1ff5a(%rip)        # 23070 <__cxa_allocate_exception@CXXABI_1.3>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <_ZNSt18condition_variable10notify_oneEv@plt>:
    3120:	ff 25 52 ff 01 00    	jmp    *0x1ff52(%rip)        # 23078 <_ZNSt18condition_variable10notify_oneEv@GLIBCXX_3.4.11>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <_ZSt20__throw_length_errorPKc@plt>:
    3130:	ff 25 4a ff 01 00    	jmp    *0x1ff4a(%rip)        # 23080 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <vkEnumeratePhysicalDevices@plt>:
    3140:	ff 25 42 ff 01 00    	jmp    *0x1ff42(%rip)        # 23088 <vkEnumeratePhysicalDevices@Base>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3150:	ff 25 3a ff 01 00    	jmp    *0x1ff3a(%rip)        # 23090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3160:	ff 25 32 ff 01 00    	jmp    *0x1ff32(%rip)        # 23098 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <_ZSt20__throw_system_errori@plt>:
    3170:	ff 25 2a ff 01 00    	jmp    *0x1ff2a(%rip)        # 230a0 <_ZSt20__throw_system_errori@GLIBCXX_3.4.11>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3180:	ff 25 22 ff 01 00    	jmp    *0x1ff22(%rip)        # 230a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    3190:	ff 25 1a ff 01 00    	jmp    *0x1ff1a(%rip)        # 230b0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZSt19__throw_logic_errorPKc@plt>:
    31a0:	ff 25 12 ff 01 00    	jmp    *0x1ff12(%rip)        # 230b8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <__cxa_free_exception@plt>:
    31b0:	ff 25 0a ff 01 00    	jmp    *0x1ff0a(%rip)        # 230c0 <__cxa_free_exception@CXXABI_1.3>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZNSolsEf@plt>:
    31c0:	ff 25 02 ff 01 00    	jmp    *0x1ff02(%rip)        # 230c8 <_ZNSolsEf@GLIBCXX_3.4>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <pthread_mutex_unlock@plt>:
    31d0:	ff 25 fa fe 01 00    	jmp    *0x1fefa(%rip)        # 230d0 <pthread_mutex_unlock@GLIBC_2.2.5>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    31e0:	ff 25 f2 fe 01 00    	jmp    *0x1fef2(%rip)        # 230d8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <vkGetPhysicalDeviceFeatures@plt>:
    31f0:	ff 25 ea fe 01 00    	jmp    *0x1feea(%rip)        # 230e0 <vkGetPhysicalDeviceFeatures@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <glfwGetRequiredInstanceExtensions@plt>:
    3200:	ff 25 e2 fe 01 00    	jmp    *0x1fee2(%rip)        # 230e8 <glfwGetRequiredInstanceExtensions@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3210:	ff 25 da fe 01 00    	jmp    *0x1feda(%rip)        # 230f0 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    3220:	ff 25 d2 fe 01 00    	jmp    *0x1fed2(%rip)        # 230f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <vkDestroyDevice@plt>:
    3230:	ff 25 ca fe 01 00    	jmp    *0x1feca(%rip)        # 23100 <vkDestroyDevice@Base>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    3240:	ff 25 c2 fe 01 00    	jmp    *0x1fec2(%rip)        # 23108 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <glfwWindowHint@plt>:
    3250:	ff 25 ba fe 01 00    	jmp    *0x1feba(%rip)        # 23110 <glfwWindowHint@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <__cxa_atexit@plt>:
    3260:	ff 25 b2 fe 01 00    	jmp    *0x1feb2(%rip)        # 23118 <__cxa_atexit@GLIBC_2.2.5>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <pthread_self@plt>:
    3270:	ff 25 aa fe 01 00    	jmp    *0x1feaa(%rip)        # 23120 <pthread_self@GLIBC_2.2.5>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@plt>:
    3280:	ff 25 a2 fe 01 00    	jmp    *0x1fea2(%rip)        # 23128 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@GLIBCXX_3.4.22>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <vkGetInstanceProcAddr@plt>:
    3290:	ff 25 9a fe 01 00    	jmp    *0x1fe9a(%rip)        # 23130 <vkGetInstanceProcAddr@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <glfwPollEvents@plt>:
    32a0:	ff 25 92 fe 01 00    	jmp    *0x1fe92(%rip)        # 23138 <glfwPollEvents@Base>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    32b0:	ff 25 8a fe 01 00    	jmp    *0x1fe8a(%rip)        # 23140 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_Znwm@plt>:
    32c0:	ff 25 82 fe 01 00    	jmp    *0x1fe82(%rip)        # 23148 <_Znwm@GLIBCXX_3.4>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <_ZdlPvm@plt>:
    32d0:	ff 25 7a fe 01 00    	jmp    *0x1fe7a(%rip)        # 23150 <_ZdlPvm@CXXABI_1.3.9>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <vkDestroyInstance@plt>:
    32e0:	ff 25 72 fe 01 00    	jmp    *0x1fe72(%rip)        # 23158 <vkDestroyInstance@Base>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <glfwTerminate@plt>:
    32f0:	ff 25 6a fe 01 00    	jmp    *0x1fe6a(%rip)        # 23160 <glfwTerminate@Base>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    3300:	ff 25 62 fe 01 00    	jmp    *0x1fe62(%rip)        # 23168 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <_ZNSolsEPFRSoS_E@plt>:
    3310:	ff 25 5a fe 01 00    	jmp    *0x1fe5a(%rip)        # 23170 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    3320:	ff 25 52 fe 01 00    	jmp    *0x1fe52(%rip)        # 23178 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3330:	ff 25 4a fe 01 00    	jmp    *0x1fe4a(%rip)        # 23180 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <_ZNSaIcED1Ev@plt>:
    3340:	ff 25 42 fe 01 00    	jmp    *0x1fe42(%rip)        # 23188 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    3350:	ff 25 3a fe 01 00    	jmp    *0x1fe3a(%rip)        # 23190 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3360:	ff 25 32 fe 01 00    	jmp    *0x1fe32(%rip)        # 23198 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <glfwInit@plt>:
    3370:	ff 25 2a fe 01 00    	jmp    *0x1fe2a(%rip)        # 231a0 <glfwInit@Base>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3380:	ff 25 22 fe 01 00    	jmp    *0x1fe22(%rip)        # 231a8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <vkCreateInstance@plt>:
    3390:	ff 25 1a fe 01 00    	jmp    *0x1fe1a(%rip)        # 231b0 <vkCreateInstance@Base>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    33a0:	ff 25 12 fe 01 00    	jmp    *0x1fe12(%rip)        # 231b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <vkEnumerateInstanceVersion@plt>:
    33b0:	ff 25 0a fe 01 00    	jmp    *0x1fe0a(%rip)        # 231c0 <vkEnumerateInstanceVersion@Base>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    33c0:	ff 25 02 fe 01 00    	jmp    *0x1fe02(%rip)        # 231c8 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <vkGetDeviceQueue@plt>:
    33d0:	ff 25 fa fd 01 00    	jmp    *0x1fdfa(%rip)        # 231d0 <vkGetDeviceQueue@Base>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <_ZNSt6thread20hardware_concurrencyEv@plt>:
    33e0:	ff 25 f2 fd 01 00    	jmp    *0x1fdf2(%rip)        # 231d8 <_ZNSt6thread20hardware_concurrencyEv@GLIBCXX_3.4.17>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <vkEnumerateDeviceExtensionProperties@plt>:
    33f0:	ff 25 ea fd 01 00    	jmp    *0x1fdea(%rip)        # 231e0 <vkEnumerateDeviceExtensionProperties@Base>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <_ZNSt18condition_variableC1Ev@plt>:
    3400:	ff 25 e2 fd 01 00    	jmp    *0x1fde2(%rip)        # 231e8 <_ZNSt18condition_variableC1Ev@GLIBCXX_3.4.11>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <__cxa_rethrow@plt>:
    3410:	ff 25 da fd 01 00    	jmp    *0x1fdda(%rip)        # 231f0 <__cxa_rethrow@CXXABI_1.3>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <pthread_mutex_lock@plt>:
    3420:	ff 25 d2 fd 01 00    	jmp    *0x1fdd2(%rip)        # 231f8 <pthread_mutex_lock@GLIBC_2.2.5>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <vkCreateDevice@plt>:
    3430:	ff 25 ca fd 01 00    	jmp    *0x1fdca(%rip)        # 23200 <vkCreateDevice@Base>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <_ZNSt8ios_base4InitC1Ev@plt>:
    3440:	ff 25 c2 fd 01 00    	jmp    *0x1fdc2(%rip)        # 23208 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <glfwCreateWindowSurface@plt>:
    3450:	ff 25 ba fd 01 00    	jmp    *0x1fdba(%rip)        # 23210 <glfwCreateWindowSurface@Base>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <glfwCreateWindow@plt>:
    3460:	ff 25 b2 fd 01 00    	jmp    *0x1fdb2(%rip)        # 23218 <glfwCreateWindow@Base>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <memmove@plt>:
    3470:	ff 25 aa fd 01 00    	jmp    *0x1fdaa(%rip)        # 23220 <memmove@GLIBC_2.2.5>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <__cxa_end_catch@plt>:
    3480:	ff 25 a2 fd 01 00    	jmp    *0x1fda2(%rip)        # 23228 <__cxa_end_catch@CXXABI_1.3>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <_ZNSt18condition_variable10notify_allEv@plt>:
    3490:	ff 25 9a fd 01 00    	jmp    *0x1fd9a(%rip)        # 23230 <_ZNSt18condition_variable10notify_allEv@GLIBCXX_3.4.11>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <_ZNSt6thread4joinEv@plt>:
    34a0:	ff 25 92 fd 01 00    	jmp    *0x1fd92(%rip)        # 23238 <_ZNSt6thread4joinEv@GLIBCXX_3.4.11>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <__cxa_throw@plt>:
    34b0:	ff 25 8a fd 01 00    	jmp    *0x1fd8a(%rip)        # 23240 <__cxa_throw@CXXABI_1.3>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <vkDestroySurfaceKHR@plt>:
    34c0:	ff 25 82 fd 01 00    	jmp    *0x1fd82(%rip)        # 23248 <vkDestroySurfaceKHR@Base>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <_Unwind_Resume@plt>:
    34d0:	ff 25 7a fd 01 00    	jmp    *0x1fd7a(%rip)        # 23250 <_Unwind_Resume@GCC_3.0>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <_ZNSaIcEC1Ev@plt>:
    34e0:	ff 25 72 fd 01 00    	jmp    *0x1fd72(%rip)        # 23258 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <_ZNSolsEb@plt>:
    34f0:	ff 25 6a fd 01 00    	jmp    *0x1fd6a(%rip)        # 23260 <_ZNSolsEb@GLIBCXX_3.4>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    3500:	ff 25 62 fd 01 00    	jmp    *0x1fd62(%rip)        # 23268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <_ZNSt18condition_variableD1Ev@plt>:
    3510:	ff 25 5a fd 01 00    	jmp    *0x1fd5a(%rip)        # 23270 <_ZNSt18condition_variableD1Ev@GLIBCXX_3.4.11>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <glfwWindowShouldClose@plt>:
    3520:	ff 25 52 fd 01 00    	jmp    *0x1fd52(%rip)        # 23278 <glfwWindowShouldClose@Base>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3530:	ff 25 4a fd 01 00    	jmp    *0x1fd4a(%rip)        # 23280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3536:	68 50 00 00 00       	push   $0x50
    353b:	e9 e0 fa ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003540 <__cxa_finalize@plt>:
    3540:	ff 25 5a fa 01 00    	jmp    *0x1fa5a(%rip)        # 22fa0 <__cxa_finalize@GLIBC_2.2.5>
    3546:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003550 <_start>:
    3550:	31 ed                	xor    %ebp,%ebp
    3552:	49 89 d1             	mov    %rdx,%r9
    3555:	5e                   	pop    %rsi
    3556:	48 89 e2             	mov    %rsp,%rdx
    3559:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    355d:	50                   	push   %rax
    355e:	54                   	push   %rsp
    355f:	45 31 c0             	xor    %r8d,%r8d
    3562:	31 c9                	xor    %ecx,%ecx
    3564:	48 8d 3d d2 01 00 00 	lea    0x1d2(%rip),%rdi        # 373d <main>
    356b:	ff 15 3f fa 01 00    	call   *0x1fa3f(%rip)        # 22fb0 <__libc_start_main@GLIBC_2.34>
    3571:	f4                   	hlt
    3572:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3579:	00 00 00 
    357c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003580 <deregister_tm_clones>:
    3580:	48 8d 3d 21 fd 01 00 	lea    0x1fd21(%rip),%rdi        # 232a8 <__TMC_END__>
    3587:	48 8d 05 1a fd 01 00 	lea    0x1fd1a(%rip),%rax        # 232a8 <__TMC_END__>
    358e:	48 39 f8             	cmp    %rdi,%rax
    3591:	74 15                	je     35a8 <deregister_tm_clones+0x28>
    3593:	48 8b 05 26 fa 01 00 	mov    0x1fa26(%rip),%rax        # 22fc0 <_ITM_deregisterTMCloneTable@Base>
    359a:	48 85 c0             	test   %rax,%rax
    359d:	74 09                	je     35a8 <deregister_tm_clones+0x28>
    359f:	ff e0                	jmp    *%rax
    35a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    35a8:	c3                   	ret
    35a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035b0 <register_tm_clones>:
    35b0:	48 8d 3d f1 fc 01 00 	lea    0x1fcf1(%rip),%rdi        # 232a8 <__TMC_END__>
    35b7:	48 8d 35 ea fc 01 00 	lea    0x1fcea(%rip),%rsi        # 232a8 <__TMC_END__>
    35be:	48 29 fe             	sub    %rdi,%rsi
    35c1:	48 89 f0             	mov    %rsi,%rax
    35c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    35c8:	48 c1 f8 03          	sar    $0x3,%rax
    35cc:	48 01 c6             	add    %rax,%rsi
    35cf:	48 d1 fe             	sar    %rsi
    35d2:	74 14                	je     35e8 <register_tm_clones+0x38>
    35d4:	48 8b 05 f5 f9 01 00 	mov    0x1f9f5(%rip),%rax        # 22fd0 <_ITM_registerTMCloneTable@Base>
    35db:	48 85 c0             	test   %rax,%rax
    35de:	74 08                	je     35e8 <register_tm_clones+0x38>
    35e0:	ff e0                	jmp    *%rax
    35e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    35e8:	c3                   	ret
    35e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035f0 <__do_global_dtors_aux>:
    35f0:	f3 0f 1e fa          	endbr64
    35f4:	80 3d f5 fe 01 00 00 	cmpb   $0x0,0x1fef5(%rip)        # 234f0 <completed.0>
    35fb:	75 2b                	jne    3628 <__do_global_dtors_aux+0x38>
    35fd:	55                   	push   %rbp
    35fe:	48 83 3d 9a f9 01 00 	cmpq   $0x0,0x1f99a(%rip)        # 22fa0 <__cxa_finalize@GLIBC_2.2.5>
    3605:	00 
    3606:	48 89 e5             	mov    %rsp,%rbp
    3609:	74 0c                	je     3617 <__do_global_dtors_aux+0x27>
    360b:	48 8b 3d 7e fc 01 00 	mov    0x1fc7e(%rip),%rdi        # 23290 <__dso_handle>
    3612:	e8 29 ff ff ff       	call   3540 <__cxa_finalize@plt>
    3617:	e8 64 ff ff ff       	call   3580 <deregister_tm_clones>
    361c:	c6 05 cd fe 01 00 01 	movb   $0x1,0x1fecd(%rip)        # 234f0 <completed.0>
    3623:	5d                   	pop    %rbp
    3624:	c3                   	ret
    3625:	0f 1f 00             	nopl   (%rax)
    3628:	c3                   	ret
    3629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003630 <frame_dummy>:
    3630:	f3 0f 1e fa          	endbr64
    3634:	e9 77 ff ff ff       	jmp    35b0 <register_tm_clones>

0000000000003639 <_ZL18__gthread_active_pv>:

#else /* not hppa-hpux */

static inline int
__gthread_active_p (void)
{
    3639:	55                   	push   %rbp
    363a:	48 89 e5             	mov    %rsp,%rbp
  return 1;
    363d:	b8 01 00 00 00       	mov    $0x1,%eax
}
    3642:	5d                   	pop    %rbp
    3643:	c3                   	ret

0000000000003644 <_Z14protected_mainv>:
#include <neko.hpp>

#include <iostream>

int protected_main() {
    3644:	55                   	push   %rbp
    3645:	48 89 e5             	mov    %rsp,%rbp
    3648:	53                   	push   %rbx
    3649:	48 83 ec 38          	sub    $0x38,%rsp
  auto start = std::chrono::steady_clock::now();
    364d:	e8 6e fd ff ff       	call   33c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    3652:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  auto engine = std::make_unique<neko::Engine>();
    3656:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    365a:	48 89 c7             	mov    %rax,%rdi
    365d:	e8 20 2a 00 00       	call   6082 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
  std::cout << "Load time: "
    3662:	48 8d 05 17 00 01 00 	lea    0x10017(%rip),%rax        # 13680 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    3669:	48 89 c6             	mov    %rax,%rsi
    366c:	48 8d 05 4d fc 01 00 	lea    0x1fc4d(%rip),%rax        # 232c0 <_ZSt4cout@GLIBCXX_3.4>
    3673:	48 89 c7             	mov    %rax,%rdi
    3676:	e8 35 fc ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    367b:	48 89 c3             	mov    %rax,%rbx
            << static_cast<float>(
                   std::chrono::duration_cast<std::chrono::microseconds>(
                       std::chrono::steady_clock::now() - start)
    367e:	e8 3d fd ff ff       	call   33c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    3683:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3687:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    368b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    368f:	48 89 d6             	mov    %rdx,%rsi
    3692:	48 89 c7             	mov    %rax,%rdi
    3695:	e8 ba 2a 00 00       	call   6154 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    369a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
                   std::chrono::duration_cast<std::chrono::microseconds>(
    369e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    36a2:	48 89 c7             	mov    %rax,%rdi
    36a5:	e8 ef 2a 00 00       	call   6199 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    36aa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
                       .count()) /
    36ae:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    36b2:	48 89 c7             	mov    %rax,%rdi
    36b5:	e8 fa 2a 00 00       	call   61b4 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
            << static_cast<float>(
    36ba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    36be:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
                   1000.0f
    36c3:	f3 0f 10 0d b1 00 01 	movss  0x100b1(%rip),%xmm1        # 1377c <_ZN6__pstl9execution2v1L5unseqE+0x111>
    36ca:	00 
    36cb:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    36cf:	66 0f 7e c0          	movd   %xmm0,%eax
    36d3:	66 0f 6e c0          	movd   %eax,%xmm0
    36d7:	48 89 df             	mov    %rbx,%rdi
    36da:	e8 e1 fa ff ff       	call   31c0 <_ZNSolsEf@plt>
    36df:	48 89 c2             	mov    %rax,%rdx
            << " ms\n";
    36e2:	48 8d 05 a3 ff 00 00 	lea    0xffa3(%rip),%rax        # 1368c <_ZN6__pstl9execution2v1L5unseqE+0x21>
    36e9:	48 89 c6             	mov    %rax,%rsi
    36ec:	48 89 d7             	mov    %rdx,%rdi
    36ef:	e8 bc fb ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  engine->start();
    36f4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    36f8:	48 89 c7             	mov    %rax,%rdi
    36fb:	e8 c6 2a 00 00       	call   61c6 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>
    3700:	48 89 c7             	mov    %rax,%rdi
    3703:	e8 0a 12 00 00       	call   4912 <_ZN4neko6Engine5startEv>
  return EXIT_SUCCESS;
    3708:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    370d:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3711:	48 89 c7             	mov    %rax,%rdi
    3714:	e8 d7 29 00 00       	call   60f0 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
  return EXIT_SUCCESS;
    3719:	89 d8                	mov    %ebx,%eax
    371b:	eb 1a                	jmp    3737 <_Z14protected_mainv+0xf3>
}
    371d:	48 89 c3             	mov    %rax,%rbx
    3720:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3724:	48 89 c7             	mov    %rax,%rdi
    3727:	e8 c4 29 00 00       	call   60f0 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
    372c:	48 89 d8             	mov    %rbx,%rax
    372f:	48 89 c7             	mov    %rax,%rdi
    3732:	e8 99 fd ff ff       	call   34d0 <_Unwind_Resume@plt>
    3737:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    373b:	c9                   	leave
    373c:	c3                   	ret

000000000000373d <main>:

int main() {
    373d:	55                   	push   %rbp
    373e:	48 89 e5             	mov    %rsp,%rbp
    3741:	53                   	push   %rbx
    3742:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    3746:	e8 f9 fe ff ff       	call   3644 <_Z14protected_mainv>
    374b:	e9 c1 00 00 00       	jmp    3811 <main+0xd4>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    3750:	b8 01 00 00 00       	mov    $0x1,%eax
    3755:	e9 b7 00 00 00       	jmp    3811 <main+0xd4>
  } catch (std::exception &e) {
    375a:	48 83 fa 01          	cmp    $0x1,%rdx
    375e:	75 4e                	jne    37ae <main+0x71>
    3760:	48 89 c7             	mov    %rax,%rdi
    3763:	e8 68 f9 ff ff       	call   30d0 <__cxa_begin_catch@plt>
    3768:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    376c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3770:	48 8b 00             	mov    (%rax),%rax
    3773:	48 83 c0 10          	add    $0x10,%rax
    3777:	48 8b 10             	mov    (%rax),%rdx
    377a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    377e:	48 89 c7             	mov    %rax,%rdi
    3781:	ff d2                	call   *%rdx
    3783:	48 89 c6             	mov    %rax,%rsi
    3786:	48 8d 05 53 fc 01 00 	lea    0x1fc53(%rip),%rax        # 233e0 <_ZSt4cerr@GLIBCXX_3.4>
    378d:	48 89 c7             	mov    %rax,%rdi
    3790:	e8 1b fb ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3795:	48 8b 15 0c f8 01 00 	mov    0x1f80c(%rip),%rdx        # 22fa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    379c:	48 89 d6             	mov    %rdx,%rsi
    379f:	48 89 c7             	mov    %rax,%rdi
    37a2:	e8 69 fb ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    37a7:	e8 d4 fc ff ff       	call   3480 <__cxa_end_catch@plt>
    37ac:	eb a2                	jmp    3750 <main+0x13>
    37ae:	48 89 c7             	mov    %rax,%rdi
    37b1:	e8 1a f9 ff ff       	call   30d0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    37b6:	48 8d 05 d4 fe 00 00 	lea    0xfed4(%rip),%rax        # 13691 <_ZN6__pstl9execution2v1L5unseqE+0x26>
    37bd:	48 89 c6             	mov    %rax,%rsi
    37c0:	48 8d 05 19 fc 01 00 	lea    0x1fc19(%rip),%rax        # 233e0 <_ZSt4cerr@GLIBCXX_3.4>
    37c7:	48 89 c7             	mov    %rax,%rdi
    37ca:	e8 e1 fa ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    37cf:	48 8b 15 d2 f7 01 00 	mov    0x1f7d2(%rip),%rdx        # 22fa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    37d6:	48 89 d6             	mov    %rdx,%rsi
    37d9:	48 89 c7             	mov    %rax,%rdi
    37dc:	e8 2f fb ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  }
    37e1:	e8 9a fc ff ff       	call   3480 <__cxa_end_catch@plt>
    37e6:	e9 65 ff ff ff       	jmp    3750 <main+0x13>
  } catch (...) {
    37eb:	48 89 c3             	mov    %rax,%rbx
    37ee:	e8 8d fc ff ff       	call   3480 <__cxa_end_catch@plt>
    37f3:	48 89 d8             	mov    %rbx,%rax
    37f6:	48 89 c7             	mov    %rax,%rdi
    37f9:	e8 d2 fc ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    37fe:	48 89 c3             	mov    %rax,%rbx
    3801:	e8 7a fc ff ff       	call   3480 <__cxa_end_catch@plt>
    3806:	48 89 d8             	mov    %rbx,%rax
    3809:	48 89 c7             	mov    %rax,%rdi
    380c:	e8 bf fc ff ff       	call   34d0 <_Unwind_Resume@plt>
    3811:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3815:	c9                   	leave
    3816:	c3                   	ret

0000000000003817 <_Z41__static_initialization_and_destruction_0ii>:
    3817:	55                   	push   %rbp
    3818:	48 89 e5             	mov    %rsp,%rbp
    381b:	48 83 ec 10          	sub    $0x10,%rsp
    381f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3822:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3825:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3829:	75 3b                	jne    3866 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    382b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    3832:	75 32                	jne    3866 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    3834:	48 8d 05 b6 fc 01 00 	lea    0x1fcb6(%rip),%rax        # 234f1 <_ZStL8__ioinit>
    383b:	48 89 c7             	mov    %rax,%rdi
    383e:	e8 fd fb ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
    3843:	48 8d 05 46 fa 01 00 	lea    0x1fa46(%rip),%rax        # 23290 <__dso_handle>
    384a:	48 89 c2             	mov    %rax,%rdx
    384d:	48 8d 05 9d fc 01 00 	lea    0x1fc9d(%rip),%rax        # 234f1 <_ZStL8__ioinit>
    3854:	48 89 c6             	mov    %rax,%rsi
    3857:	48 8b 05 7a f7 01 00 	mov    0x1f77a(%rip),%rax        # 22fd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    385e:	48 89 c7             	mov    %rax,%rdi
    3861:	e8 fa f9 ff ff       	call   3260 <__cxa_atexit@plt>
    3866:	90                   	nop
    3867:	c9                   	leave
    3868:	c3                   	ret

0000000000003869 <_GLOBAL__sub_I__Z14protected_mainv>:
    3869:	55                   	push   %rbp
    386a:	48 89 e5             	mov    %rsp,%rbp
    386d:	be ff ff 00 00       	mov    $0xffff,%esi
    3872:	bf 01 00 00 00       	mov    $0x1,%edi
    3877:	e8 9b ff ff ff       	call   3817 <_Z41__static_initialization_and_destruction_0ii>
    387c:	5d                   	pop    %rbp
    387d:	c3                   	ret

000000000000387e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    387e:	55                   	push   %rbp
    387f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    3882:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    3887:	5d                   	pop    %rbp
    3888:	c3                   	ret

0000000000003889 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    3889:	55                   	push   %rbp
    388a:	48 89 e5             	mov    %rsp,%rbp
    388d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3891:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3895:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3899:	5d                   	pop    %rbp
    389a:	c3                   	ret

000000000000389b <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    389b:	55                   	push   %rbp
    389c:	48 89 e5             	mov    %rsp,%rbp
    389f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    38a7:	90                   	nop
    38a8:	5d                   	pop    %rbp
    38a9:	c3                   	ret

00000000000038aa <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    38aa:	55                   	push   %rbp
    38ab:	48 89 e5             	mov    %rsp,%rbp
    38ae:	48 83 ec 10          	sub    $0x10,%rsp
    38b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    38b6:	e8 c3 ff ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
    38bb:	84 c0                	test   %al,%al
    38bd:	74 0e                	je     38cd <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    38bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38c3:	48 89 c7             	mov    %rax,%rdi
    38c6:	e8 25 13 00 00       	call   4bf0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    38cb:	eb 0d                	jmp    38da <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    38cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38d1:	48 89 c7             	mov    %rax,%rdi
    38d4:	e8 17 f8 ff ff       	call   30f0 <strlen@plt>
    38d9:	90                   	nop
      }
    38da:	c9                   	leave
    38db:	c3                   	ret

00000000000038dc <_ZN4neko7ContextD1Ev>:

  Context &operator=(const Context &) = delete;

  Context &operator=(Context &&) = default;

  ~Context() { destroyContext(); }
    38dc:	55                   	push   %rbp
    38dd:	48 89 e5             	mov    %rsp,%rbp
    38e0:	48 83 ec 10          	sub    $0x10,%rsp
    38e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38e8:	e8 67 dc 00 00       	call   11554 <_ZN4neko7Context14destroyContextEv>
    38ed:	90                   	nop
    38ee:	c9                   	leave
    38ef:	c3                   	ret

00000000000038f0 <_ZN4neko8InstanceD1Ev>:
  explicit Instance(const Settings &settings);
  Instance(const Instance &) = delete;
  Instance(Instance &&rhs) noexcept;
  Instance &operator=(const Instance &) = delete;
  Instance &operator=(Instance &&rhs);
  ~Instance() { release(); }
    38f0:	55                   	push   %rbp
    38f1:	48 89 e5             	mov    %rsp,%rbp
    38f4:	48 83 ec 10          	sub    $0x10,%rsp
    38f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3900:	48 89 c7             	mov    %rax,%rdi
    3903:	e8 d8 e4 00 00       	call   11de0 <_ZN4neko8Instance7releaseEv>
    3908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    390c:	48 89 c7             	mov    %rax,%rdi
    390f:	e8 c8 ff ff ff       	call   38dc <_ZN4neko7ContextD1Ev>
    3914:	90                   	nop
    3915:	c9                   	leave
    3916:	c3                   	ret
    3917:	90                   	nop

0000000000003918 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE>:

class Renderer {
public:
  Renderer() = delete;

  Renderer(const Settings &settings, ThreadPool &threadPool)
    3918:	55                   	push   %rbp
    3919:	48 89 e5             	mov    %rsp,%rbp
    391c:	53                   	push   %rbx
    391d:	48 83 ec 28          	sub    $0x28,%rsp
    3921:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3925:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3929:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : mpSettings{&settings},
    392d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3931:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3935:	48 89 10             	mov    %rdx,(%rax)
        mpThreadPool{&threadPool}, mInstance{*mpSettings}, mWindow{*mpSettings},
    3938:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    393c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3940:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3944:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3948:	48 8d 50 10          	lea    0x10(%rax),%rdx
    394c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3950:	48 8b 00             	mov    (%rax),%rax
    3953:	48 89 c6             	mov    %rax,%rsi
    3956:	48 89 d7             	mov    %rdx,%rdi
    3959:	e8 ae df 00 00       	call   1190c <_ZN4neko8InstanceC1ERKNS_8SettingsE>
    395e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3962:	48 8d 50 30          	lea    0x30(%rax),%rdx
    3966:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    396a:	48 8b 00             	mov    (%rax),%rax
    396d:	48 89 c6             	mov    %rax,%rsi
    3970:	48 89 d7             	mov    %rdx,%rdi
    3973:	e8 dc f2 00 00       	call   12c54 <_ZN4neko6WindowC1ERKNS_8SettingsE>
        mSurface{mInstance, mWindow}, mDevice{mInstance, mSurface} {}
    3978:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    397c:	48 83 c0 40          	add    $0x40,%rax
    3980:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3984:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    3988:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    398c:	48 83 c2 30          	add    $0x30,%rdx
    3990:	48 89 ce             	mov    %rcx,%rsi
    3993:	48 89 c7             	mov    %rax,%rdi
    3996:	e8 8d f3 00 00       	call   12d28 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>
    399b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    399f:	48 83 c0 50          	add    $0x50,%rax
    39a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    39a7:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    39ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    39af:	48 83 c2 40          	add    $0x40,%rdx
    39b3:	48 89 ce             	mov    %rcx,%rsi
    39b6:	48 89 c7             	mov    %rax,%rdi
    39b9:	e8 3a 92 00 00       	call   cbf8 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>
    39be:	eb 48                	jmp    3a08 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xf0>
    39c0:	48 89 c3             	mov    %rax,%rbx
    39c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39c7:	48 83 c0 40          	add    $0x40,%rax
    39cb:	48 89 c7             	mov    %rax,%rdi
    39ce:	e8 15 f4 00 00       	call   12de8 <_ZN4neko7SurfaceD1Ev>
    39d3:	eb 03                	jmp    39d8 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xc0>
    39d5:	48 89 c3             	mov    %rax,%rbx
    39d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39dc:	48 83 c0 30          	add    $0x30,%rax
    39e0:	48 89 c7             	mov    %rax,%rdi
    39e3:	e8 f2 f2 00 00       	call   12cda <_ZN4neko6WindowD1Ev>
    39e8:	eb 03                	jmp    39ed <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xd5>
    39ea:	48 89 c3             	mov    %rax,%rbx
    39ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39f1:	48 83 c0 10          	add    $0x10,%rax
    39f5:	48 89 c7             	mov    %rax,%rdi
    39f8:	e8 f3 fe ff ff       	call   38f0 <_ZN4neko8InstanceD1Ev>
    39fd:	48 89 d8             	mov    %rbx,%rax
    3a00:	48 89 c7             	mov    %rax,%rdi
    3a03:	e8 c8 fa ff ff       	call   34d0 <_Unwind_Resume@plt>
    3a08:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3a0c:	c9                   	leave
    3a0d:	c3                   	ret

0000000000003a0e <_ZN4neko8Renderer5startEv>:

  Renderer &operator=(Renderer &&) = default;

  ~Renderer() = default;

  void start() {
    3a0e:	55                   	push   %rbp
    3a0f:	48 89 e5             	mov    %rsp,%rbp
    3a12:	48 83 ec 10          	sub    $0x10,%rsp
    3a16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    mWindow.open();
    3a1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a1e:	48 83 c0 30          	add    $0x30,%rax
    3a22:	48 89 c7             	mov    %rax,%rdi
    3a25:	e8 ce f2 00 00       	call   12cf8 <_ZN4neko6Window4openEv>
    // Instance instance = std::move(mInstance);
    // mInstance.release();
  }
    3a2a:	90                   	nop
    3a2b:	c9                   	leave
    3a2c:	c3                   	ret
    3a2d:	90                   	nop

0000000000003a2e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3050. Conversion specification problem in chrono::duration
	template<typename _Rep2, typename = _Require<
		 is_convertible<const _Rep2&, rep>,
		 __or_<__is_float<rep>, __not_<__is_float<_Rep2>>>>>
	  constexpr explicit duration(const _Rep2& __rep)
    3a2e:	55                   	push   %rbp
    3a2f:	48 89 e5             	mov    %rsp,%rbp
    3a32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    3a3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a3e:	48 8b 10             	mov    (%rax),%rdx
    3a41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a45:	48 89 10             	mov    %rdx,(%rax)
    3a48:	90                   	nop
    3a49:	5d                   	pop    %rbp
    3a4a:	c3                   	ret
    3a4b:	90                   	nop

0000000000003a4c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	~duration() = default;
	duration& operator=(const duration&) = default;

	// 20.11.5.2 observer
	constexpr rep
	count() const
    3a4c:	55                   	push   %rbp
    3a4d:	48 89 e5             	mov    %rsp,%rbp
    3a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    3a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a58:	48 8b 00             	mov    (%rax),%rax
    3a5b:	5d                   	pop    %rbp
    3a5c:	c3                   	ret

0000000000003a5d <_ZL20__gthread_mutex_lockP15pthread_mutex_t>:
    return 0;
}

static inline int
__gthread_mutex_lock (__gthread_mutex_t *__mutex)
{
    3a5d:	55                   	push   %rbp
    3a5e:	48 89 e5             	mov    %rsp,%rbp
    3a61:	48 83 ec 10          	sub    $0x10,%rsp
    3a65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (__gthread_active_p ())
    3a69:	e8 cb fb ff ff       	call   3639 <_ZL18__gthread_active_pv>
    3a6e:	85 c0                	test   %eax,%eax
    3a70:	0f 95 c0             	setne  %al
    3a73:	84 c0                	test   %al,%al
    3a75:	74 0e                	je     3a85 <_ZL20__gthread_mutex_lockP15pthread_mutex_t+0x28>
    return __gthrw_(pthread_mutex_lock) (__mutex);
    3a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a7b:	48 89 c7             	mov    %rax,%rdi
    3a7e:	e8 9d f9 ff ff       	call   3420 <pthread_mutex_lock@plt>
    3a83:	eb 05                	jmp    3a8a <_ZL20__gthread_mutex_lockP15pthread_mutex_t+0x2d>
  else
    return 0;
    3a85:	b8 00 00 00 00       	mov    $0x0,%eax
}
    3a8a:	c9                   	leave
    3a8b:	c3                   	ret

0000000000003a8c <_ZL22__gthread_mutex_unlockP15pthread_mutex_t>:
}
#endif

static inline int
__gthread_mutex_unlock (__gthread_mutex_t *__mutex)
{
    3a8c:	55                   	push   %rbp
    3a8d:	48 89 e5             	mov    %rsp,%rbp
    3a90:	48 83 ec 10          	sub    $0x10,%rsp
    3a94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (__gthread_active_p ())
    3a98:	e8 9c fb ff ff       	call   3639 <_ZL18__gthread_active_pv>
    3a9d:	85 c0                	test   %eax,%eax
    3a9f:	0f 95 c0             	setne  %al
    3aa2:	84 c0                	test   %al,%al
    3aa4:	74 0e                	je     3ab4 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t+0x28>
    return __gthrw_(pthread_mutex_unlock) (__mutex);
    3aa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aaa:	48 89 c7             	mov    %rax,%rdi
    3aad:	e8 1e f7 ff ff       	call   31d0 <pthread_mutex_unlock@plt>
    3ab2:	eb 05                	jmp    3ab9 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t+0x2d>
  else
    return 0;
    3ab4:	b8 00 00 00 00       	mov    $0x0,%eax
}
    3ab9:	c9                   	leave
    3aba:	c3                   	ret
    3abb:	90                   	nop

0000000000003abc <_ZNSt5mutex4lockEv>:

    mutex(const mutex&) = delete;
    mutex& operator=(const mutex&) = delete;

    void
    lock()
    3abc:	55                   	push   %rbp
    3abd:	48 89 e5             	mov    %rsp,%rbp
    3ac0:	48 83 ec 20          	sub    $0x20,%rsp
    3ac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    {
      int __e = __gthread_mutex_lock(&_M_mutex);
    3ac8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3acc:	48 89 c7             	mov    %rax,%rdi
    3acf:	e8 89 ff ff ff       	call   3a5d <_ZL20__gthread_mutex_lockP15pthread_mutex_t>
    3ad4:	89 45 fc             	mov    %eax,-0x4(%rbp)

      // EINVAL, EAGAIN, EBUSY, EINVAL, EDEADLK(may)
      if (__e)
    3ad7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    3adb:	74 0a                	je     3ae7 <_ZNSt5mutex4lockEv+0x2b>
	__throw_system_error(__e);
    3add:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3ae0:	89 c7                	mov    %eax,%edi
    3ae2:	e8 89 f6 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
    }
    3ae7:	90                   	nop
    3ae8:	c9                   	leave
    3ae9:	c3                   	ret

0000000000003aea <_ZNSt5mutex6unlockEv>:
      // XXX EINVAL, EAGAIN, EBUSY
      return !__gthread_mutex_trylock(&_M_mutex);
    }

    void
    unlock()
    3aea:	55                   	push   %rbp
    3aeb:	48 89 e5             	mov    %rsp,%rbp
    3aee:	48 83 ec 10          	sub    $0x10,%rsp
    3af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      // XXX EINVAL, EAGAIN, EPERM
      __gthread_mutex_unlock(&_M_mutex);
    3af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3afa:	48 89 c7             	mov    %rax,%rdi
    3afd:	e8 8a ff ff ff       	call   3a8c <_ZL22__gthread_mutex_unlockP15pthread_mutex_t>
    }
    3b02:	90                   	nop
    3b03:	c9                   	leave
    3b04:	c3                   	ret
    3b05:	90                   	nop

0000000000003b06 <_ZNSt9_Any_data9_M_accessEv>:
    void (_Undefined_class::*_M_member_pointer)();
  };

  union [[gnu::may_alias]] _Any_data
  {
    void*       _M_access()       noexcept { return &_M_pod_data[0]; }
    3b06:	55                   	push   %rbp
    3b07:	48 89 e5             	mov    %rsp,%rbp
    3b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b12:	5d                   	pop    %rbp
    3b13:	c3                   	ret

0000000000003b14 <_ZNKSt9_Any_data9_M_accessEv>:
    const void* _M_access() const noexcept { return &_M_pod_data[0]; }
    3b14:	55                   	push   %rbp
    3b15:	48 89 e5             	mov    %rsp,%rbp
    3b18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b20:	5d                   	pop    %rbp
    3b21:	c3                   	ret

0000000000003b22 <_ZNSt14_Function_baseD1Ev>:
	  { return true; }
      };

    _Function_base() = default;

    ~_Function_base()
    3b22:	55                   	push   %rbp
    3b23:	48 89 e5             	mov    %rsp,%rbp
    3b26:	48 83 ec 10          	sub    $0x10,%rsp
    3b2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if (_M_manager)
    3b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b32:	48 8b 40 10          	mov    0x10(%rax),%rax
    3b36:	48 85 c0             	test   %rax,%rax
    3b39:	74 1e                	je     3b59 <_ZNSt14_Function_baseD1Ev+0x37>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
    3b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b3f:	4c 8b 40 10          	mov    0x10(%rax),%r8
    3b43:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b4b:	ba 03 00 00 00       	mov    $0x3,%edx
    3b50:	48 89 ce             	mov    %rcx,%rsi
    3b53:	48 89 c7             	mov    %rax,%rdi
    3b56:	41 ff d0             	call   *%r8
    }
    3b59:	90                   	nop
    3b5a:	c9                   	leave
    3b5b:	c3                   	ret

0000000000003b5c <_ZNKSt14_Function_base8_M_emptyEv>:

    bool _M_empty() const { return !_M_manager; }
    3b5c:	55                   	push   %rbp
    3b5d:	48 89 e5             	mov    %rsp,%rbp
    3b60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b68:	48 8b 40 10          	mov    0x10(%rax),%rax
    3b6c:	48 85 c0             	test   %rax,%rax
    3b6f:	0f 94 c0             	sete   %al
    3b72:	5d                   	pop    %rbp
    3b73:	c3                   	ret

0000000000003b74 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    3b74:	55                   	push   %rbp
    3b75:	48 89 e5             	mov    %rsp,%rbp
    3b78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    3b80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b84:	48 8b 10             	mov    (%rax),%rdx
    3b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b8b:	48 8b 00             	mov    (%rax),%rax
    3b8e:	48 39 c2             	cmp    %rax,%rdx
    3b91:	73 06                	jae    3b99 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    3b93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b97:	eb 04                	jmp    3b9d <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    3b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3b9d:	5d                   	pop    %rbp
    3b9e:	c3                   	ret
    3b9f:	90                   	nop

0000000000003ba0 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    3ba0:	55                   	push   %rbp
    3ba1:	48 89 e5             	mov    %rsp,%rbp
    3ba4:	48 83 ec 10          	sub    $0x10,%rsp
    3ba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    3bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bb0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    3bb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bba:	48 89 c7             	mov    %rax,%rdi
    3bbd:	e8 04 00 00 00       	call   3bc6 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    3bc2:	90                   	nop
    3bc3:	c9                   	leave
    3bc4:	c3                   	ret
    3bc5:	90                   	nop

0000000000003bc6 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    3bc6:	55                   	push   %rbp
    3bc7:	48 89 e5             	mov    %rsp,%rbp
    3bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    3bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bd2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3bd9:	00 
      _M_header._M_left = &_M_header;
    3bda:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3be2:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    3be6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bee:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    3bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bf6:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    3bfd:	00 
    }
    3bfe:	90                   	nop
    3bff:	5d                   	pop    %rbp
    3c00:	c3                   	ret

0000000000003c01 <_ZSt16__deque_buf_sizem>:
#define _GLIBCXX_DEQUE_BUF_SIZE 512
#endif

  _GLIBCXX_CONSTEXPR inline size_t
  __deque_buf_size(size_t __size)
  { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
    3c01:	55                   	push   %rbp
    3c02:	48 89 e5             	mov    %rsp,%rbp
    3c05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
    3c09:	48 81 7d f8 ff 01 00 	cmpq   $0x1ff,-0x8(%rbp)
    3c10:	00 
    3c11:	77 10                	ja     3c23 <_ZSt16__deque_buf_sizem+0x22>
    3c13:	b8 00 02 00 00       	mov    $0x200,%eax
    3c18:	ba 00 00 00 00       	mov    $0x0,%edx
    3c1d:	48 f7 75 f8          	divq   -0x8(%rbp)
    3c21:	eb 05                	jmp    3c28 <_ZSt16__deque_buf_sizem+0x27>
    3c23:	b8 01 00 00 00       	mov    $0x1,%eax
    3c28:	5d                   	pop    %rbp
    3c29:	c3                   	ret

0000000000003c2a <_ZNSt6thread2idC1Ev>:
    class id
    {
      native_handle_type	_M_thread;

    public:
      id() noexcept : _M_thread() { }
    3c2a:	55                   	push   %rbp
    3c2b:	48 89 e5             	mov    %rsp,%rbp
    3c2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c36:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3c3d:	90                   	nop
    3c3e:	5d                   	pop    %rbp
    3c3f:	c3                   	ret

0000000000003c40 <_ZNSt6thread2idC1Em>:

      explicit
      id(native_handle_type __id) : _M_thread(__id) { }
    3c40:	55                   	push   %rbp
    3c41:	48 89 e5             	mov    %rsp,%rbp
    3c44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c54:	48 89 10             	mov    %rdx,(%rax)
    3c57:	90                   	nop
    3c58:	5d                   	pop    %rbp
    3c59:	c3                   	ret

0000000000003c5a <_ZNSt6threadD1Ev>:
	      std::forward<_Callable>(__f), std::forward<_Args>(__args)...)),
	    __depend);
      }
#endif // _GLIBCXX_HAS_GTHREADS

    ~thread()
    3c5a:	55                   	push   %rbp
    3c5b:	48 89 e5             	mov    %rsp,%rbp
    3c5e:	48 83 ec 10          	sub    $0x10,%rsp
    3c62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if (joinable())
    3c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c6a:	48 89 c7             	mov    %rax,%rdi
    3c6d:	e8 a2 00 00 00       	call   3d14 <_ZNKSt6thread8joinableEv>
    3c72:	84 c0                	test   %al,%al
    3c74:	74 05                	je     3c7b <_ZNSt6threadD1Ev+0x21>
    terminate();
    3c76:	e8 e5 f3 ff ff       	call   3060 <_ZSt9terminatev@plt>
	std::__terminate();
    }
    3c7b:	90                   	nop
    3c7c:	c9                   	leave
    3c7d:	c3                   	ret

0000000000003c7e <_ZNSt6threadC1EOS_>:

    thread(const thread&) = delete;

    thread(thread&& __t) noexcept
    3c7e:	55                   	push   %rbp
    3c7f:	48 89 e5             	mov    %rsp,%rbp
    3c82:	48 83 ec 10          	sub    $0x10,%rsp
    3c86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { swap(__t); }
    3c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c92:	48 89 c7             	mov    %rax,%rdi
    3c95:	e8 90 ff ff ff       	call   3c2a <_ZNSt6thread2idC1Ev>
    3c9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ca2:	48 89 d6             	mov    %rdx,%rsi
    3ca5:	48 89 c7             	mov    %rax,%rdi
    3ca8:	e8 41 00 00 00       	call   3cee <_ZNSt6thread4swapERS_>
    3cad:	90                   	nop
    3cae:	c9                   	leave
    3caf:	c3                   	ret

0000000000003cb0 <_ZNSt6threadaSEOS_>:

    thread& operator=(const thread&) = delete;

    thread& operator=(thread&& __t) noexcept
    3cb0:	55                   	push   %rbp
    3cb1:	48 89 e5             	mov    %rsp,%rbp
    3cb4:	48 83 ec 10          	sub    $0x10,%rsp
    3cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      if (joinable())
    3cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cc4:	48 89 c7             	mov    %rax,%rdi
    3cc7:	e8 48 00 00 00       	call   3d14 <_ZNKSt6thread8joinableEv>
    3ccc:	84 c0                	test   %al,%al
    3cce:	74 05                	je     3cd5 <_ZNSt6threadaSEOS_+0x25>
    3cd0:	e8 8b f3 ff ff       	call   3060 <_ZSt9terminatev@plt>
	std::__terminate();
      swap(__t);
    3cd5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3cd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cdd:	48 89 d6             	mov    %rdx,%rsi
    3ce0:	48 89 c7             	mov    %rax,%rdi
    3ce3:	e8 06 00 00 00       	call   3cee <_ZNSt6thread4swapERS_>
      return *this;
    3ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3cec:	c9                   	leave
    3ced:	c3                   	ret

0000000000003cee <_ZNSt6thread4swapERS_>:

    void
    swap(thread& __t) noexcept
    3cee:	55                   	push   %rbp
    3cef:	48 89 e5             	mov    %rsp,%rbp
    3cf2:	48 83 ec 10          	sub    $0x10,%rsp
    3cf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { std::swap(_M_id, __t._M_id); }
    3cfe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d06:	48 89 d6             	mov    %rdx,%rsi
    3d09:	48 89 c7             	mov    %rax,%rdi
    3d0c:	e8 0c 10 00 00       	call   4d1d <_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_>
    3d11:	90                   	nop
    3d12:	c9                   	leave
    3d13:	c3                   	ret

0000000000003d14 <_ZNKSt6thread8joinableEv>:

    bool
    joinable() const noexcept
    3d14:	55                   	push   %rbp
    3d15:	48 89 e5             	mov    %rsp,%rbp
    3d18:	48 83 ec 20          	sub    $0x20,%rsp
    3d1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return !(_M_id == id()); }
    3d20:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3d24:	48 89 c7             	mov    %rax,%rdi
    3d27:	e8 fe fe ff ff       	call   3c2a <_ZNSt6thread2idC1Ev>
    3d2c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d34:	48 8b 00             	mov    (%rax),%rax
    3d37:	48 89 d6             	mov    %rdx,%rsi
    3d3a:	48 89 c7             	mov    %rax,%rdi
    3d3d:	e8 05 00 00 00       	call   3d47 <_ZSteqNSt6thread2idES0_>
    3d42:	83 f0 01             	xor    $0x1,%eax
    3d45:	c9                   	leave
    3d46:	c3                   	ret

0000000000003d47 <_ZSteqNSt6thread2idES0_>:
  swap(thread& __x, thread& __y) noexcept
  { __x.swap(__y); }

  inline bool
  operator==(thread::id __x, thread::id __y) noexcept
  {
    3d47:	55                   	push   %rbp
    3d48:	48 89 e5             	mov    %rsp,%rbp
    3d4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d4f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    // pthread_equal is undefined if either thread ID is not valid, so we
    // can't safely use __gthread_equal on default-constructed values (nor
    // the non-zero value returned by this_thread::get_id() for
    // single-threaded programs using GNU libc). Assume EqualityComparable.
    return __x._M_thread == __y._M_thread;
    3d53:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d5b:	48 39 c2             	cmp    %rax,%rdx
    3d5e:	0f 94 c0             	sete   %al
  }
    3d61:	5d                   	pop    %rbp
    3d62:	c3                   	ret

0000000000003d63 <_ZNSt11this_thread6get_idEv>:
  namespace this_thread
  {
    /// this_thread::get_id
    inline thread::id
    get_id() noexcept
    {
    3d63:	55                   	push   %rbp
    3d64:	48 89 e5             	mov    %rsp,%rbp
    3d67:	48 83 ec 10          	sub    $0x10,%rsp
#ifndef _GLIBCXX_HAS_GTHREADS
      return thread::id(1);
#elif defined _GLIBCXX_NATIVE_THREAD_ID
      return thread::id(_GLIBCXX_NATIVE_THREAD_ID);
    3d6b:	e8 00 f5 ff ff       	call   3270 <pthread_self@plt>
    3d70:	48 89 c2             	mov    %rax,%rdx
    3d73:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3d77:	48 89 d6             	mov    %rdx,%rsi
    3d7a:	48 89 c7             	mov    %rax,%rdi
    3d7d:	e8 be fe ff ff       	call   3c40 <_ZNSt6thread2idC1Em>
    3d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
#else
      return thread::id(__gthread_self());
#endif
    }
    3d86:	c9                   	leave
    3d87:	c3                   	ret

0000000000003d88 <_ZStltNSt6thread2idES0_>:
  operator!=(thread::id __x, thread::id __y) noexcept
  { return !(__x == __y); }

  inline bool
  operator<(thread::id __x, thread::id __y) noexcept
  {
    3d88:	55                   	push   %rbp
    3d89:	48 89 e5             	mov    %rsp,%rbp
    3d8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    // Pthreads doesn't define any way to do this, so we just have to
    // assume native_handle_type is LessThanComparable.
    return __x._M_thread < __y._M_thread;
    3d94:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d9c:	48 39 c2             	cmp    %rax,%rdx
    3d9f:	0f 92 c0             	setb   %al
  }
    3da2:	5d                   	pop    %rbp
    3da3:	c3                   	ret

0000000000003da4 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    3da4:	55                   	push   %rbp
    3da5:	48 89 e5             	mov    %rsp,%rbp
    3da8:	48 83 ec 10          	sub    $0x10,%rsp
    3dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3db4:	48 89 c7             	mov    %rax,%rdi
    3db7:	e8 dc 0f 00 00       	call   4d98 <_ZNSaISt6threadED1Ev>
    3dbc:	90                   	nop
    3dbd:	c9                   	leave
    3dbe:	c3                   	ret
    3dbf:	90                   	nop

0000000000003dc0 <_ZNSt12_Vector_baseISt6threadSaIS0_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
    3dc0:	55                   	push   %rbp
    3dc1:	48 89 e5             	mov    %rsp,%rbp
    3dc4:	48 83 ec 10          	sub    $0x10,%rsp
    3dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dd0:	48 89 c7             	mov    %rax,%rdi
    3dd3:	e8 98 0f 00 00       	call   4d70 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implC1Ev>
    3dd8:	90                   	nop
    3dd9:	c9                   	leave
    3dda:	c3                   	ret
    3ddb:	90                   	nop

0000000000003ddc <_ZNSt6vectorISt6threadSaIS0_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
    3ddc:	55                   	push   %rbp
    3ddd:	48 89 e5             	mov    %rsp,%rbp
    3de0:	48 83 ec 10          	sub    $0x10,%rsp
    3de4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3de8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dec:	48 89 c7             	mov    %rax,%rdi
    3def:	e8 cc ff ff ff       	call   3dc0 <_ZNSt12_Vector_baseISt6threadSaIS0_EEC1Ev>
    3df4:	90                   	nop
    3df5:	c9                   	leave
    3df6:	c3                   	ret
    3df7:	90                   	nop

0000000000003df8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>:
   *  Members not found in @a normal containers are @c container_type,
   *  which is a typedef for the second Sequence parameter, and @c push and
   *  @c pop, which are standard %queue/FIFO operations.
  */
  template<typename _Tp, typename _Sequence = deque<_Tp> >
    class queue
    3df8:	55                   	push   %rbp
    3df9:	48 89 e5             	mov    %rsp,%rbp
    3dfc:	48 83 ec 10          	sub    $0x10,%rsp
    3e00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e08:	48 89 c7             	mov    %rax,%rdi
    3e0b:	e8 88 10 00 00       	call   4e98 <_ZNSt5dequeISt8functionIFvvEESaIS2_EED1Ev>
    3e10:	90                   	nop
    3e11:	c9                   	leave
    3e12:	c3                   	ret
    3e13:	90                   	nop

0000000000003e14 <_ZNSt12__mutex_baseC1Ev>:
    constexpr __mutex_base() noexcept = default;
    3e14:	55                   	push   %rbp
    3e15:	48 89 e5             	mov    %rsp,%rbp
    3e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e20:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3e24:	0f 11 00             	movups %xmm0,(%rax)
    3e27:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    3e2b:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
    3e30:	90                   	nop
    3e31:	5d                   	pop    %rbp
    3e32:	c3                   	ret
    3e33:	90                   	nop

0000000000003e34 <_ZNSt5mutexC1Ev>:
    mutex() noexcept = default;
    3e34:	55                   	push   %rbp
    3e35:	48 89 e5             	mov    %rsp,%rbp
    3e38:	48 83 ec 10          	sub    $0x10,%rsp
    3e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e44:	48 89 c7             	mov    %rax,%rdi
    3e47:	e8 c8 ff ff ff       	call   3e14 <_ZNSt12__mutex_baseC1Ev>
    3e4c:	90                   	nop
    3e4d:	c9                   	leave
    3e4e:	c3                   	ret
    3e4f:	90                   	nop

0000000000003e50 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    3e50:	55                   	push   %rbp
    3e51:	48 89 e5             	mov    %rsp,%rbp
    3e54:	48 83 ec 10          	sub    $0x10,%rsp
    3e58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e60:	48 89 c7             	mov    %rax,%rdi
    3e63:	e8 d4 10 00 00       	call   4f3c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>
    3e68:	90                   	nop
    3e69:	c9                   	leave
    3e6a:	c3                   	ret
    3e6b:	90                   	nop

0000000000003e6c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    3e6c:	55                   	push   %rbp
    3e6d:	48 89 e5             	mov    %rsp,%rbp
    3e70:	48 83 ec 10          	sub    $0x10,%rsp
    3e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e7c:	48 89 c7             	mov    %rax,%rdi
    3e7f:	e8 80 10 00 00       	call   4f04 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EEC1Ev>
    3e84:	90                   	nop
    3e85:	c9                   	leave
    3e86:	c3                   	ret
    3e87:	90                   	nop

0000000000003e88 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    3e88:	55                   	push   %rbp
    3e89:	48 89 e5             	mov    %rsp,%rbp
    3e8c:	48 83 ec 10          	sub    $0x10,%rsp
    3e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e98:	48 89 c7             	mov    %rax,%rdi
    3e9b:	e8 cc ff ff ff       	call   3e6c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EEC1Ev>
    3ea0:	90                   	nop
    3ea1:	c9                   	leave
    3ea2:	c3                   	ret
    3ea3:	90                   	nop

0000000000003ea4 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    3ea4:	55                   	push   %rbp
    3ea5:	48 89 e5             	mov    %rsp,%rbp
    3ea8:	48 83 ec 10          	sub    $0x10,%rsp
    3eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3eb4:	48 89 c7             	mov    %rax,%rdi
    3eb7:	e8 9c 10 00 00       	call   4f58 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EED1Ev>
    3ebc:	90                   	nop
    3ebd:	c9                   	leave
    3ebe:	c3                   	ret
    3ebf:	90                   	nop

0000000000003ec0 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE>:
  typedef std::function<void()> Job_T;
  typedef std::unique_lock<std::mutex> MutexLock_T;

public:
  ThreadPool() = delete;
  ThreadPool(const Settings &settings) : mShouldTerminate{false} {
    3ec0:	55                   	push   %rbp
    3ec1:	48 89 e5             	mov    %rsp,%rbp
    3ec4:	41 54                	push   %r12
    3ec6:	53                   	push   %rbx
    3ec7:	48 83 ec 50          	sub    $0x50,%rsp
    3ecb:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    3ecf:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    3ed3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ed7:	48 89 c7             	mov    %rax,%rdi
    3eda:	e8 fd fe ff ff       	call   3ddc <_ZNSt6vectorISt6threadSaIS0_EEC1Ev>
    3edf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ee3:	48 83 c0 18          	add    $0x18,%rax
    3ee7:	48 89 c7             	mov    %rax,%rdi
    3eea:	e8 73 0f 00 00       	call   4e62 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEEC1IS5_vEEv>
    3eef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ef3:	48 83 c0 68          	add    $0x68,%rax
    3ef7:	48 89 c7             	mov    %rax,%rdi
    3efa:	e8 35 ff ff ff       	call   3e34 <_ZNSt5mutexC1Ev>
    3eff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f03:	48 05 90 00 00 00    	add    $0x90,%rax
    3f09:	48 89 c7             	mov    %rax,%rdi
    3f0c:	e8 ef f4 ff ff       	call   3400 <_ZNSt18condition_variableC1Ev@plt>
    3f11:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f15:	c6 80 c0 00 00 00 00 	movb   $0x0,0xc0(%rax)
    3f1c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f20:	48 05 c8 00 00 00    	add    $0xc8,%rax
    3f26:	48 89 c7             	mov    %rax,%rdi
    3f29:	e8 5a ff ff ff       	call   3e88 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEC1Ev>
    auto supportedThreadCount = std::thread::hardware_concurrency();
    3f2e:	e8 ad f4 ff ff       	call   33e0 <_ZNSt6thread20hardware_concurrencyEv@plt>
    3f33:	89 45 ec             	mov    %eax,-0x14(%rbp)
    if (supportedThreadCount < 4) {
    3f36:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
    3f3a:	77 3b                	ja     3f77 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0xb7>
      throw std::runtime_error("std::thread::hardware_concurrency() < 4");
    3f3c:	bf 10 00 00 00       	mov    $0x10,%edi
    3f41:	e8 ca f1 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    3f46:	48 89 c3             	mov    %rax,%rbx
    3f49:	48 8d 05 f0 f6 00 00 	lea    0xf6f0(%rip),%rax        # 13640 <_ZN9__gnu_cxxL21__default_lock_policyE+0x8>
    3f50:	48 89 c6             	mov    %rax,%rsi
    3f53:	48 89 df             	mov    %rbx,%rdi
    3f56:	e8 55 f1 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    3f5b:	48 8b 05 56 f0 01 00 	mov    0x1f056(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3f62:	48 89 c2             	mov    %rax,%rdx
    3f65:	48 8d 05 94 ed 01 00 	lea    0x1ed94(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3f6c:	48 89 c6             	mov    %rax,%rsi
    3f6f:	48 89 df             	mov    %rbx,%rdi
    3f72:	e8 39 f5 ff ff       	call   34b0 <__cxa_throw@plt>
    }
    mThreads.resize(std::thread::hardware_concurrency() /
    3f77:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    3f7b:	e8 60 f4 ff ff       	call   33e0 <_ZNSt6thread20hardware_concurrencyEv@plt>
                    settings.system.cpuThreadUsage);
    3f80:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    3f84:	8b 4a 58             	mov    0x58(%rdx),%ecx
    mThreads.resize(std::thread::hardware_concurrency() /
    3f87:	ba 00 00 00 00       	mov    $0x0,%edx
    3f8c:	f7 f1                	div    %ecx
    3f8e:	89 c0                	mov    %eax,%eax
    3f90:	48 89 c6             	mov    %rax,%rsi
    3f93:	48 89 df             	mov    %rbx,%rdi
    3f96:	e8 f7 0f 00 00       	call   4f92 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm>
    for (auto &thread : mThreads) {
    3f9b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f9f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3fa3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3fa7:	48 89 c7             	mov    %rax,%rdi
    3faa:	e8 69 10 00 00       	call   5018 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>
    3faf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3fb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3fb7:	48 89 c7             	mov    %rax,%rdi
    3fba:	e8 7f 10 00 00       	call   503e <_ZNSt6vectorISt6threadSaIS0_EE3endEv>
    3fbf:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3fc3:	eb 5d                	jmp    4022 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0x162>
    3fc5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3fc9:	48 89 c7             	mov    %rax,%rdi
    3fcc:	e8 f1 10 00 00       	call   50c2 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>
    3fd1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      thread = std::thread{ThreadPool::threadLoop, this};
    3fd5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3fd9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3fdd:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    3fe1:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3fe5:	48 8d 0d 26 04 00 00 	lea    0x426(%rip),%rcx        # 4412 <_ZN4neko10ThreadPool10threadLoopEPS0_>
    3fec:	48 89 ce             	mov    %rcx,%rsi
    3fef:	48 89 c7             	mov    %rax,%rdi
    3ff2:	e8 dd 10 00 00       	call   50d4 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_>
    3ff7:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    3ffb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fff:	48 89 d6             	mov    %rdx,%rsi
    4002:	48 89 c7             	mov    %rax,%rdi
    4005:	e8 a6 fc ff ff       	call   3cb0 <_ZNSt6threadaSEOS_>
    400a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    400e:	48 89 c7             	mov    %rax,%rdi
    4011:	e8 44 fc ff ff       	call   3c5a <_ZNSt6threadD1Ev>
    for (auto &thread : mThreads) {
    4016:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    401a:	48 89 c7             	mov    %rax,%rdi
    401d:	e8 80 10 00 00       	call   50a2 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>
    4022:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    4026:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    402a:	48 89 d6             	mov    %rdx,%rsi
    402d:	48 89 c7             	mov    %rax,%rdi
    4030:	e8 32 10 00 00       	call   5067 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4035:	84 c0                	test   %al,%al
    4037:	75 8c                	jne    3fc5 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0x105>
    }
  }
    4039:	eb 63                	jmp    409e <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0x1de>
      throw std::runtime_error("std::thread::hardware_concurrency() < 4");
    403b:	49 89 c4             	mov    %rax,%r12
    403e:	48 89 df             	mov    %rbx,%rdi
    4041:	e8 6a f1 ff ff       	call   31b0 <__cxa_free_exception@plt>
    4046:	4c 89 e3             	mov    %r12,%rbx
    4049:	eb 03                	jmp    404e <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0x18e>
  }
    404b:	48 89 c3             	mov    %rax,%rbx
    404e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4052:	48 05 c8 00 00 00    	add    $0xc8,%rax
    4058:	48 89 c7             	mov    %rax,%rdi
    405b:	e8 44 fe ff ff       	call   3ea4 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>
    4060:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4064:	48 05 90 00 00 00    	add    $0x90,%rax
    406a:	48 89 c7             	mov    %rax,%rdi
    406d:	e8 9e f4 ff ff       	call   3510 <_ZNSt18condition_variableD1Ev@plt>
    4072:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4076:	48 83 c0 18          	add    $0x18,%rax
    407a:	48 89 c7             	mov    %rax,%rdi
    407d:	e8 76 fd ff ff       	call   3df8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>
    4082:	eb 03                	jmp    4087 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0x1c7>
    4084:	48 89 c3             	mov    %rax,%rbx
    4087:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    408b:	48 89 c7             	mov    %rax,%rdi
    408e:	e8 6f 0d 00 00       	call   4e02 <_ZNSt6vectorISt6threadSaIS0_EED1Ev>
    4093:	48 89 d8             	mov    %rbx,%rax
    4096:	48 89 c7             	mov    %rax,%rdi
    4099:	e8 32 f4 ff ff       	call   34d0 <_Unwind_Resume@plt>
    409e:	48 83 c4 50          	add    $0x50,%rsp
    40a2:	5b                   	pop    %rbx
    40a3:	41 5c                	pop    %r12
    40a5:	5d                   	pop    %rbp
    40a6:	c3                   	ret
    40a7:	90                   	nop

00000000000040a8 <_ZN4neko10ThreadPoolD1Ev>:
  ThreadPool(const ThreadPool &) = delete;
  ThreadPool(ThreadPool &&) = delete;
  ThreadPool &operator=(const ThreadPool &) = delete;
  ThreadPool &operator=(ThreadPool &&) = delete;
  ~ThreadPool() { release(); }
    40a8:	55                   	push   %rbp
    40a9:	48 89 e5             	mov    %rsp,%rbp
    40ac:	48 83 ec 10          	sub    $0x10,%rsp
    40b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40b8:	48 89 c7             	mov    %rax,%rdi
    40bb:	e8 dc 02 00 00       	call   439c <_ZN4neko10ThreadPool7releaseEv>
    40c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40c4:	48 05 c8 00 00 00    	add    $0xc8,%rax
    40ca:	48 89 c7             	mov    %rax,%rdi
    40cd:	e8 d2 fd ff ff       	call   3ea4 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>
    40d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40d6:	48 05 90 00 00 00    	add    $0x90,%rax
    40dc:	48 89 c7             	mov    %rax,%rdi
    40df:	e8 2c f4 ff ff       	call   3510 <_ZNSt18condition_variableD1Ev@plt>
    40e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40e8:	48 83 c0 18          	add    $0x18,%rax
    40ec:	48 89 c7             	mov    %rax,%rdi
    40ef:	e8 04 fd ff ff       	call   3df8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>
    40f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40f8:	48 89 c7             	mov    %rax,%rdi
    40fb:	e8 02 0d 00 00       	call   4e02 <_ZNSt6vectorISt6threadSaIS0_EED1Ev>
    4100:	90                   	nop
    4101:	c9                   	leave
    4102:	c3                   	ret
    4103:	90                   	nop

0000000000004104 <_ZZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbENKUlvE_clEv>:

  void submitJob(const Job_T &job, bool &readyFlag) {
    readyFlag = false;
    {
      MutexLock_T lock{mQueueMutex};
      mJobs.push([&] {
    4104:	55                   	push   %rbp
    4105:	48 89 e5             	mov    %rsp,%rbp
    4108:	48 83 ec 10          	sub    $0x10,%rsp
    410c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        job();
    4110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4114:	48 8b 00             	mov    (%rax),%rax
    4117:	48 89 c7             	mov    %rax,%rdi
    411a:	e8 23 11 00 00       	call   5242 <_ZNKSt8functionIFvvEEclEv>
        readyFlag = true;
    411f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4123:	48 8b 40 08          	mov    0x8(%rax),%rax
    4127:	c6 00 01             	movb   $0x1,(%rax)
      });
    412a:	90                   	nop
    412b:	c9                   	leave
    412c:	c3                   	ret
    412d:	90                   	nop

000000000000412e <_ZNSt8functionIFvvEED1Ev>:
   *  @brief Polymorphic function wrapper.
   *  @ingroup functors
   *  @since C++11
   */
  template<typename _Res, typename... _ArgTypes>
    class function<_Res(_ArgTypes...)>
    412e:	55                   	push   %rbp
    412f:	48 89 e5             	mov    %rsp,%rbp
    4132:	48 83 ec 10          	sub    $0x10,%rsp
    4136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    413a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    413e:	48 89 c7             	mov    %rax,%rdi
    4141:	e8 dc f9 ff ff       	call   3b22 <_ZNSt14_Function_baseD1Ev>
    4146:	90                   	nop
    4147:	c9                   	leave
    4148:	c3                   	ret
    4149:	90                   	nop

000000000000414a <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERb>:
  void submitJob(const Job_T &job, bool &readyFlag) {
    414a:	55                   	push   %rbp
    414b:	48 89 e5             	mov    %rsp,%rbp
    414e:	53                   	push   %rbx
    414f:	48 83 ec 68          	sub    $0x68,%rsp
    4153:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    4157:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    415b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    readyFlag = false;
    415f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4163:	c6 00 00             	movb   $0x0,(%rax)
      MutexLock_T lock{mQueueMutex};
    4166:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    416a:	48 8d 50 68          	lea    0x68(%rax),%rdx
    416e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4172:	48 89 d6             	mov    %rdx,%rsi
    4175:	48 89 c7             	mov    %rax,%rdi
    4178:	e8 5b 10 00 00       	call   51d8 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mJobs.push([&] {
    417d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4181:	48 8d 58 18          	lea    0x18(%rax),%rbx
    4185:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    4189:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    418d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4191:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4195:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    4199:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    419d:	48 89 d6             	mov    %rdx,%rsi
    41a0:	48 89 c7             	mov    %rax,%rdi
    41a3:	e8 fa 10 00 00       	call   52a2 <_ZNSt8functionIFvvEEC1IZN4neko10ThreadPool9submitJobERKS1_RbEUlvE_vEEOT_>
    41a8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    41ac:	48 89 c6             	mov    %rax,%rsi
    41af:	48 89 df             	mov    %rbx,%rdi
    41b2:	e8 73 11 00 00       	call   532a <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushEOS2_>
    41b7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    41bb:	48 89 c7             	mov    %rax,%rdi
    41be:	e8 6b ff ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    }
    41c3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    41c7:	48 89 c7             	mov    %rax,%rdi
    41ca:	e8 4b 10 00 00       	call   521a <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_one();
    41cf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    41d3:	48 05 90 00 00 00    	add    $0x90,%rax
    41d9:	48 89 c7             	mov    %rax,%rdi
    41dc:	e8 3f ef ff ff       	call   3120 <_ZNSt18condition_variable10notify_oneEv@plt>
  }
    41e1:	eb 26                	jmp    4209 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERb+0xbf>
      mJobs.push([&] {
    41e3:	48 89 c3             	mov    %rax,%rbx
    41e6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    41ea:	48 89 c7             	mov    %rax,%rdi
    41ed:	e8 3c ff ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    }
    41f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    41f6:	48 89 c7             	mov    %rax,%rdi
    41f9:	e8 1c 10 00 00       	call   521a <_ZNSt11unique_lockISt5mutexED1Ev>
    41fe:	48 89 d8             	mov    %rbx,%rax
    4201:	48 89 c7             	mov    %rax,%rdi
    4204:	e8 c7 f2 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    4209:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    420d:	c9                   	leave
    420e:	c3                   	ret
    420f:	90                   	nop

0000000000004210 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE>:

  void submitJob(const Job_T &job) {
    4210:	55                   	push   %rbp
    4211:	48 89 e5             	mov    %rsp,%rbp
    4214:	53                   	push   %rbx
    4215:	48 83 ec 28          	sub    $0x28,%rsp
    4219:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    421d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    {
      MutexLock_T lock{mQueueMutex};
    4221:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4225:	48 8d 50 68          	lea    0x68(%rax),%rdx
    4229:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    422d:	48 89 d6             	mov    %rdx,%rsi
    4230:	48 89 c7             	mov    %rax,%rdi
    4233:	e8 a0 0f 00 00       	call   51d8 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mJobs.push(job);
    4238:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    423c:	48 8d 50 18          	lea    0x18(%rax),%rdx
    4240:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4244:	48 89 c6             	mov    %rax,%rsi
    4247:	48 89 d7             	mov    %rdx,%rdi
    424a:	e8 0f 11 00 00       	call   535e <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushERKS2_>
    }
    424f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4253:	48 89 c7             	mov    %rax,%rdi
    4256:	e8 bf 0f 00 00       	call   521a <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_one();
    425b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    425f:	48 05 90 00 00 00    	add    $0x90,%rax
    4265:	48 89 c7             	mov    %rax,%rdi
    4268:	e8 b3 ee ff ff       	call   3120 <_ZNSt18condition_variable10notify_oneEv@plt>
  }
    426d:	eb 1a                	jmp    4289 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE+0x79>
    }
    426f:	48 89 c3             	mov    %rax,%rbx
    4272:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4276:	48 89 c7             	mov    %rax,%rdi
    4279:	e8 9c 0f 00 00       	call   521a <_ZNSt11unique_lockISt5mutexED1Ev>
    427e:	48 89 d8             	mov    %rbx,%rax
    4281:	48 89 c7             	mov    %rax,%rdi
    4284:	e8 47 f2 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    4289:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    428d:	c9                   	leave
    428e:	c3                   	ret
    428f:	90                   	nop

0000000000004290 <_ZN4neko10ThreadPool4busyEv>:

  bool busy() {
    4290:	55                   	push   %rbp
    4291:	48 89 e5             	mov    %rsp,%rbp
    4294:	48 83 ec 30          	sub    $0x30,%rsp
    4298:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bool poolbusy;
    {
      MutexLock_T lock{mQueueMutex};
    429c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42a0:	48 8d 50 68          	lea    0x68(%rax),%rdx
    42a4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    42a8:	48 89 d6             	mov    %rdx,%rsi
    42ab:	48 89 c7             	mov    %rax,%rdi
    42ae:	e8 25 0f 00 00       	call   51d8 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      poolbusy = mJobs.empty();
    42b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42b7:	48 83 c0 18          	add    $0x18,%rax
    42bb:	48 89 c7             	mov    %rax,%rdi
    42be:	e8 c1 10 00 00       	call   5384 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>
    42c3:	88 45 ff             	mov    %al,-0x1(%rbp)
    }
    42c6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    42ca:	48 89 c7             	mov    %rax,%rdi
    42cd:	e8 48 0f 00 00       	call   521a <_ZNSt11unique_lockISt5mutexED1Ev>
    return poolbusy;
    42d2:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  }
    42d6:	c9                   	leave
    42d7:	c3                   	ret

00000000000042d8 <_ZN4neko10ThreadPool13force_releaseEv>:

  const std::map<std::thread::id, u64> &jobStatus() const noexcept {
    return mJobStatus;
  }

  void force_release() {
    42d8:	55                   	push   %rbp
    42d9:	48 89 e5             	mov    %rsp,%rbp
    42dc:	48 83 ec 40          	sub    $0x40,%rsp
    42e0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    {
      MutexLock_T lock{mQueueMutex};
    42e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42e8:	48 8d 50 68          	lea    0x68(%rax),%rdx
    42ec:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    42f0:	48 89 d6             	mov    %rdx,%rsi
    42f3:	48 89 c7             	mov    %rax,%rdi
    42f6:	e8 dd 0e 00 00       	call   51d8 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mShouldTerminate = true;
    42fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42ff:	c6 80 c0 00 00 00 01 	movb   $0x1,0xc0(%rax)
    }
    4306:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    430a:	48 89 c7             	mov    %rax,%rdi
    430d:	e8 08 0f 00 00       	call   521a <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_all();
    4312:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4316:	48 05 90 00 00 00    	add    $0x90,%rax
    431c:	48 89 c7             	mov    %rax,%rdi
    431f:	e8 6c f1 ff ff       	call   3490 <_ZNSt18condition_variable10notify_allEv@plt>
    for (auto &activeThread : mThreads) {
    4324:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4328:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    432c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4330:	48 89 c7             	mov    %rax,%rdi
    4333:	e8 e0 0c 00 00       	call   5018 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>
    4338:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    433c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4340:	48 89 c7             	mov    %rax,%rdi
    4343:	e8 f6 0c 00 00       	call   503e <_ZNSt6vectorISt6threadSaIS0_EE3endEv>
    4348:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    434c:	eb 28                	jmp    4376 <_ZN4neko10ThreadPool13force_releaseEv+0x9e>
    434e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4352:	48 89 c7             	mov    %rax,%rdi
    4355:	e8 68 0d 00 00       	call   50c2 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>
    435a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      activeThread.join();
    435e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4362:	48 89 c7             	mov    %rax,%rdi
    4365:	e8 36 f1 ff ff       	call   34a0 <_ZNSt6thread4joinEv@plt>
    for (auto &activeThread : mThreads) {
    436a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    436e:	48 89 c7             	mov    %rax,%rdi
    4371:	e8 2c 0d 00 00       	call   50a2 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>
    4376:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    437a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    437e:	48 89 d6             	mov    %rdx,%rsi
    4381:	48 89 c7             	mov    %rax,%rdi
    4384:	e8 de 0c 00 00       	call   5067 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4389:	84 c0                	test   %al,%al
    438b:	75 c1                	jne    434e <_ZN4neko10ThreadPool13force_releaseEv+0x76>
    }
    mThreads.clear();
    438d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4391:	48 89 c7             	mov    %rax,%rdi
    4394:	e8 05 10 00 00       	call   539e <_ZNSt6vectorISt6threadSaIS0_EE5clearEv>
  }
    4399:	90                   	nop
    439a:	c9                   	leave
    439b:	c3                   	ret

000000000000439c <_ZN4neko10ThreadPool7releaseEv>:

  void release() {
    439c:	55                   	push   %rbp
    439d:	48 89 e5             	mov    %rsp,%rbp
    43a0:	48 83 ec 10          	sub    $0x10,%rsp
    43a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!busy()) {
    43a8:	90                   	nop
    43a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43ad:	48 89 c7             	mov    %rax,%rdi
    43b0:	e8 db fe ff ff       	call   4290 <_ZN4neko10ThreadPool4busyEv>
    43b5:	83 f0 01             	xor    $0x1,%eax
    43b8:	84 c0                	test   %al,%al
    43ba:	75 ed                	jne    43a9 <_ZN4neko10ThreadPool7releaseEv+0xd>
    }
    force_release();
    43bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43c0:	48 89 c7             	mov    %rax,%rdi
    43c3:	e8 10 ff ff ff       	call   42d8 <_ZN4neko10ThreadPool13force_releaseEv>
  }
    43c8:	90                   	nop
    43c9:	c9                   	leave
    43ca:	c3                   	ret
    43cb:	90                   	nop

00000000000043cc <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv>:
  static void threadLoop(ThreadPool *pool) {
    while (true) {
      Job_T job;
      {
        MutexLock_T lock{pool->mQueueMutex};
        pool->mMutexCondition.wait(lock, [pool] {
    43cc:	55                   	push   %rbp
    43cd:	48 89 e5             	mov    %rsp,%rbp
    43d0:	48 83 ec 10          	sub    $0x10,%rsp
    43d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43dc:	48 8b 00             	mov    (%rax),%rax
          return !pool->mJobs.empty() || pool->mShouldTerminate;
    43df:	48 83 c0 18          	add    $0x18,%rax
    43e3:	48 89 c7             	mov    %rax,%rdi
    43e6:	e8 99 0f 00 00       	call   5384 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>
    43eb:	83 f0 01             	xor    $0x1,%eax
    43ee:	84 c0                	test   %al,%al
    43f0:	75 12                	jne    4404 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x38>
        pool->mMutexCondition.wait(lock, [pool] {
    43f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43f6:	48 8b 00             	mov    (%rax),%rax
          return !pool->mJobs.empty() || pool->mShouldTerminate;
    43f9:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
    4400:	84 c0                	test   %al,%al
    4402:	74 07                	je     440b <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x3f>
    4404:	b8 01 00 00 00       	mov    $0x1,%eax
    4409:	eb 05                	jmp    4410 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x44>
    440b:	b8 00 00 00 00       	mov    $0x0,%eax
        });
    4410:	c9                   	leave
    4411:	c3                   	ret

0000000000004412 <_ZN4neko10ThreadPool10threadLoopEPS0_>:
  static void threadLoop(ThreadPool *pool) {
    4412:	55                   	push   %rbp
    4413:	48 89 e5             	mov    %rsp,%rbp
    4416:	53                   	push   %rbx
    4417:	48 83 ec 58          	sub    $0x58,%rsp
    441b:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      Job_T job;
    441f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4423:	48 89 c7             	mov    %rax,%rdi
    4426:	e8 99 0f 00 00       	call   53c4 <_ZNSt8functionIFvvEEC1Ev>
        MutexLock_T lock{pool->mQueueMutex};
    442b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    442f:	48 8d 50 68          	lea    0x68(%rax),%rdx
    4433:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4437:	48 89 d6             	mov    %rdx,%rsi
    443a:	48 89 c7             	mov    %rax,%rdi
    443d:	e8 96 0d 00 00       	call   51d8 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
        pool->mMutexCondition.wait(lock, [pool] {
    4442:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4446:	48 8d 88 90 00 00 00 	lea    0x90(%rax),%rcx
    444d:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4451:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4455:	48 89 c6             	mov    %rax,%rsi
    4458:	48 89 cf             	mov    %rcx,%rdi
    445b:	e8 9c 0f 00 00       	call   53fc <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_>
        if (pool->mShouldTerminate) {
    4460:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4464:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
    446b:	84 c0                	test   %al,%al
    446d:	74 07                	je     4476 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x64>
          return;
    446f:	bb 00 00 00 00       	mov    $0x0,%ebx
    4474:	eb 64                	jmp    44da <_ZN4neko10ThreadPool10threadLoopEPS0_+0xc8>
        }
        job = pool->mJobs.front();
    4476:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    447a:	48 83 c0 18          	add    $0x18,%rax
    447e:	48 89 c7             	mov    %rax,%rdi
    4481:	e8 b6 0f 00 00       	call   543c <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5frontEv>
    4486:	48 89 c2             	mov    %rax,%rdx
    4489:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    448d:	48 89 d6             	mov    %rdx,%rsi
    4490:	48 89 c7             	mov    %rax,%rdi
    4493:	e8 be 0f 00 00       	call   5456 <_ZNSt8functionIFvvEEaSERKS1_>
        pool->mJobs.pop();
    4498:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    449c:	48 83 c0 18          	add    $0x18,%rax
    44a0:	48 89 c7             	mov    %rax,%rdi
    44a3:	e8 f6 0f 00 00       	call   549e <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE3popEv>
        pool->mJobStatus[std::this_thread::get_id()]++;
    44a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    44ac:	48 8d 98 c8 00 00 00 	lea    0xc8(%rax),%rbx
    44b3:	e8 ab f8 ff ff       	call   3d63 <_ZNSt11this_thread6get_idEv>
    44b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    44bc:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    44c0:	48 89 c6             	mov    %rax,%rsi
    44c3:	48 89 df             	mov    %rbx,%rdi
    44c6:	e8 ef 0f 00 00       	call   54ba <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_>
    44cb:	48 8b 10             	mov    (%rax),%rdx
    44ce:	48 83 c2 01          	add    $0x1,%rdx
    44d2:	48 89 10             	mov    %rdx,(%rax)
      }
    44d5:	bb 01 00 00 00       	mov    $0x1,%ebx
    44da:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    44de:	48 89 c7             	mov    %rax,%rdi
    44e1:	e8 34 0d 00 00       	call   521a <_ZNSt11unique_lockISt5mutexED1Ev>
    44e6:	83 fb 01             	cmp    $0x1,%ebx
    44e9:	75 0f                	jne    44fa <_ZN4neko10ThreadPool10threadLoopEPS0_+0xe8>
    44eb:	90                   	nop
      job();
    44ec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    44f0:	48 89 c7             	mov    %rax,%rdi
    44f3:	e8 4a 0d 00 00       	call   5242 <_ZNKSt8functionIFvvEEclEv>
    44f8:	eb 07                	jmp    4501 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xef>
    44fa:	bb 00 00 00 00       	mov    $0x0,%ebx
    44ff:	eb 05                	jmp    4506 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xf4>
    }
    4501:	bb 01 00 00 00       	mov    $0x1,%ebx
    4506:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    450a:	48 89 c7             	mov    %rax,%rdi
    450d:	e8 1c fc ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    4512:	83 fb 01             	cmp    $0x1,%ebx
    4515:	75 30                	jne    4547 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x135>
    4517:	e9 03 ff ff ff       	jmp    441f <_ZN4neko10ThreadPool10threadLoopEPS0_+0xd>
      }
    451c:	48 89 c3             	mov    %rax,%rbx
    451f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4523:	48 89 c7             	mov    %rax,%rdi
    4526:	e8 ef 0c 00 00       	call   521a <_ZNSt11unique_lockISt5mutexED1Ev>
    452b:	eb 03                	jmp    4530 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x11e>
    }
    452d:	48 89 c3             	mov    %rax,%rbx
    4530:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4534:	48 89 c7             	mov    %rax,%rdi
    4537:	e8 f2 fb ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    453c:	48 89 d8             	mov    %rbx,%rax
    453f:	48 89 c7             	mov    %rax,%rdi
    4542:	e8 89 ef ff ff       	call   34d0 <_Unwind_Resume@plt>
          return;
    4547:	90                   	nop
  }
    4548:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    454c:	c9                   	leave
    454d:	c3                   	ret

000000000000454e <_ZN4neko13waitTillReadyERKSt6vectorISt17reference_wrapperIbESaIS2_EE>:
};

inline void
waitTillReady(const std::vector<std::reference_wrapper<bool>> &readyFlags) {
    454e:	55                   	push   %rbp
    454f:	48 89 e5             	mov    %rsp,%rbp
    4552:	48 83 ec 30          	sub    $0x30,%rsp
    4556:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  bool stopFlag = false;
    455a:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
  u64 flagCount = readyFlags.size();
    455e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4562:	48 89 c7             	mov    %rax,%rdi
    4565:	e8 54 10 00 00       	call   55be <_ZNKSt6vectorISt17reference_wrapperIbESaIS1_EE4sizeEv>
    456a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  while (!stopFlag) {
    456e:	eb 4f                	jmp    45bf <_ZN4neko13waitTillReadyERKSt6vectorISt17reference_wrapperIbESaIS2_EE+0x71>
    for (u64 iFlag = 0; iFlag < flagCount; ++iFlag) {
    4570:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    4577:	00 
    4578:	eb 37                	jmp    45b1 <_ZN4neko13waitTillReadyERKSt6vectorISt17reference_wrapperIbESaIS2_EE+0x63>
      if (readyFlags[iFlag] == false) {
    457a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    457e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4582:	48 89 d6             	mov    %rdx,%rsi
    4585:	48 89 c7             	mov    %rax,%rdi
    4588:	e8 55 10 00 00       	call   55e2 <_ZNKSt6vectorISt17reference_wrapperIbESaIS1_EEixEm>
    458d:	48 89 c7             	mov    %rax,%rdi
    4590:	e8 6d 10 00 00       	call   5602 <_ZNKSt17reference_wrapperIbEcvRbEv>
    4595:	0f b6 00             	movzbl (%rax),%eax
    4598:	0f b6 c0             	movzbl %al,%eax
    459b:	85 c0                	test   %eax,%eax
    459d:	0f 94 c0             	sete   %al
    45a0:	84 c0                	test   %al,%al
    45a2:	74 08                	je     45ac <_ZN4neko13waitTillReadyERKSt6vectorISt17reference_wrapperIbESaIS2_EE+0x5e>
        iFlag = 0;
    45a4:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    45ab:	00 
    for (u64 iFlag = 0; iFlag < flagCount; ++iFlag) {
    45ac:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    45b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    45b5:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    45b9:	72 bf                	jb     457a <_ZN4neko13waitTillReadyERKSt6vectorISt17reference_wrapperIbESaIS2_EE+0x2c>
      }
    }
    stopFlag = true;
    45bb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
  while (!stopFlag) {
    45bf:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    45c3:	83 f0 01             	xor    $0x1,%eax
    45c6:	84 c0                	test   %al,%al
    45c8:	75 a6                	jne    4570 <_ZN4neko13waitTillReadyERKSt6vectorISt17reference_wrapperIbESaIS2_EE+0x22>
  }
}
    45ca:	90                   	nop
    45cb:	90                   	nop
    45cc:	c9                   	leave
    45cd:	c3                   	ret

00000000000045ce <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
	    bool = is_move_assignable<_Dp>::value>
    struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>
    {
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
      __uniq_ptr_data(__uniq_ptr_data&&) = default;
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    45ce:	55                   	push   %rbp
    45cf:	48 89 e5             	mov    %rsp,%rbp
    45d2:	48 83 ec 10          	sub    $0x10,%rsp
    45d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45e6:	48 89 d6             	mov    %rdx,%rsi
    45e9:	48 89 c7             	mov    %rax,%rdi
    45ec:	e8 75 14 00 00       	call   5a66 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>
    45f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45f5:	c9                   	leave
    45f6:	c3                   	ret
    45f7:	90                   	nop

00000000000045f8 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>:

      /** @brief Move assignment operator.
       *
       * Invokes the deleter if this object owns a pointer.
       */
      unique_ptr& operator=(unique_ptr&&) = default;
    45f8:	55                   	push   %rbp
    45f9:	48 89 e5             	mov    %rsp,%rbp
    45fc:	48 83 ec 10          	sub    $0x10,%rsp
    4600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4604:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4608:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    460c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4610:	48 89 d6             	mov    %rdx,%rsi
    4613:	48 89 c7             	mov    %rax,%rdi
    4616:	e8 b3 ff ff ff       	call   45ce <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    461b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    461f:	c9                   	leave
    4620:	c3                   	ret
    4621:	90                   	nop

0000000000004622 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    4622:	55                   	push   %rbp
    4623:	48 89 e5             	mov    %rsp,%rbp
    4626:	48 83 ec 10          	sub    $0x10,%rsp
    462a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    462e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4636:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    463a:	48 89 d6             	mov    %rdx,%rsi
    463d:	48 89 c7             	mov    %rax,%rdi
    4640:	e8 37 15 00 00       	call   5b7c <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>
    4645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4649:	c9                   	leave
    464a:	c3                   	ret
    464b:	90                   	nop

000000000000464c <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>:
      unique_ptr& operator=(unique_ptr&&) = default;
    464c:	55                   	push   %rbp
    464d:	48 89 e5             	mov    %rsp,%rbp
    4650:	48 83 ec 10          	sub    $0x10,%rsp
    4654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4658:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    465c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4664:	48 89 d6             	mov    %rdx,%rsi
    4667:	48 89 c7             	mov    %rax,%rdi
    466a:	e8 b3 ff ff ff       	call   4622 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    466f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4673:	c9                   	leave
    4674:	c3                   	ret
    4675:	90                   	nop

0000000000004676 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    4676:	55                   	push   %rbp
    4677:	48 89 e5             	mov    %rsp,%rbp
    467a:	48 83 ec 10          	sub    $0x10,%rsp
    467e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4682:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    468a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    468e:	48 89 d6             	mov    %rdx,%rsi
    4691:	48 89 c7             	mov    %rax,%rdi
    4694:	e8 0f 16 00 00       	call   5ca8 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>
    4699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    469d:	c9                   	leave
    469e:	c3                   	ret
    469f:	90                   	nop

00000000000046a0 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>:
      unique_ptr& operator=(unique_ptr&&) = default;
    46a0:	55                   	push   %rbp
    46a1:	48 89 e5             	mov    %rsp,%rbp
    46a4:	48 83 ec 10          	sub    $0x10,%rsp
    46a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    46b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46b8:	48 89 d6             	mov    %rdx,%rsi
    46bb:	48 89 c7             	mov    %rax,%rdi
    46be:	e8 b3 ff ff ff       	call   4676 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    46c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46c7:	c9                   	leave
    46c8:	c3                   	ret
    46c9:	90                   	nop

00000000000046ca <_ZN4neko6EngineC1Ev>:

namespace neko {

class Engine {
public:
  Engine() {
    46ca:	55                   	push   %rbp
    46cb:	48 89 e5             	mov    %rsp,%rbp
    46ce:	53                   	push   %rbx
    46cf:	48 83 ec 38          	sub    $0x38,%rsp
    46d3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    46d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    46db:	48 89 c7             	mov    %rax,%rdi
    46de:	e8 71 0f 00 00       	call   5654 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEv>
    46e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    46e7:	48 83 c0 08          	add    $0x8,%rax
    46eb:	48 89 c7             	mov    %rax,%rdi
    46ee:	e8 23 10 00 00       	call   5716 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEv>
    46f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    46f7:	48 83 c0 10          	add    $0x10,%rax
    46fb:	48 89 c7             	mov    %rax,%rdi
    46fe:	e8 d5 10 00 00       	call   57d8 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEv>
    mpSettings = std::make_unique<Settings>();
    4703:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4707:	48 89 c7             	mov    %rax,%rdi
    470a:	e8 d4 12 00 00       	call   59e3 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    470f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4713:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    4717:	48 89 d6             	mov    %rdx,%rsi
    471a:	48 89 c7             	mov    %rax,%rdi
    471d:	e8 d6 fe ff ff       	call   45f8 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>
    4722:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4726:	48 89 c7             	mov    %rax,%rdi
    4729:	e8 4c 0f 00 00       	call   567a <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>

    mpThreadPool = std::make_unique<ThreadPool>(*mpSettings);
    472e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4732:	48 89 c7             	mov    %rax,%rdi
    4735:	e8 80 13 00 00       	call   5aba <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    473a:	48 89 c2             	mov    %rax,%rdx
    473d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4741:	48 89 d6             	mov    %rdx,%rsi
    4744:	48 89 c7             	mov    %rax,%rdi
    4747:	e8 b0 13 00 00       	call   5afc <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    474c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4750:	48 8d 50 10          	lea    0x10(%rax),%rdx
    4754:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4758:	48 89 c6             	mov    %rax,%rsi
    475b:	48 89 d7             	mov    %rdx,%rdi
    475e:	e8 e9 fe ff ff       	call   464c <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>
    4763:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4767:	48 89 c7             	mov    %rax,%rdi
    476a:	e8 8f 10 00 00       	call   57fe <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>

    mpRenderer = std::make_unique<Renderer>(*mpSettings, *mpThreadPool);
    476f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4773:	48 83 c0 10          	add    $0x10,%rax
    4777:	48 89 c7             	mov    %rax,%rdi
    477a:	e8 51 14 00 00       	call   5bd0 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv>
    477f:	48 89 c3             	mov    %rax,%rbx
    4782:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4786:	48 89 c7             	mov    %rax,%rdi
    4789:	e8 2c 13 00 00       	call   5aba <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    478e:	48 89 c1             	mov    %rax,%rcx
    4791:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4795:	48 89 da             	mov    %rbx,%rdx
    4798:	48 89 ce             	mov    %rcx,%rsi
    479b:	48 89 c7             	mov    %rax,%rdi
    479e:	e8 6f 14 00 00       	call   5c12 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    47a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47a7:	48 8d 50 08          	lea    0x8(%rax),%rdx
    47ab:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    47af:	48 89 c6             	mov    %rax,%rsi
    47b2:	48 89 d7             	mov    %rdx,%rdi
    47b5:	e8 e6 fe ff ff       	call   46a0 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>
    47ba:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    47be:	48 89 c7             	mov    %rax,%rdi
    47c1:	e8 76 0f 00 00       	call   573c <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
  };
    47c6:	eb 3a                	jmp    4802 <_ZN4neko6EngineC1Ev+0x138>
    47c8:	48 89 c3             	mov    %rax,%rbx
    47cb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47cf:	48 83 c0 10          	add    $0x10,%rax
    47d3:	48 89 c7             	mov    %rax,%rdi
    47d6:	e8 23 10 00 00       	call   57fe <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    47db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47df:	48 83 c0 08          	add    $0x8,%rax
    47e3:	48 89 c7             	mov    %rax,%rdi
    47e6:	e8 51 0f 00 00       	call   573c <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    47eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47ef:	48 89 c7             	mov    %rax,%rdi
    47f2:	e8 83 0e 00 00       	call   567a <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    47f7:	48 89 d8             	mov    %rbx,%rax
    47fa:	48 89 c7             	mov    %rax,%rdi
    47fd:	e8 ce ec ff ff       	call   34d0 <_Unwind_Resume@plt>
    4802:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4806:	c9                   	leave
    4807:	c3                   	ret

0000000000004808 <_ZZN4neko6Engine5startEvENKUlvE_clEv>:
  Engine &operator=(Engine &&) = default;

  ~Engine() = default;

  void start() {
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    4808:	55                   	push   %rbp
    4809:	48 89 e5             	mov    %rsp,%rbp
    480c:	48 83 ec 10          	sub    $0x10,%rsp
    4810:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4818:	48 8b 00             	mov    (%rax),%rax
    481b:	48 83 c0 08          	add    $0x8,%rax
    481f:	48 89 c7             	mov    %rax,%rdi
    4822:	e8 ef 14 00 00       	call   5d16 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>
    4827:	48 89 c7             	mov    %rax,%rdi
    482a:	e8 df f1 ff ff       	call   3a0e <_ZN4neko8Renderer5startEv>
    482f:	90                   	nop
    4830:	c9                   	leave
    4831:	c3                   	ret

0000000000004832 <_ZZN4neko6Engine5startEvENKUlvE0_clEv>:
    bool testReady;
    mpThreadPool->submitJob(
        [&] {
    4832:	55                   	push   %rbp
    4833:	48 89 e5             	mov    %rsp,%rbp
    4836:	48 83 ec 20          	sub    $0x20,%rsp
    483a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
          for (size_t i = 0; i < 10'000'000'000; ++i) {
    483e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4845:	00 
    4846:	eb 05                	jmp    484d <_ZZN4neko6Engine5startEvENKUlvE0_clEv+0x1b>
    4848:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    484d:	48 b8 ff e3 0b 54 02 	movabs $0x2540be3ff,%rax
    4854:	00 00 00 
    4857:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    485b:	73 eb                	jae    4848 <_ZZN4neko6Engine5startEvENKUlvE0_clEv+0x16>
          }
          std::cout << "test\n";
    485d:	48 8d 05 08 ee 00 00 	lea    0xee08(%rip),%rax        # 1366c <_ZN6__pstl9execution2v1L5unseqE+0x1>
    4864:	48 89 c6             	mov    %rax,%rsi
    4867:	48 8d 05 52 ea 01 00 	lea    0x1ea52(%rip),%rax        # 232c0 <_ZSt4cout@GLIBCXX_3.4>
    486e:	48 89 c7             	mov    %rax,%rdi
    4871:	e8 3a ea ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
        },
    4876:	90                   	nop
    4877:	c9                   	leave
    4878:	c3                   	ret
    4879:	90                   	nop

000000000000487a <_ZZN4neko6Engine5startEvENKUlvE1_clEv>:
        testReady);
    bool testReady1;
    mpThreadPool->submitJob(
        [&] {
    487a:	55                   	push   %rbp
    487b:	48 89 e5             	mov    %rsp,%rbp
    487e:	48 83 ec 20          	sub    $0x20,%rsp
    4882:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
          for (size_t i = 0; i < 10'000'000'000; ++i) {
    4886:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    488d:	00 
    488e:	eb 05                	jmp    4895 <_ZZN4neko6Engine5startEvENKUlvE1_clEv+0x1b>
    4890:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    4895:	48 b8 ff e3 0b 54 02 	movabs $0x2540be3ff,%rax
    489c:	00 00 00 
    489f:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    48a3:	73 eb                	jae    4890 <_ZZN4neko6Engine5startEvENKUlvE1_clEv+0x16>
          }
          std::cout << "test1\n";
    48a5:	48 8d 05 c6 ed 00 00 	lea    0xedc6(%rip),%rax        # 13672 <_ZN6__pstl9execution2v1L5unseqE+0x7>
    48ac:	48 89 c6             	mov    %rax,%rsi
    48af:	48 8d 05 0a ea 01 00 	lea    0x1ea0a(%rip),%rax        # 232c0 <_ZSt4cout@GLIBCXX_3.4>
    48b6:	48 89 c7             	mov    %rax,%rdi
    48b9:	e8 f2 e9 ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
        },
    48be:	90                   	nop
    48bf:	c9                   	leave
    48c0:	c3                   	ret
    48c1:	90                   	nop

00000000000048c2 <_ZZN4neko6Engine5startEvENKUlvE2_clEv>:
        testReady1);
    bool testReady2;
    mpThreadPool->submitJob(
        [&] {
    48c2:	55                   	push   %rbp
    48c3:	48 89 e5             	mov    %rsp,%rbp
    48c6:	48 83 ec 20          	sub    $0x20,%rsp
    48ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
          for (size_t i = 0; i < 100'000'000'000; ++i) {
    48ce:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    48d5:	00 
    48d6:	eb 05                	jmp    48dd <_ZZN4neko6Engine5startEvENKUlvE2_clEv+0x1b>
    48d8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    48dd:	48 b8 ff e7 76 48 17 	movabs $0x174876e7ff,%rax
    48e4:	00 00 00 
    48e7:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    48eb:	73 eb                	jae    48d8 <_ZZN4neko6Engine5startEvENKUlvE2_clEv+0x16>
          }
          std::cout << std::is_same_v<u64, size_t> << '\n';
    48ed:	be 01 00 00 00       	mov    $0x1,%esi
    48f2:	48 8d 05 c7 e9 01 00 	lea    0x1e9c7(%rip),%rax        # 232c0 <_ZSt4cout@GLIBCXX_3.4>
    48f9:	48 89 c7             	mov    %rax,%rdi
    48fc:	e8 ef eb ff ff       	call   34f0 <_ZNSolsEb@plt>
    4901:	be 0a 00 00 00       	mov    $0xa,%esi
    4906:	48 89 c7             	mov    %rax,%rdi
    4909:	e8 72 ea ff ff       	call   3380 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
        },
    490e:	90                   	nop
    490f:	c9                   	leave
    4910:	c3                   	ret
    4911:	90                   	nop

0000000000004912 <_ZN4neko6Engine5startEv>:
  void start() {
    4912:	55                   	push   %rbp
    4913:	48 89 e5             	mov    %rsp,%rbp
    4916:	41 55                	push   %r13
    4918:	41 54                	push   %r12
    491a:	53                   	push   %rbx
    491b:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    4922:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    4929:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4930:	48 83 c0 10          	add    $0x10,%rax
    4934:	48 89 c7             	mov    %rax,%rdi
    4937:	e8 c0 13 00 00       	call   5cfc <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>
    493c:	48 89 c3             	mov    %rax,%rbx
    493f:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4946:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    494d:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    4954:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    495b:	48 89 d6             	mov    %rdx,%rsi
    495e:	48 89 c7             	mov    %rax,%rdi
    4961:	e8 ca 13 00 00       	call   5d30 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_>
    4966:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    496d:	48 89 c6             	mov    %rax,%rsi
    4970:	48 89 df             	mov    %rbx,%rdi
    4973:	e8 98 f8 ff ff       	call   4210 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE>
    4978:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    497f:	48 89 c7             	mov    %rax,%rdi
    4982:	e8 a7 f7 ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    mpThreadPool->submitJob(
    4987:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    498e:	48 83 c0 10          	add    $0x10,%rax
    4992:	48 89 c7             	mov    %rax,%rdi
    4995:	e8 62 13 00 00       	call   5cfc <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>
    499a:	48 89 c3             	mov    %rax,%rbx
    499d:	48 8d 95 3f ff ff ff 	lea    -0xc1(%rbp),%rdx
    49a4:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    49ab:	48 89 d6             	mov    %rdx,%rsi
    49ae:	48 89 c7             	mov    %rax,%rdi
    49b1:	e8 02 14 00 00       	call   5db8 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE0_vEEOT_>
    49b6:	48 8d 95 df fe ff ff 	lea    -0x121(%rbp),%rdx
    49bd:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    49c4:	48 89 c6             	mov    %rax,%rsi
    49c7:	48 89 df             	mov    %rbx,%rdi
    49ca:	e8 7b f7 ff ff       	call   414a <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERb>
    49cf:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    49d6:	48 89 c7             	mov    %rax,%rdi
    49d9:	e8 50 f7 ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    mpThreadPool->submitJob(
    49de:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    49e5:	48 83 c0 10          	add    $0x10,%rax
    49e9:	48 89 c7             	mov    %rax,%rdi
    49ec:	e8 0b 13 00 00       	call   5cfc <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>
    49f1:	48 89 c3             	mov    %rax,%rbx
    49f4:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    49fb:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4a02:	48 89 d6             	mov    %rdx,%rsi
    4a05:	48 89 c7             	mov    %rax,%rdi
    4a08:	e8 33 14 00 00       	call   5e40 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE1_vEEOT_>
    4a0d:	48 8d 95 de fe ff ff 	lea    -0x122(%rbp),%rdx
    4a14:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4a1b:	48 89 c6             	mov    %rax,%rsi
    4a1e:	48 89 df             	mov    %rbx,%rdi
    4a21:	e8 24 f7 ff ff       	call   414a <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERb>
    4a26:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4a2d:	48 89 c7             	mov    %rax,%rdi
    4a30:	e8 f9 f6 ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    mpThreadPool->submitJob(
    4a35:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4a3c:	48 83 c0 10          	add    $0x10,%rax
    4a40:	48 89 c7             	mov    %rax,%rdi
    4a43:	e8 b4 12 00 00       	call   5cfc <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>
    4a48:	48 89 c3             	mov    %rax,%rbx
    4a4b:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    4a4f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    4a56:	48 89 d6             	mov    %rdx,%rsi
    4a59:	48 89 c7             	mov    %rax,%rdi
    4a5c:	e8 67 14 00 00       	call   5ec8 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE2_vEEOT_>
    4a61:	48 8d 95 dd fe ff ff 	lea    -0x123(%rbp),%rdx
    4a68:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    4a6f:	48 89 c6             	mov    %rax,%rsi
    4a72:	48 89 df             	mov    %rbx,%rdi
    4a75:	e8 d0 f6 ff ff       	call   414a <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERb>
    4a7a:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    4a81:	48 89 c7             	mov    %rax,%rdi
    4a84:	e8 a5 f6 ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
        testReady2);
    waitTillReady({testReady, testReady1, testReady2});
    4a89:	48 8d 95 df fe ff ff 	lea    -0x121(%rbp),%rdx
    4a90:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4a94:	48 89 d6             	mov    %rdx,%rsi
    4a97:	48 89 c7             	mov    %rax,%rdi
    4a9a:	e8 b1 14 00 00       	call   5f50 <_ZNSt17reference_wrapperIbEC1IRbvPbEEOT_>
    4a9f:	48 8d 85 de fe ff ff 	lea    -0x122(%rbp),%rax
    4aa6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    4aaa:	48 83 c2 08          	add    $0x8,%rdx
    4aae:	48 89 c6             	mov    %rax,%rsi
    4ab1:	48 89 d7             	mov    %rdx,%rdi
    4ab4:	e8 97 14 00 00       	call   5f50 <_ZNSt17reference_wrapperIbEC1IRbvPbEEOT_>
    4ab9:	48 8d 85 dd fe ff ff 	lea    -0x123(%rbp),%rax
    4ac0:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    4ac4:	48 83 c2 10          	add    $0x10,%rdx
    4ac8:	48 89 c6             	mov    %rax,%rsi
    4acb:	48 89 d7             	mov    %rdx,%rdi
    4ace:	e8 7d 14 00 00       	call   5f50 <_ZNSt17reference_wrapperIbEC1IRbvPbEEOT_>
    4ad3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ad7:	49 89 c4             	mov    %rax,%r12
    4ada:	41 bd 03 00 00 00    	mov    $0x3,%r13d
    4ae0:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4ae4:	48 89 c7             	mov    %rax,%rdi
    4ae7:	e8 92 14 00 00       	call   5f7e <_ZNSaISt17reference_wrapperIbEEC1Ev>
    4aec:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    4af0:	4c 89 e6             	mov    %r12,%rsi
    4af3:	4c 89 ef             	mov    %r13,%rdi
    4af6:	4c 89 e1             	mov    %r12,%rcx
    4af9:	4c 89 eb             	mov    %r13,%rbx
    4afc:	48 89 df             	mov    %rbx,%rdi
    4aff:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4b03:	48 89 d1             	mov    %rdx,%rcx
    4b06:	48 89 fa             	mov    %rdi,%rdx
    4b09:	48 89 c7             	mov    %rax,%rdi
    4b0c:	e8 a5 14 00 00       	call   5fb6 <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    4b11:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4b15:	48 89 c7             	mov    %rax,%rdi
    4b18:	e8 31 fa ff ff       	call   454e <_ZN4neko13waitTillReadyERKSt6vectorISt17reference_wrapperIbESaIS2_EE>
    4b1d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4b21:	48 89 c7             	mov    %rax,%rdi
    4b24:	e8 15 15 00 00       	call   603e <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EED1Ev>
    4b29:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4b2d:	48 89 c7             	mov    %rax,%rdi
    4b30:	e8 65 14 00 00       	call   5f9a <_ZNSaISt17reference_wrapperIbEED1Ev>
    std::cout << "ready\n";
    4b35:	48 8d 05 3d eb 00 00 	lea    0xeb3d(%rip),%rax        # 13679 <_ZN6__pstl9execution2v1L5unseqE+0xe>
    4b3c:	48 89 c6             	mov    %rax,%rsi
    4b3f:	48 8d 05 7a e7 01 00 	lea    0x1e77a(%rip),%rax        # 232c0 <_ZSt4cout@GLIBCXX_3.4>
    4b46:	48 89 c7             	mov    %rax,%rdi
    4b49:	e8 62 e7 ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4b4e:	e9 8e 00 00 00       	jmp    4be1 <_ZN4neko6Engine5startEv+0x2cf>
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    4b53:	48 89 c3             	mov    %rax,%rbx
    4b56:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4b5d:	48 89 c7             	mov    %rax,%rdi
    4b60:	e8 c9 f5 ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    4b65:	48 89 d8             	mov    %rbx,%rax
    4b68:	48 89 c7             	mov    %rax,%rdi
    4b6b:	e8 60 e9 ff ff       	call   34d0 <_Unwind_Resume@plt>
    mpThreadPool->submitJob(
    4b70:	48 89 c3             	mov    %rax,%rbx
    4b73:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    4b7a:	48 89 c7             	mov    %rax,%rdi
    4b7d:	e8 ac f5 ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    4b82:	48 89 d8             	mov    %rbx,%rax
    4b85:	48 89 c7             	mov    %rax,%rdi
    4b88:	e8 43 e9 ff ff       	call   34d0 <_Unwind_Resume@plt>
    mpThreadPool->submitJob(
    4b8d:	48 89 c3             	mov    %rax,%rbx
    4b90:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4b97:	48 89 c7             	mov    %rax,%rdi
    4b9a:	e8 8f f5 ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    4b9f:	48 89 d8             	mov    %rbx,%rax
    4ba2:	48 89 c7             	mov    %rax,%rdi
    4ba5:	e8 26 e9 ff ff       	call   34d0 <_Unwind_Resume@plt>
    mpThreadPool->submitJob(
    4baa:	48 89 c3             	mov    %rax,%rbx
    4bad:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    4bb4:	48 89 c7             	mov    %rax,%rdi
    4bb7:	e8 72 f5 ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    4bbc:	48 89 d8             	mov    %rbx,%rax
    4bbf:	48 89 c7             	mov    %rax,%rdi
    4bc2:	e8 09 e9 ff ff       	call   34d0 <_Unwind_Resume@plt>
    waitTillReady({testReady, testReady1, testReady2});
    4bc7:	48 89 c3             	mov    %rax,%rbx
    4bca:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4bce:	48 89 c7             	mov    %rax,%rdi
    4bd1:	e8 c4 13 00 00       	call   5f9a <_ZNSaISt17reference_wrapperIbEED1Ev>
    4bd6:	48 89 d8             	mov    %rbx,%rax
    4bd9:	48 89 c7             	mov    %rax,%rdi
    4bdc:	e8 ef e8 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    4be1:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    4be8:	5b                   	pop    %rbx
    4be9:	41 5c                	pop    %r12
    4beb:	41 5d                	pop    %r13
    4bed:	5d                   	pop    %rbp
    4bee:	c3                   	ret
    4bef:	90                   	nop

0000000000004bf0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4bf0:	55                   	push   %rbp
    4bf1:	48 89 e5             	mov    %rsp,%rbp
    4bf4:	48 83 ec 20          	sub    $0x20,%rsp
    4bf8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4bfc:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4c03:	00 
      while (!eq(__p[__i], char_type()))
    4c04:	eb 05                	jmp    4c0b <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4c06:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4c0b:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4c0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4c13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c17:	48 01 c2             	add    %rax,%rdx
    4c1a:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4c1e:	48 89 c6             	mov    %rax,%rsi
    4c21:	48 89 d7             	mov    %rdx,%rdi
    4c24:	e8 b7 15 00 00       	call   61e0 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4c29:	83 f0 01             	xor    $0x1,%eax
    4c2c:	84 c0                	test   %al,%al
    4c2e:	75 d6                	jne    4c06 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4c34:	c9                   	leave
    4c35:	c3                   	ret

0000000000004c36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4c36:	55                   	push   %rbp
    4c37:	48 89 e5             	mov    %rsp,%rbp
    4c3a:	48 83 ec 10          	sub    $0x10,%rsp
    4c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c46:	48 89 c7             	mov    %rax,%rdi
    4c49:	e8 02 e4 ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    4c4e:	90                   	nop
    4c4f:	c9                   	leave
    4c50:	c3                   	ret
    4c51:	90                   	nop

0000000000004c52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4c52:	55                   	push   %rbp
    4c53:	48 89 e5             	mov    %rsp,%rbp
    4c56:	53                   	push   %rbx
    4c57:	48 83 ec 38          	sub    $0x38,%rsp
    4c5b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c5f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c63:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4c67:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4c6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c6f:	48 89 c7             	mov    %rax,%rdi
    4c72:	e8 a9 e5 ff ff       	call   3220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4c77:	48 89 c1             	mov    %rax,%rcx
    4c7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4c7e:	48 89 c2             	mov    %rax,%rdx
    4c81:	48 89 ce             	mov    %rcx,%rsi
    4c84:	48 89 df             	mov    %rbx,%rdi
    4c87:	e8 94 e6 ff ff       	call   3320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4c8c:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4c91:	75 0f                	jne    4ca2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4c93:	48 8d 05 0e ea 00 00 	lea    0xea0e(%rip),%rax        # 136a8 <_ZN6__pstl9execution2v1L5unseqE+0x3d>
    4c9a:	48 89 c7             	mov    %rax,%rdi
    4c9d:	e8 fe e4 ff ff       	call   31a0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4ca2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4ca6:	48 89 c7             	mov    %rax,%rdi
    4ca9:	e8 fc eb ff ff       	call   38aa <_ZNSt11char_traitsIcE6lengthEPKc>
    4cae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4cb2:	48 01 d0             	add    %rdx,%rax
    4cb5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4cb9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4cbd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4cc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cc5:	48 89 ce             	mov    %rcx,%rsi
    4cc8:	48 89 c7             	mov    %rax,%rdi
    4ccb:	e8 76 15 00 00       	call   6246 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4cd0:	eb 1a                	jmp    4cec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4cd2:	48 89 c3             	mov    %rax,%rbx
    4cd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cd9:	48 89 c7             	mov    %rax,%rdi
    4cdc:	e8 55 ff ff ff       	call   4c36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4ce1:	48 89 d8             	mov    %rbx,%rax
    4ce4:	48 89 c7             	mov    %rax,%rdi
    4ce7:	e8 e4 e7 ff ff       	call   34d0 <_Unwind_Resume@plt>
    4cec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4cf0:	c9                   	leave
    4cf1:	c3                   	ret

0000000000004cf2 <_ZSt3maxImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    4cf2:	55                   	push   %rbp
    4cf3:	48 89 e5             	mov    %rsp,%rbp
    4cf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
    4cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d02:	48 8b 10             	mov    (%rax),%rdx
    4d05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d09:	48 8b 00             	mov    (%rax),%rax
    4d0c:	48 39 c2             	cmp    %rax,%rdx
    4d0f:	73 06                	jae    4d17 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    4d11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d15:	eb 04                	jmp    4d1b <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    4d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4d1b:	5d                   	pop    %rbp
    4d1c:	c3                   	ret

0000000000004d1d <_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_>:
			      is_move_constructible<_Tp>,
			      is_move_assignable<_Tp>>::value>::type
#else
    void
#endif
    swap(_Tp& __a, _Tp& __b)
    4d1d:	55                   	push   %rbp
    4d1e:	48 89 e5             	mov    %rsp,%rbp
    4d21:	48 83 ec 20          	sub    $0x20,%rsp
    4d25:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4d29:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    {
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    4d2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d31:	48 89 c7             	mov    %rax,%rdi
    4d34:	e8 f4 15 00 00       	call   632d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4d39:	48 8b 00             	mov    (%rax),%rax
    4d3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    4d40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4d44:	48 89 c7             	mov    %rax,%rdi
    4d47:	e8 e1 15 00 00       	call   632d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4d4c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4d50:	48 8b 00             	mov    (%rax),%rax
    4d53:	48 89 02             	mov    %rax,(%rdx)
      __b = _GLIBCXX_MOVE(__tmp);
    4d56:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4d5a:	48 89 c7             	mov    %rax,%rdi
    4d5d:	e8 cb 15 00 00       	call   632d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4d62:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4d66:	48 8b 00             	mov    (%rax),%rax
    4d69:	48 89 02             	mov    %rax,(%rdx)
    }
    4d6c:	90                   	nop
    4d6d:	c9                   	leave
    4d6e:	c3                   	ret
    4d6f:	90                   	nop

0000000000004d70 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    4d70:	55                   	push   %rbp
    4d71:	48 89 e5             	mov    %rsp,%rbp
    4d74:	48 83 ec 10          	sub    $0x10,%rsp
    4d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    4d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d80:	48 89 c7             	mov    %rax,%rdi
    4d83:	e8 b4 15 00 00       	call   633c <_ZNSaISt6threadEC1Ev>
    4d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d8c:	48 89 c7             	mov    %rax,%rdi
    4d8f:	e8 c4 15 00 00       	call   6358 <_ZNSt12_Vector_baseISt6threadSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    4d94:	90                   	nop
    4d95:	c9                   	leave
    4d96:	c3                   	ret
    4d97:	90                   	nop

0000000000004d98 <_ZNSaISt6threadED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4d98:	55                   	push   %rbp
    4d99:	48 89 e5             	mov    %rsp,%rbp
    4d9c:	48 83 ec 10          	sub    $0x10,%rsp
    4da0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4da4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4da8:	48 89 c7             	mov    %rax,%rdi
    4dab:	e8 d6 15 00 00       	call   6386 <_ZNSt15__new_allocatorISt6threadED1Ev>
    4db0:	90                   	nop
    4db1:	c9                   	leave
    4db2:	c3                   	ret
    4db3:	90                   	nop

0000000000004db4 <_ZNSt12_Vector_baseISt6threadSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4db4:	55                   	push   %rbp
    4db5:	48 89 e5             	mov    %rsp,%rbp
    4db8:	48 83 ec 10          	sub    $0x10,%rsp
    4dbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dc4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dcc:	48 8b 00             	mov    (%rax),%rax
    4dcf:	48 29 c2             	sub    %rax,%rdx
    4dd2:	48 89 d0             	mov    %rdx,%rax
    4dd5:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4dd9:	48 89 c2             	mov    %rax,%rdx
    4ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4de0:	48 8b 08             	mov    (%rax),%rcx
    4de3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4de7:	48 89 ce             	mov    %rcx,%rsi
    4dea:	48 89 c7             	mov    %rax,%rdi
    4ded:	e8 a0 15 00 00       	call   6392 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
      }
    4df2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4df6:	48 89 c7             	mov    %rax,%rdi
    4df9:	e8 a6 ef ff ff       	call   3da4 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implD1Ev>
    4dfe:	90                   	nop
    4dff:	c9                   	leave
    4e00:	c3                   	ret
    4e01:	90                   	nop

0000000000004e02 <_ZNSt6vectorISt6threadSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4e02:	55                   	push   %rbp
    4e03:	48 89 e5             	mov    %rsp,%rbp
    4e06:	48 83 ec 10          	sub    $0x10,%rsp
    4e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e12:	48 89 c7             	mov    %rax,%rdi
    4e15:	e8 ae 15 00 00       	call   63c8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    4e1a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4e1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e21:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4e25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e29:	48 8b 00             	mov    (%rax),%rax
    4e2c:	48 89 ce             	mov    %rcx,%rsi
    4e2f:	48 89 c7             	mov    %rax,%rdi
    4e32:	e8 9f 15 00 00       	call   63d6 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4e37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e3b:	48 89 c7             	mov    %rax,%rdi
    4e3e:	e8 71 ff ff ff       	call   4db4 <_ZNSt12_Vector_baseISt6threadSaIS0_EED1Ev>
    4e43:	90                   	nop
    4e44:	c9                   	leave
    4e45:	c3                   	ret

0000000000004e46 <_ZNSt5dequeISt8functionIFvvEESaIS2_EEC1Ev>:

      /**
       *  @brief  Creates a %deque with no elements.
       */
#if __cplusplus >= 201103L
      deque() = default;
    4e46:	55                   	push   %rbp
    4e47:	48 89 e5             	mov    %rsp,%rbp
    4e4a:	48 83 ec 10          	sub    $0x10,%rsp
    4e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e56:	48 89 c7             	mov    %rax,%rdi
    4e59:	e8 be 15 00 00       	call   641c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev>
    4e5e:	90                   	nop
    4e5f:	c9                   	leave
    4e60:	c3                   	ret
    4e61:	90                   	nop

0000000000004e62 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEEC1IS5_vEEv>:
      queue(const _Sequence& __c = _Sequence())
      : c(__c) { }
#else
      template<typename _Seq = _Sequence, typename _Requires = typename
	       enable_if<is_default_constructible<_Seq>::value>::type>
	queue()
    4e62:	55                   	push   %rbp
    4e63:	48 89 e5             	mov    %rsp,%rbp
    4e66:	48 83 ec 10          	sub    $0x10,%rsp
    4e6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: c() { }
    4e6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e72:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4e76:	0f 11 00             	movups %xmm0,(%rax)
    4e79:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4e7d:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    4e81:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    4e85:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    4e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e8d:	48 89 c7             	mov    %rax,%rdi
    4e90:	e8 b1 ff ff ff       	call   4e46 <_ZNSt5dequeISt8functionIFvvEESaIS2_EEC1Ev>
    4e95:	90                   	nop
    4e96:	c9                   	leave
    4e97:	c3                   	ret

0000000000004e98 <_ZNSt5dequeISt8functionIFvvEESaIS2_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~deque()
    4e98:	55                   	push   %rbp
    4e99:	48 89 e5             	mov    %rsp,%rbp
    4e9c:	53                   	push   %rbx
    4e9d:	48 83 ec 58          	sub    $0x58,%rsp
    4ea1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
    4ea5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4ea9:	48 89 c7             	mov    %rax,%rdi
    4eac:	e8 7b 16 00 00       	call   652c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    4eb1:	48 89 c3             	mov    %rax,%rbx
    4eb4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4eb8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4ebc:	48 89 d6             	mov    %rdx,%rsi
    4ebf:	48 89 c7             	mov    %rax,%rdi
    4ec2:	e8 37 16 00 00       	call   64fe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>
    4ec7:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4ecb:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4ecf:	48 89 d6             	mov    %rdx,%rsi
    4ed2:	48 89 c7             	mov    %rax,%rdi
    4ed5:	e8 f6 15 00 00       	call   64d0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>
    4eda:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    4ede:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    4ee2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4ee6:	48 89 d9             	mov    %rbx,%rcx
    4ee9:	48 89 c7             	mov    %rax,%rdi
    4eec:	e8 49 16 00 00       	call   653a <_ZNSt5dequeISt8functionIFvvEESaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>
    4ef1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4ef5:	48 89 c7             	mov    %rax,%rdi
    4ef8:	e8 6b 15 00 00       	call   6468 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev>
    4efd:	90                   	nop
    4efe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f02:	c9                   	leave
    4f03:	c3                   	ret

0000000000004f04 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    4f04:	55                   	push   %rbp
    4f05:	48 89 e5             	mov    %rsp,%rbp
    4f08:	48 83 ec 10          	sub    $0x10,%rsp
    4f0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    4f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f14:	48 89 c7             	mov    %rax,%rdi
    4f17:	e8 76 16 00 00       	call   6592 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>
    4f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f20:	48 89 c7             	mov    %rax,%rdi
    4f23:	e8 86 16 00 00       	call   65ae <_ZNSt20_Rb_tree_key_compareISt4lessINSt6thread2idEEEC1Ev>
    4f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f2c:	48 83 c0 08          	add    $0x8,%rax
    4f30:	48 89 c7             	mov    %rax,%rdi
    4f33:	e8 68 ec ff ff       	call   3ba0 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    4f38:	90                   	nop
    4f39:	c9                   	leave
    4f3a:	c3                   	ret
    4f3b:	90                   	nop

0000000000004f3c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>:
    4f3c:	55                   	push   %rbp
    4f3d:	48 89 e5             	mov    %rsp,%rbp
    4f40:	48 83 ec 10          	sub    $0x10,%rsp
    4f44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f4c:	48 89 c7             	mov    %rax,%rdi
    4f4f:	e8 66 16 00 00       	call   65ba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>
    4f54:	90                   	nop
    4f55:	c9                   	leave
    4f56:	c3                   	ret
    4f57:	90                   	nop

0000000000004f58 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    4f58:	55                   	push   %rbp
    4f59:	48 89 e5             	mov    %rsp,%rbp
    4f5c:	48 83 ec 10          	sub    $0x10,%rsp
    4f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    4f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f68:	48 89 c7             	mov    %rax,%rdi
    4f6b:	e8 bc 16 00 00       	call   662c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    4f70:	48 89 c2             	mov    %rax,%rdx
    4f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f77:	48 89 d6             	mov    %rdx,%rsi
    4f7a:	48 89 c7             	mov    %rax,%rdi
    4f7d:	e8 44 16 00 00       	call   65c6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
    4f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f86:	48 89 c7             	mov    %rax,%rdi
    4f89:	e8 c2 ee ff ff       	call   3e50 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EED1Ev>
    4f8e:	90                   	nop
    4f8f:	c9                   	leave
    4f90:	c3                   	ret
    4f91:	90                   	nop

0000000000004f92 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm>:
       *  %vector's current size the %vector is truncated, otherwise
       *  default constructed elements are appended.
       */
      _GLIBCXX20_CONSTEXPR
      void
      resize(size_type __new_size)
    4f92:	55                   	push   %rbp
    4f93:	48 89 e5             	mov    %rsp,%rbp
    4f96:	48 83 ec 10          	sub    $0x10,%rsp
    4f9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	if (__new_size > size())
    4fa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa6:	48 89 c7             	mov    %rax,%rdi
    4fa9:	e8 06 02 00 00       	call   51b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4fae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4fb2:	0f 92 c0             	setb   %al
    4fb5:	84 c0                	test   %al,%al
    4fb7:	74 24                	je     4fdd <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    4fb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fbd:	48 89 c7             	mov    %rax,%rdi
    4fc0:	e8 ef 01 00 00       	call   51b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4fc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4fc9:	48 29 c2             	sub    %rax,%rdx
    4fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fd0:	48 89 d6             	mov    %rdx,%rsi
    4fd3:	48 89 c7             	mov    %rax,%rdi
    4fd6:	e8 6b 16 00 00       	call   6646 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm>
	else if (__new_size < size())
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
      }
    4fdb:	eb 38                	jmp    5015 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    4fdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fe1:	48 89 c7             	mov    %rax,%rdi
    4fe4:	e8 cb 01 00 00       	call   51b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4fe9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    4fed:	0f 92 c0             	setb   %al
    4ff0:	84 c0                	test   %al,%al
    4ff2:	74 21                	je     5015 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ff8:	48 8b 00             	mov    (%rax),%rax
    4ffb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4fff:	48 c1 e2 03          	shl    $0x3,%rdx
    5003:	48 01 c2             	add    %rax,%rdx
    5006:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    500a:	48 89 d6             	mov    %rdx,%rsi
    500d:	48 89 c7             	mov    %rax,%rdi
    5010:	e8 3b 18 00 00       	call   6850 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>
      }
    5015:	90                   	nop
    5016:	c9                   	leave
    5017:	c3                   	ret

0000000000005018 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    5018:	55                   	push   %rbp
    5019:	48 89 e5             	mov    %rsp,%rbp
    501c:	48 83 ec 20          	sub    $0x20,%rsp
    5020:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    5024:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5028:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    502c:	48 89 d6             	mov    %rdx,%rsi
    502f:	48 89 c7             	mov    %rax,%rdi
    5032:	e8 79 18 00 00       	call   68b0 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    503b:	c9                   	leave
    503c:	c3                   	ret
    503d:	90                   	nop

000000000000503e <_ZNSt6vectorISt6threadSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    503e:	55                   	push   %rbp
    503f:	48 89 e5             	mov    %rsp,%rbp
    5042:	48 83 ec 20          	sub    $0x20,%rsp
    5046:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    504a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    504e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5052:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5056:	48 89 d6             	mov    %rdx,%rsi
    5059:	48 89 c7             	mov    %rax,%rdi
    505c:	e8 4f 18 00 00       	call   68b0 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5065:	c9                   	leave
    5066:	c3                   	ret

0000000000005067 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5067:	55                   	push   %rbp
    5068:	48 89 e5             	mov    %rsp,%rbp
    506b:	53                   	push   %rbx
    506c:	48 83 ec 18          	sub    $0x18,%rsp
    5070:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5074:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    5078:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    507c:	48 89 c7             	mov    %rax,%rdi
    507f:	e8 4a 18 00 00       	call   68ce <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>
    5084:	48 8b 18             	mov    (%rax),%rbx
    5087:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    508b:	48 89 c7             	mov    %rax,%rdi
    508e:	e8 3b 18 00 00       	call   68ce <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>
    5093:	48 8b 00             	mov    (%rax),%rax
    5096:	48 39 c3             	cmp    %rax,%rbx
    5099:	0f 95 c0             	setne  %al
    509c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50a0:	c9                   	leave
    50a1:	c3                   	ret

00000000000050a2 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    50a2:	55                   	push   %rbp
    50a3:	48 89 e5             	mov    %rsp,%rbp
    50a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    50aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ae:	48 8b 00             	mov    (%rax),%rax
    50b1:	48 8d 50 08          	lea    0x8(%rax),%rdx
    50b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50b9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    50bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    50c0:	5d                   	pop    %rbp
    50c1:	c3                   	ret

00000000000050c2 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    50c2:	55                   	push   %rbp
    50c3:	48 89 e5             	mov    %rsp,%rbp
    50c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    50ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ce:	48 8b 00             	mov    (%rax),%rax
    50d1:	5d                   	pop    %rbp
    50d2:	c3                   	ret
    50d3:	90                   	nop

00000000000050d4 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_>:
      thread(_Callable&& __f, _Args&&... __args)
    50d4:	55                   	push   %rbp
    50d5:	48 89 e5             	mov    %rsp,%rbp
    50d8:	41 55                	push   %r13
    50da:	41 54                	push   %r12
    50dc:	53                   	push   %rbx
    50dd:	48 83 ec 38          	sub    $0x38,%rsp
    50e1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    50e5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    50e9:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
      {
    50ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    50f1:	48 89 c7             	mov    %rax,%rdi
    50f4:	e8 31 eb ff ff       	call   3c2a <_ZNSt6thread2idC1Ev>
	auto __depend = nullptr;
    50f9:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    5100:	00 
	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
    5101:	bf 18 00 00 00       	mov    $0x18,%edi
    5106:	e8 b5 e1 ff ff       	call   32c0 <_Znwm@plt>
    510b:	48 89 c3             	mov    %rax,%rbx
    510e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    5114:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5118:	48 89 c7             	mov    %rax,%rdi
    511b:	e8 ca 17 00 00       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    5120:	49 89 c4             	mov    %rax,%r12
    5123:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5127:	48 89 c7             	mov    %rax,%rdi
    512a:	e8 ad 17 00 00       	call   68dc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    512f:	4c 89 e2             	mov    %r12,%rdx
    5132:	48 89 c6             	mov    %rax,%rsi
    5135:	48 89 df             	mov    %rbx,%rdi
    5138:	e8 d5 17 00 00       	call   6912 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEC1IJRS6_S5_EEEDpOT_>
    513d:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    5143:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5147:	48 89 de             	mov    %rbx,%rsi
    514a:	48 89 c7             	mov    %rax,%rdi
    514d:	e8 52 18 00 00       	call   69a4 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5152:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    5156:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    515a:	ba 00 00 00 00       	mov    $0x0,%edx
    515f:	48 89 ce             	mov    %rcx,%rsi
    5162:	48 89 c7             	mov    %rax,%rdi
    5165:	e8 16 e1 ff ff       	call   3280 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@plt>
    516a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    516e:	48 89 c7             	mov    %rax,%rdi
    5171:	e8 54 18 00 00       	call   69ca <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>
      }
    5176:	eb 31                	jmp    51a9 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xd5>
	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
    5178:	49 89 c4             	mov    %rax,%r12
    517b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    517f:	48 89 c7             	mov    %rax,%rdi
    5182:	e8 43 18 00 00       	call   69ca <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>
    5187:	eb 03                	jmp    518c <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xb8>
    5189:	49 89 c4             	mov    %rax,%r12
    518c:	45 84 ed             	test   %r13b,%r13b
    518f:	74 0d                	je     519e <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xca>
    5191:	be 18 00 00 00       	mov    $0x18,%esi
    5196:	48 89 df             	mov    %rbx,%rdi
    5199:	e8 32 e1 ff ff       	call   32d0 <_ZdlPvm@plt>
    519e:	4c 89 e0             	mov    %r12,%rax
    51a1:	48 89 c7             	mov    %rax,%rdi
    51a4:	e8 27 e3 ff ff       	call   34d0 <_Unwind_Resume@plt>
      }
    51a9:	48 83 c4 38          	add    $0x38,%rsp
    51ad:	5b                   	pop    %rbx
    51ae:	41 5c                	pop    %r12
    51b0:	41 5d                	pop    %r13
    51b2:	5d                   	pop    %rbp
    51b3:	c3                   	ret

00000000000051b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    51b4:	55                   	push   %rbp
    51b5:	48 89 e5             	mov    %rsp,%rbp
    51b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    51bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51c0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    51c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51c8:	48 8b 00             	mov    (%rax),%rax
    51cb:	48 29 c2             	sub    %rax,%rdx
    51ce:	48 89 d0             	mov    %rdx,%rax
    51d1:	48 c1 f8 03          	sar    $0x3,%rax
    51d5:	5d                   	pop    %rbp
    51d6:	c3                   	ret
    51d7:	90                   	nop

00000000000051d8 <_ZNSt11unique_lockISt5mutexEC1ERS0_>:

      unique_lock() noexcept
      : _M_device(0), _M_owns(false)
      { }

      explicit unique_lock(mutex_type& __m)
    51d8:	55                   	push   %rbp
    51d9:	48 89 e5             	mov    %rsp,%rbp
    51dc:	48 83 ec 10          	sub    $0x10,%rsp
    51e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_device(std::__addressof(__m)), _M_owns(false)
    51e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    51ec:	48 89 c7             	mov    %rax,%rdi
    51ef:	e8 3a 18 00 00       	call   6a2e <_ZSt11__addressofISt5mutexEPT_RS1_>
    51f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    51f8:	48 89 02             	mov    %rax,(%rdx)
    51fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ff:	c6 40 08 00          	movb   $0x0,0x8(%rax)
      {
	lock();
    5203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5207:	48 89 c7             	mov    %rax,%rdi
    520a:	e8 2d 18 00 00       	call   6a3c <_ZNSt11unique_lockISt5mutexE4lockEv>
	_M_owns = true;
    520f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5213:	c6 40 08 01          	movb   $0x1,0x8(%rax)
      }
    5217:	90                   	nop
    5218:	c9                   	leave
    5219:	c3                   	ret

000000000000521a <_ZNSt11unique_lockISt5mutexED1Ev>:
		    const chrono::duration<_Rep, _Period>& __rtime)
	: _M_device(std::__addressof(__m)),
	  _M_owns(_M_device->try_lock_for(__rtime))
	{ }

      ~unique_lock()
    521a:	55                   	push   %rbp
    521b:	48 89 e5             	mov    %rsp,%rbp
    521e:	48 83 ec 10          	sub    $0x10,%rsp
    5222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (_M_owns)
    5226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    522a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    522e:	84 c0                	test   %al,%al
    5230:	74 0c                	je     523e <_ZNSt11unique_lockISt5mutexED1Ev+0x24>
	  unlock();
    5232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5236:	48 89 c7             	mov    %rax,%rdi
    5239:	e8 50 18 00 00       	call   6a8e <_ZNSt11unique_lockISt5mutexE6unlockEv>
      }
    523e:	90                   	nop
    523f:	c9                   	leave
    5240:	c3                   	ret
    5241:	90                   	nop

0000000000005242 <_ZNKSt8functionIFvvEEclEv>:
       *
       *  The function call operator invokes the target function object
       *  stored by `this`.
       */
      _Res
      operator()(_ArgTypes... __args) const
    5242:	55                   	push   %rbp
    5243:	48 89 e5             	mov    %rsp,%rbp
    5246:	48 83 ec 10          	sub    $0x10,%rsp
    524a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (_M_empty())
    524e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5252:	48 89 c7             	mov    %rax,%rdi
    5255:	e8 02 e9 ff ff       	call   3b5c <_ZNKSt14_Function_base8_M_emptyEv>
    525a:	84 c0                	test   %al,%al
    525c:	74 05                	je     5263 <_ZNKSt8functionIFvvEEclEv+0x21>
	  __throw_bad_function_call();
    525e:	e8 3d de ff ff       	call   30a0 <_ZSt25__throw_bad_function_callv@plt>
	return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
    5263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5267:	48 8b 50 18          	mov    0x18(%rax),%rdx
    526b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    526f:	48 89 c7             	mov    %rax,%rdi
    5272:	ff d2                	call   *%rdx
    5274:	90                   	nop
      }
    5275:	c9                   	leave
    5276:	c3                   	ret
    5277:	90                   	nop

0000000000005278 <_ZNSt14_Function_baseC1Ev>:
    _Function_base() = default;
    5278:	55                   	push   %rbp
    5279:	48 89 e5             	mov    %rsp,%rbp
    527c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5284:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    528b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5292:	00 
    5293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5297:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    529e:	00 
    529f:	90                   	nop
    52a0:	5d                   	pop    %rbp
    52a1:	c3                   	ret

00000000000052a2 <_ZNSt8functionIFvvEEC1IZN4neko10ThreadPool9submitJobERKS1_RbEUlvE_vEEOT_>:
	function(_Functor&& __f)
    52a2:	55                   	push   %rbp
    52a3:	48 89 e5             	mov    %rsp,%rbp
    52a6:	48 83 ec 10          	sub    $0x10,%rsp
    52aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Function_base()
    52b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    52ba:	0f 11 00             	movups %xmm0,(%rax)
    52bd:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    52c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c6:	48 89 c7             	mov    %rax,%rdi
    52c9:	e8 aa ff ff ff       	call   5278 <_ZNSt14_Function_baseC1Ev>
    52ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52d2:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    52d9:	00 
	  if (_My_handler::_M_not_empty_function(__f))
    52da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52de:	48 89 c7             	mov    %rax,%rdi
    52e1:	e8 f3 17 00 00       	call   6ad9 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E21_M_not_empty_functionIS9_EEbRKT_>
    52e6:	84 c0                	test   %al,%al
    52e8:	74 3c                	je     5326 <_ZNSt8functionIFvvEEC1IZN4neko10ThreadPool9submitJobERKS1_RbEUlvE_vEEOT_+0x84>
	      _My_handler::_M_init_functor(_M_functor,
    52ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52ee:	48 89 c7             	mov    %rax,%rdi
    52f1:	e8 f2 17 00 00       	call   6ae8 <_ZSt7forwardIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceIS9_E4typeE>
    52f6:	48 89 c2             	mov    %rax,%rdx
    52f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52fd:	48 89 d6             	mov    %rdx,%rsi
    5300:	48 89 c7             	mov    %rax,%rdi
    5303:	e8 ee 17 00 00       	call   6af6 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E15_M_init_functorIS9_EEvRSt9_Any_dataOT_>
	      _M_invoker = &_My_handler::_M_invoke;
    5308:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    530c:	48 8d 15 14 18 00 00 	lea    0x1814(%rip),%rdx        # 6b27 <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E9_M_invokeERKSt9_Any_data>
    5313:	48 89 50 18          	mov    %rdx,0x18(%rax)
	      _M_manager = &_My_handler::_M_manager;
    5317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    531b:	48 8d 15 28 18 00 00 	lea    0x1828(%rip),%rdx        # 6b4a <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E10_M_managerERSt9_Any_dataRKSA_St18_Manager_operation>
    5322:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    5326:	90                   	nop
    5327:	c9                   	leave
    5328:	c3                   	ret
    5329:	90                   	nop

000000000000532a <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushEOS2_>:
      push(const value_type& __x)
      { c.push_back(__x); }

#if __cplusplus >= 201103L
      void
      push(value_type&& __x)
    532a:	55                   	push   %rbp
    532b:	48 89 e5             	mov    %rsp,%rbp
    532e:	53                   	push   %rbx
    532f:	48 83 ec 18          	sub    $0x18,%rsp
    5333:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5337:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { c.push_back(std::move(__x)); }
    533b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    533f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5343:	48 89 c7             	mov    %rax,%rdi
    5346:	e8 7a 18 00 00       	call   6bc5 <_ZSt4moveIRSt8functionIFvvEEEONSt16remove_referenceIT_E4typeEOS5_>
    534b:	48 89 c6             	mov    %rax,%rsi
    534e:	48 89 df             	mov    %rbx,%rdi
    5351:	e8 7e 18 00 00       	call   6bd4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backEOS2_>
    5356:	90                   	nop
    5357:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    535b:	c9                   	leave
    535c:	c3                   	ret
    535d:	90                   	nop

000000000000535e <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushERKS2_>:
      push(const value_type& __x)
    535e:	55                   	push   %rbp
    535f:	48 89 e5             	mov    %rsp,%rbp
    5362:	48 83 ec 10          	sub    $0x10,%rsp
    5366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    536a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { c.push_back(__x); }
    536e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5372:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5376:	48 89 d6             	mov    %rdx,%rsi
    5379:	48 89 c7             	mov    %rax,%rdi
    537c:	e8 85 18 00 00       	call   6c06 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_>
    5381:	90                   	nop
    5382:	c9                   	leave
    5383:	c3                   	ret

0000000000005384 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>:
      empty() const
    5384:	55                   	push   %rbp
    5385:	48 89 e5             	mov    %rsp,%rbp
    5388:	48 83 ec 10          	sub    $0x10,%rsp
    538c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return c.empty(); }
    5390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5394:	48 89 c7             	mov    %rax,%rdi
    5397:	e8 da 18 00 00       	call   6c76 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE5emptyEv>
    539c:	c9                   	leave
    539d:	c3                   	ret

000000000000539e <_ZNSt6vectorISt6threadSaIS0_EE5clearEv>:
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      void
      clear() _GLIBCXX_NOEXCEPT
    539e:	55                   	push   %rbp
    539f:	48 89 e5             	mov    %rsp,%rbp
    53a2:	48 83 ec 10          	sub    $0x10,%rsp
    53a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase_at_end(this->_M_impl._M_start); }
    53aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ae:	48 8b 10             	mov    (%rax),%rdx
    53b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b5:	48 89 d6             	mov    %rdx,%rsi
    53b8:	48 89 c7             	mov    %rax,%rdi
    53bb:	e8 90 14 00 00       	call   6850 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>
    53c0:	90                   	nop
    53c1:	c9                   	leave
    53c2:	c3                   	ret
    53c3:	90                   	nop

00000000000053c4 <_ZNSt8functionIFvvEEC1Ev>:
      function() noexcept
    53c4:	55                   	push   %rbp
    53c5:	48 89 e5             	mov    %rsp,%rbp
    53c8:	48 83 ec 10          	sub    $0x10,%rsp
    53cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Function_base() { }
    53d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53d4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    53d8:	0f 11 00             	movups %xmm0,(%rax)
    53db:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    53e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e4:	48 89 c7             	mov    %rax,%rdi
    53e7:	e8 8c fe ff ff       	call   5278 <_ZNSt14_Function_baseC1Ev>
    53ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53f0:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    53f7:	00 
    53f8:	90                   	nop
    53f9:	c9                   	leave
    53fa:	c3                   	ret
    53fb:	90                   	nop

00000000000053fc <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_>:
    void
    wait(unique_lock<mutex>& __lock);

    template<typename _Predicate>
      void
      wait(unique_lock<mutex>& __lock, _Predicate __p)
    53fc:	55                   	push   %rbp
    53fd:	48 89 e5             	mov    %rsp,%rbp
    5400:	48 83 ec 20          	sub    $0x20,%rsp
    5404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5408:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    540c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	while (!__p())
    5410:	eb 13                	jmp    5425 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_+0x29>
	  wait(__lock);
    5412:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    541a:	48 89 d6             	mov    %rdx,%rsi
    541d:	48 89 c7             	mov    %rax,%rdi
    5420:	e8 4b dc ff ff       	call   3070 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@plt>
	while (!__p())
    5425:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5429:	48 89 c7             	mov    %rax,%rdi
    542c:	e8 9b ef ff ff       	call   43cc <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv>
    5431:	83 f0 01             	xor    $0x1,%eax
    5434:	84 c0                	test   %al,%al
    5436:	75 da                	jne    5412 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_+0x16>
      }
    5438:	90                   	nop
    5439:	90                   	nop
    543a:	c9                   	leave
    543b:	c3                   	ret

000000000000543c <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5frontEv>:
      front()
    543c:	55                   	push   %rbp
    543d:	48 89 e5             	mov    %rsp,%rbp
    5440:	48 83 ec 10          	sub    $0x10,%rsp
    5444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return c.front();
    5448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    544c:	48 89 c7             	mov    %rax,%rdi
    544f:	e8 4c 18 00 00       	call   6ca0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5frontEv>
      }
    5454:	c9                   	leave
    5455:	c3                   	ret

0000000000005456 <_ZNSt8functionIFvvEEaSERKS1_>:
      operator=(const function& __x)
    5456:	55                   	push   %rbp
    5457:	48 89 e5             	mov    %rsp,%rbp
    545a:	48 83 ec 30          	sub    $0x30,%rsp
    545e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5462:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	function(__x).swap(*this);
    5466:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    546a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    546e:	48 89 d6             	mov    %rdx,%rsi
    5471:	48 89 c7             	mov    %rax,%rdi
    5474:	e8 55 18 00 00       	call   6cce <_ZNSt8functionIFvvEEC1ERKS1_>
    5479:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    547d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5481:	48 89 d6             	mov    %rdx,%rsi
    5484:	48 89 c7             	mov    %rax,%rdi
    5487:	e8 ec 18 00 00       	call   6d78 <_ZNSt8functionIFvvEE4swapERS1_>
    548c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5490:	48 89 c7             	mov    %rax,%rdi
    5493:	e8 96 ec ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
	return *this;
    5498:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    549c:	c9                   	leave
    549d:	c3                   	ret

000000000000549e <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE3popEv>:
       *  Note that no data is returned, and if the first element's
       *  data is needed, it should be retrieved before pop() is
       *  called.
       */
      void
      pop()
    549e:	55                   	push   %rbp
    549f:	48 89 e5             	mov    %rsp,%rbp
    54a2:	48 83 ec 10          	sub    $0x10,%rsp
    54a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	__glibcxx_requires_nonempty();
	c.pop_front();
    54aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54ae:	48 89 c7             	mov    %rax,%rdi
    54b1:	e8 1e 19 00 00       	call   6dd4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv>
      }
    54b6:	90                   	nop
    54b7:	c9                   	leave
    54b8:	c3                   	ret
    54b9:	90                   	nop

00000000000054ba <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    54ba:	55                   	push   %rbp
    54bb:	48 89 e5             	mov    %rsp,%rbp
    54be:	53                   	push   %rbx
    54bf:	48 83 ec 48          	sub    $0x48,%rsp
    54c3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    54c7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    54cb:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    54cf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    54d3:	48 89 d6             	mov    %rdx,%rsi
    54d6:	48 89 c7             	mov    %rax,%rdi
    54d9:	e8 64 19 00 00       	call   6e42 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE11lower_boundERS5_>
    54de:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    54e2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    54e6:	48 89 c7             	mov    %rax,%rdi
    54e9:	e8 7a 19 00 00       	call   6e68 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE3endEv>
    54ee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    54f2:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    54f6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    54fa:	48 89 d6             	mov    %rdx,%rsi
    54fd:	48 89 c7             	mov    %rax,%rdi
    5500:	e8 7d 19 00 00       	call   6e82 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>
    5505:	84 c0                	test   %al,%al
    5507:	75 32                	jne    553b <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x81>
    5509:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    550d:	48 89 c7             	mov    %rax,%rdi
    5510:	e8 8f 19 00 00       	call   6ea4 <_ZNKSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE8key_compEv>
    5515:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    5519:	48 89 c7             	mov    %rax,%rdi
    551c:	e8 9f 19 00 00       	call   6ec0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>
    5521:	48 89 c2             	mov    %rax,%rdx
    5524:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    5528:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    552c:	48 89 ce             	mov    %rcx,%rsi
    552f:	48 89 c7             	mov    %rax,%rdi
    5532:	e8 a7 19 00 00       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    5537:	84 c0                	test   %al,%al
    5539:	74 07                	je     5542 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x88>
    553b:	b8 01 00 00 00       	mov    $0x1,%eax
    5540:	eb 05                	jmp    5547 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x8d>
    5542:	b8 00 00 00 00       	mov    $0x0,%eax
    5547:	84 c0                	test   %al,%al
    5549:	74 5d                	je     55a8 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    554b:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    554f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5553:	48 89 c7             	mov    %rax,%rdi
    5556:	e8 d2 0d 00 00       	call   632d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    555b:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    555e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5562:	48 89 d6             	mov    %rdx,%rsi
    5565:	48 89 c7             	mov    %rax,%rdi
    5568:	e8 a0 19 00 00       	call   6f0d <_ZSt16forward_as_tupleIJNSt6thread2idEEESt5tupleIJDpOT_EES5_>
    556d:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    5571:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5575:	48 89 d6             	mov    %rdx,%rsi
    5578:	48 89 c7             	mov    %rax,%rdi
    557b:	e8 c2 19 00 00       	call   6f42 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEEC1ERKSt17_Rb_tree_iteratorIS4_E>
    5580:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    5584:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    5588:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    558c:	49 89 c8             	mov    %rcx,%r8
    558f:	48 89 d1             	mov    %rdx,%rcx
    5592:	48 8d 15 e7 e1 00 00 	lea    0xe1e7(%rip),%rdx        # 13780 <_ZSt19piecewise_construct>
    5599:	48 89 c6             	mov    %rax,%rsi
    559c:	48 89 df             	mov    %rbx,%rdi
    559f:	e8 bc 19 00 00       	call   6f60 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_>
    55a4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    55a8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    55ac:	48 89 c7             	mov    %rax,%rdi
    55af:	e8 0c 19 00 00       	call   6ec0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>
    55b4:	48 83 c0 08          	add    $0x8,%rax
      }
    55b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55bc:	c9                   	leave
    55bd:	c3                   	ret

00000000000055be <_ZNKSt6vectorISt17reference_wrapperIbESaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    55be:	55                   	push   %rbp
    55bf:	48 89 e5             	mov    %rsp,%rbp
    55c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    55c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ca:	48 8b 50 08          	mov    0x8(%rax),%rdx
    55ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d2:	48 8b 00             	mov    (%rax),%rax
    55d5:	48 29 c2             	sub    %rax,%rdx
    55d8:	48 89 d0             	mov    %rdx,%rax
    55db:	48 c1 f8 03          	sar    $0x3,%rax
    55df:	5d                   	pop    %rbp
    55e0:	c3                   	ret
    55e1:	90                   	nop

00000000000055e2 <_ZNKSt6vectorISt17reference_wrapperIbESaIS1_EEixEm>:
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
    55e2:	55                   	push   %rbp
    55e3:	48 89 e5             	mov    %rsp,%rbp
    55e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    55ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55f2:	48 8b 00             	mov    (%rax),%rax
    55f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    55f9:	48 c1 e2 03          	shl    $0x3,%rdx
    55fd:	48 01 d0             	add    %rdx,%rax
      }
    5600:	5d                   	pop    %rbp
    5601:	c3                   	ret

0000000000005602 <_ZNKSt17reference_wrapperIbEcvRbEv>:

      reference_wrapper&
      operator=(const reference_wrapper&) = default;

      _GLIBCXX20_CONSTEXPR
      operator _Tp&() const noexcept
    5602:	55                   	push   %rbp
    5603:	48 89 e5             	mov    %rsp,%rbp
    5606:	48 83 ec 10          	sub    $0x10,%rsp
    560a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->get(); }
    560e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5612:	48 89 c7             	mov    %rax,%rdi
    5615:	e8 42 1a 00 00       	call   705c <_ZNKSt17reference_wrapperIbE3getEv>
    561a:	c9                   	leave
    561b:	c3                   	ret

000000000000561c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    561c:	55                   	push   %rbp
    561d:	48 89 e5             	mov    %rsp,%rbp
    5620:	48 83 ec 10          	sub    $0x10,%rsp
    5624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    562c:	48 89 c7             	mov    %rax,%rdi
    562f:	e8 3a 1a 00 00       	call   706e <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    5634:	90                   	nop
    5635:	c9                   	leave
    5636:	c3                   	ret
    5637:	90                   	nop

0000000000005638 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    5638:	55                   	push   %rbp
    5639:	48 89 e5             	mov    %rsp,%rbp
    563c:	48 83 ec 10          	sub    $0x10,%rsp
    5640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5648:	48 89 c7             	mov    %rax,%rdi
    564b:	e8 cc ff ff ff       	call   561c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1Ev>
    5650:	90                   	nop
    5651:	c9                   	leave
    5652:	c3                   	ret
    5653:	90                   	nop

0000000000005654 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    5654:	55                   	push   %rbp
    5655:	48 89 e5             	mov    %rsp,%rbp
    5658:	48 83 ec 10          	sub    $0x10,%rsp
    565c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    5660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5664:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    566b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    566f:	48 89 c7             	mov    %rax,%rdi
    5672:	e8 c1 ff ff ff       	call   5638 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    5677:	90                   	nop
    5678:	c9                   	leave
    5679:	c3                   	ret

000000000000567a <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    567a:	55                   	push   %rbp
    567b:	48 89 e5             	mov    %rsp,%rbp
    567e:	53                   	push   %rbx
    567f:	48 83 ec 28          	sub    $0x28,%rsp
    5683:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    5687:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    568b:	48 89 c7             	mov    %rax,%rdi
    568e:	e8 f7 19 00 00       	call   708a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    5693:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    5697:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    569b:	48 8b 00             	mov    (%rax),%rax
    569e:	48 85 c0             	test   %rax,%rax
    56a1:	74 29                	je     56cc <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    56a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56a7:	48 89 c7             	mov    %rax,%rdi
    56aa:	e8 f5 19 00 00       	call   70a4 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>
    56af:	48 89 c3             	mov    %rax,%rbx
    56b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56b6:	48 89 c7             	mov    %rax,%rdi
    56b9:	e8 00 1a 00 00       	call   70be <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>
    56be:	48 8b 00             	mov    (%rax),%rax
    56c1:	48 89 c6             	mov    %rax,%rsi
    56c4:	48 89 df             	mov    %rbx,%rdi
    56c7:	e8 1c 1a 00 00       	call   70e8 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
	__ptr = pointer();
    56cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56d0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    56d7:	90                   	nop
    56d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    56dc:	c9                   	leave
    56dd:	c3                   	ret

00000000000056de <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    56de:	55                   	push   %rbp
    56df:	48 89 e5             	mov    %rsp,%rbp
    56e2:	48 83 ec 10          	sub    $0x10,%rsp
    56e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56ee:	48 89 c7             	mov    %rax,%rdi
    56f1:	e8 28 1a 00 00       	call   711e <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    56f6:	90                   	nop
    56f7:	c9                   	leave
    56f8:	c3                   	ret
    56f9:	90                   	nop

00000000000056fa <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    56fa:	55                   	push   %rbp
    56fb:	48 89 e5             	mov    %rsp,%rbp
    56fe:	48 83 ec 10          	sub    $0x10,%rsp
    5702:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    570a:	48 89 c7             	mov    %rax,%rdi
    570d:	e8 cc ff ff ff       	call   56de <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1Ev>
    5712:	90                   	nop
    5713:	c9                   	leave
    5714:	c3                   	ret
    5715:	90                   	nop

0000000000005716 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    5716:	55                   	push   %rbp
    5717:	48 89 e5             	mov    %rsp,%rbp
    571a:	48 83 ec 10          	sub    $0x10,%rsp
    571e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    5722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5726:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    572d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5731:	48 89 c7             	mov    %rax,%rdi
    5734:	e8 c1 ff ff ff       	call   56fa <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    5739:	90                   	nop
    573a:	c9                   	leave
    573b:	c3                   	ret

000000000000573c <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    573c:	55                   	push   %rbp
    573d:	48 89 e5             	mov    %rsp,%rbp
    5740:	53                   	push   %rbx
    5741:	48 83 ec 28          	sub    $0x28,%rsp
    5745:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    5749:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    574d:	48 89 c7             	mov    %rax,%rdi
    5750:	e8 e5 19 00 00       	call   713a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    5755:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    5759:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    575d:	48 8b 00             	mov    (%rax),%rax
    5760:	48 85 c0             	test   %rax,%rax
    5763:	74 29                	je     578e <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    5765:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5769:	48 89 c7             	mov    %rax,%rdi
    576c:	e8 e3 19 00 00       	call   7154 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>
    5771:	48 89 c3             	mov    %rax,%rbx
    5774:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5778:	48 89 c7             	mov    %rax,%rdi
    577b:	e8 ee 19 00 00       	call   716e <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>
    5780:	48 8b 00             	mov    (%rax),%rax
    5783:	48 89 c6             	mov    %rax,%rsi
    5786:	48 89 df             	mov    %rbx,%rdi
    5789:	e8 3e 1a 00 00       	call   71cc <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
	__ptr = pointer();
    578e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5792:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    5799:	90                   	nop
    579a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    579e:	c9                   	leave
    579f:	c3                   	ret

00000000000057a0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    57a0:	55                   	push   %rbp
    57a1:	48 89 e5             	mov    %rsp,%rbp
    57a4:	48 83 ec 10          	sub    $0x10,%rsp
    57a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57b0:	48 89 c7             	mov    %rax,%rdi
    57b3:	e8 4a 1a 00 00       	call   7202 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    57b8:	90                   	nop
    57b9:	c9                   	leave
    57ba:	c3                   	ret
    57bb:	90                   	nop

00000000000057bc <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    57bc:	55                   	push   %rbp
    57bd:	48 89 e5             	mov    %rsp,%rbp
    57c0:	48 83 ec 10          	sub    $0x10,%rsp
    57c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57cc:	48 89 c7             	mov    %rax,%rdi
    57cf:	e8 cc ff ff ff       	call   57a0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1Ev>
    57d4:	90                   	nop
    57d5:	c9                   	leave
    57d6:	c3                   	ret
    57d7:	90                   	nop

00000000000057d8 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    57d8:	55                   	push   %rbp
    57d9:	48 89 e5             	mov    %rsp,%rbp
    57dc:	48 83 ec 10          	sub    $0x10,%rsp
    57e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    57e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57e8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    57ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57f3:	48 89 c7             	mov    %rax,%rdi
    57f6:	e8 c1 ff ff ff       	call   57bc <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    57fb:	90                   	nop
    57fc:	c9                   	leave
    57fd:	c3                   	ret

00000000000057fe <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    57fe:	55                   	push   %rbp
    57ff:	48 89 e5             	mov    %rsp,%rbp
    5802:	53                   	push   %rbx
    5803:	48 83 ec 28          	sub    $0x28,%rsp
    5807:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    580b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    580f:	48 89 c7             	mov    %rax,%rdi
    5812:	e8 07 1a 00 00       	call   721e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    5817:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    581b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    581f:	48 8b 00             	mov    (%rax),%rax
    5822:	48 85 c0             	test   %rax,%rax
    5825:	74 29                	je     5850 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    5827:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    582b:	48 89 c7             	mov    %rax,%rdi
    582e:	e8 05 1a 00 00       	call   7238 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE11get_deleterEv>
    5833:	48 89 c3             	mov    %rax,%rbx
    5836:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    583a:	48 89 c7             	mov    %rax,%rdi
    583d:	e8 10 1a 00 00       	call   7252 <_ZSt4moveIRPN4neko10ThreadPoolEEONSt16remove_referenceIT_E4typeEOS5_>
    5842:	48 8b 00             	mov    (%rax),%rax
    5845:	48 89 c6             	mov    %rax,%rsi
    5848:	48 89 df             	mov    %rbx,%rdi
    584b:	e8 10 1a 00 00       	call   7260 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>
	__ptr = pointer();
    5850:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5854:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    585b:	90                   	nop
    585c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5860:	c9                   	leave
    5861:	c3                   	ret

0000000000005862 <_ZN4neko8SettingsUt_C1Ev>:
  medium = 2,
  high = 1,
};

struct Settings {
  struct {
    5862:	55                   	push   %rbp
    5863:	48 89 e5             	mov    %rsp,%rbp
    5866:	53                   	push   %rbx
    5867:	48 83 ec 28          	sub    $0x28,%rsp
    586b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    586f:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5873:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5877:	48 89 c7             	mov    %rax,%rdi
    587a:	e8 61 dc ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    587f:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5883:	48 89 c2             	mov    %rax,%rdx
    5886:	48 8d 05 4d de 00 00 	lea    0xde4d(%rip),%rax        # 136da <_ZN6__pstl9execution2v1L5unseqE+0x6f>
    588d:	48 89 c6             	mov    %rax,%rsi
    5890:	48 89 df             	mov    %rbx,%rdi
    5893:	e8 ba f3 ff ff       	call   4c52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    5898:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    589c:	48 89 c7             	mov    %rax,%rdi
    589f:	e8 9c da ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    58a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58a8:	c7 40 20 00 00 40 00 	movl   $0x400000,0x20(%rax)
    58af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58b3:	48 8d 58 28          	lea    0x28(%rax),%rbx
    58b7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    58bb:	48 89 c7             	mov    %rax,%rdi
    58be:	e8 1d dc ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    58c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    58c7:	48 89 c2             	mov    %rax,%rdx
    58ca:	48 8d 05 1c de 00 00 	lea    0xde1c(%rip),%rax        # 136ed <_ZN6__pstl9execution2v1L5unseqE+0x82>
    58d1:	48 89 c6             	mov    %rax,%rsi
    58d4:	48 89 df             	mov    %rbx,%rdi
    58d7:	e8 76 f3 ff ff       	call   4c52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    58dc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    58e0:	48 89 c7             	mov    %rax,%rdi
    58e3:	e8 58 da ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    58e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58ec:	c7 40 48 00 00 40 00 	movl   $0x400000,0x48(%rax)
    58f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58f7:	c7 40 4c 00 30 40 00 	movl   $0x403000,0x4c(%rax)
    58fe:	eb 40                	jmp    5940 <_ZN4neko8SettingsUt_C1Ev+0xde>
    5900:	48 89 c3             	mov    %rax,%rbx
    5903:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5907:	48 89 c7             	mov    %rax,%rdi
    590a:	e8 31 da ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    590f:	48 89 d8             	mov    %rbx,%rax
    5912:	48 89 c7             	mov    %rax,%rdi
    5915:	e8 b6 db ff ff       	call   34d0 <_Unwind_Resume@plt>
    591a:	48 89 c3             	mov    %rax,%rbx
    591d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5921:	48 89 c7             	mov    %rax,%rdi
    5924:	e8 17 da ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    5929:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    592d:	48 89 c7             	mov    %rax,%rdi
    5930:	e8 2b d8 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5935:	48 89 d8             	mov    %rbx,%rax
    5938:	48 89 c7             	mov    %rax,%rdi
    593b:	e8 90 db ff ff       	call   34d0 <_Unwind_Resume@plt>
    5940:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5944:	c9                   	leave
    5945:	c3                   	ret

0000000000005946 <_ZN4neko8SettingsUt_D1Ev>:
    5946:	55                   	push   %rbp
    5947:	48 89 e5             	mov    %rsp,%rbp
    594a:	48 83 ec 10          	sub    $0x10,%rsp
    594e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5956:	48 83 c0 28          	add    $0x28,%rax
    595a:	48 89 c7             	mov    %rax,%rdi
    595d:	e8 fe d7 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5966:	48 89 c7             	mov    %rax,%rdi
    5969:	e8 f2 d7 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    596e:	90                   	nop
    596f:	c9                   	leave
    5970:	c3                   	ret
    5971:	90                   	nop

0000000000005972 <_ZN4neko8SettingsUt0_C1Ev>:
    u32 appVersion = VK_MAKE_VERSION(1, 0, 0);
    std::string engineName = "Neko Engine";
    u32 engineVersion = VK_MAKE_VERSION(1, 0, 0);
    u32 apiVersion = VK_API_VERSION_1_3;
  } general;
  struct {
    5972:	55                   	push   %rbp
    5973:	48 89 e5             	mov    %rsp,%rbp
    5976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    597a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    597e:	c7 00 20 03 00 00    	movl   $0x320,(%rax)
    5984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5988:	c7 40 04 58 02 00 00 	movl   $0x258,0x4(%rax)
    598f:	90                   	nop
    5990:	5d                   	pop    %rbp
    5991:	c3                   	ret

0000000000005992 <_ZN4neko8SettingsUt1_C1Ev>:
    u32 screenWidth = 800;
    u32 screenHeight = 600;

  } graphics;

  struct {
    5992:	55                   	push   %rbp
    5993:	48 89 e5             	mov    %rsp,%rbp
    5996:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    599a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    599e:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    59a4:	90                   	nop
    59a5:	5d                   	pop    %rbp
    59a6:	c3                   	ret
    59a7:	90                   	nop

00000000000059a8 <_ZN4neko8SettingsC1Ev>:
struct Settings {
    59a8:	55                   	push   %rbp
    59a9:	48 89 e5             	mov    %rsp,%rbp
    59ac:	48 83 ec 10          	sub    $0x10,%rsp
    59b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59b8:	48 89 c7             	mov    %rax,%rdi
    59bb:	e8 a2 fe ff ff       	call   5862 <_ZN4neko8SettingsUt_C1Ev>
    59c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59c4:	48 83 c0 50          	add    $0x50,%rax
    59c8:	48 89 c7             	mov    %rax,%rdi
    59cb:	e8 a2 ff ff ff       	call   5972 <_ZN4neko8SettingsUt0_C1Ev>
    59d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59d4:	48 83 c0 58          	add    $0x58,%rax
    59d8:	48 89 c7             	mov    %rax,%rdi
    59db:	e8 b2 ff ff ff       	call   5992 <_ZN4neko8SettingsUt1_C1Ev>
    59e0:	90                   	nop
    59e1:	c9                   	leave
    59e2:	c3                   	ret

00000000000059e3 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
   *  @relates unique_ptr
   */
  template<typename _Tp, typename... _Args>
    _GLIBCXX23_CONSTEXPR
    inline __detail::__unique_ptr_t<_Tp>
    make_unique(_Args&&... __args)
    59e3:	55                   	push   %rbp
    59e4:	48 89 e5             	mov    %rsp,%rbp
    59e7:	41 54                	push   %r12
    59e9:	53                   	push   %rbx
    59ea:	48 83 ec 10          	sub    $0x10,%rsp
    59ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    59f2:	bf 60 00 00 00       	mov    $0x60,%edi
    59f7:	e8 c4 d8 ff ff       	call   32c0 <_Znwm@plt>
    59fc:	48 89 c6             	mov    %rax,%rsi
    59ff:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5a05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5a09:	b8 00 00 00 00       	mov    $0x0,%eax
    5a0e:	ba 0c 00 00 00       	mov    $0xc,%edx
    5a13:	48 89 f7             	mov    %rsi,%rdi
    5a16:	48 89 d1             	mov    %rdx,%rcx
    5a19:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5a1c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5a20:	e8 83 ff ff ff       	call   59a8 <_ZN4neko8SettingsC1Ev>
    5a25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a29:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    5a2d:	48 89 c7             	mov    %rax,%rdi
    5a30:	e8 87 18 00 00       	call   72bc <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5a35:	eb 21                	jmp    5a58 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x75>
    5a37:	48 89 c3             	mov    %rax,%rbx
    5a3a:	45 84 e4             	test   %r12b,%r12b
    5a3d:	74 0e                	je     5a4d <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x6a>
    5a3f:	be 60 00 00 00       	mov    $0x60,%esi
    5a44:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5a48:	e8 83 d8 ff ff       	call   32d0 <_ZdlPvm@plt>
    5a4d:	48 89 d8             	mov    %rbx,%rax
    5a50:	48 89 c7             	mov    %rax,%rdi
    5a53:	e8 78 da ff ff       	call   34d0 <_Unwind_Resume@plt>
    5a58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a5c:	48 83 c4 10          	add    $0x10,%rsp
    5a60:	5b                   	pop    %rbx
    5a61:	41 5c                	pop    %r12
    5a63:	5d                   	pop    %rbp
    5a64:	c3                   	ret
    5a65:	90                   	nop

0000000000005a66 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    5a66:	55                   	push   %rbp
    5a67:	48 89 e5             	mov    %rsp,%rbp
    5a6a:	48 83 ec 10          	sub    $0x10,%rsp
    5a6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    5a76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a7a:	48 89 c7             	mov    %rax,%rdi
    5a7d:	e8 c4 18 00 00       	call   7346 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE7releaseEv>
    5a82:	48 89 c2             	mov    %rax,%rdx
    5a85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a89:	48 89 d6             	mov    %rdx,%rsi
    5a8c:	48 89 c7             	mov    %rax,%rdi
    5a8f:	e8 4e 18 00 00       	call   72e2 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    5a94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a98:	48 89 c7             	mov    %rax,%rdi
    5a9b:	e8 de 18 00 00       	call   737e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    5aa0:	48 89 c7             	mov    %rax,%rdi
    5aa3:	e8 f0 18 00 00       	call   7398 <_ZSt7forwardISt14default_deleteIN4neko8SettingsEEEOT_RNSt16remove_referenceIS4_E4typeE>
    5aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aac:	48 89 c7             	mov    %rax,%rdi
    5aaf:	e8 ca 18 00 00       	call   737e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    5ab4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5ab8:	c9                   	leave
    5ab9:	c3                   	ret

0000000000005aba <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    5aba:	55                   	push   %rbp
    5abb:	48 89 e5             	mov    %rsp,%rbp
    5abe:	48 83 ec 10          	sub    $0x10,%rsp
    5ac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    5ac6:	e8 b3 dd ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
    5acb:	84 c0                	test   %al,%al
    5acd:	74 18                	je     5ae7 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    5acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ad3:	48 89 c7             	mov    %rax,%rdi
    5ad6:	e8 cb 18 00 00       	call   73a6 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
    5adb:	48 85 c0             	test   %rax,%rax
    5ade:	75 07                	jne    5ae7 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    5ae0:	b8 01 00 00 00       	mov    $0x1,%eax
    5ae5:	eb 05                	jmp    5aec <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x32>
    5ae7:	b8 00 00 00 00       	mov    $0x0,%eax
    5aec:	84 c0                	test   %al,%al
	return *get();
    5aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5af2:	48 89 c7             	mov    %rax,%rdi
    5af5:	e8 ac 18 00 00       	call   73a6 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
      }
    5afa:	c9                   	leave
    5afb:	c3                   	ret

0000000000005afc <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    5afc:	55                   	push   %rbp
    5afd:	48 89 e5             	mov    %rsp,%rbp
    5b00:	41 54                	push   %r12
    5b02:	53                   	push   %rbx
    5b03:	48 83 ec 20          	sub    $0x20,%rsp
    5b07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b0b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5b0f:	bf f8 00 00 00       	mov    $0xf8,%edi
    5b14:	e8 a7 d7 ff ff       	call   32c0 <_Znwm@plt>
    5b19:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5b1d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5b23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5b27:	48 89 c7             	mov    %rax,%rdi
    5b2a:	e8 91 18 00 00       	call   73c0 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    5b2f:	48 89 c6             	mov    %rax,%rsi
    5b32:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    5b36:	e8 85 e3 ff ff       	call   3ec0 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE>
    5b3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b3f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    5b43:	48 89 c7             	mov    %rax,%rdi
    5b46:	e8 a9 18 00 00       	call   73f4 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5b4b:	eb 21                	jmp    5b6e <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x72>
    5b4d:	48 89 c3             	mov    %rax,%rbx
    5b50:	45 84 e4             	test   %r12b,%r12b
    5b53:	74 0e                	je     5b63 <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x67>
    5b55:	be f8 00 00 00       	mov    $0xf8,%esi
    5b5a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    5b5e:	e8 6d d7 ff ff       	call   32d0 <_ZdlPvm@plt>
    5b63:	48 89 d8             	mov    %rbx,%rax
    5b66:	48 89 c7             	mov    %rax,%rdi
    5b69:	e8 62 d9 ff ff       	call   34d0 <_Unwind_Resume@plt>
    5b6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b72:	48 83 c4 20          	add    $0x20,%rsp
    5b76:	5b                   	pop    %rbx
    5b77:	41 5c                	pop    %r12
    5b79:	5d                   	pop    %rbp
    5b7a:	c3                   	ret
    5b7b:	90                   	nop

0000000000005b7c <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    5b7c:	55                   	push   %rbp
    5b7d:	48 89 e5             	mov    %rsp,%rbp
    5b80:	48 83 ec 10          	sub    $0x10,%rsp
    5b84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    5b8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b90:	48 89 c7             	mov    %rax,%rdi
    5b93:	e8 e6 18 00 00       	call   747e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE7releaseEv>
    5b98:	48 89 c2             	mov    %rax,%rdx
    5b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b9f:	48 89 d6             	mov    %rdx,%rsi
    5ba2:	48 89 c7             	mov    %rax,%rdi
    5ba5:	e8 70 18 00 00       	call   741a <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    5baa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bae:	48 89 c7             	mov    %rax,%rdi
    5bb1:	e8 00 19 00 00       	call   74b6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    5bb6:	48 89 c7             	mov    %rax,%rdi
    5bb9:	e8 12 19 00 00       	call   74d0 <_ZSt7forwardISt14default_deleteIN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS4_E4typeE>
    5bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bc2:	48 89 c7             	mov    %rax,%rdi
    5bc5:	e8 ec 18 00 00       	call   74b6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    5bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5bce:	c9                   	leave
    5bcf:	c3                   	ret

0000000000005bd0 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    5bd0:	55                   	push   %rbp
    5bd1:	48 89 e5             	mov    %rsp,%rbp
    5bd4:	48 83 ec 10          	sub    $0x10,%rsp
    5bd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    5bdc:	e8 9d dc ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
    5be1:	84 c0                	test   %al,%al
    5be3:	74 18                	je     5bfd <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x2d>
    5be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5be9:	48 89 c7             	mov    %rax,%rdi
    5bec:	e8 ed 18 00 00       	call   74de <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
    5bf1:	48 85 c0             	test   %rax,%rax
    5bf4:	75 07                	jne    5bfd <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x2d>
    5bf6:	b8 01 00 00 00       	mov    $0x1,%eax
    5bfb:	eb 05                	jmp    5c02 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x32>
    5bfd:	b8 00 00 00 00       	mov    $0x0,%eax
    5c02:	84 c0                	test   %al,%al
	return *get();
    5c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c08:	48 89 c7             	mov    %rax,%rdi
    5c0b:	e8 ce 18 00 00       	call   74de <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
      }
    5c10:	c9                   	leave
    5c11:	c3                   	ret

0000000000005c12 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    5c12:	55                   	push   %rbp
    5c13:	48 89 e5             	mov    %rsp,%rbp
    5c16:	41 54                	push   %r12
    5c18:	53                   	push   %rbx
    5c19:	48 83 ec 20          	sub    $0x20,%rsp
    5c1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5c25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5c29:	bf 70 00 00 00       	mov    $0x70,%edi
    5c2e:	e8 8d d6 ff ff       	call   32c0 <_Znwm@plt>
    5c33:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5c37:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5c3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c41:	48 89 c7             	mov    %rax,%rdi
    5c44:	e8 af 18 00 00       	call   74f8 <_ZSt7forwardIRN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    5c49:	48 89 c3             	mov    %rax,%rbx
    5c4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5c50:	48 89 c7             	mov    %rax,%rdi
    5c53:	e8 68 17 00 00       	call   73c0 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    5c58:	48 89 da             	mov    %rbx,%rdx
    5c5b:	48 89 c6             	mov    %rax,%rsi
    5c5e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    5c62:	e8 b1 dc ff ff       	call   3918 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE>
    5c67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c6b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5c6f:	48 89 c7             	mov    %rax,%rdi
    5c72:	e8 b5 18 00 00       	call   752c <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5c77:	eb 21                	jmp    5c9a <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x88>
    5c79:	48 89 c3             	mov    %rax,%rbx
    5c7c:	45 84 e4             	test   %r12b,%r12b
    5c7f:	74 0e                	je     5c8f <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x7d>
    5c81:	be 70 00 00 00       	mov    $0x70,%esi
    5c86:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    5c8a:	e8 41 d6 ff ff       	call   32d0 <_ZdlPvm@plt>
    5c8f:	48 89 d8             	mov    %rbx,%rax
    5c92:	48 89 c7             	mov    %rax,%rdi
    5c95:	e8 36 d8 ff ff       	call   34d0 <_Unwind_Resume@plt>
    5c9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c9e:	48 83 c4 20          	add    $0x20,%rsp
    5ca2:	5b                   	pop    %rbx
    5ca3:	41 5c                	pop    %r12
    5ca5:	5d                   	pop    %rbp
    5ca6:	c3                   	ret
    5ca7:	90                   	nop

0000000000005ca8 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    5ca8:	55                   	push   %rbp
    5ca9:	48 89 e5             	mov    %rsp,%rbp
    5cac:	48 83 ec 10          	sub    $0x10,%rsp
    5cb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    5cb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5cbc:	48 89 c7             	mov    %rax,%rdi
    5cbf:	e8 f2 18 00 00       	call   75b6 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE7releaseEv>
    5cc4:	48 89 c2             	mov    %rax,%rdx
    5cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ccb:	48 89 d6             	mov    %rdx,%rsi
    5cce:	48 89 c7             	mov    %rax,%rdi
    5cd1:	e8 7c 18 00 00       	call   7552 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    5cd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5cda:	48 89 c7             	mov    %rax,%rdi
    5cdd:	e8 0c 19 00 00       	call   75ee <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    5ce2:	48 89 c7             	mov    %rax,%rdi
    5ce5:	e8 1e 19 00 00       	call   7608 <_ZSt7forwardISt14default_deleteIN4neko8RendererEEEOT_RNSt16remove_referenceIS4_E4typeE>
    5cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cee:	48 89 c7             	mov    %rax,%rdi
    5cf1:	e8 f8 18 00 00       	call   75ee <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    5cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5cfa:	c9                   	leave
    5cfb:	c3                   	ret

0000000000005cfc <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    5cfc:	55                   	push   %rbp
    5cfd:	48 89 e5             	mov    %rsp,%rbp
    5d00:	48 83 ec 10          	sub    $0x10,%rsp
    5d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    5d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d0c:	48 89 c7             	mov    %rax,%rdi
    5d0f:	e8 ca 17 00 00       	call   74de <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
      }
    5d14:	c9                   	leave
    5d15:	c3                   	ret

0000000000005d16 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    5d16:	55                   	push   %rbp
    5d17:	48 89 e5             	mov    %rsp,%rbp
    5d1a:	48 83 ec 10          	sub    $0x10,%rsp
    5d1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    5d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d26:	48 89 c7             	mov    %rax,%rdi
    5d29:	e8 e8 18 00 00       	call   7616 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>
      }
    5d2e:	c9                   	leave
    5d2f:	c3                   	ret

0000000000005d30 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_>:
	function(_Functor&& __f)
    5d30:	55                   	push   %rbp
    5d31:	48 89 e5             	mov    %rsp,%rbp
    5d34:	48 83 ec 10          	sub    $0x10,%rsp
    5d38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Function_base()
    5d40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d44:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5d48:	0f 11 00             	movups %xmm0,(%rax)
    5d4b:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    5d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d54:	48 89 c7             	mov    %rax,%rdi
    5d57:	e8 1c f5 ff ff       	call   5278 <_ZNSt14_Function_baseC1Ev>
    5d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d60:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    5d67:	00 
	  if (_My_handler::_M_not_empty_function(__f))
    5d68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d6c:	48 89 c7             	mov    %rax,%rdi
    5d6f:	e8 bc 18 00 00       	call   7630 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E21_M_not_empty_functionIS3_EEbRKT_>
    5d74:	84 c0                	test   %al,%al
    5d76:	74 3c                	je     5db4 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_+0x84>
	      _My_handler::_M_init_functor(_M_functor,
    5d78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d7c:	48 89 c7             	mov    %rax,%rdi
    5d7f:	e8 bb 18 00 00       	call   763f <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    5d84:	48 89 c2             	mov    %rax,%rdx
    5d87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d8b:	48 89 d6             	mov    %rdx,%rsi
    5d8e:	48 89 c7             	mov    %rax,%rdi
    5d91:	e8 b7 18 00 00       	call   764d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>
	      _M_invoker = &_My_handler::_M_invoke;
    5d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d9a:	48 8d 15 dd 18 00 00 	lea    0x18dd(%rip),%rdx        # 767e <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E9_M_invokeERKSt9_Any_data>
    5da1:	48 89 50 18          	mov    %rdx,0x18(%rax)
	      _M_manager = &_My_handler::_M_manager;
    5da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da9:	48 8d 15 f1 18 00 00 	lea    0x18f1(%rip),%rdx        # 76a1 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
    5db0:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    5db4:	90                   	nop
    5db5:	c9                   	leave
    5db6:	c3                   	ret
    5db7:	90                   	nop

0000000000005db8 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE0_vEEOT_>:
	function(_Functor&& __f)
    5db8:	55                   	push   %rbp
    5db9:	48 89 e5             	mov    %rsp,%rbp
    5dbc:	48 83 ec 10          	sub    $0x10,%rsp
    5dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Function_base()
    5dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dcc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5dd0:	0f 11 00             	movups %xmm0,(%rax)
    5dd3:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    5dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ddc:	48 89 c7             	mov    %rax,%rdi
    5ddf:	e8 94 f4 ff ff       	call   5278 <_ZNSt14_Function_baseC1Ev>
    5de4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5de8:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    5def:	00 
	  if (_My_handler::_M_not_empty_function(__f))
    5df0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5df4:	48 89 c7             	mov    %rax,%rdi
    5df7:	e8 20 19 00 00       	call   771c <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E21_M_not_empty_functionIS3_EEbRKT_>
    5dfc:	84 c0                	test   %al,%al
    5dfe:	74 3c                	je     5e3c <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE0_vEEOT_+0x84>
	      _My_handler::_M_init_functor(_M_functor,
    5e00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5e04:	48 89 c7             	mov    %rax,%rdi
    5e07:	e8 1f 19 00 00       	call   772b <_ZSt7forwardIZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS3_E4typeE>
    5e0c:	48 89 c2             	mov    %rax,%rdx
    5e0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e13:	48 89 d6             	mov    %rdx,%rsi
    5e16:	48 89 c7             	mov    %rax,%rdi
    5e19:	e8 1b 19 00 00       	call   7739 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>
	      _M_invoker = &_My_handler::_M_invoke;
    5e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e22:	48 8d 15 41 19 00 00 	lea    0x1941(%rip),%rdx        # 776a <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E9_M_invokeERKSt9_Any_data>
    5e29:	48 89 50 18          	mov    %rdx,0x18(%rax)
	      _M_manager = &_My_handler::_M_manager;
    5e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e31:	48 8d 15 55 19 00 00 	lea    0x1955(%rip),%rdx        # 778d <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
    5e38:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    5e3c:	90                   	nop
    5e3d:	c9                   	leave
    5e3e:	c3                   	ret
    5e3f:	90                   	nop

0000000000005e40 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE1_vEEOT_>:
	function(_Functor&& __f)
    5e40:	55                   	push   %rbp
    5e41:	48 89 e5             	mov    %rsp,%rbp
    5e44:	48 83 ec 10          	sub    $0x10,%rsp
    5e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Function_base()
    5e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e54:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5e58:	0f 11 00             	movups %xmm0,(%rax)
    5e5b:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    5e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e64:	48 89 c7             	mov    %rax,%rdi
    5e67:	e8 0c f4 ff ff       	call   5278 <_ZNSt14_Function_baseC1Ev>
    5e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e70:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    5e77:	00 
	  if (_My_handler::_M_not_empty_function(__f))
    5e78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5e7c:	48 89 c7             	mov    %rax,%rdi
    5e7f:	e8 84 19 00 00       	call   7808 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E21_M_not_empty_functionIS3_EEbRKT_>
    5e84:	84 c0                	test   %al,%al
    5e86:	74 3c                	je     5ec4 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE1_vEEOT_+0x84>
	      _My_handler::_M_init_functor(_M_functor,
    5e88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5e8c:	48 89 c7             	mov    %rax,%rdi
    5e8f:	e8 83 19 00 00       	call   7817 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS3_E4typeE>
    5e94:	48 89 c2             	mov    %rax,%rdx
    5e97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e9b:	48 89 d6             	mov    %rdx,%rsi
    5e9e:	48 89 c7             	mov    %rax,%rdi
    5ea1:	e8 7f 19 00 00       	call   7825 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>
	      _M_invoker = &_My_handler::_M_invoke;
    5ea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eaa:	48 8d 15 a5 19 00 00 	lea    0x19a5(%rip),%rdx        # 7856 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E9_M_invokeERKSt9_Any_data>
    5eb1:	48 89 50 18          	mov    %rdx,0x18(%rax)
	      _M_manager = &_My_handler::_M_manager;
    5eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb9:	48 8d 15 b9 19 00 00 	lea    0x19b9(%rip),%rdx        # 7879 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
    5ec0:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    5ec4:	90                   	nop
    5ec5:	c9                   	leave
    5ec6:	c3                   	ret
    5ec7:	90                   	nop

0000000000005ec8 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE2_vEEOT_>:
	function(_Functor&& __f)
    5ec8:	55                   	push   %rbp
    5ec9:	48 89 e5             	mov    %rsp,%rbp
    5ecc:	48 83 ec 10          	sub    $0x10,%rsp
    5ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ed4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Function_base()
    5ed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5edc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5ee0:	0f 11 00             	movups %xmm0,(%rax)
    5ee3:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    5ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eec:	48 89 c7             	mov    %rax,%rdi
    5eef:	e8 84 f3 ff ff       	call   5278 <_ZNSt14_Function_baseC1Ev>
    5ef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef8:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    5eff:	00 
	  if (_My_handler::_M_not_empty_function(__f))
    5f00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f04:	48 89 c7             	mov    %rax,%rdi
    5f07:	e8 e8 19 00 00       	call   78f4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E21_M_not_empty_functionIS3_EEbRKT_>
    5f0c:	84 c0                	test   %al,%al
    5f0e:	74 3c                	je     5f4c <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE2_vEEOT_+0x84>
	      _My_handler::_M_init_functor(_M_functor,
    5f10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f14:	48 89 c7             	mov    %rax,%rdi
    5f17:	e8 e7 19 00 00       	call   7903 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS3_E4typeE>
    5f1c:	48 89 c2             	mov    %rax,%rdx
    5f1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f23:	48 89 d6             	mov    %rdx,%rsi
    5f26:	48 89 c7             	mov    %rax,%rdi
    5f29:	e8 e3 19 00 00       	call   7911 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>
	      _M_invoker = &_My_handler::_M_invoke;
    5f2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f32:	48 8d 15 09 1a 00 00 	lea    0x1a09(%rip),%rdx        # 7942 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E9_M_invokeERKSt9_Any_data>
    5f39:	48 89 50 18          	mov    %rdx,0x18(%rax)
	      _M_manager = &_My_handler::_M_manager;
    5f3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f41:	48 8d 15 1d 1a 00 00 	lea    0x1a1d(%rip),%rdx        # 7965 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
    5f48:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    5f4c:	90                   	nop
    5f4d:	c9                   	leave
    5f4e:	c3                   	ret
    5f4f:	90                   	nop

0000000000005f50 <_ZNSt17reference_wrapperIbEC1IRbvPbEEOT_>:
	reference_wrapper(_Up&& __uref)
    5f50:	55                   	push   %rbp
    5f51:	48 89 e5             	mov    %rsp,%rbp
    5f54:	48 83 ec 10          	sub    $0x10,%rsp
    5f58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_data(reference_wrapper::_S_fun(std::forward<_Up>(__uref)))
    5f60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f64:	48 89 c7             	mov    %rax,%rdi
    5f67:	e8 74 1a 00 00       	call   79e0 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
    5f6c:	48 89 c7             	mov    %rax,%rdi
    5f6f:	e8 7a 1a 00 00       	call   79ee <_ZNSt17reference_wrapperIbE6_S_funERb>
    5f74:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5f78:	48 89 02             	mov    %rax,(%rdx)
	{ }
    5f7b:	90                   	nop
    5f7c:	c9                   	leave
    5f7d:	c3                   	ret

0000000000005f7e <_ZNSaISt17reference_wrapperIbEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5f7e:	55                   	push   %rbp
    5f7f:	48 89 e5             	mov    %rsp,%rbp
    5f82:	48 83 ec 10          	sub    $0x10,%rsp
    5f86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f8e:	48 89 c7             	mov    %rax,%rdi
    5f91:	e8 72 1a 00 00       	call   7a08 <_ZNSt15__new_allocatorISt17reference_wrapperIbEEC1Ev>
    5f96:	90                   	nop
    5f97:	c9                   	leave
    5f98:	c3                   	ret
    5f99:	90                   	nop

0000000000005f9a <_ZNSaISt17reference_wrapperIbEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5f9a:	55                   	push   %rbp
    5f9b:	48 89 e5             	mov    %rsp,%rbp
    5f9e:	48 83 ec 10          	sub    $0x10,%rsp
    5fa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5faa:	48 89 c7             	mov    %rax,%rdi
    5fad:	e8 62 1a 00 00       	call   7a14 <_ZNSt15__new_allocatorISt17reference_wrapperIbEED1Ev>
    5fb2:	90                   	nop
    5fb3:	c9                   	leave
    5fb4:	c3                   	ret
    5fb5:	90                   	nop

0000000000005fb6 <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    5fb6:	55                   	push   %rbp
    5fb7:	48 89 e5             	mov    %rsp,%rbp
    5fba:	53                   	push   %rbx
    5fbb:	48 83 ec 38          	sub    $0x38,%rsp
    5fbf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5fc3:	48 89 f0             	mov    %rsi,%rax
    5fc6:	48 89 d6             	mov    %rdx,%rsi
    5fc9:	48 89 f2             	mov    %rsi,%rdx
    5fcc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5fd0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    5fd4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    5fd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fdc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5fe0:	48 89 d6             	mov    %rdx,%rsi
    5fe3:	48 89 c7             	mov    %rax,%rdi
    5fe6:	e8 51 1a 00 00       	call   7a3c <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    5feb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5fef:	48 89 c7             	mov    %rax,%rdi
    5ff2:	e8 cb 1a 00 00       	call   7ac2 <_ZNKSt16initializer_listISt17reference_wrapperIbEE3endEv>
    5ff7:	48 89 c3             	mov    %rax,%rbx
    5ffa:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5ffe:	48 89 c7             	mov    %rax,%rdi
    6001:	e8 aa 1a 00 00       	call   7ab0 <_ZNKSt16initializer_listISt17reference_wrapperIbEE5beginEv>
    6006:	48 89 c1             	mov    %rax,%rcx
    6009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    600d:	48 89 da             	mov    %rbx,%rdx
    6010:	48 89 ce             	mov    %rcx,%rsi
    6013:	48 89 c7             	mov    %rax,%rdi
    6016:	e8 0d 1b 00 00       	call   7b28 <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    601b:	eb 1a                	jmp    6037 <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    601d:	48 89 c3             	mov    %rax,%rbx
    6020:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6024:	48 89 c7             	mov    %rax,%rdi
    6027:	e8 36 1a 00 00       	call   7a62 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EED1Ev>
    602c:	48 89 d8             	mov    %rbx,%rax
    602f:	48 89 c7             	mov    %rax,%rdi
    6032:	e8 99 d4 ff ff       	call   34d0 <_Unwind_Resume@plt>
    6037:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    603b:	c9                   	leave
    603c:	c3                   	ret
    603d:	90                   	nop

000000000000603e <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    603e:	55                   	push   %rbp
    603f:	48 89 e5             	mov    %rsp,%rbp
    6042:	48 83 ec 10          	sub    $0x10,%rsp
    6046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    604a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    604e:	48 89 c7             	mov    %rax,%rdi
    6051:	e8 82 1b 00 00       	call   7bd8 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE19_M_get_Tp_allocatorEv>
    6056:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    605d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6065:	48 8b 00             	mov    (%rax),%rax
    6068:	48 89 ce             	mov    %rcx,%rsi
    606b:	48 89 c7             	mov    %rax,%rdi
    606e:	e8 73 1b 00 00       	call   7be6 <_ZSt8_DestroyIPSt17reference_wrapperIbES1_EvT_S3_RSaIT0_E>
      }
    6073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6077:	48 89 c7             	mov    %rax,%rdi
    607a:	e8 e3 19 00 00       	call   7a62 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EED1Ev>
    607f:	90                   	nop
    6080:	c9                   	leave
    6081:	c3                   	ret

0000000000006082 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    6082:	55                   	push   %rbp
    6083:	48 89 e5             	mov    %rsp,%rbp
    6086:	41 54                	push   %r12
    6088:	53                   	push   %rbx
    6089:	48 83 ec 10          	sub    $0x10,%rsp
    608d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    6091:	bf 18 00 00 00       	mov    $0x18,%edi
    6096:	e8 25 d2 ff ff       	call   32c0 <_Znwm@plt>
    609b:	48 89 c6             	mov    %rax,%rsi
    609e:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    60a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    60a8:	48 89 f7             	mov    %rsi,%rdi
    60ab:	e8 1a e6 ff ff       	call   46ca <_ZN4neko6EngineC1Ev>
    60b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60b4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    60b8:	48 89 c7             	mov    %rax,%rdi
    60bb:	e8 76 1b 00 00       	call   7c36 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    60c0:	eb 21                	jmp    60e3 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x61>
    60c2:	48 89 c3             	mov    %rax,%rbx
    60c5:	45 84 e4             	test   %r12b,%r12b
    60c8:	74 0e                	je     60d8 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x56>
    60ca:	be 18 00 00 00       	mov    $0x18,%esi
    60cf:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    60d3:	e8 f8 d1 ff ff       	call   32d0 <_ZdlPvm@plt>
    60d8:	48 89 d8             	mov    %rbx,%rax
    60db:	48 89 c7             	mov    %rax,%rdi
    60de:	e8 ed d3 ff ff       	call   34d0 <_Unwind_Resume@plt>
    60e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60e7:	48 83 c4 10          	add    $0x10,%rsp
    60eb:	5b                   	pop    %rbx
    60ec:	41 5c                	pop    %r12
    60ee:	5d                   	pop    %rbp
    60ef:	c3                   	ret

00000000000060f0 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    60f0:	55                   	push   %rbp
    60f1:	48 89 e5             	mov    %rsp,%rbp
    60f4:	53                   	push   %rbx
    60f5:	48 83 ec 28          	sub    $0x28,%rsp
    60f9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    60fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6101:	48 89 c7             	mov    %rax,%rdi
    6104:	e8 53 1b 00 00       	call   7c5c <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    6109:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    610d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6111:	48 8b 00             	mov    (%rax),%rax
    6114:	48 85 c0             	test   %rax,%rax
    6117:	74 29                	je     6142 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    6119:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    611d:	48 89 c7             	mov    %rax,%rdi
    6120:	e8 51 1b 00 00       	call   7c76 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>
    6125:	48 89 c3             	mov    %rax,%rbx
    6128:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    612c:	48 89 c7             	mov    %rax,%rdi
    612f:	e8 5c 1b 00 00       	call   7c90 <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>
    6134:	48 8b 00             	mov    (%rax),%rax
    6137:	48 89 c6             	mov    %rax,%rsi
    613a:	48 89 df             	mov    %rbx,%rdi
    613d:	e8 98 1b 00 00       	call   7cda <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>
	__ptr = pointer();
    6142:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6146:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    614d:	90                   	nop
    614e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6152:	c9                   	leave
    6153:	c3                   	ret

0000000000006154 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    6154:	55                   	push   %rbp
    6155:	48 89 e5             	mov    %rsp,%rbp
    6158:	48 83 ec 20          	sub    $0x20,%rsp
    615c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6160:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    6164:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6168:	48 89 c7             	mov    %rax,%rdi
    616b:	e8 a0 1b 00 00       	call   7d10 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    6170:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6174:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6178:	48 89 c7             	mov    %rax,%rdi
    617b:	e8 90 1b 00 00       	call   7d10 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    6180:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6184:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6188:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    618c:	48 89 d6             	mov    %rdx,%rsi
    618f:	48 89 c7             	mov    %rax,%rdi
    6192:	e8 8a 1b 00 00       	call   7d21 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    6197:	c9                   	leave
    6198:	c3                   	ret

0000000000006199 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    6199:	55                   	push   %rbp
    619a:	48 89 e5             	mov    %rsp,%rbp
    619d:	48 83 ec 10          	sub    $0x10,%rsp
    61a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    61a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a9:	48 89 c7             	mov    %rax,%rdi
    61ac:	e8 d9 1b 00 00       	call   7d8a <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    61b1:	c9                   	leave
    61b2:	c3                   	ret
    61b3:	90                   	nop

00000000000061b4 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    61b4:	55                   	push   %rbp
    61b5:	48 89 e5             	mov    %rsp,%rbp
    61b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    61bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61c0:	48 8b 00             	mov    (%rax),%rax
    61c3:	5d                   	pop    %rbp
    61c4:	c3                   	ret
    61c5:	90                   	nop

00000000000061c6 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    61c6:	55                   	push   %rbp
    61c7:	48 89 e5             	mov    %rsp,%rbp
    61ca:	48 83 ec 10          	sub    $0x10,%rsp
    61ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    61d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61d6:	48 89 c7             	mov    %rax,%rdi
    61d9:	e8 06 1c 00 00       	call   7de4 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>
      }
    61de:	c9                   	leave
    61df:	c3                   	ret

00000000000061e0 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    61e0:	55                   	push   %rbp
    61e1:	48 89 e5             	mov    %rsp,%rbp
    61e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    61ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61f0:	0f b6 10             	movzbl (%rax),%edx
    61f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61f7:	0f b6 00             	movzbl (%rax),%eax
    61fa:	38 c2                	cmp    %al,%dl
    61fc:	0f 94 c0             	sete   %al
    61ff:	5d                   	pop    %rbp
    6200:	c3                   	ret
    6201:	90                   	nop

0000000000006202 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    6202:	55                   	push   %rbp
    6203:	48 89 e5             	mov    %rsp,%rbp
    6206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    620a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    620e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6212:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6216:	48 89 10             	mov    %rdx,(%rax)
    6219:	90                   	nop
    621a:	5d                   	pop    %rbp
    621b:	c3                   	ret

000000000000621c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    621c:	55                   	push   %rbp
    621d:	48 89 e5             	mov    %rsp,%rbp
    6220:	48 83 ec 10          	sub    $0x10,%rsp
    6224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    622c:	48 8b 00             	mov    (%rax),%rax
    622f:	48 85 c0             	test   %rax,%rax
    6232:	74 0f                	je     6243 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    6234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6238:	48 8b 00             	mov    (%rax),%rax
    623b:	48 89 c7             	mov    %rax,%rdi
    623e:	e8 5d d1 ff ff       	call   33a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    6243:	90                   	nop
    6244:	c9                   	leave
    6245:	c3                   	ret

0000000000006246 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    6246:	55                   	push   %rbp
    6247:	48 89 e5             	mov    %rsp,%rbp
    624a:	48 83 ec 40          	sub    $0x40,%rsp
    624e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6252:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6256:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    625a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    625e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6262:	48 89 d6             	mov    %rdx,%rsi
    6265:	48 89 c7             	mov    %rax,%rdi
    6268:	e8 91 1b 00 00       	call   7dfe <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    626d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    6271:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6275:	48 83 f8 0f          	cmp    $0xf,%rax
    6279:	76 3f                	jbe    62ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    627b:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    627f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6283:	ba 00 00 00 00       	mov    $0x0,%edx
    6288:	48 89 ce             	mov    %rcx,%rsi
    628b:	48 89 c7             	mov    %rax,%rdi
    628e:	e8 6d d2 ff ff       	call   3500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6293:	48 89 c2             	mov    %rax,%rdx
    6296:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    629a:	48 89 d6             	mov    %rdx,%rsi
    629d:	48 89 c7             	mov    %rax,%rdi
    62a0:	e8 9b cf ff ff       	call   3240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    62a5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    62ad:	48 89 d6             	mov    %rdx,%rsi
    62b0:	48 89 c7             	mov    %rax,%rdi
    62b3:	e8 78 d2 ff ff       	call   3530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    62b8:	eb 15                	jmp    62cf <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    62ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    62be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    62c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62c6:	48 89 c7             	mov    %rax,%rdi
    62c9:	e8 52 cf ff ff       	call   3220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    62ce:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    62cf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    62d3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    62d7:	48 89 d6             	mov    %rdx,%rsi
    62da:	48 89 c7             	mov    %rax,%rdi
    62dd:	e8 20 ff ff ff       	call   6202 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    62e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    62e6:	48 89 c7             	mov    %rax,%rdi
    62e9:	e8 62 d0 ff ff       	call   3350 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    62ee:	48 89 c1             	mov    %rax,%rcx
    62f1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    62f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    62f9:	48 89 c6             	mov    %rax,%rsi
    62fc:	48 89 cf             	mov    %rcx,%rdi
    62ff:	e8 5c d0 ff ff       	call   3360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    6304:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    630b:	00 

	_M_set_length(__dnew);
    630c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6310:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6314:	48 89 d6             	mov    %rdx,%rsi
    6317:	48 89 c7             	mov    %rax,%rdi
    631a:	e8 61 ce ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    631f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6323:	48 89 c7             	mov    %rax,%rdi
    6326:	e8 f1 fe ff ff       	call   621c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    632b:	c9                   	leave
    632c:	c3                   	ret

000000000000632d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
    632d:	55                   	push   %rbp
    632e:	48 89 e5             	mov    %rsp,%rbp
    6331:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6339:	5d                   	pop    %rbp
    633a:	c3                   	ret
    633b:	90                   	nop

000000000000633c <_ZNSaISt6threadEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    633c:	55                   	push   %rbp
    633d:	48 89 e5             	mov    %rsp,%rbp
    6340:	48 83 ec 10          	sub    $0x10,%rsp
    6344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    634c:	48 89 c7             	mov    %rax,%rdi
    634f:	e8 dc 1a 00 00       	call   7e30 <_ZNSt15__new_allocatorISt6threadEC1Ev>
    6354:	90                   	nop
    6355:	c9                   	leave
    6356:	c3                   	ret
    6357:	90                   	nop

0000000000006358 <_ZNSt12_Vector_baseISt6threadSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6358:	55                   	push   %rbp
    6359:	48 89 e5             	mov    %rsp,%rbp
    635c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6364:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    636b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6376:	00 
    6377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    637b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6382:	00 
	{ }
    6383:	90                   	nop
    6384:	5d                   	pop    %rbp
    6385:	c3                   	ret

0000000000006386 <_ZNSt15__new_allocatorISt6threadED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6386:	55                   	push   %rbp
    6387:	48 89 e5             	mov    %rsp,%rbp
    638a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    638e:	90                   	nop
    638f:	5d                   	pop    %rbp
    6390:	c3                   	ret
    6391:	90                   	nop

0000000000006392 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    6392:	55                   	push   %rbp
    6393:	48 89 e5             	mov    %rsp,%rbp
    6396:	48 83 ec 20          	sub    $0x20,%rsp
    639a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    639e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    63a6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    63ab:	74 17                	je     63c4 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    63ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    63b9:	48 89 ce             	mov    %rcx,%rsi
    63bc:	48 89 c7             	mov    %rax,%rdi
    63bf:	e8 77 1a 00 00       	call   7e3b <_ZNSt16allocator_traitsISaISt6threadEE10deallocateERS1_PS0_m>
      }
    63c4:	90                   	nop
    63c5:	c9                   	leave
    63c6:	c3                   	ret
    63c7:	90                   	nop

00000000000063c8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    63c8:	55                   	push   %rbp
    63c9:	48 89 e5             	mov    %rsp,%rbp
    63cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    63d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63d4:	5d                   	pop    %rbp
    63d5:	c3                   	ret

00000000000063d6 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    63d6:	55                   	push   %rbp
    63d7:	48 89 e5             	mov    %rsp,%rbp
    63da:	48 83 ec 20          	sub    $0x20,%rsp
    63de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    63ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63f2:	48 89 d6             	mov    %rdx,%rsi
    63f5:	48 89 c7             	mov    %rax,%rdi
    63f8:	e8 6c 1a 00 00       	call   7e69 <_ZSt8_DestroyIPSt6threadEvT_S2_>
    }
    63fd:	90                   	nop
    63fe:	c9                   	leave
    63ff:	c3                   	ret

0000000000006400 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>:
      struct _Deque_impl
    6400:	55                   	push   %rbp
    6401:	48 89 e5             	mov    %rsp,%rbp
    6404:	48 83 ec 10          	sub    $0x10,%rsp
    6408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    640c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6410:	48 89 c7             	mov    %rax,%rdi
    6413:	e8 a0 1a 00 00       	call   7eb8 <_ZNSaISt8functionIFvvEEED1Ev>
    6418:	90                   	nop
    6419:	c9                   	leave
    641a:	c3                   	ret
    641b:	90                   	nop

000000000000641c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev>:
      _Deque_base()
    641c:	55                   	push   %rbp
    641d:	48 89 e5             	mov    %rsp,%rbp
    6420:	53                   	push   %rbx
    6421:	48 83 ec 18          	sub    $0x18,%rsp
    6425:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      : _M_impl()
    6429:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    642d:	48 89 c7             	mov    %rax,%rdi
    6430:	e8 5b 1a 00 00       	call   7e90 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implC1Ev>
      { _M_initialize_map(0); }
    6435:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6439:	be 00 00 00 00       	mov    $0x0,%esi
    643e:	48 89 c7             	mov    %rax,%rdi
    6441:	e8 8e 1a 00 00       	call   7ed4 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm>
    6446:	eb 1a                	jmp    6462 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev+0x46>
    6448:	48 89 c3             	mov    %rax,%rbx
    644b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    644f:	48 89 c7             	mov    %rax,%rdi
    6452:	e8 a9 ff ff ff       	call   6400 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>
    6457:	48 89 d8             	mov    %rbx,%rax
    645a:	48 89 c7             	mov    %rax,%rdi
    645d:	e8 6e d0 ff ff       	call   34d0 <_Unwind_Resume@plt>
    6462:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6466:	c9                   	leave
    6467:	c3                   	ret

0000000000006468 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev>:
    _Deque_base<_Tp, _Alloc>::
    6468:	55                   	push   %rbp
    6469:	48 89 e5             	mov    %rsp,%rbp
    646c:	48 83 ec 10          	sub    $0x10,%rsp
    6470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (this->_M_impl._M_map)
    6474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6478:	48 8b 00             	mov    (%rax),%rax
    647b:	48 85 c0             	test   %rax,%rax
    647e:	74 41                	je     64c1 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev+0x59>
			   this->_M_impl._M_finish._M_node + 1);
    6480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6484:	48 8b 40 48          	mov    0x48(%rax),%rax
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
    6488:	48 8d 50 08          	lea    0x8(%rax),%rdx
    648c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6490:	48 8b 48 28          	mov    0x28(%rax),%rcx
    6494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6498:	48 89 ce             	mov    %rcx,%rsi
    649b:	48 89 c7             	mov    %rax,%rdi
    649e:	e8 d9 1b 00 00       	call   807c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    64a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64a7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    64ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64af:	48 8b 08             	mov    (%rax),%rcx
    64b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b6:	48 89 ce             	mov    %rcx,%rsi
    64b9:	48 89 c7             	mov    %rax,%rdi
    64bc:	e8 03 1c 00 00       	call   80c4 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>
    }
    64c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64c5:	48 89 c7             	mov    %rax,%rdi
    64c8:	e8 33 ff ff ff       	call   6400 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>
    64cd:	90                   	nop
    64ce:	c9                   	leave
    64cf:	c3                   	ret

00000000000064d0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>:
       *  Returns a read/write iterator that points to the first element in the
       *  %deque.  Iteration is done in ordinary element order.
       */
      _GLIBCXX_NODISCARD
      iterator
      begin() _GLIBCXX_NOEXCEPT
    64d0:	55                   	push   %rbp
    64d1:	48 89 e5             	mov    %rsp,%rbp
    64d4:	48 83 ec 10          	sub    $0x10,%rsp
    64d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->_M_impl._M_start; }
    64e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    64e4:	48 8d 50 10          	lea    0x10(%rax),%rdx
    64e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ec:	48 89 d6             	mov    %rdx,%rsi
    64ef:	48 89 c7             	mov    %rax,%rdi
    64f2:	e8 19 1c 00 00       	call   8110 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    64f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64fb:	c9                   	leave
    64fc:	c3                   	ret
    64fd:	90                   	nop

00000000000064fe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>:
       *  element in the %deque.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD
      iterator
      end() _GLIBCXX_NOEXCEPT
    64fe:	55                   	push   %rbp
    64ff:	48 89 e5             	mov    %rsp,%rbp
    6502:	48 83 ec 10          	sub    $0x10,%rsp
    6506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    650a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->_M_impl._M_finish; }
    650e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6512:	48 8d 50 30          	lea    0x30(%rax),%rdx
    6516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    651a:	48 89 d6             	mov    %rdx,%rsi
    651d:	48 89 c7             	mov    %rax,%rdi
    6520:	e8 eb 1b 00 00       	call   8110 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    6525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6529:	c9                   	leave
    652a:	c3                   	ret
    652b:	90                   	nop

000000000000652c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    652c:	55                   	push   %rbp
    652d:	48 89 e5             	mov    %rsp,%rbp
    6530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6538:	5d                   	pop    %rbp
    6539:	c3                   	ret

000000000000653a <_ZNSt5dequeISt8functionIFvvEESaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>:
	void
	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
	{ _M_destroy_data_aux(__first, __last); }

      void
      _M_destroy_data(iterator __first, iterator __last,
    653a:	55                   	push   %rbp
    653b:	48 89 e5             	mov    %rsp,%rbp
    653e:	48 83 ec 60          	sub    $0x60,%rsp
    6542:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    6546:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    654a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    654e:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
		      const std::allocator<_Tp>&)
      {
	if (!__has_trivial_destructor(value_type))
	  _M_destroy_data_aux(__first, __last);
    6552:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6556:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    655a:	48 89 d6             	mov    %rdx,%rsi
    655d:	48 89 c7             	mov    %rax,%rdi
    6560:	e8 ab 1b 00 00       	call   8110 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    6565:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    6569:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    656d:	48 89 d6             	mov    %rdx,%rsi
    6570:	48 89 c7             	mov    %rax,%rdi
    6573:	e8 98 1b 00 00       	call   8110 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    6578:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    657c:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    6580:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6584:	48 89 ce             	mov    %rcx,%rsi
    6587:	48 89 c7             	mov    %rax,%rdi
    658a:	e8 cf 1b 00 00       	call   815e <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_>
      }
    658f:	90                   	nop
    6590:	c9                   	leave
    6591:	c3                   	ret

0000000000006592 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>:
    6592:	55                   	push   %rbp
    6593:	48 89 e5             	mov    %rsp,%rbp
    6596:	48 83 ec 10          	sub    $0x10,%rsp
    659a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    659e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65a2:	48 89 c7             	mov    %rax,%rdi
    65a5:	e8 c4 1c 00 00       	call   826e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>
    65aa:	90                   	nop
    65ab:	c9                   	leave
    65ac:	c3                   	ret
    65ad:	90                   	nop

00000000000065ae <_ZNSt20_Rb_tree_key_compareISt4lessINSt6thread2idEEEC1Ev>:
      _Rb_tree_key_compare()
    65ae:	55                   	push   %rbp
    65af:	48 89 e5             	mov    %rsp,%rbp
    65b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    65b6:	90                   	nop
    65b7:	5d                   	pop    %rbp
    65b8:	c3                   	ret
    65b9:	90                   	nop

00000000000065ba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>:
    65ba:	55                   	push   %rbp
    65bb:	48 89 e5             	mov    %rsp,%rbp
    65be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65c2:	90                   	nop
    65c3:	5d                   	pop    %rbp
    65c4:	c3                   	ret
    65c5:	90                   	nop

00000000000065c6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    65c6:	55                   	push   %rbp
    65c7:	48 89 e5             	mov    %rsp,%rbp
    65ca:	48 83 ec 20          	sub    $0x20,%rsp
    65ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    65d6:	eb 49                	jmp    6621 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    65d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65dc:	48 89 c7             	mov    %rax,%rdi
    65df:	e8 95 1c 00 00       	call   8279 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    65e4:	48 89 c2             	mov    %rax,%rdx
    65e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65eb:	48 89 d6             	mov    %rdx,%rsi
    65ee:	48 89 c7             	mov    %rax,%rdi
    65f1:	e8 d0 ff ff ff       	call   65c6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
	  _Link_type __y = _S_left(__x);
    65f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65fa:	48 89 c7             	mov    %rax,%rdi
    65fd:	e8 89 1c 00 00       	call   828b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    6602:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    6606:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    660a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    660e:	48 89 d6             	mov    %rdx,%rsi
    6611:	48 89 c7             	mov    %rax,%rdi
    6614:	e8 85 1c 00 00       	call   829e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>
	  __x = __y;
    6619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    661d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    6621:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6626:	75 b0                	jne    65d8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x12>
	}
    }
    6628:	90                   	nop
    6629:	90                   	nop
    662a:	c9                   	leave
    662b:	c3                   	ret

000000000000662c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    662c:	55                   	push   %rbp
    662d:	48 89 e5             	mov    %rsp,%rbp
    6630:	48 83 ec 10          	sub    $0x10,%rsp
    6634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    6638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    663c:	48 89 c7             	mov    %rax,%rdi
    663f:	e8 94 1c 00 00       	call   82d8 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE9_M_mbeginEv>
    6644:	c9                   	leave
    6645:	c3                   	ret

0000000000006646 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    6646:	55                   	push   %rbp
    6647:	48 89 e5             	mov    %rsp,%rbp
    664a:	53                   	push   %rbx
    664b:	48 83 ec 38          	sub    $0x38,%rsp
    664f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6653:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    6657:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    665c:	0f 84 e7 01 00 00    	je     6849 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    6662:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6666:	48 89 c7             	mov    %rax,%rdi
    6669:	e8 46 eb ff ff       	call   51b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    666e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    6672:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6676:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    667a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    667e:	48 8b 40 08          	mov    0x8(%rax),%rax
    6682:	48 29 c2             	sub    %rax,%rdx
    6685:	48 89 d0             	mov    %rdx,%rax
    6688:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    668c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    6690:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6694:	48 89 c7             	mov    %rax,%rdi
    6697:	e8 4e 1c 00 00       	call   82ea <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    669c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    66a0:	72 16                	jb     66b8 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x72>
    66a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    66a6:	48 89 c7             	mov    %rax,%rdi
    66a9:	e8 3c 1c 00 00       	call   82ea <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    66ae:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    66b2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    66b6:	73 07                	jae    66bf <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x79>
    66b8:	b8 01 00 00 00       	mov    $0x1,%eax
    66bd:	eb 05                	jmp    66c4 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x7e>
    66bf:	b8 00 00 00 00       	mov    $0x0,%eax
    66c4:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    66c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66ca:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    66ce:	72 33                	jb     6703 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    66d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    66d4:	48 89 c7             	mov    %rax,%rdi
    66d7:	e8 ec fc ff ff       	call   63c8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    66dc:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    66df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    66e3:	48 8b 40 08          	mov    0x8(%rax),%rax
    66e7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    66eb:	48 89 ce             	mov    %rcx,%rsi
    66ee:	48 89 c7             	mov    %rax,%rdi
    66f1:	e8 16 1c 00 00       	call   830c <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    66f6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    66fa:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    66fe:	e9 46 01 00 00       	jmp    6849 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    6703:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    6707:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    670b:	48 8d 15 e7 cf 00 00 	lea    0xcfe7(%rip),%rdx        # 136f9 <_ZN6__pstl9execution2v1L5unseqE+0x8e>
    6712:	48 89 ce             	mov    %rcx,%rsi
    6715:	48 89 c7             	mov    %rax,%rdi
    6718:	e8 19 1c 00 00       	call   8336 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc>
    671d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    6721:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6725:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6729:	48 89 d6             	mov    %rdx,%rsi
    672c:	48 89 c7             	mov    %rax,%rdi
    672f:	e8 ca 1c 00 00       	call   83fe <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm>
    6734:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    6738:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    673c:	48 89 c7             	mov    %rax,%rdi
    673f:	e8 84 fc ff ff       	call   63c8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    6744:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    6747:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    674b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    6752:	00 
    6753:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6757:	48 01 c1             	add    %rax,%rcx
    675a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    675e:	48 89 c6             	mov    %rax,%rsi
    6761:	48 89 cf             	mov    %rcx,%rdi
    6764:	e8 a3 1b 00 00       	call   830c <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    6769:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    676d:	48 89 c7             	mov    %rax,%rdi
    6770:	e8 53 fc ff ff       	call   63c8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    6775:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    6778:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    677c:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6780:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6784:	48 8b 00             	mov    (%rax),%rax
    6787:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    678b:	48 89 c7             	mov    %rax,%rdi
    678e:	e8 9e 1c 00 00       	call   8431 <_ZNSt6vectorISt6threadSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    6793:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    6797:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    679b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    679f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    67a3:	48 8b 12             	mov    (%rdx),%rdx
    67a6:	48 29 d1             	sub    %rdx,%rcx
    67a9:	48 c1 f9 03          	sar    $0x3,%rcx
    67ad:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    67b0:	48 89 d6             	mov    %rdx,%rsi
    67b3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    67b7:	48 8b 0a             	mov    (%rdx),%rcx
    67ba:	48 89 f2             	mov    %rsi,%rdx
    67bd:	48 89 ce             	mov    %rcx,%rsi
    67c0:	48 89 c7             	mov    %rax,%rdi
    67c3:	e8 ca fb ff ff       	call   6392 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    67c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    67cc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    67d0:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    67d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    67d7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    67db:	48 01 d0             	add    %rdx,%rax
    67de:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    67e5:	00 
    67e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    67ea:	48 01 c2             	add    %rax,%rdx
    67ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    67f1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    67f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67f9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6800:	00 
    6801:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6805:	48 01 c2             	add    %rax,%rdx
    6808:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    680c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    6810:	eb 37                	jmp    6849 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    6812:	48 89 c7             	mov    %rax,%rdi
    6815:	e8 b6 c8 ff ff       	call   30d0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    681a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    681e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6822:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6826:	48 89 ce             	mov    %rcx,%rsi
    6829:	48 89 c7             	mov    %rax,%rdi
    682c:	e8 61 fb ff ff       	call   6392 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    6831:	e8 da cb ff ff       	call   3410 <__cxa_rethrow@plt>
		  __catch(...)
    6836:	48 89 c3             	mov    %rax,%rbx
    6839:	e8 42 cc ff ff       	call   3480 <__cxa_end_catch@plt>
    683e:	48 89 d8             	mov    %rbx,%rax
    6841:	48 89 c7             	mov    %rax,%rdi
    6844:	e8 87 cc ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    6849:	90                   	nop
    684a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    684e:	c9                   	leave
    684f:	c3                   	ret

0000000000006850 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>:

      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      _GLIBCXX20_CONSTEXPR
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    6850:	55                   	push   %rbp
    6851:	48 89 e5             	mov    %rsp,%rbp
    6854:	48 83 ec 20          	sub    $0x20,%rsp
    6858:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    685c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
    6860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6864:	48 8b 40 08          	mov    0x8(%rax),%rax
    6868:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    686c:	48 c1 f8 03          	sar    $0x3,%rax
    6870:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6874:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6879:	74 32                	je     68ad <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
			  _M_get_Tp_allocator());
    687b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    687f:	48 89 c7             	mov    %rax,%rdi
    6882:	e8 41 fb ff ff       	call   63c8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    6887:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    688a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    688e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6892:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6896:	48 89 ce             	mov    %rcx,%rsi
    6899:	48 89 c7             	mov    %rax,%rdi
    689c:	e8 35 fb ff ff       	call   63d6 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    68a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    68a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
	  }
      }
    68ad:	90                   	nop
    68ae:	c9                   	leave
    68af:	c3                   	ret

00000000000068b0 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    68b0:	55                   	push   %rbp
    68b1:	48 89 e5             	mov    %rsp,%rbp
    68b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    68bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    68c0:	48 8b 10             	mov    (%rax),%rdx
    68c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68c7:	48 89 10             	mov    %rdx,(%rax)
    68ca:	90                   	nop
    68cb:	5d                   	pop    %rbp
    68cc:	c3                   	ret
    68cd:	90                   	nop

00000000000068ce <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    68ce:	55                   	push   %rbp
    68cf:	48 89 e5             	mov    %rsp,%rbp
    68d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    68d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68da:	5d                   	pop    %rbp
    68db:	c3                   	ret

00000000000068dc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    68dc:	55                   	push   %rbp
    68dd:	48 89 e5             	mov    %rsp,%rbp
    68e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    68e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68e8:	5d                   	pop    %rbp
    68e9:	c3                   	ret

00000000000068ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    68ea:	55                   	push   %rbp
    68eb:	48 89 e5             	mov    %rsp,%rbp
    68ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    68f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68f6:	5d                   	pop    %rbp
    68f7:	c3                   	ret

00000000000068f8 <_ZNSt6thread6_StateC1Ev>:
    struct _State
    68f8:	55                   	push   %rbp
    68f9:	48 89 e5             	mov    %rsp,%rbp
    68fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6900:	48 8d 15 c9 c3 01 00 	lea    0x1c3c9(%rip),%rdx        # 22cd0 <_ZTVNSt6thread6_StateE@GLIBCXX_3.4.22+0x10>
    6907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    690b:	48 89 10             	mov    %rdx,(%rax)
    690e:	90                   	nop
    690f:	5d                   	pop    %rbp
    6910:	c3                   	ret
    6911:	90                   	nop

0000000000006912 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEC1IJRS6_S5_EEEDpOT_>:
	  _State_impl(_Args&&... __args)
    6912:	55                   	push   %rbp
    6913:	48 89 e5             	mov    %rsp,%rbp
    6916:	41 54                	push   %r12
    6918:	53                   	push   %rbx
    6919:	48 83 ec 20          	sub    $0x20,%rsp
    691d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6921:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6925:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  : _M_func{{std::forward<_Args>(__args)...}}
    6929:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    692d:	48 89 c7             	mov    %rax,%rdi
    6930:	e8 c3 ff ff ff       	call   68f8 <_ZNSt6thread6_StateC1Ev>
    6935:	48 8d 15 54 c3 01 00 	lea    0x1c354(%rip),%rdx        # 22c90 <_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEE+0x10>
    693c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6940:	48 89 10             	mov    %rdx,(%rax)
    6943:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6947:	48 8d 58 08          	lea    0x8(%rax),%rbx
    694b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    694f:	48 89 c7             	mov    %rax,%rdi
    6952:	e8 85 ff ff ff       	call   68dc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    6957:	49 89 c4             	mov    %rax,%r12
    695a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    695e:	48 89 c7             	mov    %rax,%rdi
    6961:	e8 84 ff ff ff       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    6966:	48 89 c2             	mov    %rax,%rdx
    6969:	4c 89 e6             	mov    %r12,%rsi
    696c:	48 89 df             	mov    %rbx,%rdi
    696f:	e8 f0 1a 00 00       	call   8464 <_ZNSt5tupleIJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_S2_Lb1EEEOT_OT0_>
	  { }
    6974:	90                   	nop
    6975:	48 83 c4 20          	add    $0x20,%rsp
    6979:	5b                   	pop    %rbx
    697a:	41 5c                	pop    %r12
    697c:	5d                   	pop    %rbp
    697d:	c3                   	ret

000000000000697e <_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    697e:	55                   	push   %rbp
    697f:	48 89 e5             	mov    %rsp,%rbp
    6982:	48 83 ec 10          	sub    $0x10,%rsp
    6986:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    698a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    698e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6992:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6996:	48 89 d6             	mov    %rdx,%rsi
    6999:	48 89 c7             	mov    %rax,%rdi
    699c:	e8 11 1b 00 00       	call   84b2 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC1EPS1_>
    69a1:	90                   	nop
    69a2:	c9                   	leave
    69a3:	c3                   	ret

00000000000069a4 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    69a4:	55                   	push   %rbp
    69a5:	48 89 e5             	mov    %rsp,%rbp
    69a8:	48 83 ec 10          	sub    $0x10,%rsp
    69ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    69b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    69bc:	48 89 d6             	mov    %rdx,%rsi
    69bf:	48 89 c7             	mov    %rax,%rdi
    69c2:	e8 b7 ff ff ff       	call   697e <_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    69c7:	90                   	nop
    69c8:	c9                   	leave
    69c9:	c3                   	ret

00000000000069ca <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    69ca:	55                   	push   %rbp
    69cb:	48 89 e5             	mov    %rsp,%rbp
    69ce:	53                   	push   %rbx
    69cf:	48 83 ec 28          	sub    $0x28,%rsp
    69d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    69d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69db:	48 89 c7             	mov    %rax,%rdi
    69de:	e8 07 1b 00 00       	call   84ea <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>
    69e3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    69e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69eb:	48 8b 00             	mov    (%rax),%rax
    69ee:	48 85 c0             	test   %rax,%rax
    69f1:	74 29                	je     6a1c <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    69f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69f7:	48 89 c7             	mov    %rax,%rdi
    69fa:	e8 05 1b 00 00       	call   8504 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv>
    69ff:	48 89 c3             	mov    %rax,%rbx
    6a02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a06:	48 89 c7             	mov    %rax,%rdi
    6a09:	e8 10 1b 00 00       	call   851e <_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_>
    6a0e:	48 8b 00             	mov    (%rax),%rax
    6a11:	48 89 c6             	mov    %rax,%rsi
    6a14:	48 89 df             	mov    %rbx,%rdi
    6a17:	e8 10 1b 00 00       	call   852c <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_>
	__ptr = pointer();
    6a1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a20:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    6a27:	90                   	nop
    6a28:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6a2c:	c9                   	leave
    6a2d:	c3                   	ret

0000000000006a2e <_ZSt11__addressofISt5mutexEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6a2e:	55                   	push   %rbp
    6a2f:	48 89 e5             	mov    %rsp,%rbp
    6a32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a3a:	5d                   	pop    %rbp
    6a3b:	c3                   	ret

0000000000006a3c <_ZNSt11unique_lockISt5mutexE4lockEv>:

	return *this;
      }

      void
      lock()
    6a3c:	55                   	push   %rbp
    6a3d:	48 89 e5             	mov    %rsp,%rbp
    6a40:	48 83 ec 10          	sub    $0x10,%rsp
    6a44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (!_M_device)
    6a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a4c:	48 8b 00             	mov    (%rax),%rax
    6a4f:	48 85 c0             	test   %rax,%rax
    6a52:	75 0a                	jne    6a5e <_ZNSt11unique_lockISt5mutexE4lockEv+0x22>
	  __throw_system_error(int(errc::operation_not_permitted));
    6a54:	bf 01 00 00 00       	mov    $0x1,%edi
    6a59:	e8 12 c7 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else if (_M_owns)
    6a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a62:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    6a66:	84 c0                	test   %al,%al
    6a68:	74 0a                	je     6a74 <_ZNSt11unique_lockISt5mutexE4lockEv+0x38>
	  __throw_system_error(int(errc::resource_deadlock_would_occur));
    6a6a:	bf 23 00 00 00       	mov    $0x23,%edi
    6a6f:	e8 fc c6 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else
	  {
	    _M_device->lock();
    6a74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a78:	48 8b 00             	mov    (%rax),%rax
    6a7b:	48 89 c7             	mov    %rax,%rdi
    6a7e:	e8 39 d0 ff ff       	call   3abc <_ZNSt5mutex4lockEv>
	    _M_owns = true;
    6a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a87:	c6 40 08 01          	movb   $0x1,0x8(%rax)
	  }
      }
    6a8b:	90                   	nop
    6a8c:	c9                   	leave
    6a8d:	c3                   	ret

0000000000006a8e <_ZNSt11unique_lockISt5mutexE6unlockEv>:
	      return _M_owns;
	    }
	 }

      void
      unlock()
    6a8e:	55                   	push   %rbp
    6a8f:	48 89 e5             	mov    %rsp,%rbp
    6a92:	48 83 ec 10          	sub    $0x10,%rsp
    6a96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (!_M_owns)
    6a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a9e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    6aa2:	83 f0 01             	xor    $0x1,%eax
    6aa5:	84 c0                	test   %al,%al
    6aa7:	74 0a                	je     6ab3 <_ZNSt11unique_lockISt5mutexE6unlockEv+0x25>
	  __throw_system_error(int(errc::operation_not_permitted));
    6aa9:	bf 01 00 00 00       	mov    $0x1,%edi
    6aae:	e8 bd c6 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else if (_M_device)
    6ab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ab7:	48 8b 00             	mov    (%rax),%rax
    6aba:	48 85 c0             	test   %rax,%rax
    6abd:	74 17                	je     6ad6 <_ZNSt11unique_lockISt5mutexE6unlockEv+0x48>
	  {
	    _M_device->unlock();
    6abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ac3:	48 8b 00             	mov    (%rax),%rax
    6ac6:	48 89 c7             	mov    %rax,%rdi
    6ac9:	e8 1c d0 ff ff       	call   3aea <_ZNSt5mutex6unlockEv>
	    _M_owns = false;
    6ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ad2:	c6 40 08 00          	movb   $0x0,0x8(%rax)
	  }
      }
    6ad6:	90                   	nop
    6ad7:	c9                   	leave
    6ad8:	c3                   	ret

0000000000006ad9 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E21_M_not_empty_functionIS9_EEbRKT_>:
	  _M_not_empty_function(const _Tp&) noexcept
    6ad9:	55                   	push   %rbp
    6ada:	48 89 e5             	mov    %rsp,%rbp
    6add:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  { return true; }
    6ae1:	b8 01 00 00 00       	mov    $0x1,%eax
    6ae6:	5d                   	pop    %rbp
    6ae7:	c3                   	ret

0000000000006ae8 <_ZSt7forwardIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6ae8:	55                   	push   %rbp
    6ae9:	48 89 e5             	mov    %rsp,%rbp
    6aec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6af4:	5d                   	pop    %rbp
    6af5:	c3                   	ret

0000000000006af6 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E15_M_init_functorIS9_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    6af6:	55                   	push   %rbp
    6af7:	48 89 e5             	mov    %rsp,%rbp
    6afa:	48 83 ec 10          	sub    $0x10,%rsp
    6afe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    6b06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6b0a:	48 89 c7             	mov    %rax,%rdi
    6b0d:	e8 d6 ff ff ff       	call   6ae8 <_ZSt7forwardIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceIS9_E4typeE>
    6b12:	48 89 c2             	mov    %rax,%rdx
    6b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b19:	48 89 d6             	mov    %rdx,%rsi
    6b1c:	48 89 c7             	mov    %rax,%rdi
    6b1f:	e8 33 1a 00 00       	call   8557 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E9_M_createIS9_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    6b24:	90                   	nop
    6b25:	c9                   	leave
    6b26:	c3                   	ret

0000000000006b27 <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E9_M_invokeERKSt9_Any_data>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    6b27:	55                   	push   %rbp
    6b28:	48 89 e5             	mov    %rsp,%rbp
    6b2b:	48 83 ec 10          	sub    $0x10,%rsp
    6b2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
    6b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b37:	48 89 c7             	mov    %rax,%rdi
    6b3a:	e8 66 1a 00 00       	call   85a5 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E14_M_get_pointerERKSt9_Any_data>
    6b3f:	48 89 c7             	mov    %rax,%rdi
    6b42:	e8 88 1a 00 00       	call   85cf <_ZSt10__invoke_rIvRZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EESB_E4typeEOSC_DpOSD_>
				     std::forward<_ArgTypes>(__args)...);
    6b47:	90                   	nop
      }
    6b48:	c9                   	leave
    6b49:	c3                   	ret

0000000000006b4a <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E10_M_managerERSt9_Any_dataRKSA_St18_Manager_operation>:
      _M_manager(_Any_data& __dest, const _Any_data& __source,
    6b4a:	55                   	push   %rbp
    6b4b:	48 89 e5             	mov    %rsp,%rbp
    6b4e:	53                   	push   %rbx
    6b4f:	48 83 ec 28          	sub    $0x28,%rsp
    6b53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6b57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6b5b:	89 55 dc             	mov    %edx,-0x24(%rbp)
	switch (__op)
    6b5e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    6b61:	85 c0                	test   %eax,%eax
    6b63:	74 07                	je     6b6c <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E10_M_managerERSt9_Any_dataRKSA_St18_Manager_operation+0x22>
    6b65:	83 f8 01             	cmp    $0x1,%eax
    6b68:	74 1a                	je     6b84 <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E10_M_managerERSt9_Any_dataRKSA_St18_Manager_operation+0x3a>
    6b6a:	eb 38                	jmp    6ba4 <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E10_M_managerERSt9_Any_dataRKSA_St18_Manager_operation+0x5a>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
    6b6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b70:	48 89 c7             	mov    %rax,%rdi
    6b73:	e8 7a 1a 00 00       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    6b78:	48 8d 15 d9 c1 01 00 	lea    0x1c1d9(%rip),%rdx        # 22d58 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    6b7f:	48 89 10             	mov    %rdx,(%rax)
	    break;
    6b82:	eb 36                	jmp    6bba <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E10_M_managerERSt9_Any_dataRKSA_St18_Manager_operation+0x70>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
    6b84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6b88:	48 89 c7             	mov    %rax,%rdi
    6b8b:	e8 15 1a 00 00       	call   85a5 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E14_M_get_pointerERKSt9_Any_data>
    6b90:	48 89 c3             	mov    %rax,%rbx
    6b93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b97:	48 89 c7             	mov    %rax,%rdi
    6b9a:	e8 6d 1a 00 00       	call   860c <_ZNSt9_Any_data9_M_accessIPZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EERT_v>
    6b9f:	48 89 18             	mov    %rbx,(%rax)
	    break;
    6ba2:	eb 16                	jmp    6bba <_ZNSt17_Function_handlerIFvvEZN4neko10ThreadPool9submitJobERKSt8functionIS0_ERbEUlvE_E10_M_managerERSt9_Any_dataRKSA_St18_Manager_operation+0x70>
	    _Base::_M_manager(__dest, __source, __op);
    6ba4:	8b 55 dc             	mov    -0x24(%rbp),%edx
    6ba7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6bab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6baf:	48 89 ce             	mov    %rcx,%rsi
    6bb2:	48 89 c7             	mov    %rax,%rdi
    6bb5:	e8 6c 1a 00 00       	call   8626 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>
	return false;
    6bba:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6bbf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6bc3:	c9                   	leave
    6bc4:	c3                   	ret

0000000000006bc5 <_ZSt4moveIRSt8functionIFvvEEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6bc5:	55                   	push   %rbp
    6bc6:	48 89 e5             	mov    %rsp,%rbp
    6bc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bd1:	5d                   	pop    %rbp
    6bd2:	c3                   	ret
    6bd3:	90                   	nop

0000000000006bd4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backEOS2_>:
      push_back(value_type&& __x)
    6bd4:	55                   	push   %rbp
    6bd5:	48 89 e5             	mov    %rsp,%rbp
    6bd8:	48 83 ec 10          	sub    $0x10,%rsp
    6bdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6be0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    6be4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6be8:	48 89 c7             	mov    %rax,%rdi
    6beb:	e8 d5 ff ff ff       	call   6bc5 <_ZSt4moveIRSt8functionIFvvEEEONSt16remove_referenceIT_E4typeEOS5_>
    6bf0:	48 89 c2             	mov    %rax,%rdx
    6bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bf7:	48 89 d6             	mov    %rdx,%rsi
    6bfa:	48 89 c7             	mov    %rax,%rdi
    6bfd:	e8 ca 1a 00 00       	call   86cc <_ZNSt5dequeISt8functionIFvvEESaIS2_EE12emplace_backIJS2_EEERS2_DpOT_>
    6c02:	90                   	nop
    6c03:	c9                   	leave
    6c04:	c3                   	ret
    6c05:	90                   	nop

0000000000006c06 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_>:
      push_back(const value_type& __x)
    6c06:	55                   	push   %rbp
    6c07:	48 89 e5             	mov    %rsp,%rbp
    6c0a:	48 83 ec 10          	sub    $0x10,%rsp
    6c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish._M_cur
    6c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c1a:	48 8b 50 30          	mov    0x30(%rax),%rdx
	    != this->_M_impl._M_finish._M_last - 1)
    6c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c22:	48 8b 40 40          	mov    0x40(%rax),%rax
    6c26:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_finish._M_cur
    6c2a:	48 39 c2             	cmp    %rax,%rdx
    6c2d:	74 31                	je     6c60 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_+0x5a>
	    _Alloc_traits::construct(this->_M_impl,
    6c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c33:	48 8b 48 30          	mov    0x30(%rax),%rcx
    6c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c3f:	48 89 ce             	mov    %rcx,%rsi
    6c42:	48 89 c7             	mov    %rax,%rdi
    6c45:	e8 13 1b 00 00       	call   875d <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    ++this->_M_impl._M_finish._M_cur;
    6c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c4e:	48 8b 40 30          	mov    0x30(%rax),%rax
    6c52:	48 8d 50 20          	lea    0x20(%rax),%rdx
    6c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c5a:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    6c5e:	eb 13                	jmp    6c73 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_+0x6d>
	  _M_push_back_aux(__x);
    6c60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c68:	48 89 d6             	mov    %rdx,%rsi
    6c6b:	48 89 c7             	mov    %rax,%rdi
    6c6e:	e8 23 1b 00 00       	call   8796 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>
      }
    6c73:	90                   	nop
    6c74:	c9                   	leave
    6c75:	c3                   	ret

0000000000006c76 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    6c76:	55                   	push   %rbp
    6c77:	48 89 e5             	mov    %rsp,%rbp
    6c7a:	48 83 ec 10          	sub    $0x10,%rsp
    6c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_finish == this->_M_impl._M_start; }
    6c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c86:	48 8d 50 10          	lea    0x10(%rax),%rdx
    6c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c8e:	48 83 c0 30          	add    $0x30,%rax
    6c92:	48 89 d6             	mov    %rdx,%rsi
    6c95:	48 89 c7             	mov    %rax,%rdi
    6c98:	e8 05 1c 00 00       	call   88a2 <_ZSteqRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>
    6c9d:	c9                   	leave
    6c9e:	c3                   	ret
    6c9f:	90                   	nop

0000000000006ca0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5frontEv>:
      front() _GLIBCXX_NOEXCEPT
    6ca0:	55                   	push   %rbp
    6ca1:	48 89 e5             	mov    %rsp,%rbp
    6ca4:	48 83 ec 30          	sub    $0x30,%rsp
    6ca8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	return *begin();
    6cac:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6cb0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6cb4:	48 89 d6             	mov    %rdx,%rsi
    6cb7:	48 89 c7             	mov    %rax,%rdi
    6cba:	e8 11 f8 ff ff       	call   64d0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>
    6cbf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6cc3:	48 89 c7             	mov    %rax,%rdi
    6cc6:	e8 f9 1b 00 00       	call   88c4 <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>
      }
    6ccb:	c9                   	leave
    6ccc:	c3                   	ret
    6ccd:	90                   	nop

0000000000006cce <_ZNSt8functionIFvvEEC1ERKS1_>:
      function(const function& __x)
    6cce:	55                   	push   %rbp
    6ccf:	48 89 e5             	mov    %rsp,%rbp
    6cd2:	53                   	push   %rbx
    6cd3:	48 83 ec 18          	sub    $0x18,%rsp
    6cd7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6cdb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      : _Function_base()
    6cdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ce3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6ce7:	0f 11 00             	movups %xmm0,(%rax)
    6cea:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    6cef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cf3:	48 89 c7             	mov    %rax,%rdi
    6cf6:	e8 7d e5 ff ff       	call   5278 <_ZNSt14_Function_baseC1Ev>
    6cfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cff:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    6d06:	00 
	if (static_cast<bool>(__x))
    6d07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6d0b:	48 89 c7             	mov    %rax,%rdi
    6d0e:	e8 c3 1b 00 00       	call   88d6 <_ZNKSt8functionIFvvEEcvbEv>
    6d13:	84 c0                	test   %al,%al
    6d15:	74 5a                	je     6d71 <_ZNSt8functionIFvvEEC1ERKS1_+0xa3>
	    __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
    6d17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6d1b:	4c 8b 40 10          	mov    0x10(%rax),%r8
    6d1f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6d23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d27:	ba 02 00 00 00       	mov    $0x2,%edx
    6d2c:	48 89 ce             	mov    %rcx,%rsi
    6d2f:	48 89 c7             	mov    %rax,%rdi
    6d32:	41 ff d0             	call   *%r8
	    _M_invoker = __x._M_invoker;
    6d35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6d39:	48 8b 50 18          	mov    0x18(%rax),%rdx
    6d3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d41:	48 89 50 18          	mov    %rdx,0x18(%rax)
	    _M_manager = __x._M_manager;
    6d45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6d49:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6d4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d51:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6d55:	eb 1a                	jmp    6d71 <_ZNSt8functionIFvvEEC1ERKS1_+0xa3>
    6d57:	48 89 c3             	mov    %rax,%rbx
    6d5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d5e:	48 89 c7             	mov    %rax,%rdi
    6d61:	e8 bc cd ff ff       	call   3b22 <_ZNSt14_Function_baseD1Ev>
    6d66:	48 89 d8             	mov    %rbx,%rax
    6d69:	48 89 c7             	mov    %rax,%rdi
    6d6c:	e8 5f c7 ff ff       	call   34d0 <_Unwind_Resume@plt>
    6d71:	90                   	nop
    6d72:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6d76:	c9                   	leave
    6d77:	c3                   	ret

0000000000006d78 <_ZNSt8functionIFvvEE4swapERS1_>:
      void swap(function& __x) noexcept
    6d78:	55                   	push   %rbp
    6d79:	48 89 e5             	mov    %rsp,%rbp
    6d7c:	48 83 ec 10          	sub    $0x10,%rsp
    6d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	std::swap(_M_functor, __x._M_functor);
    6d88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d90:	48 89 d6             	mov    %rdx,%rsi
    6d93:	48 89 c7             	mov    %rax,%rdi
    6d96:	e8 58 1b 00 00       	call   88f3 <_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_>
	std::swap(_M_manager, __x._M_manager);
    6d9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d9f:	48 8d 50 10          	lea    0x10(%rax),%rdx
    6da3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6da7:	48 83 c0 10          	add    $0x10,%rax
    6dab:	48 89 d6             	mov    %rdx,%rsi
    6dae:	48 89 c7             	mov    %rax,%rdi
    6db1:	e8 a7 1b 00 00       	call   895d <_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_>
	std::swap(_M_invoker, __x._M_invoker);
    6db6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6dba:	48 8d 50 18          	lea    0x18(%rax),%rdx
    6dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dc2:	48 83 c0 18          	add    $0x18,%rax
    6dc6:	48 89 d6             	mov    %rdx,%rsi
    6dc9:	48 89 c7             	mov    %rax,%rdi
    6dcc:	e8 de 1b 00 00       	call   89af <_ZSt4swapIPFvRKSt9_Any_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_>
      }
    6dd1:	90                   	nop
    6dd2:	c9                   	leave
    6dd3:	c3                   	ret

0000000000006dd4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv>:
      pop_front() _GLIBCXX_NOEXCEPT
    6dd4:	55                   	push   %rbp
    6dd5:	48 89 e5             	mov    %rsp,%rbp
    6dd8:	53                   	push   %rbx
    6dd9:	48 83 ec 18          	sub    $0x18,%rsp
    6ddd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	if (this->_M_impl._M_start._M_cur
    6de1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6de5:	48 8b 50 10          	mov    0x10(%rax),%rdx
	    != this->_M_impl._M_start._M_last - 1)
    6de9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ded:	48 8b 40 20          	mov    0x20(%rax),%rax
    6df1:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_start._M_cur
    6df5:	48 39 c2             	cmp    %rax,%rdx
    6df8:	74 35                	je     6e2f <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv+0x5b>
	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
    6dfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6dfe:	48 8b 58 10          	mov    0x10(%rax),%rbx
    6e02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e06:	48 89 c7             	mov    %rax,%rdi
    6e09:	e8 1e f7 ff ff       	call   652c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    6e0e:	48 89 de             	mov    %rbx,%rsi
    6e11:	48 89 c7             	mov    %rax,%rdi
    6e14:	e8 e8 1b 00 00       	call   8a01 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>
	    ++this->_M_impl._M_start._M_cur;
    6e19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e1d:	48 8b 40 10          	mov    0x10(%rax),%rax
    6e21:	48 8d 50 20          	lea    0x20(%rax),%rdx
    6e25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e29:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6e2d:	eb 0c                	jmp    6e3b <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv+0x67>
	  _M_pop_front_aux();
    6e2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e33:	48 89 c7             	mov    %rax,%rdi
    6e36:	e8 ed 1b 00 00       	call   8a28 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_pop_front_auxEv>
      }
    6e3b:	90                   	nop
    6e3c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6e40:	c9                   	leave
    6e41:	c3                   	ret

0000000000006e42 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE11lower_boundERS5_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    6e42:	55                   	push   %rbp
    6e43:	48 89 e5             	mov    %rsp,%rbp
    6e46:	48 83 ec 10          	sub    $0x10,%rsp
    6e4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    6e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e5a:	48 89 d6             	mov    %rdx,%rsi
    6e5d:	48 89 c7             	mov    %rax,%rdi
    6e60:	e8 3d 1c 00 00       	call   8aa2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11lower_boundERS3_>
    6e65:	c9                   	leave
    6e66:	c3                   	ret
    6e67:	90                   	nop

0000000000006e68 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6e68:	55                   	push   %rbp
    6e69:	48 89 e5             	mov    %rsp,%rbp
    6e6c:	48 83 ec 10          	sub    $0x10,%rsp
    6e70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    6e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e78:	48 89 c7             	mov    %rax,%rdi
    6e7b:	e8 6e 1c 00 00       	call   8aee <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE3endEv>
    6e80:	c9                   	leave
    6e81:	c3                   	ret

0000000000006e82 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    6e82:	55                   	push   %rbp
    6e83:	48 89 e5             	mov    %rsp,%rbp
    6e86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    6e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e92:	48 8b 10             	mov    (%rax),%rdx
    6e95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6e99:	48 8b 00             	mov    (%rax),%rax
    6e9c:	48 39 c2             	cmp    %rax,%rdx
    6e9f:	0f 94 c0             	sete   %al
    6ea2:	5d                   	pop    %rbp
    6ea3:	c3                   	ret

0000000000006ea4 <_ZNKSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE8key_compEv>:
      key_comp() const
    6ea4:	55                   	push   %rbp
    6ea5:	48 89 e5             	mov    %rsp,%rbp
    6ea8:	48 83 ec 10          	sub    $0x10,%rsp
    6eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    6eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eb4:	48 89 c7             	mov    %rax,%rdi
    6eb7:	e8 5c 1c 00 00       	call   8b18 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8key_compEv>
    6ebc:	90                   	nop
    6ebd:	c9                   	leave
    6ebe:	c3                   	ret
    6ebf:	90                   	nop

0000000000006ec0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6ec0:	55                   	push   %rbp
    6ec1:	48 89 e5             	mov    %rsp,%rbp
    6ec4:	48 83 ec 10          	sub    $0x10,%rsp
    6ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    6ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ed0:	48 8b 00             	mov    (%rax),%rax
    6ed3:	48 89 c7             	mov    %rax,%rdi
    6ed6:	e8 49 1c 00 00       	call   8b24 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    6edb:	c9                   	leave
    6edc:	c3                   	ret
    6edd:	90                   	nop

0000000000006ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    6ede:	55                   	push   %rbp
    6edf:	48 89 e5             	mov    %rsp,%rbp
    6ee2:	48 83 ec 20          	sub    $0x20,%rsp
    6ee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6eea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6eee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    6ef2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ef6:	48 8b 10             	mov    (%rax),%rdx
    6ef9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6efd:	48 8b 00             	mov    (%rax),%rax
    6f00:	48 89 d6             	mov    %rdx,%rsi
    6f03:	48 89 c7             	mov    %rax,%rdi
    6f06:	e8 7d ce ff ff       	call   3d88 <_ZStltNSt6thread2idES0_>
    6f0b:	c9                   	leave
    6f0c:	c3                   	ret

0000000000006f0d <_ZSt16forward_as_tupleIJNSt6thread2idEEESt5tupleIJDpOT_EES5_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    6f0d:	55                   	push   %rbp
    6f0e:	48 89 e5             	mov    %rsp,%rbp
    6f11:	48 83 ec 10          	sub    $0x10,%rsp
    6f15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f19:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    6f1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f21:	48 89 c7             	mov    %rax,%rdi
    6f24:	e8 19 1c 00 00       	call   8b42 <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    6f29:	48 89 c2             	mov    %rax,%rdx
    6f2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f30:	48 89 d6             	mov    %rdx,%rsi
    6f33:	48 89 c7             	mov    %rax,%rdi
    6f36:	e8 15 1c 00 00       	call   8b50 <_ZNSt5tupleIJONSt6thread2idEEEC1IJS1_ELb1ELb1EEEDpOT_>
    6f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f3f:	c9                   	leave
    6f40:	c3                   	ret
    6f41:	90                   	nop

0000000000006f42 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEEC1ERKSt17_Rb_tree_iteratorIS4_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    6f42:	55                   	push   %rbp
    6f43:	48 89 e5             	mov    %rsp,%rbp
    6f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    6f4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f52:	48 8b 10             	mov    (%rax),%rdx
    6f55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f59:	48 89 10             	mov    %rdx,(%rax)
    6f5c:	90                   	nop
    6f5d:	5d                   	pop    %rbp
    6f5e:	c3                   	ret
    6f5f:	90                   	nop

0000000000006f60 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    6f60:	55                   	push   %rbp
    6f61:	48 89 e5             	mov    %rsp,%rbp
    6f64:	41 54                	push   %r12
    6f66:	53                   	push   %rbx
    6f67:	48 83 ec 60          	sub    $0x60,%rsp
    6f6b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    6f6f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    6f73:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    6f77:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    6f7b:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    6f7f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6f83:	48 89 c7             	mov    %rax,%rdi
    6f86:	e8 14 1c 00 00       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    6f8b:	49 89 c4             	mov    %rax,%r12
    6f8e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6f92:	48 89 c7             	mov    %rax,%rdi
    6f95:	e8 f7 1b 00 00       	call   8b91 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    6f9a:	48 89 c3             	mov    %rax,%rbx
    6f9d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6fa1:	48 89 c7             	mov    %rax,%rdi
    6fa4:	e8 da 1b 00 00       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    6fa9:	48 89 c2             	mov    %rax,%rdx
    6fac:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    6fb0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6fb4:	4d 89 e0             	mov    %r12,%r8
    6fb7:	48 89 d9             	mov    %rbx,%rcx
    6fba:	48 89 c7             	mov    %rax,%rdi
    6fbd:	e8 ec 1b 00 00       	call   8bae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEERSA_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    6fc2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6fc6:	48 89 c7             	mov    %rax,%rdi
    6fc9:	e8 e0 20 00 00       	call   90ae <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node6_M_keyEv>
    6fce:	48 89 c2             	mov    %rax,%rdx
    6fd1:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    6fd5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6fd9:	48 89 ce             	mov    %rcx,%rsi
    6fdc:	48 89 c7             	mov    %rax,%rdi
    6fdf:	e8 7c 1c 00 00       	call   8c60 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_>
    6fe4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6fe8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    6fec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6ff0:	48 85 c0             	test   %rax,%rax
    6ff3:	74 1c                	je     7011 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    6ff5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    6ff9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6ffd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7001:	48 89 ce             	mov    %rcx,%rsi
    7004:	48 89 c7             	mov    %rax,%rdi
    7007:	e8 c0 20 00 00       	call   90cc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSD_E>
    700c:	48 89 c3             	mov    %rax,%rbx
    700f:	eb 17                	jmp    7028 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xc8>
	return iterator(__res.first);
    7011:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    7015:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7019:	48 89 d6             	mov    %rdx,%rsi
    701c:	48 89 c7             	mov    %rax,%rdi
    701f:	e8 fe 20 00 00       	call   9122 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    7024:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    7028:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    702c:	48 89 c7             	mov    %rax,%rdi
    702f:	e8 f6 1b 00 00       	call   8c2a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>
    7034:	48 89 d8             	mov    %rbx,%rax
    7037:	eb 1a                	jmp    7053 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xf3>
    7039:	48 89 c3             	mov    %rax,%rbx
    703c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7040:	48 89 c7             	mov    %rax,%rdi
    7043:	e8 e2 1b 00 00       	call   8c2a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>
    7048:	48 89 d8             	mov    %rbx,%rax
    704b:	48 89 c7             	mov    %rax,%rdi
    704e:	e8 7d c4 ff ff       	call   34d0 <_Unwind_Resume@plt>
    7053:	48 83 c4 60          	add    $0x60,%rsp
    7057:	5b                   	pop    %rbx
    7058:	41 5c                	pop    %r12
    705a:	5d                   	pop    %rbp
    705b:	c3                   	ret

000000000000705c <_ZNKSt17reference_wrapperIbE3getEv>:

      _GLIBCXX20_CONSTEXPR
      _Tp&
      get() const noexcept
    705c:	55                   	push   %rbp
    705d:	48 89 e5             	mov    %rsp,%rbp
    7060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_data; }
    7064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7068:	48 8b 00             	mov    (%rax),%rax
    706b:	5d                   	pop    %rbp
    706c:	c3                   	ret
    706d:	90                   	nop

000000000000706e <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    706e:	55                   	push   %rbp
    706f:	48 89 e5             	mov    %rsp,%rbp
    7072:	48 83 ec 10          	sub    $0x10,%rsp
    7076:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    707a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    707e:	48 89 c7             	mov    %rax,%rdi
    7081:	e8 b6 20 00 00       	call   913c <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>
    7086:	90                   	nop
    7087:	c9                   	leave
    7088:	c3                   	ret
    7089:	90                   	nop

000000000000708a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    708a:	55                   	push   %rbp
    708b:	48 89 e5             	mov    %rsp,%rbp
    708e:	48 83 ec 10          	sub    $0x10,%rsp
    7092:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    709a:	48 89 c7             	mov    %rax,%rdi
    709d:	e8 c1 20 00 00       	call   9163 <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    70a2:	c9                   	leave
    70a3:	c3                   	ret

00000000000070a4 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    70a4:	55                   	push   %rbp
    70a5:	48 89 e5             	mov    %rsp,%rbp
    70a8:	48 83 ec 10          	sub    $0x10,%rsp
    70ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    70b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70b4:	48 89 c7             	mov    %rax,%rdi
    70b7:	e8 c2 02 00 00       	call   737e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    70bc:	c9                   	leave
    70bd:	c3                   	ret

00000000000070be <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    70be:	55                   	push   %rbp
    70bf:	48 89 e5             	mov    %rsp,%rbp
    70c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    70c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70ca:	5d                   	pop    %rbp
    70cb:	c3                   	ret

00000000000070cc <_ZN4neko8SettingsD1Ev>:
    70cc:	55                   	push   %rbp
    70cd:	48 89 e5             	mov    %rsp,%rbp
    70d0:	48 83 ec 10          	sub    $0x10,%rsp
    70d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70dc:	48 89 c7             	mov    %rax,%rdi
    70df:	e8 62 e8 ff ff       	call   5946 <_ZN4neko8SettingsUt_D1Ev>
    70e4:	90                   	nop
    70e5:	c9                   	leave
    70e6:	c3                   	ret
    70e7:	90                   	nop

00000000000070e8 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>:
      operator()(_Tp* __ptr) const
    70e8:	55                   	push   %rbp
    70e9:	48 89 e5             	mov    %rsp,%rbp
    70ec:	53                   	push   %rbx
    70ed:	48 83 ec 18          	sub    $0x18,%rsp
    70f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    70f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    70f9:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    70fd:	48 85 db             	test   %rbx,%rbx
    7100:	74 15                	je     7117 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_+0x2f>
    7102:	48 89 df             	mov    %rbx,%rdi
    7105:	e8 c2 ff ff ff       	call   70cc <_ZN4neko8SettingsD1Ev>
    710a:	be 60 00 00 00       	mov    $0x60,%esi
    710f:	48 89 df             	mov    %rbx,%rdi
    7112:	e8 b9 c1 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    7117:	90                   	nop
    7118:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    711c:	c9                   	leave
    711d:	c3                   	ret

000000000000711e <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    711e:	55                   	push   %rbp
    711f:	48 89 e5             	mov    %rsp,%rbp
    7122:	48 83 ec 10          	sub    $0x10,%rsp
    7126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    712a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    712e:	48 89 c7             	mov    %rax,%rdi
    7131:	e8 48 20 00 00       	call   917e <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>
    7136:	90                   	nop
    7137:	c9                   	leave
    7138:	c3                   	ret
    7139:	90                   	nop

000000000000713a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    713a:	55                   	push   %rbp
    713b:	48 89 e5             	mov    %rsp,%rbp
    713e:	48 83 ec 10          	sub    $0x10,%rsp
    7142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    714a:	48 89 c7             	mov    %rax,%rdi
    714d:	e8 53 20 00 00       	call   91a5 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    7152:	c9                   	leave
    7153:	c3                   	ret

0000000000007154 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    7154:	55                   	push   %rbp
    7155:	48 89 e5             	mov    %rsp,%rbp
    7158:	48 83 ec 10          	sub    $0x10,%rsp
    715c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    7160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7164:	48 89 c7             	mov    %rax,%rdi
    7167:	e8 82 04 00 00       	call   75ee <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    716c:	c9                   	leave
    716d:	c3                   	ret

000000000000716e <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    716e:	55                   	push   %rbp
    716f:	48 89 e5             	mov    %rsp,%rbp
    7172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    7176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    717a:	5d                   	pop    %rbp
    717b:	c3                   	ret

000000000000717c <_ZN4neko8RendererD1Ev>:
  ~Renderer() = default;
    717c:	55                   	push   %rbp
    717d:	48 89 e5             	mov    %rsp,%rbp
    7180:	48 83 ec 10          	sub    $0x10,%rsp
    7184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    718c:	48 83 c0 50          	add    $0x50,%rax
    7190:	48 89 c7             	mov    %rax,%rdi
    7193:	e8 ce 5c 00 00       	call   ce66 <_ZN4neko6DeviceD1Ev>
    7198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    719c:	48 83 c0 40          	add    $0x40,%rax
    71a0:	48 89 c7             	mov    %rax,%rdi
    71a3:	e8 40 bc 00 00       	call   12de8 <_ZN4neko7SurfaceD1Ev>
    71a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71ac:	48 83 c0 30          	add    $0x30,%rax
    71b0:	48 89 c7             	mov    %rax,%rdi
    71b3:	e8 22 bb 00 00       	call   12cda <_ZN4neko6WindowD1Ev>
    71b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71bc:	48 83 c0 10          	add    $0x10,%rax
    71c0:	48 89 c7             	mov    %rax,%rdi
    71c3:	e8 28 c7 ff ff       	call   38f0 <_ZN4neko8InstanceD1Ev>
    71c8:	90                   	nop
    71c9:	c9                   	leave
    71ca:	c3                   	ret
    71cb:	90                   	nop

00000000000071cc <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>:
      operator()(_Tp* __ptr) const
    71cc:	55                   	push   %rbp
    71cd:	48 89 e5             	mov    %rsp,%rbp
    71d0:	53                   	push   %rbx
    71d1:	48 83 ec 18          	sub    $0x18,%rsp
    71d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    71d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    71dd:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    71e1:	48 85 db             	test   %rbx,%rbx
    71e4:	74 15                	je     71fb <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_+0x2f>
    71e6:	48 89 df             	mov    %rbx,%rdi
    71e9:	e8 8e ff ff ff       	call   717c <_ZN4neko8RendererD1Ev>
    71ee:	be 70 00 00 00       	mov    $0x70,%esi
    71f3:	48 89 df             	mov    %rbx,%rdi
    71f6:	e8 d5 c0 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    71fb:	90                   	nop
    71fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7200:	c9                   	leave
    7201:	c3                   	ret

0000000000007202 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    7202:	55                   	push   %rbp
    7203:	48 89 e5             	mov    %rsp,%rbp
    7206:	48 83 ec 10          	sub    $0x10,%rsp
    720a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    720e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7212:	48 89 c7             	mov    %rax,%rdi
    7215:	e8 a6 1f 00 00       	call   91c0 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1Ev>
    721a:	90                   	nop
    721b:	c9                   	leave
    721c:	c3                   	ret
    721d:	90                   	nop

000000000000721e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    721e:	55                   	push   %rbp
    721f:	48 89 e5             	mov    %rsp,%rbp
    7222:	48 83 ec 10          	sub    $0x10,%rsp
    7226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    722a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    722e:	48 89 c7             	mov    %rax,%rdi
    7231:	e8 b1 1f 00 00       	call   91e7 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    7236:	c9                   	leave
    7237:	c3                   	ret

0000000000007238 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    7238:	55                   	push   %rbp
    7239:	48 89 e5             	mov    %rsp,%rbp
    723c:	48 83 ec 10          	sub    $0x10,%rsp
    7240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    7244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7248:	48 89 c7             	mov    %rax,%rdi
    724b:	e8 66 02 00 00       	call   74b6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    7250:	c9                   	leave
    7251:	c3                   	ret

0000000000007252 <_ZSt4moveIRPN4neko10ThreadPoolEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    7252:	55                   	push   %rbp
    7253:	48 89 e5             	mov    %rsp,%rbp
    7256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    725a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    725e:	5d                   	pop    %rbp
    725f:	c3                   	ret

0000000000007260 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>:
      operator()(_Tp* __ptr) const
    7260:	55                   	push   %rbp
    7261:	48 89 e5             	mov    %rsp,%rbp
    7264:	53                   	push   %rbx
    7265:	48 83 ec 18          	sub    $0x18,%rsp
    7269:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    726d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    7271:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    7275:	48 85 db             	test   %rbx,%rbx
    7278:	74 15                	je     728f <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_+0x2f>
    727a:	48 89 df             	mov    %rbx,%rdi
    727d:	e8 26 ce ff ff       	call   40a8 <_ZN4neko10ThreadPoolD1Ev>
    7282:	be f8 00 00 00       	mov    $0xf8,%esi
    7287:	48 89 df             	mov    %rbx,%rdi
    728a:	e8 41 c0 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    728f:	90                   	nop
    7290:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7294:	c9                   	leave
    7295:	c3                   	ret

0000000000007296 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    7296:	55                   	push   %rbp
    7297:	48 89 e5             	mov    %rsp,%rbp
    729a:	48 83 ec 10          	sub    $0x10,%rsp
    729e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    72ae:	48 89 d6             	mov    %rdx,%rsi
    72b1:	48 89 c7             	mov    %rax,%rdi
    72b4:	e8 49 1f 00 00       	call   9202 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>
    72b9:	90                   	nop
    72ba:	c9                   	leave
    72bb:	c3                   	ret

00000000000072bc <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    72bc:	55                   	push   %rbp
    72bd:	48 89 e5             	mov    %rsp,%rbp
    72c0:	48 83 ec 10          	sub    $0x10,%rsp
    72c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    72cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    72d4:	48 89 d6             	mov    %rdx,%rsi
    72d7:	48 89 c7             	mov    %rax,%rdi
    72da:	e8 b7 ff ff ff       	call   7296 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    72df:	90                   	nop
    72e0:	c9                   	leave
    72e1:	c3                   	ret

00000000000072e2 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    72e2:	55                   	push   %rbp
    72e3:	48 89 e5             	mov    %rsp,%rbp
    72e6:	53                   	push   %rbx
    72e7:	48 83 ec 28          	sub    $0x28,%rsp
    72eb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    72ef:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    72f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72f7:	48 89 c7             	mov    %rax,%rdi
    72fa:	e8 8b fd ff ff       	call   708a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    72ff:	48 8b 00             	mov    (%rax),%rax
    7302:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    7306:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    730a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    730e:	48 89 c7             	mov    %rax,%rdi
    7311:	e8 74 fd ff ff       	call   708a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    7316:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    7319:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    731e:	74 1e                	je     733e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    7320:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7324:	48 89 c7             	mov    %rax,%rdi
    7327:	e8 52 00 00 00       	call   737e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    732c:	48 89 c2             	mov    %rax,%rdx
    732f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7333:	48 89 c6             	mov    %rax,%rsi
    7336:	48 89 d7             	mov    %rdx,%rdi
    7339:	e8 aa fd ff ff       	call   70e8 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
      }
    733e:	90                   	nop
    733f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7343:	c9                   	leave
    7344:	c3                   	ret
    7345:	90                   	nop

0000000000007346 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    7346:	55                   	push   %rbp
    7347:	48 89 e5             	mov    %rsp,%rbp
    734a:	48 83 ec 20          	sub    $0x20,%rsp
    734e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    7352:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7356:	48 89 c7             	mov    %rax,%rdi
    7359:	e8 2c fd ff ff       	call   708a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    735e:	48 8b 00             	mov    (%rax),%rax
    7361:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    7365:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7369:	48 89 c7             	mov    %rax,%rdi
    736c:	e8 19 fd ff ff       	call   708a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    7371:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    7378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    737c:	c9                   	leave
    737d:	c3                   	ret

000000000000737e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    737e:	55                   	push   %rbp
    737f:	48 89 e5             	mov    %rsp,%rbp
    7382:	48 83 ec 10          	sub    $0x10,%rsp
    7386:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    738a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    738e:	48 89 c7             	mov    %rax,%rdi
    7391:	e8 a3 1e 00 00       	call   9239 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    7396:	c9                   	leave
    7397:	c3                   	ret

0000000000007398 <_ZSt7forwardISt14default_deleteIN4neko8SettingsEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7398:	55                   	push   %rbp
    7399:	48 89 e5             	mov    %rsp,%rbp
    739c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    73a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73a4:	5d                   	pop    %rbp
    73a5:	c3                   	ret

00000000000073a6 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    73a6:	55                   	push   %rbp
    73a7:	48 89 e5             	mov    %rsp,%rbp
    73aa:	48 83 ec 10          	sub    $0x10,%rsp
    73ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    73b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73b6:	48 89 c7             	mov    %rax,%rdi
    73b9:	e8 96 1e 00 00       	call   9254 <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    73be:	c9                   	leave
    73bf:	c3                   	ret

00000000000073c0 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    73c0:	55                   	push   %rbp
    73c1:	48 89 e5             	mov    %rsp,%rbp
    73c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    73c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73cc:	5d                   	pop    %rbp
    73cd:	c3                   	ret

00000000000073ce <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    73ce:	55                   	push   %rbp
    73cf:	48 89 e5             	mov    %rsp,%rbp
    73d2:	48 83 ec 10          	sub    $0x10,%rsp
    73d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    73de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    73e6:	48 89 d6             	mov    %rdx,%rsi
    73e9:	48 89 c7             	mov    %rax,%rdi
    73ec:	e8 81 1e 00 00       	call   9272 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1EPS1_>
    73f1:	90                   	nop
    73f2:	c9                   	leave
    73f3:	c3                   	ret

00000000000073f4 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    73f4:	55                   	push   %rbp
    73f5:	48 89 e5             	mov    %rsp,%rbp
    73f8:	48 83 ec 10          	sub    $0x10,%rsp
    73fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7400:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    7404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7408:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    740c:	48 89 d6             	mov    %rdx,%rsi
    740f:	48 89 c7             	mov    %rax,%rdi
    7412:	e8 b7 ff ff ff       	call   73ce <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    7417:	90                   	nop
    7418:	c9                   	leave
    7419:	c3                   	ret

000000000000741a <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    741a:	55                   	push   %rbp
    741b:	48 89 e5             	mov    %rsp,%rbp
    741e:	53                   	push   %rbx
    741f:	48 83 ec 28          	sub    $0x28,%rsp
    7423:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7427:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    742b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    742f:	48 89 c7             	mov    %rax,%rdi
    7432:	e8 e7 fd ff ff       	call   721e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    7437:	48 8b 00             	mov    (%rax),%rax
    743a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    743e:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    7442:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7446:	48 89 c7             	mov    %rax,%rdi
    7449:	e8 d0 fd ff ff       	call   721e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    744e:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    7451:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    7456:	74 1e                	je     7476 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    7458:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    745c:	48 89 c7             	mov    %rax,%rdi
    745f:	e8 52 00 00 00       	call   74b6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    7464:	48 89 c2             	mov    %rax,%rdx
    7467:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    746b:	48 89 c6             	mov    %rax,%rsi
    746e:	48 89 d7             	mov    %rdx,%rdi
    7471:	e8 ea fd ff ff       	call   7260 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>
      }
    7476:	90                   	nop
    7477:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    747b:	c9                   	leave
    747c:	c3                   	ret
    747d:	90                   	nop

000000000000747e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    747e:	55                   	push   %rbp
    747f:	48 89 e5             	mov    %rsp,%rbp
    7482:	48 83 ec 20          	sub    $0x20,%rsp
    7486:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    748a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    748e:	48 89 c7             	mov    %rax,%rdi
    7491:	e8 88 fd ff ff       	call   721e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    7496:	48 8b 00             	mov    (%rax),%rax
    7499:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    749d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74a1:	48 89 c7             	mov    %rax,%rdi
    74a4:	e8 75 fd ff ff       	call   721e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    74a9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    74b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    74b4:	c9                   	leave
    74b5:	c3                   	ret

00000000000074b6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    74b6:	55                   	push   %rbp
    74b7:	48 89 e5             	mov    %rsp,%rbp
    74ba:	48 83 ec 10          	sub    $0x10,%rsp
    74be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74c6:	48 89 c7             	mov    %rax,%rdi
    74c9:	e8 db 1d 00 00       	call   92a9 <_ZSt3getILm1EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    74ce:	c9                   	leave
    74cf:	c3                   	ret

00000000000074d0 <_ZSt7forwardISt14default_deleteIN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    74d0:	55                   	push   %rbp
    74d1:	48 89 e5             	mov    %rsp,%rbp
    74d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    74d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74dc:	5d                   	pop    %rbp
    74dd:	c3                   	ret

00000000000074de <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    74de:	55                   	push   %rbp
    74df:	48 89 e5             	mov    %rsp,%rbp
    74e2:	48 83 ec 10          	sub    $0x10,%rsp
    74e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    74ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74ee:	48 89 c7             	mov    %rax,%rdi
    74f1:	e8 ce 1d 00 00       	call   92c4 <_ZNKSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    74f6:	c9                   	leave
    74f7:	c3                   	ret

00000000000074f8 <_ZSt7forwardIRN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    74f8:	55                   	push   %rbp
    74f9:	48 89 e5             	mov    %rsp,%rbp
    74fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7504:	5d                   	pop    %rbp
    7505:	c3                   	ret

0000000000007506 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    7506:	55                   	push   %rbp
    7507:	48 89 e5             	mov    %rsp,%rbp
    750a:	48 83 ec 10          	sub    $0x10,%rsp
    750e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7512:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    751a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    751e:	48 89 d6             	mov    %rdx,%rsi
    7521:	48 89 c7             	mov    %rax,%rdi
    7524:	e8 b9 1d 00 00       	call   92e2 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>
    7529:	90                   	nop
    752a:	c9                   	leave
    752b:	c3                   	ret

000000000000752c <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    752c:	55                   	push   %rbp
    752d:	48 89 e5             	mov    %rsp,%rbp
    7530:	48 83 ec 10          	sub    $0x10,%rsp
    7534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7538:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    753c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7540:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7544:	48 89 d6             	mov    %rdx,%rsi
    7547:	48 89 c7             	mov    %rax,%rdi
    754a:	e8 b7 ff ff ff       	call   7506 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    754f:	90                   	nop
    7550:	c9                   	leave
    7551:	c3                   	ret

0000000000007552 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    7552:	55                   	push   %rbp
    7553:	48 89 e5             	mov    %rsp,%rbp
    7556:	53                   	push   %rbx
    7557:	48 83 ec 28          	sub    $0x28,%rsp
    755b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    755f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    7563:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7567:	48 89 c7             	mov    %rax,%rdi
    756a:	e8 cb fb ff ff       	call   713a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    756f:	48 8b 00             	mov    (%rax),%rax
    7572:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    7576:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    757a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    757e:	48 89 c7             	mov    %rax,%rdi
    7581:	e8 b4 fb ff ff       	call   713a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    7586:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    7589:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    758e:	74 1e                	je     75ae <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    7590:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7594:	48 89 c7             	mov    %rax,%rdi
    7597:	e8 52 00 00 00       	call   75ee <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    759c:	48 89 c2             	mov    %rax,%rdx
    759f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75a3:	48 89 c6             	mov    %rax,%rsi
    75a6:	48 89 d7             	mov    %rdx,%rdi
    75a9:	e8 1e fc ff ff       	call   71cc <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
      }
    75ae:	90                   	nop
    75af:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    75b3:	c9                   	leave
    75b4:	c3                   	ret
    75b5:	90                   	nop

00000000000075b6 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    75b6:	55                   	push   %rbp
    75b7:	48 89 e5             	mov    %rsp,%rbp
    75ba:	48 83 ec 20          	sub    $0x20,%rsp
    75be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    75c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75c6:	48 89 c7             	mov    %rax,%rdi
    75c9:	e8 6c fb ff ff       	call   713a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    75ce:	48 8b 00             	mov    (%rax),%rax
    75d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    75d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75d9:	48 89 c7             	mov    %rax,%rdi
    75dc:	e8 59 fb ff ff       	call   713a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    75e1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    75e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    75ec:	c9                   	leave
    75ed:	c3                   	ret

00000000000075ee <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    75ee:	55                   	push   %rbp
    75ef:	48 89 e5             	mov    %rsp,%rbp
    75f2:	48 83 ec 10          	sub    $0x10,%rsp
    75f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75fe:	48 89 c7             	mov    %rax,%rdi
    7601:	e8 13 1d 00 00       	call   9319 <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    7606:	c9                   	leave
    7607:	c3                   	ret

0000000000007608 <_ZSt7forwardISt14default_deleteIN4neko8RendererEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7608:	55                   	push   %rbp
    7609:	48 89 e5             	mov    %rsp,%rbp
    760c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7614:	5d                   	pop    %rbp
    7615:	c3                   	ret

0000000000007616 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    7616:	55                   	push   %rbp
    7617:	48 89 e5             	mov    %rsp,%rbp
    761a:	48 83 ec 10          	sub    $0x10,%rsp
    761e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    7622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7626:	48 89 c7             	mov    %rax,%rdi
    7629:	e8 06 1d 00 00       	call   9334 <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    762e:	c9                   	leave
    762f:	c3                   	ret

0000000000007630 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E21_M_not_empty_functionIS3_EEbRKT_>:
	  _M_not_empty_function(const _Tp&) noexcept
    7630:	55                   	push   %rbp
    7631:	48 89 e5             	mov    %rsp,%rbp
    7634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  { return true; }
    7638:	b8 01 00 00 00       	mov    $0x1,%eax
    763d:	5d                   	pop    %rbp
    763e:	c3                   	ret

000000000000763f <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    763f:	55                   	push   %rbp
    7640:	48 89 e5             	mov    %rsp,%rbp
    7643:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7647:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    764b:	5d                   	pop    %rbp
    764c:	c3                   	ret

000000000000764d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    764d:	55                   	push   %rbp
    764e:	48 89 e5             	mov    %rsp,%rbp
    7651:	48 83 ec 10          	sub    $0x10,%rsp
    7655:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7659:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    765d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7661:	48 89 c7             	mov    %rax,%rdi
    7664:	e8 d6 ff ff ff       	call   763f <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    7669:	48 89 c2             	mov    %rax,%rdx
    766c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7670:	48 89 d6             	mov    %rdx,%rsi
    7673:	48 89 c7             	mov    %rax,%rdi
    7676:	e8 d6 1c 00 00       	call   9351 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    767b:	90                   	nop
    767c:	c9                   	leave
    767d:	c3                   	ret

000000000000767e <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E9_M_invokeERKSt9_Any_data>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    767e:	55                   	push   %rbp
    767f:	48 89 e5             	mov    %rsp,%rbp
    7682:	48 83 ec 10          	sub    $0x10,%rsp
    7686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
    768a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    768e:	48 89 c7             	mov    %rax,%rdi
    7691:	e8 01 1d 00 00       	call   9397 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    7696:	48 89 c7             	mov    %rax,%rdi
    7699:	e8 23 1d 00 00       	call   93c1 <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>
				     std::forward<_ArgTypes>(__args)...);
    769e:	90                   	nop
      }
    769f:	c9                   	leave
    76a0:	c3                   	ret

00000000000076a1 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
      _M_manager(_Any_data& __dest, const _Any_data& __source,
    76a1:	55                   	push   %rbp
    76a2:	48 89 e5             	mov    %rsp,%rbp
    76a5:	53                   	push   %rbx
    76a6:	48 83 ec 28          	sub    $0x28,%rsp
    76aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    76ae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    76b2:	89 55 dc             	mov    %edx,-0x24(%rbp)
	switch (__op)
    76b5:	8b 45 dc             	mov    -0x24(%rbp),%eax
    76b8:	85 c0                	test   %eax,%eax
    76ba:	74 07                	je     76c3 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x22>
    76bc:	83 f8 01             	cmp    $0x1,%eax
    76bf:	74 1a                	je     76db <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x3a>
    76c1:	eb 38                	jmp    76fb <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x5a>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
    76c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76c7:	48 89 c7             	mov    %rax,%rdi
    76ca:	e8 23 0f 00 00       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    76cf:	48 8d 15 72 b6 01 00 	lea    0x1b672(%rip),%rdx        # 22d48 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    76d6:	48 89 10             	mov    %rdx,(%rax)
	    break;
    76d9:	eb 36                	jmp    7711 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
    76db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    76df:	48 89 c7             	mov    %rax,%rdi
    76e2:	e8 b0 1c 00 00       	call   9397 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    76e7:	48 89 c3             	mov    %rax,%rbx
    76ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76ee:	48 89 c7             	mov    %rax,%rdi
    76f1:	e8 ee 1c 00 00       	call   93e4 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>
    76f6:	48 89 18             	mov    %rbx,(%rax)
	    break;
    76f9:	eb 16                	jmp    7711 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    _Base::_M_manager(__dest, __source, __op);
    76fb:	8b 55 dc             	mov    -0x24(%rbp),%edx
    76fe:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7702:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7706:	48 89 ce             	mov    %rcx,%rsi
    7709:	48 89 c7             	mov    %rax,%rdi
    770c:	e8 ed 1c 00 00       	call   93fe <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
	return false;
    7711:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7716:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    771a:	c9                   	leave
    771b:	c3                   	ret

000000000000771c <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E21_M_not_empty_functionIS3_EEbRKT_>:
	  _M_not_empty_function(const _Tp&) noexcept
    771c:	55                   	push   %rbp
    771d:	48 89 e5             	mov    %rsp,%rbp
    7720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  { return true; }
    7724:	b8 01 00 00 00       	mov    $0x1,%eax
    7729:	5d                   	pop    %rbp
    772a:	c3                   	ret

000000000000772b <_ZSt7forwardIZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    772b:	55                   	push   %rbp
    772c:	48 89 e5             	mov    %rsp,%rbp
    772f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7733:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7737:	5d                   	pop    %rbp
    7738:	c3                   	ret

0000000000007739 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    7739:	55                   	push   %rbp
    773a:	48 89 e5             	mov    %rsp,%rbp
    773d:	48 83 ec 10          	sub    $0x10,%rsp
    7741:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7745:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    7749:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    774d:	48 89 c7             	mov    %rax,%rdi
    7750:	e8 d6 ff ff ff       	call   772b <_ZSt7forwardIZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS3_E4typeE>
    7755:	48 89 c2             	mov    %rax,%rdx
    7758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    775c:	48 89 d6             	mov    %rdx,%rsi
    775f:	48 89 c7             	mov    %rax,%rdi
    7762:	e8 3d 1d 00 00       	call   94a4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    7767:	90                   	nop
    7768:	c9                   	leave
    7769:	c3                   	ret

000000000000776a <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E9_M_invokeERKSt9_Any_data>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    776a:	55                   	push   %rbp
    776b:	48 89 e5             	mov    %rsp,%rbp
    776e:	48 83 ec 10          	sub    $0x10,%rsp
    7772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
    7776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    777a:	48 89 c7             	mov    %rax,%rdi
    777d:	e8 5a 1d 00 00       	call   94dc <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E14_M_get_pointerERKSt9_Any_data>
    7782:	48 89 c7             	mov    %rax,%rdi
    7785:	e8 7c 1d 00 00       	call   9506 <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE0_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>
				     std::forward<_ArgTypes>(__args)...);
    778a:	90                   	nop
      }
    778b:	c9                   	leave
    778c:	c3                   	ret

000000000000778d <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
      _M_manager(_Any_data& __dest, const _Any_data& __source,
    778d:	55                   	push   %rbp
    778e:	48 89 e5             	mov    %rsp,%rbp
    7791:	53                   	push   %rbx
    7792:	48 83 ec 28          	sub    $0x28,%rsp
    7796:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    779a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    779e:	89 55 dc             	mov    %edx,-0x24(%rbp)
	switch (__op)
    77a1:	8b 45 dc             	mov    -0x24(%rbp),%eax
    77a4:	85 c0                	test   %eax,%eax
    77a6:	74 07                	je     77af <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x22>
    77a8:	83 f8 01             	cmp    $0x1,%eax
    77ab:	74 1a                	je     77c7 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x3a>
    77ad:	eb 38                	jmp    77e7 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x5a>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
    77af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77b3:	48 89 c7             	mov    %rax,%rdi
    77b6:	e8 37 0e 00 00       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    77bb:	48 8d 15 76 b5 01 00 	lea    0x1b576(%rip),%rdx        # 22d38 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    77c2:	48 89 10             	mov    %rdx,(%rax)
	    break;
    77c5:	eb 36                	jmp    77fd <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
    77c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    77cb:	48 89 c7             	mov    %rax,%rdi
    77ce:	e8 09 1d 00 00       	call   94dc <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E14_M_get_pointerERKSt9_Any_data>
    77d3:	48 89 c3             	mov    %rax,%rbx
    77d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77da:	48 89 c7             	mov    %rax,%rdi
    77dd:	e8 48 1d 00 00       	call   952a <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE0_EERT_v>
    77e2:	48 89 18             	mov    %rbx,(%rax)
	    break;
    77e5:	eb 16                	jmp    77fd <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    _Base::_M_manager(__dest, __source, __op);
    77e7:	8b 55 dc             	mov    -0x24(%rbp),%edx
    77ea:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    77ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77f2:	48 89 ce             	mov    %rcx,%rsi
    77f5:	48 89 c7             	mov    %rax,%rdi
    77f8:	e8 47 1d 00 00       	call   9544 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
	return false;
    77fd:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7802:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7806:	c9                   	leave
    7807:	c3                   	ret

0000000000007808 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E21_M_not_empty_functionIS3_EEbRKT_>:
	  _M_not_empty_function(const _Tp&) noexcept
    7808:	55                   	push   %rbp
    7809:	48 89 e5             	mov    %rsp,%rbp
    780c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  { return true; }
    7810:	b8 01 00 00 00       	mov    $0x1,%eax
    7815:	5d                   	pop    %rbp
    7816:	c3                   	ret

0000000000007817 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7817:	55                   	push   %rbp
    7818:	48 89 e5             	mov    %rsp,%rbp
    781b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    781f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7823:	5d                   	pop    %rbp
    7824:	c3                   	ret

0000000000007825 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    7825:	55                   	push   %rbp
    7826:	48 89 e5             	mov    %rsp,%rbp
    7829:	48 83 ec 10          	sub    $0x10,%rsp
    782d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7831:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    7835:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7839:	48 89 c7             	mov    %rax,%rdi
    783c:	e8 d6 ff ff ff       	call   7817 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS3_E4typeE>
    7841:	48 89 c2             	mov    %rax,%rdx
    7844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7848:	48 89 d6             	mov    %rdx,%rsi
    784b:	48 89 c7             	mov    %rax,%rdi
    784e:	e8 97 1d 00 00       	call   95ea <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    7853:	90                   	nop
    7854:	c9                   	leave
    7855:	c3                   	ret

0000000000007856 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E9_M_invokeERKSt9_Any_data>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    7856:	55                   	push   %rbp
    7857:	48 89 e5             	mov    %rsp,%rbp
    785a:	48 83 ec 10          	sub    $0x10,%rsp
    785e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
    7862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7866:	48 89 c7             	mov    %rax,%rdi
    7869:	e8 b4 1d 00 00       	call   9622 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E14_M_get_pointerERKSt9_Any_data>
    786e:	48 89 c7             	mov    %rax,%rdi
    7871:	e8 d6 1d 00 00       	call   964c <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE1_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>
				     std::forward<_ArgTypes>(__args)...);
    7876:	90                   	nop
      }
    7877:	c9                   	leave
    7878:	c3                   	ret

0000000000007879 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
      _M_manager(_Any_data& __dest, const _Any_data& __source,
    7879:	55                   	push   %rbp
    787a:	48 89 e5             	mov    %rsp,%rbp
    787d:	53                   	push   %rbx
    787e:	48 83 ec 28          	sub    $0x28,%rsp
    7882:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7886:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    788a:	89 55 dc             	mov    %edx,-0x24(%rbp)
	switch (__op)
    788d:	8b 45 dc             	mov    -0x24(%rbp),%eax
    7890:	85 c0                	test   %eax,%eax
    7892:	74 07                	je     789b <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x22>
    7894:	83 f8 01             	cmp    $0x1,%eax
    7897:	74 1a                	je     78b3 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x3a>
    7899:	eb 38                	jmp    78d3 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x5a>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
    789b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    789f:	48 89 c7             	mov    %rax,%rdi
    78a2:	e8 4b 0d 00 00       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    78a7:	48 8d 15 7a b4 01 00 	lea    0x1b47a(%rip),%rdx        # 22d28 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    78ae:	48 89 10             	mov    %rdx,(%rax)
	    break;
    78b1:	eb 36                	jmp    78e9 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
    78b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78b7:	48 89 c7             	mov    %rax,%rdi
    78ba:	e8 63 1d 00 00       	call   9622 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E14_M_get_pointerERKSt9_Any_data>
    78bf:	48 89 c3             	mov    %rax,%rbx
    78c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78c6:	48 89 c7             	mov    %rax,%rdi
    78c9:	e8 a2 1d 00 00       	call   9670 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE1_EERT_v>
    78ce:	48 89 18             	mov    %rbx,(%rax)
	    break;
    78d1:	eb 16                	jmp    78e9 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    _Base::_M_manager(__dest, __source, __op);
    78d3:	8b 55 dc             	mov    -0x24(%rbp),%edx
    78d6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    78da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78de:	48 89 ce             	mov    %rcx,%rsi
    78e1:	48 89 c7             	mov    %rax,%rdi
    78e4:	e8 a1 1d 00 00       	call   968a <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
	return false;
    78e9:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    78ee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    78f2:	c9                   	leave
    78f3:	c3                   	ret

00000000000078f4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E21_M_not_empty_functionIS3_EEbRKT_>:
	  _M_not_empty_function(const _Tp&) noexcept
    78f4:	55                   	push   %rbp
    78f5:	48 89 e5             	mov    %rsp,%rbp
    78f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  { return true; }
    78fc:	b8 01 00 00 00       	mov    $0x1,%eax
    7901:	5d                   	pop    %rbp
    7902:	c3                   	ret

0000000000007903 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7903:	55                   	push   %rbp
    7904:	48 89 e5             	mov    %rsp,%rbp
    7907:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    790b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    790f:	5d                   	pop    %rbp
    7910:	c3                   	ret

0000000000007911 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    7911:	55                   	push   %rbp
    7912:	48 89 e5             	mov    %rsp,%rbp
    7915:	48 83 ec 10          	sub    $0x10,%rsp
    7919:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    791d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    7921:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7925:	48 89 c7             	mov    %rax,%rdi
    7928:	e8 d6 ff ff ff       	call   7903 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS3_E4typeE>
    792d:	48 89 c2             	mov    %rax,%rdx
    7930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7934:	48 89 d6             	mov    %rdx,%rsi
    7937:	48 89 c7             	mov    %rax,%rdi
    793a:	e8 f1 1d 00 00       	call   9730 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    793f:	90                   	nop
    7940:	c9                   	leave
    7941:	c3                   	ret

0000000000007942 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E9_M_invokeERKSt9_Any_data>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    7942:	55                   	push   %rbp
    7943:	48 89 e5             	mov    %rsp,%rbp
    7946:	48 83 ec 10          	sub    $0x10,%rsp
    794a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
    794e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7952:	48 89 c7             	mov    %rax,%rdi
    7955:	e8 0e 1e 00 00       	call   9768 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E14_M_get_pointerERKSt9_Any_data>
    795a:	48 89 c7             	mov    %rax,%rdi
    795d:	e8 30 1e 00 00       	call   9792 <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE2_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>
				     std::forward<_ArgTypes>(__args)...);
    7962:	90                   	nop
      }
    7963:	c9                   	leave
    7964:	c3                   	ret

0000000000007965 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
      _M_manager(_Any_data& __dest, const _Any_data& __source,
    7965:	55                   	push   %rbp
    7966:	48 89 e5             	mov    %rsp,%rbp
    7969:	53                   	push   %rbx
    796a:	48 83 ec 28          	sub    $0x28,%rsp
    796e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7972:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7976:	89 55 dc             	mov    %edx,-0x24(%rbp)
	switch (__op)
    7979:	8b 45 dc             	mov    -0x24(%rbp),%eax
    797c:	85 c0                	test   %eax,%eax
    797e:	74 07                	je     7987 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x22>
    7980:	83 f8 01             	cmp    $0x1,%eax
    7983:	74 1a                	je     799f <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x3a>
    7985:	eb 38                	jmp    79bf <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x5a>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
    7987:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    798b:	48 89 c7             	mov    %rax,%rdi
    798e:	e8 5f 0c 00 00       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    7993:	48 8d 15 7e b3 01 00 	lea    0x1b37e(%rip),%rdx        # 22d18 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    799a:	48 89 10             	mov    %rdx,(%rax)
	    break;
    799d:	eb 36                	jmp    79d5 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
    799f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79a3:	48 89 c7             	mov    %rax,%rdi
    79a6:	e8 bd 1d 00 00       	call   9768 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E14_M_get_pointerERKSt9_Any_data>
    79ab:	48 89 c3             	mov    %rax,%rbx
    79ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79b2:	48 89 c7             	mov    %rax,%rdi
    79b5:	e8 fc 1d 00 00       	call   97b6 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE2_EERT_v>
    79ba:	48 89 18             	mov    %rbx,(%rax)
	    break;
    79bd:	eb 16                	jmp    79d5 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    _Base::_M_manager(__dest, __source, __op);
    79bf:	8b 55 dc             	mov    -0x24(%rbp),%edx
    79c2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    79c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79ca:	48 89 ce             	mov    %rcx,%rsi
    79cd:	48 89 c7             	mov    %rax,%rdi
    79d0:	e8 fb 1d 00 00       	call   97d0 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
	return false;
    79d5:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    79da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    79de:	c9                   	leave
    79df:	c3                   	ret

00000000000079e0 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    79e0:	55                   	push   %rbp
    79e1:	48 89 e5             	mov    %rsp,%rbp
    79e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    79e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ec:	5d                   	pop    %rbp
    79ed:	c3                   	ret

00000000000079ee <_ZNSt17reference_wrapperIbE6_S_funERb>:
      static _Tp* _S_fun(_Tp& __r) noexcept { return std::__addressof(__r); }
    79ee:	55                   	push   %rbp
    79ef:	48 89 e5             	mov    %rsp,%rbp
    79f2:	48 83 ec 10          	sub    $0x10,%rsp
    79f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79fe:	48 89 c7             	mov    %rax,%rdi
    7a01:	e8 70 1e 00 00       	call   9876 <_ZSt11__addressofIbEPT_RS0_>
    7a06:	c9                   	leave
    7a07:	c3                   	ret

0000000000007a08 <_ZNSt15__new_allocatorISt17reference_wrapperIbEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7a08:	55                   	push   %rbp
    7a09:	48 89 e5             	mov    %rsp,%rbp
    7a0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a10:	90                   	nop
    7a11:	5d                   	pop    %rbp
    7a12:	c3                   	ret
    7a13:	90                   	nop

0000000000007a14 <_ZNSt15__new_allocatorISt17reference_wrapperIbEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7a14:	55                   	push   %rbp
    7a15:	48 89 e5             	mov    %rsp,%rbp
    7a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a1c:	90                   	nop
    7a1d:	5d                   	pop    %rbp
    7a1e:	c3                   	ret
    7a1f:	90                   	nop

0000000000007a20 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7a20:	55                   	push   %rbp
    7a21:	48 89 e5             	mov    %rsp,%rbp
    7a24:	48 83 ec 10          	sub    $0x10,%rsp
    7a28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a30:	48 89 c7             	mov    %rax,%rdi
    7a33:	e8 62 e5 ff ff       	call   5f9a <_ZNSaISt17reference_wrapperIbEED1Ev>
    7a38:	90                   	nop
    7a39:	c9                   	leave
    7a3a:	c3                   	ret
    7a3b:	90                   	nop

0000000000007a3c <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    7a3c:	55                   	push   %rbp
    7a3d:	48 89 e5             	mov    %rsp,%rbp
    7a40:	48 83 ec 10          	sub    $0x10,%rsp
    7a44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    7a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7a54:	48 89 d6             	mov    %rdx,%rsi
    7a57:	48 89 c7             	mov    %rax,%rdi
    7a5a:	e8 25 1e 00 00       	call   9884 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE12_Vector_implC1ERKS2_>
    7a5f:	90                   	nop
    7a60:	c9                   	leave
    7a61:	c3                   	ret

0000000000007a62 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7a62:	55                   	push   %rbp
    7a63:	48 89 e5             	mov    %rsp,%rbp
    7a66:	48 83 ec 10          	sub    $0x10,%rsp
    7a6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a72:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a7a:	48 8b 00             	mov    (%rax),%rax
    7a7d:	48 29 c2             	sub    %rax,%rdx
    7a80:	48 89 d0             	mov    %rdx,%rax
    7a83:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    7a87:	48 89 c2             	mov    %rax,%rdx
    7a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a8e:	48 8b 08             	mov    (%rax),%rcx
    7a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a95:	48 89 ce             	mov    %rcx,%rsi
    7a98:	48 89 c7             	mov    %rax,%rdi
    7a9b:	e8 16 1e 00 00       	call   98b6 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE13_M_deallocateEPS1_m>
      }
    7aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7aa4:	48 89 c7             	mov    %rax,%rdi
    7aa7:	e8 74 ff ff ff       	call   7a20 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE12_Vector_implD1Ev>
    7aac:	90                   	nop
    7aad:	c9                   	leave
    7aae:	c3                   	ret
    7aaf:	90                   	nop

0000000000007ab0 <_ZNKSt16initializer_listISt17reference_wrapperIbEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    7ab0:	55                   	push   %rbp
    7ab1:	48 89 e5             	mov    %rsp,%rbp
    7ab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7abc:	48 8b 00             	mov    (%rax),%rax
    7abf:	5d                   	pop    %rbp
    7ac0:	c3                   	ret
    7ac1:	90                   	nop

0000000000007ac2 <_ZNKSt16initializer_listISt17reference_wrapperIbEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    7ac2:	55                   	push   %rbp
    7ac3:	48 89 e5             	mov    %rsp,%rbp
    7ac6:	53                   	push   %rbx
    7ac7:	48 83 ec 18          	sub    $0x18,%rsp
    7acb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7acf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ad3:	48 89 c7             	mov    %rax,%rdi
    7ad6:	e8 d5 ff ff ff       	call   7ab0 <_ZNKSt16initializer_listISt17reference_wrapperIbEE5beginEv>
    7adb:	48 89 c3             	mov    %rax,%rbx
    7ade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ae2:	48 89 c7             	mov    %rax,%rdi
    7ae5:	e8 02 1e 00 00       	call   98ec <_ZNKSt16initializer_listISt17reference_wrapperIbEE4sizeEv>
    7aea:	48 c1 e0 03          	shl    $0x3,%rax
    7aee:	48 01 d8             	add    %rbx,%rax
    7af1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7af5:	c9                   	leave
    7af6:	c3                   	ret

0000000000007af7 <_ZSt8distanceIPKSt17reference_wrapperIbEENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    7af7:	55                   	push   %rbp
    7af8:	48 89 e5             	mov    %rsp,%rbp
    7afb:	48 83 ec 10          	sub    $0x10,%rsp
    7aff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b03:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    7b07:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7b0b:	48 89 c7             	mov    %rax,%rdi
    7b0e:	e8 eb 1d 00 00       	call   98fe <_ZSt19__iterator_categoryIPKSt17reference_wrapperIbEENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    7b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b1b:	48 89 d6             	mov    %rdx,%rsi
    7b1e:	48 89 c7             	mov    %rax,%rdi
    7b21:	e8 e3 1d 00 00       	call   9909 <_ZSt10__distanceIPKSt17reference_wrapperIbEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    7b26:	c9                   	leave
    7b27:	c3                   	ret

0000000000007b28 <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    7b28:	55                   	push   %rbp
    7b29:	48 89 e5             	mov    %rsp,%rbp
    7b2c:	53                   	push   %rbx
    7b2d:	48 83 ec 38          	sub    $0x38,%rsp
    7b31:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7b35:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7b39:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    7b3d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7b41:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b45:	48 89 d6             	mov    %rdx,%rsi
    7b48:	48 89 c7             	mov    %rax,%rdi
    7b4b:	e8 a7 ff ff ff       	call   7af7 <_ZSt8distanceIPKSt17reference_wrapperIbEENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    7b50:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    7b54:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    7b58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b5c:	48 89 c7             	mov    %rax,%rdi
    7b5f:	e8 74 00 00 00       	call   7bd8 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE19_M_get_Tp_allocatorEv>
    7b64:	48 89 c2             	mov    %rax,%rdx
    7b67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b6b:	48 89 d6             	mov    %rdx,%rsi
    7b6e:	48 89 c7             	mov    %rax,%rdi
    7b71:	e8 ad 1d 00 00       	call   9923 <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EE17_S_check_init_lenEmRKS2_>
    7b76:	48 89 c6             	mov    %rax,%rsi
    7b79:	48 89 df             	mov    %rbx,%rdi
    7b7c:	e8 03 1e 00 00       	call   9984 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE11_M_allocateEm>
    7b81:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7b85:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7b88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b8c:	48 8b 00             	mov    (%rax),%rax
    7b8f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b93:	48 c1 e2 03          	shl    $0x3,%rdx
    7b97:	48 01 c2             	add    %rax,%rdx
    7b9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b9e:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    7ba2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ba6:	48 89 c7             	mov    %rax,%rdi
    7ba9:	e8 2a 00 00 00       	call   7bd8 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE19_M_get_Tp_allocatorEv>
    7bae:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    7bb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7bb5:	48 8b 10             	mov    (%rax),%rdx
    7bb8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7bbc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7bc0:	48 89 c7             	mov    %rax,%rdi
    7bc3:	e8 ef 1d 00 00       	call   99b7 <_ZSt22__uninitialized_copy_aIPKSt17reference_wrapperIbEPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    7bc8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7bcc:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    7bd0:	90                   	nop
    7bd1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7bd5:	c9                   	leave
    7bd6:	c3                   	ret
    7bd7:	90                   	nop

0000000000007bd8 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7bd8:	55                   	push   %rbp
    7bd9:	48 89 e5             	mov    %rsp,%rbp
    7bdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7be4:	5d                   	pop    %rbp
    7be5:	c3                   	ret

0000000000007be6 <_ZSt8_DestroyIPSt17reference_wrapperIbES1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7be6:	55                   	push   %rbp
    7be7:	48 89 e5             	mov    %rsp,%rbp
    7bea:	48 83 ec 20          	sub    $0x20,%rsp
    7bee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7bf6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7bfa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c02:	48 89 d6             	mov    %rdx,%rsi
    7c05:	48 89 c7             	mov    %rax,%rdi
    7c08:	e8 db 1d 00 00       	call   99e8 <_ZSt8_DestroyIPSt17reference_wrapperIbEEvT_S3_>
    }
    7c0d:	90                   	nop
    7c0e:	c9                   	leave
    7c0f:	c3                   	ret

0000000000007c10 <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    7c10:	55                   	push   %rbp
    7c11:	48 89 e5             	mov    %rsp,%rbp
    7c14:	48 83 ec 10          	sub    $0x10,%rsp
    7c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c28:	48 89 d6             	mov    %rdx,%rsi
    7c2b:	48 89 c7             	mov    %rax,%rdi
    7c2e:	e8 db 1d 00 00       	call   9a0e <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>
    7c33:	90                   	nop
    7c34:	c9                   	leave
    7c35:	c3                   	ret

0000000000007c36 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    7c36:	55                   	push   %rbp
    7c37:	48 89 e5             	mov    %rsp,%rbp
    7c3a:	48 83 ec 10          	sub    $0x10,%rsp
    7c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    7c46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c4e:	48 89 d6             	mov    %rdx,%rsi
    7c51:	48 89 c7             	mov    %rax,%rdi
    7c54:	e8 b7 ff ff ff       	call   7c10 <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    7c59:	90                   	nop
    7c5a:	c9                   	leave
    7c5b:	c3                   	ret

0000000000007c5c <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    7c5c:	55                   	push   %rbp
    7c5d:	48 89 e5             	mov    %rsp,%rbp
    7c60:	48 83 ec 10          	sub    $0x10,%rsp
    7c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c6c:	48 89 c7             	mov    %rax,%rdi
    7c6f:	e8 d1 1d 00 00       	call   9a45 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    7c74:	c9                   	leave
    7c75:	c3                   	ret

0000000000007c76 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    7c76:	55                   	push   %rbp
    7c77:	48 89 e5             	mov    %rsp,%rbp
    7c7a:	48 83 ec 10          	sub    $0x10,%rsp
    7c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    7c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c86:	48 89 c7             	mov    %rax,%rdi
    7c89:	e8 d2 1d 00 00       	call   9a60 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>
    7c8e:	c9                   	leave
    7c8f:	c3                   	ret

0000000000007c90 <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    7c90:	55                   	push   %rbp
    7c91:	48 89 e5             	mov    %rsp,%rbp
    7c94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    7c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c9c:	5d                   	pop    %rbp
    7c9d:	c3                   	ret

0000000000007c9e <_ZN4neko6EngineD1Ev>:
  ~Engine() = default;
    7c9e:	55                   	push   %rbp
    7c9f:	48 89 e5             	mov    %rsp,%rbp
    7ca2:	48 83 ec 10          	sub    $0x10,%rsp
    7ca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7caa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cae:	48 83 c0 10          	add    $0x10,%rax
    7cb2:	48 89 c7             	mov    %rax,%rdi
    7cb5:	e8 44 db ff ff       	call   57fe <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    7cba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cbe:	48 83 c0 08          	add    $0x8,%rax
    7cc2:	48 89 c7             	mov    %rax,%rdi
    7cc5:	e8 72 da ff ff       	call   573c <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    7cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cce:	48 89 c7             	mov    %rax,%rdi
    7cd1:	e8 a4 d9 ff ff       	call   567a <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    7cd6:	90                   	nop
    7cd7:	c9                   	leave
    7cd8:	c3                   	ret
    7cd9:	90                   	nop

0000000000007cda <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>:
      operator()(_Tp* __ptr) const
    7cda:	55                   	push   %rbp
    7cdb:	48 89 e5             	mov    %rsp,%rbp
    7cde:	53                   	push   %rbx
    7cdf:	48 83 ec 18          	sub    $0x18,%rsp
    7ce3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7ce7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    7ceb:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    7cef:	48 85 db             	test   %rbx,%rbx
    7cf2:	74 15                	je     7d09 <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_+0x2f>
    7cf4:	48 89 df             	mov    %rbx,%rdi
    7cf7:	e8 a2 ff ff ff       	call   7c9e <_ZN4neko6EngineD1Ev>
    7cfc:	be 18 00 00 00       	mov    $0x18,%esi
    7d01:	48 89 df             	mov    %rbx,%rdi
    7d04:	e8 c7 b5 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    7d09:	90                   	nop
    7d0a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d0e:	c9                   	leave
    7d0f:	c3                   	ret

0000000000007d10 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    7d10:	55                   	push   %rbp
    7d11:	48 89 e5             	mov    %rsp,%rbp
    7d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    7d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d1c:	48 8b 00             	mov    (%rax),%rax
    7d1f:	5d                   	pop    %rbp
    7d20:	c3                   	ret

0000000000007d21 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    7d21:	55                   	push   %rbp
    7d22:	48 89 e5             	mov    %rsp,%rbp
    7d25:	53                   	push   %rbx
    7d26:	48 83 ec 38          	sub    $0x38,%rsp
    7d2a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7d2e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    7d32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d36:	48 8b 00             	mov    (%rax),%rax
    7d39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7d3d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7d41:	48 89 c7             	mov    %rax,%rdi
    7d44:	e8 03 bd ff ff       	call   3a4c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    7d49:	48 89 c3             	mov    %rax,%rbx
    7d4c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7d50:	48 8b 00             	mov    (%rax),%rax
    7d53:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7d57:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7d5b:	48 89 c7             	mov    %rax,%rdi
    7d5e:	e8 e9 bc ff ff       	call   3a4c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    7d63:	48 29 c3             	sub    %rax,%rbx
    7d66:	48 89 da             	mov    %rbx,%rdx
    7d69:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7d6d:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    7d71:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7d75:	48 89 d6             	mov    %rdx,%rsi
    7d78:	48 89 c7             	mov    %rax,%rdi
    7d7b:	e8 ae bc ff ff       	call   3a2e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    7d80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    7d84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d88:	c9                   	leave
    7d89:	c3                   	ret

0000000000007d8a <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    7d8a:	55                   	push   %rbp
    7d8b:	48 89 e5             	mov    %rsp,%rbp
    7d8e:	48 83 ec 20          	sub    $0x20,%rsp
    7d92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    7d96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d9a:	48 89 c7             	mov    %rax,%rdi
    7d9d:	e8 aa bc ff ff       	call   3a4c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    7da2:	48 89 c1             	mov    %rax,%rcx
    7da5:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    7dac:	9b c4 20 
    7daf:	48 89 c8             	mov    %rcx,%rax
    7db2:	48 f7 ea             	imul   %rdx
    7db5:	48 89 d0             	mov    %rdx,%rax
    7db8:	48 c1 f8 07          	sar    $0x7,%rax
    7dbc:	48 c1 f9 3f          	sar    $0x3f,%rcx
    7dc0:	48 89 ca             	mov    %rcx,%rdx
    7dc3:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    7dc6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7dca:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    7dce:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    7dd2:	48 89 d6             	mov    %rdx,%rsi
    7dd5:	48 89 c7             	mov    %rax,%rdi
    7dd8:	e8 9d 1c 00 00       	call   9a7a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    7ddd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    7de1:	c9                   	leave
    7de2:	c3                   	ret
    7de3:	90                   	nop

0000000000007de4 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    7de4:	55                   	push   %rbp
    7de5:	48 89 e5             	mov    %rsp,%rbp
    7de8:	48 83 ec 10          	sub    $0x10,%rsp
    7dec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    7df0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7df4:	48 89 c7             	mov    %rax,%rdi
    7df7:	e8 9c 1c 00 00       	call   9a98 <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    7dfc:	c9                   	leave
    7dfd:	c3                   	ret

0000000000007dfe <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    7dfe:	55                   	push   %rbp
    7dff:	48 89 e5             	mov    %rsp,%rbp
    7e02:	48 83 ec 10          	sub    $0x10,%rsp
    7e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    7e0e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7e12:	48 89 c7             	mov    %rax,%rdi
    7e15:	e8 9b 1c 00 00       	call   9ab5 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    7e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e1e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7e22:	48 89 d6             	mov    %rdx,%rsi
    7e25:	48 89 c7             	mov    %rax,%rdi
    7e28:	e8 93 1c 00 00       	call   9ac0 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    7e2d:	c9                   	leave
    7e2e:	c3                   	ret
    7e2f:	90                   	nop

0000000000007e30 <_ZNSt15__new_allocatorISt6threadEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7e30:	55                   	push   %rbp
    7e31:	48 89 e5             	mov    %rsp,%rbp
    7e34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e38:	90                   	nop
    7e39:	5d                   	pop    %rbp
    7e3a:	c3                   	ret

0000000000007e3b <_ZNSt16allocator_traitsISaISt6threadEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7e3b:	55                   	push   %rbp
    7e3c:	48 89 e5             	mov    %rsp,%rbp
    7e3f:	48 83 ec 20          	sub    $0x20,%rsp
    7e43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e47:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e4b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7e4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e5b:	48 89 ce             	mov    %rcx,%rsi
    7e5e:	48 89 c7             	mov    %rax,%rdi
    7e61:	e8 70 1c 00 00       	call   9ad6 <_ZNSt15__new_allocatorISt6threadE10deallocateEPS0_m>
    7e66:	90                   	nop
    7e67:	c9                   	leave
    7e68:	c3                   	ret

0000000000007e69 <_ZSt8_DestroyIPSt6threadEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7e69:	55                   	push   %rbp
    7e6a:	48 89 e5             	mov    %rsp,%rbp
    7e6d:	48 83 ec 10          	sub    $0x10,%rsp
    7e71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    7e79:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7e7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e81:	48 89 d6             	mov    %rdx,%rsi
    7e84:	48 89 c7             	mov    %rax,%rdi
    7e87:	e8 7b 1c 00 00       	call   9b07 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_>
    }
    7e8c:	90                   	nop
    7e8d:	c9                   	leave
    7e8e:	c3                   	ret
    7e8f:	90                   	nop

0000000000007e90 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implC1Ev>:
	_Deque_impl() _GLIBCXX_NOEXCEPT_IF(
    7e90:	55                   	push   %rbp
    7e91:	48 89 e5             	mov    %rsp,%rbp
    7e94:	48 83 ec 10          	sub    $0x10,%rsp
    7e98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    7e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ea0:	48 89 c7             	mov    %rax,%rdi
    7ea3:	e8 98 1c 00 00       	call   9b40 <_ZNSaISt8functionIFvvEEEC1Ev>
    7ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eac:	48 89 c7             	mov    %rax,%rdi
    7eaf:	e8 a8 1c 00 00       	call   9b5c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_Deque_impl_dataC1Ev>
	{ }
    7eb4:	90                   	nop
    7eb5:	c9                   	leave
    7eb6:	c3                   	ret
    7eb7:	90                   	nop

0000000000007eb8 <_ZNSaISt8functionIFvvEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7eb8:	55                   	push   %rbp
    7eb9:	48 89 e5             	mov    %rsp,%rbp
    7ebc:	48 83 ec 10          	sub    $0x10,%rsp
    7ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ec8:	48 89 c7             	mov    %rax,%rdi
    7ecb:	e8 d2 1c 00 00       	call   9ba2 <_ZNSt15__new_allocatorISt8functionIFvvEEED1Ev>
    7ed0:	90                   	nop
    7ed1:	c9                   	leave
    7ed2:	c3                   	ret
    7ed3:	90                   	nop

0000000000007ed4 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm>:
    _Deque_base<_Tp, _Alloc>::
    7ed4:	55                   	push   %rbp
    7ed5:	48 89 e5             	mov    %rsp,%rbp
    7ed8:	53                   	push   %rbx
    7ed9:	48 83 ec 48          	sub    $0x48,%rsp
    7edd:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    7ee1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      const size_t __num_nodes = (__num_elements / __deque_buf_size(sizeof(_Tp))
    7ee5:	bf 20 00 00 00       	mov    $0x20,%edi
    7eea:	e8 12 bd ff ff       	call   3c01 <_ZSt16__deque_buf_sizem>
    7eef:	48 89 c3             	mov    %rax,%rbx
    7ef2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7ef6:	ba 00 00 00 00       	mov    $0x0,%edx
    7efb:	48 f7 f3             	div    %rbx
    7efe:	48 83 c0 01          	add    $0x1,%rax
    7f02:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
					   size_t(__num_nodes + 2));
    7f06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f0a:	48 83 c0 02          	add    $0x2,%rax
    7f0e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
    7f12:	48 c7 45 d0 08 00 00 	movq   $0x8,-0x30(%rbp)
    7f19:	00 
    7f1a:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    7f1e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7f22:	48 89 d6             	mov    %rdx,%rsi
    7f25:	48 89 c7             	mov    %rax,%rdi
    7f28:	e8 c5 cd ff ff       	call   4cf2 <_ZSt3maxImERKT_S2_S2_>
    7f2d:	48 8b 10             	mov    (%rax),%rdx
    7f30:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7f34:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
    7f38:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7f3c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7f40:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7f44:	48 89 d6             	mov    %rdx,%rsi
    7f47:	48 89 c7             	mov    %rax,%rdi
    7f4a:	e8 5f 1c 00 00       	call   9bae <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>
    7f4f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7f53:	48 89 02             	mov    %rax,(%rdx)
      _Map_pointer __nstart = (this->_M_impl._M_map
    7f56:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7f5a:	48 8b 10             	mov    (%rax),%rdx
			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
    7f5d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7f61:	48 8b 40 08          	mov    0x8(%rax),%rax
    7f65:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    7f69:	48 d1 e8             	shr    %rax
    7f6c:	48 c1 e0 03          	shl    $0x3,%rax
      _Map_pointer __nstart = (this->_M_impl._M_map
    7f70:	48 01 d0             	add    %rdx,%rax
    7f73:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      _Map_pointer __nfinish = __nstart + __num_nodes;
    7f77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f7b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7f82:	00 
    7f83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f87:	48 01 d0             	add    %rdx,%rax
    7f8a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	{ _M_create_nodes(__nstart, __nfinish); }
    7f8e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7f92:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7f96:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7f9a:	48 89 ce             	mov    %rcx,%rsi
    7f9d:	48 89 c7             	mov    %rax,%rdi
    7fa0:	e8 75 1c 00 00       	call   9c1a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_>
      this->_M_impl._M_start._M_set_node(__nstart);
    7fa5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7fa9:	48 8d 50 10          	lea    0x10(%rax),%rdx
    7fad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7fb1:	48 89 c6             	mov    %rax,%rsi
    7fb4:	48 89 d7             	mov    %rdx,%rdi
    7fb7:	e8 de 1c 00 00       	call   9c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__nfinish - 1);
    7fbc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7fc0:	48 83 c0 30          	add    $0x30,%rax
    7fc4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7fc8:	48 83 ea 08          	sub    $0x8,%rdx
    7fcc:	48 89 d6             	mov    %rdx,%rsi
    7fcf:	48 89 c7             	mov    %rax,%rdi
    7fd2:	e8 c3 1c 00 00       	call   9c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
    7fd7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7fdb:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7fdf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7fe3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
    7fe7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7feb:	48 8b 58 38          	mov    0x38(%rax),%rbx
					% __deque_buf_size(sizeof(_Tp)));
    7fef:	bf 20 00 00 00       	mov    $0x20,%edi
    7ff4:	e8 08 bc ff ff       	call   3c01 <_ZSt16__deque_buf_sizem>
    7ff9:	48 89 c1             	mov    %rax,%rcx
    7ffc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    8000:	ba 00 00 00 00       	mov    $0x0,%edx
    8005:	48 f7 f1             	div    %rcx
    8008:	48 89 d1             	mov    %rdx,%rcx
    800b:	48 89 c8             	mov    %rcx,%rax
					+ __num_elements
    800e:	48 c1 e0 05          	shl    $0x5,%rax
    8012:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
    8016:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    801a:	48 89 50 30          	mov    %rdx,0x30(%rax)
    }
    801e:	eb 55                	jmp    8075 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm+0x1a1>
      __catch(...)
    8020:	48 89 c7             	mov    %rax,%rdi
    8023:	e8 a8 b0 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    8028:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    802c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8030:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8034:	48 8b 08             	mov    (%rax),%rcx
    8037:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    803b:	48 89 ce             	mov    %rcx,%rsi
    803e:	48 89 c7             	mov    %rax,%rdi
    8041:	e8 7e 00 00 00       	call   80c4 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>
	  this->_M_impl._M_map = _Map_pointer();
    8046:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    804a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	  this->_M_impl._M_map_size = 0;
    8051:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8055:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    805c:	00 
	  __throw_exception_again;
    805d:	e8 ae b3 ff ff       	call   3410 <__cxa_rethrow@plt>
      __catch(...)
    8062:	48 89 c3             	mov    %rax,%rbx
    8065:	e8 16 b4 ff ff       	call   3480 <__cxa_end_catch@plt>
    806a:	48 89 d8             	mov    %rbx,%rax
    806d:	48 89 c7             	mov    %rax,%rdi
    8070:	e8 5b b4 ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    8075:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8079:	c9                   	leave
    807a:	c3                   	ret
    807b:	90                   	nop

000000000000807c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
    807c:	55                   	push   %rbp
    807d:	48 89 e5             	mov    %rsp,%rbp
    8080:	48 83 ec 30          	sub    $0x30,%rsp
    8084:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8088:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    808c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
    8090:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8094:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8098:	eb 1b                	jmp    80b5 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x39>
	_M_deallocate_node(*__n);
    809a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    809e:	48 8b 10             	mov    (%rax),%rdx
    80a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80a5:	48 89 d6             	mov    %rdx,%rsi
    80a8:	48 89 c7             	mov    %rax,%rdi
    80ab:	e8 3a 1c 00 00       	call   9cea <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
    80b0:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    80b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    80bd:	72 db                	jb     809a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x1e>
    }
    80bf:	90                   	nop
    80c0:	90                   	nop
    80c1:	c9                   	leave
    80c2:	c3                   	ret
    80c3:	90                   	nop

00000000000080c4 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>:
      _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
    80c4:	55                   	push   %rbp
    80c5:	48 89 e5             	mov    %rsp,%rbp
    80c8:	48 83 ec 30          	sub    $0x30,%rsp
    80cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    80d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    80d4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
    80d8:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    80dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    80e0:	48 89 d6             	mov    %rdx,%rsi
    80e3:	48 89 c7             	mov    %rax,%rdi
    80e6:	e8 33 1c 00 00       	call   9d1e <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>
	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
    80eb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    80ef:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    80f3:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    80f7:	48 89 ce             	mov    %rcx,%rsi
    80fa:	48 89 c7             	mov    %rax,%rdi
    80fd:	e8 6b 1c 00 00       	call   9d6d <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE10deallocateERS4_PS3_m>
      }
    8102:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    8106:	48 89 c7             	mov    %rax,%rdi
    8109:	e8 44 1c 00 00       	call   9d52 <_ZNSaIPSt8functionIFvvEEED1Ev>
    810e:	c9                   	leave
    810f:	c3                   	ret

0000000000008110 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>:
      _Deque_iterator(const _Deque_iterator& __x) noexcept
    8110:	55                   	push   %rbp
    8111:	48 89 e5             	mov    %rsp,%rbp
    8114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8118:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
    811c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8120:	48 8b 10             	mov    (%rax),%rdx
    8123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8127:	48 89 10             	mov    %rdx,(%rax)
    812a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    812e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8136:	48 89 50 08          	mov    %rdx,0x8(%rax)
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
    813a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    813e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8146:	48 89 50 10          	mov    %rdx,0x10(%rax)
    814a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    814e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    8152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8156:	48 89 50 18          	mov    %rdx,0x18(%rax)
    815a:	90                   	nop
    815b:	5d                   	pop    %rbp
    815c:	c3                   	ret
    815d:	90                   	nop

000000000000815e <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_>:
	}
      }

   template<typename _Tp, typename _Alloc>
     void
     deque<_Tp, _Alloc>::
    815e:	55                   	push   %rbp
    815f:	48 89 e5             	mov    %rsp,%rbp
    8162:	41 54                	push   %r12
    8164:	53                   	push   %rbx
    8165:	48 83 ec 30          	sub    $0x30,%rsp
    8169:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    816d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8171:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
     _M_destroy_data_aux(iterator __first, iterator __last)
     {
       for (_Map_pointer __node = __first._M_node + 1;
    8175:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8179:	48 8b 40 18          	mov    0x18(%rax),%rax
    817d:	48 83 c0 08          	add    $0x8,%rax
    8181:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8185:	eb 3d                	jmp    81c4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x66>
	    __node < __last._M_node; ++__node)
	 std::_Destroy(*__node, *__node + _S_buffer_size(),
		       _M_get_Tp_allocator());
    8187:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    818b:	48 89 c7             	mov    %rax,%rdi
    818e:	e8 99 e3 ff ff       	call   652c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    8193:	48 89 c3             	mov    %rax,%rbx
	 std::_Destroy(*__node, *__node + _S_buffer_size(),
    8196:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    819a:	4c 8b 20             	mov    (%rax),%r12
    819d:	e8 f9 1b 00 00       	call   9d9b <_ZNSt5dequeISt8functionIFvvEESaIS2_EE14_S_buffer_sizeEv>
    81a2:	48 c1 e0 05          	shl    $0x5,%rax
    81a6:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
    81aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81ae:	48 8b 00             	mov    (%rax),%rax
    81b1:	48 89 da             	mov    %rbx,%rdx
    81b4:	48 89 ce             	mov    %rcx,%rsi
    81b7:	48 89 c7             	mov    %rax,%rdi
    81ba:	e8 ec 1b 00 00       	call   9dab <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
       for (_Map_pointer __node = __first._M_node + 1;
    81bf:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	    __node < __last._M_node; ++__node)
    81c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    81c8:	48 8b 40 18          	mov    0x18(%rax),%rax
    81cc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    81d0:	72 b5                	jb     8187 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x29>

       if (__first._M_node != __last._M_node)
    81d2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    81d6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    81da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    81de:	48 8b 40 18          	mov    0x18(%rax),%rax
    81e2:	48 39 c2             	cmp    %rax,%rdx
    81e5:	74 54                	je     823b <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0xdd>
	 {
	   std::_Destroy(__first._M_cur, __first._M_last,
			 _M_get_Tp_allocator());
    81e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81eb:	48 89 c7             	mov    %rax,%rdi
    81ee:	e8 39 e3 ff ff       	call   652c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    81f3:	48 89 c2             	mov    %rax,%rdx
	   std::_Destroy(__first._M_cur, __first._M_last,
    81f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    81fa:	48 8b 48 10          	mov    0x10(%rax),%rcx
    81fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8202:	48 8b 00             	mov    (%rax),%rax
    8205:	48 89 ce             	mov    %rcx,%rsi
    8208:	48 89 c7             	mov    %rax,%rdi
    820b:	e8 9b 1b 00 00       	call   9dab <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
	   std::_Destroy(__last._M_first, __last._M_cur,
			 _M_get_Tp_allocator());
    8210:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8214:	48 89 c7             	mov    %rax,%rdi
    8217:	e8 10 e3 ff ff       	call   652c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    821c:	48 89 c2             	mov    %rax,%rdx
	   std::_Destroy(__last._M_first, __last._M_cur,
    821f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8223:	48 8b 08             	mov    (%rax),%rcx
    8226:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    822a:	48 8b 40 08          	mov    0x8(%rax),%rax
    822e:	48 89 ce             	mov    %rcx,%rsi
    8231:	48 89 c7             	mov    %rax,%rdi
    8234:	e8 72 1b 00 00       	call   9dab <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
	 }
       else
	 std::_Destroy(__first._M_cur, __last._M_cur,
		       _M_get_Tp_allocator());
     }
    8239:	eb 28                	jmp    8263 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x105>
		       _M_get_Tp_allocator());
    823b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    823f:	48 89 c7             	mov    %rax,%rdi
    8242:	e8 e5 e2 ff ff       	call   652c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    8247:	48 89 c2             	mov    %rax,%rdx
	 std::_Destroy(__first._M_cur, __last._M_cur,
    824a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    824e:	48 8b 08             	mov    (%rax),%rcx
    8251:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8255:	48 8b 00             	mov    (%rax),%rax
    8258:	48 89 ce             	mov    %rcx,%rsi
    825b:	48 89 c7             	mov    %rax,%rdi
    825e:	e8 48 1b 00 00       	call   9dab <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
     }
    8263:	90                   	nop
    8264:	48 83 c4 30          	add    $0x30,%rsp
    8268:	5b                   	pop    %rbx
    8269:	41 5c                	pop    %r12
    826b:	5d                   	pop    %rbp
    826c:	c3                   	ret
    826d:	90                   	nop

000000000000826e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>:
    826e:	55                   	push   %rbp
    826f:	48 89 e5             	mov    %rsp,%rbp
    8272:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8276:	90                   	nop
    8277:	5d                   	pop    %rbp
    8278:	c3                   	ret

0000000000008279 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    8279:	55                   	push   %rbp
    827a:	48 89 e5             	mov    %rsp,%rbp
    827d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    8281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8285:	48 8b 40 18          	mov    0x18(%rax),%rax
    8289:	5d                   	pop    %rbp
    828a:	c3                   	ret

000000000000828b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    828b:	55                   	push   %rbp
    828c:	48 89 e5             	mov    %rsp,%rbp
    828f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    8293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8297:	48 8b 40 10          	mov    0x10(%rax),%rax
    829b:	5d                   	pop    %rbp
    829c:	c3                   	ret
    829d:	90                   	nop

000000000000829e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    829e:	55                   	push   %rbp
    829f:	48 89 e5             	mov    %rsp,%rbp
    82a2:	48 83 ec 10          	sub    $0x10,%rsp
    82a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    82ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    82b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82b6:	48 89 d6             	mov    %rdx,%rsi
    82b9:	48 89 c7             	mov    %rax,%rdi
    82bc:	e8 15 1b 00 00       	call   9dd6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E>
	_M_put_node(__p);
    82c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    82c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82c9:	48 89 d6             	mov    %rdx,%rsi
    82cc:	48 89 c7             	mov    %rax,%rdi
    82cf:	e8 40 1b 00 00       	call   9e14 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>
      }
    82d4:	90                   	nop
    82d5:	c9                   	leave
    82d6:	c3                   	ret
    82d7:	90                   	nop

00000000000082d8 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    82d8:	55                   	push   %rbp
    82d9:	48 89 e5             	mov    %rsp,%rbp
    82dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    82e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82e4:	48 8b 40 10          	mov    0x10(%rax),%rax
    82e8:	5d                   	pop    %rbp
    82e9:	c3                   	ret

00000000000082ea <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    82ea:	55                   	push   %rbp
    82eb:	48 89 e5             	mov    %rsp,%rbp
    82ee:	48 83 ec 10          	sub    $0x10,%rsp
    82f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    82f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82fa:	48 89 c7             	mov    %rax,%rdi
    82fd:	e8 8a 1b 00 00       	call   9e8c <_ZNKSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    8302:	48 89 c7             	mov    %rax,%rdi
    8305:	e8 40 1b 00 00       	call   9e4a <_ZNSt6vectorISt6threadSaIS0_EE11_S_max_sizeERKS1_>
    830a:	c9                   	leave
    830b:	c3                   	ret

000000000000830c <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    830c:	55                   	push   %rbp
    830d:	48 89 e5             	mov    %rsp,%rbp
    8310:	48 83 ec 20          	sub    $0x20,%rsp
    8314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8318:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    831c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    8320:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8328:	48 89 d6             	mov    %rdx,%rsi
    832b:	48 89 c7             	mov    %rax,%rdi
    832e:	e8 67 1b 00 00       	call   9e9a <_ZSt25__uninitialized_default_nIPSt6threadmET_S2_T0_>
    8333:	c9                   	leave
    8334:	c3                   	ret
    8335:	90                   	nop

0000000000008336 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    8336:	55                   	push   %rbp
    8337:	48 89 e5             	mov    %rsp,%rbp
    833a:	53                   	push   %rbx
    833b:	48 83 ec 38          	sub    $0x38,%rsp
    833f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8343:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8347:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    834b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    834f:	48 89 c7             	mov    %rax,%rdi
    8352:	e8 93 ff ff ff       	call   82ea <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    8357:	48 89 c3             	mov    %rax,%rbx
    835a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    835e:	48 89 c7             	mov    %rax,%rdi
    8361:	e8 4e ce ff ff       	call   51b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    8366:	48 29 c3             	sub    %rax,%rbx
    8369:	48 89 da             	mov    %rbx,%rdx
    836c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8370:	48 39 c2             	cmp    %rax,%rdx
    8373:	0f 92 c0             	setb   %al
    8376:	84 c0                	test   %al,%al
    8378:	74 0c                	je     8386 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    837a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    837e:	48 89 c7             	mov    %rax,%rdi
    8381:	e8 aa ad ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    8386:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    838a:	48 89 c7             	mov    %rax,%rdi
    838d:	e8 22 ce ff ff       	call   51b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    8392:	48 89 c3             	mov    %rax,%rbx
    8395:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8399:	48 89 c7             	mov    %rax,%rdi
    839c:	e8 13 ce ff ff       	call   51b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    83a1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    83a5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    83a9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    83ad:	48 89 d6             	mov    %rdx,%rsi
    83b0:	48 89 c7             	mov    %rax,%rdi
    83b3:	e8 3a c9 ff ff       	call   4cf2 <_ZSt3maxImERKT_S2_S2_>
    83b8:	48 8b 00             	mov    (%rax),%rax
    83bb:	48 01 d8             	add    %rbx,%rax
    83be:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    83c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83c6:	48 89 c7             	mov    %rax,%rdi
    83c9:	e8 e6 cd ff ff       	call   51b4 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    83ce:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    83d2:	72 12                	jb     83e6 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xb0>
    83d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83d8:	48 89 c7             	mov    %rax,%rdi
    83db:	e8 0a ff ff ff       	call   82ea <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    83e0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    83e4:	73 0e                	jae    83f4 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xbe>
    83e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83ea:	48 89 c7             	mov    %rax,%rdi
    83ed:	e8 f8 fe ff ff       	call   82ea <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    83f2:	eb 04                	jmp    83f8 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xc2>
    83f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    83f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    83fc:	c9                   	leave
    83fd:	c3                   	ret

00000000000083fe <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    83fe:	55                   	push   %rbp
    83ff:	48 89 e5             	mov    %rsp,%rbp
    8402:	48 83 ec 10          	sub    $0x10,%rsp
    8406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    840a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    840e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8413:	74 15                	je     842a <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm+0x2c>
    8415:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8419:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    841d:	48 89 d6             	mov    %rdx,%rsi
    8420:	48 89 c7             	mov    %rax,%rdi
    8423:	e8 9b 1a 00 00       	call   9ec3 <_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m>
    8428:	eb 05                	jmp    842f <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm+0x31>
    842a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    842f:	c9                   	leave
    8430:	c3                   	ret

0000000000008431 <_ZNSt6vectorISt6threadSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    8431:	55                   	push   %rbp
    8432:	48 89 e5             	mov    %rsp,%rbp
    8435:	48 83 ec 20          	sub    $0x20,%rsp
    8439:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    843d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8441:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    8445:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    8449:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    844d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8451:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    8455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8459:	48 89 c7             	mov    %rax,%rdi
    845c:	e8 8c 1a 00 00       	call   9eed <_ZSt12__relocate_aIPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    8461:	c9                   	leave
    8462:	c3                   	ret
    8463:	90                   	nop

0000000000008464 <_ZNSt5tupleIJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_S2_Lb1EEEOT_OT0_>:
	tuple(_U1&& __a1, _U2&& __a2)
    8464:	55                   	push   %rbp
    8465:	48 89 e5             	mov    %rsp,%rbp
    8468:	41 54                	push   %r12
    846a:	53                   	push   %rbx
    846b:	48 83 ec 20          	sub    $0x20,%rsp
    846f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8473:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8477:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
    847b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    847f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8483:	48 89 c7             	mov    %rax,%rdi
    8486:	e8 5f e4 ff ff       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    848b:	49 89 c4             	mov    %rax,%r12
    848e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8492:	48 89 c7             	mov    %rax,%rdi
    8495:	e8 42 e4 ff ff       	call   68dc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    849a:	4c 89 e2             	mov    %r12,%rdx
    849d:	48 89 c6             	mov    %rax,%rsi
    84a0:	48 89 df             	mov    %rbx,%rdi
    84a3:	e8 a8 1a 00 00       	call   9f50 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_JS2_EvEEOT_DpOT0_>
    84a8:	90                   	nop
    84a9:	48 83 c4 20          	add    $0x20,%rsp
    84ad:	5b                   	pop    %rbx
    84ae:	41 5c                	pop    %r12
    84b0:	5d                   	pop    %rbp
    84b1:	c3                   	ret

00000000000084b2 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    84b2:	55                   	push   %rbp
    84b3:	48 89 e5             	mov    %rsp,%rbp
    84b6:	53                   	push   %rbx
    84b7:	48 83 ec 18          	sub    $0x18,%rsp
    84bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    84c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84c7:	48 89 c7             	mov    %rax,%rdi
    84ca:	e8 df 1a 00 00       	call   9fae <_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    84cf:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    84d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84d7:	48 89 c7             	mov    %rax,%rdi
    84da:	e8 0b 00 00 00       	call   84ea <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>
    84df:	48 89 18             	mov    %rbx,(%rax)
    84e2:	90                   	nop
    84e3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84e7:	c9                   	leave
    84e8:	c3                   	ret
    84e9:	90                   	nop

00000000000084ea <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    84ea:	55                   	push   %rbp
    84eb:	48 89 e5             	mov    %rsp,%rbp
    84ee:	48 83 ec 10          	sub    $0x10,%rsp
    84f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84fa:	48 89 c7             	mov    %rax,%rdi
    84fd:	e8 c7 1a 00 00       	call   9fc9 <_ZSt3getILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    8502:	c9                   	leave
    8503:	c3                   	ret

0000000000008504 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    8504:	55                   	push   %rbp
    8505:	48 89 e5             	mov    %rsp,%rbp
    8508:	48 83 ec 10          	sub    $0x10,%rsp
    850c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    8510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8514:	48 89 c7             	mov    %rax,%rdi
    8517:	e8 c8 1a 00 00       	call   9fe4 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv>
    851c:	c9                   	leave
    851d:	c3                   	ret

000000000000851e <_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    851e:	55                   	push   %rbp
    851f:	48 89 e5             	mov    %rsp,%rbp
    8522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    852a:	5d                   	pop    %rbp
    852b:	c3                   	ret

000000000000852c <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_>:
      operator()(_Tp* __ptr) const
    852c:	55                   	push   %rbp
    852d:	48 89 e5             	mov    %rsp,%rbp
    8530:	48 83 ec 10          	sub    $0x10,%rsp
    8534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8538:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    853c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8540:	48 85 c0             	test   %rax,%rax
    8543:	74 0f                	je     8554 <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_+0x28>
    8545:	48 8b 10             	mov    (%rax),%rdx
    8548:	48 83 c2 08          	add    $0x8,%rdx
    854c:	48 8b 12             	mov    (%rdx),%rdx
    854f:	48 89 c7             	mov    %rax,%rdi
    8552:	ff d2                	call   *%rdx
      }
    8554:	90                   	nop
    8555:	c9                   	leave
    8556:	c3                   	ret

0000000000008557 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E9_M_createIS9_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    8557:	55                   	push   %rbp
    8558:	48 89 e5             	mov    %rsp,%rbp
    855b:	53                   	push   %rbx
    855c:	48 83 ec 18          	sub    $0x18,%rsp
    8560:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8564:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    8568:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    856c:	48 89 c7             	mov    %rax,%rdi
    856f:	e8 92 b5 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    8574:	48 89 c6             	mov    %rax,%rsi
    8577:	bf 10 00 00 00       	mov    $0x10,%edi
    857c:	e8 08 b3 ff ff       	call   3889 <_ZnwmPv>
    8581:	48 89 c3             	mov    %rax,%rbx
    8584:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8588:	48 89 c7             	mov    %rax,%rdi
    858b:	e8 58 e5 ff ff       	call   6ae8 <_ZSt7forwardIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceIS9_E4typeE>
    8590:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8594:	48 8b 00             	mov    (%rax),%rax
    8597:	48 89 03             	mov    %rax,(%rbx)
    859a:	48 89 53 08          	mov    %rdx,0x8(%rbx)
	  }
    859e:	90                   	nop
    859f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85a3:	c9                   	leave
    85a4:	c3                   	ret

00000000000085a5 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source) noexcept
    85a5:	55                   	push   %rbp
    85a6:	48 89 e5             	mov    %rsp,%rbp
    85a9:	48 83 ec 20          	sub    $0x20,%rsp
    85ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      const _Functor& __f = __source._M_access<_Functor>();
    85b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85b5:	48 89 c7             	mov    %rax,%rdi
    85b8:	e8 41 1a 00 00       	call   9ffe <_ZNKSt9_Any_data9_M_accessIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EERKT_v>
    85bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      return const_cast<_Functor*>(std::__addressof(__f));
    85c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c5:	48 89 c7             	mov    %rax,%rdi
    85c8:	e8 4b 1a 00 00       	call   a018 <_ZSt11__addressofIKZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EPT_RSA_>
	}
    85cd:	c9                   	leave
    85ce:	c3                   	ret

00000000000085cf <_ZSt10__invoke_rIvRZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EESB_E4typeEOSC_DpOSD_>:

#if __cplusplus >= 201703L
  // INVOKE<R>: Invoke a callable object and convert the result to R.
  template<typename _Res, typename _Callable, typename... _Args>
    constexpr enable_if_t<is_invocable_r_v<_Res, _Callable, _Args...>, _Res>
    __invoke_r(_Callable&& __fn, _Args&&... __args)
    85cf:	55                   	push   %rbp
    85d0:	48 89 e5             	mov    %rsp,%rbp
    85d3:	48 83 ec 10          	sub    $0x10,%rsp
    85d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      if constexpr (is_void_v<_Res>)
	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    85db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85df:	48 89 c7             	mov    %rax,%rdi
    85e2:	e8 3f 1a 00 00       	call   a026 <_ZSt7forwardIRZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceISA_E4typeE>
    85e7:	48 89 c7             	mov    %rax,%rdi
    85ea:	e8 45 1a 00 00       	call   a034 <_ZSt13__invoke_implIvRZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
      else
	return std::__invoke_impl<__type>(__tag{},
					  std::forward<_Callable>(__fn),
					  std::forward<_Args>(__args)...);
    }
    85ef:	90                   	nop
    85f0:	c9                   	leave
    85f1:	c3                   	ret

00000000000085f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>:
      _M_access() noexcept
    85f2:	55                   	push   %rbp
    85f3:	48 89 e5             	mov    %rsp,%rbp
    85f6:	48 83 ec 10          	sub    $0x10,%rsp
    85fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    85fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8602:	48 89 c7             	mov    %rax,%rdi
    8605:	e8 fc b4 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    860a:	c9                   	leave
    860b:	c3                   	ret

000000000000860c <_ZNSt9_Any_data9_M_accessIPZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EERT_v>:
      _M_access() noexcept
    860c:	55                   	push   %rbp
    860d:	48 89 e5             	mov    %rsp,%rbp
    8610:	48 83 ec 10          	sub    $0x10,%rsp
    8614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    8618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    861c:	48 89 c7             	mov    %rax,%rdi
    861f:	e8 e2 b4 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    8624:	c9                   	leave
    8625:	c3                   	ret

0000000000008626 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
    8626:	55                   	push   %rbp
    8627:	48 89 e5             	mov    %rsp,%rbp
    862a:	53                   	push   %rbx
    862b:	48 83 ec 28          	sub    $0x28,%rsp
    862f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8633:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8637:	89 55 dc             	mov    %edx,-0x24(%rbp)
	  switch (__op)
    863a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    863d:	83 f8 03             	cmp    $0x3,%eax
    8640:	74 72                	je     86b4 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x8e>
    8642:	83 f8 03             	cmp    $0x3,%eax
    8645:	7f 7a                	jg     86c1 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x9b>
    8647:	83 f8 02             	cmp    $0x2,%eax
    864a:	74 48                	je     8694 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x6e>
    864c:	83 f8 02             	cmp    $0x2,%eax
    864f:	7f 70                	jg     86c1 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x9b>
    8651:	85 c0                	test   %eax,%eax
    8653:	74 07                	je     865c <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x36>
    8655:	83 f8 01             	cmp    $0x1,%eax
    8658:	74 1a                	je     8674 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x4e>
    865a:	eb 65                	jmp    86c1 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x9b>
	      __dest._M_access<const type_info*>() = &typeid(_Functor);
    865c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8660:	48 89 c7             	mov    %rax,%rdi
    8663:	e8 8a ff ff ff       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    8668:	48 8d 15 e9 a6 01 00 	lea    0x1a6e9(%rip),%rdx        # 22d58 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    866f:	48 89 10             	mov    %rdx,(%rax)
	      break;
    8672:	eb 4d                	jmp    86c1 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x9b>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
    8674:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8678:	48 89 c7             	mov    %rax,%rdi
    867b:	e8 25 ff ff ff       	call   85a5 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E14_M_get_pointerERKSt9_Any_data>
    8680:	48 89 c3             	mov    %rax,%rbx
    8683:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8687:	48 89 c7             	mov    %rax,%rdi
    868a:	e8 7d ff ff ff       	call   860c <_ZNSt9_Any_data9_M_accessIPZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EERT_v>
    868f:	48 89 18             	mov    %rbx,(%rax)
	      break;
    8692:	eb 2d                	jmp    86c1 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x9b>
		  *const_cast<const _Functor*>(_M_get_pointer(__source)));
    8694:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8698:	48 89 c7             	mov    %rax,%rdi
    869b:	e8 05 ff ff ff       	call   85a5 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E14_M_get_pointerERKSt9_Any_data>
    86a0:	48 89 c2             	mov    %rax,%rdx
	      _M_init_functor(__dest,
    86a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86a7:	48 89 d6             	mov    %rdx,%rsi
    86aa:	48 89 c7             	mov    %rax,%rdi
    86ad:	e8 a5 19 00 00       	call   a057 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E15_M_init_functorIRKS9_EEvRSt9_Any_dataOT_>
	      break;
    86b2:	eb 0d                	jmp    86c1 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x9b>
	      _M_destroy(__dest, _Local_storage());
    86b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86b8:	48 89 c7             	mov    %rax,%rdi
    86bb:	e8 c8 19 00 00       	call   a088 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>
	      break;
    86c0:	90                   	nop
	  return false;
    86c1:	b8 00 00 00 00       	mov    $0x0,%eax
	}
    86c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    86ca:	c9                   	leave
    86cb:	c3                   	ret

00000000000086cc <_ZNSt5dequeISt8functionIFvvEESaIS2_EE12emplace_backIJS2_EEERS2_DpOT_>:
      deque<_Tp, _Alloc>::
    86cc:	55                   	push   %rbp
    86cd:	48 89 e5             	mov    %rsp,%rbp
    86d0:	48 83 ec 10          	sub    $0x10,%rsp
    86d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish._M_cur
    86dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e0:	48 8b 50 30          	mov    0x30(%rax),%rdx
	    != this->_M_impl._M_finish._M_last - 1)
    86e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e8:	48 8b 40 40          	mov    0x40(%rax),%rax
    86ec:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_finish._M_cur
    86f0:	48 39 c2             	cmp    %rax,%rdx
    86f3:	74 3c                	je     8731 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE12emplace_backIJS2_EEERS2_DpOT_+0x65>
	    _Alloc_traits::construct(this->_M_impl,
    86f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    86f9:	48 89 c7             	mov    %rax,%rdi
    86fc:	e8 a2 19 00 00       	call   a0a3 <_ZSt7forwardISt8functionIFvvEEEOT_RNSt16remove_referenceIS3_E4typeE>
    8701:	48 89 c2             	mov    %rax,%rdx
    8704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8708:	48 8b 48 30          	mov    0x30(%rax),%rcx
    870c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8710:	48 89 ce             	mov    %rcx,%rsi
    8713:	48 89 c7             	mov    %rax,%rdi
    8716:	e8 96 19 00 00       	call   a0b1 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_>
	    ++this->_M_impl._M_finish._M_cur;
    871b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    871f:	48 8b 40 30          	mov    0x30(%rax),%rax
    8723:	48 8d 50 20          	lea    0x20(%rax),%rdx
    8727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    872b:	48 89 50 30          	mov    %rdx,0x30(%rax)
    872f:	eb 1e                	jmp    874f <_ZNSt5dequeISt8functionIFvvEESaIS2_EE12emplace_backIJS2_EEERS2_DpOT_+0x83>
	  _M_push_back_aux(std::forward<_Args>(__args)...);
    8731:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8735:	48 89 c7             	mov    %rax,%rdi
    8738:	e8 66 19 00 00       	call   a0a3 <_ZSt7forwardISt8functionIFvvEEEOT_RNSt16remove_referenceIS3_E4typeE>
    873d:	48 89 c2             	mov    %rax,%rdx
    8740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8744:	48 89 d6             	mov    %rdx,%rsi
    8747:	48 89 c7             	mov    %rax,%rdi
    874a:	e8 9b 19 00 00       	call   a0ea <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_>
	return back();
    874f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8753:	48 89 c7             	mov    %rax,%rdi
    8756:	e8 5d 1a 00 00       	call   a1b8 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE4backEv>
      }
    875b:	c9                   	leave
    875c:	c3                   	ret

000000000000875d <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    875d:	55                   	push   %rbp
    875e:	48 89 e5             	mov    %rsp,%rbp
    8761:	48 83 ec 20          	sub    $0x20,%rsp
    8765:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8769:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    876d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    8771:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8775:	48 89 c7             	mov    %rax,%rdi
    8778:	e8 74 1a 00 00       	call   a1f1 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    877d:	48 89 c2             	mov    %rax,%rdx
    8780:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8788:	48 89 ce             	mov    %rcx,%rsi
    878b:	48 89 c7             	mov    %rax,%rdi
    878e:	e8 6d 1a 00 00       	call   a200 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_>
	}
    8793:	90                   	nop
    8794:	c9                   	leave
    8795:	c3                   	ret

0000000000008796 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>:
      deque<_Tp, _Alloc>::
    8796:	55                   	push   %rbp
    8797:	48 89 e5             	mov    %rsp,%rbp
    879a:	53                   	push   %rbx
    879b:	48 83 ec 18          	sub    $0x18,%rsp
    879f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    87a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size() == max_size())
    87a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87ab:	48 89 c7             	mov    %rax,%rdi
    87ae:	e8 c7 1a 00 00       	call   a27a <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>
    87b3:	48 89 c3             	mov    %rax,%rbx
    87b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87ba:	48 89 c7             	mov    %rax,%rdi
    87bd:	e8 e2 1a 00 00       	call   a2a4 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>
    87c2:	48 39 c3             	cmp    %rax,%rbx
    87c5:	0f 94 c0             	sete   %al
    87c8:	84 c0                	test   %al,%al
    87ca:	74 0f                	je     87db <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x45>
	  __throw_length_error(
    87cc:	48 8d 05 45 af 00 00 	lea    0xaf45(%rip),%rax        # 13718 <_ZN6__pstl9execution2v1L5unseqE+0xad>
    87d3:	48 89 c7             	mov    %rax,%rdi
    87d6:	e8 55 a9 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	_M_reserve_map_at_back();
    87db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87df:	be 01 00 00 00       	mov    $0x1,%esi
    87e4:	48 89 c7             	mov    %rax,%rdi
    87e7:	e8 da 1a 00 00       	call   a2c6 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>
	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
    87ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    87f4:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    87f8:	48 8d 5a 08          	lea    0x8(%rdx),%rbx
    87fc:	48 89 c7             	mov    %rax,%rdi
    87ff:	e8 24 1b 00 00       	call   a328 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    8804:	48 89 03             	mov    %rax,(%rbx)
	    _Alloc_traits::construct(this->_M_impl,
    8807:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    880b:	48 89 c7             	mov    %rax,%rdi
    880e:	e8 de 19 00 00       	call   a1f1 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8813:	48 89 c2             	mov    %rax,%rdx
    8816:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    881a:	48 8b 48 30          	mov    0x30(%rax),%rcx
    881e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8822:	48 89 ce             	mov    %rcx,%rsi
    8825:	48 89 c7             	mov    %rax,%rdi
    8828:	e8 30 ff ff ff       	call   875d <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
    882d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8831:	48 83 c0 30          	add    $0x30,%rax
    8835:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8839:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    883d:	48 83 c2 08          	add    $0x8,%rdx
    8841:	48 89 d6             	mov    %rdx,%rsi
    8844:	48 89 c7             	mov    %rax,%rdi
    8847:	e8 4e 14 00 00       	call   9c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
    884c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8850:	48 8b 50 38          	mov    0x38(%rax),%rdx
    8854:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8858:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    885c:	eb 3e                	jmp    889c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x106>
	__catch(...)
    885e:	48 89 c7             	mov    %rax,%rdi
    8861:	e8 6a a8 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + 1));
    8866:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    886a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    886e:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    8872:	48 83 c2 08          	add    $0x8,%rdx
    8876:	48 8b 12             	mov    (%rdx),%rdx
    8879:	48 89 d6             	mov    %rdx,%rsi
    887c:	48 89 c7             	mov    %rax,%rdi
    887f:	e8 66 14 00 00       	call   9cea <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
	    __throw_exception_again;
    8884:	e8 87 ab ff ff       	call   3410 <__cxa_rethrow@plt>
	__catch(...)
    8889:	48 89 c3             	mov    %rax,%rbx
    888c:	e8 ef ab ff ff       	call   3480 <__cxa_end_catch@plt>
    8891:	48 89 d8             	mov    %rbx,%rax
    8894:	48 89 c7             	mov    %rax,%rdi
    8897:	e8 34 ac ff ff       	call   34d0 <_Unwind_Resume@plt>
      }
    889c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88a0:	c9                   	leave
    88a1:	c3                   	ret

00000000000088a2 <_ZSteqRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    88a2:	55                   	push   %rbp
    88a3:	48 89 e5             	mov    %rsp,%rbp
    88a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_cur == __y._M_cur; }
    88ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88b2:	48 8b 10             	mov    (%rax),%rdx
    88b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88b9:	48 8b 00             	mov    (%rax),%rax
    88bc:	48 39 c2             	cmp    %rax,%rdx
    88bf:	0f 94 c0             	sete   %al
    88c2:	5d                   	pop    %rbp
    88c3:	c3                   	ret

00000000000088c4 <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    88c4:	55                   	push   %rbp
    88c5:	48 89 e5             	mov    %rsp,%rbp
    88c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_cur; }
    88cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88d0:	48 8b 00             	mov    (%rax),%rax
    88d3:	5d                   	pop    %rbp
    88d4:	c3                   	ret
    88d5:	90                   	nop

00000000000088d6 <_ZNKSt8functionIFvvEEcvbEv>:
      explicit operator bool() const noexcept
    88d6:	55                   	push   %rbp
    88d7:	48 89 e5             	mov    %rsp,%rbp
    88da:	48 83 ec 10          	sub    $0x10,%rsp
    88de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return !_M_empty(); }
    88e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88e6:	48 89 c7             	mov    %rax,%rdi
    88e9:	e8 6e b2 ff ff       	call   3b5c <_ZNKSt14_Function_base8_M_emptyEv>
    88ee:	83 f0 01             	xor    $0x1,%eax
    88f1:	c9                   	leave
    88f2:	c3                   	ret

00000000000088f3 <_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_>:
    swap(_Tp& __a, _Tp& __b)
    88f3:	55                   	push   %rbp
    88f4:	48 89 e5             	mov    %rsp,%rbp
    88f7:	48 83 ec 20          	sub    $0x20,%rsp
    88fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    88ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    8903:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8907:	48 89 c7             	mov    %rax,%rdi
    890a:	e8 43 1a 00 00       	call   a352 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    890f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8913:	48 8b 00             	mov    (%rax),%rax
    8916:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    891a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    891e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8922:	48 89 c7             	mov    %rax,%rdi
    8925:	e8 28 1a 00 00       	call   a352 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    892a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    892e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8932:	48 8b 00             	mov    (%rax),%rax
    8935:	48 89 01             	mov    %rax,(%rcx)
    8938:	48 89 51 08          	mov    %rdx,0x8(%rcx)
      __b = _GLIBCXX_MOVE(__tmp);
    893c:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    8940:	48 89 c7             	mov    %rax,%rdi
    8943:	e8 0a 1a 00 00       	call   a352 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    8948:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    894c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8950:	48 8b 00             	mov    (%rax),%rax
    8953:	48 89 01             	mov    %rax,(%rcx)
    8956:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    }
    895a:	90                   	nop
    895b:	c9                   	leave
    895c:	c3                   	ret

000000000000895d <_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_>:
    swap(_Tp& __a, _Tp& __b)
    895d:	55                   	push   %rbp
    895e:	48 89 e5             	mov    %rsp,%rbp
    8961:	48 83 ec 20          	sub    $0x20,%rsp
    8965:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8969:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    896d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8971:	48 89 c7             	mov    %rax,%rdi
    8974:	e8 e7 19 00 00       	call   a360 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    8979:	48 8b 00             	mov    (%rax),%rax
    897c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    8980:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8984:	48 89 c7             	mov    %rax,%rdi
    8987:	e8 d4 19 00 00       	call   a360 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    898c:	48 8b 10             	mov    (%rax),%rdx
    898f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8993:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
    8996:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    899a:	48 89 c7             	mov    %rax,%rdi
    899d:	e8 be 19 00 00       	call   a360 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    89a2:	48 8b 10             	mov    (%rax),%rdx
    89a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89a9:	48 89 10             	mov    %rdx,(%rax)
    }
    89ac:	90                   	nop
    89ad:	c9                   	leave
    89ae:	c3                   	ret

00000000000089af <_ZSt4swapIPFvRKSt9_Any_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_>:
    swap(_Tp& __a, _Tp& __b)
    89af:	55                   	push   %rbp
    89b0:	48 89 e5             	mov    %rsp,%rbp
    89b3:	48 83 ec 20          	sub    $0x20,%rsp
    89b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    89bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    89bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89c3:	48 89 c7             	mov    %rax,%rdi
    89c6:	e8 a3 19 00 00       	call   a36e <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    89cb:	48 8b 00             	mov    (%rax),%rax
    89ce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    89d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89d6:	48 89 c7             	mov    %rax,%rdi
    89d9:	e8 90 19 00 00       	call   a36e <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    89de:	48 8b 10             	mov    (%rax),%rdx
    89e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89e5:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
    89e8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    89ec:	48 89 c7             	mov    %rax,%rdi
    89ef:	e8 7a 19 00 00       	call   a36e <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    89f4:	48 8b 10             	mov    (%rax),%rdx
    89f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89fb:	48 89 10             	mov    %rdx,(%rax)
    }
    89fe:	90                   	nop
    89ff:	c9                   	leave
    8a00:	c3                   	ret

0000000000008a01 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    8a01:	55                   	push   %rbp
    8a02:	48 89 e5             	mov    %rsp,%rbp
    8a05:	48 83 ec 10          	sub    $0x10,%rsp
    8a09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    8a11:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a19:	48 89 d6             	mov    %rdx,%rsi
    8a1c:	48 89 c7             	mov    %rax,%rdi
    8a1f:	e8 58 19 00 00       	call   a37c <_ZNSt15__new_allocatorISt8functionIFvvEEE7destroyIS2_EEvPT_>
	}
    8a24:	90                   	nop
    8a25:	c9                   	leave
    8a26:	c3                   	ret
    8a27:	90                   	nop

0000000000008a28 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_pop_front_auxEv>:
    void deque<_Tp, _Alloc>::
    8a28:	55                   	push   %rbp
    8a29:	48 89 e5             	mov    %rsp,%rbp
    8a2c:	53                   	push   %rbx
    8a2d:	48 83 ec 18          	sub    $0x18,%rsp
    8a31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      _Alloc_traits::destroy(_M_get_Tp_allocator(),
    8a35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a39:	48 8b 58 10          	mov    0x10(%rax),%rbx
    8a3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a41:	48 89 c7             	mov    %rax,%rdi
    8a44:	e8 e3 da ff ff       	call   652c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    8a49:	48 89 de             	mov    %rbx,%rsi
    8a4c:	48 89 c7             	mov    %rax,%rdi
    8a4f:	e8 ad ff ff ff       	call   8a01 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>
      _M_deallocate_node(this->_M_impl._M_start._M_first);
    8a54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a58:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8a5c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    8a60:	48 89 d6             	mov    %rdx,%rsi
    8a63:	48 89 c7             	mov    %rax,%rdi
    8a66:	e8 7f 12 00 00       	call   9cea <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
      this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
    8a6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a6f:	48 83 c0 10          	add    $0x10,%rax
    8a73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8a77:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    8a7b:	48 83 c2 08          	add    $0x8,%rdx
    8a7f:	48 89 d6             	mov    %rdx,%rsi
    8a82:	48 89 c7             	mov    %rax,%rdi
    8a85:	e8 10 12 00 00       	call   9c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
    8a8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a8e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    8a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a96:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    8a9a:	90                   	nop
    8a9b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a9f:	c9                   	leave
    8aa0:	c3                   	ret
    8aa1:	90                   	nop

0000000000008aa2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11lower_boundERS3_>:
      lower_bound(const key_type& __k)
    8aa2:	55                   	push   %rbp
    8aa3:	48 89 e5             	mov    %rsp,%rbp
    8aa6:	53                   	push   %rbx
    8aa7:	48 83 ec 18          	sub    $0x18,%rsp
    8aab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8aaf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    8ab3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ab7:	48 89 c7             	mov    %rax,%rdi
    8aba:	e8 dd 18 00 00       	call   a39c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    8abf:	48 89 c3             	mov    %rax,%rbx
    8ac2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ac6:	48 89 c7             	mov    %rax,%rdi
    8ac9:	e8 5e db ff ff       	call   662c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    8ace:	48 89 c6             	mov    %rax,%rsi
    8ad1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ad9:	48 89 d1             	mov    %rdx,%rcx
    8adc:	48 89 da             	mov    %rbx,%rdx
    8adf:	48 89 c7             	mov    %rax,%rdi
    8ae2:	e8 c7 18 00 00       	call   a3ae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_>
    8ae7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8aeb:	c9                   	leave
    8aec:	c3                   	ret
    8aed:	90                   	nop

0000000000008aee <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8aee:	55                   	push   %rbp
    8aef:	48 89 e5             	mov    %rsp,%rbp
    8af2:	48 83 ec 20          	sub    $0x20,%rsp
    8af6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    8afa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8afe:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8b02:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8b06:	48 89 d6             	mov    %rdx,%rsi
    8b09:	48 89 c7             	mov    %rax,%rdi
    8b0c:	e8 11 06 00 00       	call   9122 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    8b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b15:	c9                   	leave
    8b16:	c3                   	ret
    8b17:	90                   	nop

0000000000008b18 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8key_compEv>:
      key_comp() const
    8b18:	55                   	push   %rbp
    8b19:	48 89 e5             	mov    %rsp,%rbp
    8b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    8b20:	90                   	nop
    8b21:	5d                   	pop    %rbp
    8b22:	c3                   	ret
    8b23:	90                   	nop

0000000000008b24 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>:
      _M_valptr()
    8b24:	55                   	push   %rbp
    8b25:	48 89 e5             	mov    %rsp,%rbp
    8b28:	48 83 ec 10          	sub    $0x10,%rsp
    8b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    8b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b34:	48 83 c0 20          	add    $0x20,%rax
    8b38:	48 89 c7             	mov    %rax,%rdi
    8b3b:	e8 04 19 00 00       	call   a444 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>
    8b40:	c9                   	leave
    8b41:	c3                   	ret

0000000000008b42 <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8b42:	55                   	push   %rbp
    8b43:	48 89 e5             	mov    %rsp,%rbp
    8b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b4e:	5d                   	pop    %rbp
    8b4f:	c3                   	ret

0000000000008b50 <_ZNSt5tupleIJONSt6thread2idEEEC1IJS1_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    8b50:	55                   	push   %rbp
    8b51:	48 89 e5             	mov    %rsp,%rbp
    8b54:	53                   	push   %rbx
    8b55:	48 83 ec 18          	sub    $0x18,%rsp
    8b59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8b5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    8b61:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8b65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8b69:	48 89 c7             	mov    %rax,%rdi
    8b6c:	e8 d1 ff ff ff       	call   8b42 <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    8b71:	48 89 c6             	mov    %rax,%rsi
    8b74:	48 89 df             	mov    %rbx,%rdi
    8b77:	e8 e2 18 00 00       	call   a45e <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1IS1_EEOT_>
    8b7c:	90                   	nop
    8b7d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b81:	c9                   	leave
    8b82:	c3                   	ret

0000000000008b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8b83:	55                   	push   %rbp
    8b84:	48 89 e5             	mov    %rsp,%rbp
    8b87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b8f:	5d                   	pop    %rbp
    8b90:	c3                   	ret

0000000000008b91 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8b91:	55                   	push   %rbp
    8b92:	48 89 e5             	mov    %rsp,%rbp
    8b95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b9d:	5d                   	pop    %rbp
    8b9e:	c3                   	ret

0000000000008b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8b9f:	55                   	push   %rbp
    8ba0:	48 89 e5             	mov    %rsp,%rbp
    8ba3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bab:	5d                   	pop    %rbp
    8bac:	c3                   	ret
    8bad:	90                   	nop

0000000000008bae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEERSA_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    8bae:	55                   	push   %rbp
    8baf:	48 89 e5             	mov    %rsp,%rbp
    8bb2:	41 54                	push   %r12
    8bb4:	53                   	push   %rbx
    8bb5:	48 83 ec 30          	sub    $0x30,%rsp
    8bb9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8bbd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8bc1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8bc5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    8bc9:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    8bcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bd1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8bd5:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    8bd8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8bdc:	48 89 c7             	mov    %rax,%rdi
    8bdf:	e8 bb ff ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    8be4:	49 89 c4             	mov    %rax,%r12
    8be7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8beb:	48 89 c7             	mov    %rax,%rdi
    8bee:	e8 9e ff ff ff       	call   8b91 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8bf3:	48 89 c3             	mov    %rax,%rbx
    8bf6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8bfa:	48 89 c7             	mov    %rax,%rdi
    8bfd:	e8 81 ff ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    8c02:	48 89 c6             	mov    %rax,%rsi
    8c05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c09:	4c 89 e1             	mov    %r12,%rcx
    8c0c:	48 89 da             	mov    %rbx,%rdx
    8c0f:	48 89 c7             	mov    %rax,%rdi
    8c12:	e8 7b 18 00 00       	call   a492 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEPSt13_Rb_tree_nodeIS4_EDpOT_>
    8c17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8c1b:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    8c1f:	90                   	nop
    8c20:	48 83 c4 30          	add    $0x30,%rsp
    8c24:	5b                   	pop    %rbx
    8c25:	41 5c                	pop    %r12
    8c27:	5d                   	pop    %rbp
    8c28:	c3                   	ret
    8c29:	90                   	nop

0000000000008c2a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    8c2a:	55                   	push   %rbp
    8c2b:	48 89 e5             	mov    %rsp,%rbp
    8c2e:	48 83 ec 10          	sub    $0x10,%rsp
    8c32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    8c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c3a:	48 8b 40 08          	mov    0x8(%rax),%rax
    8c3e:	48 85 c0             	test   %rax,%rax
    8c41:	74 1a                	je     8c5d <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    8c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c47:	48 8b 00             	mov    (%rax),%rax
    8c4a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8c4e:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    8c52:	48 89 d6             	mov    %rdx,%rsi
    8c55:	48 89 c7             	mov    %rax,%rdi
    8c58:	e8 41 f6 ff ff       	call   829e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>
	}
    8c5d:	90                   	nop
    8c5e:	c9                   	leave
    8c5f:	c3                   	ret

0000000000008c60 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8c60:	55                   	push   %rbp
    8c61:	48 89 e5             	mov    %rsp,%rbp
    8c64:	53                   	push   %rbx
    8c65:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    8c6c:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    8c73:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    8c7a:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    8c81:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8c88:	48 89 c7             	mov    %rax,%rdi
    8c8b:	e8 7e 18 00 00       	call   a50e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEE13_M_const_castEv>
    8c90:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    8c97:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    8c9e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8ca5:	48 89 c7             	mov    %rax,%rdi
    8ca8:	e8 ef 16 00 00       	call   a39c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    8cad:	48 39 c3             	cmp    %rax,%rbx
    8cb0:	0f 94 c0             	sete   %al
    8cb3:	84 c0                	test   %al,%al
    8cb5:	0f 84 c8 00 00 00    	je     8d83 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x123>
	  if (size() > 0
    8cbb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8cc2:	48 89 c7             	mov    %rax,%rdi
    8cc5:	e8 6c 18 00 00       	call   a536 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    8cca:	48 85 c0             	test   %rax,%rax
    8ccd:	74 44                	je     8d13 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb3>
    8ccf:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    8cd6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8cdd:	48 89 c7             	mov    %rax,%rdi
    8ce0:	e8 63 18 00 00       	call   a548 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    8ce5:	48 8b 00             	mov    (%rax),%rax
    8ce8:	48 89 c7             	mov    %rax,%rdi
    8ceb:	e8 6a 18 00 00       	call   a55a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    8cf0:	48 89 c1             	mov    %rax,%rcx
    8cf3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8cfa:	48 89 c2             	mov    %rax,%rdx
    8cfd:	48 89 ce             	mov    %rcx,%rsi
    8d00:	48 89 df             	mov    %rbx,%rdi
    8d03:	e8 d6 e1 ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8d08:	84 c0                	test   %al,%al
    8d0a:	74 07                	je     8d13 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb3>
    8d0c:	b8 01 00 00 00       	mov    $0x1,%eax
    8d11:	eb 05                	jmp    8d18 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb8>
    8d13:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    8d18:	84 c0                	test   %al,%al
    8d1a:	74 49                	je     8d65 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x105>
	    return _Res(0, _M_rightmost());
    8d1c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8d23:	48 89 c7             	mov    %rax,%rdi
    8d26:	e8 1d 18 00 00       	call   a548 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    8d2b:	48 89 c2             	mov    %rax,%rdx
    8d2e:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    8d35:	00 00 00 00 
    8d39:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    8d40:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    8d47:	48 89 ce             	mov    %rcx,%rsi
    8d4a:	48 89 c7             	mov    %rax,%rdi
    8d4d:	e8 22 18 00 00       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    8d52:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    8d59:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    8d60:	e9 43 03 00 00       	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    8d65:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    8d6c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8d73:	48 89 d6             	mov    %rdx,%rsi
    8d76:	48 89 c7             	mov    %rax,%rdi
    8d79:	e8 26 18 00 00       	call   a5a4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    8d7e:	e9 25 03 00 00       	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    8d83:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    8d8a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    8d91:	48 89 c7             	mov    %rax,%rdi
    8d94:	e8 c1 17 00 00       	call   a55a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    8d99:	48 89 c2             	mov    %rax,%rdx
    8d9c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8da3:	48 89 c6             	mov    %rax,%rsi
    8da6:	48 89 df             	mov    %rbx,%rdi
    8da9:	e8 30 e1 ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8dae:	84 c0                	test   %al,%al
    8db0:	0f 84 66 01 00 00    	je     8f1c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x2bc>
	  iterator __before = __pos;
    8db6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    8dbd:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    8dc4:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    8dcb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8dd2:	48 89 c7             	mov    %rax,%rdi
    8dd5:	e8 40 19 00 00       	call   a71a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    8dda:	48 8b 00             	mov    (%rax),%rax
    8ddd:	48 39 c3             	cmp    %rax,%rbx
    8de0:	0f 94 c0             	sete   %al
    8de3:	84 c0                	test   %al,%al
    8de5:	74 4c                	je     8e33 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    8de7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8dee:	48 89 c7             	mov    %rax,%rdi
    8df1:	e8 24 19 00 00       	call   a71a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    8df6:	48 89 c3             	mov    %rax,%rbx
    8df9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8e00:	48 89 c7             	mov    %rax,%rdi
    8e03:	e8 12 19 00 00       	call   a71a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    8e08:	48 89 c1             	mov    %rax,%rcx
    8e0b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    8e12:	48 89 da             	mov    %rbx,%rdx
    8e15:	48 89 ce             	mov    %rcx,%rsi
    8e18:	48 89 c7             	mov    %rax,%rdi
    8e1b:	e8 0c 19 00 00       	call   a72c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    8e20:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    8e27:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    8e2e:	e9 75 02 00 00       	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    8e33:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    8e3a:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    8e41:	48 89 c7             	mov    %rax,%rdi
    8e44:	e8 27 19 00 00       	call   a770 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>
    8e49:	48 8b 00             	mov    (%rax),%rax
    8e4c:	48 89 c7             	mov    %rax,%rdi
    8e4f:	e8 06 17 00 00       	call   a55a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    8e54:	48 89 c1             	mov    %rax,%rcx
    8e57:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8e5e:	48 89 c2             	mov    %rax,%rdx
    8e61:	48 89 ce             	mov    %rcx,%rsi
    8e64:	48 89 df             	mov    %rbx,%rdi
    8e67:	e8 72 e0 ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8e6c:	84 c0                	test   %al,%al
    8e6e:	0f 84 8a 00 00 00    	je     8efe <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    8e74:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    8e7b:	48 89 c7             	mov    %rax,%rdi
    8e7e:	e8 f6 f3 ff ff       	call   8279 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    8e83:	48 85 c0             	test   %rax,%rax
    8e86:	0f 94 c0             	sete   %al
    8e89:	84 c0                	test   %al,%al
    8e8b:	74 3e                	je     8ecb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x26b>
		return _Res(0, __before._M_node);
    8e8d:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    8e94:	00 00 00 00 
    8e98:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    8e9f:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    8ea6:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    8ead:	48 89 ce             	mov    %rcx,%rsi
    8eb0:	48 89 c7             	mov    %rax,%rdi
    8eb3:	e8 bc 16 00 00       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    8eb8:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8ebf:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    8ec6:	e9 dd 01 00 00       	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    8ecb:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    8ed2:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    8ed9:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    8ee0:	48 89 ce             	mov    %rcx,%rsi
    8ee3:	48 89 c7             	mov    %rax,%rdi
    8ee6:	e8 41 18 00 00       	call   a72c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    8eeb:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    8ef2:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    8ef9:	e9 aa 01 00 00       	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    8efe:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    8f05:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8f0c:	48 89 d6             	mov    %rdx,%rsi
    8f0f:	48 89 c7             	mov    %rax,%rdi
    8f12:	e8 8d 16 00 00       	call   a5a4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    8f17:	e9 8c 01 00 00       	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    8f1c:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    8f23:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    8f2a:	48 89 c7             	mov    %rax,%rdi
    8f2d:	e8 28 16 00 00       	call   a55a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    8f32:	48 89 c1             	mov    %rax,%rcx
    8f35:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8f3c:	48 89 c2             	mov    %rax,%rdx
    8f3f:	48 89 ce             	mov    %rcx,%rsi
    8f42:	48 89 df             	mov    %rbx,%rdi
    8f45:	e8 94 df ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8f4a:	84 c0                	test   %al,%al
    8f4c:	0f 84 2c 01 00 00    	je     907e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x41e>
	  iterator __after = __pos;
    8f52:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    8f59:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    8f60:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    8f67:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8f6e:	48 89 c7             	mov    %rax,%rdi
    8f71:	e8 d2 15 00 00       	call   a548 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    8f76:	48 8b 00             	mov    (%rax),%rax
    8f79:	48 39 c3             	cmp    %rax,%rbx
    8f7c:	0f 94 c0             	sete   %al
    8f7f:	84 c0                	test   %al,%al
    8f81:	74 3a                	je     8fbd <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x35d>
	    return _Res(0, _M_rightmost());
    8f83:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8f8a:	48 89 c7             	mov    %rax,%rdi
    8f8d:	e8 b6 15 00 00       	call   a548 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    8f92:	48 89 c2             	mov    %rax,%rdx
    8f95:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    8f9c:	00 
    8f9d:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    8fa1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8fa5:	48 89 ce             	mov    %rcx,%rsi
    8fa8:	48 89 c7             	mov    %rax,%rdi
    8fab:	e8 c4 15 00 00       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    8fb0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8fb4:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    8fb8:	e9 eb 00 00 00       	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    8fbd:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    8fc4:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    8fcb:	48 89 c7             	mov    %rax,%rdi
    8fce:	e8 c5 17 00 00       	call   a798 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEppEv>
    8fd3:	48 8b 00             	mov    (%rax),%rax
    8fd6:	48 89 c7             	mov    %rax,%rdi
    8fd9:	e8 7c 15 00 00       	call   a55a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    8fde:	48 89 c2             	mov    %rax,%rdx
    8fe1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8fe8:	48 89 c6             	mov    %rax,%rsi
    8feb:	48 89 df             	mov    %rbx,%rdi
    8fee:	e8 eb de ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8ff3:	84 c0                	test   %al,%al
    8ff5:	74 6c                	je     9063 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    8ff7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    8ffe:	48 89 c7             	mov    %rax,%rdi
    9001:	e8 73 f2 ff ff       	call   8279 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    9006:	48 85 c0             	test   %rax,%rax
    9009:	0f 94 c0             	sete   %al
    900c:	84 c0                	test   %al,%al
    900e:	74 2c                	je     903c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x3dc>
		return _Res(0, __pos._M_node);
    9010:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    9017:	00 
    9018:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    901f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    9023:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9027:	48 89 ce             	mov    %rcx,%rsi
    902a:	48 89 c7             	mov    %rax,%rdi
    902d:	e8 42 15 00 00       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    9032:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    9036:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    903a:	eb 6c                	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
		return _Res(__after._M_node, __after._M_node);
    903c:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    9043:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    904a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    904e:	48 89 ce             	mov    %rcx,%rsi
    9051:	48 89 c7             	mov    %rax,%rdi
    9054:	e8 d3 16 00 00       	call   a72c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    9059:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    905d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9061:	eb 45                	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    9063:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    906a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9071:	48 89 d6             	mov    %rdx,%rsi
    9074:	48 89 c7             	mov    %rax,%rdi
    9077:	e8 28 15 00 00       	call   a5a4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    907c:	eb 2a                	jmp    90a8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	return _Res(__pos._M_node, 0);
    907e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9085:	00 
    9086:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    908a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    9091:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    9095:	48 89 ce             	mov    %rcx,%rsi
    9098:	48 89 c7             	mov    %rax,%rdi
    909b:	e8 d4 14 00 00       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    90a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    90a4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    90a8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90ac:	c9                   	leave
    90ad:	c3                   	ret

00000000000090ae <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    90ae:	55                   	push   %rbp
    90af:	48 89 e5             	mov    %rsp,%rbp
    90b2:	48 83 ec 10          	sub    $0x10,%rsp
    90b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    90ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90be:	48 8b 40 08          	mov    0x8(%rax),%rax
    90c2:	48 89 c7             	mov    %rax,%rdi
    90c5:	e8 f6 16 00 00       	call   a7c0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    90ca:	c9                   	leave
    90cb:	c3                   	ret

00000000000090cc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSD_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    90cc:	55                   	push   %rbp
    90cd:	48 89 e5             	mov    %rsp,%rbp
    90d0:	48 83 ec 30          	sub    $0x30,%rsp
    90d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90d8:	48 89 d1             	mov    %rdx,%rcx
    90db:	48 89 f0             	mov    %rsi,%rax
    90de:	48 89 fa             	mov    %rdi,%rdx
    90e1:	48 89 ca             	mov    %rcx,%rdx
    90e4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    90e8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    90ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90f0:	48 8b 00             	mov    (%rax),%rax
    90f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90f7:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    90fb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    90ff:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    9103:	48 89 c7             	mov    %rax,%rdi
    9106:	e8 e1 16 00 00       	call   a7ec <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E>
    910b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    910f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9113:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    911a:	00 
	  return __it;
    911b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    911f:	c9                   	leave
    9120:	c3                   	ret
    9121:	90                   	nop

0000000000009122 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    9122:	55                   	push   %rbp
    9123:	48 89 e5             	mov    %rsp,%rbp
    9126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    912a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    912e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9132:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9136:	48 89 10             	mov    %rdx,(%rax)
    9139:	90                   	nop
    913a:	5d                   	pop    %rbp
    913b:	c3                   	ret

000000000000913c <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    913c:	55                   	push   %rbp
    913d:	48 89 e5             	mov    %rsp,%rbp
    9140:	48 83 ec 10          	sub    $0x10,%rsp
    9144:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    9148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    914c:	48 89 c7             	mov    %rax,%rdi
    914f:	e8 5c 17 00 00       	call   a8b0 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>
    9154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9158:	48 89 c7             	mov    %rax,%rdi
    915b:	e8 6c 17 00 00       	call   a8cc <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>
    9160:	90                   	nop
    9161:	c9                   	leave
    9162:	c3                   	ret

0000000000009163 <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9163:	55                   	push   %rbp
    9164:	48 89 e5             	mov    %rsp,%rbp
    9167:	48 83 ec 10          	sub    $0x10,%rsp
    916b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    916f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9173:	48 89 c7             	mov    %rax,%rdi
    9176:	e8 67 17 00 00       	call   a8e2 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    917b:	c9                   	leave
    917c:	c3                   	ret
    917d:	90                   	nop

000000000000917e <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    917e:	55                   	push   %rbp
    917f:	48 89 e5             	mov    %rsp,%rbp
    9182:	48 83 ec 10          	sub    $0x10,%rsp
    9186:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    918a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    918e:	48 89 c7             	mov    %rax,%rdi
    9191:	e8 66 17 00 00       	call   a8fc <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>
    9196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    919a:	48 89 c7             	mov    %rax,%rdi
    919d:	e8 76 17 00 00       	call   a918 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>
    91a2:	90                   	nop
    91a3:	c9                   	leave
    91a4:	c3                   	ret

00000000000091a5 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    91a5:	55                   	push   %rbp
    91a6:	48 89 e5             	mov    %rsp,%rbp
    91a9:	48 83 ec 10          	sub    $0x10,%rsp
    91ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    91b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91b5:	48 89 c7             	mov    %rax,%rdi
    91b8:	e8 71 17 00 00       	call   a92e <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    91bd:	c9                   	leave
    91be:	c3                   	ret
    91bf:	90                   	nop

00000000000091c0 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    91c0:	55                   	push   %rbp
    91c1:	48 89 e5             	mov    %rsp,%rbp
    91c4:	48 83 ec 10          	sub    $0x10,%rsp
    91c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    91cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91d0:	48 89 c7             	mov    %rax,%rdi
    91d3:	e8 70 17 00 00       	call   a948 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEEC1Ev>
    91d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91dc:	48 89 c7             	mov    %rax,%rdi
    91df:	e8 80 17 00 00       	call   a964 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EEC1Ev>
    91e4:	90                   	nop
    91e5:	c9                   	leave
    91e6:	c3                   	ret

00000000000091e7 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    91e7:	55                   	push   %rbp
    91e8:	48 89 e5             	mov    %rsp,%rbp
    91eb:	48 83 ec 10          	sub    $0x10,%rsp
    91ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    91f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91f7:	48 89 c7             	mov    %rax,%rdi
    91fa:	e8 7b 17 00 00       	call   a97a <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    91ff:	c9                   	leave
    9200:	c3                   	ret
    9201:	90                   	nop

0000000000009202 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    9202:	55                   	push   %rbp
    9203:	48 89 e5             	mov    %rsp,%rbp
    9206:	53                   	push   %rbx
    9207:	48 83 ec 18          	sub    $0x18,%rsp
    920b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    920f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9213:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9217:	48 89 c7             	mov    %rax,%rdi
    921a:	e8 4f de ff ff       	call   706e <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    921f:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    9223:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9227:	48 89 c7             	mov    %rax,%rdi
    922a:	e8 5b de ff ff       	call   708a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    922f:	48 89 18             	mov    %rbx,(%rax)
    9232:	90                   	nop
    9233:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9237:	c9                   	leave
    9238:	c3                   	ret

0000000000009239 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9239:	55                   	push   %rbp
    923a:	48 89 e5             	mov    %rsp,%rbp
    923d:	48 83 ec 10          	sub    $0x10,%rsp
    9241:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9249:	48 89 c7             	mov    %rax,%rdi
    924c:	e8 43 17 00 00       	call   a994 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    9251:	c9                   	leave
    9252:	c3                   	ret
    9253:	90                   	nop

0000000000009254 <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    9254:	55                   	push   %rbp
    9255:	48 89 e5             	mov    %rsp,%rbp
    9258:	48 83 ec 10          	sub    $0x10,%rsp
    925c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9264:	48 89 c7             	mov    %rax,%rdi
    9267:	e8 42 17 00 00       	call   a9ae <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    926c:	48 8b 00             	mov    (%rax),%rax
    926f:	c9                   	leave
    9270:	c3                   	ret
    9271:	90                   	nop

0000000000009272 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    9272:	55                   	push   %rbp
    9273:	48 89 e5             	mov    %rsp,%rbp
    9276:	53                   	push   %rbx
    9277:	48 83 ec 18          	sub    $0x18,%rsp
    927b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    927f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9283:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9287:	48 89 c7             	mov    %rax,%rdi
    928a:	e8 73 df ff ff       	call   7202 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    928f:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    9293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9297:	48 89 c7             	mov    %rax,%rdi
    929a:	e8 7f df ff ff       	call   721e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    929f:	48 89 18             	mov    %rbx,(%rax)
    92a2:	90                   	nop
    92a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    92a7:	c9                   	leave
    92a8:	c3                   	ret

00000000000092a9 <_ZSt3getILm1EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    92a9:	55                   	push   %rbp
    92aa:	48 89 e5             	mov    %rsp,%rbp
    92ad:	48 83 ec 10          	sub    $0x10,%rsp
    92b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    92b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92b9:	48 89 c7             	mov    %rax,%rdi
    92bc:	e8 07 17 00 00       	call   a9c8 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko10ThreadPoolEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    92c1:	c9                   	leave
    92c2:	c3                   	ret
    92c3:	90                   	nop

00000000000092c4 <_ZNKSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    92c4:	55                   	push   %rbp
    92c5:	48 89 e5             	mov    %rsp,%rbp
    92c8:	48 83 ec 10          	sub    $0x10,%rsp
    92cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d4:	48 89 c7             	mov    %rax,%rdi
    92d7:	e8 06 17 00 00       	call   a9e2 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    92dc:	48 8b 00             	mov    (%rax),%rax
    92df:	c9                   	leave
    92e0:	c3                   	ret
    92e1:	90                   	nop

00000000000092e2 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    92e2:	55                   	push   %rbp
    92e3:	48 89 e5             	mov    %rsp,%rbp
    92e6:	53                   	push   %rbx
    92e7:	48 83 ec 18          	sub    $0x18,%rsp
    92eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    92ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    92f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92f7:	48 89 c7             	mov    %rax,%rdi
    92fa:	e8 1f de ff ff       	call   711e <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    92ff:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    9303:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9307:	48 89 c7             	mov    %rax,%rdi
    930a:	e8 2b de ff ff       	call   713a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    930f:	48 89 18             	mov    %rbx,(%rax)
    9312:	90                   	nop
    9313:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9317:	c9                   	leave
    9318:	c3                   	ret

0000000000009319 <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9319:	55                   	push   %rbp
    931a:	48 89 e5             	mov    %rsp,%rbp
    931d:	48 83 ec 10          	sub    $0x10,%rsp
    9321:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9329:	48 89 c7             	mov    %rax,%rdi
    932c:	e8 cb 16 00 00       	call   a9fc <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    9331:	c9                   	leave
    9332:	c3                   	ret
    9333:	90                   	nop

0000000000009334 <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    9334:	55                   	push   %rbp
    9335:	48 89 e5             	mov    %rsp,%rbp
    9338:	48 83 ec 10          	sub    $0x10,%rsp
    933c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9344:	48 89 c7             	mov    %rax,%rdi
    9347:	e8 ca 16 00 00       	call   aa16 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    934c:	48 8b 00             	mov    (%rax),%rax
    934f:	c9                   	leave
    9350:	c3                   	ret

0000000000009351 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    9351:	55                   	push   %rbp
    9352:	48 89 e5             	mov    %rsp,%rbp
    9355:	53                   	push   %rbx
    9356:	48 83 ec 18          	sub    $0x18,%rsp
    935a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    935e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    9362:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9366:	48 89 c7             	mov    %rax,%rdi
    9369:	e8 98 a7 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    936e:	48 89 c6             	mov    %rax,%rsi
    9371:	bf 08 00 00 00       	mov    $0x8,%edi
    9376:	e8 0e a5 ff ff       	call   3889 <_ZnwmPv>
    937b:	48 89 c3             	mov    %rax,%rbx
    937e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9382:	48 89 c7             	mov    %rax,%rdi
    9385:	e8 b5 e2 ff ff       	call   763f <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    938a:	48 8b 00             	mov    (%rax),%rax
    938d:	48 89 03             	mov    %rax,(%rbx)
	  }
    9390:	90                   	nop
    9391:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9395:	c9                   	leave
    9396:	c3                   	ret

0000000000009397 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source) noexcept
    9397:	55                   	push   %rbp
    9398:	48 89 e5             	mov    %rsp,%rbp
    939b:	48 83 ec 20          	sub    $0x20,%rsp
    939f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      const _Functor& __f = __source._M_access<_Functor>();
    93a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93a7:	48 89 c7             	mov    %rax,%rdi
    93aa:	e8 81 16 00 00       	call   aa30 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERKT_v>
    93af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      return const_cast<_Functor*>(std::__addressof(__f));
    93b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93b7:	48 89 c7             	mov    %rax,%rdi
    93ba:	e8 8b 16 00 00       	call   aa4a <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE_EPT_RS4_>
	}
    93bf:	c9                   	leave
    93c0:	c3                   	ret

00000000000093c1 <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>:
    __invoke_r(_Callable&& __fn, _Args&&... __args)
    93c1:	55                   	push   %rbp
    93c2:	48 89 e5             	mov    %rsp,%rbp
    93c5:	48 83 ec 10          	sub    $0x10,%rsp
    93c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    93cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93d1:	48 89 c7             	mov    %rax,%rdi
    93d4:	e8 7f 16 00 00       	call   aa58 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>
    93d9:	48 89 c7             	mov    %rax,%rdi
    93dc:	e8 85 16 00 00       	call   aa66 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>
    }
    93e1:	90                   	nop
    93e2:	c9                   	leave
    93e3:	c3                   	ret

00000000000093e4 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>:
      _M_access() noexcept
    93e4:	55                   	push   %rbp
    93e5:	48 89 e5             	mov    %rsp,%rbp
    93e8:	48 83 ec 10          	sub    $0x10,%rsp
    93ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    93f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93f4:	48 89 c7             	mov    %rax,%rdi
    93f7:	e8 0a a7 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    93fc:	c9                   	leave
    93fd:	c3                   	ret

00000000000093fe <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
    93fe:	55                   	push   %rbp
    93ff:	48 89 e5             	mov    %rsp,%rbp
    9402:	53                   	push   %rbx
    9403:	48 83 ec 28          	sub    $0x28,%rsp
    9407:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    940b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    940f:	89 55 dc             	mov    %edx,-0x24(%rbp)
	  switch (__op)
    9412:	8b 45 dc             	mov    -0x24(%rbp),%eax
    9415:	83 f8 03             	cmp    $0x3,%eax
    9418:	74 72                	je     948c <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x8e>
    941a:	83 f8 03             	cmp    $0x3,%eax
    941d:	7f 7a                	jg     9499 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    941f:	83 f8 02             	cmp    $0x2,%eax
    9422:	74 48                	je     946c <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x6e>
    9424:	83 f8 02             	cmp    $0x2,%eax
    9427:	7f 70                	jg     9499 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    9429:	85 c0                	test   %eax,%eax
    942b:	74 07                	je     9434 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x36>
    942d:	83 f8 01             	cmp    $0x1,%eax
    9430:	74 1a                	je     944c <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x4e>
    9432:	eb 65                	jmp    9499 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<const type_info*>() = &typeid(_Functor);
    9434:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9438:	48 89 c7             	mov    %rax,%rdi
    943b:	e8 b2 f1 ff ff       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    9440:	48 8d 15 01 99 01 00 	lea    0x19901(%rip),%rdx        # 22d48 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    9447:	48 89 10             	mov    %rdx,(%rax)
	      break;
    944a:	eb 4d                	jmp    9499 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
    944c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9450:	48 89 c7             	mov    %rax,%rdi
    9453:	e8 3f ff ff ff       	call   9397 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    9458:	48 89 c3             	mov    %rax,%rbx
    945b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    945f:	48 89 c7             	mov    %rax,%rdi
    9462:	e8 7d ff ff ff       	call   93e4 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>
    9467:	48 89 18             	mov    %rbx,(%rax)
	      break;
    946a:	eb 2d                	jmp    9499 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
		  *const_cast<const _Functor*>(_M_get_pointer(__source)));
    946c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9470:	48 89 c7             	mov    %rax,%rdi
    9473:	e8 1f ff ff ff       	call   9397 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    9478:	48 89 c2             	mov    %rax,%rdx
	      _M_init_functor(__dest,
    947b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    947f:	48 89 d6             	mov    %rdx,%rsi
    9482:	48 89 c7             	mov    %rax,%rdi
    9485:	e8 ff 15 00 00       	call   aa89 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>
	      break;
    948a:	eb 0d                	jmp    9499 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      _M_destroy(__dest, _Local_storage());
    948c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9490:	48 89 c7             	mov    %rax,%rdi
    9493:	e8 22 16 00 00       	call   aaba <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>
	      break;
    9498:	90                   	nop
	  return false;
    9499:	b8 00 00 00 00       	mov    $0x0,%eax
	}
    949e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    94a2:	c9                   	leave
    94a3:	c3                   	ret

00000000000094a4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    94a4:	55                   	push   %rbp
    94a5:	48 89 e5             	mov    %rsp,%rbp
    94a8:	48 83 ec 10          	sub    $0x10,%rsp
    94ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    94b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b8:	48 89 c7             	mov    %rax,%rdi
    94bb:	e8 46 a6 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    94c0:	48 89 c6             	mov    %rax,%rsi
    94c3:	bf 01 00 00 00       	mov    $0x1,%edi
    94c8:	e8 bc a3 ff ff       	call   3889 <_ZnwmPv>
    94cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94d1:	48 89 c7             	mov    %rax,%rdi
    94d4:	e8 52 e2 ff ff       	call   772b <_ZSt7forwardIZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS3_E4typeE>
	  }
    94d9:	90                   	nop
    94da:	c9                   	leave
    94db:	c3                   	ret

00000000000094dc <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source) noexcept
    94dc:	55                   	push   %rbp
    94dd:	48 89 e5             	mov    %rsp,%rbp
    94e0:	48 83 ec 20          	sub    $0x20,%rsp
    94e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      const _Functor& __f = __source._M_access<_Functor>();
    94e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94ec:	48 89 c7             	mov    %rax,%rdi
    94ef:	e8 e2 15 00 00       	call   aad6 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE0_EERKT_v>
    94f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      return const_cast<_Functor*>(std::__addressof(__f));
    94f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94fc:	48 89 c7             	mov    %rax,%rdi
    94ff:	e8 ec 15 00 00       	call   aaf0 <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE0_EPT_RS4_>
	}
    9504:	c9                   	leave
    9505:	c3                   	ret

0000000000009506 <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE0_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>:
    __invoke_r(_Callable&& __fn, _Args&&... __args)
    9506:	55                   	push   %rbp
    9507:	48 89 e5             	mov    %rsp,%rbp
    950a:	48 83 ec 10          	sub    $0x10,%rsp
    950e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    9512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9516:	48 89 c7             	mov    %rax,%rdi
    9519:	e8 e0 15 00 00       	call   aafe <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS4_E4typeE>
    951e:	48 89 c7             	mov    %rax,%rdi
    9521:	e8 e6 15 00 00       	call   ab0c <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_>
    }
    9526:	90                   	nop
    9527:	c9                   	leave
    9528:	c3                   	ret
    9529:	90                   	nop

000000000000952a <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE0_EERT_v>:
      _M_access() noexcept
    952a:	55                   	push   %rbp
    952b:	48 89 e5             	mov    %rsp,%rbp
    952e:	48 83 ec 10          	sub    $0x10,%rsp
    9532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    9536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    953a:	48 89 c7             	mov    %rax,%rdi
    953d:	e8 c4 a5 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    9542:	c9                   	leave
    9543:	c3                   	ret

0000000000009544 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
    9544:	55                   	push   %rbp
    9545:	48 89 e5             	mov    %rsp,%rbp
    9548:	53                   	push   %rbx
    9549:	48 83 ec 28          	sub    $0x28,%rsp
    954d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9551:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9555:	89 55 dc             	mov    %edx,-0x24(%rbp)
	  switch (__op)
    9558:	8b 45 dc             	mov    -0x24(%rbp),%eax
    955b:	83 f8 03             	cmp    $0x3,%eax
    955e:	74 72                	je     95d2 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x8e>
    9560:	83 f8 03             	cmp    $0x3,%eax
    9563:	7f 7a                	jg     95df <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    9565:	83 f8 02             	cmp    $0x2,%eax
    9568:	74 48                	je     95b2 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x6e>
    956a:	83 f8 02             	cmp    $0x2,%eax
    956d:	7f 70                	jg     95df <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    956f:	85 c0                	test   %eax,%eax
    9571:	74 07                	je     957a <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x36>
    9573:	83 f8 01             	cmp    $0x1,%eax
    9576:	74 1a                	je     9592 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x4e>
    9578:	eb 65                	jmp    95df <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<const type_info*>() = &typeid(_Functor);
    957a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    957e:	48 89 c7             	mov    %rax,%rdi
    9581:	e8 6c f0 ff ff       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    9586:	48 8d 15 ab 97 01 00 	lea    0x197ab(%rip),%rdx        # 22d38 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    958d:	48 89 10             	mov    %rdx,(%rax)
	      break;
    9590:	eb 4d                	jmp    95df <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
    9592:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9596:	48 89 c7             	mov    %rax,%rdi
    9599:	e8 3e ff ff ff       	call   94dc <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E14_M_get_pointerERKSt9_Any_data>
    959e:	48 89 c3             	mov    %rax,%rbx
    95a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95a5:	48 89 c7             	mov    %rax,%rdi
    95a8:	e8 7d ff ff ff       	call   952a <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE0_EERT_v>
    95ad:	48 89 18             	mov    %rbx,(%rax)
	      break;
    95b0:	eb 2d                	jmp    95df <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
		  *const_cast<const _Functor*>(_M_get_pointer(__source)));
    95b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    95b6:	48 89 c7             	mov    %rax,%rdi
    95b9:	e8 1e ff ff ff       	call   94dc <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E14_M_get_pointerERKSt9_Any_data>
    95be:	48 89 c2             	mov    %rax,%rdx
	      _M_init_functor(__dest,
    95c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95c5:	48 89 d6             	mov    %rdx,%rsi
    95c8:	48 89 c7             	mov    %rax,%rdi
    95cb:	e8 5f 15 00 00       	call   ab2f <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>
	      break;
    95d0:	eb 0d                	jmp    95df <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      _M_destroy(__dest, _Local_storage());
    95d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95d6:	48 89 c7             	mov    %rax,%rdi
    95d9:	e8 82 15 00 00       	call   ab60 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>
	      break;
    95de:	90                   	nop
	  return false;
    95df:	b8 00 00 00 00       	mov    $0x0,%eax
	}
    95e4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95e8:	c9                   	leave
    95e9:	c3                   	ret

00000000000095ea <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    95ea:	55                   	push   %rbp
    95eb:	48 89 e5             	mov    %rsp,%rbp
    95ee:	48 83 ec 10          	sub    $0x10,%rsp
    95f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    95fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95fe:	48 89 c7             	mov    %rax,%rdi
    9601:	e8 00 a5 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    9606:	48 89 c6             	mov    %rax,%rsi
    9609:	bf 01 00 00 00       	mov    $0x1,%edi
    960e:	e8 76 a2 ff ff       	call   3889 <_ZnwmPv>
    9613:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9617:	48 89 c7             	mov    %rax,%rdi
    961a:	e8 f8 e1 ff ff       	call   7817 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS3_E4typeE>
	  }
    961f:	90                   	nop
    9620:	c9                   	leave
    9621:	c3                   	ret

0000000000009622 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source) noexcept
    9622:	55                   	push   %rbp
    9623:	48 89 e5             	mov    %rsp,%rbp
    9626:	48 83 ec 20          	sub    $0x20,%rsp
    962a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      const _Functor& __f = __source._M_access<_Functor>();
    962e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9632:	48 89 c7             	mov    %rax,%rdi
    9635:	e8 42 15 00 00       	call   ab7c <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE1_EERKT_v>
    963a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      return const_cast<_Functor*>(std::__addressof(__f));
    963e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9642:	48 89 c7             	mov    %rax,%rdi
    9645:	e8 4c 15 00 00       	call   ab96 <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE1_EPT_RS4_>
	}
    964a:	c9                   	leave
    964b:	c3                   	ret

000000000000964c <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE1_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>:
    __invoke_r(_Callable&& __fn, _Args&&... __args)
    964c:	55                   	push   %rbp
    964d:	48 89 e5             	mov    %rsp,%rbp
    9650:	48 83 ec 10          	sub    $0x10,%rsp
    9654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    9658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    965c:	48 89 c7             	mov    %rax,%rdi
    965f:	e8 40 15 00 00       	call   aba4 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS4_E4typeE>
    9664:	48 89 c7             	mov    %rax,%rdi
    9667:	e8 46 15 00 00       	call   abb2 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE1_JEET_St14__invoke_otherOT0_DpOT1_>
    }
    966c:	90                   	nop
    966d:	c9                   	leave
    966e:	c3                   	ret
    966f:	90                   	nop

0000000000009670 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE1_EERT_v>:
      _M_access() noexcept
    9670:	55                   	push   %rbp
    9671:	48 89 e5             	mov    %rsp,%rbp
    9674:	48 83 ec 10          	sub    $0x10,%rsp
    9678:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    967c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9680:	48 89 c7             	mov    %rax,%rdi
    9683:	e8 7e a4 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    9688:	c9                   	leave
    9689:	c3                   	ret

000000000000968a <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
    968a:	55                   	push   %rbp
    968b:	48 89 e5             	mov    %rsp,%rbp
    968e:	53                   	push   %rbx
    968f:	48 83 ec 28          	sub    $0x28,%rsp
    9693:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9697:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    969b:	89 55 dc             	mov    %edx,-0x24(%rbp)
	  switch (__op)
    969e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    96a1:	83 f8 03             	cmp    $0x3,%eax
    96a4:	74 72                	je     9718 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x8e>
    96a6:	83 f8 03             	cmp    $0x3,%eax
    96a9:	7f 7a                	jg     9725 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    96ab:	83 f8 02             	cmp    $0x2,%eax
    96ae:	74 48                	je     96f8 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x6e>
    96b0:	83 f8 02             	cmp    $0x2,%eax
    96b3:	7f 70                	jg     9725 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    96b5:	85 c0                	test   %eax,%eax
    96b7:	74 07                	je     96c0 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x36>
    96b9:	83 f8 01             	cmp    $0x1,%eax
    96bc:	74 1a                	je     96d8 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x4e>
    96be:	eb 65                	jmp    9725 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<const type_info*>() = &typeid(_Functor);
    96c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96c4:	48 89 c7             	mov    %rax,%rdi
    96c7:	e8 26 ef ff ff       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    96cc:	48 8d 15 55 96 01 00 	lea    0x19655(%rip),%rdx        # 22d28 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    96d3:	48 89 10             	mov    %rdx,(%rax)
	      break;
    96d6:	eb 4d                	jmp    9725 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
    96d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96dc:	48 89 c7             	mov    %rax,%rdi
    96df:	e8 3e ff ff ff       	call   9622 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E14_M_get_pointerERKSt9_Any_data>
    96e4:	48 89 c3             	mov    %rax,%rbx
    96e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96eb:	48 89 c7             	mov    %rax,%rdi
    96ee:	e8 7d ff ff ff       	call   9670 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE1_EERT_v>
    96f3:	48 89 18             	mov    %rbx,(%rax)
	      break;
    96f6:	eb 2d                	jmp    9725 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
		  *const_cast<const _Functor*>(_M_get_pointer(__source)));
    96f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96fc:	48 89 c7             	mov    %rax,%rdi
    96ff:	e8 1e ff ff ff       	call   9622 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E14_M_get_pointerERKSt9_Any_data>
    9704:	48 89 c2             	mov    %rax,%rdx
	      _M_init_functor(__dest,
    9707:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    970b:	48 89 d6             	mov    %rdx,%rsi
    970e:	48 89 c7             	mov    %rax,%rdi
    9711:	e8 bf 14 00 00       	call   abd5 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>
	      break;
    9716:	eb 0d                	jmp    9725 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      _M_destroy(__dest, _Local_storage());
    9718:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    971c:	48 89 c7             	mov    %rax,%rdi
    971f:	e8 e2 14 00 00       	call   ac06 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>
	      break;
    9724:	90                   	nop
	  return false;
    9725:	b8 00 00 00 00       	mov    $0x0,%eax
	}
    972a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    972e:	c9                   	leave
    972f:	c3                   	ret

0000000000009730 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    9730:	55                   	push   %rbp
    9731:	48 89 e5             	mov    %rsp,%rbp
    9734:	48 83 ec 10          	sub    $0x10,%rsp
    9738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    973c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    9740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9744:	48 89 c7             	mov    %rax,%rdi
    9747:	e8 ba a3 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    974c:	48 89 c6             	mov    %rax,%rsi
    974f:	bf 01 00 00 00       	mov    $0x1,%edi
    9754:	e8 30 a1 ff ff       	call   3889 <_ZnwmPv>
    9759:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    975d:	48 89 c7             	mov    %rax,%rdi
    9760:	e8 9e e1 ff ff       	call   7903 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS3_E4typeE>
	  }
    9765:	90                   	nop
    9766:	c9                   	leave
    9767:	c3                   	ret

0000000000009768 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source) noexcept
    9768:	55                   	push   %rbp
    9769:	48 89 e5             	mov    %rsp,%rbp
    976c:	48 83 ec 20          	sub    $0x20,%rsp
    9770:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      const _Functor& __f = __source._M_access<_Functor>();
    9774:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9778:	48 89 c7             	mov    %rax,%rdi
    977b:	e8 a2 14 00 00       	call   ac22 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE2_EERKT_v>
    9780:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      return const_cast<_Functor*>(std::__addressof(__f));
    9784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9788:	48 89 c7             	mov    %rax,%rdi
    978b:	e8 ac 14 00 00       	call   ac3c <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE2_EPT_RS4_>
	}
    9790:	c9                   	leave
    9791:	c3                   	ret

0000000000009792 <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE2_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>:
    __invoke_r(_Callable&& __fn, _Args&&... __args)
    9792:	55                   	push   %rbp
    9793:	48 89 e5             	mov    %rsp,%rbp
    9796:	48 83 ec 10          	sub    $0x10,%rsp
    979a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    979e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a2:	48 89 c7             	mov    %rax,%rdi
    97a5:	e8 a0 14 00 00       	call   ac4a <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS4_E4typeE>
    97aa:	48 89 c7             	mov    %rax,%rdi
    97ad:	e8 a6 14 00 00       	call   ac58 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE2_JEET_St14__invoke_otherOT0_DpOT1_>
    }
    97b2:	90                   	nop
    97b3:	c9                   	leave
    97b4:	c3                   	ret
    97b5:	90                   	nop

00000000000097b6 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE2_EERT_v>:
      _M_access() noexcept
    97b6:	55                   	push   %rbp
    97b7:	48 89 e5             	mov    %rsp,%rbp
    97ba:	48 83 ec 10          	sub    $0x10,%rsp
    97be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    97c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c6:	48 89 c7             	mov    %rax,%rdi
    97c9:	e8 38 a3 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    97ce:	c9                   	leave
    97cf:	c3                   	ret

00000000000097d0 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
    97d0:	55                   	push   %rbp
    97d1:	48 89 e5             	mov    %rsp,%rbp
    97d4:	53                   	push   %rbx
    97d5:	48 83 ec 28          	sub    $0x28,%rsp
    97d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    97dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    97e1:	89 55 dc             	mov    %edx,-0x24(%rbp)
	  switch (__op)
    97e4:	8b 45 dc             	mov    -0x24(%rbp),%eax
    97e7:	83 f8 03             	cmp    $0x3,%eax
    97ea:	74 72                	je     985e <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x8e>
    97ec:	83 f8 03             	cmp    $0x3,%eax
    97ef:	7f 7a                	jg     986b <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    97f1:	83 f8 02             	cmp    $0x2,%eax
    97f4:	74 48                	je     983e <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x6e>
    97f6:	83 f8 02             	cmp    $0x2,%eax
    97f9:	7f 70                	jg     986b <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    97fb:	85 c0                	test   %eax,%eax
    97fd:	74 07                	je     9806 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x36>
    97ff:	83 f8 01             	cmp    $0x1,%eax
    9802:	74 1a                	je     981e <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x4e>
    9804:	eb 65                	jmp    986b <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<const type_info*>() = &typeid(_Functor);
    9806:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    980a:	48 89 c7             	mov    %rax,%rdi
    980d:	e8 e0 ed ff ff       	call   85f2 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    9812:	48 8d 15 ff 94 01 00 	lea    0x194ff(%rip),%rdx        # 22d18 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    9819:	48 89 10             	mov    %rdx,(%rax)
	      break;
    981c:	eb 4d                	jmp    986b <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
    981e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9822:	48 89 c7             	mov    %rax,%rdi
    9825:	e8 3e ff ff ff       	call   9768 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E14_M_get_pointerERKSt9_Any_data>
    982a:	48 89 c3             	mov    %rax,%rbx
    982d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9831:	48 89 c7             	mov    %rax,%rdi
    9834:	e8 7d ff ff ff       	call   97b6 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE2_EERT_v>
    9839:	48 89 18             	mov    %rbx,(%rax)
	      break;
    983c:	eb 2d                	jmp    986b <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
		  *const_cast<const _Functor*>(_M_get_pointer(__source)));
    983e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9842:	48 89 c7             	mov    %rax,%rdi
    9845:	e8 1e ff ff ff       	call   9768 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E14_M_get_pointerERKSt9_Any_data>
    984a:	48 89 c2             	mov    %rax,%rdx
	      _M_init_functor(__dest,
    984d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9851:	48 89 d6             	mov    %rdx,%rsi
    9854:	48 89 c7             	mov    %rax,%rdi
    9857:	e8 1f 14 00 00       	call   ac7b <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>
	      break;
    985c:	eb 0d                	jmp    986b <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      _M_destroy(__dest, _Local_storage());
    985e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9862:	48 89 c7             	mov    %rax,%rdi
    9865:	e8 42 14 00 00       	call   acac <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>
	      break;
    986a:	90                   	nop
	  return false;
    986b:	b8 00 00 00 00       	mov    $0x0,%eax
	}
    9870:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9874:	c9                   	leave
    9875:	c3                   	ret

0000000000009876 <_ZSt11__addressofIbEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9876:	55                   	push   %rbp
    9877:	48 89 e5             	mov    %rsp,%rbp
    987a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    987e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9882:	5d                   	pop    %rbp
    9883:	c3                   	ret

0000000000009884 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9884:	55                   	push   %rbp
    9885:	48 89 e5             	mov    %rsp,%rbp
    9888:	48 83 ec 10          	sub    $0x10,%rsp
    988c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9890:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9894:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    989c:	48 89 d6             	mov    %rdx,%rsi
    989f:	48 89 c7             	mov    %rax,%rdi
    98a2:	e8 21 14 00 00       	call   acc8 <_ZNSaISt17reference_wrapperIbEEC1ERKS1_>
    98a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ab:	48 89 c7             	mov    %rax,%rdi
    98ae:	e8 3b 14 00 00       	call   acee <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    98b3:	90                   	nop
    98b4:	c9                   	leave
    98b5:	c3                   	ret

00000000000098b6 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    98b6:	55                   	push   %rbp
    98b7:	48 89 e5             	mov    %rsp,%rbp
    98ba:	48 83 ec 20          	sub    $0x20,%rsp
    98be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    98c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    98ca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    98cf:	74 17                	je     98e8 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    98d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    98d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    98dd:	48 89 ce             	mov    %rcx,%rsi
    98e0:	48 89 c7             	mov    %rax,%rdi
    98e3:	e8 34 14 00 00       	call   ad1c <_ZNSt16allocator_traitsISaISt17reference_wrapperIbEEE10deallocateERS2_PS1_m>
      }
    98e8:	90                   	nop
    98e9:	c9                   	leave
    98ea:	c3                   	ret
    98eb:	90                   	nop

00000000000098ec <_ZNKSt16initializer_listISt17reference_wrapperIbEE4sizeEv>:
      size() const noexcept { return _M_len; }
    98ec:	55                   	push   %rbp
    98ed:	48 89 e5             	mov    %rsp,%rbp
    98f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f8:	48 8b 40 08          	mov    0x8(%rax),%rax
    98fc:	5d                   	pop    %rbp
    98fd:	c3                   	ret

00000000000098fe <_ZSt19__iterator_categoryIPKSt17reference_wrapperIbEENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    98fe:	55                   	push   %rbp
    98ff:	48 89 e5             	mov    %rsp,%rbp
    9902:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9906:	90                   	nop
    9907:	5d                   	pop    %rbp
    9908:	c3                   	ret

0000000000009909 <_ZSt10__distanceIPKSt17reference_wrapperIbEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    9909:	55                   	push   %rbp
    990a:	48 89 e5             	mov    %rsp,%rbp
    990d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9911:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    9915:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9919:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    991d:	48 c1 f8 03          	sar    $0x3,%rax
    }
    9921:	5d                   	pop    %rbp
    9922:	c3                   	ret

0000000000009923 <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9923:	55                   	push   %rbp
    9924:	48 89 e5             	mov    %rsp,%rbp
    9927:	53                   	push   %rbx
    9928:	48 83 ec 28          	sub    $0x28,%rsp
    992c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9930:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9934:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9938:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    993c:	48 89 d6             	mov    %rdx,%rsi
    993f:	48 89 c7             	mov    %rax,%rdi
    9942:	e8 81 13 00 00       	call   acc8 <_ZNSaISt17reference_wrapperIbEEC1ERKS1_>
    9947:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    994b:	48 89 c7             	mov    %rax,%rdi
    994e:	e8 f7 13 00 00       	call   ad4a <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EE11_S_max_sizeERKS2_>
    9953:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9957:	0f 92 c3             	setb   %bl
    995a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    995e:	48 89 c7             	mov    %rax,%rdi
    9961:	e8 34 c6 ff ff       	call   5f9a <_ZNSaISt17reference_wrapperIbEED1Ev>
    9966:	84 db                	test   %bl,%bl
    9968:	74 0f                	je     9979 <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    996a:	48 8d 05 d7 9d 00 00 	lea    0x9dd7(%rip),%rax        # 13748 <_ZN6__pstl9execution2v1L5unseqE+0xdd>
    9971:	48 89 c7             	mov    %rax,%rdi
    9974:	e8 b7 97 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9979:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    997d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9981:	c9                   	leave
    9982:	c3                   	ret
    9983:	90                   	nop

0000000000009984 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    9984:	55                   	push   %rbp
    9985:	48 89 e5             	mov    %rsp,%rbp
    9988:	48 83 ec 10          	sub    $0x10,%rsp
    998c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9990:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    9994:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9999:	74 15                	je     99b0 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE11_M_allocateEm+0x2c>
    999b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    999f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    99a3:	48 89 d6             	mov    %rdx,%rsi
    99a6:	48 89 c7             	mov    %rax,%rdi
    99a9:	e8 de 13 00 00       	call   ad8c <_ZNSt16allocator_traitsISaISt17reference_wrapperIbEEE8allocateERS2_m>
    99ae:	eb 05                	jmp    99b5 <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE11_M_allocateEm+0x31>
    99b0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    99b5:	c9                   	leave
    99b6:	c3                   	ret

00000000000099b7 <_ZSt22__uninitialized_copy_aIPKSt17reference_wrapperIbEPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    99b7:	55                   	push   %rbp
    99b8:	48 89 e5             	mov    %rsp,%rbp
    99bb:	48 83 ec 20          	sub    $0x20,%rsp
    99bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    99c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    99cb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    99cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    99d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    99d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99db:	48 89 ce             	mov    %rcx,%rsi
    99de:	48 89 c7             	mov    %rax,%rdi
    99e1:	e8 d0 13 00 00       	call   adb6 <_ZSt18uninitialized_copyIPKSt17reference_wrapperIbEPS1_ET0_T_S6_S5_>
    }
    99e6:	c9                   	leave
    99e7:	c3                   	ret

00000000000099e8 <_ZSt8_DestroyIPSt17reference_wrapperIbEEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    99e8:	55                   	push   %rbp
    99e9:	48 89 e5             	mov    %rsp,%rbp
    99ec:	48 83 ec 10          	sub    $0x10,%rsp
    99f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    99f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    99fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a00:	48 89 d6             	mov    %rdx,%rsi
    9a03:	48 89 c7             	mov    %rax,%rdi
    9a06:	e8 e0 13 00 00       	call   adeb <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt17reference_wrapperIbEEEvT_S5_>
    }
    9a0b:	90                   	nop
    9a0c:	c9                   	leave
    9a0d:	c3                   	ret

0000000000009a0e <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    9a0e:	55                   	push   %rbp
    9a0f:	48 89 e5             	mov    %rsp,%rbp
    9a12:	53                   	push   %rbx
    9a13:	48 83 ec 18          	sub    $0x18,%rsp
    9a17:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a1b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a23:	48 89 c7             	mov    %rax,%rdi
    9a26:	e8 cf 13 00 00       	call   adfa <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    9a2b:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    9a2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a33:	48 89 c7             	mov    %rax,%rdi
    9a36:	e8 21 e2 ff ff       	call   7c5c <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    9a3b:	48 89 18             	mov    %rbx,(%rax)
    9a3e:	90                   	nop
    9a3f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a43:	c9                   	leave
    9a44:	c3                   	ret

0000000000009a45 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9a45:	55                   	push   %rbp
    9a46:	48 89 e5             	mov    %rsp,%rbp
    9a49:	48 83 ec 10          	sub    $0x10,%rsp
    9a4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a55:	48 89 c7             	mov    %rax,%rdi
    9a58:	e8 b8 13 00 00       	call   ae15 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    9a5d:	c9                   	leave
    9a5e:	c3                   	ret
    9a5f:	90                   	nop

0000000000009a60 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    9a60:	55                   	push   %rbp
    9a61:	48 89 e5             	mov    %rsp,%rbp
    9a64:	48 83 ec 10          	sub    $0x10,%rsp
    9a68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a70:	48 89 c7             	mov    %rax,%rdi
    9a73:	e8 b7 13 00 00       	call   ae2f <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    9a78:	c9                   	leave
    9a79:	c3                   	ret

0000000000009a7a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    9a7a:	55                   	push   %rbp
    9a7b:	48 89 e5             	mov    %rsp,%rbp
    9a7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    9a86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a8a:	48 8b 10             	mov    (%rax),%rdx
    9a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a91:	48 89 10             	mov    %rdx,(%rax)
    9a94:	90                   	nop
    9a95:	5d                   	pop    %rbp
    9a96:	c3                   	ret
    9a97:	90                   	nop

0000000000009a98 <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    9a98:	55                   	push   %rbp
    9a99:	48 89 e5             	mov    %rsp,%rbp
    9a9c:	48 83 ec 10          	sub    $0x10,%rsp
    9aa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa8:	48 89 c7             	mov    %rax,%rdi
    9aab:	e8 99 13 00 00       	call   ae49 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    9ab0:	48 8b 00             	mov    (%rax),%rax
    9ab3:	c9                   	leave
    9ab4:	c3                   	ret

0000000000009ab5 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    9ab5:	55                   	push   %rbp
    9ab6:	48 89 e5             	mov    %rsp,%rbp
    9ab9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9abd:	90                   	nop
    9abe:	5d                   	pop    %rbp
    9abf:	c3                   	ret

0000000000009ac0 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    9ac0:	55                   	push   %rbp
    9ac1:	48 89 e5             	mov    %rsp,%rbp
    9ac4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ac8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    9acc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ad0:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    9ad4:	5d                   	pop    %rbp
    9ad5:	c3                   	ret

0000000000009ad6 <_ZNSt15__new_allocatorISt6threadE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    9ad6:	55                   	push   %rbp
    9ad7:	48 89 e5             	mov    %rsp,%rbp
    9ada:	48 83 ec 20          	sub    $0x20,%rsp
    9ade:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ae2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ae6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    9aea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9aee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9af5:	00 
    9af6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9afa:	48 89 d6             	mov    %rdx,%rsi
    9afd:	48 89 c7             	mov    %rax,%rdi
    9b00:	e8 cb 97 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    9b05:	c9                   	leave
    9b06:	c3                   	ret

0000000000009b07 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    9b07:	55                   	push   %rbp
    9b08:	48 89 e5             	mov    %rsp,%rbp
    9b0b:	48 83 ec 10          	sub    $0x10,%rsp
    9b0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    9b17:	eb 19                	jmp    9b32 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    9b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1d:	48 89 c7             	mov    %rax,%rdi
    9b20:	e8 3e 13 00 00       	call   ae63 <_ZSt11__addressofISt6threadEPT_RS1_>
    9b25:	48 89 c7             	mov    %rax,%rdi
    9b28:	e8 44 13 00 00       	call   ae71 <_ZSt8_DestroyISt6threadEvPT_>
	  for (; __first != __last; ++__first)
    9b2d:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    9b32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b36:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9b3a:	75 dd                	jne    9b19 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_+0x12>
	}
    9b3c:	90                   	nop
    9b3d:	90                   	nop
    9b3e:	c9                   	leave
    9b3f:	c3                   	ret

0000000000009b40 <_ZNSaISt8functionIFvvEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9b40:	55                   	push   %rbp
    9b41:	48 89 e5             	mov    %rsp,%rbp
    9b44:	48 83 ec 10          	sub    $0x10,%rsp
    9b48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b50:	48 89 c7             	mov    %rax,%rdi
    9b53:	e8 34 13 00 00       	call   ae8c <_ZNSt15__new_allocatorISt8functionIFvvEEEC1Ev>
    9b58:	90                   	nop
    9b59:	c9                   	leave
    9b5a:	c3                   	ret
    9b5b:	90                   	nop

0000000000009b5c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_Deque_impl_dataC1Ev>:
	_Deque_impl_data() _GLIBCXX_NOEXCEPT
    9b5c:	55                   	push   %rbp
    9b5d:	48 89 e5             	mov    %rsp,%rbp
    9b60:	48 83 ec 10          	sub    $0x10,%rsp
    9b64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_map(), _M_map_size(), _M_start(), _M_finish()
    9b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b6c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9b73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b77:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9b7e:	00 
    9b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b83:	48 83 c0 10          	add    $0x10,%rax
    9b87:	48 89 c7             	mov    %rax,%rdi
    9b8a:	e8 09 13 00 00       	call   ae98 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>
    9b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b93:	48 83 c0 30          	add    $0x30,%rax
    9b97:	48 89 c7             	mov    %rax,%rdi
    9b9a:	e8 f9 12 00 00       	call   ae98 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>
	{ }
    9b9f:	90                   	nop
    9ba0:	c9                   	leave
    9ba1:	c3                   	ret

0000000000009ba2 <_ZNSt15__new_allocatorISt8functionIFvvEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9ba2:	55                   	push   %rbp
    9ba3:	48 89 e5             	mov    %rsp,%rbp
    9ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9baa:	90                   	nop
    9bab:	5d                   	pop    %rbp
    9bac:	c3                   	ret
    9bad:	90                   	nop

0000000000009bae <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>:
      _M_allocate_map(size_t __n)
    9bae:	55                   	push   %rbp
    9baf:	48 89 e5             	mov    %rsp,%rbp
    9bb2:	53                   	push   %rbx
    9bb3:	48 83 ec 28          	sub    $0x28,%rsp
    9bb7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9bbb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
    9bbf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9bc3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9bc7:	48 89 d6             	mov    %rdx,%rsi
    9bca:	48 89 c7             	mov    %rax,%rdi
    9bcd:	e8 4c 01 00 00       	call   9d1e <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
    9bd2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9bd6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9bda:	48 89 d6             	mov    %rdx,%rsi
    9bdd:	48 89 c7             	mov    %rax,%rdi
    9be0:	e8 ed 12 00 00       	call   aed2 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE8allocateERS4_m>
    9be5:	48 89 c3             	mov    %rax,%rbx
    9be8:	90                   	nop
      }
    9be9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9bed:	48 89 c7             	mov    %rax,%rdi
    9bf0:	e8 5d 01 00 00       	call   9d52 <_ZNSaIPSt8functionIFvvEEED1Ev>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
    9bf5:	48 89 d8             	mov    %rbx,%rax
    9bf8:	eb 1a                	jmp    9c14 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm+0x66>
      }
    9bfa:	48 89 c3             	mov    %rax,%rbx
    9bfd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9c01:	48 89 c7             	mov    %rax,%rdi
    9c04:	e8 49 01 00 00       	call   9d52 <_ZNSaIPSt8functionIFvvEEED1Ev>
    9c09:	48 89 d8             	mov    %rbx,%rax
    9c0c:	48 89 c7             	mov    %rax,%rdi
    9c0f:	e8 bc 98 ff ff       	call   34d0 <_Unwind_Resume@plt>
    9c14:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c18:	c9                   	leave
    9c19:	c3                   	ret

0000000000009c1a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
    9c1a:	55                   	push   %rbp
    9c1b:	48 89 e5             	mov    %rsp,%rbp
    9c1e:	53                   	push   %rbx
    9c1f:	48 83 ec 38          	sub    $0x38,%rsp
    9c23:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9c27:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9c2b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
    9c2f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9c33:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9c37:	eb 18                	jmp    9c51 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x37>
	    *__cur = this->_M_allocate_node();
    9c39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c3d:	48 89 c7             	mov    %rax,%rdi
    9c40:	e8 e3 06 00 00       	call   a328 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    9c45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c49:	48 89 02             	mov    %rax,(%rdx)
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
    9c4c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    9c51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c55:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    9c59:	72 de                	jb     9c39 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x1f>
    }
    9c5b:	eb 37                	jmp    9c94 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x7a>
      __catch(...)
    9c5d:	48 89 c7             	mov    %rax,%rdi
    9c60:	e8 6b 94 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	  _M_destroy_nodes(__nstart, __cur);
    9c65:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c69:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9c6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c71:	48 89 ce             	mov    %rcx,%rsi
    9c74:	48 89 c7             	mov    %rax,%rdi
    9c77:	e8 00 e4 ff ff       	call   807c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  __throw_exception_again;
    9c7c:	e8 8f 97 ff ff       	call   3410 <__cxa_rethrow@plt>
      __catch(...)
    9c81:	48 89 c3             	mov    %rax,%rbx
    9c84:	e8 f7 97 ff ff       	call   3480 <__cxa_end_catch@plt>
    9c89:	48 89 d8             	mov    %rbx,%rax
    9c8c:	48 89 c7             	mov    %rax,%rdi
    9c8f:	e8 3c 98 ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    9c94:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c98:	c9                   	leave
    9c99:	c3                   	ret

0000000000009c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>:
      _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
    9c9a:	55                   	push   %rbp
    9c9b:	48 89 e5             	mov    %rsp,%rbp
    9c9e:	53                   	push   %rbx
    9c9f:	48 83 ec 18          	sub    $0x18,%rsp
    9ca3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9ca7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_node = __new_node;
    9cab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9caf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9cb3:	48 89 50 18          	mov    %rdx,0x18(%rax)
	_M_first = *__new_node;
    9cb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9cbb:	48 8b 10             	mov    (%rax),%rdx
    9cbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cc2:	48 89 50 08          	mov    %rdx,0x8(%rax)
	_M_last = _M_first + difference_type(_S_buffer_size());
    9cc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cca:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9cce:	e8 29 12 00 00       	call   aefc <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>
    9cd3:	48 c1 e0 05          	shl    $0x5,%rax
    9cd7:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    9cdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cdf:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ce3:	90                   	nop
    9ce4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9ce8:	c9                   	leave
    9ce9:	c3                   	ret

0000000000009cea <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>:
      _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
    9cea:	55                   	push   %rbp
    9ceb:	48 89 e5             	mov    %rsp,%rbp
    9cee:	48 83 ec 10          	sub    $0x10,%rsp
    9cf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
    9cfa:	bf 20 00 00 00       	mov    $0x20,%edi
    9cff:	e8 fd 9e ff ff       	call   3c01 <_ZSt16__deque_buf_sizem>
    9d04:	48 89 c2             	mov    %rax,%rdx
    9d07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d0b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9d0f:	48 89 ce             	mov    %rcx,%rsi
    9d12:	48 89 c7             	mov    %rax,%rdi
    9d15:	e8 f2 11 00 00       	call   af0c <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE10deallocateERS3_PS2_m>
      }
    9d1a:	90                   	nop
    9d1b:	c9                   	leave
    9d1c:	c3                   	ret
    9d1d:	90                   	nop

0000000000009d1e <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>:
      _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
    9d1e:	55                   	push   %rbp
    9d1f:	48 89 e5             	mov    %rsp,%rbp
    9d22:	48 83 ec 10          	sub    $0x10,%rsp
    9d26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _Map_alloc_type(_M_get_Tp_allocator()); }
    9d2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d32:	48 89 c7             	mov    %rax,%rdi
    9d35:	e8 00 12 00 00       	call   af3a <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    9d3a:	48 89 c2             	mov    %rax,%rdx
    9d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d41:	48 89 d6             	mov    %rdx,%rsi
    9d44:	48 89 c7             	mov    %rax,%rdi
    9d47:	e8 fc 11 00 00       	call   af48 <_ZNSaIPSt8functionIFvvEEEC1IS1_EERKSaIT_E>
    9d4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d50:	c9                   	leave
    9d51:	c3                   	ret

0000000000009d52 <_ZNSaIPSt8functionIFvvEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9d52:	55                   	push   %rbp
    9d53:	48 89 e5             	mov    %rsp,%rbp
    9d56:	48 83 ec 10          	sub    $0x10,%rsp
    9d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d62:	48 89 c7             	mov    %rax,%rdi
    9d65:	e8 fe 11 00 00       	call   af68 <_ZNSt15__new_allocatorIPSt8functionIFvvEEED1Ev>
    9d6a:	90                   	nop
    9d6b:	c9                   	leave
    9d6c:	c3                   	ret

0000000000009d6d <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE10deallocateERS4_PS3_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9d6d:	55                   	push   %rbp
    9d6e:	48 89 e5             	mov    %rsp,%rbp
    9d71:	48 83 ec 20          	sub    $0x20,%rsp
    9d75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9d81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9d85:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9d89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d8d:	48 89 ce             	mov    %rcx,%rsi
    9d90:	48 89 c7             	mov    %rax,%rdi
    9d93:	e8 dc 11 00 00       	call   af74 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE10deallocateEPS3_m>
    9d98:	90                   	nop
    9d99:	c9                   	leave
    9d9a:	c3                   	ret

0000000000009d9b <_ZNSt5dequeISt8functionIFvvEESaIS2_EE14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
    9d9b:	55                   	push   %rbp
    9d9c:	48 89 e5             	mov    %rsp,%rbp
      { return __deque_buf_size(sizeof(_Tp)); }
    9d9f:	bf 20 00 00 00       	mov    $0x20,%edi
    9da4:	e8 58 9e ff ff       	call   3c01 <_ZSt16__deque_buf_sizem>
    9da9:	5d                   	pop    %rbp
    9daa:	c3                   	ret

0000000000009dab <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9dab:	55                   	push   %rbp
    9dac:	48 89 e5             	mov    %rsp,%rbp
    9daf:	48 83 ec 20          	sub    $0x20,%rsp
    9db3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9db7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dbb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9dbf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9dc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc7:	48 89 d6             	mov    %rdx,%rsi
    9dca:	48 89 c7             	mov    %rax,%rdi
    9dcd:	e8 d3 11 00 00       	call   afa5 <_ZSt8_DestroyIPSt8functionIFvvEEEvT_S4_>
    }
    9dd2:	90                   	nop
    9dd3:	c9                   	leave
    9dd4:	c3                   	ret
    9dd5:	90                   	nop

0000000000009dd6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    9dd6:	55                   	push   %rbp
    9dd7:	48 89 e5             	mov    %rsp,%rbp
    9dda:	53                   	push   %rbx
    9ddb:	48 83 ec 18          	sub    $0x18,%rsp
    9ddf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9de3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    9de7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9deb:	48 89 c7             	mov    %rax,%rdi
    9dee:	e8 31 ed ff ff       	call   8b24 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    9df3:	48 89 c3             	mov    %rax,%rbx
    9df6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9dfa:	48 89 c7             	mov    %rax,%rdi
    9dfd:	e8 ca 11 00 00       	call   afcc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    9e02:	48 89 de             	mov    %rbx,%rsi
    9e05:	48 89 c7             	mov    %rax,%rdi
    9e08:	e8 cd 11 00 00       	call   afda <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE7destroyIS5_EEvRS7_PT_>
      }
    9e0d:	90                   	nop
    9e0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9e12:	c9                   	leave
    9e13:	c3                   	ret

0000000000009e14 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    9e14:	55                   	push   %rbp
    9e15:	48 89 e5             	mov    %rsp,%rbp
    9e18:	48 83 ec 10          	sub    $0x10,%rsp
    9e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    9e24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e28:	48 89 c7             	mov    %rax,%rdi
    9e2b:	e8 9c 11 00 00       	call   afcc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    9e30:	48 89 c1             	mov    %rax,%rcx
    9e33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e37:	ba 01 00 00 00       	mov    $0x1,%edx
    9e3c:	48 89 c6             	mov    %rax,%rsi
    9e3f:	48 89 cf             	mov    %rcx,%rdi
    9e42:	e8 b9 11 00 00       	call   b000 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE10deallocateERS7_PS6_m>
    9e47:	90                   	nop
    9e48:	c9                   	leave
    9e49:	c3                   	ret

0000000000009e4a <_ZNSt6vectorISt6threadSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9e4a:	55                   	push   %rbp
    9e4b:	48 89 e5             	mov    %rsp,%rbp
    9e4e:	48 83 ec 20          	sub    $0x20,%rsp
    9e52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9e56:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9e5d:	ff ff 0f 
    9e60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9e64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e68:	48 89 c7             	mov    %rax,%rdi
    9e6b:	e8 be 11 00 00       	call   b02e <_ZNSt16allocator_traitsISaISt6threadEE8max_sizeERKS1_>
    9e70:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9e74:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9e78:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9e7c:	48 89 d6             	mov    %rdx,%rsi
    9e7f:	48 89 c7             	mov    %rax,%rdi
    9e82:	e8 ed 9c ff ff       	call   3b74 <_ZSt3minImERKT_S2_S2_>
    9e87:	48 8b 00             	mov    (%rax),%rax
      }
    9e8a:	c9                   	leave
    9e8b:	c3                   	ret

0000000000009e8c <_ZNKSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    9e8c:	55                   	push   %rbp
    9e8d:	48 89 e5             	mov    %rsp,%rbp
    9e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e98:	5d                   	pop    %rbp
    9e99:	c3                   	ret

0000000000009e9a <_ZSt25__uninitialized_default_nIPSt6threadmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    9e9a:	55                   	push   %rbp
    9e9b:	48 89 e5             	mov    %rsp,%rbp
    9e9e:	48 83 ec 20          	sub    $0x20,%rsp
    9ea2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9ea6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    9eaa:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    9eae:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9eb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9eb6:	48 89 d6             	mov    %rdx,%rsi
    9eb9:	48 89 c7             	mov    %rax,%rdi
    9ebc:	e8 87 11 00 00       	call   b048 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_>
    }
    9ec1:	c9                   	leave
    9ec2:	c3                   	ret

0000000000009ec3 <_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    9ec3:	55                   	push   %rbp
    9ec4:	48 89 e5             	mov    %rsp,%rbp
    9ec7:	48 83 ec 10          	sub    $0x10,%rsp
    9ecb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ecf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    9ed3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9ed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9edb:	ba 00 00 00 00       	mov    $0x0,%edx
    9ee0:	48 89 ce             	mov    %rcx,%rsi
    9ee3:	48 89 c7             	mov    %rax,%rdi
    9ee6:	e8 a3 11 00 00       	call   b08e <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv>
    9eeb:	c9                   	leave
    9eec:	c3                   	ret

0000000000009eed <_ZSt12__relocate_aIPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    9eed:	55                   	push   %rbp
    9eee:	48 89 e5             	mov    %rsp,%rbp
    9ef1:	41 54                	push   %r12
    9ef3:	53                   	push   %rbx
    9ef4:	48 83 ec 20          	sub    $0x20,%rsp
    9ef8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9efc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9f00:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9f04:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    9f08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f0c:	48 89 c7             	mov    %rax,%rdi
    9f0f:	e8 db 11 00 00       	call   b0ef <_ZSt12__niter_baseIPSt6threadET_S2_>
    9f14:	49 89 c4             	mov    %rax,%r12
    9f17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9f1b:	48 89 c7             	mov    %rax,%rdi
    9f1e:	e8 cc 11 00 00       	call   b0ef <_ZSt12__niter_baseIPSt6threadET_S2_>
    9f23:	48 89 c3             	mov    %rax,%rbx
    9f26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f2a:	48 89 c7             	mov    %rax,%rdi
    9f2d:	e8 bd 11 00 00       	call   b0ef <_ZSt12__niter_baseIPSt6threadET_S2_>
    9f32:	48 89 c7             	mov    %rax,%rdi
    9f35:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9f39:	48 89 c1             	mov    %rax,%rcx
    9f3c:	4c 89 e2             	mov    %r12,%rdx
    9f3f:	48 89 de             	mov    %rbx,%rsi
    9f42:	e8 b6 11 00 00       	call   b0fd <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    9f47:	48 83 c4 20          	add    $0x20,%rsp
    9f4b:	5b                   	pop    %rbx
    9f4c:	41 5c                	pop    %r12
    9f4e:	5d                   	pop    %rbp
    9f4f:	c3                   	ret

0000000000009f50 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_JS2_EvEEOT_DpOT0_>:
	_Tuple_impl(_UHead&& __head, _UTail&&... __tail)
    9f50:	55                   	push   %rbp
    9f51:	48 89 e5             	mov    %rsp,%rbp
    9f54:	53                   	push   %rbx
    9f55:	48 83 ec 38          	sub    $0x38,%rsp
    9f59:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9f5d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9f61:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  _Base(std::forward<_UHead>(__head))
    9f65:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    9f69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9f6d:	48 89 c7             	mov    %rax,%rdi
    9f70:	e8 75 c9 ff ff       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    9f75:	48 89 c6             	mov    %rax,%rsi
    9f78:	48 89 df             	mov    %rbx,%rdi
    9f7b:	e8 ee 11 00 00       	call   b16e <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEEC1IS2_EEOT_>
    9f80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f84:	48 8d 58 08          	lea    0x8(%rax),%rbx
    9f88:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9f8c:	48 89 c7             	mov    %rax,%rdi
    9f8f:	e8 48 c9 ff ff       	call   68dc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    9f94:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9f98:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    9f9c:	48 89 c6             	mov    %rax,%rsi
    9f9f:	48 89 df             	mov    %rbx,%rdi
    9fa2:	e8 fb 11 00 00       	call   b1a2 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EEC1ERKS4_>
	{ }
    9fa7:	90                   	nop
    9fa8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9fac:	c9                   	leave
    9fad:	c3                   	ret

0000000000009fae <_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    9fae:	55                   	push   %rbp
    9faf:	48 89 e5             	mov    %rsp,%rbp
    9fb2:	48 83 ec 10          	sub    $0x10,%rsp
    9fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    9fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fbe:	48 89 c7             	mov    %rax,%rdi
    9fc1:	e8 fa 11 00 00       	call   b1c0 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC1Ev>
    9fc6:	90                   	nop
    9fc7:	c9                   	leave
    9fc8:	c3                   	ret

0000000000009fc9 <_ZSt3getILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9fc9:	55                   	push   %rbp
    9fca:	48 89 e5             	mov    %rsp,%rbp
    9fcd:	48 83 ec 10          	sub    $0x10,%rsp
    9fd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd9:	48 89 c7             	mov    %rax,%rdi
    9fdc:	e8 06 12 00 00       	call   b1e7 <_ZSt12__get_helperILm0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    9fe1:	c9                   	leave
    9fe2:	c3                   	ret
    9fe3:	90                   	nop

0000000000009fe4 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    9fe4:	55                   	push   %rbp
    9fe5:	48 89 e5             	mov    %rsp,%rbp
    9fe8:	48 83 ec 10          	sub    $0x10,%rsp
    9fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ff4:	48 89 c7             	mov    %rax,%rdi
    9ff7:	e8 05 12 00 00       	call   b201 <_ZSt3getILm1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    9ffc:	c9                   	leave
    9ffd:	c3                   	ret

0000000000009ffe <_ZNKSt9_Any_data9_M_accessIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EERKT_v>:
      _M_access() const noexcept
    9ffe:	55                   	push   %rbp
    9fff:	48 89 e5             	mov    %rsp,%rbp
    a002:	48 83 ec 10          	sub    $0x10,%rsp
    a006:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<const _Tp*>(_M_access()); }
    a00a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a00e:	48 89 c7             	mov    %rax,%rdi
    a011:	e8 fe 9a ff ff       	call   3b14 <_ZNKSt9_Any_data9_M_accessEv>
    a016:	c9                   	leave
    a017:	c3                   	ret

000000000000a018 <_ZSt11__addressofIKZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EPT_RSA_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    a018:	55                   	push   %rbp
    a019:	48 89 e5             	mov    %rsp,%rbp
    a01c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    a020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a024:	5d                   	pop    %rbp
    a025:	c3                   	ret

000000000000a026 <_ZSt7forwardIRZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a026:	55                   	push   %rbp
    a027:	48 89 e5             	mov    %rsp,%rbp
    a02a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a02e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a032:	5d                   	pop    %rbp
    a033:	c3                   	ret

000000000000a034 <_ZSt13__invoke_implIvRZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    a034:	55                   	push   %rbp
    a035:	48 89 e5             	mov    %rsp,%rbp
    a038:	48 83 ec 10          	sub    $0x10,%rsp
    a03c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    a040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a044:	48 89 c7             	mov    %rax,%rdi
    a047:	e8 da ff ff ff       	call   a026 <_ZSt7forwardIRZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceISA_E4typeE>
    a04c:	48 89 c7             	mov    %rax,%rdi
    a04f:	e8 b0 a0 ff ff       	call   4104 <_ZZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbENKUlvE_clEv>
    a054:	90                   	nop
    a055:	c9                   	leave
    a056:	c3                   	ret

000000000000a057 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E15_M_init_functorIRKS9_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    a057:	55                   	push   %rbp
    a058:	48 89 e5             	mov    %rsp,%rbp
    a05b:	48 83 ec 10          	sub    $0x10,%rsp
    a05f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a063:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    a067:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a06b:	48 89 c7             	mov    %rax,%rdi
    a06e:	e8 a8 11 00 00       	call   b21b <_ZSt7forwardIRKZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceISB_E4typeE>
    a073:	48 89 c2             	mov    %rax,%rdx
    a076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a07a:	48 89 d6             	mov    %rdx,%rsi
    a07d:	48 89 c7             	mov    %rax,%rdi
    a080:	e8 a4 11 00 00       	call   b229 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E9_M_createIRKS9_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    a085:	90                   	nop
    a086:	c9                   	leave
    a087:	c3                   	ret

000000000000a088 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>:
	_M_destroy(_Any_data& __victim, true_type)
    a088:	55                   	push   %rbp
    a089:	48 89 e5             	mov    %rsp,%rbp
    a08c:	48 83 ec 10          	sub    $0x10,%rsp
    a090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  __victim._M_access<_Functor>().~_Functor();
    a094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a098:	48 89 c7             	mov    %rax,%rdi
    a09b:	e8 d8 11 00 00       	call   b278 <_ZNSt9_Any_data9_M_accessIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EERT_v>
	}
    a0a0:	90                   	nop
    a0a1:	c9                   	leave
    a0a2:	c3                   	ret

000000000000a0a3 <_ZSt7forwardISt8functionIFvvEEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a0a3:	55                   	push   %rbp
    a0a4:	48 89 e5             	mov    %rsp,%rbp
    a0a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a0ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0af:	5d                   	pop    %rbp
    a0b0:	c3                   	ret

000000000000a0b1 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    a0b1:	55                   	push   %rbp
    a0b2:	48 89 e5             	mov    %rsp,%rbp
    a0b5:	48 83 ec 20          	sub    $0x20,%rsp
    a0b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    a0c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0c9:	48 89 c7             	mov    %rax,%rdi
    a0cc:	e8 d2 ff ff ff       	call   a0a3 <_ZSt7forwardISt8functionIFvvEEEOT_RNSt16remove_referenceIS3_E4typeE>
    a0d1:	48 89 c2             	mov    %rax,%rdx
    a0d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a0d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0dc:	48 89 ce             	mov    %rcx,%rsi
    a0df:	48 89 c7             	mov    %rax,%rdi
    a0e2:	e8 ab 11 00 00       	call   b292 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JS2_EEEvPT_DpOT0_>
	}
    a0e7:	90                   	nop
    a0e8:	c9                   	leave
    a0e9:	c3                   	ret

000000000000a0ea <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_>:
      deque<_Tp, _Alloc>::
    a0ea:	55                   	push   %rbp
    a0eb:	48 89 e5             	mov    %rsp,%rbp
    a0ee:	53                   	push   %rbx
    a0ef:	48 83 ec 18          	sub    $0x18,%rsp
    a0f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a0f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size() == max_size())
    a0fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0ff:	48 89 c7             	mov    %rax,%rdi
    a102:	e8 73 01 00 00       	call   a27a <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>
    a107:	48 89 c3             	mov    %rax,%rbx
    a10a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a10e:	48 89 c7             	mov    %rax,%rdi
    a111:	e8 8e 01 00 00       	call   a2a4 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>
    a116:	48 39 c3             	cmp    %rax,%rbx
    a119:	0f 94 c0             	sete   %al
    a11c:	84 c0                	test   %al,%al
    a11e:	74 0f                	je     a12f <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_+0x45>
	  __throw_length_error(
    a120:	48 8d 05 f1 95 00 00 	lea    0x95f1(%rip),%rax        # 13718 <_ZN6__pstl9execution2v1L5unseqE+0xad>
    a127:	48 89 c7             	mov    %rax,%rdi
    a12a:	e8 01 90 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	_M_reserve_map_at_back();
    a12f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a133:	be 01 00 00 00       	mov    $0x1,%esi
    a138:	48 89 c7             	mov    %rax,%rdi
    a13b:	e8 86 01 00 00       	call   a2c6 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>
	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
    a140:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a144:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a148:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    a14c:	48 8d 5a 08          	lea    0x8(%rdx),%rbx
    a150:	48 89 c7             	mov    %rax,%rdi
    a153:	e8 d0 01 00 00       	call   a328 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    a158:	48 89 03             	mov    %rax,(%rbx)
	    _Alloc_traits::construct(this->_M_impl,
    a15b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a15f:	48 89 c7             	mov    %rax,%rdi
    a162:	e8 3c ff ff ff       	call   a0a3 <_ZSt7forwardISt8functionIFvvEEEOT_RNSt16remove_referenceIS3_E4typeE>
    a167:	48 89 c2             	mov    %rax,%rdx
    a16a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a16e:	48 8b 48 30          	mov    0x30(%rax),%rcx
    a172:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a176:	48 89 ce             	mov    %rcx,%rsi
    a179:	48 89 c7             	mov    %rax,%rdi
    a17c:	e8 30 ff ff ff       	call   a0b1 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_>
	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
    a181:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a185:	48 83 c0 30          	add    $0x30,%rax
    a189:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a18d:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    a191:	48 83 c2 08          	add    $0x8,%rdx
    a195:	48 89 d6             	mov    %rdx,%rsi
    a198:	48 89 c7             	mov    %rax,%rdi
    a19b:	e8 fa fa ff ff       	call   9c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
    a1a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1a4:	48 8b 50 38          	mov    0x38(%rax),%rdx
    a1a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1ac:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    a1b0:	90                   	nop
    a1b1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a1b5:	c9                   	leave
    a1b6:	c3                   	ret
    a1b7:	90                   	nop

000000000000a1b8 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    a1b8:	55                   	push   %rbp
    a1b9:	48 89 e5             	mov    %rsp,%rbp
    a1bc:	48 83 ec 30          	sub    $0x30,%rsp
    a1c0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	iterator __tmp = end();
    a1c4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a1c8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a1cc:	48 89 d6             	mov    %rdx,%rsi
    a1cf:	48 89 c7             	mov    %rax,%rdi
    a1d2:	e8 27 c3 ff ff       	call   64fe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>
	--__tmp;
    a1d7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a1db:	48 89 c7             	mov    %rax,%rdi
    a1de:	e8 f7 10 00 00       	call   b2da <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EmmEv>
	return *__tmp;
    a1e3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a1e7:	48 89 c7             	mov    %rax,%rdi
    a1ea:	e8 d5 e6 ff ff       	call   88c4 <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>
      }
    a1ef:	c9                   	leave
    a1f0:	c3                   	ret

000000000000a1f1 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a1f1:	55                   	push   %rbp
    a1f2:	48 89 e5             	mov    %rsp,%rbp
    a1f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a1f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1fd:	5d                   	pop    %rbp
    a1fe:	c3                   	ret
    a1ff:	90                   	nop

000000000000a200 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    a200:	55                   	push   %rbp
    a201:	48 89 e5             	mov    %rsp,%rbp
    a204:	41 56                	push   %r14
    a206:	41 55                	push   %r13
    a208:	41 54                	push   %r12
    a20a:	53                   	push   %rbx
    a20b:	48 83 ec 20          	sub    $0x20,%rsp
    a20f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a213:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a217:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    a21b:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    a21f:	48 89 de             	mov    %rbx,%rsi
    a222:	bf 20 00 00 00       	mov    $0x20,%edi
    a227:	e8 5d 96 ff ff       	call   3889 <_ZnwmPv>
    a22c:	49 89 c4             	mov    %rax,%r12
    a22f:	41 be 01 00 00 00    	mov    $0x1,%r14d
    a235:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a239:	48 89 c7             	mov    %rax,%rdi
    a23c:	e8 b0 ff ff ff       	call   a1f1 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    a241:	48 89 c6             	mov    %rax,%rsi
    a244:	4c 89 e7             	mov    %r12,%rdi
    a247:	e8 82 ca ff ff       	call   6cce <_ZNSt8functionIFvvEEC1ERKS1_>
    a24c:	eb 1e                	jmp    a26c <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_+0x6c>
    a24e:	49 89 c5             	mov    %rax,%r13
    a251:	45 84 f6             	test   %r14b,%r14b
    a254:	74 0b                	je     a261 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_+0x61>
    a256:	48 89 de             	mov    %rbx,%rsi
    a259:	4c 89 e7             	mov    %r12,%rdi
    a25c:	e8 3a 96 ff ff       	call   389b <_ZdlPvS_>
    a261:	4c 89 e8             	mov    %r13,%rax
    a264:	48 89 c7             	mov    %rax,%rdi
    a267:	e8 64 92 ff ff       	call   34d0 <_Unwind_Resume@plt>
    a26c:	48 83 c4 20          	add    $0x20,%rsp
    a270:	5b                   	pop    %rbx
    a271:	41 5c                	pop    %r12
    a273:	41 5d                	pop    %r13
    a275:	41 5e                	pop    %r14
    a277:	5d                   	pop    %rbp
    a278:	c3                   	ret
    a279:	90                   	nop

000000000000a27a <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    a27a:	55                   	push   %rbp
    a27b:	48 89 e5             	mov    %rsp,%rbp
    a27e:	48 83 ec 10          	sub    $0x10,%rsp
    a282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_finish - this->_M_impl._M_start; }
    a286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a28a:	48 8d 50 10          	lea    0x10(%rax),%rdx
    a28e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a292:	48 83 c0 30          	add    $0x30,%rax
    a296:	48 89 d6             	mov    %rdx,%rsi
    a299:	48 89 c7             	mov    %rax,%rdi
    a29c:	e8 9b 10 00 00       	call   b33c <_ZStmiRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>
    a2a1:	c9                   	leave
    a2a2:	c3                   	ret
    a2a3:	90                   	nop

000000000000a2a4 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    a2a4:	55                   	push   %rbp
    a2a5:	48 89 e5             	mov    %rsp,%rbp
    a2a8:	48 83 ec 10          	sub    $0x10,%rsp
    a2ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    a2b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2b4:	48 89 c7             	mov    %rax,%rdi
    a2b7:	e8 7e 0c 00 00       	call   af3a <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    a2bc:	48 89 c7             	mov    %rax,%rdi
    a2bf:	e8 00 11 00 00       	call   b3c4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE11_S_max_sizeERKS3_>
    a2c4:	c9                   	leave
    a2c5:	c3                   	ret

000000000000a2c6 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>:
       *  Makes sure the _M_map has space for new nodes.  Does not
       *  actually add the nodes.  Can invalidate _M_map pointers.
       *  (And consequently, %deque iterators.)
       */
      void
      _M_reserve_map_at_back(size_type __nodes_to_add = 1)
    a2c6:	55                   	push   %rbp
    a2c7:	48 89 e5             	mov    %rsp,%rbp
    a2ca:	48 83 ec 10          	sub    $0x10,%rsp
    a2ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
    a2d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a2da:	48 8d 50 01          	lea    0x1(%rax),%rdx
    a2de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2e2:	48 8b 48 08          	mov    0x8(%rax),%rcx
	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
    a2e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ea:	48 8b 70 48          	mov    0x48(%rax),%rsi
    a2ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2f2:	48 8b 00             	mov    (%rax),%rax
    a2f5:	48 29 c6             	sub    %rax,%rsi
    a2f8:	48 89 f0             	mov    %rsi,%rax
    a2fb:	48 c1 f8 03          	sar    $0x3,%rax
    a2ff:	48 89 c6             	mov    %rax,%rsi
    a302:	48 89 c8             	mov    %rcx,%rax
    a305:	48 29 f0             	sub    %rsi,%rax
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
    a308:	48 39 d0             	cmp    %rdx,%rax
    a30b:	73 18                	jae    a325 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm+0x5f>
	  _M_reallocate_map(__nodes_to_add, false);
    a30d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a315:	ba 00 00 00 00       	mov    $0x0,%edx
    a31a:	48 89 ce             	mov    %rcx,%rsi
    a31d:	48 89 c7             	mov    %rax,%rdi
    a320:	e8 e1 10 00 00       	call   b406 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb>
      }
    a325:	90                   	nop
    a326:	c9                   	leave
    a327:	c3                   	ret

000000000000a328 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>:
      _M_allocate_node()
    a328:	55                   	push   %rbp
    a329:	48 89 e5             	mov    %rsp,%rbp
    a32c:	48 83 ec 10          	sub    $0x10,%rsp
    a330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
    a334:	bf 20 00 00 00       	mov    $0x20,%edi
    a339:	e8 c3 98 ff ff       	call   3c01 <_ZSt16__deque_buf_sizem>
    a33e:	48 89 c2             	mov    %rax,%rdx
    a341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a345:	48 89 d6             	mov    %rdx,%rsi
    a348:	48 89 c7             	mov    %rax,%rdi
    a34b:	e8 d5 12 00 00       	call   b625 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8allocateERS3_m>
      }
    a350:	c9                   	leave
    a351:	c3                   	ret

000000000000a352 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    a352:	55                   	push   %rbp
    a353:	48 89 e5             	mov    %rsp,%rbp
    a356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a35a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a35e:	5d                   	pop    %rbp
    a35f:	c3                   	ret

000000000000a360 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
    a360:	55                   	push   %rbp
    a361:	48 89 e5             	mov    %rsp,%rbp
    a364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a36c:	5d                   	pop    %rbp
    a36d:	c3                   	ret

000000000000a36e <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
    a36e:	55                   	push   %rbp
    a36f:	48 89 e5             	mov    %rsp,%rbp
    a372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a37a:	5d                   	pop    %rbp
    a37b:	c3                   	ret

000000000000a37c <_ZNSt15__new_allocatorISt8functionIFvvEEE7destroyIS2_EEvPT_>:

      template<typename _Up>
	void
	destroy(_Up* __p)
    a37c:	55                   	push   %rbp
    a37d:	48 89 e5             	mov    %rsp,%rbp
    a380:	48 83 ec 10          	sub    $0x10,%rsp
    a384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a388:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	noexcept(std::is_nothrow_destructible<_Up>::value)
	{ __p->~_Up(); }
    a38c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a390:	48 89 c7             	mov    %rax,%rdi
    a393:	e8 96 9d ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    a398:	90                   	nop
    a399:	c9                   	leave
    a39a:	c3                   	ret
    a39b:	90                   	nop

000000000000a39c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    a39c:	55                   	push   %rbp
    a39d:	48 89 e5             	mov    %rsp,%rbp
    a3a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    a3a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3a8:	48 83 c0 08          	add    $0x8,%rax
    a3ac:	5d                   	pop    %rbp
    a3ad:	c3                   	ret

000000000000a3ae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    a3ae:	55                   	push   %rbp
    a3af:	48 89 e5             	mov    %rsp,%rbp
    a3b2:	53                   	push   %rbx
    a3b3:	48 83 ec 38          	sub    $0x38,%rsp
    a3b7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a3bb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a3bf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a3c3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    a3c7:	eb 56                	jmp    a41f <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    a3c9:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    a3cd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a3d1:	48 89 c7             	mov    %rax,%rdi
    a3d4:	e8 e7 03 00 00       	call   a7c0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    a3d9:	48 89 c1             	mov    %rax,%rcx
    a3dc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a3e0:	48 89 c2             	mov    %rax,%rdx
    a3e3:	48 89 ce             	mov    %rcx,%rsi
    a3e6:	48 89 df             	mov    %rbx,%rdi
    a3e9:	e8 f0 ca ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    a3ee:	83 f0 01             	xor    $0x1,%eax
    a3f1:	84 c0                	test   %al,%al
    a3f3:	74 1a                	je     a40f <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x61>
	  __y = __x, __x = _S_left(__x);
    a3f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a3f9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    a3fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a401:	48 89 c7             	mov    %rax,%rdi
    a404:	e8 82 de ff ff       	call   828b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    a409:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    a40d:	eb 10                	jmp    a41f <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x71>
	  __x = _S_right(__x);
    a40f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a413:	48 89 c7             	mov    %rax,%rdi
    a416:	e8 5e de ff ff       	call   8279 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    a41b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    a41f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    a424:	75 a3                	jne    a3c9 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x1b>
      return iterator(__y);
    a426:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a42a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    a42e:	48 89 d6             	mov    %rdx,%rsi
    a431:	48 89 c7             	mov    %rax,%rdi
    a434:	e8 e9 ec ff ff       	call   9122 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    a439:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    a43d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a441:	c9                   	leave
    a442:	c3                   	ret
    a443:	90                   	nop

000000000000a444 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    a444:	55                   	push   %rbp
    a445:	48 89 e5             	mov    %rsp,%rbp
    a448:	48 83 ec 10          	sub    $0x10,%rsp
    a44c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    a450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a454:	48 89 c7             	mov    %rax,%rdi
    a457:	e8 f4 11 00 00       	call   b650 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>
    a45c:	c9                   	leave
    a45d:	c3                   	ret

000000000000a45e <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1IS1_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    a45e:	55                   	push   %rbp
    a45f:	48 89 e5             	mov    %rsp,%rbp
    a462:	53                   	push   %rbx
    a463:	48 83 ec 18          	sub    $0x18,%rsp
    a467:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a46b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    a46f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a473:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a477:	48 89 c7             	mov    %rax,%rdi
    a47a:	e8 c3 e6 ff ff       	call   8b42 <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    a47f:	48 89 c6             	mov    %rax,%rsi
    a482:	48 89 df             	mov    %rbx,%rdi
    a485:	e8 d4 11 00 00       	call   b65e <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EEC1IS1_EEOT_>
	{ }
    a48a:	90                   	nop
    a48b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a48f:	c9                   	leave
    a490:	c3                   	ret
    a491:	90                   	nop

000000000000a492 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEPSt13_Rb_tree_nodeIS4_EDpOT_>:
	_M_create_node(_Args&&... __args)
    a492:	55                   	push   %rbp
    a493:	48 89 e5             	mov    %rsp,%rbp
    a496:	41 54                	push   %r12
    a498:	53                   	push   %rbx
    a499:	48 83 ec 30          	sub    $0x30,%rsp
    a49d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a4a1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a4a5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a4a9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    a4ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4b1:	48 89 c7             	mov    %rax,%rdi
    a4b4:	e8 cb 11 00 00       	call   b684 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_get_nodeEv>
    a4b9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    a4bd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a4c1:	48 89 c7             	mov    %rax,%rdi
    a4c4:	e8 d6 e6 ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    a4c9:	49 89 c4             	mov    %rax,%r12
    a4cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a4d0:	48 89 c7             	mov    %rax,%rdi
    a4d3:	e8 b9 e6 ff ff       	call   8b91 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    a4d8:	48 89 c3             	mov    %rax,%rbx
    a4db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a4df:	48 89 c7             	mov    %rax,%rdi
    a4e2:	e8 9c e6 ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    a4e7:	48 89 c2             	mov    %rax,%rdx
    a4ea:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    a4ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4f2:	4d 89 e0             	mov    %r12,%r8
    a4f5:	48 89 d9             	mov    %rbx,%rcx
    a4f8:	48 89 c7             	mov    %rax,%rdi
    a4fb:	e8 ac 11 00 00       	call   b6ac <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_>
	  return __tmp;
    a500:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    a504:	48 83 c4 30          	add    $0x30,%rsp
    a508:	5b                   	pop    %rbx
    a509:	41 5c                	pop    %r12
    a50b:	5d                   	pop    %rbp
    a50c:	c3                   	ret
    a50d:	90                   	nop

000000000000a50e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    a50e:	55                   	push   %rbp
    a50f:	48 89 e5             	mov    %rsp,%rbp
    a512:	48 83 ec 20          	sub    $0x20,%rsp
    a516:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    a51a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a51e:	48 8b 10             	mov    (%rax),%rdx
    a521:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a525:	48 89 d6             	mov    %rdx,%rsi
    a528:	48 89 c7             	mov    %rax,%rdi
    a52b:	e8 f2 eb ff ff       	call   9122 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    a530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a534:	c9                   	leave
    a535:	c3                   	ret

000000000000a536 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    a536:	55                   	push   %rbp
    a537:	48 89 e5             	mov    %rsp,%rbp
    a53a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    a53e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a542:	48 8b 40 28          	mov    0x28(%rax),%rax
    a546:	5d                   	pop    %rbp
    a547:	c3                   	ret

000000000000a548 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    a548:	55                   	push   %rbp
    a549:	48 89 e5             	mov    %rsp,%rbp
    a54c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    a550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a554:	48 83 c0 20          	add    $0x20,%rax
    a558:	5d                   	pop    %rbp
    a559:	c3                   	ret

000000000000a55a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    a55a:	55                   	push   %rbp
    a55b:	48 89 e5             	mov    %rsp,%rbp
    a55e:	48 83 ec 10          	sub    $0x10,%rsp
    a562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    a566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a56a:	48 89 c7             	mov    %rax,%rdi
    a56d:	e8 4e 02 00 00       	call   a7c0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    a572:	c9                   	leave
    a573:	c3                   	ret

000000000000a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
	       enable_if<_PCCP::template
			   _ConstructiblePair<_U1, _U2>()
	                 && _PCCP::template
			   _ImplicitlyConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
      constexpr pair(const _T1& __a, const _T2& __b)
    a574:	55                   	push   %rbp
    a575:	48 89 e5             	mov    %rsp,%rbp
    a578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a57c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a580:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    a584:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a588:	48 8b 10             	mov    (%rax),%rdx
    a58b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a58f:	48 89 10             	mov    %rdx,(%rax)
    a592:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a596:	48 8b 10             	mov    (%rax),%rdx
    a599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a59d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a5a1:	90                   	nop
    a5a2:	5d                   	pop    %rbp
    a5a3:	c3                   	ret

000000000000a5a4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    a5a4:	55                   	push   %rbp
    a5a5:	48 89 e5             	mov    %rsp,%rbp
    a5a8:	53                   	push   %rbx
    a5a9:	48 83 ec 78          	sub    $0x78,%rsp
    a5ad:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    a5b1:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    a5b5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a5b9:	48 89 c7             	mov    %rax,%rdi
    a5bc:	e8 6b c0 ff ff       	call   662c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    a5c1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    a5c5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a5c9:	48 89 c7             	mov    %rax,%rdi
    a5cc:	e8 cb fd ff ff       	call   a39c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    a5d1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    a5d5:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    a5d9:	eb 51                	jmp    a62c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x88>
	  __y = __x;
    a5db:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a5df:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    a5e3:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    a5e7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a5eb:	48 89 c7             	mov    %rax,%rdi
    a5ee:	e8 cd 01 00 00       	call   a7c0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    a5f3:	48 89 c2             	mov    %rax,%rdx
    a5f6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a5fa:	48 89 c6             	mov    %rax,%rsi
    a5fd:	48 89 df             	mov    %rbx,%rdi
    a600:	e8 d9 c8 ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    a605:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    a608:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    a60c:	74 0e                	je     a61c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x78>
    a60e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a612:	48 89 c7             	mov    %rax,%rdi
    a615:	e8 71 dc ff ff       	call   828b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    a61a:	eb 0c                	jmp    a628 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x84>
    a61c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a620:	48 89 c7             	mov    %rax,%rdi
    a623:	e8 51 dc ff ff       	call   8279 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    a628:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    a62c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a630:	48 85 c0             	test   %rax,%rax
    a633:	75 a6                	jne    a5db <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x37>
      iterator __j = iterator(__y);
    a635:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    a639:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    a63d:	48 89 d6             	mov    %rdx,%rsi
    a640:	48 89 c7             	mov    %rax,%rdi
    a643:	e8 da ea ff ff       	call   9122 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    a648:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    a64c:	74 54                	je     a6a2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0xfe>
	  if (__j == begin())
    a64e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a652:	48 89 c7             	mov    %rax,%rdi
    a655:	e8 24 11 00 00       	call   b77e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE5beginEv>
    a65a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    a65e:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    a662:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    a666:	48 89 d6             	mov    %rdx,%rsi
    a669:	48 89 c7             	mov    %rax,%rdi
    a66c:	e8 11 c8 ff ff       	call   6e82 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>
    a671:	84 c0                	test   %al,%al
    a673:	74 21                	je     a696 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0xf2>
	    return _Res(__x, __y);
    a675:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    a679:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    a67d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a681:	48 89 ce             	mov    %rcx,%rsi
    a684:	48 89 c7             	mov    %rax,%rdi
    a687:	e8 1c 11 00 00       	call   b7a8 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>
    a68c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a690:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    a694:	eb 7d                	jmp    a713 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x16f>
	    --__j;
    a696:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    a69a:	48 89 c7             	mov    %rax,%rdi
    a69d:	e8 ce 00 00 00       	call   a770 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    a6a2:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    a6a6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a6aa:	48 89 c7             	mov    %rax,%rdi
    a6ad:	e8 a8 fe ff ff       	call   a55a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    a6b2:	48 89 c1             	mov    %rax,%rcx
    a6b5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a6b9:	48 89 c2             	mov    %rax,%rdx
    a6bc:	48 89 ce             	mov    %rcx,%rsi
    a6bf:	48 89 df             	mov    %rbx,%rdi
    a6c2:	e8 17 c8 ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    a6c7:	84 c0                	test   %al,%al
    a6c9:	74 21                	je     a6ec <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x148>
	return _Res(__x, __y);
    a6cb:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    a6cf:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    a6d3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    a6d7:	48 89 ce             	mov    %rcx,%rsi
    a6da:	48 89 c7             	mov    %rax,%rdi
    a6dd:	e8 c6 10 00 00       	call   b7a8 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>
    a6e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a6e6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a6ea:	eb 27                	jmp    a713 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x16f>
      return _Res(__j._M_node, 0);
    a6ec:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    a6f3:	00 
    a6f4:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    a6f8:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    a6fc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    a700:	48 89 ce             	mov    %rcx,%rsi
    a703:	48 89 c7             	mov    %rax,%rdi
    a706:	e8 69 fe ff ff       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    a70b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a70f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    a713:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a717:	c9                   	leave
    a718:	c3                   	ret
    a719:	90                   	nop

000000000000a71a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    a71a:	55                   	push   %rbp
    a71b:	48 89 e5             	mov    %rsp,%rbp
    a71e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    a722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a726:	48 83 c0 18          	add    $0x18,%rax
    a72a:	5d                   	pop    %rbp
    a72b:	c3                   	ret

000000000000a72c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    a72c:	55                   	push   %rbp
    a72d:	48 89 e5             	mov    %rsp,%rbp
    a730:	48 83 ec 20          	sub    $0x20,%rsp
    a734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a738:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a73c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    a740:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a744:	48 89 c7             	mov    %rax,%rdi
    a747:	e8 a0 10 00 00       	call   b7ec <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    a74c:	48 8b 10             	mov    (%rax),%rdx
    a74f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a753:	48 89 10             	mov    %rdx,(%rax)
    a756:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a75a:	48 89 c7             	mov    %rax,%rdi
    a75d:	e8 8a 10 00 00       	call   b7ec <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    a762:	48 8b 10             	mov    (%rax),%rdx
    a765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a769:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a76d:	90                   	nop
    a76e:	c9                   	leave
    a76f:	c3                   	ret

000000000000a770 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    a770:	55                   	push   %rbp
    a771:	48 89 e5             	mov    %rsp,%rbp
    a774:	48 83 ec 10          	sub    $0x10,%rsp
    a778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    a77c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a780:	48 8b 00             	mov    (%rax),%rax
    a783:	48 89 c7             	mov    %rax,%rdi
    a786:	e8 75 8b ff ff       	call   3300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    a78b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a78f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    a792:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a796:	c9                   	leave
    a797:	c3                   	ret

000000000000a798 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    a798:	55                   	push   %rbp
    a799:	48 89 e5             	mov    %rsp,%rbp
    a79c:	48 83 ec 10          	sub    $0x10,%rsp
    a7a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    a7a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7a8:	48 8b 00             	mov    (%rax),%rax
    a7ab:	48 89 c7             	mov    %rax,%rdi
    a7ae:	e8 dd 89 ff ff       	call   3190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    a7b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a7b7:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    a7ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a7be:	c9                   	leave
    a7bf:	c3                   	ret

000000000000a7c0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>:
      _S_key(_Const_Link_type __x)
    a7c0:	55                   	push   %rbp
    a7c1:	48 89 e5             	mov    %rsp,%rbp
    a7c4:	48 83 ec 20          	sub    $0x20,%rsp
    a7c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    a7cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a7d0:	48 89 c7             	mov    %rax,%rdi
    a7d3:	e8 22 10 00 00       	call   b7fa <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    a7d8:	48 89 c2             	mov    %rax,%rdx
    a7db:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    a7df:	48 89 d6             	mov    %rdx,%rsi
    a7e2:	48 89 c7             	mov    %rax,%rdi
    a7e5:	e8 2e 10 00 00       	call   b818 <_ZNKSt10_Select1stISt4pairIKNSt6thread2idEmEEclERKS4_>
      }
    a7ea:	c9                   	leave
    a7eb:	c3                   	ret

000000000000a7ec <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    a7ec:	55                   	push   %rbp
    a7ed:	48 89 e5             	mov    %rsp,%rbp
    a7f0:	41 54                	push   %r12
    a7f2:	53                   	push   %rbx
    a7f3:	48 83 ec 30          	sub    $0x30,%rsp
    a7f7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a7fb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a7ff:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a803:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    a807:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    a80c:	75 43                	jne    a851 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    a80e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a812:	48 89 c7             	mov    %rax,%rdi
    a815:	e8 82 fb ff ff       	call   a39c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    a81a:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    a81e:	74 31                	je     a851 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    a820:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    a824:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a828:	48 89 c7             	mov    %rax,%rdi
    a82b:	e8 2a fd ff ff       	call   a55a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    a830:	49 89 c4             	mov    %rax,%r12
    a833:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a837:	48 89 c7             	mov    %rax,%rdi
    a83a:	e8 81 ff ff ff       	call   a7c0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    a83f:	4c 89 e2             	mov    %r12,%rdx
    a842:	48 89 c6             	mov    %rax,%rsi
    a845:	48 89 df             	mov    %rbx,%rdi
    a848:	e8 91 c6 ff ff       	call   6ede <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    a84d:	84 c0                	test   %al,%al
    a84f:	74 07                	je     a858 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x6c>
    a851:	b8 01 00 00 00       	mov    $0x1,%eax
    a856:	eb 05                	jmp    a85d <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x71>
    a858:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    a85d:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    a860:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a864:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    a868:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    a86c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a870:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    a874:	89 c7                	mov    %eax,%edi
    a876:	e8 c5 87 ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    a87b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a87f:	48 8b 40 28          	mov    0x28(%rax),%rax
    a883:	48 8d 50 01          	lea    0x1(%rax),%rdx
    a887:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a88b:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    a88f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    a893:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a897:	48 89 d6             	mov    %rdx,%rsi
    a89a:	48 89 c7             	mov    %rax,%rdi
    a89d:	e8 80 e8 ff ff       	call   9122 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    a8a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    a8a6:	48 83 c4 30          	add    $0x30,%rsp
    a8aa:	5b                   	pop    %rbx
    a8ab:	41 5c                	pop    %r12
    a8ad:	5d                   	pop    %rbp
    a8ae:	c3                   	ret
    a8af:	90                   	nop

000000000000a8b0 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>:
      _Tuple_impl()
    a8b0:	55                   	push   %rbp
    a8b1:	48 89 e5             	mov    %rsp,%rbp
    a8b4:	48 83 ec 10          	sub    $0x10,%rsp
    a8b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    a8bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c0:	48 89 c7             	mov    %rax,%rdi
    a8c3:	e8 62 0f 00 00       	call   b82a <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>
    a8c8:	90                   	nop
    a8c9:	c9                   	leave
    a8ca:	c3                   	ret
    a8cb:	90                   	nop

000000000000a8cc <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>:
      constexpr _Head_base()
    a8cc:	55                   	push   %rbp
    a8cd:	48 89 e5             	mov    %rsp,%rbp
    a8d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a8d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8d8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a8df:	90                   	nop
    a8e0:	5d                   	pop    %rbp
    a8e1:	c3                   	ret

000000000000a8e2 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a8e2:	55                   	push   %rbp
    a8e3:	48 89 e5             	mov    %rsp,%rbp
    a8e6:	48 83 ec 10          	sub    $0x10,%rsp
    a8ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f2:	48 89 c7             	mov    %rax,%rdi
    a8f5:	e8 3b 0f 00 00       	call   b835 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>
    a8fa:	c9                   	leave
    a8fb:	c3                   	ret

000000000000a8fc <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>:
      _Tuple_impl()
    a8fc:	55                   	push   %rbp
    a8fd:	48 89 e5             	mov    %rsp,%rbp
    a900:	48 83 ec 10          	sub    $0x10,%rsp
    a904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    a908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a90c:	48 89 c7             	mov    %rax,%rdi
    a90f:	e8 3c 0f 00 00       	call   b850 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>
    a914:	90                   	nop
    a915:	c9                   	leave
    a916:	c3                   	ret
    a917:	90                   	nop

000000000000a918 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>:
      constexpr _Head_base()
    a918:	55                   	push   %rbp
    a919:	48 89 e5             	mov    %rsp,%rbp
    a91c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a924:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a92b:	90                   	nop
    a92c:	5d                   	pop    %rbp
    a92d:	c3                   	ret

000000000000a92e <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a92e:	55                   	push   %rbp
    a92f:	48 89 e5             	mov    %rsp,%rbp
    a932:	48 83 ec 10          	sub    $0x10,%rsp
    a936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a93a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a93e:	48 89 c7             	mov    %rax,%rdi
    a941:	e8 15 0f 00 00       	call   b85b <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>
    a946:	c9                   	leave
    a947:	c3                   	ret

000000000000a948 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEEC1Ev>:
      _Tuple_impl()
    a948:	55                   	push   %rbp
    a949:	48 89 e5             	mov    %rsp,%rbp
    a94c:	48 83 ec 10          	sub    $0x10,%rsp
    a950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    a954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a958:	48 89 c7             	mov    %rax,%rdi
    a95b:	e8 16 0f 00 00       	call   b876 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EEC1Ev>
    a960:	90                   	nop
    a961:	c9                   	leave
    a962:	c3                   	ret
    a963:	90                   	nop

000000000000a964 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EEC1Ev>:
      constexpr _Head_base()
    a964:	55                   	push   %rbp
    a965:	48 89 e5             	mov    %rsp,%rbp
    a968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a96c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a970:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a977:	90                   	nop
    a978:	5d                   	pop    %rbp
    a979:	c3                   	ret

000000000000a97a <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a97a:	55                   	push   %rbp
    a97b:	48 89 e5             	mov    %rsp,%rbp
    a97e:	48 83 ec 10          	sub    $0x10,%rsp
    a982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a98a:	48 89 c7             	mov    %rax,%rdi
    a98d:	e8 ef 0e 00 00       	call   b881 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERS5_>
    a992:	c9                   	leave
    a993:	c3                   	ret

000000000000a994 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a994:	55                   	push   %rbp
    a995:	48 89 e5             	mov    %rsp,%rbp
    a998:	48 83 ec 10          	sub    $0x10,%rsp
    a99c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a9a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a4:	48 89 c7             	mov    %rax,%rdi
    a9a7:	e8 ef 0e 00 00       	call   b89b <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>
    a9ac:	c9                   	leave
    a9ad:	c3                   	ret

000000000000a9ae <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    a9ae:	55                   	push   %rbp
    a9af:	48 89 e5             	mov    %rsp,%rbp
    a9b2:	48 83 ec 10          	sub    $0x10,%rsp
    a9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    a9ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9be:	48 89 c7             	mov    %rax,%rdi
    a9c1:	e8 ef 0e 00 00       	call   b8b5 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    a9c6:	c9                   	leave
    a9c7:	c3                   	ret

000000000000a9c8 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko10ThreadPoolEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a9c8:	55                   	push   %rbp
    a9c9:	48 89 e5             	mov    %rsp,%rbp
    a9cc:	48 83 ec 10          	sub    $0x10,%rsp
    a9d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a9d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9d8:	48 89 c7             	mov    %rax,%rdi
    a9db:	e8 ef 0e 00 00       	call   b8cf <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEE7_M_headERS4_>
    a9e0:	c9                   	leave
    a9e1:	c3                   	ret

000000000000a9e2 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    a9e2:	55                   	push   %rbp
    a9e3:	48 89 e5             	mov    %rsp,%rbp
    a9e6:	48 83 ec 10          	sub    $0x10,%rsp
    a9ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    a9ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9f2:	48 89 c7             	mov    %rax,%rdi
    a9f5:	e8 ef 0e 00 00       	call   b8e9 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    a9fa:	c9                   	leave
    a9fb:	c3                   	ret

000000000000a9fc <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a9fc:	55                   	push   %rbp
    a9fd:	48 89 e5             	mov    %rsp,%rbp
    aa00:	48 83 ec 10          	sub    $0x10,%rsp
    aa04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    aa08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa0c:	48 89 c7             	mov    %rax,%rdi
    aa0f:	e8 ef 0e 00 00       	call   b903 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>
    aa14:	c9                   	leave
    aa15:	c3                   	ret

000000000000aa16 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    aa16:	55                   	push   %rbp
    aa17:	48 89 e5             	mov    %rsp,%rbp
    aa1a:	48 83 ec 10          	sub    $0x10,%rsp
    aa1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    aa22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa26:	48 89 c7             	mov    %rax,%rdi
    aa29:	e8 ef 0e 00 00       	call   b91d <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    aa2e:	c9                   	leave
    aa2f:	c3                   	ret

000000000000aa30 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERKT_v>:
      _M_access() const noexcept
    aa30:	55                   	push   %rbp
    aa31:	48 89 e5             	mov    %rsp,%rbp
    aa34:	48 83 ec 10          	sub    $0x10,%rsp
    aa38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<const _Tp*>(_M_access()); }
    aa3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa40:	48 89 c7             	mov    %rax,%rdi
    aa43:	e8 cc 90 ff ff       	call   3b14 <_ZNKSt9_Any_data9_M_accessEv>
    aa48:	c9                   	leave
    aa49:	c3                   	ret

000000000000aa4a <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE_EPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    aa4a:	55                   	push   %rbp
    aa4b:	48 89 e5             	mov    %rsp,%rbp
    aa4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    aa52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa56:	5d                   	pop    %rbp
    aa57:	c3                   	ret

000000000000aa58 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    aa58:	55                   	push   %rbp
    aa59:	48 89 e5             	mov    %rsp,%rbp
    aa5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    aa60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa64:	5d                   	pop    %rbp
    aa65:	c3                   	ret

000000000000aa66 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    aa66:	55                   	push   %rbp
    aa67:	48 89 e5             	mov    %rsp,%rbp
    aa6a:	48 83 ec 10          	sub    $0x10,%rsp
    aa6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    aa72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa76:	48 89 c7             	mov    %rax,%rdi
    aa79:	e8 da ff ff ff       	call   aa58 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>
    aa7e:	48 89 c7             	mov    %rax,%rdi
    aa81:	e8 82 9d ff ff       	call   4808 <_ZZN4neko6Engine5startEvENKUlvE_clEv>
    aa86:	90                   	nop
    aa87:	c9                   	leave
    aa88:	c3                   	ret

000000000000aa89 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    aa89:	55                   	push   %rbp
    aa8a:	48 89 e5             	mov    %rsp,%rbp
    aa8d:	48 83 ec 10          	sub    $0x10,%rsp
    aa91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa95:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    aa99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa9d:	48 89 c7             	mov    %rax,%rdi
    aaa0:	e8 92 0e 00 00       	call   b937 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>
    aaa5:	48 89 c2             	mov    %rax,%rdx
    aaa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaac:	48 89 d6             	mov    %rdx,%rsi
    aaaf:	48 89 c7             	mov    %rax,%rdi
    aab2:	e8 8e 0e 00 00       	call   b945 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    aab7:	90                   	nop
    aab8:	c9                   	leave
    aab9:	c3                   	ret

000000000000aaba <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>:
	_M_destroy(_Any_data& __victim, true_type)
    aaba:	55                   	push   %rbp
    aabb:	48 89 e5             	mov    %rsp,%rbp
    aabe:	48 83 ec 10          	sub    $0x10,%rsp
    aac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  __victim._M_access<_Functor>().~_Functor();
    aac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaca:	48 89 c7             	mov    %rax,%rdi
    aacd:	e8 ba 0e 00 00       	call   b98c <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERT_v>
	}
    aad2:	90                   	nop
    aad3:	c9                   	leave
    aad4:	c3                   	ret
    aad5:	90                   	nop

000000000000aad6 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE0_EERKT_v>:
      _M_access() const noexcept
    aad6:	55                   	push   %rbp
    aad7:	48 89 e5             	mov    %rsp,%rbp
    aada:	48 83 ec 10          	sub    $0x10,%rsp
    aade:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<const _Tp*>(_M_access()); }
    aae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aae6:	48 89 c7             	mov    %rax,%rdi
    aae9:	e8 26 90 ff ff       	call   3b14 <_ZNKSt9_Any_data9_M_accessEv>
    aaee:	c9                   	leave
    aaef:	c3                   	ret

000000000000aaf0 <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE0_EPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    aaf0:	55                   	push   %rbp
    aaf1:	48 89 e5             	mov    %rsp,%rbp
    aaf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    aaf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aafc:	5d                   	pop    %rbp
    aafd:	c3                   	ret

000000000000aafe <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    aafe:	55                   	push   %rbp
    aaff:	48 89 e5             	mov    %rsp,%rbp
    ab02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ab06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab0a:	5d                   	pop    %rbp
    ab0b:	c3                   	ret

000000000000ab0c <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE0_JEET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    ab0c:	55                   	push   %rbp
    ab0d:	48 89 e5             	mov    %rsp,%rbp
    ab10:	48 83 ec 10          	sub    $0x10,%rsp
    ab14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    ab18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab1c:	48 89 c7             	mov    %rax,%rdi
    ab1f:	e8 da ff ff ff       	call   aafe <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS4_E4typeE>
    ab24:	48 89 c7             	mov    %rax,%rdi
    ab27:	e8 06 9d ff ff       	call   4832 <_ZZN4neko6Engine5startEvENKUlvE0_clEv>
    ab2c:	90                   	nop
    ab2d:	c9                   	leave
    ab2e:	c3                   	ret

000000000000ab2f <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    ab2f:	55                   	push   %rbp
    ab30:	48 89 e5             	mov    %rsp,%rbp
    ab33:	48 83 ec 10          	sub    $0x10,%rsp
    ab37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    ab3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab43:	48 89 c7             	mov    %rax,%rdi
    ab46:	e8 5b 0e 00 00       	call   b9a6 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS5_E4typeE>
    ab4b:	48 89 c2             	mov    %rax,%rdx
    ab4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab52:	48 89 d6             	mov    %rdx,%rsi
    ab55:	48 89 c7             	mov    %rax,%rdi
    ab58:	e8 57 0e 00 00       	call   b9b4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    ab5d:	90                   	nop
    ab5e:	c9                   	leave
    ab5f:	c3                   	ret

000000000000ab60 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>:
	_M_destroy(_Any_data& __victim, true_type)
    ab60:	55                   	push   %rbp
    ab61:	48 89 e5             	mov    %rsp,%rbp
    ab64:	48 83 ec 10          	sub    $0x10,%rsp
    ab68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  __victim._M_access<_Functor>().~_Functor();
    ab6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab70:	48 89 c7             	mov    %rax,%rdi
    ab73:	e8 74 0e 00 00       	call   b9ec <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE0_EERT_v>
	}
    ab78:	90                   	nop
    ab79:	c9                   	leave
    ab7a:	c3                   	ret
    ab7b:	90                   	nop

000000000000ab7c <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE1_EERKT_v>:
      _M_access() const noexcept
    ab7c:	55                   	push   %rbp
    ab7d:	48 89 e5             	mov    %rsp,%rbp
    ab80:	48 83 ec 10          	sub    $0x10,%rsp
    ab84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<const _Tp*>(_M_access()); }
    ab88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab8c:	48 89 c7             	mov    %rax,%rdi
    ab8f:	e8 80 8f ff ff       	call   3b14 <_ZNKSt9_Any_data9_M_accessEv>
    ab94:	c9                   	leave
    ab95:	c3                   	ret

000000000000ab96 <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE1_EPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ab96:	55                   	push   %rbp
    ab97:	48 89 e5             	mov    %rsp,%rbp
    ab9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ab9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aba2:	5d                   	pop    %rbp
    aba3:	c3                   	ret

000000000000aba4 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    aba4:	55                   	push   %rbp
    aba5:	48 89 e5             	mov    %rsp,%rbp
    aba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    abac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abb0:	5d                   	pop    %rbp
    abb1:	c3                   	ret

000000000000abb2 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE1_JEET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    abb2:	55                   	push   %rbp
    abb3:	48 89 e5             	mov    %rsp,%rbp
    abb6:	48 83 ec 10          	sub    $0x10,%rsp
    abba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    abbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abc2:	48 89 c7             	mov    %rax,%rdi
    abc5:	e8 da ff ff ff       	call   aba4 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS4_E4typeE>
    abca:	48 89 c7             	mov    %rax,%rdi
    abcd:	e8 a8 9c ff ff       	call   487a <_ZZN4neko6Engine5startEvENKUlvE1_clEv>
    abd2:	90                   	nop
    abd3:	c9                   	leave
    abd4:	c3                   	ret

000000000000abd5 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    abd5:	55                   	push   %rbp
    abd6:	48 89 e5             	mov    %rsp,%rbp
    abd9:	48 83 ec 10          	sub    $0x10,%rsp
    abdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abe1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    abe5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    abe9:	48 89 c7             	mov    %rax,%rdi
    abec:	e8 15 0e 00 00       	call   ba06 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS5_E4typeE>
    abf1:	48 89 c2             	mov    %rax,%rdx
    abf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abf8:	48 89 d6             	mov    %rdx,%rsi
    abfb:	48 89 c7             	mov    %rax,%rdi
    abfe:	e8 11 0e 00 00       	call   ba14 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    ac03:	90                   	nop
    ac04:	c9                   	leave
    ac05:	c3                   	ret

000000000000ac06 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>:
	_M_destroy(_Any_data& __victim, true_type)
    ac06:	55                   	push   %rbp
    ac07:	48 89 e5             	mov    %rsp,%rbp
    ac0a:	48 83 ec 10          	sub    $0x10,%rsp
    ac0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  __victim._M_access<_Functor>().~_Functor();
    ac12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac16:	48 89 c7             	mov    %rax,%rdi
    ac19:	e8 2e 0e 00 00       	call   ba4c <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE1_EERT_v>
	}
    ac1e:	90                   	nop
    ac1f:	c9                   	leave
    ac20:	c3                   	ret
    ac21:	90                   	nop

000000000000ac22 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE2_EERKT_v>:
      _M_access() const noexcept
    ac22:	55                   	push   %rbp
    ac23:	48 89 e5             	mov    %rsp,%rbp
    ac26:	48 83 ec 10          	sub    $0x10,%rsp
    ac2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<const _Tp*>(_M_access()); }
    ac2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac32:	48 89 c7             	mov    %rax,%rdi
    ac35:	e8 da 8e ff ff       	call   3b14 <_ZNKSt9_Any_data9_M_accessEv>
    ac3a:	c9                   	leave
    ac3b:	c3                   	ret

000000000000ac3c <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE2_EPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ac3c:	55                   	push   %rbp
    ac3d:	48 89 e5             	mov    %rsp,%rbp
    ac40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ac44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac48:	5d                   	pop    %rbp
    ac49:	c3                   	ret

000000000000ac4a <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ac4a:	55                   	push   %rbp
    ac4b:	48 89 e5             	mov    %rsp,%rbp
    ac4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ac52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac56:	5d                   	pop    %rbp
    ac57:	c3                   	ret

000000000000ac58 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE2_JEET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    ac58:	55                   	push   %rbp
    ac59:	48 89 e5             	mov    %rsp,%rbp
    ac5c:	48 83 ec 10          	sub    $0x10,%rsp
    ac60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    ac64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac68:	48 89 c7             	mov    %rax,%rdi
    ac6b:	e8 da ff ff ff       	call   ac4a <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS4_E4typeE>
    ac70:	48 89 c7             	mov    %rax,%rdi
    ac73:	e8 4a 9c ff ff       	call   48c2 <_ZZN4neko6Engine5startEvENKUlvE2_clEv>
    ac78:	90                   	nop
    ac79:	c9                   	leave
    ac7a:	c3                   	ret

000000000000ac7b <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    ac7b:	55                   	push   %rbp
    ac7c:	48 89 e5             	mov    %rsp,%rbp
    ac7f:	48 83 ec 10          	sub    $0x10,%rsp
    ac83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac87:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    ac8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac8f:	48 89 c7             	mov    %rax,%rdi
    ac92:	e8 cf 0d 00 00       	call   ba66 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS5_E4typeE>
    ac97:	48 89 c2             	mov    %rax,%rdx
    ac9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac9e:	48 89 d6             	mov    %rdx,%rsi
    aca1:	48 89 c7             	mov    %rax,%rdi
    aca4:	e8 cb 0d 00 00       	call   ba74 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    aca9:	90                   	nop
    acaa:	c9                   	leave
    acab:	c3                   	ret

000000000000acac <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>:
	_M_destroy(_Any_data& __victim, true_type)
    acac:	55                   	push   %rbp
    acad:	48 89 e5             	mov    %rsp,%rbp
    acb0:	48 83 ec 10          	sub    $0x10,%rsp
    acb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  __victim._M_access<_Functor>().~_Functor();
    acb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acbc:	48 89 c7             	mov    %rax,%rdi
    acbf:	e8 e8 0d 00 00       	call   baac <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE2_EERT_v>
	}
    acc4:	90                   	nop
    acc5:	c9                   	leave
    acc6:	c3                   	ret
    acc7:	90                   	nop

000000000000acc8 <_ZNSaISt17reference_wrapperIbEEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    acc8:	55                   	push   %rbp
    acc9:	48 89 e5             	mov    %rsp,%rbp
    accc:	48 83 ec 10          	sub    $0x10,%rsp
    acd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    acd8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    acdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace0:	48 89 d6             	mov    %rdx,%rsi
    ace3:	48 89 c7             	mov    %rax,%rdi
    ace6:	e8 db 0d 00 00       	call   bac6 <_ZNSt15__new_allocatorISt17reference_wrapperIbEEC1ERKS2_>
    aceb:	90                   	nop
    acec:	c9                   	leave
    aced:	c3                   	ret

000000000000acee <_ZNSt12_Vector_baseISt17reference_wrapperIbESaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    acee:	55                   	push   %rbp
    acef:	48 89 e5             	mov    %rsp,%rbp
    acf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    acf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acfa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ad01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad05:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ad0c:	00 
    ad0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad11:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ad18:	00 
	{ }
    ad19:	90                   	nop
    ad1a:	5d                   	pop    %rbp
    ad1b:	c3                   	ret

000000000000ad1c <_ZNSt16allocator_traitsISaISt17reference_wrapperIbEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    ad1c:	55                   	push   %rbp
    ad1d:	48 89 e5             	mov    %rsp,%rbp
    ad20:	48 83 ec 20          	sub    $0x20,%rsp
    ad24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ad30:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ad34:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ad38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad3c:	48 89 ce             	mov    %rcx,%rsi
    ad3f:	48 89 c7             	mov    %rax,%rdi
    ad42:	e8 8f 0d 00 00       	call   bad6 <_ZNSt15__new_allocatorISt17reference_wrapperIbEE10deallocateEPS1_m>
    ad47:	90                   	nop
    ad48:	c9                   	leave
    ad49:	c3                   	ret

000000000000ad4a <_ZNSt6vectorISt17reference_wrapperIbESaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ad4a:	55                   	push   %rbp
    ad4b:	48 89 e5             	mov    %rsp,%rbp
    ad4e:	48 83 ec 20          	sub    $0x20,%rsp
    ad52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ad56:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ad5d:	ff ff 0f 
    ad60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ad64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad68:	48 89 c7             	mov    %rax,%rdi
    ad6b:	e8 97 0d 00 00       	call   bb07 <_ZNSt16allocator_traitsISaISt17reference_wrapperIbEEE8max_sizeERKS2_>
    ad70:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ad74:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ad78:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ad7c:	48 89 d6             	mov    %rdx,%rsi
    ad7f:	48 89 c7             	mov    %rax,%rdi
    ad82:	e8 ed 8d ff ff       	call   3b74 <_ZSt3minImERKT_S2_S2_>
    ad87:	48 8b 00             	mov    (%rax),%rax
      }
    ad8a:	c9                   	leave
    ad8b:	c3                   	ret

000000000000ad8c <_ZNSt16allocator_traitsISaISt17reference_wrapperIbEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    ad8c:	55                   	push   %rbp
    ad8d:	48 89 e5             	mov    %rsp,%rbp
    ad90:	48 83 ec 10          	sub    $0x10,%rsp
    ad94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ad9c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ada0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada4:	ba 00 00 00 00       	mov    $0x0,%edx
    ada9:	48 89 ce             	mov    %rcx,%rsi
    adac:	48 89 c7             	mov    %rax,%rdi
    adaf:	e8 6e 0d 00 00       	call   bb22 <_ZNSt15__new_allocatorISt17reference_wrapperIbEE8allocateEmPKv>
    adb4:	c9                   	leave
    adb5:	c3                   	ret

000000000000adb6 <_ZSt18uninitialized_copyIPKSt17reference_wrapperIbEPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    adb6:	55                   	push   %rbp
    adb7:	48 89 e5             	mov    %rsp,%rbp
    adba:	48 83 ec 30          	sub    $0x30,%rsp
    adbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    adc2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    adc6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    adca:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
      const bool __assignable
    adce:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    add2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    add6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    adda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adde:	48 89 ce             	mov    %rcx,%rsi
    ade1:	48 89 c7             	mov    %rax,%rdi
    ade4:	e8 9a 0d 00 00       	call   bb83 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt17reference_wrapperIbEPS3_EET0_T_S8_S7_>
    }
    ade9:	c9                   	leave
    adea:	c3                   	ret

000000000000adeb <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt17reference_wrapperIbEEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    adeb:	55                   	push   %rbp
    adec:	48 89 e5             	mov    %rsp,%rbp
    adef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adf3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    adf7:	90                   	nop
    adf8:	5d                   	pop    %rbp
    adf9:	c3                   	ret

000000000000adfa <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    adfa:	55                   	push   %rbp
    adfb:	48 89 e5             	mov    %rsp,%rbp
    adfe:	48 83 ec 10          	sub    $0x10,%rsp
    ae02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    ae06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae0a:	48 89 c7             	mov    %rax,%rdi
    ae0d:	e8 9e 0d 00 00       	call   bbb0 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>
    ae12:	90                   	nop
    ae13:	c9                   	leave
    ae14:	c3                   	ret

000000000000ae15 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ae15:	55                   	push   %rbp
    ae16:	48 89 e5             	mov    %rsp,%rbp
    ae19:	48 83 ec 10          	sub    $0x10,%rsp
    ae1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ae21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae25:	48 89 c7             	mov    %rax,%rdi
    ae28:	e8 aa 0d 00 00       	call   bbd7 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>
    ae2d:	c9                   	leave
    ae2e:	c3                   	ret

000000000000ae2f <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    ae2f:	55                   	push   %rbp
    ae30:	48 89 e5             	mov    %rsp,%rbp
    ae33:	48 83 ec 10          	sub    $0x10,%rsp
    ae37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    ae3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3f:	48 89 c7             	mov    %rax,%rdi
    ae42:	e8 aa 0d 00 00       	call   bbf1 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    ae47:	c9                   	leave
    ae48:	c3                   	ret

000000000000ae49 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    ae49:	55                   	push   %rbp
    ae4a:	48 89 e5             	mov    %rsp,%rbp
    ae4d:	48 83 ec 10          	sub    $0x10,%rsp
    ae51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    ae55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae59:	48 89 c7             	mov    %rax,%rdi
    ae5c:	e8 aa 0d 00 00       	call   bc0b <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    ae61:	c9                   	leave
    ae62:	c3                   	ret

000000000000ae63 <_ZSt11__addressofISt6threadEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ae63:	55                   	push   %rbp
    ae64:	48 89 e5             	mov    %rsp,%rbp
    ae67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ae6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae6f:	5d                   	pop    %rbp
    ae70:	c3                   	ret

000000000000ae71 <_ZSt8_DestroyISt6threadEvPT_>:
    _Destroy(_Tp* __pointer)
    ae71:	55                   	push   %rbp
    ae72:	48 89 e5             	mov    %rsp,%rbp
    ae75:	48 83 ec 10          	sub    $0x10,%rsp
    ae79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    ae7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae81:	48 89 c7             	mov    %rax,%rdi
    ae84:	e8 d1 8d ff ff       	call   3c5a <_ZNSt6threadD1Ev>
    }
    ae89:	90                   	nop
    ae8a:	c9                   	leave
    ae8b:	c3                   	ret

000000000000ae8c <_ZNSt15__new_allocatorISt8functionIFvvEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ae8c:	55                   	push   %rbp
    ae8d:	48 89 e5             	mov    %rsp,%rbp
    ae90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae94:	90                   	nop
    ae95:	5d                   	pop    %rbp
    ae96:	c3                   	ret
    ae97:	90                   	nop

000000000000ae98 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>:
      _Deque_iterator() _GLIBCXX_NOEXCEPT
    ae98:	55                   	push   %rbp
    ae99:	48 89 e5             	mov    %rsp,%rbp
    ae9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_cur(), _M_first(), _M_last(), _M_node() { }
    aea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aea4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aeab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeaf:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aeb6:	00 
    aeb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aebb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aec2:	00 
    aec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aec7:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    aece:	00 
    aecf:	90                   	nop
    aed0:	5d                   	pop    %rbp
    aed1:	c3                   	ret

000000000000aed2 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE8allocateERS4_m>:
      allocate(allocator_type& __a, size_type __n)
    aed2:	55                   	push   %rbp
    aed3:	48 89 e5             	mov    %rsp,%rbp
    aed6:	48 83 ec 10          	sub    $0x10,%rsp
    aeda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aede:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    aee2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeea:	ba 00 00 00 00       	mov    $0x0,%edx
    aeef:	48 89 ce             	mov    %rcx,%rsi
    aef2:	48 89 c7             	mov    %rax,%rdi
    aef5:	e8 2c 0d 00 00       	call   bc26 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv>
    aefa:	c9                   	leave
    aefb:	c3                   	ret

000000000000aefc <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
    aefc:	55                   	push   %rbp
    aefd:	48 89 e5             	mov    %rsp,%rbp
      { return __deque_buf_size(sizeof(_Tp)); }
    af00:	bf 20 00 00 00       	mov    $0x20,%edi
    af05:	e8 f7 8c ff ff       	call   3c01 <_ZSt16__deque_buf_sizem>
    af0a:	5d                   	pop    %rbp
    af0b:	c3                   	ret

000000000000af0c <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    af0c:	55                   	push   %rbp
    af0d:	48 89 e5             	mov    %rsp,%rbp
    af10:	48 83 ec 20          	sub    $0x20,%rsp
    af14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af1c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    af20:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    af24:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    af28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af2c:	48 89 ce             	mov    %rcx,%rsi
    af2f:	48 89 c7             	mov    %rax,%rdi
    af32:	e8 51 0d 00 00       	call   bc88 <_ZNSt15__new_allocatorISt8functionIFvvEEE10deallocateEPS2_m>
    af37:	90                   	nop
    af38:	c9                   	leave
    af39:	c3                   	ret

000000000000af3a <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    af3a:	55                   	push   %rbp
    af3b:	48 89 e5             	mov    %rsp,%rbp
    af3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    af42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af46:	5d                   	pop    %rbp
    af47:	c3                   	ret

000000000000af48 <_ZNSaIPSt8functionIFvvEEEC1IS1_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
    af48:	55                   	push   %rbp
    af49:	48 89 e5             	mov    %rsp,%rbp
    af4c:	48 83 ec 10          	sub    $0x10,%rsp
    af50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af5c:	48 89 c7             	mov    %rax,%rdi
    af5f:	e8 54 0d 00 00       	call   bcb8 <_ZNSt15__new_allocatorIPSt8functionIFvvEEEC1Ev>
    af64:	90                   	nop
    af65:	c9                   	leave
    af66:	c3                   	ret
    af67:	90                   	nop

000000000000af68 <_ZNSt15__new_allocatorIPSt8functionIFvvEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    af68:	55                   	push   %rbp
    af69:	48 89 e5             	mov    %rsp,%rbp
    af6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af70:	90                   	nop
    af71:	5d                   	pop    %rbp
    af72:	c3                   	ret
    af73:	90                   	nop

000000000000af74 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE10deallocateEPS3_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af74:	55                   	push   %rbp
    af75:	48 89 e5             	mov    %rsp,%rbp
    af78:	48 83 ec 20          	sub    $0x20,%rsp
    af7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    af88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af8c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    af93:	00 
    af94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af98:	48 89 d6             	mov    %rdx,%rsi
    af9b:	48 89 c7             	mov    %rax,%rdi
    af9e:	e8 2d 83 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    afa3:	c9                   	leave
    afa4:	c3                   	ret

000000000000afa5 <_ZSt8_DestroyIPSt8functionIFvvEEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    afa5:	55                   	push   %rbp
    afa6:	48 89 e5             	mov    %rsp,%rbp
    afa9:	48 83 ec 10          	sub    $0x10,%rsp
    afad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    afb5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    afb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afbd:	48 89 d6             	mov    %rdx,%rsi
    afc0:	48 89 c7             	mov    %rax,%rdi
    afc3:	e8 fb 0c 00 00       	call   bcc3 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_>
    }
    afc8:	90                   	nop
    afc9:	c9                   	leave
    afca:	c3                   	ret
    afcb:	90                   	nop

000000000000afcc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    afcc:	55                   	push   %rbp
    afcd:	48 89 e5             	mov    %rsp,%rbp
    afd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    afd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afd8:	5d                   	pop    %rbp
    afd9:	c3                   	ret

000000000000afda <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE7destroyIS5_EEvRS7_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    afda:	55                   	push   %rbp
    afdb:	48 89 e5             	mov    %rsp,%rbp
    afde:	48 83 ec 10          	sub    $0x10,%rsp
    afe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afe6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    afea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    afee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aff2:	48 89 d6             	mov    %rdx,%rsi
    aff5:	48 89 c7             	mov    %rax,%rdi
    aff8:	e8 ff 0c 00 00       	call   bcfc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE7destroyIS5_EEvPT_>
	}
    affd:	90                   	nop
    affe:	c9                   	leave
    afff:	c3                   	ret

000000000000b000 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE10deallocateERS7_PS6_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b000:	55                   	push   %rbp
    b001:	48 89 e5             	mov    %rsp,%rbp
    b004:	48 83 ec 20          	sub    $0x20,%rsp
    b008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b00c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b010:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b014:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b018:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b01c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b020:	48 89 ce             	mov    %rcx,%rsi
    b023:	48 89 c7             	mov    %rax,%rdi
    b026:	e8 e1 0c 00 00       	call   bd0c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE10deallocateEPS6_m>
    b02b:	90                   	nop
    b02c:	c9                   	leave
    b02d:	c3                   	ret

000000000000b02e <_ZNSt16allocator_traitsISaISt6threadEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b02e:	55                   	push   %rbp
    b02f:	48 89 e5             	mov    %rsp,%rbp
    b032:	48 83 ec 10          	sub    $0x10,%rsp
    b036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b03a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b03e:	48 89 c7             	mov    %rax,%rdi
    b041:	e8 00 0d 00 00       	call   bd46 <_ZNKSt15__new_allocatorISt6threadE8max_sizeEv>
      }
    b046:	c9                   	leave
    b047:	c3                   	ret

000000000000b048 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b048:	55                   	push   %rbp
    b049:	48 89 e5             	mov    %rsp,%rbp
    b04c:	48 83 ec 20          	sub    $0x20,%rsp
    b050:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b054:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b058:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b05c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b060:	eb 1e                	jmp    b080 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b066:	48 89 c7             	mov    %rax,%rdi
    b069:	e8 f5 fd ff ff       	call   ae63 <_ZSt11__addressofISt6threadEPT_RS1_>
    b06e:	48 89 c7             	mov    %rax,%rdi
    b071:	e8 05 0d 00 00       	call   bd7b <_ZSt10_ConstructISt6threadJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b076:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b07b:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    b080:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b085:	75 db                	jne    b062 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_+0x1a>
	      return __cur;
    b087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b08b:	c9                   	leave
    b08c:	c3                   	ret
    b08d:	90                   	nop

000000000000b08e <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b08e:	55                   	push   %rbp
    b08f:	48 89 e5             	mov    %rsp,%rbp
    b092:	48 83 ec 20          	sub    $0x20,%rsp
    b096:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b09a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b09e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b0a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0a6:	48 89 c7             	mov    %rax,%rdi
    b0a9:	e8 fc 0c 00 00       	call   bdaa <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>
    b0ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b0b2:	0f 92 c0             	setb   %al
    b0b5:	0f b6 c0             	movzbl %al,%eax
    b0b8:	48 85 c0             	test   %rax,%rax
    b0bb:	0f 95 c0             	setne  %al
    b0be:	84 c0                	test   %al,%al
    b0c0:	74 1a                	je     b0dc <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b0c2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b0c9:	ff ff 1f 
    b0cc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b0d0:	73 05                	jae    b0d7 <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b0d2:	e8 39 81 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b0d7:	e8 b4 7f ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b0dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b0e0:	48 c1 e0 03          	shl    $0x3,%rax
    b0e4:	48 89 c7             	mov    %rax,%rdi
    b0e7:	e8 d4 81 ff ff       	call   32c0 <_Znwm@plt>
    b0ec:	90                   	nop
      }
    b0ed:	c9                   	leave
    b0ee:	c3                   	ret

000000000000b0ef <_ZSt12__niter_baseIPSt6threadET_S2_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the __normal_iterator wrapper. See copy, fill, ...
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __niter_base(_Iterator __it)
    b0ef:	55                   	push   %rbp
    b0f0:	48 89 e5             	mov    %rsp,%rbp
    b0f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it; }
    b0f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0fb:	5d                   	pop    %rbp
    b0fc:	c3                   	ret

000000000000b0fd <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
    b0fd:	55                   	push   %rbp
    b0fe:	48 89 e5             	mov    %rsp,%rbp
    b101:	53                   	push   %rbx
    b102:	48 83 ec 38          	sub    $0x38,%rsp
    b106:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b10a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b10e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    b112:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
    b116:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b11a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
    b11e:	eb 3a                	jmp    b15a <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_+0x5d>
	std::__relocate_object_a(std::__addressof(*__cur),
    b120:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b124:	48 89 c7             	mov    %rax,%rdi
    b127:	e8 37 fd ff ff       	call   ae63 <_ZSt11__addressofISt6threadEPT_RS1_>
    b12c:	48 89 c3             	mov    %rax,%rbx
    b12f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b133:	48 89 c7             	mov    %rax,%rdi
    b136:	e8 28 fd ff ff       	call   ae63 <_ZSt11__addressofISt6threadEPT_RS1_>
    b13b:	48 89 c1             	mov    %rax,%rcx
    b13e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b142:	48 89 c2             	mov    %rax,%rdx
    b145:	48 89 de             	mov    %rbx,%rsi
    b148:	48 89 cf             	mov    %rcx,%rdi
    b14b:	e8 6e 0c 00 00       	call   bdbe <_ZSt19__relocate_object_aISt6threadS0_SaIS0_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
    b150:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    b155:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    b15a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b15e:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    b162:	75 bc                	jne    b120 <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_+0x23>
      return __cur;
    b164:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    b168:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b16c:	c9                   	leave
    b16d:	c3                   	ret

000000000000b16e <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEEC1IS2_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    b16e:	55                   	push   %rbp
    b16f:	48 89 e5             	mov    %rsp,%rbp
    b172:	53                   	push   %rbx
    b173:	48 83 ec 18          	sub    $0x18,%rsp
    b177:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b17b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    b17f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b183:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b187:	48 89 c7             	mov    %rax,%rdi
    b18a:	e8 5b b7 ff ff       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    b18f:	48 89 c6             	mov    %rax,%rsi
    b192:	48 89 df             	mov    %rbx,%rdi
    b195:	e8 7c 0c 00 00       	call   be16 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EEC1IS2_EEOT_>
	{ }
    b19a:	90                   	nop
    b19b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b19f:	c9                   	leave
    b1a0:	c3                   	ret
    b1a1:	90                   	nop

000000000000b1a2 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EEC1ERKS4_>:
      constexpr _Head_base(const _Head& __h)
    b1a2:	55                   	push   %rbp
    b1a3:	48 89 e5             	mov    %rsp,%rbp
    b1a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_head_impl(__h) { }
    b1ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b1b2:	48 8b 10             	mov    (%rax),%rdx
    b1b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1b9:	48 89 10             	mov    %rdx,(%rax)
    b1bc:	90                   	nop
    b1bd:	5d                   	pop    %rbp
    b1be:	c3                   	ret
    b1bf:	90                   	nop

000000000000b1c0 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    b1c0:	55                   	push   %rbp
    b1c1:	48 89 e5             	mov    %rsp,%rbp
    b1c4:	48 83 ec 10          	sub    $0x10,%rsp
    b1c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    b1cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1d0:	48 89 c7             	mov    %rax,%rdi
    b1d3:	e8 68 0c 00 00       	call   be40 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEEC1Ev>
    b1d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1dc:	48 89 c7             	mov    %rax,%rdi
    b1df:	e8 78 0c 00 00       	call   be5c <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EEC1Ev>
    b1e4:	90                   	nop
    b1e5:	c9                   	leave
    b1e6:	c3                   	ret

000000000000b1e7 <_ZSt12__get_helperILm0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    b1e7:	55                   	push   %rbp
    b1e8:	48 89 e5             	mov    %rsp,%rbp
    b1eb:	48 83 ec 10          	sub    $0x10,%rsp
    b1ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    b1f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1f7:	48 89 c7             	mov    %rax,%rdi
    b1fa:	e8 73 0c 00 00       	call   be72 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_>
    b1ff:	c9                   	leave
    b200:	c3                   	ret

000000000000b201 <_ZSt3getILm1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    b201:	55                   	push   %rbp
    b202:	48 89 e5             	mov    %rsp,%rbp
    b205:	48 83 ec 10          	sub    $0x10,%rsp
    b209:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    b20d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b211:	48 89 c7             	mov    %rax,%rdi
    b214:	e8 73 0c 00 00       	call   be8c <_ZSt12__get_helperILm1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    b219:	c9                   	leave
    b21a:	c3                   	ret

000000000000b21b <_ZSt7forwardIRKZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b21b:	55                   	push   %rbp
    b21c:	48 89 e5             	mov    %rsp,%rbp
    b21f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b227:	5d                   	pop    %rbp
    b228:	c3                   	ret

000000000000b229 <_ZNSt14_Function_base13_Base_managerIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_E9_M_createIRKS9_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    b229:	55                   	push   %rbp
    b22a:	48 89 e5             	mov    %rsp,%rbp
    b22d:	53                   	push   %rbx
    b22e:	48 83 ec 18          	sub    $0x18,%rsp
    b232:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b236:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    b23a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b23e:	48 89 c7             	mov    %rax,%rdi
    b241:	e8 c0 88 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    b246:	48 89 c6             	mov    %rax,%rsi
    b249:	bf 10 00 00 00       	mov    $0x10,%edi
    b24e:	e8 36 86 ff ff       	call   3889 <_ZnwmPv>
    b253:	48 89 c3             	mov    %rax,%rbx
    b256:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b25a:	48 89 c7             	mov    %rax,%rdi
    b25d:	e8 b9 ff ff ff       	call   b21b <_ZSt7forwardIRKZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EOT_RNSt16remove_referenceISB_E4typeE>
    b262:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b266:	48 8b 00             	mov    (%rax),%rax
    b269:	48 89 03             	mov    %rax,(%rbx)
    b26c:	48 89 53 08          	mov    %rdx,0x8(%rbx)
	  }
    b270:	90                   	nop
    b271:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b275:	c9                   	leave
    b276:	c3                   	ret
    b277:	90                   	nop

000000000000b278 <_ZNSt9_Any_data9_M_accessIZN4neko10ThreadPool9submitJobERKSt8functionIFvvEERbEUlvE_EERT_v>:
      _M_access() noexcept
    b278:	55                   	push   %rbp
    b279:	48 89 e5             	mov    %rsp,%rbp
    b27c:	48 83 ec 10          	sub    $0x10,%rsp
    b280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    b284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b288:	48 89 c7             	mov    %rax,%rdi
    b28b:	e8 76 88 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    b290:	c9                   	leave
    b291:	c3                   	ret

000000000000b292 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    b292:	55                   	push   %rbp
    b293:	48 89 e5             	mov    %rsp,%rbp
    b296:	53                   	push   %rbx
    b297:	48 83 ec 28          	sub    $0x28,%rsp
    b29b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b29f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b2a3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    b2a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b2ab:	48 89 c6             	mov    %rax,%rsi
    b2ae:	bf 20 00 00 00       	mov    $0x20,%edi
    b2b3:	e8 d1 85 ff ff       	call   3889 <_ZnwmPv>
    b2b8:	48 89 c3             	mov    %rax,%rbx
    b2bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b2bf:	48 89 c7             	mov    %rax,%rdi
    b2c2:	e8 dc ed ff ff       	call   a0a3 <_ZSt7forwardISt8functionIFvvEEEOT_RNSt16remove_referenceIS3_E4typeE>
    b2c7:	48 89 c6             	mov    %rax,%rsi
    b2ca:	48 89 df             	mov    %rbx,%rdi
    b2cd:	e8 d4 0b 00 00       	call   bea6 <_ZNSt8functionIFvvEEC1EOS1_>
    b2d2:	90                   	nop
    b2d3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b2d7:	c9                   	leave
    b2d8:	c3                   	ret
    b2d9:	90                   	nop

000000000000b2da <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    b2da:	55                   	push   %rbp
    b2db:	48 89 e5             	mov    %rsp,%rbp
    b2de:	48 83 ec 10          	sub    $0x10,%rsp
    b2e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (_M_cur == _M_first)
    b2e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ea:	48 8b 10             	mov    (%rax),%rdx
    b2ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2f1:	48 8b 40 08          	mov    0x8(%rax),%rax
    b2f5:	48 39 c2             	cmp    %rax,%rdx
    b2f8:	75 2a                	jne    b324 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EmmEv+0x4a>
	    _M_set_node(_M_node - 1);
    b2fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2fe:	48 8b 40 18          	mov    0x18(%rax),%rax
    b302:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    b306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b30a:	48 89 d6             	mov    %rdx,%rsi
    b30d:	48 89 c7             	mov    %rax,%rdi
    b310:	e8 85 e9 ff ff       	call   9c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
	    _M_cur = _M_last;
    b315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b319:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b31d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b321:	48 89 10             	mov    %rdx,(%rax)
	--_M_cur;
    b324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b328:	48 8b 00             	mov    (%rax),%rax
    b32b:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    b32f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b333:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    b336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    b33a:	c9                   	leave
    b33b:	c3                   	ret

000000000000b33c <_ZStmiRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>:
      operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    b33c:	55                   	push   %rbp
    b33d:	48 89 e5             	mov    %rsp,%rbp
    b340:	48 83 ec 10          	sub    $0x10,%rsp
    b344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return difference_type(_S_buffer_size())
    b34c:	e8 ab fb ff ff       	call   aefc <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>
    b351:	48 89 c1             	mov    %rax,%rcx
	  * (__x._M_node - __y._M_node - bool(__x._M_node))
    b354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b358:	48 8b 50 18          	mov    0x18(%rax),%rdx
    b35c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b360:	48 8b 40 18          	mov    0x18(%rax),%rax
    b364:	48 29 c2             	sub    %rax,%rdx
    b367:	48 89 d0             	mov    %rdx,%rax
    b36a:	48 c1 f8 03          	sar    $0x3,%rax
    b36e:	48 89 c2             	mov    %rax,%rdx
    b371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b375:	48 8b 40 18          	mov    0x18(%rax),%rax
    b379:	48 85 c0             	test   %rax,%rax
    b37c:	0f 95 c0             	setne  %al
    b37f:	0f b6 c0             	movzbl %al,%eax
    b382:	48 29 c2             	sub    %rax,%rdx
    b385:	48 0f af d1          	imul   %rcx,%rdx
	  + (__x._M_cur - __x._M_first)
    b389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b38d:	48 8b 08             	mov    (%rax),%rcx
    b390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b394:	48 8b 40 08          	mov    0x8(%rax),%rax
    b398:	48 29 c1             	sub    %rax,%rcx
    b39b:	48 89 c8             	mov    %rcx,%rax
    b39e:	48 c1 f8 05          	sar    $0x5,%rax
    b3a2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
	  + (__y._M_last - __y._M_cur);
    b3a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b3aa:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b3ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b3b2:	48 8b 00             	mov    (%rax),%rax
    b3b5:	48 29 c2             	sub    %rax,%rdx
    b3b8:	48 89 d0             	mov    %rdx,%rax
    b3bb:	48 c1 f8 05          	sar    $0x5,%rax
    b3bf:	48 01 c8             	add    %rcx,%rax
      }
    b3c2:	c9                   	leave
    b3c3:	c3                   	ret

000000000000b3c4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b3c4:	55                   	push   %rbp
    b3c5:	48 89 e5             	mov    %rsp,%rbp
    b3c8:	48 83 ec 20          	sub    $0x20,%rsp
    b3cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max;
    b3d0:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    b3d7:	ff ff 7f 
    b3da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b3de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3e2:	48 89 c7             	mov    %rax,%rdi
    b3e5:	e8 49 0b 00 00       	call   bf33 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8max_sizeERKS3_>
    b3ea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b3ee:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b3f2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b3f6:	48 89 d6             	mov    %rdx,%rsi
    b3f9:	48 89 c7             	mov    %rax,%rdi
    b3fc:	e8 73 87 ff ff       	call   3b74 <_ZSt3minImERKT_S2_S2_>
    b401:	48 8b 00             	mov    (%rax),%rax
      }
    b404:	c9                   	leave
    b405:	c3                   	ret

000000000000b406 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb>:
	}
    }

  template <typename _Tp, typename _Alloc>
    void
    deque<_Tp, _Alloc>::
    b406:	55                   	push   %rbp
    b407:	48 89 e5             	mov    %rsp,%rbp
    b40a:	53                   	push   %rbx
    b40b:	48 83 ec 58          	sub    $0x58,%rsp
    b40f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    b413:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    b417:	89 d0                	mov    %edx,%eax
    b419:	88 45 ac             	mov    %al,-0x54(%rbp)
    _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
    {
      const size_type __old_num_nodes
	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
    b41c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b420:	48 8b 50 48          	mov    0x48(%rax),%rdx
    b424:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b428:	48 8b 40 28          	mov    0x28(%rax),%rax
    b42c:	48 29 c2             	sub    %rax,%rdx
    b42f:	48 89 d0             	mov    %rdx,%rax
    b432:	48 c1 f8 03          	sar    $0x3,%rax
    b436:	48 83 c0 01          	add    $0x1,%rax
      const size_type __old_num_nodes
    b43a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
    b43e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    b442:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b446:	48 01 d0             	add    %rdx,%rax
    b449:	48 89 45 d8          	mov    %rax,-0x28(%rbp)

      _Map_pointer __new_nstart;
      if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
    b44d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b451:	48 8b 40 08          	mov    0x8(%rax),%rax
    b455:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b459:	48 01 d2             	add    %rdx,%rdx
    b45c:	48 39 c2             	cmp    %rax,%rdx
    b45f:	0f 83 aa 00 00 00    	jae    b50f <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x109>
	{
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    b465:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b469:	48 8b 10             	mov    (%rax),%rdx
    b46c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b470:	48 8b 40 08          	mov    0x8(%rax),%rax
					 - __new_num_nodes) / 2
    b474:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    b478:	48 d1 e8             	shr    %rax
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    b47b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    b482:	00 
			 + (__add_at_front ? __nodes_to_add : 0);
    b483:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    b487:	74 0a                	je     b493 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x8d>
    b489:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b48d:	48 c1 e0 03          	shl    $0x3,%rax
    b491:	eb 05                	jmp    b498 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x92>
    b493:	b8 00 00 00 00       	mov    $0x0,%eax
    b498:	48 01 c8             	add    %rcx,%rax
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    b49b:	48 01 d0             	add    %rdx,%rax
    b49e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  if (__new_nstart < this->_M_impl._M_start._M_node)
    b4a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b4a6:	48 8b 40 28          	mov    0x28(%rax),%rax
    b4aa:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    b4ae:	73 28                	jae    b4d8 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0xd2>
	    std::copy(this->_M_impl._M_start._M_node,
		      this->_M_impl._M_finish._M_node + 1,
    b4b0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b4b4:	48 8b 40 48          	mov    0x48(%rax),%rax
	    std::copy(this->_M_impl._M_start._M_node,
    b4b8:	48 8d 48 08          	lea    0x8(%rax),%rcx
    b4bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b4c0:	48 8b 40 28          	mov    0x28(%rax),%rax
    b4c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b4c8:	48 89 ce             	mov    %rcx,%rsi
    b4cb:	48 89 c7             	mov    %rax,%rdi
    b4ce:	e8 7a 0a 00 00       	call   bf4d <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
    b4d3:	e9 09 01 00 00       	jmp    b5e1 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x1db>
		      __new_nstart);
	  else
	    std::copy_backward(this->_M_impl._M_start._M_node,
			       this->_M_impl._M_finish._M_node + 1,
			       __new_nstart + __old_num_nodes);
    b4d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b4dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b4e3:	00 
	    std::copy_backward(this->_M_impl._M_start._M_node,
    b4e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4e8:	48 01 c2             	add    %rax,%rdx
			       this->_M_impl._M_finish._M_node + 1,
    b4eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b4ef:	48 8b 40 48          	mov    0x48(%rax),%rax
	    std::copy_backward(this->_M_impl._M_start._M_node,
    b4f3:	48 8d 48 08          	lea    0x8(%rax),%rcx
    b4f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b4fb:	48 8b 40 28          	mov    0x28(%rax),%rax
    b4ff:	48 89 ce             	mov    %rcx,%rsi
    b502:	48 89 c7             	mov    %rax,%rdi
    b505:	e8 8e 0a 00 00       	call   bf98 <_ZSt13copy_backwardIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
    b50a:	e9 d2 00 00 00       	jmp    b5e1 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x1db>
	}
      else
	{
	  size_type __new_map_size = this->_M_impl._M_map_size
    b50f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b513:	48 8b 58 08          	mov    0x8(%rax),%rbx
				     + std::max(this->_M_impl._M_map_size,
    b517:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b51b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b51f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b523:	48 89 c6             	mov    %rax,%rsi
    b526:	48 89 d7             	mov    %rdx,%rdi
    b529:	e8 c4 97 ff ff       	call   4cf2 <_ZSt3maxImERKT_S2_S2_>
    b52e:	48 8b 00             	mov    (%rax),%rax
    b531:	48 01 d8             	add    %rbx,%rax
	  size_type __new_map_size = this->_M_impl._M_map_size
    b534:	48 83 c0 02          	add    $0x2,%rax
    b538:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
						__nodes_to_add) + 2;

	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
    b53c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b540:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b544:	48 89 d6             	mov    %rdx,%rsi
    b547:	48 89 c7             	mov    %rax,%rdi
    b54a:	e8 5f e6 ff ff       	call   9bae <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>
    b54f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
    b553:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b557:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    b55b:	48 d1 e8             	shr    %rax
    b55e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b565:	00 
			 + (__add_at_front ? __nodes_to_add : 0);
    b566:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    b56a:	74 0a                	je     b576 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x170>
    b56c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b570:	48 c1 e0 03          	shl    $0x3,%rax
    b574:	eb 05                	jmp    b57b <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x175>
    b576:	b8 00 00 00 00       	mov    $0x0,%eax
    b57b:	48 01 c2             	add    %rax,%rdx
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
    b57e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b582:	48 01 d0             	add    %rdx,%rax
    b585:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  std::copy(this->_M_impl._M_start._M_node,
		    this->_M_impl._M_finish._M_node + 1,
    b589:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b58d:	48 8b 40 48          	mov    0x48(%rax),%rax
	  std::copy(this->_M_impl._M_start._M_node,
    b591:	48 8d 48 08          	lea    0x8(%rax),%rcx
    b595:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b599:	48 8b 40 28          	mov    0x28(%rax),%rax
    b59d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b5a1:	48 89 ce             	mov    %rcx,%rsi
    b5a4:	48 89 c7             	mov    %rax,%rdi
    b5a7:	e8 a1 09 00 00       	call   bf4d <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
		    __new_nstart);
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    b5ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b5b0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    b5b4:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    b5b8:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    b5bc:	48 8b 09             	mov    (%rcx),%rcx
    b5bf:	48 89 ce             	mov    %rcx,%rsi
    b5c2:	48 89 c7             	mov    %rax,%rdi
    b5c5:	e8 fa ca ff ff       	call   80c4 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>

	  this->_M_impl._M_map = __new_map;
    b5ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b5ce:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b5d2:	48 89 10             	mov    %rdx,(%rax)
	  this->_M_impl._M_map_size = __new_map_size;
    b5d5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b5d9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b5dd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	}

      this->_M_impl._M_start._M_set_node(__new_nstart);
    b5e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b5e5:	48 8d 50 10          	lea    0x10(%rax),%rdx
    b5e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5ed:	48 89 c6             	mov    %rax,%rsi
    b5f0:	48 89 d7             	mov    %rdx,%rdi
    b5f3:	e8 a2 e6 ff ff       	call   9c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
    b5f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b5fc:	48 83 c0 30          	add    $0x30,%rax
    b600:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b604:	48 c1 e2 03          	shl    $0x3,%rdx
    b608:	48 8d 4a f8          	lea    -0x8(%rdx),%rcx
    b60c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b610:	48 01 ca             	add    %rcx,%rdx
    b613:	48 89 d6             	mov    %rdx,%rsi
    b616:	48 89 c7             	mov    %rax,%rdi
    b619:	e8 7c e6 ff ff       	call   9c9a <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
    }
    b61e:	90                   	nop
    b61f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b623:	c9                   	leave
    b624:	c3                   	ret

000000000000b625 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b625:	55                   	push   %rbp
    b626:	48 89 e5             	mov    %rsp,%rbp
    b629:	48 83 ec 10          	sub    $0x10,%rsp
    b62d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b631:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b635:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b63d:	ba 00 00 00 00       	mov    $0x0,%edx
    b642:	48 89 ce             	mov    %rcx,%rsi
    b645:	48 89 c7             	mov    %rax,%rdi
    b648:	e8 97 09 00 00       	call   bfe4 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv>
    b64d:	c9                   	leave
    b64e:	c3                   	ret
    b64f:	90                   	nop

000000000000b650 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>:
      _M_addr() noexcept
    b650:	55                   	push   %rbp
    b651:	48 89 e5             	mov    %rsp,%rbp
    b654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    b658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b65c:	5d                   	pop    %rbp
    b65d:	c3                   	ret

000000000000b65e <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EEC1IS1_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    b65e:	55                   	push   %rbp
    b65f:	48 89 e5             	mov    %rsp,%rbp
    b662:	48 83 ec 10          	sub    $0x10,%rsp
    b666:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b66a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    b66e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b672:	48 89 c7             	mov    %rax,%rdi
    b675:	e8 c8 d4 ff ff       	call   8b42 <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    b67a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b67e:	48 89 02             	mov    %rax,(%rdx)
    b681:	90                   	nop
    b682:	c9                   	leave
    b683:	c3                   	ret

000000000000b684 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_get_nodeEv>:
      _M_get_node()
    b684:	55                   	push   %rbp
    b685:	48 89 e5             	mov    %rsp,%rbp
    b688:	48 83 ec 10          	sub    $0x10,%rsp
    b68c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    b690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b694:	48 89 c7             	mov    %rax,%rdi
    b697:	e8 30 f9 ff ff       	call   afcc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    b69c:	be 01 00 00 00       	mov    $0x1,%esi
    b6a1:	48 89 c7             	mov    %rax,%rdi
    b6a4:	e8 9c 09 00 00       	call   c045 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE8allocateERS7_m>
    b6a9:	c9                   	leave
    b6aa:	c3                   	ret
    b6ab:	90                   	nop

000000000000b6ac <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    b6ac:	55                   	push   %rbp
    b6ad:	48 89 e5             	mov    %rsp,%rbp
    b6b0:	41 56                	push   %r14
    b6b2:	41 55                	push   %r13
    b6b4:	41 54                	push   %r12
    b6b6:	53                   	push   %rbx
    b6b7:	48 83 ec 30          	sub    $0x30,%rsp
    b6bb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b6bf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b6c3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    b6c7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    b6cb:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    b6cf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b6d3:	48 89 c6             	mov    %rax,%rsi
    b6d6:	bf 30 00 00 00       	mov    $0x30,%edi
    b6db:	e8 a9 81 ff ff       	call   3889 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    b6e0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b6e4:	48 89 c7             	mov    %rax,%rdi
    b6e7:	e8 b3 d4 ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    b6ec:	49 89 c6             	mov    %rax,%r14
    b6ef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b6f3:	48 89 c7             	mov    %rax,%rdi
    b6f6:	e8 96 d4 ff ff       	call   8b91 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    b6fb:	49 89 c5             	mov    %rax,%r13
    b6fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b702:	48 89 c7             	mov    %rax,%rdi
    b705:	e8 79 d4 ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    b70a:	49 89 c4             	mov    %rax,%r12
    b70d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b711:	48 89 c7             	mov    %rax,%rdi
    b714:	e8 0b d4 ff ff       	call   8b24 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    b719:	48 89 c3             	mov    %rax,%rbx
    b71c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b720:	48 89 c7             	mov    %rax,%rdi
    b723:	e8 a4 f8 ff ff       	call   afcc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    b728:	4d 89 f0             	mov    %r14,%r8
    b72b:	4c 89 e9             	mov    %r13,%rcx
    b72e:	4c 89 e2             	mov    %r12,%rdx
    b731:	48 89 de             	mov    %rbx,%rsi
    b734:	48 89 c7             	mov    %rax,%rdi
    b737:	e8 33 09 00 00       	call   c06f <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEvRS7_PT_DpOT0_>
	}
    b73c:	eb 33                	jmp    b771 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_+0xc5>
	  __catch(...)
    b73e:	48 89 c7             	mov    %rax,%rdi
    b741:	e8 8a 79 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    b746:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b74a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b74e:	48 89 d6             	mov    %rdx,%rsi
    b751:	48 89 c7             	mov    %rax,%rdi
    b754:	e8 bb e6 ff ff       	call   9e14 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>
	      __throw_exception_again;
    b759:	e8 b2 7c ff ff       	call   3410 <__cxa_rethrow@plt>
	  __catch(...)
    b75e:	48 89 c3             	mov    %rax,%rbx
    b761:	e8 1a 7d ff ff       	call   3480 <__cxa_end_catch@plt>
    b766:	48 89 d8             	mov    %rbx,%rax
    b769:	48 89 c7             	mov    %rax,%rdi
    b76c:	e8 5f 7d ff ff       	call   34d0 <_Unwind_Resume@plt>
	}
    b771:	48 83 c4 30          	add    $0x30,%rsp
    b775:	5b                   	pop    %rbx
    b776:	41 5c                	pop    %r12
    b778:	41 5d                	pop    %r13
    b77a:	41 5e                	pop    %r14
    b77c:	5d                   	pop    %rbp
    b77d:	c3                   	ret

000000000000b77e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    b77e:	55                   	push   %rbp
    b77f:	48 89 e5             	mov    %rsp,%rbp
    b782:	48 83 ec 20          	sub    $0x20,%rsp
    b786:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    b78a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b78e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    b792:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b796:	48 89 d6             	mov    %rdx,%rsi
    b799:	48 89 c7             	mov    %rax,%rdi
    b79c:	e8 81 d9 ff ff       	call   9122 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    b7a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7a5:	c9                   	leave
    b7a6:	c3                   	ret
    b7a7:	90                   	nop

000000000000b7a8 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    b7a8:	55                   	push   %rbp
    b7a9:	48 89 e5             	mov    %rsp,%rbp
    b7ac:	48 83 ec 20          	sub    $0x20,%rsp
    b7b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b7b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    b7bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b7c0:	48 89 c7             	mov    %rax,%rdi
    b7c3:	e8 13 09 00 00       	call   c0db <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEOT_RNSt16remove_referenceIS9_E4typeE>
    b7c8:	48 8b 10             	mov    (%rax),%rdx
    b7cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7cf:	48 89 10             	mov    %rdx,(%rax)
    b7d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7d6:	48 89 c7             	mov    %rax,%rdi
    b7d9:	e8 0e 00 00 00       	call   b7ec <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    b7de:	48 8b 10             	mov    (%rax),%rdx
    b7e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7e5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b7e9:	90                   	nop
    b7ea:	c9                   	leave
    b7eb:	c3                   	ret

000000000000b7ec <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b7ec:	55                   	push   %rbp
    b7ed:	48 89 e5             	mov    %rsp,%rbp
    b7f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b7f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7f8:	5d                   	pop    %rbp
    b7f9:	c3                   	ret

000000000000b7fa <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>:
      _M_valptr() const
    b7fa:	55                   	push   %rbp
    b7fb:	48 89 e5             	mov    %rsp,%rbp
    b7fe:	48 83 ec 10          	sub    $0x10,%rsp
    b802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    b806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b80a:	48 83 c0 20          	add    $0x20,%rax
    b80e:	48 89 c7             	mov    %rax,%rdi
    b811:	e8 d4 08 00 00       	call   c0ea <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>
    b816:	c9                   	leave
    b817:	c3                   	ret

000000000000b818 <_ZNKSt10_Select1stISt4pairIKNSt6thread2idEmEEclERKS4_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    b818:	55                   	push   %rbp
    b819:	48 89 e5             	mov    %rsp,%rbp
    b81c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b820:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    b824:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b828:	5d                   	pop    %rbp
    b829:	c3                   	ret

000000000000b82a <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>:
      constexpr _Head_base()
    b82a:	55                   	push   %rbp
    b82b:	48 89 e5             	mov    %rsp,%rbp
    b82e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    b832:	90                   	nop
    b833:	5d                   	pop    %rbp
    b834:	c3                   	ret

000000000000b835 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b835:	55                   	push   %rbp
    b836:	48 89 e5             	mov    %rsp,%rbp
    b839:	48 83 ec 10          	sub    $0x10,%rsp
    b83d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b845:	48 89 c7             	mov    %rax,%rdi
    b848:	e8 b7 08 00 00       	call   c104 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>
    b84d:	c9                   	leave
    b84e:	c3                   	ret
    b84f:	90                   	nop

000000000000b850 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>:
      constexpr _Head_base()
    b850:	55                   	push   %rbp
    b851:	48 89 e5             	mov    %rsp,%rbp
    b854:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    b858:	90                   	nop
    b859:	5d                   	pop    %rbp
    b85a:	c3                   	ret

000000000000b85b <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b85b:	55                   	push   %rbp
    b85c:	48 89 e5             	mov    %rsp,%rbp
    b85f:	48 83 ec 10          	sub    $0x10,%rsp
    b863:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b867:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b86b:	48 89 c7             	mov    %rax,%rdi
    b86e:	e8 9f 08 00 00       	call   c112 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>
    b873:	c9                   	leave
    b874:	c3                   	ret
    b875:	90                   	nop

000000000000b876 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EEC1Ev>:
      constexpr _Head_base()
    b876:	55                   	push   %rbp
    b877:	48 89 e5             	mov    %rsp,%rbp
    b87a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    b87e:	90                   	nop
    b87f:	5d                   	pop    %rbp
    b880:	c3                   	ret

000000000000b881 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b881:	55                   	push   %rbp
    b882:	48 89 e5             	mov    %rsp,%rbp
    b885:	48 83 ec 10          	sub    $0x10,%rsp
    b889:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b88d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b891:	48 89 c7             	mov    %rax,%rdi
    b894:	e8 87 08 00 00       	call   c120 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERS3_>
    b899:	c9                   	leave
    b89a:	c3                   	ret

000000000000b89b <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b89b:	55                   	push   %rbp
    b89c:	48 89 e5             	mov    %rsp,%rbp
    b89f:	48 83 ec 10          	sub    $0x10,%rsp
    b8a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8ab:	48 89 c7             	mov    %rax,%rdi
    b8ae:	e8 7b 08 00 00       	call   c12e <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>
    b8b3:	c9                   	leave
    b8b4:	c3                   	ret

000000000000b8b5 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    b8b5:	55                   	push   %rbp
    b8b6:	48 89 e5             	mov    %rsp,%rbp
    b8b9:	48 83 ec 10          	sub    $0x10,%rsp
    b8bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    b8c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8c5:	48 89 c7             	mov    %rax,%rdi
    b8c8:	e8 6f 08 00 00       	call   c13c <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>
    b8cd:	c9                   	leave
    b8ce:	c3                   	ret

000000000000b8cf <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b8cf:	55                   	push   %rbp
    b8d0:	48 89 e5             	mov    %rsp,%rbp
    b8d3:	48 83 ec 10          	sub    $0x10,%rsp
    b8d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8df:	48 89 c7             	mov    %rax,%rdi
    b8e2:	e8 6f 08 00 00       	call   c156 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EE7_M_headERS4_>
    b8e7:	c9                   	leave
    b8e8:	c3                   	ret

000000000000b8e9 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    b8e9:	55                   	push   %rbp
    b8ea:	48 89 e5             	mov    %rsp,%rbp
    b8ed:	48 83 ec 10          	sub    $0x10,%rsp
    b8f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    b8f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8f9:	48 89 c7             	mov    %rax,%rdi
    b8fc:	e8 63 08 00 00       	call   c164 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERKS5_>
    b901:	c9                   	leave
    b902:	c3                   	ret

000000000000b903 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b903:	55                   	push   %rbp
    b904:	48 89 e5             	mov    %rsp,%rbp
    b907:	48 83 ec 10          	sub    $0x10,%rsp
    b90b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b90f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b913:	48 89 c7             	mov    %rax,%rdi
    b916:	e8 63 08 00 00       	call   c17e <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>
    b91b:	c9                   	leave
    b91c:	c3                   	ret

000000000000b91d <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    b91d:	55                   	push   %rbp
    b91e:	48 89 e5             	mov    %rsp,%rbp
    b921:	48 83 ec 10          	sub    $0x10,%rsp
    b925:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    b929:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b92d:	48 89 c7             	mov    %rax,%rdi
    b930:	e8 57 08 00 00       	call   c18c <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>
    b935:	c9                   	leave
    b936:	c3                   	ret

000000000000b937 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b937:	55                   	push   %rbp
    b938:	48 89 e5             	mov    %rsp,%rbp
    b93b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b93f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b943:	5d                   	pop    %rbp
    b944:	c3                   	ret

000000000000b945 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    b945:	55                   	push   %rbp
    b946:	48 89 e5             	mov    %rsp,%rbp
    b949:	53                   	push   %rbx
    b94a:	48 83 ec 18          	sub    $0x18,%rsp
    b94e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b952:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    b956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b95a:	48 89 c7             	mov    %rax,%rdi
    b95d:	e8 a4 81 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    b962:	48 89 c6             	mov    %rax,%rsi
    b965:	bf 08 00 00 00       	mov    $0x8,%edi
    b96a:	e8 1a 7f ff ff       	call   3889 <_ZnwmPv>
    b96f:	48 89 c3             	mov    %rax,%rbx
    b972:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b976:	48 89 c7             	mov    %rax,%rdi
    b979:	e8 b9 ff ff ff       	call   b937 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>
    b97e:	48 8b 00             	mov    (%rax),%rax
    b981:	48 89 03             	mov    %rax,(%rbx)
	  }
    b984:	90                   	nop
    b985:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b989:	c9                   	leave
    b98a:	c3                   	ret
    b98b:	90                   	nop

000000000000b98c <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERT_v>:
      _M_access() noexcept
    b98c:	55                   	push   %rbp
    b98d:	48 89 e5             	mov    %rsp,%rbp
    b990:	48 83 ec 10          	sub    $0x10,%rsp
    b994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    b998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b99c:	48 89 c7             	mov    %rax,%rdi
    b99f:	e8 62 81 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    b9a4:	c9                   	leave
    b9a5:	c3                   	ret

000000000000b9a6 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b9a6:	55                   	push   %rbp
    b9a7:	48 89 e5             	mov    %rsp,%rbp
    b9aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b9ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9b2:	5d                   	pop    %rbp
    b9b3:	c3                   	ret

000000000000b9b4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE0_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    b9b4:	55                   	push   %rbp
    b9b5:	48 89 e5             	mov    %rsp,%rbp
    b9b8:	48 83 ec 10          	sub    $0x10,%rsp
    b9bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    b9c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9c8:	48 89 c7             	mov    %rax,%rdi
    b9cb:	e8 36 81 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    b9d0:	48 89 c6             	mov    %rax,%rsi
    b9d3:	bf 01 00 00 00       	mov    $0x1,%edi
    b9d8:	e8 ac 7e ff ff       	call   3889 <_ZnwmPv>
    b9dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9e1:	48 89 c7             	mov    %rax,%rdi
    b9e4:	e8 bd ff ff ff       	call   b9a6 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE0_EOT_RNSt16remove_referenceIS5_E4typeE>
	  }
    b9e9:	90                   	nop
    b9ea:	c9                   	leave
    b9eb:	c3                   	ret

000000000000b9ec <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE0_EERT_v>:
      _M_access() noexcept
    b9ec:	55                   	push   %rbp
    b9ed:	48 89 e5             	mov    %rsp,%rbp
    b9f0:	48 83 ec 10          	sub    $0x10,%rsp
    b9f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    b9f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9fc:	48 89 c7             	mov    %rax,%rdi
    b9ff:	e8 02 81 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    ba04:	c9                   	leave
    ba05:	c3                   	ret

000000000000ba06 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ba06:	55                   	push   %rbp
    ba07:	48 89 e5             	mov    %rsp,%rbp
    ba0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ba0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba12:	5d                   	pop    %rbp
    ba13:	c3                   	ret

000000000000ba14 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE1_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    ba14:	55                   	push   %rbp
    ba15:	48 89 e5             	mov    %rsp,%rbp
    ba18:	48 83 ec 10          	sub    $0x10,%rsp
    ba1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    ba24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba28:	48 89 c7             	mov    %rax,%rdi
    ba2b:	e8 d6 80 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    ba30:	48 89 c6             	mov    %rax,%rsi
    ba33:	bf 01 00 00 00       	mov    $0x1,%edi
    ba38:	e8 4c 7e ff ff       	call   3889 <_ZnwmPv>
    ba3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba41:	48 89 c7             	mov    %rax,%rdi
    ba44:	e8 bd ff ff ff       	call   ba06 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE1_EOT_RNSt16remove_referenceIS5_E4typeE>
	  }
    ba49:	90                   	nop
    ba4a:	c9                   	leave
    ba4b:	c3                   	ret

000000000000ba4c <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE1_EERT_v>:
      _M_access() noexcept
    ba4c:	55                   	push   %rbp
    ba4d:	48 89 e5             	mov    %rsp,%rbp
    ba50:	48 83 ec 10          	sub    $0x10,%rsp
    ba54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    ba58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba5c:	48 89 c7             	mov    %rax,%rdi
    ba5f:	e8 a2 80 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    ba64:	c9                   	leave
    ba65:	c3                   	ret

000000000000ba66 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ba66:	55                   	push   %rbp
    ba67:	48 89 e5             	mov    %rsp,%rbp
    ba6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ba6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba72:	5d                   	pop    %rbp
    ba73:	c3                   	ret

000000000000ba74 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE2_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    ba74:	55                   	push   %rbp
    ba75:	48 89 e5             	mov    %rsp,%rbp
    ba78:	48 83 ec 10          	sub    $0x10,%rsp
    ba7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    ba84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba88:	48 89 c7             	mov    %rax,%rdi
    ba8b:	e8 76 80 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    ba90:	48 89 c6             	mov    %rax,%rsi
    ba93:	bf 01 00 00 00       	mov    $0x1,%edi
    ba98:	e8 ec 7d ff ff       	call   3889 <_ZnwmPv>
    ba9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    baa1:	48 89 c7             	mov    %rax,%rdi
    baa4:	e8 bd ff ff ff       	call   ba66 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE2_EOT_RNSt16remove_referenceIS5_E4typeE>
	  }
    baa9:	90                   	nop
    baaa:	c9                   	leave
    baab:	c3                   	ret

000000000000baac <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE2_EERT_v>:
      _M_access() noexcept
    baac:	55                   	push   %rbp
    baad:	48 89 e5             	mov    %rsp,%rbp
    bab0:	48 83 ec 10          	sub    $0x10,%rsp
    bab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    bab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    babc:	48 89 c7             	mov    %rax,%rdi
    babf:	e8 42 80 ff ff       	call   3b06 <_ZNSt9_Any_data9_M_accessEv>
    bac4:	c9                   	leave
    bac5:	c3                   	ret

000000000000bac6 <_ZNSt15__new_allocatorISt17reference_wrapperIbEEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    bac6:	55                   	push   %rbp
    bac7:	48 89 e5             	mov    %rsp,%rbp
    baca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bace:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bad2:	90                   	nop
    bad3:	5d                   	pop    %rbp
    bad4:	c3                   	ret
    bad5:	90                   	nop

000000000000bad6 <_ZNSt15__new_allocatorISt17reference_wrapperIbEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bad6:	55                   	push   %rbp
    bad7:	48 89 e5             	mov    %rsp,%rbp
    bada:	48 83 ec 20          	sub    $0x20,%rsp
    bade:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bae2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bae6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    baea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    baee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    baf5:	00 
    baf6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bafa:	48 89 d6             	mov    %rdx,%rsi
    bafd:	48 89 c7             	mov    %rax,%rdi
    bb00:	e8 cb 77 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    bb05:	c9                   	leave
    bb06:	c3                   	ret

000000000000bb07 <_ZNSt16allocator_traitsISaISt17reference_wrapperIbEEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bb07:	55                   	push   %rbp
    bb08:	48 89 e5             	mov    %rsp,%rbp
    bb0b:	48 83 ec 10          	sub    $0x10,%rsp
    bb0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bb13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb17:	48 89 c7             	mov    %rax,%rdi
    bb1a:	e8 87 06 00 00       	call   c1a6 <_ZNKSt15__new_allocatorISt17reference_wrapperIbEE8max_sizeEv>
      }
    bb1f:	c9                   	leave
    bb20:	c3                   	ret
    bb21:	90                   	nop

000000000000bb22 <_ZNSt15__new_allocatorISt17reference_wrapperIbEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bb22:	55                   	push   %rbp
    bb23:	48 89 e5             	mov    %rsp,%rbp
    bb26:	48 83 ec 20          	sub    $0x20,%rsp
    bb2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb32:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bb36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb3a:	48 89 c7             	mov    %rax,%rdi
    bb3d:	e8 7e 06 00 00       	call   c1c0 <_ZNKSt15__new_allocatorISt17reference_wrapperIbEE11_M_max_sizeEv>
    bb42:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb46:	0f 92 c0             	setb   %al
    bb49:	0f b6 c0             	movzbl %al,%eax
    bb4c:	48 85 c0             	test   %rax,%rax
    bb4f:	0f 95 c0             	setne  %al
    bb52:	84 c0                	test   %al,%al
    bb54:	74 1a                	je     bb70 <_ZNSt15__new_allocatorISt17reference_wrapperIbEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bb56:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bb5d:	ff ff 1f 
    bb60:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb64:	73 05                	jae    bb6b <_ZNSt15__new_allocatorISt17reference_wrapperIbEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bb66:	e8 a5 76 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bb6b:	e8 20 75 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bb70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb74:	48 c1 e0 03          	shl    $0x3,%rax
    bb78:	48 89 c7             	mov    %rax,%rdi
    bb7b:	e8 40 77 ff ff       	call   32c0 <_Znwm@plt>
    bb80:	90                   	nop
      }
    bb81:	c9                   	leave
    bb82:	c3                   	ret

000000000000bb83 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKSt17reference_wrapperIbEPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    bb83:	55                   	push   %rbp
    bb84:	48 89 e5             	mov    %rsp,%rbp
    bb87:	48 83 ec 20          	sub    $0x20,%rsp
    bb8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb93:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	{ return std::__do_uninit_copy(__first, __last, __result); }
    bb97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bb9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bba3:	48 89 ce             	mov    %rcx,%rsi
    bba6:	48 89 c7             	mov    %rax,%rdi
    bba9:	e8 26 06 00 00       	call   c1d4 <_ZSt16__do_uninit_copyIPKSt17reference_wrapperIbEPS1_ET0_T_S6_S5_>
    bbae:	c9                   	leave
    bbaf:	c3                   	ret

000000000000bbb0 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    bbb0:	55                   	push   %rbp
    bbb1:	48 89 e5             	mov    %rsp,%rbp
    bbb4:	48 83 ec 10          	sub    $0x10,%rsp
    bbb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    bbbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc0:	48 89 c7             	mov    %rax,%rdi
    bbc3:	e8 62 06 00 00       	call   c22a <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>
    bbc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbcc:	48 89 c7             	mov    %rax,%rdi
    bbcf:	e8 72 06 00 00       	call   c246 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>
    bbd4:	90                   	nop
    bbd5:	c9                   	leave
    bbd6:	c3                   	ret

000000000000bbd7 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    bbd7:	55                   	push   %rbp
    bbd8:	48 89 e5             	mov    %rsp,%rbp
    bbdb:	48 83 ec 10          	sub    $0x10,%rsp
    bbdf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe7:	48 89 c7             	mov    %rax,%rdi
    bbea:	e8 6d 06 00 00       	call   c25c <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>
    bbef:	c9                   	leave
    bbf0:	c3                   	ret

000000000000bbf1 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    bbf1:	55                   	push   %rbp
    bbf2:	48 89 e5             	mov    %rsp,%rbp
    bbf5:	48 83 ec 10          	sub    $0x10,%rsp
    bbf9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    bbfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc01:	48 89 c7             	mov    %rax,%rdi
    bc04:	e8 61 06 00 00       	call   c26a <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>
    bc09:	c9                   	leave
    bc0a:	c3                   	ret

000000000000bc0b <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    bc0b:	55                   	push   %rbp
    bc0c:	48 89 e5             	mov    %rsp,%rbp
    bc0f:	48 83 ec 10          	sub    $0x10,%rsp
    bc13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    bc17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc1b:	48 89 c7             	mov    %rax,%rdi
    bc1e:	e8 61 06 00 00       	call   c284 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>
    bc23:	c9                   	leave
    bc24:	c3                   	ret
    bc25:	90                   	nop

000000000000bc26 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bc26:	55                   	push   %rbp
    bc27:	48 89 e5             	mov    %rsp,%rbp
    bc2a:	48 83 ec 20          	sub    $0x20,%rsp
    bc2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc36:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bc3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc3e:	48 89 c7             	mov    %rax,%rdi
    bc41:	e8 58 06 00 00       	call   c29e <_ZNKSt15__new_allocatorIPSt8functionIFvvEEE11_M_max_sizeEv>
    bc46:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc4a:	0f 92 c0             	setb   %al
    bc4d:	0f b6 c0             	movzbl %al,%eax
    bc50:	48 85 c0             	test   %rax,%rax
    bc53:	0f 95 c0             	setne  %al
    bc56:	84 c0                	test   %al,%al
    bc58:	74 1a                	je     bc74 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bc5a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bc61:	ff ff 1f 
    bc64:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc68:	73 05                	jae    bc6f <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bc6a:	e8 a1 75 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bc6f:	e8 1c 74 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bc74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc78:	48 c1 e0 03          	shl    $0x3,%rax
    bc7c:	48 89 c7             	mov    %rax,%rdi
    bc7f:	e8 3c 76 ff ff       	call   32c0 <_Znwm@plt>
    bc84:	90                   	nop
      }
    bc85:	c9                   	leave
    bc86:	c3                   	ret
    bc87:	90                   	nop

000000000000bc88 <_ZNSt15__new_allocatorISt8functionIFvvEEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bc88:	55                   	push   %rbp
    bc89:	48 89 e5             	mov    %rsp,%rbp
    bc8c:	48 83 ec 20          	sub    $0x20,%rsp
    bc90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bc9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bca0:	48 c1 e0 05          	shl    $0x5,%rax
    bca4:	48 89 c2             	mov    %rax,%rdx
    bca7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bcab:	48 89 d6             	mov    %rdx,%rsi
    bcae:	48 89 c7             	mov    %rax,%rdi
    bcb1:	e8 1a 76 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    bcb6:	c9                   	leave
    bcb7:	c3                   	ret

000000000000bcb8 <_ZNSt15__new_allocatorIPSt8functionIFvvEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bcb8:	55                   	push   %rbp
    bcb9:	48 89 e5             	mov    %rsp,%rbp
    bcbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcc0:	90                   	nop
    bcc1:	5d                   	pop    %rbp
    bcc2:	c3                   	ret

000000000000bcc3 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    bcc3:	55                   	push   %rbp
    bcc4:	48 89 e5             	mov    %rsp,%rbp
    bcc7:	48 83 ec 10          	sub    $0x10,%rsp
    bccb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bccf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    bcd3:	eb 19                	jmp    bcee <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    bcd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd9:	48 89 c7             	mov    %rax,%rdi
    bcdc:	e8 d1 05 00 00       	call   c2b2 <_ZSt11__addressofISt8functionIFvvEEEPT_RS3_>
    bce1:	48 89 c7             	mov    %rax,%rdi
    bce4:	e8 d7 05 00 00       	call   c2c0 <_ZSt8_DestroyISt8functionIFvvEEEvPT_>
	  for (; __first != __last; ++__first)
    bce9:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    bcee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bcf6:	75 dd                	jne    bcd5 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_+0x12>
	}
    bcf8:	90                   	nop
    bcf9:	90                   	nop
    bcfa:	c9                   	leave
    bcfb:	c3                   	ret

000000000000bcfc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
    bcfc:	55                   	push   %rbp
    bcfd:	48 89 e5             	mov    %rsp,%rbp
    bd00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    bd08:	90                   	nop
    bd09:	5d                   	pop    %rbp
    bd0a:	c3                   	ret
    bd0b:	90                   	nop

000000000000bd0c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE10deallocateEPS6_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bd0c:	55                   	push   %rbp
    bd0d:	48 89 e5             	mov    %rsp,%rbp
    bd10:	48 83 ec 20          	sub    $0x20,%rsp
    bd14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd1c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bd20:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd24:	48 89 d0             	mov    %rdx,%rax
    bd27:	48 01 c0             	add    %rax,%rax
    bd2a:	48 01 d0             	add    %rdx,%rax
    bd2d:	48 c1 e0 04          	shl    $0x4,%rax
    bd31:	48 89 c2             	mov    %rax,%rdx
    bd34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd38:	48 89 d6             	mov    %rdx,%rsi
    bd3b:	48 89 c7             	mov    %rax,%rdi
    bd3e:	e8 8d 75 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    bd43:	c9                   	leave
    bd44:	c3                   	ret
    bd45:	90                   	nop

000000000000bd46 <_ZNKSt15__new_allocatorISt6threadE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    bd46:	55                   	push   %rbp
    bd47:	48 89 e5             	mov    %rsp,%rbp
    bd4a:	48 83 ec 10          	sub    $0x10,%rsp
    bd4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    bd52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd56:	48 89 c7             	mov    %rax,%rdi
    bd59:	e8 4c 00 00 00       	call   bdaa <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>
    bd5e:	c9                   	leave
    bd5f:	c3                   	ret

000000000000bd60 <_ZNSt6threadC1Ev>:
    thread() noexcept = default;
    bd60:	55                   	push   %rbp
    bd61:	48 89 e5             	mov    %rsp,%rbp
    bd64:	48 83 ec 10          	sub    $0x10,%rsp
    bd68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd70:	48 89 c7             	mov    %rax,%rdi
    bd73:	e8 b2 7e ff ff       	call   3c2a <_ZNSt6thread2idC1Ev>
    bd78:	90                   	nop
    bd79:	c9                   	leave
    bd7a:	c3                   	ret

000000000000bd7b <_ZSt10_ConstructISt6threadJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bd7b:	55                   	push   %rbp
    bd7c:	48 89 e5             	mov    %rsp,%rbp
    bd7f:	48 83 ec 10          	sub    $0x10,%rsp
    bd83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bd87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd8b:	48 89 c6             	mov    %rax,%rsi
    bd8e:	bf 08 00 00 00       	mov    $0x8,%edi
    bd93:	e8 f1 7a ff ff       	call   3889 <_ZnwmPv>
    bd98:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    bd9f:	48 89 c7             	mov    %rax,%rdi
    bda2:	e8 b9 ff ff ff       	call   bd60 <_ZNSt6threadC1Ev>
    }
    bda7:	90                   	nop
    bda8:	c9                   	leave
    bda9:	c3                   	ret

000000000000bdaa <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bdaa:	55                   	push   %rbp
    bdab:	48 89 e5             	mov    %rsp,%rbp
    bdae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bdb2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bdb9:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    bdbc:	5d                   	pop    %rbp
    bdbd:	c3                   	ret

000000000000bdbe <_ZSt19__relocate_object_aISt6threadS0_SaIS0_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
    bdbe:	55                   	push   %rbp
    bdbf:	48 89 e5             	mov    %rsp,%rbp
    bdc2:	48 83 ec 20          	sub    $0x20,%rsp
    bdc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
    bdd2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bdd6:	48 89 c7             	mov    %rax,%rdi
    bdd9:	e8 fd 04 00 00       	call   c2db <_ZSt4moveIRSt6threadEONSt16remove_referenceIT_E4typeEOS3_>
    bdde:	48 89 c2             	mov    %rax,%rdx
    bde1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    bde5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bde9:	48 89 ce             	mov    %rcx,%rsi
    bdec:	48 89 c7             	mov    %rax,%rdi
    bdef:	e8 f5 04 00 00       	call   c2e9 <_ZNSt16allocator_traitsISaISt6threadEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
    bdf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bdf8:	48 89 c7             	mov    %rax,%rdi
    bdfb:	e8 63 f0 ff ff       	call   ae63 <_ZSt11__addressofISt6threadEPT_RS1_>
    be00:	48 89 c2             	mov    %rax,%rdx
    be03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be07:	48 89 d6             	mov    %rdx,%rsi
    be0a:	48 89 c7             	mov    %rax,%rdi
    be0d:	e8 10 05 00 00       	call   c322 <_ZNSt16allocator_traitsISaISt6threadEE7destroyIS0_EEvRS1_PT_>
    }
    be12:	90                   	nop
    be13:	c9                   	leave
    be14:	c3                   	ret
    be15:	90                   	nop

000000000000be16 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EEC1IS2_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    be16:	55                   	push   %rbp
    be17:	48 89 e5             	mov    %rsp,%rbp
    be1a:	48 83 ec 10          	sub    $0x10,%rsp
    be1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    be26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be2a:	48 89 c7             	mov    %rax,%rdi
    be2d:	e8 b8 aa ff ff       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    be32:	48 8b 10             	mov    (%rax),%rdx
    be35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be39:	48 89 10             	mov    %rdx,(%rax)
    be3c:	90                   	nop
    be3d:	c9                   	leave
    be3e:	c3                   	ret
    be3f:	90                   	nop

000000000000be40 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEEC1Ev>:
      _Tuple_impl()
    be40:	55                   	push   %rbp
    be41:	48 89 e5             	mov    %rsp,%rbp
    be44:	48 83 ec 10          	sub    $0x10,%rsp
    be48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    be4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be50:	48 89 c7             	mov    %rax,%rdi
    be53:	e8 f0 04 00 00       	call   c348 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EEC1Ev>
    be58:	90                   	nop
    be59:	c9                   	leave
    be5a:	c3                   	ret
    be5b:	90                   	nop

000000000000be5c <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EEC1Ev>:
      constexpr _Head_base()
    be5c:	55                   	push   %rbp
    be5d:	48 89 e5             	mov    %rsp,%rbp
    be60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    be64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be68:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    be6f:	90                   	nop
    be70:	5d                   	pop    %rbp
    be71:	c3                   	ret

000000000000be72 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    be72:	55                   	push   %rbp
    be73:	48 89 e5             	mov    %rsp,%rbp
    be76:	48 83 ec 10          	sub    $0x10,%rsp
    be7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be82:	48 89 c7             	mov    %rax,%rdi
    be85:	e8 c9 04 00 00       	call   c353 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EE7_M_headERS3_>
    be8a:	c9                   	leave
    be8b:	c3                   	ret

000000000000be8c <_ZSt12__get_helperILm1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    be8c:	55                   	push   %rbp
    be8d:	48 89 e5             	mov    %rsp,%rbp
    be90:	48 83 ec 10          	sub    $0x10,%rsp
    be94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    be98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be9c:	48 89 c7             	mov    %rax,%rdi
    be9f:	e8 bd 04 00 00       	call   c361 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_>
    bea4:	c9                   	leave
    bea5:	c3                   	ret

000000000000bea6 <_ZNSt8functionIFvvEEC1EOS1_>:
      function(function&& __x) noexcept
    bea6:	55                   	push   %rbp
    bea7:	48 89 e5             	mov    %rsp,%rbp
    beaa:	48 83 ec 10          	sub    $0x10,%rsp
    beae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    beb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Function_base(), _M_invoker(__x._M_invoker)
    beb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    bebe:	0f 11 00             	movups %xmm0,(%rax)
    bec1:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    bec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beca:	48 89 c7             	mov    %rax,%rdi
    becd:	e8 a6 93 ff ff       	call   5278 <_ZNSt14_Function_baseC1Ev>
    bed2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bed6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    beda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bede:	48 89 50 18          	mov    %rdx,0x18(%rax)
	if (static_cast<bool>(__x))
    bee2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bee6:	48 89 c7             	mov    %rax,%rdi
    bee9:	e8 e8 c9 ff ff       	call   88d6 <_ZNKSt8functionIFvvEEcvbEv>
    beee:	84 c0                	test   %al,%al
    bef0:	74 3e                	je     bf30 <_ZNSt8functionIFvvEEC1EOS1_+0x8a>
	    _M_functor = __x._M_functor;
    bef2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bef6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    befa:	48 8b 50 08          	mov    0x8(%rax),%rdx
    befe:	48 8b 00             	mov    (%rax),%rax
    bf01:	48 89 01             	mov    %rax,(%rcx)
    bf04:	48 89 51 08          	mov    %rdx,0x8(%rcx)
	    _M_manager = __x._M_manager;
    bf08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf0c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    bf10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf14:	48 89 50 10          	mov    %rdx,0x10(%rax)
	    __x._M_manager = nullptr;
    bf18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf1c:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    bf23:	00 
	    __x._M_invoker = nullptr;
    bf24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf28:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    bf2f:	00 
      }
    bf30:	90                   	nop
    bf31:	c9                   	leave
    bf32:	c3                   	ret

000000000000bf33 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bf33:	55                   	push   %rbp
    bf34:	48 89 e5             	mov    %rsp,%rbp
    bf37:	48 83 ec 10          	sub    $0x10,%rsp
    bf3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bf3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf43:	48 89 c7             	mov    %rax,%rdi
    bf46:	e8 31 04 00 00       	call   c37c <_ZNKSt15__new_allocatorISt8functionIFvvEEE8max_sizeEv>
      }
    bf4b:	c9                   	leave
    bf4c:	c3                   	ret

000000000000bf4d <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    bf4d:	55                   	push   %rbp
    bf4e:	48 89 e5             	mov    %rsp,%rbp
    bf51:	53                   	push   %rbx
    bf52:	48 83 ec 28          	sub    $0x28,%rsp
    bf56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bf5a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bf5e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    bf62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bf66:	48 89 c7             	mov    %rax,%rdi
    bf69:	e8 28 04 00 00       	call   c396 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    bf6e:	48 89 c3             	mov    %rax,%rbx
    bf71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf75:	48 89 c7             	mov    %rax,%rdi
    bf78:	e8 19 04 00 00       	call   c396 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    bf7d:	48 89 c1             	mov    %rax,%rcx
    bf80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf84:	48 89 c2             	mov    %rax,%rdx
    bf87:	48 89 de             	mov    %rbx,%rsi
    bf8a:	48 89 cf             	mov    %rcx,%rdi
    bf8d:	e8 12 04 00 00       	call   c3a4 <_ZSt13__copy_move_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    }
    bf92:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bf96:	c9                   	leave
    bf97:	c3                   	ret

000000000000bf98 <_ZSt13copy_backwardIPPSt8functionIFvvEES4_ET0_T_S6_S5_>:
   *  that the start of the output range may overlap [first,last).
  */
  template<typename _BI1, typename _BI2>
    _GLIBCXX20_CONSTEXPR
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
    bf98:	55                   	push   %rbp
    bf99:	48 89 e5             	mov    %rsp,%rbp
    bf9c:	53                   	push   %rbx
    bf9d:	48 83 ec 28          	sub    $0x28,%rsp
    bfa1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bfa5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bfa9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_BI2,
	    typename iterator_traits<_BI1>::reference>)
      __glibcxx_requires_can_decrement_range(__first, __last, __result);

      return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    bfad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bfb1:	48 89 c7             	mov    %rax,%rdi
    bfb4:	e8 dd 03 00 00       	call   c396 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    bfb9:	48 89 c3             	mov    %rax,%rbx
    bfbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfc0:	48 89 c7             	mov    %rax,%rdi
    bfc3:	e8 ce 03 00 00       	call   c396 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    bfc8:	48 89 c1             	mov    %rax,%rcx
    bfcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bfcf:	48 89 c2             	mov    %rax,%rdx
    bfd2:	48 89 de             	mov    %rbx,%rsi
    bfd5:	48 89 cf             	mov    %rcx,%rdi
    bfd8:	e8 31 04 00 00       	call   c40e <_ZSt22__copy_move_backward_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    }
    bfdd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bfe1:	c9                   	leave
    bfe2:	c3                   	ret
    bfe3:	90                   	nop

000000000000bfe4 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bfe4:	55                   	push   %rbp
    bfe5:	48 89 e5             	mov    %rsp,%rbp
    bfe8:	48 83 ec 20          	sub    $0x20,%rsp
    bfec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bff0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bff4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bffc:	48 89 c7             	mov    %rax,%rdi
    bfff:	e8 74 04 00 00       	call   c478 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>
    c004:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c008:	0f 92 c0             	setb   %al
    c00b:	0f b6 c0             	movzbl %al,%eax
    c00e:	48 85 c0             	test   %rax,%rax
    c011:	0f 95 c0             	setne  %al
    c014:	84 c0                	test   %al,%al
    c016:	74 1a                	je     c032 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c018:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
    c01f:	ff ff 07 
    c022:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c026:	73 05                	jae    c02d <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c028:	e8 e3 71 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c02d:	e8 5e 70 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c032:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c036:	48 c1 e0 05          	shl    $0x5,%rax
    c03a:	48 89 c7             	mov    %rax,%rdi
    c03d:	e8 7e 72 ff ff       	call   32c0 <_Znwm@plt>
    c042:	90                   	nop
      }
    c043:	c9                   	leave
    c044:	c3                   	ret

000000000000c045 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE8allocateERS7_m>:
      allocate(allocator_type& __a, size_type __n)
    c045:	55                   	push   %rbp
    c046:	48 89 e5             	mov    %rsp,%rbp
    c049:	48 83 ec 10          	sub    $0x10,%rsp
    c04d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c051:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c055:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c05d:	ba 00 00 00 00       	mov    $0x0,%edx
    c062:	48 89 ce             	mov    %rcx,%rsi
    c065:	48 89 c7             	mov    %rax,%rdi
    c068:	e8 1f 04 00 00       	call   c48c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv>
    c06d:	c9                   	leave
    c06e:	c3                   	ret

000000000000c06f <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEvRS7_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    c06f:	55                   	push   %rbp
    c070:	48 89 e5             	mov    %rsp,%rbp
    c073:	41 54                	push   %r12
    c075:	53                   	push   %rbx
    c076:	48 83 ec 30          	sub    $0x30,%rsp
    c07a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c07e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c082:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c086:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    c08a:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    c08e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c092:	48 89 c7             	mov    %rax,%rdi
    c095:	e8 05 cb ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    c09a:	49 89 c4             	mov    %rax,%r12
    c09d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c0a1:	48 89 c7             	mov    %rax,%rdi
    c0a4:	e8 e8 ca ff ff       	call   8b91 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    c0a9:	48 89 c3             	mov    %rax,%rbx
    c0ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c0b0:	48 89 c7             	mov    %rax,%rdi
    c0b3:	e8 cb ca ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    c0b8:	48 89 c2             	mov    %rax,%rdx
    c0bb:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c0bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0c3:	4d 89 e0             	mov    %r12,%r8
    c0c6:	48 89 d9             	mov    %rbx,%rcx
    c0c9:	48 89 c7             	mov    %rax,%rdi
    c0cc:	e8 4b 04 00 00       	call   c51c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_>
	}
    c0d1:	90                   	nop
    c0d2:	48 83 c4 30          	add    $0x30,%rsp
    c0d6:	5b                   	pop    %rbx
    c0d7:	41 5c                	pop    %r12
    c0d9:	5d                   	pop    %rbp
    c0da:	c3                   	ret

000000000000c0db <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c0db:	55                   	push   %rbp
    c0dc:	48 89 e5             	mov    %rsp,%rbp
    c0df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c0e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0e7:	5d                   	pop    %rbp
    c0e8:	c3                   	ret
    c0e9:	90                   	nop

000000000000c0ea <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    c0ea:	55                   	push   %rbp
    c0eb:	48 89 e5             	mov    %rsp,%rbp
    c0ee:	48 83 ec 10          	sub    $0x10,%rsp
    c0f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    c0f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0fa:	48 89 c7             	mov    %rax,%rdi
    c0fd:	e8 ca 04 00 00       	call   c5cc <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>
    c102:	c9                   	leave
    c103:	c3                   	ret

000000000000c104 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c104:	55                   	push   %rbp
    c105:	48 89 e5             	mov    %rsp,%rbp
    c108:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c10c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c110:	5d                   	pop    %rbp
    c111:	c3                   	ret

000000000000c112 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>:
    c112:	55                   	push   %rbp
    c113:	48 89 e5             	mov    %rsp,%rbp
    c116:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c11a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c11e:	5d                   	pop    %rbp
    c11f:	c3                   	ret

000000000000c120 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERS3_>:
    c120:	55                   	push   %rbp
    c121:	48 89 e5             	mov    %rsp,%rbp
    c124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c12c:	5d                   	pop    %rbp
    c12d:	c3                   	ret

000000000000c12e <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c12e:	55                   	push   %rbp
    c12f:	48 89 e5             	mov    %rsp,%rbp
    c132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c13a:	5d                   	pop    %rbp
    c13b:	c3                   	ret

000000000000c13c <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c13c:	55                   	push   %rbp
    c13d:	48 89 e5             	mov    %rsp,%rbp
    c140:	48 83 ec 10          	sub    $0x10,%rsp
    c144:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c14c:	48 89 c7             	mov    %rax,%rdi
    c14f:	e8 86 04 00 00       	call   c5da <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>
    c154:	c9                   	leave
    c155:	c3                   	ret

000000000000c156 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c156:	55                   	push   %rbp
    c157:	48 89 e5             	mov    %rsp,%rbp
    c15a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c15e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c162:	5d                   	pop    %rbp
    c163:	c3                   	ret

000000000000c164 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c164:	55                   	push   %rbp
    c165:	48 89 e5             	mov    %rsp,%rbp
    c168:	48 83 ec 10          	sub    $0x10,%rsp
    c16c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c174:	48 89 c7             	mov    %rax,%rdi
    c177:	e8 6c 04 00 00       	call   c5e8 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERKS3_>
    c17c:	c9                   	leave
    c17d:	c3                   	ret

000000000000c17e <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c17e:	55                   	push   %rbp
    c17f:	48 89 e5             	mov    %rsp,%rbp
    c182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c18a:	5d                   	pop    %rbp
    c18b:	c3                   	ret

000000000000c18c <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c18c:	55                   	push   %rbp
    c18d:	48 89 e5             	mov    %rsp,%rbp
    c190:	48 83 ec 10          	sub    $0x10,%rsp
    c194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c19c:	48 89 c7             	mov    %rax,%rdi
    c19f:	e8 52 04 00 00       	call   c5f6 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>
    c1a4:	c9                   	leave
    c1a5:	c3                   	ret

000000000000c1a6 <_ZNKSt15__new_allocatorISt17reference_wrapperIbEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c1a6:	55                   	push   %rbp
    c1a7:	48 89 e5             	mov    %rsp,%rbp
    c1aa:	48 83 ec 10          	sub    $0x10,%rsp
    c1ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c1b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1b6:	48 89 c7             	mov    %rax,%rdi
    c1b9:	e8 02 00 00 00       	call   c1c0 <_ZNKSt15__new_allocatorISt17reference_wrapperIbEE11_M_max_sizeEv>
    c1be:	c9                   	leave
    c1bf:	c3                   	ret

000000000000c1c0 <_ZNKSt15__new_allocatorISt17reference_wrapperIbEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c1c0:	55                   	push   %rbp
    c1c1:	48 89 e5             	mov    %rsp,%rbp
    c1c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c1c8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c1cf:	ff ff 0f 
      }
    c1d2:	5d                   	pop    %rbp
    c1d3:	c3                   	ret

000000000000c1d4 <_ZSt16__do_uninit_copyIPKSt17reference_wrapperIbEPS1_ET0_T_S6_S5_>:
    __do_uninit_copy(_InputIterator __first, _InputIterator __last,
    c1d4:	55                   	push   %rbp
    c1d5:	48 89 e5             	mov    %rsp,%rbp
    c1d8:	48 83 ec 30          	sub    $0x30,%rsp
    c1dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c1e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c1e4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      _ForwardIterator __cur = __result;
    c1e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c1ec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  for (; __first != __last; ++__first, (void)++__cur)
    c1f0:	eb 28                	jmp    c21a <_ZSt16__do_uninit_copyIPKSt17reference_wrapperIbEPS1_ET0_T_S6_S5_+0x46>
	    std::_Construct(std::__addressof(*__cur), *__first);
    c1f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1f6:	48 89 c7             	mov    %rax,%rdi
    c1f9:	e8 06 04 00 00       	call   c604 <_ZSt11__addressofISt17reference_wrapperIbEEPT_RS2_>
    c1fe:	48 89 c2             	mov    %rax,%rdx
    c201:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c205:	48 89 c6             	mov    %rax,%rsi
    c208:	48 89 d7             	mov    %rdx,%rdi
    c20b:	e8 02 04 00 00       	call   c612 <_ZSt10_ConstructISt17reference_wrapperIbEJRKS1_EEvPT_DpOT0_>
	  for (; __first != __last; ++__first, (void)++__cur)
    c210:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c215:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c21a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c21e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c222:	75 ce                	jne    c1f2 <_ZSt16__do_uninit_copyIPKSt17reference_wrapperIbEPS1_ET0_T_S6_S5_+0x1e>
	  return __cur;
    c224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    c228:	c9                   	leave
    c229:	c3                   	ret

000000000000c22a <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>:
      _Tuple_impl()
    c22a:	55                   	push   %rbp
    c22b:	48 89 e5             	mov    %rsp,%rbp
    c22e:	48 83 ec 10          	sub    $0x10,%rsp
    c232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    c236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c23a:	48 89 c7             	mov    %rax,%rdi
    c23d:	e8 0e 04 00 00       	call   c650 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>
    c242:	90                   	nop
    c243:	c9                   	leave
    c244:	c3                   	ret
    c245:	90                   	nop

000000000000c246 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>:
      constexpr _Head_base()
    c246:	55                   	push   %rbp
    c247:	48 89 e5             	mov    %rsp,%rbp
    c24a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    c24e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c252:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c259:	90                   	nop
    c25a:	5d                   	pop    %rbp
    c25b:	c3                   	ret

000000000000c25c <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c25c:	55                   	push   %rbp
    c25d:	48 89 e5             	mov    %rsp,%rbp
    c260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c268:	5d                   	pop    %rbp
    c269:	c3                   	ret

000000000000c26a <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c26a:	55                   	push   %rbp
    c26b:	48 89 e5             	mov    %rsp,%rbp
    c26e:	48 83 ec 10          	sub    $0x10,%rsp
    c272:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c27a:	48 89 c7             	mov    %rax,%rdi
    c27d:	e8 d9 03 00 00       	call   c65b <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>
    c282:	c9                   	leave
    c283:	c3                   	ret

000000000000c284 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c284:	55                   	push   %rbp
    c285:	48 89 e5             	mov    %rsp,%rbp
    c288:	48 83 ec 10          	sub    $0x10,%rsp
    c28c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c294:	48 89 c7             	mov    %rax,%rdi
    c297:	e8 cd 03 00 00       	call   c669 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>
    c29c:	c9                   	leave
    c29d:	c3                   	ret

000000000000c29e <_ZNKSt15__new_allocatorIPSt8functionIFvvEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c29e:	55                   	push   %rbp
    c29f:	48 89 e5             	mov    %rsp,%rbp
    c2a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c2a6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c2ad:	ff ff 0f 
      }
    c2b0:	5d                   	pop    %rbp
    c2b1:	c3                   	ret

000000000000c2b2 <_ZSt11__addressofISt8functionIFvvEEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c2b2:	55                   	push   %rbp
    c2b3:	48 89 e5             	mov    %rsp,%rbp
    c2b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c2ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2be:	5d                   	pop    %rbp
    c2bf:	c3                   	ret

000000000000c2c0 <_ZSt8_DestroyISt8functionIFvvEEEvPT_>:
    _Destroy(_Tp* __pointer)
    c2c0:	55                   	push   %rbp
    c2c1:	48 89 e5             	mov    %rsp,%rbp
    c2c4:	48 83 ec 10          	sub    $0x10,%rsp
    c2c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    c2cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2d0:	48 89 c7             	mov    %rax,%rdi
    c2d3:	e8 56 7e ff ff       	call   412e <_ZNSt8functionIFvvEED1Ev>
    }
    c2d8:	90                   	nop
    c2d9:	c9                   	leave
    c2da:	c3                   	ret

000000000000c2db <_ZSt4moveIRSt6threadEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    c2db:	55                   	push   %rbp
    c2dc:	48 89 e5             	mov    %rsp,%rbp
    c2df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    c2e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2e7:	5d                   	pop    %rbp
    c2e8:	c3                   	ret

000000000000c2e9 <_ZNSt16allocator_traitsISaISt6threadEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    c2e9:	55                   	push   %rbp
    c2ea:	48 89 e5             	mov    %rsp,%rbp
    c2ed:	48 83 ec 20          	sub    $0x20,%rsp
    c2f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2f9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    c2fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c301:	48 89 c7             	mov    %rax,%rdi
    c304:	e8 6e 03 00 00       	call   c677 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>
    c309:	48 89 c2             	mov    %rax,%rdx
    c30c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c314:	48 89 ce             	mov    %rcx,%rsi
    c317:	48 89 c7             	mov    %rax,%rdi
    c31a:	e8 67 03 00 00       	call   c686 <_ZNSt15__new_allocatorISt6threadE9constructIS0_JS0_EEEvPT_DpOT0_>
	}
    c31f:	90                   	nop
    c320:	c9                   	leave
    c321:	c3                   	ret

000000000000c322 <_ZNSt16allocator_traitsISaISt6threadEE7destroyIS0_EEvRS1_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    c322:	55                   	push   %rbp
    c323:	48 89 e5             	mov    %rsp,%rbp
    c326:	48 83 ec 10          	sub    $0x10,%rsp
    c32a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c32e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    c332:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c33a:	48 89 d6             	mov    %rdx,%rsi
    c33d:	48 89 c7             	mov    %rax,%rdi
    c340:	e8 89 03 00 00       	call   c6ce <_ZNSt15__new_allocatorISt6threadE7destroyIS0_EEvPT_>
	}
    c345:	90                   	nop
    c346:	c9                   	leave
    c347:	c3                   	ret

000000000000c348 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EEC1Ev>:
      constexpr _Head_base()
    c348:	55                   	push   %rbp
    c349:	48 89 e5             	mov    %rsp,%rbp
    c34c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    c350:	90                   	nop
    c351:	5d                   	pop    %rbp
    c352:	c3                   	ret

000000000000c353 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c353:	55                   	push   %rbp
    c354:	48 89 e5             	mov    %rsp,%rbp
    c357:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c35b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c35f:	5d                   	pop    %rbp
    c360:	c3                   	ret

000000000000c361 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c361:	55                   	push   %rbp
    c362:	48 89 e5             	mov    %rsp,%rbp
    c365:	48 83 ec 10          	sub    $0x10,%rsp
    c369:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c36d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c371:	48 89 c7             	mov    %rax,%rdi
    c374:	e8 74 03 00 00       	call   c6ed <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_>
    c379:	c9                   	leave
    c37a:	c3                   	ret
    c37b:	90                   	nop

000000000000c37c <_ZNKSt15__new_allocatorISt8functionIFvvEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c37c:	55                   	push   %rbp
    c37d:	48 89 e5             	mov    %rsp,%rbp
    c380:	48 83 ec 10          	sub    $0x10,%rsp
    c384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c38c:	48 89 c7             	mov    %rax,%rdi
    c38f:	e8 e4 00 00 00       	call   c478 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>
    c394:	c9                   	leave
    c395:	c3                   	ret

000000000000c396 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    c396:	55                   	push   %rbp
    c397:	48 89 e5             	mov    %rsp,%rbp
    c39a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    c39e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3a2:	5d                   	pop    %rbp
    c3a3:	c3                   	ret

000000000000c3a4 <_ZSt13__copy_move_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    c3a4:	55                   	push   %rbp
    c3a5:	48 89 e5             	mov    %rsp,%rbp
    c3a8:	41 54                	push   %r12
    c3aa:	53                   	push   %rbx
    c3ab:	48 83 ec 20          	sub    $0x20,%rsp
    c3af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c3b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c3b7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    c3bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c3bf:	48 89 c7             	mov    %rax,%rdi
    c3c2:	e8 34 03 00 00       	call   c6fb <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    c3c7:	49 89 c4             	mov    %rax,%r12
    c3ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c3ce:	48 89 c7             	mov    %rax,%rdi
    c3d1:	e8 25 03 00 00       	call   c6fb <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    c3d6:	48 89 c3             	mov    %rax,%rbx
    c3d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3dd:	48 89 c7             	mov    %rax,%rdi
    c3e0:	e8 16 03 00 00       	call   c6fb <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    c3e5:	4c 89 e2             	mov    %r12,%rdx
    c3e8:	48 89 de             	mov    %rbx,%rsi
    c3eb:	48 89 c7             	mov    %rax,%rdi
    c3ee:	e8 16 03 00 00       	call   c709 <_ZSt14__copy_move_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    c3f3:	48 89 c2             	mov    %rax,%rdx
    c3f6:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    c3fa:	48 89 d6             	mov    %rdx,%rsi
    c3fd:	48 89 c7             	mov    %rax,%rdi
    c400:	e8 31 03 00 00       	call   c736 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>
    }
    c405:	48 83 c4 20          	add    $0x20,%rsp
    c409:	5b                   	pop    %rbx
    c40a:	41 5c                	pop    %r12
    c40c:	5d                   	pop    %rbp
    c40d:	c3                   	ret

000000000000c40e <_ZSt22__copy_move_backward_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a(_II __first, _II __last, _OI __result)
    c40e:	55                   	push   %rbp
    c40f:	48 89 e5             	mov    %rsp,%rbp
    c412:	41 54                	push   %r12
    c414:	53                   	push   %rbx
    c415:	48 83 ec 20          	sub    $0x20,%rsp
    c419:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c41d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c421:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    c425:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c429:	48 89 c7             	mov    %rax,%rdi
    c42c:	e8 ca 02 00 00       	call   c6fb <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    c431:	49 89 c4             	mov    %rax,%r12
    c434:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c438:	48 89 c7             	mov    %rax,%rdi
    c43b:	e8 bb 02 00 00       	call   c6fb <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    c440:	48 89 c3             	mov    %rax,%rbx
    c443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c447:	48 89 c7             	mov    %rax,%rdi
    c44a:	e8 ac 02 00 00       	call   c6fb <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    c44f:	4c 89 e2             	mov    %r12,%rdx
    c452:	48 89 de             	mov    %rbx,%rsi
    c455:	48 89 c7             	mov    %rax,%rdi
    c458:	e8 eb 02 00 00       	call   c748 <_ZSt23__copy_move_backward_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    c45d:	48 89 c2             	mov    %rax,%rdx
    c460:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    c464:	48 89 d6             	mov    %rdx,%rsi
    c467:	48 89 c7             	mov    %rax,%rdi
    c46a:	e8 c7 02 00 00       	call   c736 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>
    }
    c46f:	48 83 c4 20          	add    $0x20,%rsp
    c473:	5b                   	pop    %rbx
    c474:	41 5c                	pop    %r12
    c476:	5d                   	pop    %rbp
    c477:	c3                   	ret

000000000000c478 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c478:	55                   	push   %rbp
    c479:	48 89 e5             	mov    %rsp,%rbp
    c47c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c480:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
    c487:	ff ff 03 
      }
    c48a:	5d                   	pop    %rbp
    c48b:	c3                   	ret

000000000000c48c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c48c:	55                   	push   %rbp
    c48d:	48 89 e5             	mov    %rsp,%rbp
    c490:	48 83 ec 20          	sub    $0x20,%rsp
    c494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c498:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c49c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c4a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4a4:	48 89 c7             	mov    %rax,%rdi
    c4a7:	e8 ca 02 00 00       	call   c776 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE11_M_max_sizeEv>
    c4ac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4b0:	0f 92 c0             	setb   %al
    c4b3:	0f b6 c0             	movzbl %al,%eax
    c4b6:	48 85 c0             	test   %rax,%rax
    c4b9:	0f 95 c0             	setne  %al
    c4bc:	84 c0                	test   %al,%al
    c4be:	74 1a                	je     c4da <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c4c0:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    c4c7:	55 55 05 
    c4ca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4ce:	73 05                	jae    c4d5 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c4d0:	e8 3b 6d ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c4d5:	e8 b6 6b ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c4da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c4de:	48 89 d0             	mov    %rdx,%rax
    c4e1:	48 01 c0             	add    %rax,%rax
    c4e4:	48 01 d0             	add    %rdx,%rax
    c4e7:	48 c1 e0 04          	shl    $0x4,%rax
    c4eb:	48 89 c7             	mov    %rax,%rdi
    c4ee:	e8 cd 6d ff ff       	call   32c0 <_Znwm@plt>
    c4f3:	90                   	nop
      }
    c4f4:	c9                   	leave
    c4f5:	c3                   	ret

000000000000c4f6 <_ZNSt5tupleIJONSt6thread2idEEEC1EOS3_>:
      constexpr tuple(tuple&&) = default;
    c4f6:	55                   	push   %rbp
    c4f7:	48 89 e5             	mov    %rsp,%rbp
    c4fa:	48 83 ec 10          	sub    $0x10,%rsp
    c4fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c502:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c50a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c50e:	48 89 d6             	mov    %rdx,%rsi
    c511:	48 89 c7             	mov    %rax,%rdi
    c514:	e8 71 02 00 00       	call   c78a <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1EOS3_>
    c519:	90                   	nop
    c51a:	c9                   	leave
    c51b:	c3                   	ret

000000000000c51c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    c51c:	55                   	push   %rbp
    c51d:	48 89 e5             	mov    %rsp,%rbp
    c520:	41 56                	push   %r14
    c522:	41 55                	push   %r13
    c524:	41 54                	push   %r12
    c526:	53                   	push   %rbx
    c527:	48 83 ec 40          	sub    $0x40,%rsp
    c52b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    c52f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    c533:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    c537:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    c53b:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    c53f:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    c543:	48 89 de             	mov    %rbx,%rsi
    c546:	bf 10 00 00 00       	mov    $0x10,%edi
    c54b:	e8 39 73 ff ff       	call   3889 <_ZnwmPv>
    c550:	49 89 c4             	mov    %rax,%r12
    c553:	41 be 01 00 00 00    	mov    $0x1,%r14d
    c559:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c55d:	48 89 c7             	mov    %rax,%rdi
    c560:	e8 3a c6 ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    c565:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c569:	48 89 c7             	mov    %rax,%rdi
    c56c:	e8 20 c6 ff ff       	call   8b91 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    c571:	48 89 c2             	mov    %rax,%rdx
    c574:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    c578:	48 89 d6             	mov    %rdx,%rsi
    c57b:	48 89 c7             	mov    %rax,%rdi
    c57e:	e8 73 ff ff ff       	call   c4f6 <_ZNSt5tupleIJONSt6thread2idEEEC1EOS3_>
    c583:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c587:	48 89 c7             	mov    %rax,%rdi
    c58a:	e8 f4 c5 ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    c58f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    c593:	48 89 c6             	mov    %rax,%rsi
    c596:	4c 89 e7             	mov    %r12,%rdi
    c599:	e8 0a 02 00 00       	call   c7a8 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES7_IJDpT0_EE>
    c59e:	eb 1e                	jmp    c5be <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_+0xa2>
    c5a0:	49 89 c5             	mov    %rax,%r13
    c5a3:	45 84 f6             	test   %r14b,%r14b
    c5a6:	74 0b                	je     c5b3 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_+0x97>
    c5a8:	48 89 de             	mov    %rbx,%rsi
    c5ab:	4c 89 e7             	mov    %r12,%rdi
    c5ae:	e8 e8 72 ff ff       	call   389b <_ZdlPvS_>
    c5b3:	4c 89 e8             	mov    %r13,%rax
    c5b6:	48 89 c7             	mov    %rax,%rdi
    c5b9:	e8 12 6f ff ff       	call   34d0 <_Unwind_Resume@plt>
    c5be:	48 83 c4 40          	add    $0x40,%rsp
    c5c2:	5b                   	pop    %rbx
    c5c3:	41 5c                	pop    %r12
    c5c5:	41 5d                	pop    %r13
    c5c7:	41 5e                	pop    %r14
    c5c9:	5d                   	pop    %rbp
    c5ca:	c3                   	ret
    c5cb:	90                   	nop

000000000000c5cc <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>:
      _M_addr() const noexcept
    c5cc:	55                   	push   %rbp
    c5cd:	48 89 e5             	mov    %rsp,%rbp
    c5d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    c5d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5d8:	5d                   	pop    %rbp
    c5d9:	c3                   	ret

000000000000c5da <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    c5da:	55                   	push   %rbp
    c5db:	48 89 e5             	mov    %rsp,%rbp
    c5de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5e6:	5d                   	pop    %rbp
    c5e7:	c3                   	ret

000000000000c5e8 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERKS3_>:
    c5e8:	55                   	push   %rbp
    c5e9:	48 89 e5             	mov    %rsp,%rbp
    c5ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5f4:	5d                   	pop    %rbp
    c5f5:	c3                   	ret

000000000000c5f6 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>:
    c5f6:	55                   	push   %rbp
    c5f7:	48 89 e5             	mov    %rsp,%rbp
    c5fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c602:	5d                   	pop    %rbp
    c603:	c3                   	ret

000000000000c604 <_ZSt11__addressofISt17reference_wrapperIbEEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c604:	55                   	push   %rbp
    c605:	48 89 e5             	mov    %rsp,%rbp
    c608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c60c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c610:	5d                   	pop    %rbp
    c611:	c3                   	ret

000000000000c612 <_ZSt10_ConstructISt17reference_wrapperIbEJRKS1_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c612:	55                   	push   %rbp
    c613:	48 89 e5             	mov    %rsp,%rbp
    c616:	53                   	push   %rbx
    c617:	48 83 ec 18          	sub    $0x18,%rsp
    c61b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c61f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c623:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c627:	48 89 c6             	mov    %rax,%rsi
    c62a:	bf 08 00 00 00       	mov    $0x8,%edi
    c62f:	e8 55 72 ff ff       	call   3889 <_ZnwmPv>
    c634:	48 89 c3             	mov    %rax,%rbx
    c637:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c63b:	48 89 c7             	mov    %rax,%rdi
    c63e:	e8 8f 01 00 00       	call   c7d2 <_ZSt7forwardIRKSt17reference_wrapperIbEEOT_RNSt16remove_referenceIS4_E4typeE>
    c643:	48 8b 00             	mov    (%rax),%rax
    c646:	48 89 03             	mov    %rax,(%rbx)
    }
    c649:	90                   	nop
    c64a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c64e:	c9                   	leave
    c64f:	c3                   	ret

000000000000c650 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>:
      constexpr _Head_base()
    c650:	55                   	push   %rbp
    c651:	48 89 e5             	mov    %rsp,%rbp
    c654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    c658:	90                   	nop
    c659:	5d                   	pop    %rbp
    c65a:	c3                   	ret

000000000000c65b <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c65b:	55                   	push   %rbp
    c65c:	48 89 e5             	mov    %rsp,%rbp
    c65f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c663:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c667:	5d                   	pop    %rbp
    c668:	c3                   	ret

000000000000c669 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    c669:	55                   	push   %rbp
    c66a:	48 89 e5             	mov    %rsp,%rbp
    c66d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c675:	5d                   	pop    %rbp
    c676:	c3                   	ret

000000000000c677 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c677:	55                   	push   %rbp
    c678:	48 89 e5             	mov    %rsp,%rbp
    c67b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c67f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c683:	5d                   	pop    %rbp
    c684:	c3                   	ret
    c685:	90                   	nop

000000000000c686 <_ZNSt15__new_allocatorISt6threadE9constructIS0_JS0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    c686:	55                   	push   %rbp
    c687:	48 89 e5             	mov    %rsp,%rbp
    c68a:	53                   	push   %rbx
    c68b:	48 83 ec 28          	sub    $0x28,%rsp
    c68f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c693:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c697:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    c69b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c69f:	48 89 c6             	mov    %rax,%rsi
    c6a2:	bf 08 00 00 00       	mov    $0x8,%edi
    c6a7:	e8 dd 71 ff ff       	call   3889 <_ZnwmPv>
    c6ac:	48 89 c3             	mov    %rax,%rbx
    c6af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c6b3:	48 89 c7             	mov    %rax,%rdi
    c6b6:	e8 bc ff ff ff       	call   c677 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>
    c6bb:	48 89 c6             	mov    %rax,%rsi
    c6be:	48 89 df             	mov    %rbx,%rdi
    c6c1:	e8 b8 75 ff ff       	call   3c7e <_ZNSt6threadC1EOS_>
    c6c6:	90                   	nop
    c6c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c6cb:	c9                   	leave
    c6cc:	c3                   	ret
    c6cd:	90                   	nop

000000000000c6ce <_ZNSt15__new_allocatorISt6threadE7destroyIS0_EEvPT_>:
	destroy(_Up* __p)
    c6ce:	55                   	push   %rbp
    c6cf:	48 89 e5             	mov    %rsp,%rbp
    c6d2:	48 83 ec 10          	sub    $0x10,%rsp
    c6d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    c6de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c6e2:	48 89 c7             	mov    %rax,%rdi
    c6e5:	e8 70 75 ff ff       	call   3c5a <_ZNSt6threadD1Ev>
    c6ea:	90                   	nop
    c6eb:	c9                   	leave
    c6ec:	c3                   	ret

000000000000c6ed <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c6ed:	55                   	push   %rbp
    c6ee:	48 89 e5             	mov    %rsp,%rbp
    c6f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6f9:	5d                   	pop    %rbp
    c6fa:	c3                   	ret

000000000000c6fb <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>:
    __niter_base(_Iterator __it)
    c6fb:	55                   	push   %rbp
    c6fc:	48 89 e5             	mov    %rsp,%rbp
    c6ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    c703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c707:	5d                   	pop    %rbp
    c708:	c3                   	ret

000000000000c709 <_ZSt14__copy_move_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    c709:	55                   	push   %rbp
    c70a:	48 89 e5             	mov    %rsp,%rbp
    c70d:	48 83 ec 20          	sub    $0x20,%rsp
    c711:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c715:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c719:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    c71d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c721:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c729:	48 89 ce             	mov    %rcx,%rsi
    c72c:	48 89 c7             	mov    %rax,%rdi
    c72f:	e8 ac 00 00 00       	call   c7e0 <_ZSt14__copy_move_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    c734:	c9                   	leave
    c735:	c3                   	ret

000000000000c736 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    c736:	55                   	push   %rbp
    c737:	48 89 e5             	mov    %rsp,%rbp
    c73a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c73e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    c742:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c746:	5d                   	pop    %rbp
    c747:	c3                   	ret

000000000000c748 <_ZSt23__copy_move_backward_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
    c748:	55                   	push   %rbp
    c749:	48 89 e5             	mov    %rsp,%rbp
    c74c:	48 83 ec 20          	sub    $0x20,%rsp
    c750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c754:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c758:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
    c75c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c760:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c768:	48 89 ce             	mov    %rcx,%rsi
    c76b:	48 89 c7             	mov    %rax,%rdi
    c76e:	e8 9a 00 00 00       	call   c80d <_ZSt23__copy_move_backward_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    c773:	c9                   	leave
    c774:	c3                   	ret
    c775:	90                   	nop

000000000000c776 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c776:	55                   	push   %rbp
    c777:	48 89 e5             	mov    %rsp,%rbp
    c77a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c77e:	48 b8 aa aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaa,%rax
    c785:	aa aa 02 
      }
    c788:	5d                   	pop    %rbp
    c789:	c3                   	ret

000000000000c78a <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1EOS3_>:
      _Tuple_impl(_Tuple_impl&& __in)
    c78a:	55                   	push   %rbp
    c78b:	48 89 e5             	mov    %rsp,%rbp
    c78e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c792:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    c796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c79a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c79e:	48 8b 12             	mov    (%rdx),%rdx
    c7a1:	48 89 10             	mov    %rdx,(%rax)
      { }
    c7a4:	90                   	nop
    c7a5:	5d                   	pop    %rbp
    c7a6:	c3                   	ret
    c7a7:	90                   	nop

000000000000c7a8 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES7_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    c7a8:	55                   	push   %rbp
    c7a9:	48 89 e5             	mov    %rsp,%rbp
    c7ac:	48 83 ec 20          	sub    $0x20,%rsp
    c7b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    c7b8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    c7bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c4:	48 89 ce             	mov    %rcx,%rsi
    c7c7:	48 89 c7             	mov    %rax,%rdi
    c7ca:	e8 6b 00 00 00       	call   c83a <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS6_IJDpT1_EESt12_Index_tupleIJXspT0_EEESF_IJXspT2_EEE>
      { }
    c7cf:	90                   	nop
    c7d0:	c9                   	leave
    c7d1:	c3                   	ret

000000000000c7d2 <_ZSt7forwardIRKSt17reference_wrapperIbEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c7d2:	55                   	push   %rbp
    c7d3:	48 89 e5             	mov    %rsp,%rbp
    c7d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c7da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7de:	5d                   	pop    %rbp
    c7df:	c3                   	ret

000000000000c7e0 <_ZSt14__copy_move_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    c7e0:	55                   	push   %rbp
    c7e1:	48 89 e5             	mov    %rsp,%rbp
    c7e4:	48 83 ec 20          	sub    $0x20,%rsp
    c7e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    c7f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c7f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c7fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c800:	48 89 ce             	mov    %rcx,%rsi
    c803:	48 89 c7             	mov    %rax,%rdi
    c806:	e8 70 00 00 00       	call   c87b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>
    }
    c80b:	c9                   	leave
    c80c:	c3                   	ret

000000000000c80d <_ZSt23__copy_move_backward_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
    c80d:	55                   	push   %rbp
    c80e:	48 89 e5             	mov    %rsp,%rbp
    c811:	48 83 ec 20          	sub    $0x20,%rsp
    c815:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c819:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c81d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				       _Category>::__copy_move_b(__first,
    c821:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c825:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82d:	48 89 ce             	mov    %rcx,%rsi
    c830:	48 89 c7             	mov    %rax,%rdi
    c833:	e8 a2 00 00 00       	call   c8da <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>
    }
    c838:	c9                   	leave
    c839:	c3                   	ret

000000000000c83a <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS6_IJDpT1_EESt12_Index_tupleIJXspT0_EEESF_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    c83a:	55                   	push   %rbp
    c83b:	48 89 e5             	mov    %rsp,%rbp
    c83e:	48 83 ec 20          	sub    $0x20,%rsp
    c842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c846:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c84a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    c84e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c852:	48 89 c7             	mov    %rax,%rdi
    c855:	e8 f2 00 00 00       	call   c94c <_ZSt3getILm0EJONSt6thread2idEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>
    c85a:	48 89 c7             	mov    %rax,%rdi
    c85d:	e8 04 01 00 00       	call   c966 <_ZSt7forwardIONSt6thread2idEEOT_RNSt16remove_referenceIS3_E4typeE>
    c862:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c866:	48 8b 00             	mov    (%rax),%rax
    c869:	48 89 02             	mov    %rax,(%rdx)
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    c86c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c870:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c877:	00 
      { }
    c878:	90                   	nop
    c879:	c9                   	leave
    c87a:	c3                   	ret

000000000000c87b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    c87b:	55                   	push   %rbp
    c87c:	48 89 e5             	mov    %rsp,%rbp
    c87f:	48 83 ec 30          	sub    $0x30,%rsp
    c883:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c887:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c88b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    c88f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c893:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    c897:	48 c1 f8 03          	sar    $0x3,%rax
    c89b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    c89f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c8a4:	74 1f                	je     c8c5 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    c8a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8aa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c8b1:	00 
    c8b2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    c8b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8ba:	48 89 ce             	mov    %rcx,%rsi
    c8bd:	48 89 c7             	mov    %rax,%rdi
    c8c0:	e8 ab 6b ff ff       	call   3470 <memmove@plt>
	  return __result + _Num;
    c8c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8c9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c8d0:	00 
    c8d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8d5:	48 01 d0             	add    %rdx,%rax
	}
    c8d8:	c9                   	leave
    c8d9:	c3                   	ret

000000000000c8da <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>:
	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
    c8da:	55                   	push   %rbp
    c8db:	48 89 e5             	mov    %rsp,%rbp
    c8de:	48 83 ec 30          	sub    $0x30,%rsp
    c8e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c8e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c8ea:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    c8ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c8f2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    c8f6:	48 c1 f8 03          	sar    $0x3,%rax
    c8fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    c8fe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c903:	74 30                	je     c935 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_+0x5b>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
    c905:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c909:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c910:	00 
    c911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c915:	48 c1 e0 03          	shl    $0x3,%rax
    c919:	48 f7 d8             	neg    %rax
    c91c:	48 89 c1             	mov    %rax,%rcx
    c91f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c923:	48 01 c1             	add    %rax,%rcx
    c926:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c92a:	48 89 c6             	mov    %rax,%rsi
    c92d:	48 89 cf             	mov    %rcx,%rdi
    c930:	e8 3b 6b ff ff       	call   3470 <memmove@plt>
	  return __result - _Num;
    c935:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c939:	48 c1 e0 03          	shl    $0x3,%rax
    c93d:	48 f7 d8             	neg    %rax
    c940:	48 89 c2             	mov    %rax,%rdx
    c943:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c947:	48 01 d0             	add    %rdx,%rax
	}
    c94a:	c9                   	leave
    c94b:	c3                   	ret

000000000000c94c <_ZSt3getILm0EJONSt6thread2idEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>:
    get(tuple<_Elements...>& __t) noexcept
    c94c:	55                   	push   %rbp
    c94d:	48 89 e5             	mov    %rsp,%rbp
    c950:	48 83 ec 10          	sub    $0x10,%rsp
    c954:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    c958:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c95c:	48 89 c7             	mov    %rax,%rdi
    c95f:	e8 10 00 00 00       	call   c974 <_ZSt12__get_helperILm0EONSt6thread2idEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
    c964:	c9                   	leave
    c965:	c3                   	ret

000000000000c966 <_ZSt7forwardIONSt6thread2idEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c966:	55                   	push   %rbp
    c967:	48 89 e5             	mov    %rsp,%rbp
    c96a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c96e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c972:	5d                   	pop    %rbp
    c973:	c3                   	ret

000000000000c974 <_ZSt12__get_helperILm0EONSt6thread2idEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    c974:	55                   	push   %rbp
    c975:	48 89 e5             	mov    %rsp,%rbp
    c978:	48 83 ec 10          	sub    $0x10,%rsp
    c97c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    c980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c984:	48 89 c7             	mov    %rax,%rdi
    c987:	e8 02 00 00 00       	call   c98e <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEE7_M_headERS3_>
    c98c:	c9                   	leave
    c98d:	c3                   	ret

000000000000c98e <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c98e:	55                   	push   %rbp
    c98f:	48 89 e5             	mov    %rsp,%rbp
    c992:	48 83 ec 10          	sub    $0x10,%rsp
    c996:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c99a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99e:	48 89 c7             	mov    %rax,%rdi
    c9a1:	e8 02 00 00 00       	call   c9a8 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EE7_M_headERS3_>
    c9a6:	c9                   	leave
    c9a7:	c3                   	ret

000000000000c9a8 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c9a8:	55                   	push   %rbp
    c9a9:	48 89 e5             	mov    %rsp,%rbp
    c9ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9b4:	48 8b 00             	mov    (%rax),%rax
    c9b7:	5d                   	pop    %rbp
    c9b8:	c3                   	ret
    c9b9:	90                   	nop

000000000000c9ba <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED1Ev>:
      struct _State_impl : public _State
    c9ba:	55                   	push   %rbp
    c9bb:	48 89 e5             	mov    %rsp,%rbp
    c9be:	48 83 ec 10          	sub    $0x10,%rsp
    c9c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9c6:	48 8d 15 c3 62 01 00 	lea    0x162c3(%rip),%rdx        # 22c90 <_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEE+0x10>
    c9cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9d1:	48 89 10             	mov    %rdx,(%rax)
    c9d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9d8:	48 89 c7             	mov    %rax,%rdi
    c9db:	e8 20 67 ff ff       	call   3100 <_ZNSt6thread6_StateD2Ev@plt>
    c9e0:	90                   	nop
    c9e1:	c9                   	leave
    c9e2:	c3                   	ret
    c9e3:	90                   	nop

000000000000c9e4 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED0Ev>:
    c9e4:	55                   	push   %rbp
    c9e5:	48 89 e5             	mov    %rsp,%rbp
    c9e8:	48 83 ec 10          	sub    $0x10,%rsp
    c9ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9f4:	48 89 c7             	mov    %rax,%rdi
    c9f7:	e8 be ff ff ff       	call   c9ba <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED1Ev>
    c9fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca00:	be 18 00 00 00       	mov    $0x18,%esi
    ca05:	48 89 c7             	mov    %rax,%rdi
    ca08:	e8 c3 68 ff ff       	call   32d0 <_ZdlPvm@plt>
    ca0d:	c9                   	leave
    ca0e:	c3                   	ret
    ca0f:	90                   	nop

000000000000ca10 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEE6_M_runEv>:
	_M_run() { _M_func(); }
    ca10:	55                   	push   %rbp
    ca11:	48 89 e5             	mov    %rsp,%rbp
    ca14:	48 83 ec 10          	sub    $0x10,%rsp
    ca18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca20:	48 83 c0 08          	add    $0x8,%rax
    ca24:	48 89 c7             	mov    %rax,%rdi
    ca27:	e8 04 00 00 00       	call   ca30 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEEclEv>
    ca2c:	90                   	nop
    ca2d:	c9                   	leave
    ca2e:	c3                   	ret
    ca2f:	90                   	nop

000000000000ca30 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEEclEv>:
	operator()()
    ca30:	55                   	push   %rbp
    ca31:	48 89 e5             	mov    %rsp,%rbp
    ca34:	48 83 ec 10          	sub    $0x10,%rsp
    ca38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  return _M_invoke(_Indices());
    ca3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca40:	48 89 c7             	mov    %rax,%rdi
    ca43:	e8 04 00 00 00       	call   ca4c <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEE9_M_invokeIJLm0ELm1EEEEvSt12_Index_tupleIJXspT_EEE>
    ca48:	90                   	nop
	}
    ca49:	c9                   	leave
    ca4a:	c3                   	ret
    ca4b:	90                   	nop

000000000000ca4c <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEE9_M_invokeIJLm0ELm1EEEEvSt12_Index_tupleIJXspT_EEE>:
	  _M_invoke(_Index_tuple<_Ind...>)
    ca4c:	55                   	push   %rbp
    ca4d:	48 89 e5             	mov    %rsp,%rbp
    ca50:	53                   	push   %rbx
    ca51:	48 83 ec 18          	sub    $0x18,%rsp
    ca55:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
    ca59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca5d:	48 89 c7             	mov    %rax,%rdi
    ca60:	e8 31 00 00 00       	call   ca96 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>
    ca65:	48 89 c7             	mov    %rax,%rdi
    ca68:	e8 59 00 00 00       	call   cac6 <_ZSt3getILm1EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>
    ca6d:	48 89 c3             	mov    %rax,%rbx
    ca70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca74:	48 89 c7             	mov    %rax,%rdi
    ca77:	e8 1a 00 00 00       	call   ca96 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>
    ca7c:	48 89 c7             	mov    %rax,%rdi
    ca7f:	e8 20 00 00 00       	call   caa4 <_ZSt3getILm0EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>
    ca84:	48 89 de             	mov    %rbx,%rsi
    ca87:	48 89 c7             	mov    %rax,%rdi
    ca8a:	e8 59 00 00 00       	call   cae8 <_ZSt8__invokeIPFvPN4neko10ThreadPoolEEJS2_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS6_DpOS7_>
    ca8f:	90                   	nop
    ca90:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ca94:	c9                   	leave
    ca95:	c3                   	ret

000000000000ca96 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
    ca96:	55                   	push   %rbp
    ca97:	48 89 e5             	mov    %rsp,%rbp
    ca9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    ca9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa2:	5d                   	pop    %rbp
    caa3:	c3                   	ret

000000000000caa4 <_ZSt3getILm0EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>:
    get(tuple<_Elements...>&& __t) noexcept
    caa4:	55                   	push   %rbp
    caa5:	48 89 e5             	mov    %rsp,%rbp
    caa8:	48 83 ec 10          	sub    $0x10,%rsp
    caac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::forward<__element_type>(std::__get_helper<__i>(__t));
    cab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cab4:	48 89 c7             	mov    %rax,%rdi
    cab7:	e8 6a 00 00 00       	call   cb26 <_ZSt12__get_helperILm0EPFvPN4neko10ThreadPoolEEJS2_EERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    cabc:	48 89 c7             	mov    %rax,%rdi
    cabf:	e8 7c 00 00 00       	call   cb40 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    }
    cac4:	c9                   	leave
    cac5:	c3                   	ret

000000000000cac6 <_ZSt3getILm1EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>:
    get(tuple<_Elements...>&& __t) noexcept
    cac6:	55                   	push   %rbp
    cac7:	48 89 e5             	mov    %rsp,%rbp
    caca:	48 83 ec 10          	sub    $0x10,%rsp
    cace:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::forward<__element_type>(std::__get_helper<__i>(__t));
    cad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cad6:	48 89 c7             	mov    %rax,%rdi
    cad9:	e8 70 00 00 00       	call   cb4e <_ZSt12__get_helperILm1EPN4neko10ThreadPoolEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
    cade:	48 89 c7             	mov    %rax,%rdi
    cae1:	e8 04 9e ff ff       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    }
    cae6:	c9                   	leave
    cae7:	c3                   	ret

000000000000cae8 <_ZSt8__invokeIPFvPN4neko10ThreadPoolEEJS2_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS6_DpOS7_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
    cae8:	55                   	push   %rbp
    cae9:	48 89 e5             	mov    %rsp,%rbp
    caec:	53                   	push   %rbx
    caed:	48 83 ec 18          	sub    $0x18,%rsp
    caf1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    caf5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    caf9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cafd:	48 89 c7             	mov    %rax,%rdi
    cb00:	e8 e5 9d ff ff       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    cb05:	48 89 c3             	mov    %rax,%rbx
    cb08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb0c:	48 89 c7             	mov    %rax,%rdi
    cb0f:	e8 2c 00 00 00       	call   cb40 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    cb14:	48 89 de             	mov    %rbx,%rsi
    cb17:	48 89 c7             	mov    %rax,%rdi
    cb1a:	e8 49 00 00 00       	call   cb68 <_ZSt13__invoke_implIvPFvPN4neko10ThreadPoolEEJS2_EET_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
    cb1f:	90                   	nop
    }
    cb20:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cb24:	c9                   	leave
    cb25:	c3                   	ret

000000000000cb26 <_ZSt12__get_helperILm0EPFvPN4neko10ThreadPoolEEJS2_EERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    cb26:	55                   	push   %rbp
    cb27:	48 89 e5             	mov    %rsp,%rbp
    cb2a:	48 83 ec 10          	sub    $0x10,%rsp
    cb2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    cb32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb36:	48 89 c7             	mov    %rax,%rdi
    cb39:	e8 65 00 00 00       	call   cba3 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EE7_M_headERS5_>
    cb3e:	c9                   	leave
    cb3f:	c3                   	ret

000000000000cb40 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    cb40:	55                   	push   %rbp
    cb41:	48 89 e5             	mov    %rsp,%rbp
    cb44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    cb48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb4c:	5d                   	pop    %rbp
    cb4d:	c3                   	ret

000000000000cb4e <_ZSt12__get_helperILm1EPN4neko10ThreadPoolEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    cb4e:	55                   	push   %rbp
    cb4f:	48 89 e5             	mov    %rsp,%rbp
    cb52:	48 83 ec 10          	sub    $0x10,%rsp
    cb56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    cb5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb5e:	48 89 c7             	mov    %rax,%rdi
    cb61:	e8 5b 00 00 00       	call   cbc1 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEE7_M_headERS3_>
    cb66:	c9                   	leave
    cb67:	c3                   	ret

000000000000cb68 <_ZSt13__invoke_implIvPFvPN4neko10ThreadPoolEEJS2_EET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    cb68:	55                   	push   %rbp
    cb69:	48 89 e5             	mov    %rsp,%rbp
    cb6c:	53                   	push   %rbx
    cb6d:	48 83 ec 18          	sub    $0x18,%rsp
    cb71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    cb79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb7d:	48 89 c7             	mov    %rax,%rdi
    cb80:	e8 bb ff ff ff       	call   cb40 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    cb85:	48 8b 18             	mov    (%rax),%rbx
    cb88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb8c:	48 89 c7             	mov    %rax,%rdi
    cb8f:	e8 56 9d ff ff       	call   68ea <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    cb94:	48 8b 00             	mov    (%rax),%rax
    cb97:	48 89 c7             	mov    %rax,%rdi
    cb9a:	ff d3                	call   *%rbx
    cb9c:	90                   	nop
    cb9d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cba1:	c9                   	leave
    cba2:	c3                   	ret

000000000000cba3 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    cba3:	55                   	push   %rbp
    cba4:	48 89 e5             	mov    %rsp,%rbp
    cba7:	48 83 ec 10          	sub    $0x10,%rsp
    cbab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb3:	48 83 c0 08          	add    $0x8,%rax
    cbb7:	48 89 c7             	mov    %rax,%rdi
    cbba:	e8 1c 00 00 00       	call   cbdb <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EE7_M_headERS5_>
    cbbf:	c9                   	leave
    cbc0:	c3                   	ret

000000000000cbc1 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    cbc1:	55                   	push   %rbp
    cbc2:	48 89 e5             	mov    %rsp,%rbp
    cbc5:	48 83 ec 10          	sub    $0x10,%rsp
    cbc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd1:	48 89 c7             	mov    %rax,%rdi
    cbd4:	e8 10 00 00 00       	call   cbe9 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EE7_M_headERS3_>
    cbd9:	c9                   	leave
    cbda:	c3                   	ret

000000000000cbdb <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    cbdb:	55                   	push   %rbp
    cbdc:	48 89 e5             	mov    %rsp,%rbp
    cbdf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbe7:	5d                   	pop    %rbp
    cbe8:	c3                   	ret

000000000000cbe9 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EE7_M_headERS3_>:
    cbe9:	55                   	push   %rbp
    cbea:	48 89 e5             	mov    %rsp,%rbp
    cbed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbf5:	5d                   	pop    %rbp
    cbf6:	c3                   	ret
    cbf7:	90                   	nop

000000000000cbf8 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>:
#include <map>
#include <optional>

namespace neko {

Device::Device(const Instance &crInstance, const Surface &crSurface) {
    cbf8:	55                   	push   %rbp
    cbf9:	48 89 e5             	mov    %rsp,%rbp
    cbfc:	41 54                	push   %r12
    cbfe:	53                   	push   %rbx
    cbff:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    cc06:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
    cc0d:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
    cc14:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  VkPhysicalDevice selectedPhysicalDevice =
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    cc1b:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    cc22:	48 89 c7             	mov    %rax,%rdi
    cc25:	e8 7c 0d 00 00       	call   d9a6 <_ZNK4neko8InstancedeEv>
    cc2a:	48 8b 10             	mov    (%rax),%rdx
    cc2d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    cc31:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    cc38:	48 89 ce             	mov    %rcx,%rsi
    cc3b:	48 89 c7             	mov    %rax,%rdi
    cc3e:	e8 77 0b 00 00       	call   d7ba <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>
    cc43:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    cc47:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    cc4e:	48 89 d6             	mov    %rdx,%rsi
    cc51:	48 89 c7             	mov    %rax,%rdi
    cc54:	e8 59 04 00 00       	call   d0b2 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>
    cc59:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cc5d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    cc61:	48 89 c7             	mov    %rax,%rdi
    cc64:	e8 ed 0d 00 00       	call   da56 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>

  u32 selectedQueueFamilyIndex =
      selectUniversalQueueFamily(selectedPhysicalDevice, *crSurface);
    cc69:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    cc70:	48 89 c7             	mov    %rax,%rdi
    cc73:	e8 40 0d 00 00       	call   d9b8 <_ZNK4neko7SurfacedeEv>
    cc78:	48 8b 10             	mov    (%rax),%rdx
    cc7b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    cc7f:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    cc86:	48 89 ce             	mov    %rcx,%rsi
    cc89:	48 89 c7             	mov    %rax,%rdi
    cc8c:	e8 f9 01 00 00       	call   ce8a <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
    cc91:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  u32 selectedQueueIndex = 0;
    cc94:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)

  float queuePriority = 1.0f;
    cc9b:	f3 0f 10 05 c9 73 00 	movss  0x73c9(%rip),%xmm0        # 1406c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x18c>
    cca2:	00 
    cca3:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)

  /* Populate the selected queue family's creation info */
  VkDeviceQueueCreateInfo queueInfo{};
    cca8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ccac:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    ccb3:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    ccba:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    ccc1:	ff 
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    ccc2:	c7 85 50 fe ff ff 02 	movl   $0x2,-0x1b0(%rbp)
    ccc9:	00 00 00 
  queueInfo.pNext = nullptr;
    cccc:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    ccd3:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedQueueFamilyIndex;
    ccd7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    ccda:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  queueInfo.queueCount = 1;
    cce0:	c7 85 68 fe ff ff 01 	movl   $0x1,-0x198(%rbp)
    cce7:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    ccea:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    ccee:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)

  VkPhysicalDeviceFeatures deviceFeatures{};
    ccf5:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    ccfc:	b8 00 00 00 00       	mov    $0x0,%eax
    cd01:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    cd06:	48 89 d7             	mov    %rdx,%rdi
    cd09:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    cd0c:	48 89 fa             	mov    %rdi,%rdx
    cd0f:	89 02                	mov    %eax,(%rdx)
    cd11:	48 83 c2 04          	add    $0x4,%rdx
  //   deviceFeatures.samplerAnisotropy = VK_TRUE;
  //   deviceFeatures.sampleRateShading = VK_TRUE;

  /* Populate the logical device's creation info */
  VkDeviceCreateInfo deviceInfo{};
    cd15:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cd19:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    cd20:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    cd27:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
    cd2e:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    cd35:	66 0f d6 85 c0 fe ff 	movq   %xmm0,-0x140(%rbp)
    cd3c:	ff 
  deviceInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    cd3d:	c7 85 80 fe ff ff 03 	movl   $0x3,-0x180(%rbp)
    cd44:	00 00 00 
  deviceInfo.queueCreateInfoCount = 1;
    cd47:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    cd4e:	00 00 00 
  deviceInfo.pQueueCreateInfos = &queueInfo;
    cd51:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    cd58:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  deviceInfo.pEnabledFeatures = &deviceFeatures;
    cd5f:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    cd66:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)

  /* Create a logical device */
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    cd6d:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
    cd74:	48 8d b5 80 fe ff ff 	lea    -0x180(%rbp),%rsi
    cd7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd7f:	48 89 d1             	mov    %rdx,%rcx
    cd82:	ba 00 00 00 00       	mov    $0x0,%edx
    cd87:	48 89 c7             	mov    %rax,%rdi
    cd8a:	e8 a1 66 ff ff       	call   3430 <vkCreateDevice@plt>
                     &mLogicalDevice) != VK_SUCCESS) {
    cd8f:	85 c0                	test   %eax,%eax
    cd91:	0f 95 c0             	setne  %al
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    cd94:	84 c0                	test   %al,%al
    cd96:	74 3b                	je     cdd3 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x1db>
    throw std::runtime_error("Failed to create logical device.");
    cd98:	bf 10 00 00 00       	mov    $0x10,%edi
    cd9d:	e8 6e 63 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    cda2:	48 89 c3             	mov    %rax,%rbx
    cda5:	48 8d 05 3c 71 00 00 	lea    0x713c(%rip),%rax        # 13ee8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    cdac:	48 89 c6             	mov    %rax,%rsi
    cdaf:	48 89 df             	mov    %rbx,%rdi
    cdb2:	e8 f9 62 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    cdb7:	48 8b 05 fa 61 01 00 	mov    0x161fa(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    cdbe:	48 89 c2             	mov    %rax,%rdx
    cdc1:	48 8d 05 38 5f 01 00 	lea    0x15f38(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    cdc8:	48 89 c6             	mov    %rax,%rsi
    cdcb:	48 89 df             	mov    %rbx,%rdi
    cdce:	e8 dd 66 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  /* Get handles */
  mPhysicalDevice = selectedPhysicalDevice;
    cdd3:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    cdda:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cdde:	48 89 50 08          	mov    %rdx,0x8(%rax)

  VkQueue queueHandle;
  vkGetDeviceQueue(mLogicalDevice, selectedQueueFamilyIndex, selectedQueueIndex,
    cde2:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    cde9:	48 8b 00             	mov    (%rax),%rax
    cdec:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    cdf0:	8b 55 e0             	mov    -0x20(%rbp),%edx
    cdf3:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    cdf6:	48 89 c7             	mov    %rax,%rdi
    cdf9:	e8 d2 65 ff ff       	call   33d0 <vkGetDeviceQueue@plt>
                   &queueHandle);
  mQueue = {selectedQueueFamilyIndex, selectedQueueIndex, queueHandle};
    cdfe:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    ce02:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ce09:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    ce0c:	89 48 10             	mov    %ecx,0x10(%rax)
    ce0f:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ce16:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    ce19:	89 48 14             	mov    %ecx,0x14(%rax)
    ce1c:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ce23:	48 89 50 18          	mov    %rdx,0x18(%rax)
}
    ce27:	eb 30                	jmp    ce59 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x261>
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    ce29:	48 89 c3             	mov    %rax,%rbx
    ce2c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ce30:	48 89 c7             	mov    %rax,%rdi
    ce33:	e8 1e 0c 00 00       	call   da56 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ce38:	48 89 d8             	mov    %rbx,%rax
    ce3b:	48 89 c7             	mov    %rax,%rdi
    ce3e:	e8 8d 66 ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create logical device.");
    ce43:	49 89 c4             	mov    %rax,%r12
    ce46:	48 89 df             	mov    %rbx,%rdi
    ce49:	e8 62 63 ff ff       	call   31b0 <__cxa_free_exception@plt>
    ce4e:	4c 89 e0             	mov    %r12,%rax
    ce51:	48 89 c7             	mov    %rax,%rdi
    ce54:	e8 77 66 ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    ce59:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
    ce60:	5b                   	pop    %rbx
    ce61:	41 5c                	pop    %r12
    ce63:	5d                   	pop    %rbp
    ce64:	c3                   	ret
    ce65:	90                   	nop

000000000000ce66 <_ZN4neko6DeviceD1Ev>:

Device::~Device() { vkDestroyDevice(mLogicalDevice, nullptr); }
    ce66:	55                   	push   %rbp
    ce67:	48 89 e5             	mov    %rsp,%rbp
    ce6a:	48 83 ec 10          	sub    $0x10,%rsp
    ce6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce76:	48 8b 00             	mov    (%rax),%rax
    ce79:	be 00 00 00 00       	mov    $0x0,%esi
    ce7e:	48 89 c7             	mov    %rax,%rdi
    ce81:	e8 aa 63 ff ff       	call   3230 <vkDestroyDevice@plt>
    ce86:	90                   	nop
    ce87:	c9                   	leave
    ce88:	c3                   	ret
    ce89:	90                   	nop

000000000000ce8a <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

u32 Device::selectUniversalQueueFamily(VkPhysicalDevice physicalDevice,
                                            VkSurfaceKHR surface) {
    ce8a:	55                   	push   %rbp
    ce8b:	48 89 e5             	mov    %rsp,%rbp
    ce8e:	41 54                	push   %r12
    ce90:	53                   	push   %rbx
    ce91:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    ce95:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    ce99:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    ce9d:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  u32 queueFamilyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    cea4:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    cea8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ceac:	ba 00 00 00 00       	mov    $0x0,%edx
    ceb1:	48 89 ce             	mov    %rcx,%rsi
    ceb4:	48 89 c7             	mov    %rax,%rdi
    ceb7:	e8 24 63 ff ff       	call   31e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           nullptr);
  if (queueFamilyCount == 0) {
    cebc:	8b 45 d0             	mov    -0x30(%rbp),%eax
    cebf:	85 c0                	test   %eax,%eax
    cec1:	75 3b                	jne    cefe <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("No queue family available.");
    cec3:	bf 10 00 00 00       	mov    $0x10,%edi
    cec8:	e8 43 62 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    cecd:	48 89 c3             	mov    %rax,%rbx
    ced0:	48 8d 05 32 70 00 00 	lea    0x7032(%rip),%rax        # 13f09 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29>
    ced7:	48 89 c6             	mov    %rax,%rsi
    ceda:	48 89 df             	mov    %rbx,%rdi
    cedd:	e8 ce 61 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    cee2:	48 8b 05 cf 60 01 00 	mov    0x160cf(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    cee9:	48 89 c2             	mov    %rax,%rdx
    ceec:	48 8d 05 0d 5e 01 00 	lea    0x15e0d(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    cef3:	48 89 c6             	mov    %rax,%rsi
    cef6:	48 89 df             	mov    %rbx,%rdi
    cef9:	e8 b2 65 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    cefe:	8b 45 d0             	mov    -0x30(%rbp),%eax
    cf01:	89 c3                	mov    %eax,%ebx
    cf03:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    cf07:	48 89 c7             	mov    %rax,%rdi
    cf0a:	e8 8b 0b 00 00       	call   da9a <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    cf0f:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    cf13:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cf17:	48 89 de             	mov    %rbx,%rsi
    cf1a:	48 89 c7             	mov    %rax,%rdi
    cf1d:	e8 b0 0b 00 00       	call   dad2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    cf22:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    cf26:	48 89 c7             	mov    %rax,%rdi
    cf29:	e8 88 0b 00 00       	call   dab6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    cf2e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cf32:	48 89 c7             	mov    %rax,%rdi
    cf35:	e8 52 0c 00 00       	call   db8c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    cf3a:	48 89 c2             	mov    %rax,%rdx
    cf3d:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    cf41:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    cf45:	48 89 ce             	mov    %rcx,%rsi
    cf48:	48 89 c7             	mov    %rax,%rdi
    cf4b:	e8 90 62 ff ff       	call   31e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  u32 iQueueFamily = 0;
    cf50:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    cf57:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cf5b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    cf5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf63:	48 89 c7             	mov    %rax,%rdi
    cf66:	e8 45 0c 00 00       	call   dbb0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    cf6b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    cf6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf73:	48 89 c7             	mov    %rax,%rdi
    cf76:	e8 5b 0c 00 00       	call   dbd6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    cf7b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    cf7f:	eb 78                	jmp    cff9 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x16f>
    cf81:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    cf85:	48 89 c7             	mov    %rax,%rdi
    cf88:	e8 cd 0c 00 00       	call   dc5a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    cf8d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    cf91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cf95:	8b 00                	mov    (%rax),%eax
    cf97:	83 e0 01             	and    $0x1,%eax
    cf9a:	85 c0                	test   %eax,%eax
    cf9c:	74 4f                	je     cfed <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
        (queueFamily.queueFlags & VK_QUEUE_COMPUTE_BIT)) {
    cf9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cfa2:	8b 00                	mov    (%rax),%eax
    cfa4:	83 e0 02             	and    $0x2,%eax
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    cfa7:	85 c0                	test   %eax,%eax
    cfa9:	74 42                	je     cfed <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
      VkBool32 presentSupport = false;
    cfab:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
      vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, iQueueFamily,
    cfb2:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    cfb6:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    cfbd:	8b 75 ec             	mov    -0x14(%rbp),%esi
    cfc0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    cfc4:	48 89 c7             	mov    %rax,%rdi
    cfc7:	e8 64 63 ff ff       	call   3330 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                           surface, &presentSupport);
      if (presentSupport) {
    cfcc:	8b 45 9c             	mov    -0x64(%rbp),%eax
    cfcf:	85 c0                	test   %eax,%eax
    cfd1:	74 16                	je     cfe9 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x15f>
        return iQueueFamily;
    cfd3:	8b 5d ec             	mov    -0x14(%rbp),%ebx
      }
      ++iQueueFamily;
    }
  }
  throw std::runtime_error("Failed to select a queue family.");
}
    cfd6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cfda:	48 89 c7             	mov    %rax,%rdi
    cfdd:	e8 66 0b 00 00       	call   db48 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
        return iQueueFamily;
    cfe2:	89 d8                	mov    %ebx,%eax
    cfe4:	e9 c0 00 00 00       	jmp    d0a9 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x21f>
      ++iQueueFamily;
    cfe9:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    cfed:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    cff1:	48 89 c7             	mov    %rax,%rdi
    cff4:	e8 41 0c 00 00       	call   dc3a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    cff9:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    cffd:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    d001:	48 89 d6             	mov    %rdx,%rsi
    d004:	48 89 c7             	mov    %rax,%rdi
    d007:	e8 f3 0b 00 00       	call   dbff <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d00c:	84 c0                	test   %al,%al
    d00e:	0f 85 6d ff ff ff    	jne    cf81 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf7>
  throw std::runtime_error("Failed to select a queue family.");
    d014:	bf 10 00 00 00       	mov    $0x10,%edi
    d019:	e8 f2 60 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    d01e:	48 89 c3             	mov    %rax,%rbx
    d021:	48 8d 05 00 6f 00 00 	lea    0x6f00(%rip),%rax        # 13f28 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    d028:	48 89 c6             	mov    %rax,%rsi
    d02b:	48 89 df             	mov    %rbx,%rdi
    d02e:	e8 7d 60 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    d033:	48 8b 05 7e 5f 01 00 	mov    0x15f7e(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d03a:	48 89 c2             	mov    %rax,%rdx
    d03d:	48 8d 05 bc 5c 01 00 	lea    0x15cbc(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d044:	48 89 c6             	mov    %rax,%rsi
    d047:	48 89 df             	mov    %rbx,%rdi
    d04a:	e8 61 64 ff ff       	call   34b0 <__cxa_throw@plt>
    throw std::runtime_error("No queue family available.");
    d04f:	49 89 c4             	mov    %rax,%r12
    d052:	48 89 df             	mov    %rbx,%rdi
    d055:	e8 56 61 ff ff       	call   31b0 <__cxa_free_exception@plt>
    d05a:	4c 89 e0             	mov    %r12,%rax
    d05d:	48 89 c7             	mov    %rax,%rdi
    d060:	e8 6b 64 ff ff       	call   34d0 <_Unwind_Resume@plt>
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    d065:	48 89 c3             	mov    %rax,%rbx
    d068:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    d06c:	48 89 c7             	mov    %rax,%rdi
    d06f:	e8 42 0a 00 00       	call   dab6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    d074:	48 89 d8             	mov    %rbx,%rax
    d077:	48 89 c7             	mov    %rax,%rdi
    d07a:	e8 51 64 ff ff       	call   34d0 <_Unwind_Resume@plt>
  throw std::runtime_error("Failed to select a queue family.");
    d07f:	49 89 c4             	mov    %rax,%r12
    d082:	48 89 df             	mov    %rbx,%rdi
    d085:	e8 26 61 ff ff       	call   31b0 <__cxa_free_exception@plt>
    d08a:	4c 89 e3             	mov    %r12,%rbx
    d08d:	eb 03                	jmp    d092 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x208>
}
    d08f:	48 89 c3             	mov    %rax,%rbx
    d092:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d096:	48 89 c7             	mov    %rax,%rdi
    d099:	e8 aa 0a 00 00       	call   db48 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    d09e:	48 89 d8             	mov    %rbx,%rax
    d0a1:	48 89 c7             	mov    %rax,%rdi
    d0a4:	e8 27 64 ff ff       	call   34d0 <_Unwind_Resume@plt>
    d0a9:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    d0ad:	5b                   	pop    %rbx
    d0ae:	41 5c                	pop    %r12
    d0b0:	5d                   	pop    %rbp
    d0b1:	c3                   	ret

000000000000d0b2 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>:

VkPhysicalDevice Device::selectPhysicalDevice(
    std::vector<VkPhysicalDevice> &&rrPhysicalDevices) {
    d0b2:	55                   	push   %rbp
    d0b3:	48 89 e5             	mov    %rsp,%rbp
    d0b6:	41 54                	push   %r12
    d0b8:	53                   	push   %rbx
    d0b9:	48 83 ec 20          	sub    $0x20,%rsp
    d0bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d0c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (rrPhysicalDevices.size() == 1) {
    d0c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0c9:	48 89 c7             	mov    %rax,%rdi
    d0cc:	e8 9b 0b 00 00       	call   dc6c <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    d0d1:	48 83 f8 01          	cmp    $0x1,%rax
    d0d5:	0f 94 c0             	sete   %al
    d0d8:	84 c0                	test   %al,%al
    d0da:	74 19                	je     d0f5 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x43>
    return rrPhysicalDevices[0];
    d0dc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0e0:	be 00 00 00 00       	mov    $0x0,%esi
    d0e5:	48 89 c7             	mov    %rax,%rdi
    d0e8:	e8 a3 0b 00 00       	call   dc90 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    d0ed:	48 8b 00             	mov    (%rax),%rax
    d0f0:	e9 b8 00 00 00       	jmp    d1ad <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  }
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    d0f5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d0fc:	00 
    d0fd:	eb 46                	jmp    d145 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x93>
    if (checkRequirements(rrPhysicalDevices[iDevice])) {
    d0ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d103:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d107:	48 89 d6             	mov    %rdx,%rsi
    d10a:	48 89 c7             	mov    %rax,%rdi
    d10d:	e8 7e 0b 00 00       	call   dc90 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    d112:	48 8b 10             	mov    (%rax),%rdx
    d115:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d119:	48 89 d6             	mov    %rdx,%rsi
    d11c:	48 89 c7             	mov    %rax,%rdi
    d11f:	e8 92 00 00 00       	call   d1b6 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>
    d124:	84 c0                	test   %al,%al
    d126:	74 18                	je     d140 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x8e>
      return rrPhysicalDevices[iDevice];
    d128:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d12c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d130:	48 89 d6             	mov    %rdx,%rsi
    d133:	48 89 c7             	mov    %rax,%rdi
    d136:	e8 55 0b 00 00       	call   dc90 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    d13b:	48 8b 00             	mov    (%rax),%rax
    d13e:	eb 6d                	jmp    d1ad <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    d140:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d145:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d149:	48 89 c7             	mov    %rax,%rdi
    d14c:	e8 1b 0b 00 00       	call   dc6c <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    d151:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d155:	0f 92 c0             	setb   %al
    d158:	84 c0                	test   %al,%al
    d15a:	75 a3                	jne    d0ff <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x4d>
    }
  }
  throw std::runtime_error("No suitable physical device found.");
    d15c:	bf 10 00 00 00       	mov    $0x10,%edi
    d161:	e8 aa 5f ff ff       	call   3110 <__cxa_allocate_exception@plt>
    d166:	48 89 c3             	mov    %rax,%rbx
    d169:	48 8d 05 e0 6d 00 00 	lea    0x6de0(%rip),%rax        # 13f50 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    d170:	48 89 c6             	mov    %rax,%rsi
    d173:	48 89 df             	mov    %rbx,%rdi
    d176:	e8 35 5f ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    d17b:	48 8b 05 36 5e 01 00 	mov    0x15e36(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d182:	48 89 c2             	mov    %rax,%rdx
    d185:	48 8d 05 74 5b 01 00 	lea    0x15b74(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d18c:	48 89 c6             	mov    %rax,%rsi
    d18f:	48 89 df             	mov    %rbx,%rdi
    d192:	e8 19 63 ff ff       	call   34b0 <__cxa_throw@plt>
    d197:	49 89 c4             	mov    %rax,%r12
    d19a:	48 89 df             	mov    %rbx,%rdi
    d19d:	e8 0e 60 ff ff       	call   31b0 <__cxa_free_exception@plt>
    d1a2:	4c 89 e0             	mov    %r12,%rax
    d1a5:	48 89 c7             	mov    %rax,%rdi
    d1a8:	e8 23 63 ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    d1ad:	48 83 c4 20          	add    $0x20,%rsp
    d1b1:	5b                   	pop    %rbx
    d1b2:	41 5c                	pop    %r12
    d1b4:	5d                   	pop    %rbp
    d1b5:	c3                   	ret

000000000000d1b6 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>:

bool Device::checkRequirements(VkPhysicalDevice physicalDevice) {
    d1b6:	55                   	push   %rbp
    d1b7:	48 89 e5             	mov    %rsp,%rbp
    d1ba:	48 83 ec 10          	sub    $0x10,%rsp
    d1be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    d1c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1ce:	48 89 d6             	mov    %rdx,%rsi
    d1d1:	48 89 c7             	mov    %rax,%rdi
    d1d4:	e8 41 00 00 00       	call   d21a <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>
    d1d9:	84 c0                	test   %al,%al
    d1db:	74 35                	je     d212 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    d1dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e5:	48 89 d6             	mov    %rdx,%rsi
    d1e8:	48 89 c7             	mov    %rax,%rdi
    d1eb:	e8 6a 00 00 00       	call   d25a <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>
    d1f0:	84 c0                	test   %al,%al
    d1f2:	74 1e                	je     d212 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
         checkFeatures(physicalDevice);
    d1f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1fc:	48 89 d6             	mov    %rdx,%rsi
    d1ff:	48 89 c7             	mov    %rax,%rdi
    d202:	e8 73 05 00 00       	call   d77a <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    d207:	84 c0                	test   %al,%al
    d209:	74 07                	je     d212 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    d20b:	b8 01 00 00 00       	mov    $0x1,%eax
    d210:	eb 05                	jmp    d217 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x61>
    d212:	b8 00 00 00 00       	mov    $0x0,%eax
}
    d217:	c9                   	leave
    d218:	c3                   	ret
    d219:	90                   	nop

000000000000d21a <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>:

bool Device::checkProperties(VkPhysicalDevice physicalDevice) {
    d21a:	55                   	push   %rbp
    d21b:	48 89 e5             	mov    %rsp,%rbp
    d21e:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    d225:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    d22c:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    d233:	48 8d 95 c0 fc ff ff 	lea    -0x340(%rbp),%rdx
    d23a:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
    d241:	48 89 d6             	mov    %rdx,%rsi
    d244:	48 89 c7             	mov    %rax,%rdi
    d247:	e8 74 5e ff ff       	call   30c0 <vkGetPhysicalDeviceProperties@plt>
  return properties.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    d24c:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    d252:	83 f8 02             	cmp    $0x2,%eax
    d255:	0f 94 c0             	sete   %al
}
    d258:	c9                   	leave
    d259:	c3                   	ret

000000000000d25a <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>:

bool Device::checkExtensions(VkPhysicalDevice physicalDevice) {
    d25a:	55                   	push   %rbp
    d25b:	48 89 e5             	mov    %rsp,%rbp
    d25e:	41 55                	push   %r13
    d260:	41 54                	push   %r12
    d262:	53                   	push   %rbx
    d263:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    d26a:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
    d271:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  const std::vector<const char *> requiredExtensions = {
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    d278:	48 8d 05 f4 6c 00 00 	lea    0x6cf4(%rip),%rax        # 13f73 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    d27f:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    d286:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d28d:	49 89 c4             	mov    %rax,%r12
    d290:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    d296:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    d29d:	48 89 c7             	mov    %rax,%rdi
    d2a0:	e8 0b 0a 00 00       	call   dcb0 <_ZNSaIPKcEC1Ev>
    d2a5:	48 8d 95 2e ff ff ff 	lea    -0xd2(%rbp),%rdx
    d2ac:	4c 89 e6             	mov    %r12,%rsi
    d2af:	4c 89 ef             	mov    %r13,%rdi
    d2b2:	4c 89 e1             	mov    %r12,%rcx
    d2b5:	4c 89 eb             	mov    %r13,%rbx
    d2b8:	48 89 df             	mov    %rbx,%rdi
    d2bb:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    d2c2:	48 89 d1             	mov    %rdx,%rcx
    d2c5:	48 89 fa             	mov    %rdi,%rdx
    d2c8:	48 89 c7             	mov    %rax,%rdi
    d2cb:	e8 18 0a 00 00       	call   dce8 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    d2d0:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    d2d7:	48 89 c7             	mov    %rax,%rdi
    d2da:	e8 ed 09 00 00       	call   dccc <_ZNSaIPKcED1Ev>

  u32 propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    d2df:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    d2e6:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    d2ed:	b9 00 00 00 00       	mov    $0x0,%ecx
    d2f2:	be 00 00 00 00       	mov    $0x0,%esi
    d2f7:	48 89 c7             	mov    %rax,%rdi
    d2fa:	e8 f1 60 ff ff       	call   33f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount, nullptr) != VK_SUCCESS) {
    d2ff:	85 c0                	test   %eax,%eax
    d301:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    d304:	84 c0                	test   %al,%al
    d306:	74 3b                	je     d343 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0xe9>
    throw std::runtime_error("Failed to get device extension list.");
    d308:	bf 10 00 00 00       	mov    $0x10,%edi
    d30d:	e8 fe 5d ff ff       	call   3110 <__cxa_allocate_exception@plt>
    d312:	48 89 c3             	mov    %rax,%rbx
    d315:	48 8d 05 6c 6c 00 00 	lea    0x6c6c(%rip),%rax        # 13f88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    d31c:	48 89 c6             	mov    %rax,%rsi
    d31f:	48 89 df             	mov    %rbx,%rdi
    d322:	e8 89 5d ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    d327:	48 8b 05 8a 5c 01 00 	mov    0x15c8a(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d32e:	48 89 c2             	mov    %rax,%rdx
    d331:	48 8d 05 c8 59 01 00 	lea    0x159c8(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d338:	48 89 c6             	mov    %rax,%rsi
    d33b:	48 89 df             	mov    %rbx,%rdi
    d33e:	e8 6d 61 ff ff       	call   34b0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    d343:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    d349:	89 c3                	mov    %eax,%ebx
    d34b:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    d352:	48 89 c7             	mov    %rax,%rdi
    d355:	e8 5a 0a 00 00       	call   ddb4 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    d35a:	48 8d 95 2f ff ff ff 	lea    -0xd1(%rbp),%rdx
    d361:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    d368:	48 89 de             	mov    %rbx,%rsi
    d36b:	48 89 c7             	mov    %rax,%rdi
    d36e:	e8 79 0a 00 00       	call   ddec <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    d373:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    d37a:	48 89 c7             	mov    %rax,%rdi
    d37d:	e8 4e 0a 00 00       	call   ddd0 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    d382:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    d389:	48 89 c7             	mov    %rax,%rdi
    d38c:	e8 15 0b 00 00       	call   dea6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    d391:	48 89 c1             	mov    %rax,%rcx
    d394:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    d39b:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    d3a2:	be 00 00 00 00       	mov    $0x0,%esi
    d3a7:	48 89 c7             	mov    %rax,%rdi
    d3aa:	e8 41 60 ff ff       	call   33f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount,
          availableExtensions.data()) != VK_SUCCESS) {
    d3af:	85 c0                	test   %eax,%eax
    d3b1:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    d3b4:	84 c0                	test   %al,%al
    d3b6:	74 3b                	je     d3f3 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x199>
    throw std::runtime_error("Failed to get device extension list.");
    d3b8:	bf 10 00 00 00       	mov    $0x10,%edi
    d3bd:	e8 4e 5d ff ff       	call   3110 <__cxa_allocate_exception@plt>
    d3c2:	48 89 c3             	mov    %rax,%rbx
    d3c5:	48 8d 05 bc 6b 00 00 	lea    0x6bbc(%rip),%rax        # 13f88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    d3cc:	48 89 c6             	mov    %rax,%rsi
    d3cf:	48 89 df             	mov    %rbx,%rdi
    d3d2:	e8 d9 5c ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    d3d7:	48 8b 05 da 5b 01 00 	mov    0x15bda(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d3de:	48 89 c2             	mov    %rax,%rdx
    d3e1:	48 8d 05 18 59 01 00 	lea    0x15918(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d3e8:	48 89 c6             	mov    %rax,%rsi
    d3eb:	48 89 df             	mov    %rbx,%rdi
    d3ee:	e8 bd 60 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  /* Check if all required extension are supported */
  std::map<std::string, u32> helper;
    d3f3:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    d3fa:	48 89 c7             	mov    %rax,%rdi
    d3fd:	e8 00 06 00 00       	call   da02 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensions) {
    d402:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    d409:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d40d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d411:	48 89 c7             	mov    %rax,%rdi
    d414:	e8 3f 0b 00 00       	call   df58 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d419:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    d420:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d424:	48 89 c7             	mov    %rax,%rdi
    d427:	e8 52 0b 00 00       	call   df7e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d42c:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    d433:	e9 8c 00 00 00       	jmp    d4c4 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x26a>
    d438:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    d43f:	48 89 c7             	mov    %rax,%rdi
    d442:	e8 bf 0b 00 00       	call   e006 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d447:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    helper[availableExtension.extensionName]++;
    d44b:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    d452:	48 89 c7             	mov    %rax,%rdi
    d455:	e8 86 60 ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    d45a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    d45e:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    d465:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    d46c:	48 89 ce             	mov    %rcx,%rsi
    d46f:	48 89 c7             	mov    %rax,%rdi
    d472:	e8 db 77 ff ff       	call   4c52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d477:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    d47e:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    d485:	48 89 d6             	mov    %rdx,%rsi
    d488:	48 89 c7             	mov    %rax,%rdi
    d48b:	e8 88 0b 00 00       	call   e018 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d490:	8b 10                	mov    (%rax),%edx
    d492:	83 c2 01             	add    $0x1,%edx
    d495:	89 10                	mov    %edx,(%rax)
    d497:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    d49e:	48 89 c7             	mov    %rax,%rdi
    d4a1:	e8 ba 5c ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d4a6:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    d4ad:	48 89 c7             	mov    %rax,%rdi
    d4b0:	e8 8b 5e ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensions) {
    d4b5:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    d4bc:	48 89 c7             	mov    %rax,%rdi
    d4bf:	e8 1e 0b 00 00       	call   dfe2 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d4c4:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
    d4cb:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    d4d2:	48 89 d6             	mov    %rdx,%rsi
    d4d5:	48 89 c7             	mov    %rax,%rdi
    d4d8:	e8 ca 0a 00 00       	call   dfa7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d4dd:	84 c0                	test   %al,%al
    d4df:	0f 85 53 ff ff ff    	jne    d438 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x1de>
  }
  for (const auto &requiredExtension : requiredExtensions) {
    d4e5:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    d4ec:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d4f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d4f4:	48 89 c7             	mov    %rax,%rdi
    d4f7:	e8 20 0c 00 00       	call   e11c <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    d4fc:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    d503:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d507:	48 89 c7             	mov    %rax,%rdi
    d50a:	e8 33 0c 00 00       	call   e142 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    d50f:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    d516:	e9 ed 00 00 00       	jmp    d608 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3ae>
    d51b:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    d522:	48 89 c7             	mov    %rax,%rdi
    d525:	e8 9c 0c 00 00       	call   e1c6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d52a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    helper[requiredExtension]++;
    d52e:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    d532:	48 89 c7             	mov    %rax,%rdi
    d535:	e8 a6 5f ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    d53a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d53e:	48 8b 08             	mov    (%rax),%rcx
    d541:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    d545:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d54c:	48 89 ce             	mov    %rcx,%rsi
    d54f:	48 89 c7             	mov    %rax,%rdi
    d552:	e8 fb 76 ff ff       	call   4c52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d557:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    d55e:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    d565:	48 89 d6             	mov    %rdx,%rsi
    d568:	48 89 c7             	mov    %rax,%rdi
    d56b:	e8 a8 0a 00 00       	call   e018 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d570:	8b 10                	mov    (%rax),%edx
    d572:	83 c2 01             	add    $0x1,%edx
    d575:	89 10                	mov    %edx,(%rax)
    d577:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d57e:	48 89 c7             	mov    %rax,%rdi
    d581:	e8 da 5b ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d586:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    d58a:	48 89 c7             	mov    %rax,%rdi
    d58d:	e8 ae 5d ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    if (helper[requiredExtension] < 2) {
    d592:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    d596:	48 89 c7             	mov    %rax,%rdi
    d599:	e8 42 5f ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    d59e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d5a2:	48 8b 08             	mov    (%rax),%rcx
    d5a5:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    d5a9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d5ad:	48 89 ce             	mov    %rcx,%rsi
    d5b0:	48 89 c7             	mov    %rax,%rdi
    d5b3:	e8 9a 76 ff ff       	call   4c52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d5b8:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    d5bc:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    d5c3:	48 89 d6             	mov    %rdx,%rsi
    d5c6:	48 89 c7             	mov    %rax,%rdi
    d5c9:	e8 4a 0a 00 00       	call   e018 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d5ce:	8b 00                	mov    (%rax),%eax
    d5d0:	83 f8 01             	cmp    $0x1,%eax
    d5d3:	0f 96 c3             	setbe  %bl
    d5d6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d5da:	48 89 c7             	mov    %rax,%rdi
    d5dd:	e8 7e 5b ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d5e2:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    d5e6:	48 89 c7             	mov    %rax,%rdi
    d5e9:	e8 52 5d ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    d5ee:	84 db                	test   %bl,%bl
    d5f0:	74 07                	je     d5f9 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x39f>
      return false;
    d5f2:	bb 00 00 00 00       	mov    $0x0,%ebx
    d5f7:	eb 35                	jmp    d62e <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3d4>
  for (const auto &requiredExtension : requiredExtensions) {
    d5f9:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    d600:	48 89 c7             	mov    %rax,%rdi
    d603:	e8 9e 0b 00 00       	call   e1a6 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    d608:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
    d60f:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    d616:	48 89 d6             	mov    %rdx,%rsi
    d619:	48 89 c7             	mov    %rax,%rdi
    d61c:	e8 4a 0b 00 00       	call   e16b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    d621:	84 c0                	test   %al,%al
    d623:	0f 85 f2 fe ff ff    	jne    d51b <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x2c1>
    }
  }
  return true;
    d629:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    d62e:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    d635:	48 89 c7             	mov    %rax,%rdi
    d638:	e8 e1 03 00 00       	call   da1e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d63d:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    d644:	48 89 c7             	mov    %rax,%rdi
    d647:	e8 16 08 00 00       	call   de62 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d64c:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    d653:	48 89 c7             	mov    %rax,%rdi
    d656:	e8 15 07 00 00       	call   dd70 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    d65b:	89 d8                	mov    %ebx,%eax
    d65d:	e9 09 01 00 00       	jmp    d76b <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x511>
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    d662:	48 89 c3             	mov    %rax,%rbx
    d665:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    d66c:	48 89 c7             	mov    %rax,%rdi
    d66f:	e8 58 06 00 00       	call   dccc <_ZNSaIPKcED1Ev>
    d674:	48 89 d8             	mov    %rbx,%rax
    d677:	48 89 c7             	mov    %rax,%rdi
    d67a:	e8 51 5e ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    d67f:	49 89 c4             	mov    %rax,%r12
    d682:	48 89 df             	mov    %rbx,%rdi
    d685:	e8 26 5b ff ff       	call   31b0 <__cxa_free_exception@plt>
    d68a:	4c 89 e3             	mov    %r12,%rbx
    d68d:	e9 bf 00 00 00       	jmp    d751 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    d692:	48 89 c3             	mov    %rax,%rbx
    d695:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    d69c:	48 89 c7             	mov    %rax,%rdi
    d69f:	e8 2c 07 00 00       	call   ddd0 <_ZNSaI21VkExtensionPropertiesED1Ev>
    d6a4:	e9 a8 00 00 00       	jmp    d751 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    throw std::runtime_error("Failed to get device extension list.");
    d6a9:	49 89 c4             	mov    %rax,%r12
    d6ac:	48 89 df             	mov    %rbx,%rdi
    d6af:	e8 fc 5a ff ff       	call   31b0 <__cxa_free_exception@plt>
    d6b4:	4c 89 e3             	mov    %r12,%rbx
    d6b7:	e9 81 00 00 00       	jmp    d73d <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    helper[availableExtension.extensionName]++;
    d6bc:	48 89 c3             	mov    %rax,%rbx
    d6bf:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    d6c6:	48 89 c7             	mov    %rax,%rdi
    d6c9:	e8 92 5a ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d6ce:	eb 03                	jmp    d6d3 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x479>
    d6d0:	48 89 c3             	mov    %rax,%rbx
    d6d3:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    d6da:	48 89 c7             	mov    %rax,%rdi
    d6dd:	e8 5e 5c ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    d6e2:	eb 45                	jmp    d729 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    helper[requiredExtension]++;
    d6e4:	48 89 c3             	mov    %rax,%rbx
    d6e7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d6ee:	48 89 c7             	mov    %rax,%rdi
    d6f1:	e8 6a 5a ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d6f6:	eb 03                	jmp    d6fb <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4a1>
    d6f8:	48 89 c3             	mov    %rax,%rbx
    d6fb:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    d6ff:	48 89 c7             	mov    %rax,%rdi
    d702:	e8 39 5c ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    d707:	eb 20                	jmp    d729 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    if (helper[requiredExtension] < 2) {
    d709:	48 89 c3             	mov    %rax,%rbx
    d70c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d710:	48 89 c7             	mov    %rax,%rdi
    d713:	e8 48 5a ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d718:	eb 03                	jmp    d71d <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4c3>
    d71a:	48 89 c3             	mov    %rax,%rbx
    d71d:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    d721:	48 89 c7             	mov    %rax,%rdi
    d724:	e8 17 5c ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
}
    d729:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    d730:	48 89 c7             	mov    %rax,%rdi
    d733:	e8 e6 02 00 00       	call   da1e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d738:	eb 03                	jmp    d73d <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    d73a:	48 89 c3             	mov    %rax,%rbx
    d73d:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    d744:	48 89 c7             	mov    %rax,%rdi
    d747:	e8 16 07 00 00       	call   de62 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d74c:	eb 03                	jmp    d751 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    d74e:	48 89 c3             	mov    %rax,%rbx
    d751:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    d758:	48 89 c7             	mov    %rax,%rdi
    d75b:	e8 10 06 00 00       	call   dd70 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    d760:	48 89 d8             	mov    %rbx,%rax
    d763:	48 89 c7             	mov    %rax,%rdi
    d766:	e8 65 5d ff ff       	call   34d0 <_Unwind_Resume@plt>
    d76b:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    d772:	5b                   	pop    %rbx
    d773:	41 5c                	pop    %r12
    d775:	41 5d                	pop    %r13
    d777:	5d                   	pop    %rbp
    d778:	c3                   	ret
    d779:	90                   	nop

000000000000d77a <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>:

bool Device::checkFeatures(VkPhysicalDevice physicalDevice) {
    d77a:	55                   	push   %rbp
    d77b:	48 89 e5             	mov    %rsp,%rbp
    d77e:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    d785:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    d78c:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  VkPhysicalDeviceFeatures supportedFeatures;
  vkGetPhysicalDeviceFeatures(physicalDevice, &supportedFeatures);
    d793:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    d79a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d7a1:	48 89 d6             	mov    %rdx,%rsi
    d7a4:	48 89 c7             	mov    %rax,%rdi
    d7a7:	e8 44 5a ff ff       	call   31f0 <vkGetPhysicalDeviceFeatures@plt>
  return supportedFeatures.samplerAnisotropy;
    d7ac:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    d7b2:	85 c0                	test   %eax,%eax
    d7b4:	0f 95 c0             	setne  %al
}
    d7b7:	c9                   	leave
    d7b8:	c3                   	ret
    d7b9:	90                   	nop

000000000000d7ba <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>:

std::vector<VkPhysicalDevice> Device::getPhysicalDevices(VkInstance instance) {
    d7ba:	55                   	push   %rbp
    d7bb:	48 89 e5             	mov    %rsp,%rbp
    d7be:	41 54                	push   %r12
    d7c0:	53                   	push   %rbx
    d7c1:	48 83 ec 30          	sub    $0x30,%rsp
    d7c5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d7c9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d7cd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  u32 physicalDeviceCount;
  VkResult result;
  if (result =
          vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    d7d1:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d7d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d7d9:	ba 00 00 00 00       	mov    $0x0,%edx
    d7de:	48 89 ce             	mov    %rcx,%rsi
    d7e1:	48 89 c7             	mov    %rax,%rdi
    d7e4:	e8 57 59 ff ff       	call   3140 <vkEnumeratePhysicalDevices@plt>
    d7e9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result =
    d7ec:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    d7f0:	74 41                	je     d833 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    d7f2:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    d7f6:	74 3b                	je     d833 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
    throw std::runtime_error("Failed to enumerate physical devices.");
    d7f8:	bf 10 00 00 00       	mov    $0x10,%edi
    d7fd:	e8 0e 59 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    d802:	48 89 c3             	mov    %rax,%rbx
    d805:	48 8d 05 a4 67 00 00 	lea    0x67a4(%rip),%rax        # 13fb0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    d80c:	48 89 c6             	mov    %rax,%rsi
    d80f:	48 89 df             	mov    %rbx,%rdi
    d812:	e8 99 58 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    d817:	48 8b 05 9a 57 01 00 	mov    0x1579a(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d81e:	48 89 c2             	mov    %rax,%rdx
    d821:	48 8d 05 d8 54 01 00 	lea    0x154d8(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d828:	48 89 c6             	mov    %rax,%rsi
    d82b:	48 89 df             	mov    %rbx,%rdi
    d82e:	e8 7d 5c ff ff       	call   34b0 <__cxa_throw@plt>
  }
  if (physicalDeviceCount == 0) {
    d833:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d836:	85 c0                	test   %eax,%eax
    d838:	75 3b                	jne    d875 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0xbb>
    throw std::runtime_error("Failed to find any physical device.");
    d83a:	bf 10 00 00 00       	mov    $0x10,%edi
    d83f:	e8 cc 58 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    d844:	48 89 c3             	mov    %rax,%rbx
    d847:	48 8d 05 8a 67 00 00 	lea    0x678a(%rip),%rax        # 13fd8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xf8>
    d84e:	48 89 c6             	mov    %rax,%rsi
    d851:	48 89 df             	mov    %rbx,%rdi
    d854:	e8 57 58 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    d859:	48 8b 05 58 57 01 00 	mov    0x15758(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d860:	48 89 c2             	mov    %rax,%rdx
    d863:	48 8d 05 96 54 01 00 	lea    0x15496(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d86a:	48 89 c6             	mov    %rax,%rsi
    d86d:	48 89 df             	mov    %rbx,%rdi
    d870:	e8 3b 5c ff ff       	call   34b0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    d875:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d878:	89 c3                	mov    %eax,%ebx
    d87a:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    d87e:	48 89 c7             	mov    %rax,%rdi
    d881:	e8 52 09 00 00       	call   e1d8 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    d886:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
    d88a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d88e:	48 89 de             	mov    %rbx,%rsi
    d891:	48 89 c7             	mov    %rax,%rdi
    d894:	e8 77 09 00 00       	call   e210 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    d899:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    d89d:	48 89 c7             	mov    %rax,%rdi
    d8a0:	e8 4f 09 00 00       	call   e1f4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (result = vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    d8a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8a9:	48 89 c7             	mov    %rax,%rdi
    d8ac:	e8 d5 09 00 00       	call   e286 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    d8b1:	48 89 c2             	mov    %rax,%rdx
    d8b4:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d8b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d8bc:	48 89 ce             	mov    %rcx,%rsi
    d8bf:	48 89 c7             	mov    %rax,%rdi
    d8c2:	e8 79 58 ff ff       	call   3140 <vkEnumeratePhysicalDevices@plt>
    d8c7:	89 45 ec             	mov    %eax,-0x14(%rbp)
    d8ca:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    d8ce:	0f 84 b5 00 00 00    	je     d989 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
                                          physicalDevices.data());
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    d8d4:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    d8d8:	0f 84 ab 00 00 00    	je     d989 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
    throw std::runtime_error("Failed to enumerate physical devices.");
    d8de:	bf 10 00 00 00       	mov    $0x10,%edi
    d8e3:	e8 28 58 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    d8e8:	48 89 c3             	mov    %rax,%rbx
    d8eb:	48 8d 05 be 66 00 00 	lea    0x66be(%rip),%rax        # 13fb0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    d8f2:	48 89 c6             	mov    %rax,%rsi
    d8f5:	48 89 df             	mov    %rbx,%rdi
    d8f8:	e8 b3 57 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    d8fd:	48 8b 05 b4 56 01 00 	mov    0x156b4(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d904:	48 89 c2             	mov    %rax,%rdx
    d907:	48 8d 05 f2 53 01 00 	lea    0x153f2(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d90e:	48 89 c6             	mov    %rax,%rsi
    d911:	48 89 df             	mov    %rbx,%rdi
    d914:	e8 97 5b ff ff       	call   34b0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    d919:	49 89 c4             	mov    %rax,%r12
    d91c:	48 89 df             	mov    %rbx,%rdi
    d91f:	e8 8c 58 ff ff       	call   31b0 <__cxa_free_exception@plt>
    d924:	4c 89 e0             	mov    %r12,%rax
    d927:	48 89 c7             	mov    %rax,%rdi
    d92a:	e8 a1 5b ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find any physical device.");
    d92f:	49 89 c4             	mov    %rax,%r12
    d932:	48 89 df             	mov    %rbx,%rdi
    d935:	e8 76 58 ff ff       	call   31b0 <__cxa_free_exception@plt>
    d93a:	4c 89 e0             	mov    %r12,%rax
    d93d:	48 89 c7             	mov    %rax,%rdi
    d940:	e8 8b 5b ff ff       	call   34d0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    d945:	48 89 c3             	mov    %rax,%rbx
    d948:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    d94c:	48 89 c7             	mov    %rax,%rdi
    d94f:	e8 a0 08 00 00       	call   e1f4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    d954:	48 89 d8             	mov    %rbx,%rax
    d957:	48 89 c7             	mov    %rax,%rdi
    d95a:	e8 71 5b ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    d95f:	49 89 c4             	mov    %rax,%r12
    d962:	48 89 df             	mov    %rbx,%rdi
    d965:	e8 46 58 ff ff       	call   31b0 <__cxa_free_exception@plt>
    d96a:	4c 89 e3             	mov    %r12,%rbx
    d96d:	eb 03                	jmp    d972 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1b8>
  }
  return physicalDevices;
}
    d96f:	48 89 c3             	mov    %rax,%rbx
    d972:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d976:	48 89 c7             	mov    %rax,%rdi
    d979:	e8 d8 00 00 00       	call   da56 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d97e:	48 89 d8             	mov    %rbx,%rax
    d981:	48 89 c7             	mov    %rax,%rdi
    d984:	e8 47 5b ff ff       	call   34d0 <_Unwind_Resume@plt>
  return physicalDevices;
    d989:	90                   	nop
}
    d98a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d98e:	48 83 c4 30          	add    $0x30,%rsp
    d992:	5b                   	pop    %rbx
    d993:	41 5c                	pop    %r12
    d995:	5d                   	pop    %rbp
    d996:	c3                   	ret

000000000000d997 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    d997:	55                   	push   %rbp
    d998:	48 89 e5             	mov    %rsp,%rbp
    d99b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9a3:	5d                   	pop    %rbp
    d9a4:	c3                   	ret
    d9a5:	90                   	nop

000000000000d9a6 <_ZNK4neko8InstancedeEv>:

  const VkInstance &operator*() const noexcept { return mInstance; }
    d9a6:	55                   	push   %rbp
    d9a7:	48 89 e5             	mov    %rsp,%rbp
    d9aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b2:	48 83 c0 08          	add    $0x8,%rax
    d9b6:	5d                   	pop    %rbp
    d9b7:	c3                   	ret

000000000000d9b8 <_ZNK4neko7SurfacedeEv>:

  Surface &operator=(Surface &&) = default;

  ~Surface();

  const VkSurfaceKHR &operator*() const noexcept { return mSurface; }
    d9b8:	55                   	push   %rbp
    d9b9:	48 89 e5             	mov    %rsp,%rbp
    d9bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9c4:	48 83 c0 08          	add    $0x8,%rax
    d9c8:	5d                   	pop    %rbp
    d9c9:	c3                   	ret

000000000000d9ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
	struct _Rb_tree_impl
    d9ca:	55                   	push   %rbp
    d9cb:	48 89 e5             	mov    %rsp,%rbp
    d9ce:	48 83 ec 10          	sub    $0x10,%rsp
    d9d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9da:	48 89 c7             	mov    %rax,%rdi
    d9dd:	e8 20 05 00 00       	call   df02 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    d9e2:	90                   	nop
    d9e3:	c9                   	leave
    d9e4:	c3                   	ret
    d9e5:	90                   	nop

000000000000d9e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
      _Rb_tree() = default;
    d9e6:	55                   	push   %rbp
    d9e7:	48 89 e5             	mov    %rsp,%rbp
    d9ea:	48 83 ec 10          	sub    $0x10,%rsp
    d9ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9f6:	48 89 c7             	mov    %rax,%rdi
    d9f9:	e8 cc 04 00 00       	call   deca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    d9fe:	90                   	nop
    d9ff:	c9                   	leave
    da00:	c3                   	ret
    da01:	90                   	nop

000000000000da02 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
      map() = default;
    da02:	55                   	push   %rbp
    da03:	48 89 e5             	mov    %rsp,%rbp
    da06:	48 83 ec 10          	sub    $0x10,%rsp
    da0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da12:	48 89 c7             	mov    %rax,%rdi
    da15:	e8 cc ff ff ff       	call   d9e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    da1a:	90                   	nop
    da1b:	c9                   	leave
    da1c:	c3                   	ret
    da1d:	90                   	nop

000000000000da1e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      ~map() = default;
    da1e:	55                   	push   %rbp
    da1f:	48 89 e5             	mov    %rsp,%rbp
    da22:	48 83 ec 10          	sub    $0x10,%rsp
    da26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da2e:	48 89 c7             	mov    %rax,%rdi
    da31:	e8 e8 04 00 00       	call   df1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    da36:	90                   	nop
    da37:	c9                   	leave
    da38:	c3                   	ret
    da39:	90                   	nop

000000000000da3a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    da3a:	55                   	push   %rbp
    da3b:	48 89 e5             	mov    %rsp,%rbp
    da3e:	48 83 ec 10          	sub    $0x10,%rsp
    da42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da4a:	48 89 c7             	mov    %rax,%rdi
    da4d:	e8 a2 07 00 00       	call   e1f4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    da52:	90                   	nop
    da53:	c9                   	leave
    da54:	c3                   	ret
    da55:	90                   	nop

000000000000da56 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    da56:	55                   	push   %rbp
    da57:	48 89 e5             	mov    %rsp,%rbp
    da5a:	48 83 ec 10          	sub    $0x10,%rsp
    da5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    da62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da66:	48 89 c7             	mov    %rax,%rdi
    da69:	e8 8a 08 00 00       	call   e2f8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    da6e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    da71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da75:	48 8b 48 08          	mov    0x8(%rax),%rcx
    da79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da7d:	48 8b 00             	mov    (%rax),%rax
    da80:	48 89 ce             	mov    %rcx,%rsi
    da83:	48 89 c7             	mov    %rax,%rdi
    da86:	e8 7b 08 00 00       	call   e306 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    da8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da8f:	48 89 c7             	mov    %rax,%rdi
    da92:	e8 13 08 00 00       	call   e2aa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    da97:	90                   	nop
    da98:	c9                   	leave
    da99:	c3                   	ret

000000000000da9a <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    da9a:	55                   	push   %rbp
    da9b:	48 89 e5             	mov    %rsp,%rbp
    da9e:	48 83 ec 10          	sub    $0x10,%rsp
    daa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    daa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daaa:	48 89 c7             	mov    %rax,%rdi
    daad:	e8 7e 08 00 00       	call   e330 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    dab2:	90                   	nop
    dab3:	c9                   	leave
    dab4:	c3                   	ret
    dab5:	90                   	nop

000000000000dab6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    dab6:	55                   	push   %rbp
    dab7:	48 89 e5             	mov    %rsp,%rbp
    daba:	48 83 ec 10          	sub    $0x10,%rsp
    dabe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dac6:	48 89 c7             	mov    %rax,%rdi
    dac9:	e8 6e 08 00 00       	call   e33c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    dace:	90                   	nop
    dacf:	c9                   	leave
    dad0:	c3                   	ret
    dad1:	90                   	nop

000000000000dad2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    dad2:	55                   	push   %rbp
    dad3:	48 89 e5             	mov    %rsp,%rbp
    dad6:	53                   	push   %rbx
    dad7:	48 83 ec 28          	sub    $0x28,%rsp
    dadb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dadf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    dae3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    dae7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    daeb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    daef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    daf3:	48 89 d6             	mov    %rdx,%rsi
    daf6:	48 89 c7             	mov    %rax,%rdi
    daf9:	e8 49 08 00 00       	call   e347 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    dafe:	48 89 c1             	mov    %rax,%rcx
    db01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db05:	48 89 c2             	mov    %rax,%rdx
    db08:	48 89 ce             	mov    %rcx,%rsi
    db0b:	48 89 df             	mov    %rbx,%rdi
    db0e:	e8 b1 08 00 00       	call   e3c4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    db13:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    db17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db1b:	48 89 d6             	mov    %rdx,%rsi
    db1e:	48 89 c7             	mov    %rax,%rdi
    db21:	e8 54 09 00 00       	call   e47a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    db26:	eb 1a                	jmp    db42 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    db28:	48 89 c3             	mov    %rax,%rbx
    db2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db2f:	48 89 c7             	mov    %rax,%rdi
    db32:	e8 eb 08 00 00       	call   e422 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    db37:	48 89 d8             	mov    %rbx,%rax
    db3a:	48 89 c7             	mov    %rax,%rdi
    db3d:	e8 8e 59 ff ff       	call   34d0 <_Unwind_Resume@plt>
    db42:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    db46:	c9                   	leave
    db47:	c3                   	ret

000000000000db48 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    db48:	55                   	push   %rbp
    db49:	48 89 e5             	mov    %rsp,%rbp
    db4c:	48 83 ec 10          	sub    $0x10,%rsp
    db50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    db54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db58:	48 89 c7             	mov    %rax,%rdi
    db5b:	e8 5a 09 00 00       	call   e4ba <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    db60:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    db63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db67:	48 8b 48 08          	mov    0x8(%rax),%rcx
    db6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db6f:	48 8b 00             	mov    (%rax),%rax
    db72:	48 89 ce             	mov    %rcx,%rsi
    db75:	48 89 c7             	mov    %rax,%rdi
    db78:	e8 4b 09 00 00       	call   e4c8 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    db7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db81:	48 89 c7             	mov    %rax,%rdi
    db84:	e8 99 08 00 00       	call   e422 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    db89:	90                   	nop
    db8a:	c9                   	leave
    db8b:	c3                   	ret

000000000000db8c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    db8c:	55                   	push   %rbp
    db8d:	48 89 e5             	mov    %rsp,%rbp
    db90:	48 83 ec 10          	sub    $0x10,%rsp
    db94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    db98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db9c:	48 8b 10             	mov    (%rax),%rdx
    db9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dba3:	48 89 d6             	mov    %rdx,%rsi
    dba6:	48 89 c7             	mov    %rax,%rdi
    dba9:	e8 44 09 00 00       	call   e4f2 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    dbae:	c9                   	leave
    dbaf:	c3                   	ret

000000000000dbb0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    dbb0:	55                   	push   %rbp
    dbb1:	48 89 e5             	mov    %rsp,%rbp
    dbb4:	48 83 ec 20          	sub    $0x20,%rsp
    dbb8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    dbbc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbc0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dbc4:	48 89 d6             	mov    %rdx,%rsi
    dbc7:	48 89 c7             	mov    %rax,%rdi
    dbca:	e8 35 09 00 00       	call   e504 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    dbcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbd3:	c9                   	leave
    dbd4:	c3                   	ret
    dbd5:	90                   	nop

000000000000dbd6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    dbd6:	55                   	push   %rbp
    dbd7:	48 89 e5             	mov    %rsp,%rbp
    dbda:	48 83 ec 20          	sub    $0x20,%rsp
    dbde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    dbe2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbe6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    dbea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dbee:	48 89 d6             	mov    %rdx,%rsi
    dbf1:	48 89 c7             	mov    %rax,%rdi
    dbf4:	e8 0b 09 00 00       	call   e504 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    dbf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbfd:	c9                   	leave
    dbfe:	c3                   	ret

000000000000dbff <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    dbff:	55                   	push   %rbp
    dc00:	48 89 e5             	mov    %rsp,%rbp
    dc03:	53                   	push   %rbx
    dc04:	48 83 ec 18          	sub    $0x18,%rsp
    dc08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dc0c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    dc10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc14:	48 89 c7             	mov    %rax,%rdi
    dc17:	e8 06 09 00 00       	call   e522 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    dc1c:	48 8b 18             	mov    (%rax),%rbx
    dc1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dc23:	48 89 c7             	mov    %rax,%rdi
    dc26:	e8 f7 08 00 00       	call   e522 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    dc2b:	48 8b 00             	mov    (%rax),%rax
    dc2e:	48 39 c3             	cmp    %rax,%rbx
    dc31:	0f 95 c0             	setne  %al
    dc34:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dc38:	c9                   	leave
    dc39:	c3                   	ret

000000000000dc3a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    dc3a:	55                   	push   %rbp
    dc3b:	48 89 e5             	mov    %rsp,%rbp
    dc3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    dc42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc46:	48 8b 00             	mov    (%rax),%rax
    dc49:	48 8d 50 18          	lea    0x18(%rax),%rdx
    dc4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc51:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    dc54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    dc58:	5d                   	pop    %rbp
    dc59:	c3                   	ret

000000000000dc5a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    dc5a:	55                   	push   %rbp
    dc5b:	48 89 e5             	mov    %rsp,%rbp
    dc5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    dc62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc66:	48 8b 00             	mov    (%rax),%rax
    dc69:	5d                   	pop    %rbp
    dc6a:	c3                   	ret
    dc6b:	90                   	nop

000000000000dc6c <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    dc6c:	55                   	push   %rbp
    dc6d:	48 89 e5             	mov    %rsp,%rbp
    dc70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    dc74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc78:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dc7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc80:	48 8b 00             	mov    (%rax),%rax
    dc83:	48 29 c2             	sub    %rax,%rdx
    dc86:	48 89 d0             	mov    %rdx,%rax
    dc89:	48 c1 f8 03          	sar    $0x3,%rax
    dc8d:	5d                   	pop    %rbp
    dc8e:	c3                   	ret
    dc8f:	90                   	nop

000000000000dc90 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    dc90:	55                   	push   %rbp
    dc91:	48 89 e5             	mov    %rsp,%rbp
    dc94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    dc9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dca0:	48 8b 00             	mov    (%rax),%rax
    dca3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dca7:	48 c1 e2 03          	shl    $0x3,%rdx
    dcab:	48 01 d0             	add    %rdx,%rax
      }
    dcae:	5d                   	pop    %rbp
    dcaf:	c3                   	ret

000000000000dcb0 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    dcb0:	55                   	push   %rbp
    dcb1:	48 89 e5             	mov    %rsp,%rbp
    dcb4:	48 83 ec 10          	sub    $0x10,%rsp
    dcb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcc0:	48 89 c7             	mov    %rax,%rdi
    dcc3:	e8 68 08 00 00       	call   e530 <_ZNSt15__new_allocatorIPKcEC1Ev>
    dcc8:	90                   	nop
    dcc9:	c9                   	leave
    dcca:	c3                   	ret
    dccb:	90                   	nop

000000000000dccc <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    dccc:	55                   	push   %rbp
    dccd:	48 89 e5             	mov    %rsp,%rbp
    dcd0:	48 83 ec 10          	sub    $0x10,%rsp
    dcd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcdc:	48 89 c7             	mov    %rax,%rdi
    dcdf:	e8 58 08 00 00       	call   e53c <_ZNSt15__new_allocatorIPKcED1Ev>
    dce4:	90                   	nop
    dce5:	c9                   	leave
    dce6:	c3                   	ret
    dce7:	90                   	nop

000000000000dce8 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    dce8:	55                   	push   %rbp
    dce9:	48 89 e5             	mov    %rsp,%rbp
    dcec:	53                   	push   %rbx
    dced:	48 83 ec 38          	sub    $0x38,%rsp
    dcf1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    dcf5:	48 89 f0             	mov    %rsi,%rax
    dcf8:	48 89 d6             	mov    %rdx,%rsi
    dcfb:	48 89 f2             	mov    %rsi,%rdx
    dcfe:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    dd02:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    dd06:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    dd0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dd0e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    dd12:	48 89 d6             	mov    %rdx,%rsi
    dd15:	48 89 c7             	mov    %rax,%rdi
    dd18:	e8 47 08 00 00       	call   e564 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    dd1d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dd21:	48 89 c7             	mov    %rax,%rdi
    dd24:	e8 c1 08 00 00       	call   e5ea <_ZNKSt16initializer_listIPKcE3endEv>
    dd29:	48 89 c3             	mov    %rax,%rbx
    dd2c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dd30:	48 89 c7             	mov    %rax,%rdi
    dd33:	e8 a0 08 00 00       	call   e5d8 <_ZNKSt16initializer_listIPKcE5beginEv>
    dd38:	48 89 c1             	mov    %rax,%rcx
    dd3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dd3f:	48 89 da             	mov    %rbx,%rdx
    dd42:	48 89 ce             	mov    %rcx,%rsi
    dd45:	48 89 c7             	mov    %rax,%rdi
    dd48:	e8 03 09 00 00       	call   e650 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    dd4d:	eb 1a                	jmp    dd69 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    dd4f:	48 89 c3             	mov    %rax,%rbx
    dd52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dd56:	48 89 c7             	mov    %rax,%rdi
    dd59:	e8 2c 08 00 00       	call   e58a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    dd5e:	48 89 d8             	mov    %rbx,%rax
    dd61:	48 89 c7             	mov    %rax,%rdi
    dd64:	e8 67 57 ff ff       	call   34d0 <_Unwind_Resume@plt>
    dd69:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dd6d:	c9                   	leave
    dd6e:	c3                   	ret
    dd6f:	90                   	nop

000000000000dd70 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    dd70:	55                   	push   %rbp
    dd71:	48 89 e5             	mov    %rsp,%rbp
    dd74:	48 83 ec 10          	sub    $0x10,%rsp
    dd78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    dd7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd80:	48 89 c7             	mov    %rax,%rdi
    dd83:	e8 78 09 00 00       	call   e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    dd88:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    dd8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd8f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    dd93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd97:	48 8b 00             	mov    (%rax),%rax
    dd9a:	48 89 ce             	mov    %rcx,%rsi
    dd9d:	48 89 c7             	mov    %rax,%rdi
    dda0:	e8 69 09 00 00       	call   e70e <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    dda5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dda9:	48 89 c7             	mov    %rax,%rdi
    ddac:	e8 d9 07 00 00       	call   e58a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    ddb1:	90                   	nop
    ddb2:	c9                   	leave
    ddb3:	c3                   	ret

000000000000ddb4 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    ddb4:	55                   	push   %rbp
    ddb5:	48 89 e5             	mov    %rsp,%rbp
    ddb8:	48 83 ec 10          	sub    $0x10,%rsp
    ddbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddc4:	48 89 c7             	mov    %rax,%rdi
    ddc7:	e8 6c 09 00 00       	call   e738 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    ddcc:	90                   	nop
    ddcd:	c9                   	leave
    ddce:	c3                   	ret
    ddcf:	90                   	nop

000000000000ddd0 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    ddd0:	55                   	push   %rbp
    ddd1:	48 89 e5             	mov    %rsp,%rbp
    ddd4:	48 83 ec 10          	sub    $0x10,%rsp
    ddd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dde0:	48 89 c7             	mov    %rax,%rdi
    dde3:	e8 5c 09 00 00       	call   e744 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    dde8:	90                   	nop
    dde9:	c9                   	leave
    ddea:	c3                   	ret
    ddeb:	90                   	nop

000000000000ddec <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    ddec:	55                   	push   %rbp
    dded:	48 89 e5             	mov    %rsp,%rbp
    ddf0:	53                   	push   %rbx
    ddf1:	48 83 ec 28          	sub    $0x28,%rsp
    ddf5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ddf9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ddfd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    de01:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    de05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    de09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    de0d:	48 89 d6             	mov    %rdx,%rsi
    de10:	48 89 c7             	mov    %rax,%rdi
    de13:	e8 37 09 00 00       	call   e74f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    de18:	48 89 c1             	mov    %rax,%rcx
    de1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de1f:	48 89 c2             	mov    %rax,%rdx
    de22:	48 89 ce             	mov    %rcx,%rsi
    de25:	48 89 df             	mov    %rbx,%rdi
    de28:	e8 9f 09 00 00       	call   e7cc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    de2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    de31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de35:	48 89 d6             	mov    %rdx,%rsi
    de38:	48 89 c7             	mov    %rax,%rdi
    de3b:	e8 42 0a 00 00       	call   e882 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    de40:	eb 1a                	jmp    de5c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    de42:	48 89 c3             	mov    %rax,%rbx
    de45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de49:	48 89 c7             	mov    %rax,%rdi
    de4c:	e8 d9 09 00 00       	call   e82a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    de51:	48 89 d8             	mov    %rbx,%rax
    de54:	48 89 c7             	mov    %rax,%rdi
    de57:	e8 74 56 ff ff       	call   34d0 <_Unwind_Resume@plt>
    de5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    de60:	c9                   	leave
    de61:	c3                   	ret

000000000000de62 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    de62:	55                   	push   %rbp
    de63:	48 89 e5             	mov    %rsp,%rbp
    de66:	48 83 ec 10          	sub    $0x10,%rsp
    de6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    de6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de72:	48 89 c7             	mov    %rax,%rdi
    de75:	e8 48 0a 00 00       	call   e8c2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    de7a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    de7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de81:	48 8b 48 08          	mov    0x8(%rax),%rcx
    de85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de89:	48 8b 00             	mov    (%rax),%rax
    de8c:	48 89 ce             	mov    %rcx,%rsi
    de8f:	48 89 c7             	mov    %rax,%rdi
    de92:	e8 39 0a 00 00       	call   e8d0 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    de97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de9b:	48 89 c7             	mov    %rax,%rdi
    de9e:	e8 87 09 00 00       	call   e82a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    dea3:	90                   	nop
    dea4:	c9                   	leave
    dea5:	c3                   	ret

000000000000dea6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    dea6:	55                   	push   %rbp
    dea7:	48 89 e5             	mov    %rsp,%rbp
    deaa:	48 83 ec 10          	sub    $0x10,%rsp
    deae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    deb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deb6:	48 8b 10             	mov    (%rax),%rdx
    deb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    debd:	48 89 d6             	mov    %rdx,%rsi
    dec0:	48 89 c7             	mov    %rax,%rdi
    dec3:	e8 32 0a 00 00       	call   e8fa <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    dec8:	c9                   	leave
    dec9:	c3                   	ret

000000000000deca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    deca:	55                   	push   %rbp
    decb:	48 89 e5             	mov    %rsp,%rbp
    dece:	48 83 ec 10          	sub    $0x10,%rsp
    ded2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    ded6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deda:	48 89 c7             	mov    %rax,%rdi
    dedd:	e8 2a 0a 00 00       	call   e90c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    dee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dee6:	48 89 c7             	mov    %rax,%rdi
    dee9:	e8 3a 0a 00 00       	call   e928 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    deee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    def2:	48 83 c0 08          	add    $0x8,%rax
    def6:	48 89 c7             	mov    %rax,%rdi
    def9:	e8 a2 5c ff ff       	call   3ba0 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    defe:	90                   	nop
    deff:	c9                   	leave
    df00:	c3                   	ret
    df01:	90                   	nop

000000000000df02 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    df02:	55                   	push   %rbp
    df03:	48 89 e5             	mov    %rsp,%rbp
    df06:	48 83 ec 10          	sub    $0x10,%rsp
    df0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df12:	48 89 c7             	mov    %rax,%rdi
    df15:	e8 1a 0a 00 00       	call   e934 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    df1a:	90                   	nop
    df1b:	c9                   	leave
    df1c:	c3                   	ret
    df1d:	90                   	nop

000000000000df1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    df1e:	55                   	push   %rbp
    df1f:	48 89 e5             	mov    %rsp,%rbp
    df22:	48 83 ec 10          	sub    $0x10,%rsp
    df26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    df2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df2e:	48 89 c7             	mov    %rax,%rdi
    df31:	e8 70 0a 00 00       	call   e9a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    df36:	48 89 c2             	mov    %rax,%rdx
    df39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df3d:	48 89 d6             	mov    %rdx,%rsi
    df40:	48 89 c7             	mov    %rax,%rdi
    df43:	e8 f8 09 00 00       	call   e940 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    df48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df4c:	48 89 c7             	mov    %rax,%rdi
    df4f:	e8 76 fa ff ff       	call   d9ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    df54:	90                   	nop
    df55:	c9                   	leave
    df56:	c3                   	ret
    df57:	90                   	nop

000000000000df58 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    df58:	55                   	push   %rbp
    df59:	48 89 e5             	mov    %rsp,%rbp
    df5c:	48 83 ec 20          	sub    $0x20,%rsp
    df60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    df64:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    df68:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    df6c:	48 89 d6             	mov    %rdx,%rsi
    df6f:	48 89 c7             	mov    %rax,%rdi
    df72:	e8 49 0a 00 00       	call   e9c0 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    df77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df7b:	c9                   	leave
    df7c:	c3                   	ret
    df7d:	90                   	nop

000000000000df7e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    df7e:	55                   	push   %rbp
    df7f:	48 89 e5             	mov    %rsp,%rbp
    df82:	48 83 ec 20          	sub    $0x20,%rsp
    df86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    df8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df8e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    df92:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    df96:	48 89 d6             	mov    %rdx,%rsi
    df99:	48 89 c7             	mov    %rax,%rdi
    df9c:	e8 1f 0a 00 00       	call   e9c0 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    dfa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfa5:	c9                   	leave
    dfa6:	c3                   	ret

000000000000dfa7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    dfa7:	55                   	push   %rbp
    dfa8:	48 89 e5             	mov    %rsp,%rbp
    dfab:	53                   	push   %rbx
    dfac:	48 83 ec 18          	sub    $0x18,%rsp
    dfb0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dfb4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    dfb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfbc:	48 89 c7             	mov    %rax,%rdi
    dfbf:	e8 1a 0a 00 00       	call   e9de <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    dfc4:	48 8b 18             	mov    (%rax),%rbx
    dfc7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dfcb:	48 89 c7             	mov    %rax,%rdi
    dfce:	e8 0b 0a 00 00       	call   e9de <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    dfd3:	48 8b 00             	mov    (%rax),%rax
    dfd6:	48 39 c3             	cmp    %rax,%rbx
    dfd9:	0f 95 c0             	setne  %al
    dfdc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dfe0:	c9                   	leave
    dfe1:	c3                   	ret

000000000000dfe2 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    dfe2:	55                   	push   %rbp
    dfe3:	48 89 e5             	mov    %rsp,%rbp
    dfe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    dfea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfee:	48 8b 00             	mov    (%rax),%rax
    dff1:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    dff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dffc:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    dfff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e003:	5d                   	pop    %rbp
    e004:	c3                   	ret
    e005:	90                   	nop

000000000000e006 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    e006:	55                   	push   %rbp
    e007:	48 89 e5             	mov    %rsp,%rbp
    e00a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    e00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e012:	48 8b 00             	mov    (%rax),%rax
    e015:	5d                   	pop    %rbp
    e016:	c3                   	ret
    e017:	90                   	nop

000000000000e018 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
      operator[](key_type&& __k)
    e018:	55                   	push   %rbp
    e019:	48 89 e5             	mov    %rsp,%rbp
    e01c:	53                   	push   %rbx
    e01d:	48 83 ec 48          	sub    $0x48,%rsp
    e021:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    e025:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
	iterator __i = lower_bound(__k);
    e029:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    e02d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e031:	48 89 d6             	mov    %rdx,%rsi
    e034:	48 89 c7             	mov    %rax,%rdi
    e037:	e8 b0 09 00 00       	call   e9ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    e03c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	if (__i == end() || key_comp()(__k, (*__i).first))
    e040:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e044:	48 89 c7             	mov    %rax,%rdi
    e047:	e8 c6 09 00 00       	call   ea12 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    e04c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e050:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    e054:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    e058:	48 89 d6             	mov    %rdx,%rsi
    e05b:	48 89 c7             	mov    %rax,%rdi
    e05e:	e8 c9 09 00 00       	call   ea2c <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    e063:	84 c0                	test   %al,%al
    e065:	75 32                	jne    e099 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    e067:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e06b:	48 89 c7             	mov    %rax,%rdi
    e06e:	e8 db 09 00 00       	call   ea4e <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    e073:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    e077:	48 89 c7             	mov    %rax,%rdi
    e07a:	e8 eb 09 00 00       	call   ea6a <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    e07f:	48 89 c2             	mov    %rax,%rdx
    e082:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    e086:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    e08a:	48 89 ce             	mov    %rcx,%rsi
    e08d:	48 89 c7             	mov    %rax,%rdi
    e090:	e8 f3 09 00 00       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e095:	84 c0                	test   %al,%al
    e097:	74 07                	je     e0a0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    e099:	b8 01 00 00 00       	mov    $0x1,%eax
    e09e:	eb 05                	jmp    e0a5 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    e0a0:	b8 00 00 00 00       	mov    $0x0,%eax
    e0a5:	84 c0                	test   %al,%al
    e0a7:	74 5d                	je     e106 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    e0a9:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    e0ad:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    e0b1:	48 89 c7             	mov    %rax,%rdi
    e0b4:	e8 f8 09 00 00       	call   eab1 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    e0b9:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    e0bc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e0c0:	48 89 d6             	mov    %rdx,%rsi
    e0c3:	48 89 c7             	mov    %rax,%rdi
    e0c6:	e8 f4 09 00 00       	call   eabf <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    e0cb:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    e0cf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e0d3:	48 89 d6             	mov    %rdx,%rsi
    e0d6:	48 89 c7             	mov    %rax,%rdi
    e0d9:	e8 16 0a 00 00       	call   eaf4 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    e0de:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    e0e2:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    e0e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0ea:	49 89 c8             	mov    %rcx,%r8
    e0ed:	48 89 d1             	mov    %rdx,%rcx
    e0f0:	48 8d 15 89 56 00 00 	lea    0x5689(%rip),%rdx        # 13780 <_ZSt19piecewise_construct>
    e0f7:	48 89 c6             	mov    %rax,%rsi
    e0fa:	48 89 df             	mov    %rbx,%rdi
    e0fd:	e8 10 0a 00 00       	call   eb12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    e102:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	return (*__i).second;
    e106:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    e10a:	48 89 c7             	mov    %rax,%rdi
    e10d:	e8 58 09 00 00       	call   ea6a <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    e112:	48 83 c0 20          	add    $0x20,%rax
      }
    e116:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e11a:	c9                   	leave
    e11b:	c3                   	ret

000000000000e11c <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    e11c:	55                   	push   %rbp
    e11d:	48 89 e5             	mov    %rsp,%rbp
    e120:	48 83 ec 20          	sub    $0x20,%rsp
    e124:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    e128:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e12c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e130:	48 89 d6             	mov    %rdx,%rsi
    e133:	48 89 c7             	mov    %rax,%rdi
    e136:	e8 d3 0a 00 00       	call   ec0e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    e13b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e13f:	c9                   	leave
    e140:	c3                   	ret
    e141:	90                   	nop

000000000000e142 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    e142:	55                   	push   %rbp
    e143:	48 89 e5             	mov    %rsp,%rbp
    e146:	48 83 ec 20          	sub    $0x20,%rsp
    e14a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    e14e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e152:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e156:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e15a:	48 89 d6             	mov    %rdx,%rsi
    e15d:	48 89 c7             	mov    %rax,%rdi
    e160:	e8 a9 0a 00 00       	call   ec0e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    e165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e169:	c9                   	leave
    e16a:	c3                   	ret

000000000000e16b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    e16b:	55                   	push   %rbp
    e16c:	48 89 e5             	mov    %rsp,%rbp
    e16f:	53                   	push   %rbx
    e170:	48 83 ec 18          	sub    $0x18,%rsp
    e174:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e178:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    e17c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e180:	48 89 c7             	mov    %rax,%rdi
    e183:	e8 a4 0a 00 00       	call   ec2c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    e188:	48 8b 18             	mov    (%rax),%rbx
    e18b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e18f:	48 89 c7             	mov    %rax,%rdi
    e192:	e8 95 0a 00 00       	call   ec2c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    e197:	48 8b 00             	mov    (%rax),%rax
    e19a:	48 39 c3             	cmp    %rax,%rbx
    e19d:	0f 95 c0             	setne  %al
    e1a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e1a4:	c9                   	leave
    e1a5:	c3                   	ret

000000000000e1a6 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e1a6:	55                   	push   %rbp
    e1a7:	48 89 e5             	mov    %rsp,%rbp
    e1aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    e1ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1b2:	48 8b 00             	mov    (%rax),%rax
    e1b5:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e1b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1bd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    e1c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e1c4:	5d                   	pop    %rbp
    e1c5:	c3                   	ret

000000000000e1c6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    e1c6:	55                   	push   %rbp
    e1c7:	48 89 e5             	mov    %rsp,%rbp
    e1ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    e1ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1d2:	48 8b 00             	mov    (%rax),%rax
    e1d5:	5d                   	pop    %rbp
    e1d6:	c3                   	ret
    e1d7:	90                   	nop

000000000000e1d8 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    e1d8:	55                   	push   %rbp
    e1d9:	48 89 e5             	mov    %rsp,%rbp
    e1dc:	48 83 ec 10          	sub    $0x10,%rsp
    e1e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e1e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1e8:	48 89 c7             	mov    %rax,%rdi
    e1eb:	e8 4a 0a 00 00       	call   ec3a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    e1f0:	90                   	nop
    e1f1:	c9                   	leave
    e1f2:	c3                   	ret
    e1f3:	90                   	nop

000000000000e1f4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    e1f4:	55                   	push   %rbp
    e1f5:	48 89 e5             	mov    %rsp,%rbp
    e1f8:	48 83 ec 10          	sub    $0x10,%rsp
    e1fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e204:	48 89 c7             	mov    %rax,%rdi
    e207:	e8 3a 0a 00 00       	call   ec46 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    e20c:	90                   	nop
    e20d:	c9                   	leave
    e20e:	c3                   	ret
    e20f:	90                   	nop

000000000000e210 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    e210:	55                   	push   %rbp
    e211:	48 89 e5             	mov    %rsp,%rbp
    e214:	53                   	push   %rbx
    e215:	48 83 ec 28          	sub    $0x28,%rsp
    e219:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e21d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e221:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    e225:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e229:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e22d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e231:	48 89 d6             	mov    %rdx,%rsi
    e234:	48 89 c7             	mov    %rax,%rdi
    e237:	e8 15 0a 00 00       	call   ec51 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    e23c:	48 89 c1             	mov    %rax,%rcx
    e23f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e243:	48 89 c2             	mov    %rax,%rdx
    e246:	48 89 ce             	mov    %rcx,%rsi
    e249:	48 89 df             	mov    %rbx,%rdi
    e24c:	e8 61 0a 00 00       	call   ecb2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    e251:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e255:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e259:	48 89 d6             	mov    %rdx,%rsi
    e25c:	48 89 c7             	mov    %rax,%rdi
    e25f:	e8 ac 0a 00 00       	call   ed10 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    e264:	eb 1a                	jmp    e280 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    e266:	48 89 c3             	mov    %rax,%rbx
    e269:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e26d:	48 89 c7             	mov    %rax,%rdi
    e270:	e8 35 00 00 00       	call   e2aa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    e275:	48 89 d8             	mov    %rbx,%rax
    e278:	48 89 c7             	mov    %rax,%rdi
    e27b:	e8 50 52 ff ff       	call   34d0 <_Unwind_Resume@plt>
    e280:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e284:	c9                   	leave
    e285:	c3                   	ret

000000000000e286 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    e286:	55                   	push   %rbp
    e287:	48 89 e5             	mov    %rsp,%rbp
    e28a:	48 83 ec 10          	sub    $0x10,%rsp
    e28e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    e292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e296:	48 8b 10             	mov    (%rax),%rdx
    e299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e29d:	48 89 d6             	mov    %rdx,%rsi
    e2a0:	48 89 c7             	mov    %rax,%rdi
    e2a3:	e8 a8 0a 00 00       	call   ed50 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    e2a8:	c9                   	leave
    e2a9:	c3                   	ret

000000000000e2aa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    e2aa:	55                   	push   %rbp
    e2ab:	48 89 e5             	mov    %rsp,%rbp
    e2ae:	48 83 ec 10          	sub    $0x10,%rsp
    e2b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    e2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2ba:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e2be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2c2:	48 8b 00             	mov    (%rax),%rax
    e2c5:	48 29 c2             	sub    %rax,%rdx
    e2c8:	48 89 d0             	mov    %rdx,%rax
    e2cb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    e2cf:	48 89 c2             	mov    %rax,%rdx
    e2d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2d6:	48 8b 08             	mov    (%rax),%rcx
    e2d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2dd:	48 89 ce             	mov    %rcx,%rsi
    e2e0:	48 89 c7             	mov    %rax,%rdi
    e2e3:	e8 a0 0a 00 00       	call   ed88 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    e2e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2ec:	48 89 c7             	mov    %rax,%rdi
    e2ef:	e8 46 f7 ff ff       	call   da3a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    e2f4:	90                   	nop
    e2f5:	c9                   	leave
    e2f6:	c3                   	ret
    e2f7:	90                   	nop

000000000000e2f8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e2f8:	55                   	push   %rbp
    e2f9:	48 89 e5             	mov    %rsp,%rbp
    e2fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e304:	5d                   	pop    %rbp
    e305:	c3                   	ret

000000000000e306 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e306:	55                   	push   %rbp
    e307:	48 89 e5             	mov    %rsp,%rbp
    e30a:	48 83 ec 20          	sub    $0x20,%rsp
    e30e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e312:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e316:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e31a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e31e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e322:	48 89 d6             	mov    %rdx,%rsi
    e325:	48 89 c7             	mov    %rax,%rdi
    e328:	e8 90 0a 00 00       	call   edbd <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    e32d:	90                   	nop
    e32e:	c9                   	leave
    e32f:	c3                   	ret

000000000000e330 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e330:	55                   	push   %rbp
    e331:	48 89 e5             	mov    %rsp,%rbp
    e334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e338:	90                   	nop
    e339:	5d                   	pop    %rbp
    e33a:	c3                   	ret
    e33b:	90                   	nop

000000000000e33c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e33c:	55                   	push   %rbp
    e33d:	48 89 e5             	mov    %rsp,%rbp
    e340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e344:	90                   	nop
    e345:	5d                   	pop    %rbp
    e346:	c3                   	ret

000000000000e347 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    e347:	55                   	push   %rbp
    e348:	48 89 e5             	mov    %rsp,%rbp
    e34b:	53                   	push   %rbx
    e34c:	48 83 ec 28          	sub    $0x28,%rsp
    e350:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e354:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    e358:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e35c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e360:	48 89 d6             	mov    %rdx,%rsi
    e363:	48 89 c7             	mov    %rax,%rdi
    e366:	e8 bb 0a 00 00       	call   ee26 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    e36b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e36f:	48 89 c7             	mov    %rax,%rdi
    e372:	e8 6c 0a 00 00       	call   ede3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    e377:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e37b:	0f 92 c3             	setb   %bl
    e37e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e382:	48 89 c7             	mov    %rax,%rdi
    e385:	e8 2c f7 ff ff       	call   dab6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    e38a:	84 db                	test   %bl,%bl
    e38c:	74 0f                	je     e39d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    e38e:	48 8d 05 a3 5c 00 00 	lea    0x5ca3(%rip),%rax        # 14038 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    e395:	48 89 c7             	mov    %rax,%rdi
    e398:	e8 93 4d ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    e39d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    e3a1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e3a5:	c9                   	leave
    e3a6:	c3                   	ret
    e3a7:	90                   	nop

000000000000e3a8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    e3a8:	55                   	push   %rbp
    e3a9:	48 89 e5             	mov    %rsp,%rbp
    e3ac:	48 83 ec 10          	sub    $0x10,%rsp
    e3b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e3b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3b8:	48 89 c7             	mov    %rax,%rdi
    e3bb:	e8 f6 f6 ff ff       	call   dab6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    e3c0:	90                   	nop
    e3c1:	c9                   	leave
    e3c2:	c3                   	ret
    e3c3:	90                   	nop

000000000000e3c4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    e3c4:	55                   	push   %rbp
    e3c5:	48 89 e5             	mov    %rsp,%rbp
    e3c8:	53                   	push   %rbx
    e3c9:	48 83 ec 28          	sub    $0x28,%rsp
    e3cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e3d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e3d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    e3d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e3e1:	48 89 d6             	mov    %rdx,%rsi
    e3e4:	48 89 c7             	mov    %rax,%rdi
    e3e7:	e8 60 0a 00 00       	call   ee4c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    e3ec:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e3f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3f4:	48 89 d6             	mov    %rdx,%rsi
    e3f7:	48 89 c7             	mov    %rax,%rdi
    e3fa:	e8 7f 0a 00 00       	call   ee7e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    e3ff:	eb 1a                	jmp    e41b <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    e401:	48 89 c3             	mov    %rax,%rbx
    e404:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e408:	48 89 c7             	mov    %rax,%rdi
    e40b:	e8 98 ff ff ff       	call   e3a8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    e410:	48 89 d8             	mov    %rbx,%rax
    e413:	48 89 c7             	mov    %rax,%rdi
    e416:	e8 b5 50 ff ff       	call   34d0 <_Unwind_Resume@plt>
    e41b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e41f:	c9                   	leave
    e420:	c3                   	ret
    e421:	90                   	nop

000000000000e422 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    e422:	55                   	push   %rbp
    e423:	48 89 e5             	mov    %rsp,%rbp
    e426:	48 83 ec 10          	sub    $0x10,%rsp
    e42a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    e42e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e432:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e436:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e43a:	48 8b 00             	mov    (%rax),%rax
    e43d:	48 29 c2             	sub    %rax,%rdx
    e440:	48 c1 fa 03          	sar    $0x3,%rdx
    e444:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    e44b:	aa aa aa 
    e44e:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    e452:	48 89 c2             	mov    %rax,%rdx
    e455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e459:	48 8b 08             	mov    (%rax),%rcx
    e45c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e460:	48 89 ce             	mov    %rcx,%rsi
    e463:	48 89 c7             	mov    %rax,%rdi
    e466:	e8 73 0a 00 00       	call   eede <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    e46b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e46f:	48 89 c7             	mov    %rax,%rdi
    e472:	e8 31 ff ff ff       	call   e3a8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    e477:	90                   	nop
    e478:	c9                   	leave
    e479:	c3                   	ret

000000000000e47a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    e47a:	55                   	push   %rbp
    e47b:	48 89 e5             	mov    %rsp,%rbp
    e47e:	48 83 ec 10          	sub    $0x10,%rsp
    e482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e486:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    e48a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e48e:	48 89 c7             	mov    %rax,%rdi
    e491:	e8 24 00 00 00       	call   e4ba <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    e496:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    e499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e49d:	48 8b 00             	mov    (%rax),%rax
    e4a0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e4a4:	48 89 ce             	mov    %rcx,%rsi
    e4a7:	48 89 c7             	mov    %rax,%rdi
    e4aa:	e8 64 0a 00 00       	call   ef13 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    e4af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e4b3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    e4b7:	90                   	nop
    e4b8:	c9                   	leave
    e4b9:	c3                   	ret

000000000000e4ba <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e4ba:	55                   	push   %rbp
    e4bb:	48 89 e5             	mov    %rsp,%rbp
    e4be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e4c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4c6:	5d                   	pop    %rbp
    e4c7:	c3                   	ret

000000000000e4c8 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e4c8:	55                   	push   %rbp
    e4c9:	48 89 e5             	mov    %rsp,%rbp
    e4cc:	48 83 ec 20          	sub    $0x20,%rsp
    e4d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e4d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e4dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e4e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4e4:	48 89 d6             	mov    %rdx,%rsi
    e4e7:	48 89 c7             	mov    %rax,%rdi
    e4ea:	e8 4d 0a 00 00       	call   ef3c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    e4ef:	90                   	nop
    e4f0:	c9                   	leave
    e4f1:	c3                   	ret

000000000000e4f2 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    e4f2:	55                   	push   %rbp
    e4f3:	48 89 e5             	mov    %rsp,%rbp
    e4f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    e4fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e502:	5d                   	pop    %rbp
    e503:	c3                   	ret

000000000000e504 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e504:	55                   	push   %rbp
    e505:	48 89 e5             	mov    %rsp,%rbp
    e508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e50c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e510:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e514:	48 8b 10             	mov    (%rax),%rdx
    e517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e51b:	48 89 10             	mov    %rdx,(%rax)
    e51e:	90                   	nop
    e51f:	5d                   	pop    %rbp
    e520:	c3                   	ret
    e521:	90                   	nop

000000000000e522 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e522:	55                   	push   %rbp
    e523:	48 89 e5             	mov    %rsp,%rbp
    e526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e52a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e52e:	5d                   	pop    %rbp
    e52f:	c3                   	ret

000000000000e530 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e530:	55                   	push   %rbp
    e531:	48 89 e5             	mov    %rsp,%rbp
    e534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e538:	90                   	nop
    e539:	5d                   	pop    %rbp
    e53a:	c3                   	ret
    e53b:	90                   	nop

000000000000e53c <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e53c:	55                   	push   %rbp
    e53d:	48 89 e5             	mov    %rsp,%rbp
    e540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e544:	90                   	nop
    e545:	5d                   	pop    %rbp
    e546:	c3                   	ret
    e547:	90                   	nop

000000000000e548 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    e548:	55                   	push   %rbp
    e549:	48 89 e5             	mov    %rsp,%rbp
    e54c:	48 83 ec 10          	sub    $0x10,%rsp
    e550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e558:	48 89 c7             	mov    %rax,%rdi
    e55b:	e8 6c f7 ff ff       	call   dccc <_ZNSaIPKcED1Ev>
    e560:	90                   	nop
    e561:	c9                   	leave
    e562:	c3                   	ret
    e563:	90                   	nop

000000000000e564 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    e564:	55                   	push   %rbp
    e565:	48 89 e5             	mov    %rsp,%rbp
    e568:	48 83 ec 10          	sub    $0x10,%rsp
    e56c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e570:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    e574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e578:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e57c:	48 89 d6             	mov    %rdx,%rsi
    e57f:	48 89 c7             	mov    %rax,%rdi
    e582:	e8 db 09 00 00       	call   ef62 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    e587:	90                   	nop
    e588:	c9                   	leave
    e589:	c3                   	ret

000000000000e58a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    e58a:	55                   	push   %rbp
    e58b:	48 89 e5             	mov    %rsp,%rbp
    e58e:	48 83 ec 10          	sub    $0x10,%rsp
    e592:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    e596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e59a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e59e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5a2:	48 8b 00             	mov    (%rax),%rax
    e5a5:	48 29 c2             	sub    %rax,%rdx
    e5a8:	48 89 d0             	mov    %rdx,%rax
    e5ab:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    e5af:	48 89 c2             	mov    %rax,%rdx
    e5b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5b6:	48 8b 08             	mov    (%rax),%rcx
    e5b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5bd:	48 89 ce             	mov    %rcx,%rsi
    e5c0:	48 89 c7             	mov    %rax,%rdi
    e5c3:	e8 cc 09 00 00       	call   ef94 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    e5c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5cc:	48 89 c7             	mov    %rax,%rdi
    e5cf:	e8 74 ff ff ff       	call   e548 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    e5d4:	90                   	nop
    e5d5:	c9                   	leave
    e5d6:	c3                   	ret
    e5d7:	90                   	nop

000000000000e5d8 <_ZNKSt16initializer_listIPKcE5beginEv>:
      begin() const noexcept { return _M_array; }
    e5d8:	55                   	push   %rbp
    e5d9:	48 89 e5             	mov    %rsp,%rbp
    e5dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5e4:	48 8b 00             	mov    (%rax),%rax
    e5e7:	5d                   	pop    %rbp
    e5e8:	c3                   	ret
    e5e9:	90                   	nop

000000000000e5ea <_ZNKSt16initializer_listIPKcE3endEv>:
      end() const noexcept { return begin() + size(); }
    e5ea:	55                   	push   %rbp
    e5eb:	48 89 e5             	mov    %rsp,%rbp
    e5ee:	53                   	push   %rbx
    e5ef:	48 83 ec 18          	sub    $0x18,%rsp
    e5f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e5f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5fb:	48 89 c7             	mov    %rax,%rdi
    e5fe:	e8 d5 ff ff ff       	call   e5d8 <_ZNKSt16initializer_listIPKcE5beginEv>
    e603:	48 89 c3             	mov    %rax,%rbx
    e606:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e60a:	48 89 c7             	mov    %rax,%rdi
    e60d:	e8 b8 09 00 00       	call   efca <_ZNKSt16initializer_listIPKcE4sizeEv>
    e612:	48 c1 e0 03          	shl    $0x3,%rax
    e616:	48 01 d8             	add    %rbx,%rax
    e619:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e61d:	c9                   	leave
    e61e:	c3                   	ret

000000000000e61f <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    e61f:	55                   	push   %rbp
    e620:	48 89 e5             	mov    %rsp,%rbp
    e623:	48 83 ec 10          	sub    $0x10,%rsp
    e627:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e62b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    e62f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e633:	48 89 c7             	mov    %rax,%rdi
    e636:	e8 a1 09 00 00       	call   efdc <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    e63b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e63f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e643:	48 89 d6             	mov    %rdx,%rsi
    e646:	48 89 c7             	mov    %rax,%rdi
    e649:	e8 99 09 00 00       	call   efe7 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    e64e:	c9                   	leave
    e64f:	c3                   	ret

000000000000e650 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    e650:	55                   	push   %rbp
    e651:	48 89 e5             	mov    %rsp,%rbp
    e654:	53                   	push   %rbx
    e655:	48 83 ec 38          	sub    $0x38,%rsp
    e659:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e65d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e661:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    e665:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e669:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e66d:	48 89 d6             	mov    %rdx,%rsi
    e670:	48 89 c7             	mov    %rax,%rdi
    e673:	e8 a7 ff ff ff       	call   e61f <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    e678:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    e67c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e680:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e684:	48 89 c7             	mov    %rax,%rdi
    e687:	e8 74 00 00 00       	call   e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e68c:	48 89 c2             	mov    %rax,%rdx
    e68f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e693:	48 89 d6             	mov    %rdx,%rsi
    e696:	48 89 c7             	mov    %rax,%rdi
    e699:	e8 63 09 00 00       	call   f001 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    e69e:	48 89 c6             	mov    %rax,%rsi
    e6a1:	48 89 df             	mov    %rbx,%rdi
    e6a4:	e8 b9 09 00 00       	call   f062 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    e6a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e6ad:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    e6b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6b4:	48 8b 00             	mov    (%rax),%rax
    e6b7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e6bb:	48 c1 e2 03          	shl    $0x3,%rdx
    e6bf:	48 01 c2             	add    %rax,%rdx
    e6c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6c6:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    e6ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6ce:	48 89 c7             	mov    %rax,%rdi
    e6d1:	e8 2a 00 00 00       	call   e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e6d6:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    e6d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6dd:	48 8b 10             	mov    (%rax),%rdx
    e6e0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    e6e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e6e8:	48 89 c7             	mov    %rax,%rdi
    e6eb:	e8 a5 09 00 00       	call   f095 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    e6f0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e6f4:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    e6f8:	90                   	nop
    e6f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e6fd:	c9                   	leave
    e6fe:	c3                   	ret
    e6ff:	90                   	nop

000000000000e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e700:	55                   	push   %rbp
    e701:	48 89 e5             	mov    %rsp,%rbp
    e704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e70c:	5d                   	pop    %rbp
    e70d:	c3                   	ret

000000000000e70e <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e70e:	55                   	push   %rbp
    e70f:	48 89 e5             	mov    %rsp,%rbp
    e712:	48 83 ec 20          	sub    $0x20,%rsp
    e716:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e71a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e71e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e722:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e72a:	48 89 d6             	mov    %rdx,%rsi
    e72d:	48 89 c7             	mov    %rax,%rdi
    e730:	e8 91 09 00 00       	call   f0c6 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    e735:	90                   	nop
    e736:	c9                   	leave
    e737:	c3                   	ret

000000000000e738 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e738:	55                   	push   %rbp
    e739:	48 89 e5             	mov    %rsp,%rbp
    e73c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e740:	90                   	nop
    e741:	5d                   	pop    %rbp
    e742:	c3                   	ret
    e743:	90                   	nop

000000000000e744 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e744:	55                   	push   %rbp
    e745:	48 89 e5             	mov    %rsp,%rbp
    e748:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e74c:	90                   	nop
    e74d:	5d                   	pop    %rbp
    e74e:	c3                   	ret

000000000000e74f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    e74f:	55                   	push   %rbp
    e750:	48 89 e5             	mov    %rsp,%rbp
    e753:	53                   	push   %rbx
    e754:	48 83 ec 28          	sub    $0x28,%rsp
    e758:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e75c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    e760:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e764:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e768:	48 89 d6             	mov    %rdx,%rsi
    e76b:	48 89 c7             	mov    %rax,%rdi
    e76e:	e8 bb 09 00 00       	call   f12e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    e773:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e777:	48 89 c7             	mov    %rax,%rdi
    e77a:	e8 6d 09 00 00       	call   f0ec <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    e77f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e783:	0f 92 c3             	setb   %bl
    e786:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e78a:	48 89 c7             	mov    %rax,%rdi
    e78d:	e8 3e f6 ff ff       	call   ddd0 <_ZNSaI21VkExtensionPropertiesED1Ev>
    e792:	84 db                	test   %bl,%bl
    e794:	74 0f                	je     e7a5 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    e796:	48 8d 05 9b 58 00 00 	lea    0x589b(%rip),%rax        # 14038 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    e79d:	48 89 c7             	mov    %rax,%rdi
    e7a0:	e8 8b 49 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    e7a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    e7a9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e7ad:	c9                   	leave
    e7ae:	c3                   	ret
    e7af:	90                   	nop

000000000000e7b0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    e7b0:	55                   	push   %rbp
    e7b1:	48 89 e5             	mov    %rsp,%rbp
    e7b4:	48 83 ec 10          	sub    $0x10,%rsp
    e7b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7c0:	48 89 c7             	mov    %rax,%rdi
    e7c3:	e8 08 f6 ff ff       	call   ddd0 <_ZNSaI21VkExtensionPropertiesED1Ev>
    e7c8:	90                   	nop
    e7c9:	c9                   	leave
    e7ca:	c3                   	ret
    e7cb:	90                   	nop

000000000000e7cc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    e7cc:	55                   	push   %rbp
    e7cd:	48 89 e5             	mov    %rsp,%rbp
    e7d0:	53                   	push   %rbx
    e7d1:	48 83 ec 28          	sub    $0x28,%rsp
    e7d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e7d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e7dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    e7e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7e5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e7e9:	48 89 d6             	mov    %rdx,%rsi
    e7ec:	48 89 c7             	mov    %rax,%rdi
    e7ef:	e8 60 09 00 00       	call   f154 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    e7f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e7f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7fc:	48 89 d6             	mov    %rdx,%rsi
    e7ff:	48 89 c7             	mov    %rax,%rdi
    e802:	e8 7f 09 00 00       	call   f186 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    e807:	eb 1a                	jmp    e823 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    e809:	48 89 c3             	mov    %rax,%rbx
    e80c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e810:	48 89 c7             	mov    %rax,%rdi
    e813:	e8 98 ff ff ff       	call   e7b0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    e818:	48 89 d8             	mov    %rbx,%rax
    e81b:	48 89 c7             	mov    %rax,%rdi
    e81e:	e8 ad 4c ff ff       	call   34d0 <_Unwind_Resume@plt>
    e823:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e827:	c9                   	leave
    e828:	c3                   	ret
    e829:	90                   	nop

000000000000e82a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    e82a:	55                   	push   %rbp
    e82b:	48 89 e5             	mov    %rsp,%rbp
    e82e:	48 83 ec 10          	sub    $0x10,%rsp
    e832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    e836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e83a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e842:	48 8b 00             	mov    (%rax),%rax
    e845:	48 29 c2             	sub    %rax,%rdx
    e848:	48 c1 fa 02          	sar    $0x2,%rdx
    e84c:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    e853:	fc c0 0f 
    e856:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    e85a:	48 89 c2             	mov    %rax,%rdx
    e85d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e861:	48 8b 08             	mov    (%rax),%rcx
    e864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e868:	48 89 ce             	mov    %rcx,%rsi
    e86b:	48 89 c7             	mov    %rax,%rdi
    e86e:	e8 75 09 00 00       	call   f1e8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    e873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e877:	48 89 c7             	mov    %rax,%rdi
    e87a:	e8 31 ff ff ff       	call   e7b0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    e87f:	90                   	nop
    e880:	c9                   	leave
    e881:	c3                   	ret

000000000000e882 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    e882:	55                   	push   %rbp
    e883:	48 89 e5             	mov    %rsp,%rbp
    e886:	48 83 ec 10          	sub    $0x10,%rsp
    e88a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e88e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    e892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e896:	48 89 c7             	mov    %rax,%rdi
    e899:	e8 24 00 00 00       	call   e8c2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    e89e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    e8a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8a5:	48 8b 00             	mov    (%rax),%rax
    e8a8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e8ac:	48 89 ce             	mov    %rcx,%rsi
    e8af:	48 89 c7             	mov    %rax,%rdi
    e8b2:	e8 66 09 00 00       	call   f21d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    e8b7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e8bb:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    e8bf:	90                   	nop
    e8c0:	c9                   	leave
    e8c1:	c3                   	ret

000000000000e8c2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e8c2:	55                   	push   %rbp
    e8c3:	48 89 e5             	mov    %rsp,%rbp
    e8c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e8ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8ce:	5d                   	pop    %rbp
    e8cf:	c3                   	ret

000000000000e8d0 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e8d0:	55                   	push   %rbp
    e8d1:	48 89 e5             	mov    %rsp,%rbp
    e8d4:	48 83 ec 20          	sub    $0x20,%rsp
    e8d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e8e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e8e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e8e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8ec:	48 89 d6             	mov    %rdx,%rsi
    e8ef:	48 89 c7             	mov    %rax,%rdi
    e8f2:	e8 4f 09 00 00       	call   f246 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    e8f7:	90                   	nop
    e8f8:	c9                   	leave
    e8f9:	c3                   	ret

000000000000e8fa <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    e8fa:	55                   	push   %rbp
    e8fb:	48 89 e5             	mov    %rsp,%rbp
    e8fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e902:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    e906:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e90a:	5d                   	pop    %rbp
    e90b:	c3                   	ret

000000000000e90c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    e90c:	55                   	push   %rbp
    e90d:	48 89 e5             	mov    %rsp,%rbp
    e910:	48 83 ec 10          	sub    $0x10,%rsp
    e914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e91c:	48 89 c7             	mov    %rax,%rdi
    e91f:	e8 48 09 00 00       	call   f26c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    e924:	90                   	nop
    e925:	c9                   	leave
    e926:	c3                   	ret
    e927:	90                   	nop

000000000000e928 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    e928:	55                   	push   %rbp
    e929:	48 89 e5             	mov    %rsp,%rbp
    e92c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    e930:	90                   	nop
    e931:	5d                   	pop    %rbp
    e932:	c3                   	ret
    e933:	90                   	nop

000000000000e934 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    e934:	55                   	push   %rbp
    e935:	48 89 e5             	mov    %rsp,%rbp
    e938:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e93c:	90                   	nop
    e93d:	5d                   	pop    %rbp
    e93e:	c3                   	ret
    e93f:	90                   	nop

000000000000e940 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e940:	55                   	push   %rbp
    e941:	48 89 e5             	mov    %rsp,%rbp
    e944:	48 83 ec 20          	sub    $0x20,%rsp
    e948:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e94c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      while (__x != 0)
    e950:	eb 49                	jmp    e99b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	  _M_erase(_S_right(__x));
    e952:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e956:	48 89 c7             	mov    %rax,%rdi
    e959:	e8 19 09 00 00       	call   f277 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    e95e:	48 89 c2             	mov    %rax,%rdx
    e961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e965:	48 89 d6             	mov    %rdx,%rsi
    e968:	48 89 c7             	mov    %rax,%rdi
    e96b:	e8 d0 ff ff ff       	call   e940 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    e970:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e974:	48 89 c7             	mov    %rax,%rdi
    e977:	e8 0d 09 00 00       	call   f289 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    e97c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    e980:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e984:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e988:	48 89 d6             	mov    %rdx,%rsi
    e98b:	48 89 c7             	mov    %rax,%rdi
    e98e:	e8 09 09 00 00       	call   f29c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    e993:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e997:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    e99b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e9a0:	75 b0                	jne    e952 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
    }
    e9a2:	90                   	nop
    e9a3:	90                   	nop
    e9a4:	c9                   	leave
    e9a5:	c3                   	ret

000000000000e9a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    e9a6:	55                   	push   %rbp
    e9a7:	48 89 e5             	mov    %rsp,%rbp
    e9aa:	48 83 ec 10          	sub    $0x10,%rsp
    e9ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    e9b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9b6:	48 89 c7             	mov    %rax,%rdi
    e9b9:	e8 18 09 00 00       	call   f2d6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    e9be:	c9                   	leave
    e9bf:	c3                   	ret

000000000000e9c0 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e9c0:	55                   	push   %rbp
    e9c1:	48 89 e5             	mov    %rsp,%rbp
    e9c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e9c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e9cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e9d0:	48 8b 10             	mov    (%rax),%rdx
    e9d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9d7:	48 89 10             	mov    %rdx,(%rax)
    e9da:	90                   	nop
    e9db:	5d                   	pop    %rbp
    e9dc:	c3                   	ret
    e9dd:	90                   	nop

000000000000e9de <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e9de:	55                   	push   %rbp
    e9df:	48 89 e5             	mov    %rsp,%rbp
    e9e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e9e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9ea:	5d                   	pop    %rbp
    e9eb:	c3                   	ret

000000000000e9ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
      lower_bound(const key_type& __x)
    e9ec:	55                   	push   %rbp
    e9ed:	48 89 e5             	mov    %rsp,%rbp
    e9f0:	48 83 ec 10          	sub    $0x10,%rsp
    e9f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e9f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    e9fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea00:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ea04:	48 89 d6             	mov    %rdx,%rsi
    ea07:	48 89 c7             	mov    %rax,%rdi
    ea0a:	e8 d9 08 00 00       	call   f2e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    ea0f:	c9                   	leave
    ea10:	c3                   	ret
    ea11:	90                   	nop

000000000000ea12 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ea12:	55                   	push   %rbp
    ea13:	48 89 e5             	mov    %rsp,%rbp
    ea16:	48 83 ec 10          	sub    $0x10,%rsp
    ea1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    ea1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea22:	48 89 c7             	mov    %rax,%rdi
    ea25:	e8 0a 09 00 00       	call   f334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    ea2a:	c9                   	leave
    ea2b:	c3                   	ret

000000000000ea2c <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    ea2c:	55                   	push   %rbp
    ea2d:	48 89 e5             	mov    %rsp,%rbp
    ea30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    ea38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea3c:	48 8b 10             	mov    (%rax),%rdx
    ea3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea43:	48 8b 00             	mov    (%rax),%rax
    ea46:	48 39 c2             	cmp    %rax,%rdx
    ea49:	0f 94 c0             	sete   %al
    ea4c:	5d                   	pop    %rbp
    ea4d:	c3                   	ret

000000000000ea4e <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    ea4e:	55                   	push   %rbp
    ea4f:	48 89 e5             	mov    %rsp,%rbp
    ea52:	48 83 ec 10          	sub    $0x10,%rsp
    ea56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    ea5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea5e:	48 89 c7             	mov    %rax,%rdi
    ea61:	e8 f8 08 00 00       	call   f35e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    ea66:	90                   	nop
    ea67:	c9                   	leave
    ea68:	c3                   	ret
    ea69:	90                   	nop

000000000000ea6a <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ea6a:	55                   	push   %rbp
    ea6b:	48 89 e5             	mov    %rsp,%rbp
    ea6e:	48 83 ec 10          	sub    $0x10,%rsp
    ea72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    ea76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea7a:	48 8b 00             	mov    (%rax),%rax
    ea7d:	48 89 c7             	mov    %rax,%rdi
    ea80:	e8 e5 08 00 00       	call   f36a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    ea85:	c9                   	leave
    ea86:	c3                   	ret
    ea87:	90                   	nop

000000000000ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
    ea88:	55                   	push   %rbp
    ea89:	48 89 e5             	mov    %rsp,%rbp
    ea8c:	48 83 ec 20          	sub    $0x20,%rsp
    ea90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    ea9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eaa0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eaa4:	48 89 d6             	mov    %rdx,%rsi
    eaa7:	48 89 c7             	mov    %rax,%rdi
    eaaa:	e8 d9 08 00 00       	call   f388 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    eaaf:	c9                   	leave
    eab0:	c3                   	ret

000000000000eab1 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    eab1:	55                   	push   %rbp
    eab2:	48 89 e5             	mov    %rsp,%rbp
    eab5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    eab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eabd:	5d                   	pop    %rbp
    eabe:	c3                   	ret

000000000000eabf <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
    forward_as_tuple(_Elements&&... __args) noexcept
    eabf:	55                   	push   %rbp
    eac0:	48 89 e5             	mov    %rsp,%rbp
    eac3:	48 83 ec 10          	sub    $0x10,%rsp
    eac7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eacb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    eacf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ead3:	48 89 c7             	mov    %rax,%rdi
    ead6:	e8 d5 08 00 00       	call   f3b0 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    eadb:	48 89 c2             	mov    %rax,%rdx
    eade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eae2:	48 89 d6             	mov    %rdx,%rsi
    eae5:	48 89 c7             	mov    %rax,%rdi
    eae8:	e8 d1 08 00 00       	call   f3be <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    eaed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaf1:	c9                   	leave
    eaf2:	c3                   	ret
    eaf3:	90                   	nop

000000000000eaf4 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    eaf4:	55                   	push   %rbp
    eaf5:	48 89 e5             	mov    %rsp,%rbp
    eaf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eafc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    eb00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb04:	48 8b 10             	mov    (%rax),%rdx
    eb07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb0b:	48 89 10             	mov    %rdx,(%rax)
    eb0e:	90                   	nop
    eb0f:	5d                   	pop    %rbp
    eb10:	c3                   	ret
    eb11:	90                   	nop

000000000000eb12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    eb12:	55                   	push   %rbp
    eb13:	48 89 e5             	mov    %rsp,%rbp
    eb16:	41 54                	push   %r12
    eb18:	53                   	push   %rbx
    eb19:	48 83 ec 60          	sub    $0x60,%rsp
    eb1d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    eb21:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    eb25:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    eb29:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    eb2d:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    eb31:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    eb35:	48 89 c7             	mov    %rax,%rdi
    eb38:	e8 62 a0 ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    eb3d:	49 89 c4             	mov    %rax,%r12
    eb40:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    eb44:	48 89 c7             	mov    %rax,%rdi
    eb47:	e8 a5 08 00 00       	call   f3f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    eb4c:	48 89 c3             	mov    %rax,%rbx
    eb4f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eb53:	48 89 c7             	mov    %rax,%rdi
    eb56:	e8 28 a0 ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    eb5b:	48 89 c2             	mov    %rax,%rdx
    eb5e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    eb62:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    eb66:	4d 89 e0             	mov    %r12,%r8
    eb69:	48 89 d9             	mov    %rbx,%rcx
    eb6c:	48 89 c7             	mov    %rax,%rdi
    eb6f:	e8 8c 08 00 00       	call   f400 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    eb74:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    eb78:	48 89 c7             	mov    %rax,%rdi
    eb7b:	e8 80 0d 00 00       	call   f900 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    eb80:	48 89 c2             	mov    %rax,%rdx
    eb83:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    eb87:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb8b:	48 89 ce             	mov    %rcx,%rsi
    eb8e:	48 89 c7             	mov    %rax,%rdi
    eb91:	e8 1c 09 00 00       	call   f4b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    eb96:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    eb9a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    eb9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eba2:	48 85 c0             	test   %rax,%rax
    eba5:	74 1c                	je     ebc3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    eba7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    ebab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ebaf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ebb3:	48 89 ce             	mov    %rcx,%rsi
    ebb6:	48 89 c7             	mov    %rax,%rdi
    ebb9:	e8 60 0d 00 00       	call   f91e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    ebbe:	48 89 c3             	mov    %rax,%rbx
    ebc1:	eb 17                	jmp    ebda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    ebc3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ebc7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ebcb:	48 89 d6             	mov    %rdx,%rsi
    ebce:	48 89 c7             	mov    %rax,%rdi
    ebd1:	e8 9e 0d 00 00       	call   f974 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    ebd6:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    ebda:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ebde:	48 89 c7             	mov    %rax,%rdi
    ebe1:	e8 96 08 00 00       	call   f47c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    ebe6:	48 89 d8             	mov    %rbx,%rax
    ebe9:	eb 1a                	jmp    ec05 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    ebeb:	48 89 c3             	mov    %rax,%rbx
    ebee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ebf2:	48 89 c7             	mov    %rax,%rdi
    ebf5:	e8 82 08 00 00       	call   f47c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    ebfa:	48 89 d8             	mov    %rbx,%rax
    ebfd:	48 89 c7             	mov    %rax,%rdi
    ec00:	e8 cb 48 ff ff       	call   34d0 <_Unwind_Resume@plt>
    ec05:	48 83 c4 60          	add    $0x60,%rsp
    ec09:	5b                   	pop    %rbx
    ec0a:	41 5c                	pop    %r12
    ec0c:	5d                   	pop    %rbp
    ec0d:	c3                   	ret

000000000000ec0e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ec0e:	55                   	push   %rbp
    ec0f:	48 89 e5             	mov    %rsp,%rbp
    ec12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ec1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec1e:	48 8b 10             	mov    (%rax),%rdx
    ec21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec25:	48 89 10             	mov    %rdx,(%rax)
    ec28:	90                   	nop
    ec29:	5d                   	pop    %rbp
    ec2a:	c3                   	ret
    ec2b:	90                   	nop

000000000000ec2c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ec2c:	55                   	push   %rbp
    ec2d:	48 89 e5             	mov    %rsp,%rbp
    ec30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ec34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec38:	5d                   	pop    %rbp
    ec39:	c3                   	ret

000000000000ec3a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ec3a:	55                   	push   %rbp
    ec3b:	48 89 e5             	mov    %rsp,%rbp
    ec3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec42:	90                   	nop
    ec43:	5d                   	pop    %rbp
    ec44:	c3                   	ret
    ec45:	90                   	nop

000000000000ec46 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ec46:	55                   	push   %rbp
    ec47:	48 89 e5             	mov    %rsp,%rbp
    ec4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec4e:	90                   	nop
    ec4f:	5d                   	pop    %rbp
    ec50:	c3                   	ret

000000000000ec51 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ec51:	55                   	push   %rbp
    ec52:	48 89 e5             	mov    %rsp,%rbp
    ec55:	53                   	push   %rbx
    ec56:	48 83 ec 28          	sub    $0x28,%rsp
    ec5a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ec5e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ec62:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ec66:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ec6a:	48 89 d6             	mov    %rdx,%rsi
    ec6d:	48 89 c7             	mov    %rax,%rdi
    ec70:	e8 ed 00 00 00       	call   ed62 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    ec75:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ec79:	48 89 c7             	mov    %rax,%rdi
    ec7c:	e8 0d 0d 00 00       	call   f98e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    ec81:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ec85:	0f 92 c3             	setb   %bl
    ec88:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ec8c:	48 89 c7             	mov    %rax,%rdi
    ec8f:	e8 60 f5 ff ff       	call   e1f4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    ec94:	84 db                	test   %bl,%bl
    ec96:	74 0f                	je     eca7 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    ec98:	48 8d 05 99 53 00 00 	lea    0x5399(%rip),%rax        # 14038 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    ec9f:	48 89 c7             	mov    %rax,%rdi
    eca2:	e8 89 44 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    eca7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    ecab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ecaf:	c9                   	leave
    ecb0:	c3                   	ret
    ecb1:	90                   	nop

000000000000ecb2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    ecb2:	55                   	push   %rbp
    ecb3:	48 89 e5             	mov    %rsp,%rbp
    ecb6:	53                   	push   %rbx
    ecb7:	48 83 ec 28          	sub    $0x28,%rsp
    ecbb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ecbf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ecc3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    ecc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eccb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    eccf:	48 89 d6             	mov    %rdx,%rsi
    ecd2:	48 89 c7             	mov    %rax,%rdi
    ecd5:	e8 f6 0c 00 00       	call   f9d0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    ecda:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ecde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ece2:	48 89 d6             	mov    %rdx,%rsi
    ece5:	48 89 c7             	mov    %rax,%rdi
    ece8:	e8 15 0d 00 00       	call   fa02 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    eced:	eb 1a                	jmp    ed09 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    ecef:	48 89 c3             	mov    %rax,%rbx
    ecf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecf6:	48 89 c7             	mov    %rax,%rdi
    ecf9:	e8 3c ed ff ff       	call   da3a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    ecfe:	48 89 d8             	mov    %rbx,%rax
    ed01:	48 89 c7             	mov    %rax,%rdi
    ed04:	e8 c7 47 ff ff       	call   34d0 <_Unwind_Resume@plt>
    ed09:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ed0d:	c9                   	leave
    ed0e:	c3                   	ret
    ed0f:	90                   	nop

000000000000ed10 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    ed10:	55                   	push   %rbp
    ed11:	48 89 e5             	mov    %rsp,%rbp
    ed14:	48 83 ec 10          	sub    $0x10,%rsp
    ed18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ed20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed24:	48 89 c7             	mov    %rax,%rdi
    ed27:	e8 cc f5 ff ff       	call   e2f8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ed2c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    ed2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed33:	48 8b 00             	mov    (%rax),%rax
    ed36:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ed3a:	48 89 ce             	mov    %rcx,%rsi
    ed3d:	48 89 c7             	mov    %rax,%rdi
    ed40:	e8 13 0d 00 00       	call   fa58 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ed45:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ed49:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ed4d:	90                   	nop
    ed4e:	c9                   	leave
    ed4f:	c3                   	ret

000000000000ed50 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ed50:	55                   	push   %rbp
    ed51:	48 89 e5             	mov    %rsp,%rbp
    ed54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ed5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed60:	5d                   	pop    %rbp
    ed61:	c3                   	ret

000000000000ed62 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    ed62:	55                   	push   %rbp
    ed63:	48 89 e5             	mov    %rsp,%rbp
    ed66:	48 83 ec 10          	sub    $0x10,%rsp
    ed6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    ed72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ed76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed7a:	48 89 d6             	mov    %rdx,%rsi
    ed7d:	48 89 c7             	mov    %rax,%rdi
    ed80:	e8 fd 0c 00 00       	call   fa82 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    ed85:	90                   	nop
    ed86:	c9                   	leave
    ed87:	c3                   	ret

000000000000ed88 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    ed88:	55                   	push   %rbp
    ed89:	48 89 e5             	mov    %rsp,%rbp
    ed8c:	48 83 ec 20          	sub    $0x20,%rsp
    ed90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ed98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ed9c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eda1:	74 17                	je     edba <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    eda3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eda7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    edab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    edaf:	48 89 ce             	mov    %rcx,%rsi
    edb2:	48 89 c7             	mov    %rax,%rdi
    edb5:	e8 d7 0c 00 00       	call   fa91 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    edba:	90                   	nop
    edbb:	c9                   	leave
    edbc:	c3                   	ret

000000000000edbd <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    edbd:	55                   	push   %rbp
    edbe:	48 89 e5             	mov    %rsp,%rbp
    edc1:	48 83 ec 10          	sub    $0x10,%rsp
    edc5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    edc9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    edcd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    edd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edd5:	48 89 d6             	mov    %rdx,%rsi
    edd8:	48 89 c7             	mov    %rax,%rdi
    eddb:	e8 df 0c 00 00       	call   fabf <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    ede0:	90                   	nop
    ede1:	c9                   	leave
    ede2:	c3                   	ret

000000000000ede3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ede3:	55                   	push   %rbp
    ede4:	48 89 e5             	mov    %rsp,%rbp
    ede7:	48 83 ec 20          	sub    $0x20,%rsp
    edeb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    edef:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    edf6:	55 55 05 
    edf9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    edfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee01:	48 89 c7             	mov    %rax,%rdi
    ee04:	e8 c5 0c 00 00       	call   face <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    ee09:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ee0d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ee11:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ee15:	48 89 d6             	mov    %rdx,%rsi
    ee18:	48 89 c7             	mov    %rax,%rdi
    ee1b:	e8 54 4d ff ff       	call   3b74 <_ZSt3minImERKT_S2_S2_>
    ee20:	48 8b 00             	mov    (%rax),%rax
      }
    ee23:	c9                   	leave
    ee24:	c3                   	ret
    ee25:	90                   	nop

000000000000ee26 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    ee26:	55                   	push   %rbp
    ee27:	48 89 e5             	mov    %rsp,%rbp
    ee2a:	48 83 ec 10          	sub    $0x10,%rsp
    ee2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    ee36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ee3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee3e:	48 89 d6             	mov    %rdx,%rsi
    ee41:	48 89 c7             	mov    %rax,%rdi
    ee44:	e8 9f 0c 00 00       	call   fae8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    ee49:	90                   	nop
    ee4a:	c9                   	leave
    ee4b:	c3                   	ret

000000000000ee4c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ee4c:	55                   	push   %rbp
    ee4d:	48 89 e5             	mov    %rsp,%rbp
    ee50:	48 83 ec 10          	sub    $0x10,%rsp
    ee54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ee5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ee60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee64:	48 89 d6             	mov    %rdx,%rsi
    ee67:	48 89 c7             	mov    %rax,%rdi
    ee6a:	e8 b7 ff ff ff       	call   ee26 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    ee6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee73:	48 89 c7             	mov    %rax,%rdi
    ee76:	e8 7d 0c 00 00       	call   faf8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    ee7b:	90                   	nop
    ee7c:	c9                   	leave
    ee7d:	c3                   	ret

000000000000ee7e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ee7e:	55                   	push   %rbp
    ee7f:	48 89 e5             	mov    %rsp,%rbp
    ee82:	48 83 ec 10          	sub    $0x10,%rsp
    ee86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ee8e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ee92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee96:	48 89 d6             	mov    %rdx,%rsi
    ee99:	48 89 c7             	mov    %rax,%rdi
    ee9c:	e8 85 0c 00 00       	call   fb26 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    eea1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eea5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    eea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eeac:	48 8b 10             	mov    (%rax),%rdx
    eeaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eeb3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    eeb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eebb:	48 8b 08             	mov    (%rax),%rcx
    eebe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eec2:	48 89 d0             	mov    %rdx,%rax
    eec5:	48 01 c0             	add    %rax,%rax
    eec8:	48 01 d0             	add    %rdx,%rax
    eecb:	48 c1 e0 03          	shl    $0x3,%rax
    eecf:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    eed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eed7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    eedb:	90                   	nop
    eedc:	c9                   	leave
    eedd:	c3                   	ret

000000000000eede <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    eede:	55                   	push   %rbp
    eedf:	48 89 e5             	mov    %rsp,%rbp
    eee2:	48 83 ec 20          	sub    $0x20,%rsp
    eee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eeea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eeee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    eef2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eef7:	74 17                	je     ef10 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    eef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eefd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ef01:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ef05:	48 89 ce             	mov    %rcx,%rsi
    ef08:	48 89 c7             	mov    %rax,%rdi
    ef0b:	e8 49 0c 00 00       	call   fb59 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    ef10:	90                   	nop
    ef11:	c9                   	leave
    ef12:	c3                   	ret

000000000000ef13 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    ef13:	55                   	push   %rbp
    ef14:	48 89 e5             	mov    %rsp,%rbp
    ef17:	48 83 ec 20          	sub    $0x20,%rsp
    ef1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef23:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    ef27:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ef2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef2f:	48 89 d6             	mov    %rdx,%rsi
    ef32:	48 89 c7             	mov    %rax,%rdi
    ef35:	e8 4d 0c 00 00       	call   fb87 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    ef3a:	c9                   	leave
    ef3b:	c3                   	ret

000000000000ef3c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    ef3c:	55                   	push   %rbp
    ef3d:	48 89 e5             	mov    %rsp,%rbp
    ef40:	48 83 ec 10          	sub    $0x10,%rsp
    ef44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    ef4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ef50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef54:	48 89 d6             	mov    %rdx,%rsi
    ef57:	48 89 c7             	mov    %rax,%rdi
    ef5a:	e8 51 0c 00 00       	call   fbb0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    ef5f:	90                   	nop
    ef60:	c9                   	leave
    ef61:	c3                   	ret

000000000000ef62 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ef62:	55                   	push   %rbp
    ef63:	48 89 e5             	mov    %rsp,%rbp
    ef66:	48 83 ec 10          	sub    $0x10,%rsp
    ef6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ef72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ef76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef7a:	48 89 d6             	mov    %rdx,%rsi
    ef7d:	48 89 c7             	mov    %rax,%rdi
    ef80:	e8 3b 0c 00 00       	call   fbc0 <_ZNSaIPKcEC1ERKS1_>
    ef85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef89:	48 89 c7             	mov    %rax,%rdi
    ef8c:	e8 55 0c 00 00       	call   fbe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    ef91:	90                   	nop
    ef92:	c9                   	leave
    ef93:	c3                   	ret

000000000000ef94 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    ef94:	55                   	push   %rbp
    ef95:	48 89 e5             	mov    %rsp,%rbp
    ef98:	48 83 ec 20          	sub    $0x20,%rsp
    ef9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    efa4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    efa8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    efad:	74 17                	je     efc6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    efaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efb3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    efb7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    efbb:	48 89 ce             	mov    %rcx,%rsi
    efbe:	48 89 c7             	mov    %rax,%rdi
    efc1:	e8 4e 0c 00 00       	call   fc14 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    efc6:	90                   	nop
    efc7:	c9                   	leave
    efc8:	c3                   	ret
    efc9:	90                   	nop

000000000000efca <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    efca:	55                   	push   %rbp
    efcb:	48 89 e5             	mov    %rsp,%rbp
    efce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efd6:	48 8b 40 08          	mov    0x8(%rax),%rax
    efda:	5d                   	pop    %rbp
    efdb:	c3                   	ret

000000000000efdc <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    efdc:	55                   	push   %rbp
    efdd:	48 89 e5             	mov    %rsp,%rbp
    efe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    efe4:	90                   	nop
    efe5:	5d                   	pop    %rbp
    efe6:	c3                   	ret

000000000000efe7 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    efe7:	55                   	push   %rbp
    efe8:	48 89 e5             	mov    %rsp,%rbp
    efeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    eff3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eff7:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    effb:	48 c1 f8 03          	sar    $0x3,%rax
    }
    efff:	5d                   	pop    %rbp
    f000:	c3                   	ret

000000000000f001 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    f001:	55                   	push   %rbp
    f002:	48 89 e5             	mov    %rsp,%rbp
    f005:	53                   	push   %rbx
    f006:	48 83 ec 28          	sub    $0x28,%rsp
    f00a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f00e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    f012:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f016:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f01a:	48 89 d6             	mov    %rdx,%rsi
    f01d:	48 89 c7             	mov    %rax,%rdi
    f020:	e8 9b 0b 00 00       	call   fbc0 <_ZNSaIPKcEC1ERKS1_>
    f025:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f029:	48 89 c7             	mov    %rax,%rdi
    f02c:	e8 11 0c 00 00       	call   fc42 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    f031:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    f035:	0f 92 c3             	setb   %bl
    f038:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f03c:	48 89 c7             	mov    %rax,%rdi
    f03f:	e8 88 ec ff ff       	call   dccc <_ZNSaIPKcED1Ev>
    f044:	84 db                	test   %bl,%bl
    f046:	74 0f                	je     f057 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    f048:	48 8d 05 e9 4f 00 00 	lea    0x4fe9(%rip),%rax        # 14038 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    f04f:	48 89 c7             	mov    %rax,%rdi
    f052:	e8 d9 40 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    f057:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    f05b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f05f:	c9                   	leave
    f060:	c3                   	ret
    f061:	90                   	nop

000000000000f062 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    f062:	55                   	push   %rbp
    f063:	48 89 e5             	mov    %rsp,%rbp
    f066:	48 83 ec 10          	sub    $0x10,%rsp
    f06a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f06e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    f072:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f077:	74 15                	je     f08e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    f079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f07d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f081:	48 89 d6             	mov    %rdx,%rsi
    f084:	48 89 c7             	mov    %rax,%rdi
    f087:	e8 f8 0b 00 00       	call   fc84 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    f08c:	eb 05                	jmp    f093 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    f08e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    f093:	c9                   	leave
    f094:	c3                   	ret

000000000000f095 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    f095:	55                   	push   %rbp
    f096:	48 89 e5             	mov    %rsp,%rbp
    f099:	48 83 ec 20          	sub    $0x20,%rsp
    f09d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f0a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    f0a9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    f0ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f0b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f0b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0b9:	48 89 ce             	mov    %rcx,%rsi
    f0bc:	48 89 c7             	mov    %rax,%rdi
    f0bf:	e8 ea 0b 00 00       	call   fcae <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    f0c4:	c9                   	leave
    f0c5:	c3                   	ret

000000000000f0c6 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    f0c6:	55                   	push   %rbp
    f0c7:	48 89 e5             	mov    %rsp,%rbp
    f0ca:	48 83 ec 10          	sub    $0x10,%rsp
    f0ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    f0d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f0da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0de:	48 89 d6             	mov    %rdx,%rsi
    f0e1:	48 89 c7             	mov    %rax,%rdi
    f0e4:	e8 fa 0b 00 00       	call   fce3 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    f0e9:	90                   	nop
    f0ea:	c9                   	leave
    f0eb:	c3                   	ret

000000000000f0ec <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    f0ec:	55                   	push   %rbp
    f0ed:	48 89 e5             	mov    %rsp,%rbp
    f0f0:	48 83 ec 20          	sub    $0x20,%rsp
    f0f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    f0f8:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    f0ff:	07 7e 00 
    f102:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    f106:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f10a:	48 89 c7             	mov    %rax,%rdi
    f10d:	e8 e0 0b 00 00       	call   fcf2 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    f112:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    f116:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    f11a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f11e:	48 89 d6             	mov    %rdx,%rsi
    f121:	48 89 c7             	mov    %rax,%rdi
    f124:	e8 4b 4a ff ff       	call   3b74 <_ZSt3minImERKT_S2_S2_>
    f129:	48 8b 00             	mov    (%rax),%rax
      }
    f12c:	c9                   	leave
    f12d:	c3                   	ret

000000000000f12e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    f12e:	55                   	push   %rbp
    f12f:	48 89 e5             	mov    %rsp,%rbp
    f132:	48 83 ec 10          	sub    $0x10,%rsp
    f136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f13a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    f13e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f146:	48 89 d6             	mov    %rdx,%rsi
    f149:	48 89 c7             	mov    %rax,%rdi
    f14c:	e8 bb 0b 00 00       	call   fd0c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    f151:	90                   	nop
    f152:	c9                   	leave
    f153:	c3                   	ret

000000000000f154 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    f154:	55                   	push   %rbp
    f155:	48 89 e5             	mov    %rsp,%rbp
    f158:	48 83 ec 10          	sub    $0x10,%rsp
    f15c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f160:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    f164:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f16c:	48 89 d6             	mov    %rdx,%rsi
    f16f:	48 89 c7             	mov    %rax,%rdi
    f172:	e8 b7 ff ff ff       	call   f12e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    f177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f17b:	48 89 c7             	mov    %rax,%rdi
    f17e:	e8 99 0b 00 00       	call   fd1c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    f183:	90                   	nop
    f184:	c9                   	leave
    f185:	c3                   	ret

000000000000f186 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    f186:	55                   	push   %rbp
    f187:	48 89 e5             	mov    %rsp,%rbp
    f18a:	48 83 ec 10          	sub    $0x10,%rsp
    f18e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f192:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    f196:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f19a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f19e:	48 89 d6             	mov    %rdx,%rsi
    f1a1:	48 89 c7             	mov    %rax,%rdi
    f1a4:	e8 a1 0b 00 00       	call   fd4a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    f1a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f1ad:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    f1b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1b4:	48 8b 10             	mov    (%rax),%rdx
    f1b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1bb:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    f1bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1c3:	48 8b 08             	mov    (%rax),%rcx
    f1c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f1ca:	48 89 d0             	mov    %rdx,%rax
    f1cd:	48 c1 e0 06          	shl    $0x6,%rax
    f1d1:	48 01 d0             	add    %rdx,%rax
    f1d4:	48 c1 e0 02          	shl    $0x2,%rax
    f1d8:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    f1dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1e0:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    f1e4:	90                   	nop
    f1e5:	c9                   	leave
    f1e6:	c3                   	ret
    f1e7:	90                   	nop

000000000000f1e8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    f1e8:	55                   	push   %rbp
    f1e9:	48 89 e5             	mov    %rsp,%rbp
    f1ec:	48 83 ec 20          	sub    $0x20,%rsp
    f1f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    f1fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f201:	74 17                	je     f21a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    f203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f207:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f20b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f20f:	48 89 ce             	mov    %rcx,%rsi
    f212:	48 89 c7             	mov    %rax,%rdi
    f215:	e8 63 0b 00 00       	call   fd7d <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    f21a:	90                   	nop
    f21b:	c9                   	leave
    f21c:	c3                   	ret

000000000000f21d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    f21d:	55                   	push   %rbp
    f21e:	48 89 e5             	mov    %rsp,%rbp
    f221:	48 83 ec 20          	sub    $0x20,%rsp
    f225:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f229:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f22d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    f231:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f239:	48 89 d6             	mov    %rdx,%rsi
    f23c:	48 89 c7             	mov    %rax,%rdi
    f23f:	e8 67 0b 00 00       	call   fdab <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    f244:	c9                   	leave
    f245:	c3                   	ret

000000000000f246 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    f246:	55                   	push   %rbp
    f247:	48 89 e5             	mov    %rsp,%rbp
    f24a:	48 83 ec 10          	sub    $0x10,%rsp
    f24e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f252:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    f256:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f25a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f25e:	48 89 d6             	mov    %rdx,%rsi
    f261:	48 89 c7             	mov    %rax,%rdi
    f264:	e8 6b 0b 00 00       	call   fdd4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    f269:	90                   	nop
    f26a:	c9                   	leave
    f26b:	c3                   	ret

000000000000f26c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f26c:	55                   	push   %rbp
    f26d:	48 89 e5             	mov    %rsp,%rbp
    f270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f274:	90                   	nop
    f275:	5d                   	pop    %rbp
    f276:	c3                   	ret

000000000000f277 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    f277:	55                   	push   %rbp
    f278:	48 89 e5             	mov    %rsp,%rbp
    f27b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    f27f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f283:	48 8b 40 18          	mov    0x18(%rax),%rax
    f287:	5d                   	pop    %rbp
    f288:	c3                   	ret

000000000000f289 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    f289:	55                   	push   %rbp
    f28a:	48 89 e5             	mov    %rsp,%rbp
    f28d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    f291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f295:	48 8b 40 10          	mov    0x10(%rax),%rax
    f299:	5d                   	pop    %rbp
    f29a:	c3                   	ret
    f29b:	90                   	nop

000000000000f29c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    f29c:	55                   	push   %rbp
    f29d:	48 89 e5             	mov    %rsp,%rbp
    f2a0:	48 83 ec 10          	sub    $0x10,%rsp
    f2a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    f2ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f2b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2b4:	48 89 d6             	mov    %rdx,%rsi
    f2b7:	48 89 c7             	mov    %rax,%rdi
    f2ba:	e8 25 0b 00 00       	call   fde4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    f2bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f2c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2c7:	48 89 d6             	mov    %rdx,%rsi
    f2ca:	48 89 c7             	mov    %rax,%rdi
    f2cd:	e8 50 0b 00 00       	call   fe22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    f2d2:	90                   	nop
    f2d3:	c9                   	leave
    f2d4:	c3                   	ret
    f2d5:	90                   	nop

000000000000f2d6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    f2d6:	55                   	push   %rbp
    f2d7:	48 89 e5             	mov    %rsp,%rbp
    f2da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    f2de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2e2:	48 8b 40 10          	mov    0x10(%rax),%rax
    f2e6:	5d                   	pop    %rbp
    f2e7:	c3                   	ret

000000000000f2e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    f2e8:	55                   	push   %rbp
    f2e9:	48 89 e5             	mov    %rsp,%rbp
    f2ec:	53                   	push   %rbx
    f2ed:	48 83 ec 18          	sub    $0x18,%rsp
    f2f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f2f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    f2f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f2fd:	48 89 c7             	mov    %rax,%rdi
    f300:	e8 53 0b 00 00       	call   fe58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    f305:	48 89 c3             	mov    %rax,%rbx
    f308:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f30c:	48 89 c7             	mov    %rax,%rdi
    f30f:	e8 92 f6 ff ff       	call   e9a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    f314:	48 89 c6             	mov    %rax,%rsi
    f317:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f31b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f31f:	48 89 d1             	mov    %rdx,%rcx
    f322:	48 89 da             	mov    %rbx,%rdx
    f325:	48 89 c7             	mov    %rax,%rdi
    f328:	e8 3d 0b 00 00       	call   fe6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    f32d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f331:	c9                   	leave
    f332:	c3                   	ret
    f333:	90                   	nop

000000000000f334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    f334:	55                   	push   %rbp
    f335:	48 89 e5             	mov    %rsp,%rbp
    f338:	48 83 ec 20          	sub    $0x20,%rsp
    f33c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    f340:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f344:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f348:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f34c:	48 89 d6             	mov    %rdx,%rsi
    f34f:	48 89 c7             	mov    %rax,%rdi
    f352:	e8 1d 06 00 00       	call   f974 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    f357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f35b:	c9                   	leave
    f35c:	c3                   	ret
    f35d:	90                   	nop

000000000000f35e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    f35e:	55                   	push   %rbp
    f35f:	48 89 e5             	mov    %rsp,%rbp
    f362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    f366:	90                   	nop
    f367:	5d                   	pop    %rbp
    f368:	c3                   	ret
    f369:	90                   	nop

000000000000f36a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    f36a:	55                   	push   %rbp
    f36b:	48 89 e5             	mov    %rsp,%rbp
    f36e:	48 83 ec 10          	sub    $0x10,%rsp
    f372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    f376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f37a:	48 83 c0 20          	add    $0x20,%rax
    f37e:	48 89 c7             	mov    %rax,%rdi
    f381:	e8 7a 0b 00 00       	call   ff00 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    f386:	c9                   	leave
    f387:	c3                   	ret

000000000000f388 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    f388:	55                   	push   %rbp
    f389:	48 89 e5             	mov    %rsp,%rbp
    f38c:	48 83 ec 10          	sub    $0x10,%rsp
    f390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f394:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    f398:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f39c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3a0:	48 89 d6             	mov    %rdx,%rsi
    f3a3:	48 89 c7             	mov    %rax,%rdi
    f3a6:	e8 85 3c ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    f3ab:	c1 e8 1f             	shr    $0x1f,%eax
    f3ae:	c9                   	leave
    f3af:	c3                   	ret

000000000000f3b0 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f3b0:	55                   	push   %rbp
    f3b1:	48 89 e5             	mov    %rsp,%rbp
    f3b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f3b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3bc:	5d                   	pop    %rbp
    f3bd:	c3                   	ret

000000000000f3be <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    f3be:	55                   	push   %rbp
    f3bf:	48 89 e5             	mov    %rsp,%rbp
    f3c2:	53                   	push   %rbx
    f3c3:	48 83 ec 18          	sub    $0x18,%rsp
    f3c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f3cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    f3cf:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f3d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f3d7:	48 89 c7             	mov    %rax,%rdi
    f3da:	e8 d1 ff ff ff       	call   f3b0 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    f3df:	48 89 c6             	mov    %rax,%rsi
    f3e2:	48 89 df             	mov    %rbx,%rdi
    f3e5:	e8 30 0b 00 00       	call   ff1a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    f3ea:	90                   	nop
    f3eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f3ef:	c9                   	leave
    f3f0:	c3                   	ret

000000000000f3f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f3f1:	55                   	push   %rbp
    f3f2:	48 89 e5             	mov    %rsp,%rbp
    f3f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f3f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3fd:	5d                   	pop    %rbp
    f3fe:	c3                   	ret
    f3ff:	90                   	nop

000000000000f400 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    f400:	55                   	push   %rbp
    f401:	48 89 e5             	mov    %rsp,%rbp
    f404:	41 54                	push   %r12
    f406:	53                   	push   %rbx
    f407:	48 83 ec 30          	sub    $0x30,%rsp
    f40b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f40f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f413:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f417:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    f41b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    f41f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f423:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f427:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    f42a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f42e:	48 89 c7             	mov    %rax,%rdi
    f431:	e8 69 97 ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    f436:	49 89 c4             	mov    %rax,%r12
    f439:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f43d:	48 89 c7             	mov    %rax,%rdi
    f440:	e8 ac ff ff ff       	call   f3f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    f445:	48 89 c3             	mov    %rax,%rbx
    f448:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f44c:	48 89 c7             	mov    %rax,%rdi
    f44f:	e8 2f 97 ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    f454:	48 89 c6             	mov    %rax,%rsi
    f457:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f45b:	4c 89 e1             	mov    %r12,%rcx
    f45e:	48 89 da             	mov    %rbx,%rdx
    f461:	48 89 c7             	mov    %rax,%rdi
    f464:	e8 e5 0a 00 00       	call   ff4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    f469:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f46d:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    f471:	90                   	nop
    f472:	48 83 c4 30          	add    $0x30,%rsp
    f476:	5b                   	pop    %rbx
    f477:	41 5c                	pop    %r12
    f479:	5d                   	pop    %rbp
    f47a:	c3                   	ret
    f47b:	90                   	nop

000000000000f47c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    f47c:	55                   	push   %rbp
    f47d:	48 89 e5             	mov    %rsp,%rbp
    f480:	48 83 ec 10          	sub    $0x10,%rsp
    f484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    f488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f48c:	48 8b 40 08          	mov    0x8(%rax),%rax
    f490:	48 85 c0             	test   %rax,%rax
    f493:	74 1a                	je     f4af <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    f495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f499:	48 8b 00             	mov    (%rax),%rax
    f49c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f4a0:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    f4a4:	48 89 d6             	mov    %rdx,%rsi
    f4a7:	48 89 c7             	mov    %rax,%rdi
    f4aa:	e8 ed fd ff ff       	call   f29c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    f4af:	90                   	nop
    f4b0:	c9                   	leave
    f4b1:	c3                   	ret

000000000000f4b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    f4b2:	55                   	push   %rbp
    f4b3:	48 89 e5             	mov    %rsp,%rbp
    f4b6:	53                   	push   %rbx
    f4b7:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    f4be:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    f4c5:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    f4cc:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    f4d3:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f4da:	48 89 c7             	mov    %rax,%rdi
    f4dd:	e8 e8 0a 00 00       	call   ffca <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    f4e2:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    f4e9:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    f4f0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f4f7:	48 89 c7             	mov    %rax,%rdi
    f4fa:	e8 59 09 00 00       	call   fe58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    f4ff:	48 39 c3             	cmp    %rax,%rbx
    f502:	0f 94 c0             	sete   %al
    f505:	84 c0                	test   %al,%al
    f507:	0f 84 c8 00 00 00    	je     f5d5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    f50d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f514:	48 89 c7             	mov    %rax,%rdi
    f517:	e8 d6 0a 00 00       	call   fff2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    f51c:	48 85 c0             	test   %rax,%rax
    f51f:	74 44                	je     f565 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    f521:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    f528:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f52f:	48 89 c7             	mov    %rax,%rdi
    f532:	e8 cd 0a 00 00       	call   10004 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    f537:	48 8b 00             	mov    (%rax),%rax
    f53a:	48 89 c7             	mov    %rax,%rdi
    f53d:	e8 d4 0a 00 00       	call   10016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    f542:	48 89 c1             	mov    %rax,%rcx
    f545:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    f54c:	48 89 c2             	mov    %rax,%rdx
    f54f:	48 89 ce             	mov    %rcx,%rsi
    f552:	48 89 df             	mov    %rbx,%rdi
    f555:	e8 2e f5 ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f55a:	84 c0                	test   %al,%al
    f55c:	74 07                	je     f565 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    f55e:	b8 01 00 00 00       	mov    $0x1,%eax
    f563:	eb 05                	jmp    f56a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    f565:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    f56a:	84 c0                	test   %al,%al
    f56c:	74 49                	je     f5b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    f56e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f575:	48 89 c7             	mov    %rax,%rdi
    f578:	e8 87 0a 00 00       	call   10004 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    f57d:	48 89 c2             	mov    %rax,%rdx
    f580:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    f587:	00 00 00 00 
    f58b:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    f592:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f599:	48 89 ce             	mov    %rcx,%rsi
    f59c:	48 89 c7             	mov    %rax,%rdi
    f59f:	e8 d0 af ff ff       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    f5a4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    f5ab:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    f5b2:	e9 43 03 00 00       	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    f5b7:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    f5be:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f5c5:	48 89 d6             	mov    %rdx,%rsi
    f5c8:	48 89 c7             	mov    %rax,%rdi
    f5cb:	e8 60 0a 00 00       	call   10030 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    f5d0:	e9 25 03 00 00       	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    f5d5:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    f5dc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f5e3:	48 89 c7             	mov    %rax,%rdi
    f5e6:	e8 2b 0a 00 00       	call   10016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    f5eb:	48 89 c2             	mov    %rax,%rdx
    f5ee:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    f5f5:	48 89 c6             	mov    %rax,%rsi
    f5f8:	48 89 df             	mov    %rbx,%rdi
    f5fb:	e8 88 f4 ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f600:	84 c0                	test   %al,%al
    f602:	0f 84 66 01 00 00    	je     f76e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    f608:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f60f:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    f616:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    f61d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f624:	48 89 c7             	mov    %rax,%rdi
    f627:	e8 7a 0b 00 00       	call   101a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    f62c:	48 8b 00             	mov    (%rax),%rax
    f62f:	48 39 c3             	cmp    %rax,%rbx
    f632:	0f 94 c0             	sete   %al
    f635:	84 c0                	test   %al,%al
    f637:	74 4c                	je     f685 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    f639:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f640:	48 89 c7             	mov    %rax,%rdi
    f643:	e8 5e 0b 00 00       	call   101a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    f648:	48 89 c3             	mov    %rax,%rbx
    f64b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f652:	48 89 c7             	mov    %rax,%rdi
    f655:	e8 4c 0b 00 00       	call   101a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    f65a:	48 89 c1             	mov    %rax,%rcx
    f65d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f664:	48 89 da             	mov    %rbx,%rdx
    f667:	48 89 ce             	mov    %rcx,%rsi
    f66a:	48 89 c7             	mov    %rax,%rdi
    f66d:	e8 ba b0 ff ff       	call   a72c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    f672:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    f679:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    f680:	e9 75 02 00 00       	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    f685:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    f68c:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    f693:	48 89 c7             	mov    %rax,%rdi
    f696:	e8 1d 0b 00 00       	call   101b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    f69b:	48 8b 00             	mov    (%rax),%rax
    f69e:	48 89 c7             	mov    %rax,%rdi
    f6a1:	e8 70 09 00 00       	call   10016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    f6a6:	48 89 c1             	mov    %rax,%rcx
    f6a9:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    f6b0:	48 89 c2             	mov    %rax,%rdx
    f6b3:	48 89 ce             	mov    %rcx,%rsi
    f6b6:	48 89 df             	mov    %rbx,%rdi
    f6b9:	e8 ca f3 ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f6be:	84 c0                	test   %al,%al
    f6c0:	0f 84 8a 00 00 00    	je     f750 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    f6c6:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f6cd:	48 89 c7             	mov    %rax,%rdi
    f6d0:	e8 a2 fb ff ff       	call   f277 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    f6d5:	48 85 c0             	test   %rax,%rax
    f6d8:	0f 94 c0             	sete   %al
    f6db:	84 c0                	test   %al,%al
    f6dd:	74 3e                	je     f71d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    f6df:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    f6e6:	00 00 00 00 
    f6ea:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    f6f1:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    f6f8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    f6ff:	48 89 ce             	mov    %rcx,%rsi
    f702:	48 89 c7             	mov    %rax,%rdi
    f705:	e8 6a ae ff ff       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    f70a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    f711:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    f718:	e9 dd 01 00 00       	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    f71d:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    f724:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    f72b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    f732:	48 89 ce             	mov    %rcx,%rsi
    f735:	48 89 c7             	mov    %rax,%rdi
    f738:	e8 ef af ff ff       	call   a72c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    f73d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f744:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    f74b:	e9 aa 01 00 00       	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    f750:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    f757:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f75e:	48 89 d6             	mov    %rdx,%rsi
    f761:	48 89 c7             	mov    %rax,%rdi
    f764:	e8 c7 08 00 00       	call   10030 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    f769:	e9 8c 01 00 00       	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    f76e:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    f775:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f77c:	48 89 c7             	mov    %rax,%rdi
    f77f:	e8 92 08 00 00       	call   10016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    f784:	48 89 c1             	mov    %rax,%rcx
    f787:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    f78e:	48 89 c2             	mov    %rax,%rdx
    f791:	48 89 ce             	mov    %rcx,%rsi
    f794:	48 89 df             	mov    %rbx,%rdi
    f797:	e8 ec f2 ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f79c:	84 c0                	test   %al,%al
    f79e:	0f 84 2c 01 00 00    	je     f8d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    f7a4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f7ab:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    f7b2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    f7b9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f7c0:	48 89 c7             	mov    %rax,%rdi
    f7c3:	e8 3c 08 00 00       	call   10004 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    f7c8:	48 8b 00             	mov    (%rax),%rax
    f7cb:	48 39 c3             	cmp    %rax,%rbx
    f7ce:	0f 94 c0             	sete   %al
    f7d1:	84 c0                	test   %al,%al
    f7d3:	74 3a                	je     f80f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    f7d5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f7dc:	48 89 c7             	mov    %rax,%rdi
    f7df:	e8 20 08 00 00       	call   10004 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    f7e4:	48 89 c2             	mov    %rax,%rdx
    f7e7:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    f7ee:	00 
    f7ef:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    f7f3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f7f7:	48 89 ce             	mov    %rcx,%rsi
    f7fa:	48 89 c7             	mov    %rax,%rdi
    f7fd:	e8 72 ad ff ff       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    f802:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f806:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    f80a:	e9 eb 00 00 00       	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    f80f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    f816:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    f81d:	48 89 c7             	mov    %rax,%rdi
    f820:	e8 bb 09 00 00       	call   101e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    f825:	48 8b 00             	mov    (%rax),%rax
    f828:	48 89 c7             	mov    %rax,%rdi
    f82b:	e8 e6 07 00 00       	call   10016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    f830:	48 89 c2             	mov    %rax,%rdx
    f833:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    f83a:	48 89 c6             	mov    %rax,%rsi
    f83d:	48 89 df             	mov    %rbx,%rdi
    f840:	e8 43 f2 ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f845:	84 c0                	test   %al,%al
    f847:	74 6c                	je     f8b5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    f849:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f850:	48 89 c7             	mov    %rax,%rdi
    f853:	e8 1f fa ff ff       	call   f277 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    f858:	48 85 c0             	test   %rax,%rax
    f85b:	0f 94 c0             	sete   %al
    f85e:	84 c0                	test   %al,%al
    f860:	74 2c                	je     f88e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    f862:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    f869:	00 
    f86a:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    f871:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    f875:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f879:	48 89 ce             	mov    %rcx,%rsi
    f87c:	48 89 c7             	mov    %rax,%rdi
    f87f:	e8 f0 ac ff ff       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    f884:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f888:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    f88c:	eb 6c                	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    f88e:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    f895:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    f89c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f8a0:	48 89 ce             	mov    %rcx,%rsi
    f8a3:	48 89 c7             	mov    %rax,%rdi
    f8a6:	e8 81 ae ff ff       	call   a72c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    f8ab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f8af:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f8b3:	eb 45                	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    f8b5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    f8bc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    f8c3:	48 89 d6             	mov    %rdx,%rsi
    f8c6:	48 89 c7             	mov    %rax,%rdi
    f8c9:	e8 62 07 00 00       	call   10030 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    f8ce:	eb 2a                	jmp    f8fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    f8d0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    f8d7:	00 
    f8d8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    f8dc:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    f8e3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f8e7:	48 89 ce             	mov    %rcx,%rsi
    f8ea:	48 89 c7             	mov    %rax,%rdi
    f8ed:	e8 82 ac ff ff       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    f8f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f8f6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    f8fa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f8fe:	c9                   	leave
    f8ff:	c3                   	ret

000000000000f900 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    f900:	55                   	push   %rbp
    f901:	48 89 e5             	mov    %rsp,%rbp
    f904:	48 83 ec 10          	sub    $0x10,%rsp
    f908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    f90c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f910:	48 8b 40 08          	mov    0x8(%rax),%rax
    f914:	48 89 c7             	mov    %rax,%rdi
    f917:	e8 ec 08 00 00       	call   10208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    f91c:	c9                   	leave
    f91d:	c3                   	ret

000000000000f91e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    f91e:	55                   	push   %rbp
    f91f:	48 89 e5             	mov    %rsp,%rbp
    f922:	48 83 ec 30          	sub    $0x30,%rsp
    f926:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f92a:	48 89 d1             	mov    %rdx,%rcx
    f92d:	48 89 f0             	mov    %rsi,%rax
    f930:	48 89 fa             	mov    %rdi,%rdx
    f933:	48 89 ca             	mov    %rcx,%rdx
    f936:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f93a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    f93e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f942:	48 8b 00             	mov    (%rax),%rax
    f945:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f949:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    f94d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f951:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    f955:	48 89 c7             	mov    %rax,%rdi
    f958:	e8 d7 08 00 00       	call   10234 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    f95d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    f961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f965:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f96c:	00 
	  return __it;
    f96d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    f971:	c9                   	leave
    f972:	c3                   	ret
    f973:	90                   	nop

000000000000f974 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    f974:	55                   	push   %rbp
    f975:	48 89 e5             	mov    %rsp,%rbp
    f978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f97c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    f980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f984:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f988:	48 89 10             	mov    %rdx,(%rax)
    f98b:	90                   	nop
    f98c:	5d                   	pop    %rbp
    f98d:	c3                   	ret

000000000000f98e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    f98e:	55                   	push   %rbp
    f98f:	48 89 e5             	mov    %rsp,%rbp
    f992:	48 83 ec 20          	sub    $0x20,%rsp
    f996:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    f99a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    f9a1:	ff ff 0f 
    f9a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    f9a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9ac:	48 89 c7             	mov    %rax,%rdi
    f9af:	e8 43 09 00 00       	call   102f7 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    f9b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    f9b8:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    f9bc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f9c0:	48 89 d6             	mov    %rdx,%rsi
    f9c3:	48 89 c7             	mov    %rax,%rdi
    f9c6:	e8 a9 41 ff ff       	call   3b74 <_ZSt3minImERKT_S2_S2_>
    f9cb:	48 8b 00             	mov    (%rax),%rax
      }
    f9ce:	c9                   	leave
    f9cf:	c3                   	ret

000000000000f9d0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    f9d0:	55                   	push   %rbp
    f9d1:	48 89 e5             	mov    %rsp,%rbp
    f9d4:	48 83 ec 10          	sub    $0x10,%rsp
    f9d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    f9e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f9e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9e8:	48 89 d6             	mov    %rdx,%rsi
    f9eb:	48 89 c7             	mov    %rax,%rdi
    f9ee:	e8 6f f3 ff ff       	call   ed62 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    f9f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9f7:	48 89 c7             	mov    %rax,%rdi
    f9fa:	e8 13 09 00 00       	call   10312 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    f9ff:	90                   	nop
    fa00:	c9                   	leave
    fa01:	c3                   	ret

000000000000fa02 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    fa02:	55                   	push   %rbp
    fa03:	48 89 e5             	mov    %rsp,%rbp
    fa06:	48 83 ec 10          	sub    $0x10,%rsp
    fa0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    fa12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa1a:	48 89 d6             	mov    %rdx,%rsi
    fa1d:	48 89 c7             	mov    %rax,%rdi
    fa20:	e8 1b 09 00 00       	call   10340 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    fa25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fa29:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    fa2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa30:	48 8b 10             	mov    (%rax),%rdx
    fa33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa37:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    fa3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa3f:	48 8b 00             	mov    (%rax),%rax
    fa42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa46:	48 c1 e2 03          	shl    $0x3,%rdx
    fa4a:	48 01 c2             	add    %rax,%rdx
    fa4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa51:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    fa55:	90                   	nop
    fa56:	c9                   	leave
    fa57:	c3                   	ret

000000000000fa58 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    fa58:	55                   	push   %rbp
    fa59:	48 89 e5             	mov    %rsp,%rbp
    fa5c:	48 83 ec 20          	sub    $0x20,%rsp
    fa60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fa68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    fa6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa74:	48 89 d6             	mov    %rdx,%rsi
    fa77:	48 89 c7             	mov    %rax,%rdi
    fa7a:	e8 f4 08 00 00       	call   10373 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    fa7f:	c9                   	leave
    fa80:	c3                   	ret
    fa81:	90                   	nop

000000000000fa82 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    fa82:	55                   	push   %rbp
    fa83:	48 89 e5             	mov    %rsp,%rbp
    fa86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fa8e:	90                   	nop
    fa8f:	5d                   	pop    %rbp
    fa90:	c3                   	ret

000000000000fa91 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    fa91:	55                   	push   %rbp
    fa92:	48 89 e5             	mov    %rsp,%rbp
    fa95:	48 83 ec 20          	sub    $0x20,%rsp
    fa99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa9d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    faa1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    faa5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    faa9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    faad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fab1:	48 89 ce             	mov    %rcx,%rsi
    fab4:	48 89 c7             	mov    %rax,%rdi
    fab7:	e8 e0 08 00 00       	call   1039c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    fabc:	90                   	nop
    fabd:	c9                   	leave
    fabe:	c3                   	ret

000000000000fabf <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    fabf:	55                   	push   %rbp
    fac0:	48 89 e5             	mov    %rsp,%rbp
    fac3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fac7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    facb:	90                   	nop
    facc:	5d                   	pop    %rbp
    facd:	c3                   	ret

000000000000face <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    face:	55                   	push   %rbp
    facf:	48 89 e5             	mov    %rsp,%rbp
    fad2:	48 83 ec 10          	sub    $0x10,%rsp
    fad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    fada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fade:	48 89 c7             	mov    %rax,%rdi
    fae1:	e8 e8 08 00 00       	call   103ce <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    fae6:	c9                   	leave
    fae7:	c3                   	ret

000000000000fae8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    fae8:	55                   	push   %rbp
    fae9:	48 89 e5             	mov    %rsp,%rbp
    faec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    faf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    faf4:	90                   	nop
    faf5:	5d                   	pop    %rbp
    faf6:	c3                   	ret
    faf7:	90                   	nop

000000000000faf8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    faf8:	55                   	push   %rbp
    faf9:	48 89 e5             	mov    %rsp,%rbp
    fafc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    fb00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb04:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    fb0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb0f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    fb16:	00 
    fb17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb1b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    fb22:	00 
	{ }
    fb23:	90                   	nop
    fb24:	5d                   	pop    %rbp
    fb25:	c3                   	ret

000000000000fb26 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    fb26:	55                   	push   %rbp
    fb27:	48 89 e5             	mov    %rsp,%rbp
    fb2a:	48 83 ec 10          	sub    $0x10,%rsp
    fb2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    fb36:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    fb3b:	74 15                	je     fb52 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    fb3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb41:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fb45:	48 89 d6             	mov    %rdx,%rsi
    fb48:	48 89 c7             	mov    %rax,%rdi
    fb4b:	e8 98 08 00 00       	call   103e8 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    fb50:	eb 05                	jmp    fb57 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    fb52:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    fb57:	c9                   	leave
    fb58:	c3                   	ret

000000000000fb59 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    fb59:	55                   	push   %rbp
    fb5a:	48 89 e5             	mov    %rsp,%rbp
    fb5d:	48 83 ec 20          	sub    $0x20,%rsp
    fb61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb65:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb69:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    fb6d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb71:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fb75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb79:	48 89 ce             	mov    %rcx,%rsi
    fb7c:	48 89 c7             	mov    %rax,%rdi
    fb7f:	e8 8e 08 00 00       	call   10412 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    fb84:	90                   	nop
    fb85:	c9                   	leave
    fb86:	c3                   	ret

000000000000fb87 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    fb87:	55                   	push   %rbp
    fb88:	48 89 e5             	mov    %rsp,%rbp
    fb8b:	48 83 ec 20          	sub    $0x20,%rsp
    fb8f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fb93:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    fb97:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    fb9b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fb9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fba3:	48 89 d6             	mov    %rdx,%rsi
    fba6:	48 89 c7             	mov    %rax,%rdi
    fba9:	e8 9d 08 00 00       	call   1044b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    fbae:	c9                   	leave
    fbaf:	c3                   	ret

000000000000fbb0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    fbb0:	55                   	push   %rbp
    fbb1:	48 89 e5             	mov    %rsp,%rbp
    fbb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fbbc:	90                   	nop
    fbbd:	5d                   	pop    %rbp
    fbbe:	c3                   	ret
    fbbf:	90                   	nop

000000000000fbc0 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    fbc0:	55                   	push   %rbp
    fbc1:	48 89 e5             	mov    %rsp,%rbp
    fbc4:	48 83 ec 10          	sub    $0x10,%rsp
    fbc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    fbd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fbd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbd8:	48 89 d6             	mov    %rdx,%rsi
    fbdb:	48 89 c7             	mov    %rax,%rdi
    fbde:	e8 c5 08 00 00       	call   104a8 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    fbe3:	90                   	nop
    fbe4:	c9                   	leave
    fbe5:	c3                   	ret

000000000000fbe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    fbe6:	55                   	push   %rbp
    fbe7:	48 89 e5             	mov    %rsp,%rbp
    fbea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    fbee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbf2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    fbf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbfd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    fc04:	00 
    fc05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc09:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    fc10:	00 
	{ }
    fc11:	90                   	nop
    fc12:	5d                   	pop    %rbp
    fc13:	c3                   	ret

000000000000fc14 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    fc14:	55                   	push   %rbp
    fc15:	48 89 e5             	mov    %rsp,%rbp
    fc18:	48 83 ec 20          	sub    $0x20,%rsp
    fc1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fc20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fc24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    fc28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fc2c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fc30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc34:	48 89 ce             	mov    %rcx,%rsi
    fc37:	48 89 c7             	mov    %rax,%rdi
    fc3a:	e8 79 08 00 00       	call   104b8 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    fc3f:	90                   	nop
    fc40:	c9                   	leave
    fc41:	c3                   	ret

000000000000fc42 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    fc42:	55                   	push   %rbp
    fc43:	48 89 e5             	mov    %rsp,%rbp
    fc46:	48 83 ec 20          	sub    $0x20,%rsp
    fc4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    fc4e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    fc55:	ff ff 0f 
    fc58:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    fc5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc60:	48 89 c7             	mov    %rax,%rdi
    fc63:	e8 81 08 00 00       	call   104e9 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    fc68:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    fc6c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    fc70:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fc74:	48 89 d6             	mov    %rdx,%rsi
    fc77:	48 89 c7             	mov    %rax,%rdi
    fc7a:	e8 f5 3e ff ff       	call   3b74 <_ZSt3minImERKT_S2_S2_>
    fc7f:	48 8b 00             	mov    (%rax),%rax
      }
    fc82:	c9                   	leave
    fc83:	c3                   	ret

000000000000fc84 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    fc84:	55                   	push   %rbp
    fc85:	48 89 e5             	mov    %rsp,%rbp
    fc88:	48 83 ec 10          	sub    $0x10,%rsp
    fc8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fc90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    fc94:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fc98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc9c:	ba 00 00 00 00       	mov    $0x0,%edx
    fca1:	48 89 ce             	mov    %rcx,%rsi
    fca4:	48 89 c7             	mov    %rax,%rdi
    fca7:	e8 58 08 00 00       	call   10504 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    fcac:	c9                   	leave
    fcad:	c3                   	ret

000000000000fcae <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    fcae:	55                   	push   %rbp
    fcaf:	48 89 e5             	mov    %rsp,%rbp
    fcb2:	48 83 ec 30          	sub    $0x30,%rsp
    fcb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fcba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fcbe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    fcc2:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    fcc6:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    fcca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fcce:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    fcd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcd6:	48 89 ce             	mov    %rcx,%rsi
    fcd9:	48 89 c7             	mov    %rax,%rdi
    fcdc:	e8 84 08 00 00       	call   10565 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    fce1:	c9                   	leave
    fce2:	c3                   	ret

000000000000fce3 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    fce3:	55                   	push   %rbp
    fce4:	48 89 e5             	mov    %rsp,%rbp
    fce7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fceb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fcef:	90                   	nop
    fcf0:	5d                   	pop    %rbp
    fcf1:	c3                   	ret

000000000000fcf2 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    fcf2:	55                   	push   %rbp
    fcf3:	48 89 e5             	mov    %rsp,%rbp
    fcf6:	48 83 ec 10          	sub    $0x10,%rsp
    fcfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    fcfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd02:	48 89 c7             	mov    %rax,%rdi
    fd05:	e8 88 08 00 00       	call   10592 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    fd0a:	c9                   	leave
    fd0b:	c3                   	ret

000000000000fd0c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    fd0c:	55                   	push   %rbp
    fd0d:	48 89 e5             	mov    %rsp,%rbp
    fd10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fd18:	90                   	nop
    fd19:	5d                   	pop    %rbp
    fd1a:	c3                   	ret
    fd1b:	90                   	nop

000000000000fd1c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    fd1c:	55                   	push   %rbp
    fd1d:	48 89 e5             	mov    %rsp,%rbp
    fd20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    fd24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd28:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    fd2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd33:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    fd3a:	00 
    fd3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd3f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    fd46:	00 
	{ }
    fd47:	90                   	nop
    fd48:	5d                   	pop    %rbp
    fd49:	c3                   	ret

000000000000fd4a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    fd4a:	55                   	push   %rbp
    fd4b:	48 89 e5             	mov    %rsp,%rbp
    fd4e:	48 83 ec 10          	sub    $0x10,%rsp
    fd52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    fd5a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    fd5f:	74 15                	je     fd76 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    fd61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fd69:	48 89 d6             	mov    %rdx,%rsi
    fd6c:	48 89 c7             	mov    %rax,%rdi
    fd6f:	e8 38 08 00 00       	call   105ac <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    fd74:	eb 05                	jmp    fd7b <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    fd76:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    fd7b:	c9                   	leave
    fd7c:	c3                   	ret

000000000000fd7d <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    fd7d:	55                   	push   %rbp
    fd7e:	48 89 e5             	mov    %rsp,%rbp
    fd81:	48 83 ec 20          	sub    $0x20,%rsp
    fd85:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd89:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fd8d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    fd91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fd95:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fd99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd9d:	48 89 ce             	mov    %rcx,%rsi
    fda0:	48 89 c7             	mov    %rax,%rdi
    fda3:	e8 2e 08 00 00       	call   105d6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    fda8:	90                   	nop
    fda9:	c9                   	leave
    fdaa:	c3                   	ret

000000000000fdab <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    fdab:	55                   	push   %rbp
    fdac:	48 89 e5             	mov    %rsp,%rbp
    fdaf:	48 83 ec 20          	sub    $0x20,%rsp
    fdb3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fdb7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    fdbb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    fdbf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fdc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdc7:	48 89 d6             	mov    %rdx,%rsi
    fdca:	48 89 c7             	mov    %rax,%rdi
    fdcd:	e8 3e 08 00 00       	call   10610 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    fdd2:	c9                   	leave
    fdd3:	c3                   	ret

000000000000fdd4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    fdd4:	55                   	push   %rbp
    fdd5:	48 89 e5             	mov    %rsp,%rbp
    fdd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fddc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fde0:	90                   	nop
    fde1:	5d                   	pop    %rbp
    fde2:	c3                   	ret
    fde3:	90                   	nop

000000000000fde4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    fde4:	55                   	push   %rbp
    fde5:	48 89 e5             	mov    %rsp,%rbp
    fde8:	53                   	push   %rbx
    fde9:	48 83 ec 18          	sub    $0x18,%rsp
    fded:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fdf1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    fdf5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fdf9:	48 89 c7             	mov    %rax,%rdi
    fdfc:	e8 69 f5 ff ff       	call   f36a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    fe01:	48 89 c3             	mov    %rax,%rbx
    fe04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe08:	48 89 c7             	mov    %rax,%rdi
    fe0b:	e8 60 08 00 00       	call   10670 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    fe10:	48 89 de             	mov    %rbx,%rsi
    fe13:	48 89 c7             	mov    %rax,%rdi
    fe16:	e8 63 08 00 00       	call   1067e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    fe1b:	90                   	nop
    fe1c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fe20:	c9                   	leave
    fe21:	c3                   	ret

000000000000fe22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    fe22:	55                   	push   %rbp
    fe23:	48 89 e5             	mov    %rsp,%rbp
    fe26:	48 83 ec 10          	sub    $0x10,%rsp
    fe2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fe2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    fe32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe36:	48 89 c7             	mov    %rax,%rdi
    fe39:	e8 32 08 00 00       	call   10670 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    fe3e:	48 89 c1             	mov    %rax,%rcx
    fe41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fe45:	ba 01 00 00 00       	mov    $0x1,%edx
    fe4a:	48 89 c6             	mov    %rax,%rsi
    fe4d:	48 89 cf             	mov    %rcx,%rdi
    fe50:	e8 4f 08 00 00       	call   106a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    fe55:	90                   	nop
    fe56:	c9                   	leave
    fe57:	c3                   	ret

000000000000fe58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    fe58:	55                   	push   %rbp
    fe59:	48 89 e5             	mov    %rsp,%rbp
    fe5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    fe60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe64:	48 83 c0 08          	add    $0x8,%rax
    fe68:	5d                   	pop    %rbp
    fe69:	c3                   	ret

000000000000fe6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    fe6a:	55                   	push   %rbp
    fe6b:	48 89 e5             	mov    %rsp,%rbp
    fe6e:	53                   	push   %rbx
    fe6f:	48 83 ec 38          	sub    $0x38,%rsp
    fe73:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fe77:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fe7b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    fe7f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    fe83:	eb 56                	jmp    fedb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    fe85:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    fe89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fe8d:	48 89 c7             	mov    %rax,%rdi
    fe90:	e8 73 03 00 00       	call   10208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    fe95:	48 89 c1             	mov    %rax,%rcx
    fe98:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fe9c:	48 89 c2             	mov    %rax,%rdx
    fe9f:	48 89 ce             	mov    %rcx,%rsi
    fea2:	48 89 df             	mov    %rbx,%rdi
    fea5:	e8 de eb ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    feaa:	83 f0 01             	xor    $0x1,%eax
    fead:	84 c0                	test   %al,%al
    feaf:	74 1a                	je     fecb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    feb1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    feb5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    feb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    febd:	48 89 c7             	mov    %rax,%rdi
    fec0:	e8 c4 f3 ff ff       	call   f289 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    fec5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    fec9:	eb 10                	jmp    fedb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    fecb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fecf:	48 89 c7             	mov    %rax,%rdi
    fed2:	e8 a0 f3 ff ff       	call   f277 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    fed7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    fedb:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    fee0:	75 a3                	jne    fe85 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    fee2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fee6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    feea:	48 89 d6             	mov    %rdx,%rsi
    feed:	48 89 c7             	mov    %rax,%rdi
    fef0:	e8 7f fa ff ff       	call   f974 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    fef5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    fef9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fefd:	c9                   	leave
    fefe:	c3                   	ret
    feff:	90                   	nop

000000000000ff00 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      _M_ptr() noexcept
    ff00:	55                   	push   %rbp
    ff01:	48 89 e5             	mov    %rsp,%rbp
    ff04:	48 83 ec 10          	sub    $0x10,%rsp
    ff08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    ff0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff10:	48 89 c7             	mov    %rax,%rdi
    ff13:	e8 ba 07 00 00       	call   106d2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    ff18:	c9                   	leave
    ff19:	c3                   	ret

000000000000ff1a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    ff1a:	55                   	push   %rbp
    ff1b:	48 89 e5             	mov    %rsp,%rbp
    ff1e:	53                   	push   %rbx
    ff1f:	48 83 ec 18          	sub    $0x18,%rsp
    ff23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ff27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    ff2b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ff2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ff33:	48 89 c7             	mov    %rax,%rdi
    ff36:	e8 75 f4 ff ff       	call   f3b0 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    ff3b:	48 89 c6             	mov    %rax,%rsi
    ff3e:	48 89 df             	mov    %rbx,%rdi
    ff41:	e8 9a 07 00 00       	call   106e0 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    ff46:	90                   	nop
    ff47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ff4b:	c9                   	leave
    ff4c:	c3                   	ret
    ff4d:	90                   	nop

000000000000ff4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    ff4e:	55                   	push   %rbp
    ff4f:	48 89 e5             	mov    %rsp,%rbp
    ff52:	41 54                	push   %r12
    ff54:	53                   	push   %rbx
    ff55:	48 83 ec 30          	sub    $0x30,%rsp
    ff59:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ff5d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ff61:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    ff65:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    ff69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ff6d:	48 89 c7             	mov    %rax,%rdi
    ff70:	e8 91 07 00 00       	call   10706 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    ff75:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    ff79:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ff7d:	48 89 c7             	mov    %rax,%rdi
    ff80:	e8 1a 8c ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    ff85:	49 89 c4             	mov    %rax,%r12
    ff88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ff8c:	48 89 c7             	mov    %rax,%rdi
    ff8f:	e8 5d f4 ff ff       	call   f3f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    ff94:	48 89 c3             	mov    %rax,%rbx
    ff97:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff9b:	48 89 c7             	mov    %rax,%rdi
    ff9e:	e8 e0 8b ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    ffa3:	48 89 c2             	mov    %rax,%rdx
    ffa6:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    ffaa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ffae:	4d 89 e0             	mov    %r12,%r8
    ffb1:	48 89 d9             	mov    %rbx,%rcx
    ffb4:	48 89 c7             	mov    %rax,%rdi
    ffb7:	e8 72 07 00 00       	call   1072e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    ffbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    ffc0:	48 83 c4 30          	add    $0x30,%rsp
    ffc4:	5b                   	pop    %rbx
    ffc5:	41 5c                	pop    %r12
    ffc7:	5d                   	pop    %rbp
    ffc8:	c3                   	ret
    ffc9:	90                   	nop

000000000000ffca <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    ffca:	55                   	push   %rbp
    ffcb:	48 89 e5             	mov    %rsp,%rbp
    ffce:	48 83 ec 20          	sub    $0x20,%rsp
    ffd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    ffd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffda:	48 8b 10             	mov    (%rax),%rdx
    ffdd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ffe1:	48 89 d6             	mov    %rdx,%rsi
    ffe4:	48 89 c7             	mov    %rax,%rdi
    ffe7:	e8 88 f9 ff ff       	call   f974 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    ffec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fff0:	c9                   	leave
    fff1:	c3                   	ret

000000000000fff2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    fff2:	55                   	push   %rbp
    fff3:	48 89 e5             	mov    %rsp,%rbp
    fff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    fffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fffe:	48 8b 40 28          	mov    0x28(%rax),%rax
   10002:	5d                   	pop    %rbp
   10003:	c3                   	ret

0000000000010004 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   10004:	55                   	push   %rbp
   10005:	48 89 e5             	mov    %rsp,%rbp
   10008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   1000c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10010:	48 83 c0 20          	add    $0x20,%rax
   10014:	5d                   	pop    %rbp
   10015:	c3                   	ret

0000000000010016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   10016:	55                   	push   %rbp
   10017:	48 89 e5             	mov    %rsp,%rbp
   1001a:	48 83 ec 10          	sub    $0x10,%rsp
   1001e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   10022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10026:	48 89 c7             	mov    %rax,%rdi
   10029:	e8 da 01 00 00       	call   10208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1002e:	c9                   	leave
   1002f:	c3                   	ret

0000000000010030 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   10030:	55                   	push   %rbp
   10031:	48 89 e5             	mov    %rsp,%rbp
   10034:	53                   	push   %rbx
   10035:	48 83 ec 78          	sub    $0x78,%rsp
   10039:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   1003d:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   10041:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10045:	48 89 c7             	mov    %rax,%rdi
   10048:	e8 59 e9 ff ff       	call   e9a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   1004d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   10051:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10055:	48 89 c7             	mov    %rax,%rdi
   10058:	e8 fb fd ff ff       	call   fe58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1005d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   10061:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   10065:	eb 51                	jmp    100b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   10067:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1006b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   1006f:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   10073:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10077:	48 89 c7             	mov    %rax,%rdi
   1007a:	e8 89 01 00 00       	call   10208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1007f:	48 89 c2             	mov    %rax,%rdx
   10082:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10086:	48 89 c6             	mov    %rax,%rsi
   10089:	48 89 df             	mov    %rbx,%rdi
   1008c:	e8 f7 e9 ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10091:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   10094:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   10098:	74 0e                	je     100a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   1009a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1009e:	48 89 c7             	mov    %rax,%rdi
   100a1:	e8 e3 f1 ff ff       	call   f289 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   100a6:	eb 0c                	jmp    100b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   100a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   100ac:	48 89 c7             	mov    %rax,%rdi
   100af:	e8 c3 f1 ff ff       	call   f277 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   100b4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   100b8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   100bc:	48 85 c0             	test   %rax,%rax
   100bf:	75 a6                	jne    10067 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   100c1:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   100c5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   100c9:	48 89 d6             	mov    %rdx,%rsi
   100cc:	48 89 c7             	mov    %rax,%rdi
   100cf:	e8 a0 f8 ff ff       	call   f974 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   100d4:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   100d8:	74 54                	je     1012e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   100da:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   100de:	48 89 c7             	mov    %rax,%rdi
   100e1:	e8 1a 07 00 00       	call   10800 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   100e6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   100ea:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   100ee:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   100f2:	48 89 d6             	mov    %rdx,%rsi
   100f5:	48 89 c7             	mov    %rax,%rdi
   100f8:	e8 2f e9 ff ff       	call   ea2c <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   100fd:	84 c0                	test   %al,%al
   100ff:	74 21                	je     10122 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   10101:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   10105:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   10109:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1010d:	48 89 ce             	mov    %rcx,%rsi
   10110:	48 89 c7             	mov    %rax,%rdi
   10113:	e8 12 07 00 00       	call   1082a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   10118:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1011c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   10120:	eb 7d                	jmp    1019f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   10122:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   10126:	48 89 c7             	mov    %rax,%rdi
   10129:	e8 8a 00 00 00       	call   101b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   1012e:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   10132:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10136:	48 89 c7             	mov    %rax,%rdi
   10139:	e8 d8 fe ff ff       	call   10016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1013e:	48 89 c1             	mov    %rax,%rcx
   10141:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10145:	48 89 c2             	mov    %rax,%rdx
   10148:	48 89 ce             	mov    %rcx,%rsi
   1014b:	48 89 df             	mov    %rbx,%rdi
   1014e:	e8 35 e9 ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10153:	84 c0                	test   %al,%al
   10155:	74 21                	je     10178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   10157:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1015b:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1015f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10163:	48 89 ce             	mov    %rcx,%rsi
   10166:	48 89 c7             	mov    %rax,%rdi
   10169:	e8 bc 06 00 00       	call   1082a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   1016e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10172:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10176:	eb 27                	jmp    1019f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   10178:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1017f:	00 
   10180:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10184:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   10188:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1018c:	48 89 ce             	mov    %rcx,%rsi
   1018f:	48 89 c7             	mov    %rax,%rdi
   10192:	e8 dd a3 ff ff       	call   a574 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   10197:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1019b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1019f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   101a3:	c9                   	leave
   101a4:	c3                   	ret
   101a5:	90                   	nop

00000000000101a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   101a6:	55                   	push   %rbp
   101a7:	48 89 e5             	mov    %rsp,%rbp
   101aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   101ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101b2:	48 83 c0 18          	add    $0x18,%rax
   101b6:	5d                   	pop    %rbp
   101b7:	c3                   	ret

00000000000101b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   101b8:	55                   	push   %rbp
   101b9:	48 89 e5             	mov    %rsp,%rbp
   101bc:	48 83 ec 10          	sub    $0x10,%rsp
   101c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   101c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101c8:	48 8b 00             	mov    (%rax),%rax
   101cb:	48 89 c7             	mov    %rax,%rdi
   101ce:	e8 2d 31 ff ff       	call   3300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   101d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   101d7:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   101da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   101de:	c9                   	leave
   101df:	c3                   	ret

00000000000101e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   101e0:	55                   	push   %rbp
   101e1:	48 89 e5             	mov    %rsp,%rbp
   101e4:	48 83 ec 10          	sub    $0x10,%rsp
   101e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   101ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101f0:	48 8b 00             	mov    (%rax),%rax
   101f3:	48 89 c7             	mov    %rax,%rdi
   101f6:	e8 95 2f ff ff       	call   3190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   101fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   101ff:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   10202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10206:	c9                   	leave
   10207:	c3                   	ret

0000000000010208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   10208:	55                   	push   %rbp
   10209:	48 89 e5             	mov    %rsp,%rbp
   1020c:	48 83 ec 20          	sub    $0x20,%rsp
   10210:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   10214:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10218:	48 89 c7             	mov    %rax,%rdi
   1021b:	e8 4e 06 00 00       	call   1086e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   10220:	48 89 c2             	mov    %rax,%rdx
   10223:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   10227:	48 89 d6             	mov    %rdx,%rsi
   1022a:	48 89 c7             	mov    %rax,%rdi
   1022d:	e8 5a 06 00 00       	call   1088c <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   10232:	c9                   	leave
   10233:	c3                   	ret

0000000000010234 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   10234:	55                   	push   %rbp
   10235:	48 89 e5             	mov    %rsp,%rbp
   10238:	41 54                	push   %r12
   1023a:	53                   	push   %rbx
   1023b:	48 83 ec 30          	sub    $0x30,%rsp
   1023f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10243:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10247:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1024b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   1024f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   10254:	75 43                	jne    10299 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   10256:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1025a:	48 89 c7             	mov    %rax,%rdi
   1025d:	e8 f6 fb ff ff       	call   fe58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   10262:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   10266:	74 31                	je     10299 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   10268:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1026c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10270:	48 89 c7             	mov    %rax,%rdi
   10273:	e8 9e fd ff ff       	call   10016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   10278:	49 89 c4             	mov    %rax,%r12
   1027b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1027f:	48 89 c7             	mov    %rax,%rdi
   10282:	e8 81 ff ff ff       	call   10208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   10287:	4c 89 e2             	mov    %r12,%rdx
   1028a:	48 89 c6             	mov    %rax,%rsi
   1028d:	48 89 df             	mov    %rbx,%rdi
   10290:	e8 f3 e7 ff ff       	call   ea88 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10295:	84 c0                	test   %al,%al
   10297:	74 07                	je     102a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   10299:	b8 01 00 00 00       	mov    $0x1,%eax
   1029e:	eb 05                	jmp    102a5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   102a0:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   102a5:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   102a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102ac:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   102b0:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   102b4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   102b8:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   102bc:	89 c7                	mov    %eax,%edi
   102be:	e8 7d 2d ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   102c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102c7:	48 8b 40 28          	mov    0x28(%rax),%rax
   102cb:	48 8d 50 01          	lea    0x1(%rax),%rdx
   102cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102d3:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   102d7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   102db:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   102df:	48 89 d6             	mov    %rdx,%rsi
   102e2:	48 89 c7             	mov    %rax,%rdi
   102e5:	e8 8a f6 ff ff       	call   f974 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   102ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   102ee:	48 83 c4 30          	add    $0x30,%rsp
   102f2:	5b                   	pop    %rbx
   102f3:	41 5c                	pop    %r12
   102f5:	5d                   	pop    %rbp
   102f6:	c3                   	ret

00000000000102f7 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   102f7:	55                   	push   %rbp
   102f8:	48 89 e5             	mov    %rsp,%rbp
   102fb:	48 83 ec 10          	sub    $0x10,%rsp
   102ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   10303:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10307:	48 89 c7             	mov    %rax,%rdi
   1030a:	e8 8f 05 00 00       	call   1089e <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
   1030f:	c9                   	leave
   10310:	c3                   	ret
   10311:	90                   	nop

0000000000010312 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   10312:	55                   	push   %rbp
   10313:	48 89 e5             	mov    %rsp,%rbp
   10316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1031a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1031e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   10325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10329:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   10330:	00 
   10331:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10335:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1033c:	00 
	{ }
   1033d:	90                   	nop
   1033e:	5d                   	pop    %rbp
   1033f:	c3                   	ret

0000000000010340 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   10340:	55                   	push   %rbp
   10341:	48 89 e5             	mov    %rsp,%rbp
   10344:	48 83 ec 10          	sub    $0x10,%rsp
   10348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1034c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   10350:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10355:	74 15                	je     1036c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
   10357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1035b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1035f:	48 89 d6             	mov    %rdx,%rsi
   10362:	48 89 c7             	mov    %rax,%rdi
   10365:	e8 4e 05 00 00       	call   108b8 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
   1036a:	eb 05                	jmp    10371 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
   1036c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   10371:	c9                   	leave
   10372:	c3                   	ret

0000000000010373 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   10373:	55                   	push   %rbp
   10374:	48 89 e5             	mov    %rsp,%rbp
   10377:	48 83 ec 20          	sub    $0x20,%rsp
   1037b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1037f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   10383:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   10387:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1038b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1038f:	48 89 d6             	mov    %rdx,%rsi
   10392:	48 89 c7             	mov    %rax,%rdi
   10395:	e8 48 05 00 00       	call   108e2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
   1039a:	c9                   	leave
   1039b:	c3                   	ret

000000000001039c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1039c:	55                   	push   %rbp
   1039d:	48 89 e5             	mov    %rsp,%rbp
   103a0:	48 83 ec 20          	sub    $0x20,%rsp
   103a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   103ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   103b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103b4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   103bb:	00 
   103bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103c0:	48 89 d6             	mov    %rdx,%rsi
   103c3:	48 89 c7             	mov    %rax,%rdi
   103c6:	e8 05 2f ff ff       	call   32d0 <_ZdlPvm@plt>
      }
   103cb:	c9                   	leave
   103cc:	c3                   	ret
   103cd:	90                   	nop

00000000000103ce <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   103ce:	55                   	push   %rbp
   103cf:	48 89 e5             	mov    %rsp,%rbp
   103d2:	48 83 ec 10          	sub    $0x10,%rsp
   103d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   103da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103de:	48 89 c7             	mov    %rax,%rdi
   103e1:	e8 5a 05 00 00       	call   10940 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
   103e6:	c9                   	leave
   103e7:	c3                   	ret

00000000000103e8 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   103e8:	55                   	push   %rbp
   103e9:	48 89 e5             	mov    %rsp,%rbp
   103ec:	48 83 ec 10          	sub    $0x10,%rsp
   103f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   103f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   103fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10400:	ba 00 00 00 00       	mov    $0x0,%edx
   10405:	48 89 ce             	mov    %rcx,%rsi
   10408:	48 89 c7             	mov    %rax,%rdi
   1040b:	e8 44 05 00 00       	call   10954 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
   10410:	c9                   	leave
   10411:	c3                   	ret

0000000000010412 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   10412:	55                   	push   %rbp
   10413:	48 89 e5             	mov    %rsp,%rbp
   10416:	48 83 ec 20          	sub    $0x20,%rsp
   1041a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1041e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10422:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   10426:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1042a:	48 89 d0             	mov    %rdx,%rax
   1042d:	48 01 c0             	add    %rax,%rax
   10430:	48 01 d0             	add    %rdx,%rax
   10433:	48 c1 e0 03          	shl    $0x3,%rax
   10437:	48 89 c2             	mov    %rax,%rdx
   1043a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1043e:	48 89 d6             	mov    %rdx,%rsi
   10441:	48 89 c7             	mov    %rax,%rdi
   10444:	e8 87 2e ff ff       	call   32d0 <_ZdlPvm@plt>
      }
   10449:	c9                   	leave
   1044a:	c3                   	ret

000000000001044b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1044b:	55                   	push   %rbp
   1044c:	48 89 e5             	mov    %rsp,%rbp
   1044f:	48 83 ec 20          	sub    $0x20,%rsp
   10453:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10457:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1045b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10460:	74 40                	je     104a2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   10462:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10466:	48 89 c7             	mov    %rax,%rdi
   10469:	e8 50 05 00 00       	call   109be <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
   1046e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   10472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10476:	48 89 c7             	mov    %rax,%rdi
   10479:	e8 4e 05 00 00       	call   109cc <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
   1047e:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   10483:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10487:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1048b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1048f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10493:	48 89 ce             	mov    %rcx,%rsi
   10496:	48 89 c7             	mov    %rax,%rdi
   10499:	e8 77 05 00 00       	call   10a15 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
   1049e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   104a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   104a6:	c9                   	leave
   104a7:	c3                   	ret

00000000000104a8 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   104a8:	55                   	push   %rbp
   104a9:	48 89 e5             	mov    %rsp,%rbp
   104ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   104b4:	90                   	nop
   104b5:	5d                   	pop    %rbp
   104b6:	c3                   	ret
   104b7:	90                   	nop

00000000000104b8 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   104b8:	55                   	push   %rbp
   104b9:	48 89 e5             	mov    %rsp,%rbp
   104bc:	48 83 ec 20          	sub    $0x20,%rsp
   104c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   104c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   104cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   104d7:	00 
   104d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   104dc:	48 89 d6             	mov    %rdx,%rsi
   104df:	48 89 c7             	mov    %rax,%rdi
   104e2:	e8 e9 2d ff ff       	call   32d0 <_ZdlPvm@plt>
      }
   104e7:	c9                   	leave
   104e8:	c3                   	ret

00000000000104e9 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   104e9:	55                   	push   %rbp
   104ea:	48 89 e5             	mov    %rsp,%rbp
   104ed:	48 83 ec 10          	sub    $0x10,%rsp
   104f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   104f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104f9:	48 89 c7             	mov    %rax,%rdi
   104fc:	e8 59 05 00 00       	call   10a5a <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
   10501:	c9                   	leave
   10502:	c3                   	ret
   10503:	90                   	nop

0000000000010504 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   10504:	55                   	push   %rbp
   10505:	48 89 e5             	mov    %rsp,%rbp
   10508:	48 83 ec 20          	sub    $0x20,%rsp
   1050c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10510:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10514:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   10518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1051c:	48 89 c7             	mov    %rax,%rdi
   1051f:	e8 50 05 00 00       	call   10a74 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
   10524:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10528:	0f 92 c0             	setb   %al
   1052b:	0f b6 c0             	movzbl %al,%eax
   1052e:	48 85 c0             	test   %rax,%rax
   10531:	0f 95 c0             	setne  %al
   10534:	84 c0                	test   %al,%al
   10536:	74 1a                	je     10552 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   10538:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1053f:	ff ff 1f 
   10542:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10546:	73 05                	jae    1054d <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   10548:	e8 c3 2c ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1054d:	e8 3e 2b ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   10552:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10556:	48 c1 e0 03          	shl    $0x3,%rax
   1055a:	48 89 c7             	mov    %rax,%rdi
   1055d:	e8 5e 2d ff ff       	call   32c0 <_Znwm@plt>
   10562:	90                   	nop
      }
   10563:	c9                   	leave
   10564:	c3                   	ret

0000000000010565 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   10565:	55                   	push   %rbp
   10566:	48 89 e5             	mov    %rsp,%rbp
   10569:	48 83 ec 20          	sub    $0x20,%rsp
   1056d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10571:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10575:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   10579:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1057d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10585:	48 89 ce             	mov    %rcx,%rsi
   10588:	48 89 c7             	mov    %rax,%rdi
   1058b:	e8 f8 04 00 00       	call   10a88 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   10590:	c9                   	leave
   10591:	c3                   	ret

0000000000010592 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   10592:	55                   	push   %rbp
   10593:	48 89 e5             	mov    %rsp,%rbp
   10596:	48 83 ec 10          	sub    $0x10,%rsp
   1059a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1059e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105a2:	48 89 c7             	mov    %rax,%rdi
   105a5:	e8 2a 05 00 00       	call   10ad4 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
   105aa:	c9                   	leave
   105ab:	c3                   	ret

00000000000105ac <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   105ac:	55                   	push   %rbp
   105ad:	48 89 e5             	mov    %rsp,%rbp
   105b0:	48 83 ec 10          	sub    $0x10,%rsp
   105b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   105bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   105c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105c4:	ba 00 00 00 00       	mov    $0x0,%edx
   105c9:	48 89 ce             	mov    %rcx,%rsi
   105cc:	48 89 c7             	mov    %rax,%rdi
   105cf:	e8 14 05 00 00       	call   10ae8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
   105d4:	c9                   	leave
   105d5:	c3                   	ret

00000000000105d6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   105d6:	55                   	push   %rbp
   105d7:	48 89 e5             	mov    %rsp,%rbp
   105da:	48 83 ec 20          	sub    $0x20,%rsp
   105de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   105e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   105ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   105ee:	48 89 d0             	mov    %rdx,%rax
   105f1:	48 c1 e0 06          	shl    $0x6,%rax
   105f5:	48 01 d0             	add    %rdx,%rax
   105f8:	48 c1 e0 02          	shl    $0x2,%rax
   105fc:	48 89 c2             	mov    %rax,%rdx
   105ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10603:	48 89 d6             	mov    %rdx,%rsi
   10606:	48 89 c7             	mov    %rax,%rdi
   10609:	e8 c2 2c ff ff       	call   32d0 <_ZdlPvm@plt>
      }
   1060e:	c9                   	leave
   1060f:	c3                   	ret

0000000000010610 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   10610:	55                   	push   %rbp
   10611:	48 89 e5             	mov    %rsp,%rbp
   10614:	48 83 ec 20          	sub    $0x20,%rsp
   10618:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1061c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   10620:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10625:	74 43                	je     1066a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
   10627:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1062b:	48 89 c7             	mov    %rax,%rdi
   1062e:	e8 20 05 00 00       	call   10b53 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
   10633:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   10637:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1063b:	48 89 c7             	mov    %rax,%rdi
   1063e:	e8 1e 05 00 00       	call   10b61 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
   10643:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
   1064a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
   1064b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1064f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   10653:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10657:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1065b:	48 89 ce             	mov    %rcx,%rsi
   1065e:	48 89 c7             	mov    %rax,%rdi
   10661:	e8 55 05 00 00       	call   10bbb <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
   10666:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1066a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1066e:	c9                   	leave
   1066f:	c3                   	ret

0000000000010670 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   10670:	55                   	push   %rbp
   10671:	48 89 e5             	mov    %rsp,%rbp
   10674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1067c:	5d                   	pop    %rbp
   1067d:	c3                   	ret

000000000001067e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1067e:	55                   	push   %rbp
   1067f:	48 89 e5             	mov    %rsp,%rbp
   10682:	48 83 ec 10          	sub    $0x10,%rsp
   10686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1068a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   1068e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10696:	48 89 d6             	mov    %rdx,%rsi
   10699:	48 89 c7             	mov    %rax,%rdi
   1069c:	e8 7b 05 00 00       	call   10c1c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   106a1:	90                   	nop
   106a2:	c9                   	leave
   106a3:	c3                   	ret

00000000000106a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   106a4:	55                   	push   %rbp
   106a5:	48 89 e5             	mov    %rsp,%rbp
   106a8:	48 83 ec 20          	sub    $0x20,%rsp
   106ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   106b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   106b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   106bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   106c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106c4:	48 89 ce             	mov    %rcx,%rsi
   106c7:	48 89 c7             	mov    %rax,%rdi
   106ca:	e8 6d 05 00 00       	call   10c3c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   106cf:	90                   	nop
   106d0:	c9                   	leave
   106d1:	c3                   	ret

00000000000106d2 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   106d2:	55                   	push   %rbp
   106d3:	48 89 e5             	mov    %rsp,%rbp
   106d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   106da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106de:	5d                   	pop    %rbp
   106df:	c3                   	ret

00000000000106e0 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   106e0:	55                   	push   %rbp
   106e1:	48 89 e5             	mov    %rsp,%rbp
   106e4:	48 83 ec 10          	sub    $0x10,%rsp
   106e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   106f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   106f4:	48 89 c7             	mov    %rax,%rdi
   106f7:	e8 b4 ec ff ff       	call   f3b0 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   106fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10700:	48 89 02             	mov    %rax,(%rdx)
   10703:	90                   	nop
   10704:	c9                   	leave
   10705:	c3                   	ret

0000000000010706 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   10706:	55                   	push   %rbp
   10707:	48 89 e5             	mov    %rsp,%rbp
   1070a:	48 83 ec 10          	sub    $0x10,%rsp
   1070e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   10712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10716:	48 89 c7             	mov    %rax,%rdi
   10719:	e8 52 ff ff ff       	call   10670 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1071e:	be 01 00 00 00       	mov    $0x1,%esi
   10723:	48 89 c7             	mov    %rax,%rdi
   10726:	e8 4b 05 00 00       	call   10c76 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   1072b:	c9                   	leave
   1072c:	c3                   	ret
   1072d:	90                   	nop

000000000001072e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   1072e:	55                   	push   %rbp
   1072f:	48 89 e5             	mov    %rsp,%rbp
   10732:	41 56                	push   %r14
   10734:	41 55                	push   %r13
   10736:	41 54                	push   %r12
   10738:	53                   	push   %rbx
   10739:	48 83 ec 30          	sub    $0x30,%rsp
   1073d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10741:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10745:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10749:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1074d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   10751:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10755:	48 89 c6             	mov    %rax,%rsi
   10758:	bf 48 00 00 00       	mov    $0x48,%edi
   1075d:	e8 27 31 ff ff       	call   3889 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   10762:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10766:	48 89 c7             	mov    %rax,%rdi
   10769:	e8 31 84 ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1076e:	49 89 c6             	mov    %rax,%r14
   10771:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10775:	48 89 c7             	mov    %rax,%rdi
   10778:	e8 74 ec ff ff       	call   f3f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1077d:	49 89 c5             	mov    %rax,%r13
   10780:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10784:	48 89 c7             	mov    %rax,%rdi
   10787:	e8 f7 83 ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1078c:	49 89 c4             	mov    %rax,%r12
   1078f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10793:	48 89 c7             	mov    %rax,%rdi
   10796:	e8 cf eb ff ff       	call   f36a <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1079b:	48 89 c3             	mov    %rax,%rbx
   1079e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   107a2:	48 89 c7             	mov    %rax,%rdi
   107a5:	e8 c6 fe ff ff       	call   10670 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   107aa:	4d 89 f0             	mov    %r14,%r8
   107ad:	4c 89 e9             	mov    %r13,%rcx
   107b0:	4c 89 e2             	mov    %r12,%rdx
   107b3:	48 89 de             	mov    %rbx,%rsi
   107b6:	48 89 c7             	mov    %rax,%rdi
   107b9:	e8 e2 04 00 00       	call   10ca0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   107be:	eb 33                	jmp    107f3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   107c0:	48 89 c7             	mov    %rax,%rdi
   107c3:	e8 08 29 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   107c8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   107cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   107d0:	48 89 d6             	mov    %rdx,%rsi
   107d3:	48 89 c7             	mov    %rax,%rdi
   107d6:	e8 47 f6 ff ff       	call   fe22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   107db:	e8 30 2c ff ff       	call   3410 <__cxa_rethrow@plt>
	  __catch(...)
   107e0:	48 89 c3             	mov    %rax,%rbx
   107e3:	e8 98 2c ff ff       	call   3480 <__cxa_end_catch@plt>
   107e8:	48 89 d8             	mov    %rbx,%rax
   107eb:	48 89 c7             	mov    %rax,%rdi
   107ee:	e8 dd 2c ff ff       	call   34d0 <_Unwind_Resume@plt>
	}
   107f3:	48 83 c4 30          	add    $0x30,%rsp
   107f7:	5b                   	pop    %rbx
   107f8:	41 5c                	pop    %r12
   107fa:	41 5d                	pop    %r13
   107fc:	41 5e                	pop    %r14
   107fe:	5d                   	pop    %rbp
   107ff:	c3                   	ret

0000000000010800 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10800:	55                   	push   %rbp
   10801:	48 89 e5             	mov    %rsp,%rbp
   10804:	48 83 ec 20          	sub    $0x20,%rsp
   10808:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   1080c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10810:	48 8b 50 18          	mov    0x18(%rax),%rdx
   10814:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10818:	48 89 d6             	mov    %rdx,%rsi
   1081b:	48 89 c7             	mov    %rax,%rdi
   1081e:	e8 51 f1 ff ff       	call   f974 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   10823:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10827:	c9                   	leave
   10828:	c3                   	ret
   10829:	90                   	nop

000000000001082a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1082a:	55                   	push   %rbp
   1082b:	48 89 e5             	mov    %rsp,%rbp
   1082e:	48 83 ec 20          	sub    $0x20,%rsp
   10832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1083a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1083e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10842:	48 89 c7             	mov    %rax,%rdi
   10845:	e8 c2 04 00 00       	call   10d0c <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   1084a:	48 8b 10             	mov    (%rax),%rdx
   1084d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10851:	48 89 10             	mov    %rdx,(%rax)
   10854:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10858:	48 89 c7             	mov    %rax,%rdi
   1085b:	e8 8c af ff ff       	call   b7ec <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   10860:	48 8b 10             	mov    (%rax),%rdx
   10863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10867:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1086b:	90                   	nop
   1086c:	c9                   	leave
   1086d:	c3                   	ret

000000000001086e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   1086e:	55                   	push   %rbp
   1086f:	48 89 e5             	mov    %rsp,%rbp
   10872:	48 83 ec 10          	sub    $0x10,%rsp
   10876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1087a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1087e:	48 83 c0 20          	add    $0x20,%rax
   10882:	48 89 c7             	mov    %rax,%rdi
   10885:	e8 90 04 00 00       	call   10d1a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1088a:	c9                   	leave
   1088b:	c3                   	ret

000000000001088c <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      operator()(const _Pair& __x) const
   1088c:	55                   	push   %rbp
   1088d:	48 89 e5             	mov    %rsp,%rbp
   10890:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10894:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   10898:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1089c:	5d                   	pop    %rbp
   1089d:	c3                   	ret

000000000001089e <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1089e:	55                   	push   %rbp
   1089f:	48 89 e5             	mov    %rsp,%rbp
   108a2:	48 83 ec 10          	sub    $0x10,%rsp
   108a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   108aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108ae:	48 89 c7             	mov    %rax,%rdi
   108b1:	e8 7e 04 00 00       	call   10d34 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
   108b6:	c9                   	leave
   108b7:	c3                   	ret

00000000000108b8 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   108b8:	55                   	push   %rbp
   108b9:	48 89 e5             	mov    %rsp,%rbp
   108bc:	48 83 ec 10          	sub    $0x10,%rsp
   108c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   108c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   108c8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   108cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108d0:	ba 00 00 00 00       	mov    $0x0,%edx
   108d5:	48 89 ce             	mov    %rcx,%rsi
   108d8:	48 89 c7             	mov    %rax,%rdi
   108db:	e8 68 04 00 00       	call   10d48 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
   108e0:	c9                   	leave
   108e1:	c3                   	ret

00000000000108e2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   108e2:	55                   	push   %rbp
   108e3:	48 89 e5             	mov    %rsp,%rbp
   108e6:	48 83 ec 20          	sub    $0x20,%rsp
   108ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   108ee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   108f2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   108f7:	74 40                	je     10939 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   108f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108fd:	48 89 c7             	mov    %rax,%rdi
   10900:	e8 a4 04 00 00       	call   10da9 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
   10905:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   10909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1090d:	48 89 c7             	mov    %rax,%rdi
   10910:	e8 a2 04 00 00       	call   10db7 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
   10915:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1091a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1091e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   10922:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10926:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1092a:	48 89 ce             	mov    %rcx,%rsi
   1092d:	48 89 c7             	mov    %rax,%rdi
   10930:	e8 a9 04 00 00       	call   10dde <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
   10935:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   10939:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1093d:	c9                   	leave
   1093e:	c3                   	ret
   1093f:	90                   	nop

0000000000010940 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   10940:	55                   	push   %rbp
   10941:	48 89 e5             	mov    %rsp,%rbp
   10944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   10948:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
   1094f:	55 55 05 
      }
   10952:	5d                   	pop    %rbp
   10953:	c3                   	ret

0000000000010954 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   10954:	55                   	push   %rbp
   10955:	48 89 e5             	mov    %rsp,%rbp
   10958:	48 83 ec 20          	sub    $0x20,%rsp
   1095c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10960:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10964:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   10968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1096c:	48 89 c7             	mov    %rax,%rdi
   1096f:	e8 cc ff ff ff       	call   10940 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
   10974:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10978:	0f 92 c0             	setb   %al
   1097b:	0f b6 c0             	movzbl %al,%eax
   1097e:	48 85 c0             	test   %rax,%rax
   10981:	0f 95 c0             	setne  %al
   10984:	84 c0                	test   %al,%al
   10986:	74 1a                	je     109a2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   10988:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
   1098f:	aa aa 0a 
   10992:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10996:	73 05                	jae    1099d <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   10998:	e8 73 28 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1099d:	e8 ee 26 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   109a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   109a6:	48 89 d0             	mov    %rdx,%rax
   109a9:	48 01 c0             	add    %rax,%rax
   109ac:	48 01 d0             	add    %rdx,%rax
   109af:	48 c1 e0 03          	shl    $0x3,%rax
   109b3:	48 89 c7             	mov    %rax,%rdi
   109b6:	e8 05 29 ff ff       	call   32c0 <_Znwm@plt>
   109bb:	90                   	nop
      }
   109bc:	c9                   	leave
   109bd:	c3                   	ret

00000000000109be <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   109be:	55                   	push   %rbp
   109bf:	48 89 e5             	mov    %rsp,%rbp
   109c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   109c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109ca:	5d                   	pop    %rbp
   109cb:	c3                   	ret

00000000000109cc <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   109cc:	55                   	push   %rbp
   109cd:	48 89 e5             	mov    %rsp,%rbp
   109d0:	48 83 ec 10          	sub    $0x10,%rsp
   109d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   109d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109dc:	48 89 c6             	mov    %rax,%rsi
   109df:	bf 18 00 00 00       	mov    $0x18,%edi
   109e4:	e8 a0 2e ff ff       	call   3889 <_ZnwmPv>
   109e9:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   109ef:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   109f6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   109fd:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   10a04:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   10a0b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
   10a12:	90                   	nop
   10a13:	c9                   	leave
   10a14:	c3                   	ret

0000000000010a15 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   10a15:	55                   	push   %rbp
   10a16:	48 89 e5             	mov    %rsp,%rbp
   10a19:	48 83 ec 20          	sub    $0x20,%rsp
   10a1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10a25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
   10a29:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10a2d:	48 89 c7             	mov    %rax,%rdi
   10a30:	e8 ed 03 00 00       	call   10e22 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   10a35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a39:	48 89 c7             	mov    %rax,%rdi
   10a3c:	e8 56 cf ff ff       	call   d997 <_ZSt17__size_to_integerm>
   10a41:	48 89 c1             	mov    %rax,%rcx
   10a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10a4c:	48 89 ce             	mov    %rcx,%rsi
   10a4f:	48 89 c7             	mov    %rax,%rdi
   10a52:	e8 d6 03 00 00       	call   10e2d <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   10a57:	c9                   	leave
   10a58:	c3                   	ret
   10a59:	90                   	nop

0000000000010a5a <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   10a5a:	55                   	push   %rbp
   10a5b:	48 89 e5             	mov    %rsp,%rbp
   10a5e:	48 83 ec 10          	sub    $0x10,%rsp
   10a62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   10a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a6a:	48 89 c7             	mov    %rax,%rdi
   10a6d:	e8 02 00 00 00       	call   10a74 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
   10a72:	c9                   	leave
   10a73:	c3                   	ret

0000000000010a74 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   10a74:	55                   	push   %rbp
   10a75:	48 89 e5             	mov    %rsp,%rbp
   10a78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   10a7c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   10a83:	ff ff 0f 
      }
   10a86:	5d                   	pop    %rbp
   10a87:	c3                   	ret

0000000000010a88 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   10a88:	55                   	push   %rbp
   10a89:	48 89 e5             	mov    %rsp,%rbp
   10a8c:	53                   	push   %rbx
   10a8d:	48 83 ec 28          	sub    $0x28,%rsp
   10a91:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a95:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10a99:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   10a9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10aa1:	48 89 c7             	mov    %rax,%rdi
   10aa4:	e8 f1 03 00 00       	call   10e9a <_ZSt12__miter_baseIPKPKcET_S4_>
   10aa9:	48 89 c3             	mov    %rax,%rbx
   10aac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ab0:	48 89 c7             	mov    %rax,%rdi
   10ab3:	e8 e2 03 00 00       	call   10e9a <_ZSt12__miter_baseIPKPKcET_S4_>
   10ab8:	48 89 c1             	mov    %rax,%rcx
   10abb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10abf:	48 89 c2             	mov    %rax,%rdx
   10ac2:	48 89 de             	mov    %rbx,%rsi
   10ac5:	48 89 cf             	mov    %rcx,%rdi
   10ac8:	e8 db 03 00 00       	call   10ea8 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   10acd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10ad1:	c9                   	leave
   10ad2:	c3                   	ret
   10ad3:	90                   	nop

0000000000010ad4 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   10ad4:	55                   	push   %rbp
   10ad5:	48 89 e5             	mov    %rsp,%rbp
   10ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   10adc:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   10ae3:	07 7e 00 
      }
   10ae6:	5d                   	pop    %rbp
   10ae7:	c3                   	ret

0000000000010ae8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   10ae8:	55                   	push   %rbp
   10ae9:	48 89 e5             	mov    %rsp,%rbp
   10aec:	48 83 ec 20          	sub    $0x20,%rsp
   10af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10af4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10af8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   10afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b00:	48 89 c7             	mov    %rax,%rdi
   10b03:	e8 cc ff ff ff       	call   10ad4 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
   10b08:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10b0c:	0f 92 c0             	setb   %al
   10b0f:	0f b6 c0             	movzbl %al,%eax
   10b12:	48 85 c0             	test   %rax,%rax
   10b15:	0f 95 c0             	setne  %al
   10b18:	84 c0                	test   %al,%al
   10b1a:	74 1a                	je     10b36 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   10b1c:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
   10b23:	0f fc 00 
   10b26:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10b2a:	73 05                	jae    10b31 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   10b2c:	e8 df 26 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   10b31:	e8 5a 25 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   10b36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10b3a:	48 89 d0             	mov    %rdx,%rax
   10b3d:	48 c1 e0 06          	shl    $0x6,%rax
   10b41:	48 01 d0             	add    %rdx,%rax
   10b44:	48 c1 e0 02          	shl    $0x2,%rax
   10b48:	48 89 c7             	mov    %rax,%rdi
   10b4b:	e8 70 27 ff ff       	call   32c0 <_Znwm@plt>
   10b50:	90                   	nop
      }
   10b51:	c9                   	leave
   10b52:	c3                   	ret

0000000000010b53 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   10b53:	55                   	push   %rbp
   10b54:	48 89 e5             	mov    %rsp,%rbp
   10b57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   10b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b5f:	5d                   	pop    %rbp
   10b60:	c3                   	ret

0000000000010b61 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   10b61:	55                   	push   %rbp
   10b62:	48 89 e5             	mov    %rsp,%rbp
   10b65:	48 83 ec 10          	sub    $0x10,%rsp
   10b69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   10b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b71:	48 89 c6             	mov    %rax,%rsi
   10b74:	bf 04 01 00 00       	mov    $0x104,%edi
   10b79:	e8 0b 2d ff ff       	call   3889 <_ZnwmPv>
   10b7e:	b9 04 01 00 00       	mov    $0x104,%ecx
   10b83:	be 00 00 00 00       	mov    $0x0,%esi
   10b88:	48 89 30             	mov    %rsi,(%rax)
   10b8b:	89 ca                	mov    %ecx,%edx
   10b8d:	48 01 c2             	add    %rax,%rdx
   10b90:	48 83 c2 08          	add    $0x8,%rdx
   10b94:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   10b98:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10b9c:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   10ba0:	48 29 d0             	sub    %rdx,%rax
   10ba3:	01 c1                	add    %eax,%ecx
   10ba5:	83 e1 f8             	and    $0xfffffff8,%ecx
   10ba8:	89 c8                	mov    %ecx,%eax
   10baa:	c1 e8 03             	shr    $0x3,%eax
   10bad:	89 c1                	mov    %eax,%ecx
   10baf:	48 89 d7             	mov    %rdx,%rdi
   10bb2:	48 89 f0             	mov    %rsi,%rax
   10bb5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
   10bb8:	90                   	nop
   10bb9:	c9                   	leave
   10bba:	c3                   	ret

0000000000010bbb <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   10bbb:	55                   	push   %rbp
   10bbc:	48 89 e5             	mov    %rsp,%rbp
   10bbf:	48 83 ec 20          	sub    $0x20,%rsp
   10bc3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10bc7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10bcb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   10bcf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10bd3:	48 89 c7             	mov    %rax,%rdi
   10bd6:	e8 37 03 00 00       	call   10f12 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   10bdb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10bdf:	48 89 c7             	mov    %rax,%rdi
   10be2:	e8 b0 cd ff ff       	call   d997 <_ZSt17__size_to_integerm>
   10be7:	48 89 c1             	mov    %rax,%rcx
   10bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10bf2:	48 89 ce             	mov    %rcx,%rsi
   10bf5:	48 89 c7             	mov    %rax,%rdi
   10bf8:	e8 20 03 00 00       	call   10f1d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   10bfd:	c9                   	leave
   10bfe:	c3                   	ret
   10bff:	90                   	nop

0000000000010c00 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   10c00:	55                   	push   %rbp
   10c01:	48 89 e5             	mov    %rsp,%rbp
   10c04:	48 83 ec 10          	sub    $0x10,%rsp
   10c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c10:	48 89 c7             	mov    %rax,%rdi
   10c13:	e8 48 25 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10c18:	90                   	nop
   10c19:	c9                   	leave
   10c1a:	c3                   	ret
   10c1b:	90                   	nop

0000000000010c1c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   10c1c:	55                   	push   %rbp
   10c1d:	48 89 e5             	mov    %rsp,%rbp
   10c20:	48 83 ec 10          	sub    $0x10,%rsp
   10c24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   10c2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c30:	48 89 c7             	mov    %rax,%rdi
   10c33:	e8 c8 ff ff ff       	call   10c00 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   10c38:	90                   	nop
   10c39:	c9                   	leave
   10c3a:	c3                   	ret
   10c3b:	90                   	nop

0000000000010c3c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   10c3c:	55                   	push   %rbp
   10c3d:	48 89 e5             	mov    %rsp,%rbp
   10c40:	48 83 ec 20          	sub    $0x20,%rsp
   10c44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10c4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   10c50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10c54:	48 89 d0             	mov    %rdx,%rax
   10c57:	48 c1 e0 03          	shl    $0x3,%rax
   10c5b:	48 01 d0             	add    %rdx,%rax
   10c5e:	48 c1 e0 03          	shl    $0x3,%rax
   10c62:	48 89 c2             	mov    %rax,%rdx
   10c65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c69:	48 89 d6             	mov    %rdx,%rsi
   10c6c:	48 89 c7             	mov    %rax,%rdi
   10c6f:	e8 5c 26 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
   10c74:	c9                   	leave
   10c75:	c3                   	ret

0000000000010c76 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   10c76:	55                   	push   %rbp
   10c77:	48 89 e5             	mov    %rsp,%rbp
   10c7a:	48 83 ec 10          	sub    $0x10,%rsp
   10c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   10c86:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c8e:	ba 00 00 00 00       	mov    $0x0,%edx
   10c93:	48 89 ce             	mov    %rcx,%rsi
   10c96:	48 89 c7             	mov    %rax,%rdi
   10c99:	e8 ee 02 00 00       	call   10f8c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   10c9e:	c9                   	leave
   10c9f:	c3                   	ret

0000000000010ca0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   10ca0:	55                   	push   %rbp
   10ca1:	48 89 e5             	mov    %rsp,%rbp
   10ca4:	41 54                	push   %r12
   10ca6:	53                   	push   %rbx
   10ca7:	48 83 ec 30          	sub    $0x30,%rsp
   10cab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10caf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10cb3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10cb7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   10cbb:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   10cbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10cc3:	48 89 c7             	mov    %rax,%rdi
   10cc6:	e8 d4 7e ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   10ccb:	49 89 c4             	mov    %rax,%r12
   10cce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10cd2:	48 89 c7             	mov    %rax,%rdi
   10cd5:	e8 17 e7 ff ff       	call   f3f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   10cda:	48 89 c3             	mov    %rax,%rbx
   10cdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ce1:	48 89 c7             	mov    %rax,%rdi
   10ce4:	e8 9a 7e ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   10ce9:	48 89 c2             	mov    %rax,%rdx
   10cec:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   10cf0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cf4:	4d 89 e0             	mov    %r12,%r8
   10cf7:	48 89 d9             	mov    %rbx,%rcx
   10cfa:	48 89 c7             	mov    %rax,%rdi
   10cfd:	e8 1c 03 00 00       	call   1101e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   10d02:	90                   	nop
   10d03:	48 83 c4 30          	add    $0x30,%rsp
   10d07:	5b                   	pop    %rbx
   10d08:	41 5c                	pop    %r12
   10d0a:	5d                   	pop    %rbp
   10d0b:	c3                   	ret

0000000000010d0c <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10d0c:	55                   	push   %rbp
   10d0d:	48 89 e5             	mov    %rsp,%rbp
   10d10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d18:	5d                   	pop    %rbp
   10d19:	c3                   	ret

0000000000010d1a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      _M_ptr() const noexcept
   10d1a:	55                   	push   %rbp
   10d1b:	48 89 e5             	mov    %rsp,%rbp
   10d1e:	48 83 ec 10          	sub    $0x10,%rsp
   10d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   10d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d2a:	48 89 c7             	mov    %rax,%rdi
   10d2d:	e8 9c 03 00 00       	call   110ce <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   10d32:	c9                   	leave
   10d33:	c3                   	ret

0000000000010d34 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   10d34:	55                   	push   %rbp
   10d35:	48 89 e5             	mov    %rsp,%rbp
   10d38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   10d3c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   10d43:	ff ff 0f 
      }
   10d46:	5d                   	pop    %rbp
   10d47:	c3                   	ret

0000000000010d48 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   10d48:	55                   	push   %rbp
   10d49:	48 89 e5             	mov    %rsp,%rbp
   10d4c:	48 83 ec 20          	sub    $0x20,%rsp
   10d50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10d58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   10d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d60:	48 89 c7             	mov    %rax,%rdi
   10d63:	e8 cc ff ff ff       	call   10d34 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
   10d68:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10d6c:	0f 92 c0             	setb   %al
   10d6f:	0f b6 c0             	movzbl %al,%eax
   10d72:	48 85 c0             	test   %rax,%rax
   10d75:	0f 95 c0             	setne  %al
   10d78:	84 c0                	test   %al,%al
   10d7a:	74 1a                	je     10d96 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   10d7c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   10d83:	ff ff 1f 
   10d86:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10d8a:	73 05                	jae    10d91 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   10d8c:	e8 7f 24 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   10d91:	e8 fa 22 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   10d96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10d9a:	48 c1 e0 03          	shl    $0x3,%rax
   10d9e:	48 89 c7             	mov    %rax,%rdi
   10da1:	e8 1a 25 ff ff       	call   32c0 <_Znwm@plt>
   10da6:	90                   	nop
      }
   10da7:	c9                   	leave
   10da8:	c3                   	ret

0000000000010da9 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   10da9:	55                   	push   %rbp
   10daa:	48 89 e5             	mov    %rsp,%rbp
   10dad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   10db1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10db5:	5d                   	pop    %rbp
   10db6:	c3                   	ret

0000000000010db7 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   10db7:	55                   	push   %rbp
   10db8:	48 89 e5             	mov    %rsp,%rbp
   10dbb:	48 83 ec 10          	sub    $0x10,%rsp
   10dbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   10dc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dc7:	48 89 c6             	mov    %rax,%rsi
   10dca:	bf 08 00 00 00       	mov    $0x8,%edi
   10dcf:	e8 b5 2a ff ff       	call   3889 <_ZnwmPv>
   10dd4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   10ddb:	90                   	nop
   10ddc:	c9                   	leave
   10ddd:	c3                   	ret

0000000000010dde <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   10dde:	55                   	push   %rbp
   10ddf:	48 89 e5             	mov    %rsp,%rbp
   10de2:	48 83 ec 20          	sub    $0x20,%rsp
   10de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10dea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10dee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   10df2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10df6:	48 89 c7             	mov    %rax,%rdi
   10df9:	e8 de 02 00 00       	call   110dc <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   10dfe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10e02:	48 89 c7             	mov    %rax,%rdi
   10e05:	e8 8d cb ff ff       	call   d997 <_ZSt17__size_to_integerm>
   10e0a:	48 89 c1             	mov    %rax,%rcx
   10e0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10e15:	48 89 ce             	mov    %rcx,%rsi
   10e18:	48 89 c7             	mov    %rax,%rdi
   10e1b:	e8 c7 02 00 00       	call   110e7 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   10e20:	c9                   	leave
   10e21:	c3                   	ret

0000000000010e22 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   10e22:	55                   	push   %rbp
   10e23:	48 89 e5             	mov    %rsp,%rbp
   10e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   10e2a:	90                   	nop
   10e2b:	5d                   	pop    %rbp
   10e2c:	c3                   	ret

0000000000010e2d <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   10e2d:	55                   	push   %rbp
   10e2e:	48 89 e5             	mov    %rsp,%rbp
   10e31:	48 83 ec 20          	sub    $0x20,%rsp
   10e35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e39:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10e3d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10e41:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10e46:	75 06                	jne    10e4e <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e4c:	eb 4a                	jmp    10e98 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
   10e4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10e52:	48 89 d0             	mov    %rdx,%rax
   10e55:	48 01 c0             	add    %rax,%rax
   10e58:	48 01 d0             	add    %rdx,%rax
   10e5b:	48 c1 e0 03          	shl    $0x3,%rax
   10e5f:	48 89 c2             	mov    %rax,%rdx
   10e62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e66:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10e6a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10e6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e72:	48 89 ce             	mov    %rcx,%rsi
   10e75:	48 89 c7             	mov    %rax,%rdi
   10e78:	e8 c7 02 00 00       	call   11144 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   10e7d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10e81:	48 89 d0             	mov    %rdx,%rax
   10e84:	48 01 c0             	add    %rax,%rax
   10e87:	48 01 d0             	add    %rdx,%rax
   10e8a:	48 c1 e0 03          	shl    $0x3,%rax
   10e8e:	48 89 c2             	mov    %rax,%rdx
   10e91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e95:	48 01 d0             	add    %rdx,%rax
    }
   10e98:	c9                   	leave
   10e99:	c3                   	ret

0000000000010e9a <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
   10e9a:	55                   	push   %rbp
   10e9b:	48 89 e5             	mov    %rsp,%rbp
   10e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   10ea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ea6:	5d                   	pop    %rbp
   10ea7:	c3                   	ret

0000000000010ea8 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   10ea8:	55                   	push   %rbp
   10ea9:	48 89 e5             	mov    %rsp,%rbp
   10eac:	41 54                	push   %r12
   10eae:	53                   	push   %rbx
   10eaf:	48 83 ec 20          	sub    $0x20,%rsp
   10eb3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10eb7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10ebb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   10ebf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ec3:	48 89 c7             	mov    %rax,%rdi
   10ec6:	e8 b5 02 00 00       	call   11180 <_ZSt12__niter_baseIPPKcET_S3_>
   10ecb:	49 89 c4             	mov    %rax,%r12
   10ece:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ed2:	48 89 c7             	mov    %rax,%rdi
   10ed5:	e8 98 02 00 00       	call   11172 <_ZSt12__niter_baseIPKPKcET_S4_>
   10eda:	48 89 c3             	mov    %rax,%rbx
   10edd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ee1:	48 89 c7             	mov    %rax,%rdi
   10ee4:	e8 89 02 00 00       	call   11172 <_ZSt12__niter_baseIPKPKcET_S4_>
   10ee9:	4c 89 e2             	mov    %r12,%rdx
   10eec:	48 89 de             	mov    %rbx,%rsi
   10eef:	48 89 c7             	mov    %rax,%rdi
   10ef2:	e8 97 02 00 00       	call   1118e <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   10ef7:	48 89 c2             	mov    %rax,%rdx
   10efa:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10efe:	48 89 d6             	mov    %rdx,%rsi
   10f01:	48 89 c7             	mov    %rax,%rdi
   10f04:	e8 b2 02 00 00       	call   111bb <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   10f09:	48 83 c4 20          	add    $0x20,%rsp
   10f0d:	5b                   	pop    %rbx
   10f0e:	41 5c                	pop    %r12
   10f10:	5d                   	pop    %rbp
   10f11:	c3                   	ret

0000000000010f12 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   10f12:	55                   	push   %rbp
   10f13:	48 89 e5             	mov    %rsp,%rbp
   10f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   10f1a:	90                   	nop
   10f1b:	5d                   	pop    %rbp
   10f1c:	c3                   	ret

0000000000010f1d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   10f1d:	55                   	push   %rbp
   10f1e:	48 89 e5             	mov    %rsp,%rbp
   10f21:	48 83 ec 20          	sub    $0x20,%rsp
   10f25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f29:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10f2d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10f31:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10f36:	75 06                	jne    10f3e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f3c:	eb 4c                	jmp    10f8a <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
   10f3e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10f42:	48 89 d0             	mov    %rdx,%rax
   10f45:	48 c1 e0 06          	shl    $0x6,%rax
   10f49:	48 01 d0             	add    %rdx,%rax
   10f4c:	48 c1 e0 02          	shl    $0x2,%rax
   10f50:	48 89 c2             	mov    %rax,%rdx
   10f53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f57:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10f5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10f5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f63:	48 89 ce             	mov    %rcx,%rsi
   10f66:	48 89 c7             	mov    %rax,%rdi
   10f69:	e8 5f 02 00 00       	call   111cd <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   10f6e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10f72:	48 89 d0             	mov    %rdx,%rax
   10f75:	48 c1 e0 06          	shl    $0x6,%rax
   10f79:	48 01 d0             	add    %rdx,%rax
   10f7c:	48 c1 e0 02          	shl    $0x2,%rax
   10f80:	48 89 c2             	mov    %rax,%rdx
   10f83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f87:	48 01 d0             	add    %rdx,%rax
    }
   10f8a:	c9                   	leave
   10f8b:	c3                   	ret

0000000000010f8c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   10f8c:	55                   	push   %rbp
   10f8d:	48 89 e5             	mov    %rsp,%rbp
   10f90:	48 83 ec 20          	sub    $0x20,%rsp
   10f94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10f9c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   10fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fa4:	48 89 c7             	mov    %rax,%rdi
   10fa7:	e8 50 02 00 00       	call   111fc <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   10fac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10fb0:	0f 92 c0             	setb   %al
   10fb3:	0f b6 c0             	movzbl %al,%eax
   10fb6:	48 85 c0             	test   %rax,%rax
   10fb9:	0f 95 c0             	setne  %al
   10fbc:	84 c0                	test   %al,%al
   10fbe:	74 1a                	je     10fda <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   10fc0:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   10fc7:	38 8e 03 
   10fca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10fce:	73 05                	jae    10fd5 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   10fd0:	e8 3b 22 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   10fd5:	e8 b6 20 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   10fda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10fde:	48 89 d0             	mov    %rdx,%rax
   10fe1:	48 c1 e0 03          	shl    $0x3,%rax
   10fe5:	48 01 d0             	add    %rdx,%rax
   10fe8:	48 c1 e0 03          	shl    $0x3,%rax
   10fec:	48 89 c7             	mov    %rax,%rdi
   10fef:	e8 cc 22 ff ff       	call   32c0 <_Znwm@plt>
   10ff4:	90                   	nop
      }
   10ff5:	c9                   	leave
   10ff6:	c3                   	ret
   10ff7:	90                   	nop

0000000000010ff8 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   10ff8:	55                   	push   %rbp
   10ff9:	48 89 e5             	mov    %rsp,%rbp
   10ffc:	48 83 ec 10          	sub    $0x10,%rsp
   11000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11004:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1100c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11010:	48 89 d6             	mov    %rdx,%rsi
   11013:	48 89 c7             	mov    %rax,%rdi
   11016:	e8 f5 01 00 00       	call   11210 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1101b:	90                   	nop
   1101c:	c9                   	leave
   1101d:	c3                   	ret

000000000001101e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1101e:	55                   	push   %rbp
   1101f:	48 89 e5             	mov    %rsp,%rbp
   11022:	41 56                	push   %r14
   11024:	41 55                	push   %r13
   11026:	41 54                	push   %r12
   11028:	53                   	push   %rbx
   11029:	48 83 ec 40          	sub    $0x40,%rsp
   1102d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11031:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   11035:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   11039:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1103d:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   11041:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   11045:	48 89 de             	mov    %rbx,%rsi
   11048:	bf 28 00 00 00       	mov    $0x28,%edi
   1104d:	e8 37 28 ff ff       	call   3889 <_ZnwmPv>
   11052:	49 89 c4             	mov    %rax,%r12
   11055:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1105b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1105f:	48 89 c7             	mov    %rax,%rdi
   11062:	e8 38 7b ff ff       	call   8b9f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   11067:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1106b:	48 89 c7             	mov    %rax,%rdi
   1106e:	e8 7e e3 ff ff       	call   f3f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   11073:	48 89 c2             	mov    %rax,%rdx
   11076:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1107a:	48 89 d6             	mov    %rdx,%rsi
   1107d:	48 89 c7             	mov    %rax,%rdi
   11080:	e8 73 ff ff ff       	call   10ff8 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   11085:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11089:	48 89 c7             	mov    %rax,%rdi
   1108c:	e8 f2 7a ff ff       	call   8b83 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   11091:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   11095:	48 89 c6             	mov    %rax,%rsi
   11098:	4c 89 e7             	mov    %r12,%rdi
   1109b:	e8 8e 01 00 00       	call   1122e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   110a0:	eb 1e                	jmp    110c0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   110a2:	49 89 c5             	mov    %rax,%r13
   110a5:	45 84 f6             	test   %r14b,%r14b
   110a8:	74 0b                	je     110b5 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   110aa:	48 89 de             	mov    %rbx,%rsi
   110ad:	4c 89 e7             	mov    %r12,%rdi
   110b0:	e8 e6 27 ff ff       	call   389b <_ZdlPvS_>
   110b5:	4c 89 e8             	mov    %r13,%rax
   110b8:	48 89 c7             	mov    %rax,%rdi
   110bb:	e8 10 24 ff ff       	call   34d0 <_Unwind_Resume@plt>
   110c0:	48 83 c4 40          	add    $0x40,%rsp
   110c4:	5b                   	pop    %rbx
   110c5:	41 5c                	pop    %r12
   110c7:	41 5d                	pop    %r13
   110c9:	41 5e                	pop    %r14
   110cb:	5d                   	pop    %rbp
   110cc:	c3                   	ret
   110cd:	90                   	nop

00000000000110ce <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   110ce:	55                   	push   %rbp
   110cf:	48 89 e5             	mov    %rsp,%rbp
   110d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   110d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110da:	5d                   	pop    %rbp
   110db:	c3                   	ret

00000000000110dc <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   110dc:	55                   	push   %rbp
   110dd:	48 89 e5             	mov    %rsp,%rbp
   110e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   110e4:	90                   	nop
   110e5:	5d                   	pop    %rbp
   110e6:	c3                   	ret

00000000000110e7 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   110e7:	55                   	push   %rbp
   110e8:	48 89 e5             	mov    %rsp,%rbp
   110eb:	48 83 ec 20          	sub    $0x20,%rsp
   110ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   110f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   110f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   110fb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11100:	75 06                	jne    11108 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   11102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11106:	eb 3a                	jmp    11142 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   11108:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1110c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11113:	00 
   11114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11118:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1111c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11124:	48 89 ce             	mov    %rcx,%rsi
   11127:	48 89 c7             	mov    %rax,%rdi
   1112a:	e8 29 01 00 00       	call   11258 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1112f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11133:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1113a:	00 
   1113b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1113f:	48 01 d0             	add    %rdx,%rax
    }
   11142:	c9                   	leave
   11143:	c3                   	ret

0000000000011144 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   11144:	55                   	push   %rbp
   11145:	48 89 e5             	mov    %rsp,%rbp
   11148:	48 83 ec 20          	sub    $0x20,%rsp
   1114c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11150:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11154:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   11158:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1115c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11164:	48 89 ce             	mov    %rcx,%rsi
   11167:	48 89 c7             	mov    %rax,%rdi
   1116a:	e8 17 01 00 00       	call   11286 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   1116f:	90                   	nop
   11170:	c9                   	leave
   11171:	c3                   	ret

0000000000011172 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   11172:	55                   	push   %rbp
   11173:	48 89 e5             	mov    %rsp,%rbp
   11176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1117a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1117e:	5d                   	pop    %rbp
   1117f:	c3                   	ret

0000000000011180 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   11180:	55                   	push   %rbp
   11181:	48 89 e5             	mov    %rsp,%rbp
   11184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   11188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1118c:	5d                   	pop    %rbp
   1118d:	c3                   	ret

000000000001118e <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1118e:	55                   	push   %rbp
   1118f:	48 89 e5             	mov    %rsp,%rbp
   11192:	48 83 ec 20          	sub    $0x20,%rsp
   11196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1119a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1119e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   111a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   111a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   111aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111ae:	48 89 ce             	mov    %rcx,%rsi
   111b1:	48 89 c7             	mov    %rax,%rdi
   111b4:	e8 10 01 00 00       	call   112c9 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   111b9:	c9                   	leave
   111ba:	c3                   	ret

00000000000111bb <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   111bb:	55                   	push   %rbp
   111bc:	48 89 e5             	mov    %rsp,%rbp
   111bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   111c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   111cb:	5d                   	pop    %rbp
   111cc:	c3                   	ret

00000000000111cd <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   111cd:	55                   	push   %rbp
   111ce:	48 89 e5             	mov    %rsp,%rbp
   111d1:	48 83 ec 20          	sub    $0x20,%rsp
   111d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   111dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   111e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   111e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   111e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111ed:	48 89 ce             	mov    %rcx,%rsi
   111f0:	48 89 c7             	mov    %rax,%rdi
   111f3:	e8 fe 00 00 00       	call   112f6 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   111f8:	90                   	nop
   111f9:	c9                   	leave
   111fa:	c3                   	ret
   111fb:	90                   	nop

00000000000111fc <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   111fc:	55                   	push   %rbp
   111fd:	48 89 e5             	mov    %rsp,%rbp
   11200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   11204:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1120b:	1c c7 01 
      }
   1120e:	5d                   	pop    %rbp
   1120f:	c3                   	ret

0000000000011210 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   11210:	55                   	push   %rbp
   11211:	48 89 e5             	mov    %rsp,%rbp
   11214:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11218:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1121c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11220:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11224:	48 8b 12             	mov    (%rdx),%rdx
   11227:	48 89 10             	mov    %rdx,(%rax)
      { }
   1122a:	90                   	nop
   1122b:	5d                   	pop    %rbp
   1122c:	c3                   	ret
   1122d:	90                   	nop

000000000001122e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
      pair<_T1, _T2>::
   1122e:	55                   	push   %rbp
   1122f:	48 89 e5             	mov    %rsp,%rbp
   11232:	48 83 ec 20          	sub    $0x20,%rsp
   11236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1123a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   1123e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   11242:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1124a:	48 89 ce             	mov    %rcx,%rsi
   1124d:	48 89 c7             	mov    %rax,%rdi
   11250:	e8 19 01 00 00       	call   1136e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   11255:	90                   	nop
   11256:	c9                   	leave
   11257:	c3                   	ret

0000000000011258 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   11258:	55                   	push   %rbp
   11259:	48 89 e5             	mov    %rsp,%rbp
   1125c:	48 83 ec 20          	sub    $0x20,%rsp
   11260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11264:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11268:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1126c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11270:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11278:	48 89 ce             	mov    %rcx,%rsi
   1127b:	48 89 c7             	mov    %rax,%rdi
   1127e:	e8 35 01 00 00       	call   113b8 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   11283:	90                   	nop
   11284:	c9                   	leave
   11285:	c3                   	ret

0000000000011286 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   11286:	55                   	push   %rbp
   11287:	48 89 e5             	mov    %rsp,%rbp
   1128a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1128e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11292:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   11296:	eb 23                	jmp    112bb <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
   11298:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1129c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   112a0:	48 8b 06             	mov    (%rsi),%rax
   112a3:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   112a7:	48 89 01             	mov    %rax,(%rcx)
   112aa:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   112ae:	48 8b 46 10          	mov    0x10(%rsi),%rax
   112b2:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
   112b6:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
   112bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112bf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   112c3:	75 d3                	jne    11298 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   112c5:	90                   	nop
   112c6:	90                   	nop
   112c7:	5d                   	pop    %rbp
   112c8:	c3                   	ret

00000000000112c9 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   112c9:	55                   	push   %rbp
   112ca:	48 89 e5             	mov    %rsp,%rbp
   112cd:	48 83 ec 20          	sub    $0x20,%rsp
   112d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   112d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   112d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   112dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   112e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   112e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112e9:	48 89 ce             	mov    %rcx,%rsi
   112ec:	48 89 c7             	mov    %rax,%rdi
   112ef:	e8 ff 00 00 00       	call   113f3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   112f4:	c9                   	leave
   112f5:	c3                   	ret

00000000000112f6 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   112f6:	55                   	push   %rbp
   112f7:	48 89 e5             	mov    %rsp,%rbp
   112fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   112fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11302:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   11306:	eb 58                	jmp    11360 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   11308:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1130c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11310:	b9 04 01 00 00       	mov    $0x104,%ecx
   11315:	48 8b 32             	mov    (%rdx),%rsi
   11318:	48 89 30             	mov    %rsi,(%rax)
   1131b:	89 ce                	mov    %ecx,%esi
   1131d:	48 01 c6             	add    %rax,%rsi
   11320:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   11324:	89 ce                	mov    %ecx,%esi
   11326:	48 01 d6             	add    %rdx,%rsi
   11329:	48 83 c6 08          	add    $0x8,%rsi
   1132d:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   11331:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   11335:	48 8d 78 08          	lea    0x8(%rax),%rdi
   11339:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1133d:	48 29 f8             	sub    %rdi,%rax
   11340:	48 29 c2             	sub    %rax,%rdx
   11343:	01 c1                	add    %eax,%ecx
   11345:	83 e1 f8             	and    $0xfffffff8,%ecx
   11348:	89 c8                	mov    %ecx,%eax
   1134a:	c1 e8 03             	shr    $0x3,%eax
   1134d:	89 c0                	mov    %eax,%eax
   1134f:	48 89 d6             	mov    %rdx,%rsi
   11352:	48 89 c1             	mov    %rax,%rcx
   11355:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   11358:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
   1135f:	00 
   11360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11364:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11368:	75 9e                	jne    11308 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   1136a:	90                   	nop
   1136b:	90                   	nop
   1136c:	5d                   	pop    %rbp
   1136d:	c3                   	ret

000000000001136e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:
      pair<_T1, _T2>::
   1136e:	55                   	push   %rbp
   1136f:	48 89 e5             	mov    %rsp,%rbp
   11372:	53                   	push   %rbx
   11373:	48 83 ec 28          	sub    $0x28,%rsp
   11377:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1137b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1137f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   11383:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11387:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1138b:	48 89 c7             	mov    %rax,%rdi
   1138e:	e8 bf 00 00 00       	call   11452 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   11393:	48 89 c7             	mov    %rax,%rdi
   11396:	e8 d1 00 00 00       	call   1146c <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   1139b:	48 89 c6             	mov    %rax,%rsi
   1139e:	48 89 df             	mov    %rbx,%rdi
   113a1:	e8 aa 1d ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   113a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113aa:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   113b1:	90                   	nop
   113b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   113b6:	c9                   	leave
   113b7:	c3                   	ret

00000000000113b8 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   113b8:	55                   	push   %rbp
   113b9:	48 89 e5             	mov    %rsp,%rbp
   113bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   113c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   113c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   113c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113cc:	48 8b 00             	mov    (%rax),%rax
   113cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   113d3:	eb 10                	jmp    113e5 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   113d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   113dd:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   113e0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   113e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113e9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   113ed:	75 e6                	jne    113d5 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   113ef:	90                   	nop
   113f0:	90                   	nop
   113f1:	5d                   	pop    %rbp
   113f2:	c3                   	ret

00000000000113f3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   113f3:	55                   	push   %rbp
   113f4:	48 89 e5             	mov    %rsp,%rbp
   113f7:	48 83 ec 30          	sub    $0x30,%rsp
   113fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   113ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11403:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   11407:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1140b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1140f:	48 c1 f8 03          	sar    $0x3,%rax
   11413:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   11417:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1141c:	74 1f                	je     1143d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1141e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11422:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11429:	00 
   1142a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1142e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11432:	48 89 ce             	mov    %rcx,%rsi
   11435:	48 89 c7             	mov    %rax,%rdi
   11438:	e8 33 20 ff ff       	call   3470 <memmove@plt>
	  return __result + _Num;
   1143d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11441:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11448:	00 
   11449:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1144d:	48 01 d0             	add    %rdx,%rax
	}
   11450:	c9                   	leave
   11451:	c3                   	ret

0000000000011452 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   11452:	55                   	push   %rbp
   11453:	48 89 e5             	mov    %rsp,%rbp
   11456:	48 83 ec 10          	sub    $0x10,%rsp
   1145a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   1145e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11462:	48 89 c7             	mov    %rax,%rdi
   11465:	e8 10 00 00 00       	call   1147a <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   1146a:	c9                   	leave
   1146b:	c3                   	ret

000000000001146c <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1146c:	55                   	push   %rbp
   1146d:	48 89 e5             	mov    %rsp,%rbp
   11470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11478:	5d                   	pop    %rbp
   11479:	c3                   	ret

000000000001147a <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   1147a:	55                   	push   %rbp
   1147b:	48 89 e5             	mov    %rsp,%rbp
   1147e:	48 83 ec 10          	sub    $0x10,%rsp
   11482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   11486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1148a:	48 89 c7             	mov    %rax,%rdi
   1148d:	e8 02 00 00 00       	call   11494 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   11492:	c9                   	leave
   11493:	c3                   	ret

0000000000011494 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   11494:	55                   	push   %rbp
   11495:	48 89 e5             	mov    %rsp,%rbp
   11498:	48 83 ec 10          	sub    $0x10,%rsp
   1149c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114a4:	48 89 c7             	mov    %rax,%rdi
   114a7:	e8 02 00 00 00       	call   114ae <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   114ac:	c9                   	leave
   114ad:	c3                   	ret

00000000000114ae <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   114ae:	55                   	push   %rbp
   114af:	48 89 e5             	mov    %rsp,%rbp
   114b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114ba:	48 8b 00             	mov    (%rax),%rax
   114bd:	5d                   	pop    %rbp
   114be:	c3                   	ret
   114bf:	90                   	nop

00000000000114c0 <_ZN4neko7Context13createContextEv>:

namespace neko {

static std::atomic<u32> contextCount = 0;

void Context::createContext() {
   114c0:	55                   	push   %rbp
   114c1:	48 89 e5             	mov    %rsp,%rbp
   114c4:	41 54                	push   %r12
   114c6:	53                   	push   %rbx
  if (glfwInit() != GLFW_TRUE) {
   114c7:	e8 a4 1e ff ff       	call   3370 <glfwInit@plt>
   114cc:	83 f8 01             	cmp    $0x1,%eax
   114cf:	0f 95 c0             	setne  %al
   114d2:	84 c0                	test   %al,%al
   114d4:	74 3b                	je     11511 <_ZN4neko7Context13createContextEv+0x51>
    throw std::runtime_error(
        "A bug or configuration error in GLFW, the underlying operating "
        "system or its drivers, or a lack of required resources.");
   114d6:	bf 10 00 00 00       	mov    $0x10,%edi
   114db:	e8 30 1c ff ff       	call   3110 <__cxa_allocate_exception@plt>
   114e0:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
   114e3:	48 8d 05 b6 31 00 00 	lea    0x31b6(%rip),%rax        # 146a0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   114ea:	48 89 c6             	mov    %rax,%rsi
   114ed:	48 89 df             	mov    %rbx,%rdi
   114f0:	e8 bb 1b ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
        "system or its drivers, or a lack of required resources.");
   114f5:	48 8b 05 bc 1a 01 00 	mov    0x11abc(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   114fc:	48 89 c2             	mov    %rax,%rdx
   114ff:	48 8d 05 fa 17 01 00 	lea    0x117fa(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11506:	48 89 c6             	mov    %rax,%rsi
   11509:	48 89 df             	mov    %rbx,%rdi
   1150c:	e8 9f 1f ff ff       	call   34b0 <__cxa_throw@plt>
  }
  ++contextCount;
   11511:	48 8d 05 e0 1f 01 00 	lea    0x11fe0(%rip),%rax        # 234f8 <_ZN4nekoL12contextCountE>
   11518:	48 89 c7             	mov    %rax,%rdi
   1151b:	e8 98 01 00 00       	call   116b8 <_ZNSt13__atomic_baseIjEppEv>
}
   11520:	eb 16                	jmp    11538 <_ZN4neko7Context13createContextEv+0x78>
        "system or its drivers, or a lack of required resources.");
   11522:	49 89 c4             	mov    %rax,%r12
   11525:	48 89 df             	mov    %rbx,%rdi
   11528:	e8 83 1c ff ff       	call   31b0 <__cxa_free_exception@plt>
   1152d:	4c 89 e0             	mov    %r12,%rax
   11530:	48 89 c7             	mov    %rax,%rdi
   11533:	e8 98 1f ff ff       	call   34d0 <_Unwind_Resume@plt>
}
   11538:	5b                   	pop    %rbx
   11539:	41 5c                	pop    %r12
   1153b:	5d                   	pop    %rbp
   1153c:	c3                   	ret
   1153d:	90                   	nop

000000000001153e <_ZN4neko7Context17moveCreateContextEv>:

void Context::moveCreateContext() { ++contextCount; }
   1153e:	55                   	push   %rbp
   1153f:	48 89 e5             	mov    %rsp,%rbp
   11542:	48 8d 05 af 1f 01 00 	lea    0x11faf(%rip),%rax        # 234f8 <_ZN4nekoL12contextCountE>
   11549:	48 89 c7             	mov    %rax,%rdi
   1154c:	e8 67 01 00 00       	call   116b8 <_ZNSt13__atomic_baseIjEppEv>
   11551:	90                   	nop
   11552:	5d                   	pop    %rbp
   11553:	c3                   	ret

0000000000011554 <_ZN4neko7Context14destroyContextEv>:

void Context::destroyContext() {
   11554:	55                   	push   %rbp
   11555:	48 89 e5             	mov    %rsp,%rbp
  --contextCount;
   11558:	48 8d 05 99 1f 01 00 	lea    0x11f99(%rip),%rax        # 234f8 <_ZN4nekoL12contextCountE>
   1155f:	48 89 c7             	mov    %rax,%rdi
   11562:	e8 6b 01 00 00       	call   116d2 <_ZNSt13__atomic_baseIjEmmEv>
  if (contextCount == 0) {
   11567:	48 8d 05 8a 1f 01 00 	lea    0x11f8a(%rip),%rax        # 234f8 <_ZN4nekoL12contextCountE>
   1156e:	48 89 c7             	mov    %rax,%rdi
   11571:	e8 7c 01 00 00       	call   116f2 <_ZNKSt13__atomic_baseIjEcvjEv>
   11576:	85 c0                	test   %eax,%eax
   11578:	0f 94 c0             	sete   %al
   1157b:	84 c0                	test   %al,%al
   1157d:	74 05                	je     11584 <_ZN4neko7Context14destroyContextEv+0x30>
    glfwTerminate();
   1157f:	e8 6c 1d ff ff       	call   32f0 <glfwTerminate@plt>
  }
}
   11584:	90                   	nop
   11585:	5d                   	pop    %rbp
   11586:	c3                   	ret
   11587:	90                   	nop

0000000000011588 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult Context::createDebugMessenger(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pMessenger) const {
   11588:	55                   	push   %rbp
   11589:	48 89 e5             	mov    %rsp,%rbp
   1158c:	48 83 ec 40          	sub    $0x40,%rsp
   11590:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11594:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11598:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1159c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   115a0:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  auto pFunc = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
   115a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   115a8:	48 8d 15 69 31 00 00 	lea    0x3169(%rip),%rdx        # 14718 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x80>
   115af:	48 89 d6             	mov    %rdx,%rsi
   115b2:	48 89 c7             	mov    %rax,%rdi
   115b5:	e8 d6 1c ff ff       	call   3290 <vkGetInstanceProcAddr@plt>
   115ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (pFunc != nullptr) {
   115be:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   115c3:	74 1c                	je     115e1 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x59>
    return pFunc(instance, pCreateInfo, pAllocator, pMessenger);
   115c5:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
   115c9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   115cd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   115d1:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   115d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   115d9:	48 89 c7             	mov    %rax,%rdi
   115dc:	41 ff d0             	call   *%r8
   115df:	eb 05                	jmp    115e6 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5e>
  } else {
    return VK_ERROR_EXTENSION_NOT_PRESENT;
   115e1:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
  }
}
   115e6:	c9                   	leave
   115e7:	c3                   	ret

00000000000115e8 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void Context::destroyDebugMessenger(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) const noexcept {
   115e8:	55                   	push   %rbp
   115e9:	48 89 e5             	mov    %rsp,%rbp
   115ec:	48 83 ec 30          	sub    $0x30,%rsp
   115f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   115f4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   115f8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   115fc:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
   11600:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11604:	48 8d 15 2d 31 00 00 	lea    0x312d(%rip),%rdx        # 14738 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa0>
   1160b:	48 89 d6             	mov    %rdx,%rsi
   1160e:	48 89 c7             	mov    %rax,%rdi
   11611:	e8 7a 1c ff ff       	call   3290 <vkGetInstanceProcAddr@plt>
   11616:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
   1161a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1161f:	74 19                	je     1163a <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x52>
    func(instance, debugMessenger, pAllocator);
   11621:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
   11625:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11629:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1162d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11631:	48 89 ce             	mov    %rcx,%rsi
   11634:	48 89 c7             	mov    %rax,%rdi
   11637:	41 ff d0             	call   *%r8
  }
}
   1163a:	90                   	nop
   1163b:	c9                   	leave
   1163c:	c3                   	ret

000000000001163d <_Z41__static_initialization_and_destruction_0ii>:

   1163d:	55                   	push   %rbp
   1163e:	48 89 e5             	mov    %rsp,%rbp
   11641:	48 83 ec 10          	sub    $0x10,%rsp
   11645:	89 7d fc             	mov    %edi,-0x4(%rbp)
   11648:	89 75 f8             	mov    %esi,-0x8(%rbp)
   1164b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   1164f:	75 3b                	jne    1168c <_Z41__static_initialization_and_destruction_0ii+0x4f>
   11651:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   11658:	75 32                	jne    1168c <_Z41__static_initialization_and_destruction_0ii+0x4f>
   1165a:	48 8d 05 93 1e 01 00 	lea    0x11e93(%rip),%rax        # 234f4 <_ZStL8__ioinit>
   11661:	48 89 c7             	mov    %rax,%rdi
   11664:	e8 d7 1d ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
   11669:	48 8d 05 20 1c 01 00 	lea    0x11c20(%rip),%rax        # 23290 <__dso_handle>
   11670:	48 89 c2             	mov    %rax,%rdx
   11673:	48 8d 05 7a 1e 01 00 	lea    0x11e7a(%rip),%rax        # 234f4 <_ZStL8__ioinit>
   1167a:	48 89 c6             	mov    %rax,%rsi
   1167d:	48 8b 05 54 19 01 00 	mov    0x11954(%rip),%rax        # 22fd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   11684:	48 89 c7             	mov    %rax,%rdi
   11687:	e8 d4 1b ff ff       	call   3260 <__cxa_atexit@plt>
   1168c:	90                   	nop
   1168d:	c9                   	leave
   1168e:	c3                   	ret

000000000001168f <_GLOBAL__sub_I__ZN4neko7Context13createContextEv>:
   1168f:	55                   	push   %rbp
   11690:	48 89 e5             	mov    %rsp,%rbp
   11693:	be ff ff 00 00       	mov    $0xffff,%esi
   11698:	bf 01 00 00 00       	mov    $0x1,%edi
   1169d:	e8 9b ff ff ff       	call   1163d <_Z41__static_initialization_and_destruction_0ii>
   116a2:	5d                   	pop    %rbp
   116a3:	c3                   	ret

00000000000116a4 <_ZStanSt12memory_orderSt23__memory_order_modifier>:
    return memory_order(int(__m) | int(__mod));
  }

  constexpr memory_order
  operator&(memory_order __m, __memory_order_modifier __mod)
  {
   116a4:	55                   	push   %rbp
   116a5:	48 89 e5             	mov    %rsp,%rbp
   116a8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   116ab:	89 75 f8             	mov    %esi,-0x8(%rbp)
    return memory_order(int(__m) & int(__mod));
   116ae:	8b 55 fc             	mov    -0x4(%rbp),%edx
   116b1:	8b 45 f8             	mov    -0x8(%rbp),%eax
   116b4:	21 d0                	and    %edx,%eax
  }
   116b6:	5d                   	pop    %rbp
   116b7:	c3                   	ret

00000000000116b8 <_ZNSt13__atomic_baseIjEppEv>:
      __int_type
      operator--(int) volatile noexcept
      { return fetch_sub(1); }

      __int_type
      operator++() noexcept
   116b8:	55                   	push   %rbp
   116b9:	48 89 e5             	mov    %rsp,%rbp
   116bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
   116c0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   116c4:	b8 01 00 00 00       	mov    $0x1,%eax
   116c9:	f0 0f c1 02          	lock xadd %eax,(%rdx)
   116cd:	83 c0 01             	add    $0x1,%eax
   116d0:	5d                   	pop    %rbp
   116d1:	c3                   	ret

00000000000116d2 <_ZNSt13__atomic_baseIjEmmEv>:
      __int_type
      operator++() volatile noexcept
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }

      __int_type
      operator--() noexcept
   116d2:	55                   	push   %rbp
   116d3:	48 89 e5             	mov    %rsp,%rbp
   116d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
   116da:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   116de:	b8 01 00 00 00       	mov    $0x1,%eax
   116e3:	f7 d8                	neg    %eax
   116e5:	89 c1                	mov    %eax,%ecx
   116e7:	89 c8                	mov    %ecx,%eax
   116e9:	f0 0f c1 02          	lock xadd %eax,(%rdx)
   116ed:	01 c8                	add    %ecx,%eax
   116ef:	5d                   	pop    %rbp
   116f0:	c3                   	ret
   116f1:	90                   	nop

00000000000116f2 <_ZNKSt13__atomic_baseIjEcvjEv>:
      operator __int_type() const noexcept
   116f2:	55                   	push   %rbp
   116f3:	48 89 e5             	mov    %rsp,%rbp
   116f6:	48 83 ec 20          	sub    $0x20,%rsp
   116fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   116fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11702:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11706:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)

      _GLIBCXX_ALWAYS_INLINE __int_type
      load(memory_order __m = memory_order_seq_cst) const noexcept
      {
	memory_order __b __attribute__ ((__unused__))
	  = __m & __memory_order_mask;
   1170d:	8b 45 f4             	mov    -0xc(%rbp),%eax
   11710:	be ff ff 00 00       	mov    $0xffff,%esi
   11715:	89 c7                	mov    %eax,%edi
   11717:	e8 88 ff ff ff       	call   116a4 <_ZStanSt12memory_orderSt23__memory_order_modifier>
   1171c:	89 45 f0             	mov    %eax,-0x10(%rbp)
	__glibcxx_assert(__b != memory_order_release);
   1171f:	e8 5a 21 ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
   11724:	84 c0                	test   %al,%al
   11726:	74 0d                	je     11735 <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
   11728:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
   1172c:	75 07                	jne    11735 <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
   1172e:	b8 01 00 00 00       	mov    $0x1,%eax
   11733:	eb 05                	jmp    1173a <_ZNKSt13__atomic_baseIjEcvjEv+0x48>
   11735:	b8 00 00 00 00       	mov    $0x0,%eax
   1173a:	84 c0                	test   %al,%al
	__glibcxx_assert(__b != memory_order_acq_rel);
   1173c:	e8 3d 21 ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
   11741:	84 c0                	test   %al,%al
   11743:	74 0d                	je     11752 <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
   11745:	83 7d f0 04          	cmpl   $0x4,-0x10(%rbp)
   11749:	75 07                	jne    11752 <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
   1174b:	b8 01 00 00 00       	mov    $0x1,%eax
   11750:	eb 05                	jmp    11757 <_ZNKSt13__atomic_baseIjEcvjEv+0x65>
   11752:	b8 00 00 00 00       	mov    $0x0,%eax
   11757:	84 c0                	test   %al,%al

	return __atomic_load_n(&_M_i, int(__m));
   11759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1175d:	8b 00                	mov    (%rax),%eax
   1175f:	90                   	nop
      { return load(); }
   11760:	c9                   	leave
   11761:	c3                   	ret

0000000000011762 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL Instance::debugMessengerCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
   11762:	55                   	push   %rbp
   11763:	48 89 e5             	mov    %rsp,%rbp
   11766:	48 83 ec 20          	sub    $0x20,%rsp
   1176a:	89 7d fc             	mov    %edi,-0x4(%rbp)
   1176d:	89 75 f8             	mov    %esi,-0x8(%rbp)
   11770:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   11774:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
   11778:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1177b:	83 f8 01             	cmp    $0x1,%eax
   1177e:	7e 3c                	jle    117bc <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
   11780:	be 0a 00 00 00       	mov    $0xa,%esi
   11785:	48 8d 05 54 1c 01 00 	lea    0x11c54(%rip),%rax        # 233e0 <_ZSt4cerr@GLIBCXX_3.4>
   1178c:	48 89 c7             	mov    %rax,%rdi
   1178f:	e8 ec 1b ff ff       	call   3380 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   11794:	48 89 c2             	mov    %rax,%rdx
   11797:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1179b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1179f:	48 89 c6             	mov    %rax,%rsi
   117a2:	48 89 d7             	mov    %rdx,%rdi
   117a5:	e8 06 1b ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   117aa:	48 8b 15 f7 17 01 00 	mov    0x117f7(%rip),%rdx        # 22fa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
   117b1:	48 89 d6             	mov    %rdx,%rsi
   117b4:	48 89 c7             	mov    %rax,%rdi
   117b7:	e8 54 1b ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
   117bc:	b8 00 00 00 00       	mov    $0x0,%eax
}
   117c1:	c9                   	leave
   117c2:	c3                   	ret
   117c3:	90                   	nop

00000000000117c4 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void Instance::populateDebugMessengerInfo(
    VkDebugUtilsMessengerCreateInfoEXT &debugMessengerInfo) {
   117c4:	55                   	push   %rbp
   117c5:	48 89 e5             	mov    %rsp,%rbp
   117c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  debugMessengerInfo.sType =
   117d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   117d4:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
      VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
  debugMessengerInfo.messageSeverity =
   117da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   117de:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      // VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  debugMessengerInfo.messageType =
   117e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   117e9:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
      VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  debugMessengerInfo.pfnUserCallback = debugMessengerCallback;
   117f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   117f4:	48 8d 15 67 ff ff ff 	lea    -0x99(%rip),%rdx        # 11762 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
   117fb:	48 89 50 20          	mov    %rdx,0x20(%rax)
  debugMessengerInfo.pUserData = nullptr;
   117ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11803:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1180a:	00 
}
   1180b:	90                   	nop
   1180c:	5d                   	pop    %rbp
   1180d:	c3                   	ret

000000000001180e <_ZN4neko8Instance21getRequiredExtensionsEv>:

std::vector<const char *> Instance::getRequiredExtensions() {
   1180e:	55                   	push   %rbp
   1180f:	48 89 e5             	mov    %rsp,%rbp
   11812:	53                   	push   %rbx
   11813:	48 83 ec 58          	sub    $0x58,%rsp
   11817:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1181b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  uint32_t requiredExtensionCount;
  const char **pRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
   1181f:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   11823:	48 89 c7             	mov    %rax,%rdi
   11826:	e8 d5 19 ff ff       	call   3200 <glfwGetRequiredInstanceExtensions@plt>
   1182b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  std::vector<const char *> requiredExtensions{requiredExtensionCount};
   1182f:	8b 45 c8             	mov    -0x38(%rbp),%eax
   11832:	89 c3                	mov    %eax,%ebx
   11834:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   11838:	48 89 c7             	mov    %rax,%rdi
   1183b:	e8 70 c4 ff ff       	call   dcb0 <_ZNSaIPKcEC1Ev>
   11840:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
   11844:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11848:	48 89 de             	mov    %rbx,%rsi
   1184b:	48 89 c7             	mov    %rax,%rdi
   1184e:	e8 79 06 00 00       	call   11ecc <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
   11853:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   11857:	48 89 c7             	mov    %rax,%rdi
   1185a:	e8 6d c4 ff ff       	call   dccc <_ZNSaIPKcED1Ev>
  size_t iExtension = 0;
   1185f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   11866:	00 
  for (auto &extension : requiredExtensions) {
   11867:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1186b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1186f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11873:	48 89 c7             	mov    %rax,%rdi
   11876:	e8 c7 06 00 00       	call   11f42 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1187b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1187f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11883:	48 89 c7             	mov    %rax,%rdi
   11886:	e8 dd 06 00 00       	call   11f68 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1188b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1188f:	eb 3e                	jmp    118cf <_ZN4neko8Instance21getRequiredExtensionsEv+0xc1>
   11891:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11895:	48 89 c7             	mov    %rax,%rdi
   11898:	e8 4f 07 00 00       	call   11fec <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   1189d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    extension = pRequiredExtensions[iExtension];
   118a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118a5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   118ac:	00 
   118ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118b1:	48 01 d0             	add    %rdx,%rax
   118b4:	48 8b 10             	mov    (%rax),%rdx
   118b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   118bb:	48 89 10             	mov    %rdx,(%rax)
    ++iExtension;
   118be:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (auto &extension : requiredExtensions) {
   118c3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   118c7:	48 89 c7             	mov    %rax,%rdi
   118ca:	e8 fd 06 00 00       	call   11fcc <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   118cf:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   118d3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   118d7:	48 89 d6             	mov    %rdx,%rsi
   118da:	48 89 c7             	mov    %rax,%rdi
   118dd:	e8 af 06 00 00       	call   11f91 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   118e2:	84 c0                	test   %al,%al
   118e4:	75 ab                	jne    11891 <_ZN4neko8Instance21getRequiredExtensionsEv+0x83>
  }
  return requiredExtensions;
   118e6:	eb 1a                	jmp    11902 <_ZN4neko8Instance21getRequiredExtensionsEv+0xf4>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
   118e8:	48 89 c3             	mov    %rax,%rbx
   118eb:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   118ef:	48 89 c7             	mov    %rax,%rdi
   118f2:	e8 d5 c3 ff ff       	call   dccc <_ZNSaIPKcED1Ev>
   118f7:	48 89 d8             	mov    %rbx,%rax
   118fa:	48 89 c7             	mov    %rax,%rdi
   118fd:	e8 ce 1b ff ff       	call   34d0 <_Unwind_Resume@plt>
}
   11902:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11906:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1190a:	c9                   	leave
   1190b:	c3                   	ret

000000000001190c <_ZN4neko8InstanceC1ERKNS_8SettingsE>:

Instance::Instance(const Settings &settings) {
   1190c:	55                   	push   %rbp
   1190d:	48 89 e5             	mov    %rsp,%rbp
   11910:	41 55                	push   %r13
   11912:	41 54                	push   %r12
   11914:	53                   	push   %rbx
   11915:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1191c:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
   11923:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
   1192a:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11931:	48 89 c7             	mov    %rax,%rdi
   11934:	e8 67 05 00 00       	call   11ea0 <_ZN4neko7ContextC1Ev>
   11939:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11940:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   11947:	00 
   11948:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1194f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   11956:	00 
   11957:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1195e:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  uint32_t apiVersion;
  vkEnumerateInstanceVersion(&apiVersion);
   11962:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
   11966:	48 89 c7             	mov    %rax,%rdi
   11969:	e8 42 1a ff ff       	call   33b0 <vkEnumerateInstanceVersion@plt>

  VkApplicationInfo applicationInfo{};
   1196e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11972:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
   11979:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
   11980:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
  applicationInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
   11987:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
   1198e:	00 00 00 
  applicationInfo.pApplicationName = settings.general.appName.c_str();
   11991:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   11998:	48 89 c7             	mov    %rax,%rdi
   1199b:	e8 40 17 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
   119a0:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  applicationInfo.applicationVersion = settings.general.appVersion;
   119a7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   119ae:	8b 40 20             	mov    0x20(%rax),%eax
   119b1:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  applicationInfo.pEngineName = settings.general.engineName.c_str();
   119b7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   119be:	48 83 c0 28          	add    $0x28,%rax
   119c2:	48 89 c7             	mov    %rax,%rdi
   119c5:	e8 16 17 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
   119ca:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  applicationInfo.engineVersion = settings.general.engineVersion;
   119d1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   119d8:	8b 40 48             	mov    0x48(%rax),%eax
   119db:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  applicationInfo.apiVersion = apiVersion;
   119e1:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   119e4:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)

  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
   119ea:	48 8d 05 97 33 00 00 	lea    0x3397(%rip),%rax        # 14d88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   119f1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   119f5:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   119f9:	49 89 c4             	mov    %rax,%r12
   119fc:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   11a02:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   11a06:	48 89 c7             	mov    %rax,%rdi
   11a09:	e8 a2 c2 ff ff       	call   dcb0 <_ZNSaIPKcEC1Ev>
   11a0e:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
   11a12:	4c 89 e6             	mov    %r12,%rsi
   11a15:	4c 89 ef             	mov    %r13,%rdi
   11a18:	4c 89 e1             	mov    %r12,%rcx
   11a1b:	4c 89 eb             	mov    %r13,%rbx
   11a1e:	48 89 df             	mov    %rbx,%rdi
   11a21:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11a25:	48 89 d1             	mov    %rdx,%rcx
   11a28:	48 89 fa             	mov    %rdi,%rdx
   11a2b:	48 89 c7             	mov    %rax,%rdi
   11a2e:	e8 b5 c2 ff ff       	call   dce8 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11a33:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   11a37:	48 89 c7             	mov    %rax,%rdi
   11a3a:	e8 8d c2 ff ff       	call   dccc <_ZNSaIPKcED1Ev>
  auto extensions = getRequiredExtensions();
   11a3f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11a43:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   11a4a:	48 89 d6             	mov    %rdx,%rsi
   11a4d:	48 89 c7             	mov    %rax,%rdi
   11a50:	e8 b9 fd ff ff       	call   1180e <_ZN4neko8Instance21getRequiredExtensionsEv>

  VkDebugUtilsMessengerCreateInfoEXT *pDebugMessengerInfo = nullptr;
   11a55:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   11a5c:	00 
  VkDebugUtilsMessengerCreateInfoEXT debugMessengerInfo{};
   11a5d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11a61:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
   11a68:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
   11a6f:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)

  if constexpr (neko::debugMode) {
    layers.emplace_back("VK_LAYER_KHRONOS_validation");
   11a76:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11a7a:	48 8d 15 21 33 00 00 	lea    0x3321(%rip),%rdx        # 14da2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x22>
   11a81:	48 89 d6             	mov    %rdx,%rsi
   11a84:	48 89 c7             	mov    %rax,%rdi
   11a87:	e8 72 05 00 00       	call   11ffe <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>
    extensions.emplace_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
   11a8c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11a90:	48 8d 15 27 33 00 00 	lea    0x3327(%rip),%rdx        # 14dbe <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e>
   11a97:	48 89 d6             	mov    %rdx,%rsi
   11a9a:	48 89 c7             	mov    %rax,%rdi
   11a9d:	e8 00 06 00 00       	call   120a2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>

    populateDebugMessengerInfo(debugMessengerInfo);
   11aa2:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   11aa9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11ab0:	48 89 d6             	mov    %rdx,%rsi
   11ab3:	48 89 c7             	mov    %rax,%rdi
   11ab6:	e8 09 fd ff ff       	call   117c4 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    pDebugMessengerInfo = &debugMessengerInfo;
   11abb:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   11ac2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  }

  VkInstanceCreateInfo instanceInfo{};
   11ac6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11aca:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
   11ad1:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
   11ad8:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
   11adf:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
   11ae6:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
   11aed:	00 00 00 
  instanceInfo.pNext = pDebugMessengerInfo;
   11af0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11af4:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.pApplicationInfo = &applicationInfo;
   11afb:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
   11b02:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  instanceInfo.enabledLayerCount = vku32(layers.size());
   11b09:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11b0d:	48 89 c7             	mov    %rax,%rdi
   11b10:	e8 31 06 00 00       	call   12146 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   11b15:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  instanceInfo.ppEnabledLayerNames = layers.data();
   11b1b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11b1f:	48 89 c7             	mov    %rax,%rdi
   11b22:	e8 43 06 00 00       	call   1216a <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
   11b27:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  instanceInfo.enabledExtensionCount = vku32(extensions.size());
   11b2e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11b32:	48 89 c7             	mov    %rax,%rdi
   11b35:	e8 0c 06 00 00       	call   12146 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   11b3a:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  instanceInfo.ppEnabledExtensionNames = extensions.data();
   11b40:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11b44:	48 89 c7             	mov    %rax,%rdi
   11b47:	e8 1e 06 00 00       	call   1216a <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
   11b4c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  if (vkCreateInstance(&instanceInfo, nullptr, &mInstance) != VK_SUCCESS) {
   11b53:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11b5a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11b5e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11b65:	be 00 00 00 00       	mov    $0x0,%esi
   11b6a:	48 89 c7             	mov    %rax,%rdi
   11b6d:	e8 1e 18 ff ff       	call   3390 <vkCreateInstance@plt>
   11b72:	85 c0                	test   %eax,%eax
   11b74:	0f 95 c0             	setne  %al
   11b77:	84 c0                	test   %al,%al
   11b79:	74 3b                	je     11bb6 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x2aa>
    throw std::runtime_error("Failed to create instance.");
   11b7b:	bf 10 00 00 00       	mov    $0x10,%edi
   11b80:	e8 8b 15 ff ff       	call   3110 <__cxa_allocate_exception@plt>
   11b85:	48 89 c3             	mov    %rax,%rbx
   11b88:	48 8d 05 42 32 00 00 	lea    0x3242(%rip),%rax        # 14dd1 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x51>
   11b8f:	48 89 c6             	mov    %rax,%rsi
   11b92:	48 89 df             	mov    %rbx,%rdi
   11b95:	e8 16 15 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
   11b9a:	48 8b 05 17 14 01 00 	mov    0x11417(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11ba1:	48 89 c2             	mov    %rax,%rdx
   11ba4:	48 8d 05 55 11 01 00 	lea    0x11155(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11bab:	48 89 c6             	mov    %rax,%rsi
   11bae:	48 89 df             	mov    %rbx,%rdi
   11bb1:	e8 fa 18 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  if constexpr (neko::debugMode) {
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
   11bb6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11bbd:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   11bc4:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
   11bc8:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   11bcf:	48 8b 72 08          	mov    0x8(%rdx),%rsi
   11bd3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11bd7:	49 89 c8             	mov    %rcx,%r8
   11bda:	b9 00 00 00 00       	mov    $0x0,%ecx
   11bdf:	48 89 c7             	mov    %rax,%rdi
   11be2:	e8 a1 f9 ff ff       	call   11588 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                      &mDebugMessenger) != VK_SUCCESS) {
   11be7:	85 c0                	test   %eax,%eax
   11be9:	0f 95 c0             	setne  %al
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
   11bec:	84 c0                	test   %al,%al
   11bee:	74 3b                	je     11c2b <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x31f>
      throw std::runtime_error("Failed to create debug messenger");
   11bf0:	bf 10 00 00 00       	mov    $0x10,%edi
   11bf5:	e8 16 15 ff ff       	call   3110 <__cxa_allocate_exception@plt>
   11bfa:	48 89 c3             	mov    %rax,%rbx
   11bfd:	48 8d 05 ec 31 00 00 	lea    0x31ec(%rip),%rax        # 14df0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
   11c04:	48 89 c6             	mov    %rax,%rsi
   11c07:	48 89 df             	mov    %rbx,%rdi
   11c0a:	e8 a1 14 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
   11c0f:	48 8b 05 a2 13 01 00 	mov    0x113a2(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11c16:	48 89 c2             	mov    %rax,%rdx
   11c19:	48 8d 05 e0 10 01 00 	lea    0x110e0(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11c20:	48 89 c6             	mov    %rax,%rsi
   11c23:	48 89 df             	mov    %rbx,%rdi
   11c26:	e8 85 18 ff ff       	call   34b0 <__cxa_throw@plt>
    }
  }

  mIsOwner = true;
   11c2b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11c32:	c6 40 18 01          	movb   $0x1,0x18(%rax)
}
   11c36:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11c3a:	48 89 c7             	mov    %rax,%rdi
   11c3d:	e8 2e c1 ff ff       	call   dd70 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   11c42:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11c46:	48 89 c7             	mov    %rax,%rdi
   11c49:	e8 22 c1 ff ff       	call   dd70 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   11c4e:	eb 70                	jmp    11cc0 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x3b4>
  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
   11c50:	48 89 c3             	mov    %rax,%rbx
   11c53:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   11c57:	48 89 c7             	mov    %rax,%rdi
   11c5a:	e8 6d c0 ff ff       	call   dccc <_ZNSaIPKcED1Ev>
   11c5f:	eb 45                	jmp    11ca6 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    throw std::runtime_error("Failed to create instance.");
   11c61:	49 89 c4             	mov    %rax,%r12
   11c64:	48 89 df             	mov    %rbx,%rdi
   11c67:	e8 44 15 ff ff       	call   31b0 <__cxa_free_exception@plt>
   11c6c:	4c 89 e3             	mov    %r12,%rbx
   11c6f:	eb 13                	jmp    11c84 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
      throw std::runtime_error("Failed to create debug messenger");
   11c71:	49 89 c4             	mov    %rax,%r12
   11c74:	48 89 df             	mov    %rbx,%rdi
   11c77:	e8 34 15 ff ff       	call   31b0 <__cxa_free_exception@plt>
   11c7c:	4c 89 e3             	mov    %r12,%rbx
   11c7f:	eb 03                	jmp    11c84 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
}
   11c81:	48 89 c3             	mov    %rax,%rbx
   11c84:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11c88:	48 89 c7             	mov    %rax,%rdi
   11c8b:	e8 e0 c0 ff ff       	call   dd70 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   11c90:	eb 03                	jmp    11c95 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x389>
   11c92:	48 89 c3             	mov    %rax,%rbx
   11c95:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11c99:	48 89 c7             	mov    %rax,%rdi
   11c9c:	e8 cf c0 ff ff       	call   dd70 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   11ca1:	eb 03                	jmp    11ca6 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
   11ca3:	48 89 c3             	mov    %rax,%rbx
   11ca6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   11cad:	48 89 c7             	mov    %rax,%rdi
   11cb0:	e8 27 1c ff ff       	call   38dc <_ZN4neko7ContextD1Ev>
   11cb5:	48 89 d8             	mov    %rbx,%rax
   11cb8:	48 89 c7             	mov    %rax,%rdi
   11cbb:	e8 10 18 ff ff       	call   34d0 <_Unwind_Resume@plt>
   11cc0:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   11cc7:	5b                   	pop    %rbx
   11cc8:	41 5c                	pop    %r12
   11cca:	41 5d                	pop    %r13
   11ccc:	5d                   	pop    %rbp
   11ccd:	c3                   	ret

0000000000011cce <_ZN4neko8InstanceC1EOS0_>:

Instance::Instance(Instance &&rhs) noexcept
   11cce:	55                   	push   %rbp
   11ccf:	48 89 e5             	mov    %rsp,%rbp
   11cd2:	53                   	push   %rbx
   11cd3:	48 83 ec 28          	sub    $0x28,%rsp
   11cd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11cdb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    : mContext{std::move(rhs.mContext)}, mInstance{std::move(rhs.mInstance)},
   11cdf:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   11ce3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11ce7:	48 89 c7             	mov    %rax,%rdi
   11cea:	e8 9f 04 00 00       	call   1218e <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
   11cef:	48 89 c6             	mov    %rax,%rsi
   11cf2:	48 89 df             	mov    %rbx,%rdi
   11cf5:	e8 ba 01 00 00       	call   11eb4 <_ZN4neko7ContextC1EOS0_>
   11cfa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11cfe:	48 83 c0 08          	add    $0x8,%rax
   11d02:	48 89 c7             	mov    %rax,%rdi
   11d05:	e8 92 04 00 00       	call   1219c <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
   11d0a:	48 8b 10             	mov    (%rax),%rdx
   11d0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d11:	48 89 50 08          	mov    %rdx,0x8(%rax)
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
   11d15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11d19:	48 83 c0 10          	add    $0x10,%rax
   11d1d:	48 89 c7             	mov    %rax,%rdi
   11d20:	e8 85 04 00 00       	call   121aa <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
   11d25:	48 8b 10             	mov    (%rax),%rdx
   11d28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d2c:	48 89 50 10          	mov    %rdx,0x10(%rax)
                                                           rhs.mIsOwner,
                                                           false)} {}
   11d30:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
                                                           rhs.mIsOwner,
   11d34:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11d38:	48 8d 50 18          	lea    0x18(%rax),%rdx
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
   11d3c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11d40:	48 89 c6             	mov    %rax,%rsi
   11d43:	48 89 d7             	mov    %rdx,%rdi
   11d46:	e8 6d 04 00 00       	call   121b8 <_ZSt8exchangeIbbET_RS0_OT0_>
   11d4b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11d4f:	88 42 18             	mov    %al,0x18(%rdx)
                                                           false)} {}
   11d52:	90                   	nop
   11d53:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11d57:	c9                   	leave
   11d58:	c3                   	ret
   11d59:	90                   	nop

0000000000011d5a <_ZN4neko8InstanceaSEOS0_>:

Instance &Instance::operator=(Instance &&rhs) {
   11d5a:	55                   	push   %rbp
   11d5b:	48 89 e5             	mov    %rsp,%rbp
   11d5e:	48 83 ec 20          	sub    $0x20,%rsp
   11d62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11d66:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  release();
   11d6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d6e:	48 89 c7             	mov    %rax,%rdi
   11d71:	e8 6a 00 00 00       	call   11de0 <_ZN4neko8Instance7releaseEv>
  mContext = std::move(rhs.mContext);
   11d76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11d7a:	48 89 c7             	mov    %rax,%rdi
   11d7d:	e8 0c 04 00 00       	call   1218e <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
  mInstance = std::move(rhs.mInstance);
   11d82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11d86:	48 83 c0 08          	add    $0x8,%rax
   11d8a:	48 89 c7             	mov    %rax,%rdi
   11d8d:	e8 0a 04 00 00       	call   1219c <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
   11d92:	48 8b 10             	mov    (%rax),%rdx
   11d95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d99:	48 89 50 08          	mov    %rdx,0x8(%rax)
  mDebugMessenger = std::move(rhs.mDebugMessenger);
   11d9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11da1:	48 83 c0 10          	add    $0x10,%rax
   11da5:	48 89 c7             	mov    %rax,%rdi
   11da8:	e8 fd 03 00 00       	call   121aa <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
   11dad:	48 8b 10             	mov    (%rax),%rdx
   11db0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11db4:	48 89 50 10          	mov    %rdx,0x10(%rax)
  mIsOwner = std::exchange(rhs.mIsOwner, false);
   11db8:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
   11dbc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11dc0:	48 8d 50 18          	lea    0x18(%rax),%rdx
   11dc4:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   11dc8:	48 89 c6             	mov    %rax,%rsi
   11dcb:	48 89 d7             	mov    %rdx,%rdi
   11dce:	e8 e5 03 00 00       	call   121b8 <_ZSt8exchangeIbbET_RS0_OT0_>
   11dd3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11dd7:	88 42 18             	mov    %al,0x18(%rdx)
  return *this;
   11dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
}
   11dde:	c9                   	leave
   11ddf:	c3                   	ret

0000000000011de0 <_ZN4neko8Instance7releaseEv>:

void Instance::release() noexcept {
   11de0:	55                   	push   %rbp
   11de1:	48 89 e5             	mov    %rsp,%rbp
   11de4:	48 83 ec 10          	sub    $0x10,%rsp
   11de8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (mIsOwner) {
   11dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11df0:	0f b6 40 18          	movzbl 0x18(%rax),%eax
   11df4:	84 c0                	test   %al,%al
   11df6:	74 3e                	je     11e36 <_ZN4neko8Instance7releaseEv+0x56>
    if constexpr (neko::debugMode) {
      mContext.destroyDebugMessenger(mInstance, mDebugMessenger, nullptr);
   11df8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dfc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11e00:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   11e04:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11e08:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   11e0c:	b9 00 00 00 00       	mov    $0x0,%ecx
   11e11:	48 89 c7             	mov    %rax,%rdi
   11e14:	e8 cf f7 ff ff       	call   115e8 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
    }
    vkDestroyInstance(mInstance, nullptr);
   11e19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e1d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11e21:	be 00 00 00 00       	mov    $0x0,%esi
   11e26:	48 89 c7             	mov    %rax,%rdi
   11e29:	e8 b2 14 ff ff       	call   32e0 <vkDestroyInstance@plt>
    mIsOwner = false;
   11e2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e32:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  }
}
   11e36:	90                   	nop
   11e37:	c9                   	leave
   11e38:	c3                   	ret

0000000000011e39 <_Z41__static_initialization_and_destruction_0ii>:

   11e39:	55                   	push   %rbp
   11e3a:	48 89 e5             	mov    %rsp,%rbp
   11e3d:	48 83 ec 10          	sub    $0x10,%rsp
   11e41:	89 7d fc             	mov    %edi,-0x4(%rbp)
   11e44:	89 75 f8             	mov    %esi,-0x8(%rbp)
   11e47:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   11e4b:	75 3b                	jne    11e88 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   11e4d:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   11e54:	75 32                	jne    11e88 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   11e56:	48 8d 05 9f 16 01 00 	lea    0x1169f(%rip),%rax        # 234fc <_ZStL8__ioinit>
   11e5d:	48 89 c7             	mov    %rax,%rdi
   11e60:	e8 db 15 ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
   11e65:	48 8d 05 24 14 01 00 	lea    0x11424(%rip),%rax        # 23290 <__dso_handle>
   11e6c:	48 89 c2             	mov    %rax,%rdx
   11e6f:	48 8d 05 86 16 01 00 	lea    0x11686(%rip),%rax        # 234fc <_ZStL8__ioinit>
   11e76:	48 89 c6             	mov    %rax,%rsi
   11e79:	48 8b 05 58 11 01 00 	mov    0x11158(%rip),%rax        # 22fd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   11e80:	48 89 c7             	mov    %rax,%rdi
   11e83:	e8 d8 13 ff ff       	call   3260 <__cxa_atexit@plt>
   11e88:	90                   	nop
   11e89:	c9                   	leave
   11e8a:	c3                   	ret

0000000000011e8b <_GLOBAL__sub_I__ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
   11e8b:	55                   	push   %rbp
   11e8c:	48 89 e5             	mov    %rsp,%rbp
   11e8f:	be ff ff 00 00       	mov    $0xffff,%esi
   11e94:	bf 01 00 00 00       	mov    $0x1,%edi
   11e99:	e8 9b ff ff ff       	call   11e39 <_Z41__static_initialization_and_destruction_0ii>
   11e9e:	5d                   	pop    %rbp
   11e9f:	c3                   	ret

0000000000011ea0 <_ZN4neko7ContextC1Ev>:
  Context() { createContext(); }
   11ea0:	55                   	push   %rbp
   11ea1:	48 89 e5             	mov    %rsp,%rbp
   11ea4:	48 83 ec 10          	sub    $0x10,%rsp
   11ea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11eac:	e8 0f f6 ff ff       	call   114c0 <_ZN4neko7Context13createContextEv>
   11eb1:	90                   	nop
   11eb2:	c9                   	leave
   11eb3:	c3                   	ret

0000000000011eb4 <_ZN4neko7ContextC1EOS0_>:
  Context(Context &&) { moveCreateContext(); }
   11eb4:	55                   	push   %rbp
   11eb5:	48 89 e5             	mov    %rsp,%rbp
   11eb8:	48 83 ec 10          	sub    $0x10,%rsp
   11ebc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ec0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11ec4:	e8 75 f6 ff ff       	call   1153e <_ZN4neko7Context17moveCreateContextEv>
   11ec9:	90                   	nop
   11eca:	c9                   	leave
   11ecb:	c3                   	ret

0000000000011ecc <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   11ecc:	55                   	push   %rbp
   11ecd:	48 89 e5             	mov    %rsp,%rbp
   11ed0:	53                   	push   %rbx
   11ed1:	48 83 ec 28          	sub    $0x28,%rsp
   11ed5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ed9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11edd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   11ee1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11ee5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11ee9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11eed:	48 89 d6             	mov    %rdx,%rsi
   11ef0:	48 89 c7             	mov    %rax,%rdi
   11ef3:	e8 09 d1 ff ff       	call   f001 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   11ef8:	48 89 c1             	mov    %rax,%rcx
   11efb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11eff:	48 89 c2             	mov    %rax,%rdx
   11f02:	48 89 ce             	mov    %rcx,%rsi
   11f05:	48 89 df             	mov    %rbx,%rdi
   11f08:	e8 db 02 00 00       	call   121e8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   11f0d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11f11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f15:	48 89 d6             	mov    %rdx,%rsi
   11f18:	48 89 c7             	mov    %rax,%rdi
   11f1b:	e8 26 03 00 00       	call   12246 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
   11f20:	eb 1a                	jmp    11f3c <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
   11f22:	48 89 c3             	mov    %rax,%rbx
   11f25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f29:	48 89 c7             	mov    %rax,%rdi
   11f2c:	e8 59 c6 ff ff       	call   e58a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   11f31:	48 89 d8             	mov    %rbx,%rax
   11f34:	48 89 c7             	mov    %rax,%rdi
   11f37:	e8 94 15 ff ff       	call   34d0 <_Unwind_Resume@plt>
   11f3c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11f40:	c9                   	leave
   11f41:	c3                   	ret

0000000000011f42 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11f42:	55                   	push   %rbp
   11f43:	48 89 e5             	mov    %rsp,%rbp
   11f46:	48 83 ec 20          	sub    $0x20,%rsp
   11f4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11f4e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11f52:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11f56:	48 89 d6             	mov    %rdx,%rsi
   11f59:	48 89 c7             	mov    %rax,%rdi
   11f5c:	e8 25 03 00 00       	call   12286 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f65:	c9                   	leave
   11f66:	c3                   	ret
   11f67:	90                   	nop

0000000000011f68 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11f68:	55                   	push   %rbp
   11f69:	48 89 e5             	mov    %rsp,%rbp
   11f6c:	48 83 ec 20          	sub    $0x20,%rsp
   11f70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11f74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f78:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11f7c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11f80:	48 89 d6             	mov    %rdx,%rsi
   11f83:	48 89 c7             	mov    %rax,%rdi
   11f86:	e8 fb 02 00 00       	call   12286 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f8f:	c9                   	leave
   11f90:	c3                   	ret

0000000000011f91 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11f91:	55                   	push   %rbp
   11f92:	48 89 e5             	mov    %rsp,%rbp
   11f95:	53                   	push   %rbx
   11f96:	48 83 ec 18          	sub    $0x18,%rsp
   11f9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11f9e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fa6:	48 89 c7             	mov    %rax,%rdi
   11fa9:	e8 f6 02 00 00       	call   122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11fae:	48 8b 18             	mov    (%rax),%rbx
   11fb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11fb5:	48 89 c7             	mov    %rax,%rdi
   11fb8:	e8 e7 02 00 00       	call   122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11fbd:	48 8b 00             	mov    (%rax),%rax
   11fc0:	48 39 c3             	cmp    %rax,%rbx
   11fc3:	0f 95 c0             	setne  %al
   11fc6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11fca:	c9                   	leave
   11fcb:	c3                   	ret

0000000000011fcc <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11fcc:	55                   	push   %rbp
   11fcd:	48 89 e5             	mov    %rsp,%rbp
   11fd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fd8:	48 8b 00             	mov    (%rax),%rax
   11fdb:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11fdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fe3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11fea:	5d                   	pop    %rbp
   11feb:	c3                   	ret

0000000000011fec <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11fec:	55                   	push   %rbp
   11fed:	48 89 e5             	mov    %rsp,%rbp
   11ff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ff8:	48 8b 00             	mov    (%rax),%rax
   11ffb:	5d                   	pop    %rbp
   11ffc:	c3                   	ret
   11ffd:	90                   	nop

0000000000011ffe <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   11ffe:	55                   	push   %rbp
   11fff:	48 89 e5             	mov    %rsp,%rbp
   12002:	53                   	push   %rbx
   12003:	48 83 ec 18          	sub    $0x18,%rsp
   12007:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1200b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   1200f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12013:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1201b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1201f:	48 39 c2             	cmp    %rax,%rdx
   12022:	74 3c                	je     12060 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   12024:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12028:	48 89 c7             	mov    %rax,%rdi
   1202b:	e8 82 02 00 00       	call   122b2 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   12030:	48 89 c2             	mov    %rax,%rdx
   12033:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12037:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1203b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1203f:	48 89 ce             	mov    %rcx,%rsi
   12042:	48 89 c7             	mov    %rax,%rdi
   12045:	e8 76 02 00 00       	call   122c0 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   1204a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1204e:	48 8b 40 08          	mov    0x8(%rax),%rax
   12052:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12056:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1205a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1205e:	eb 30                	jmp    12090 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   12060:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12064:	48 89 c7             	mov    %rax,%rdi
   12067:	e8 46 02 00 00       	call   122b2 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   1206c:	48 89 c3             	mov    %rax,%rbx
   1206f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12073:	48 89 c7             	mov    %rax,%rdi
   12076:	e8 ed fe ff ff       	call   11f68 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1207b:	48 89 c1             	mov    %rax,%rcx
   1207e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12082:	48 89 da             	mov    %rbx,%rdx
   12085:	48 89 ce             	mov    %rcx,%rsi
   12088:	48 89 c7             	mov    %rax,%rdi
   1208b:	e8 6a 02 00 00       	call   122fa <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   12090:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12094:	48 89 c7             	mov    %rax,%rdi
   12097:	e8 f0 03 00 00       	call   1248c <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   1209c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   120a0:	c9                   	leave
   120a1:	c3                   	ret

00000000000120a2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   120a2:	55                   	push   %rbp
   120a3:	48 89 e5             	mov    %rsp,%rbp
   120a6:	53                   	push   %rbx
   120a7:	48 83 ec 18          	sub    $0x18,%rsp
   120ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   120af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   120b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120b7:	48 8b 50 08          	mov    0x8(%rax),%rdx
   120bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120bf:	48 8b 40 10          	mov    0x10(%rax),%rax
   120c3:	48 39 c2             	cmp    %rax,%rdx
   120c6:	74 3c                	je     12104 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   120c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   120cc:	48 89 c7             	mov    %rax,%rdi
   120cf:	e8 f7 03 00 00       	call   124cb <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   120d4:	48 89 c2             	mov    %rax,%rdx
   120d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120db:	48 8b 48 08          	mov    0x8(%rax),%rcx
   120df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120e3:	48 89 ce             	mov    %rcx,%rsi
   120e6:	48 89 c7             	mov    %rax,%rdi
   120e9:	e8 eb 03 00 00       	call   124d9 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   120ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120f2:	48 8b 40 08          	mov    0x8(%rax),%rax
   120f6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   120fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120fe:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12102:	eb 30                	jmp    12134 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   12104:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12108:	48 89 c7             	mov    %rax,%rdi
   1210b:	e8 bb 03 00 00       	call   124cb <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   12110:	48 89 c3             	mov    %rax,%rbx
   12113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12117:	48 89 c7             	mov    %rax,%rdi
   1211a:	e8 49 fe ff ff       	call   11f68 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1211f:	48 89 c1             	mov    %rax,%rcx
   12122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12126:	48 89 da             	mov    %rbx,%rdx
   12129:	48 89 ce             	mov    %rcx,%rsi
   1212c:	48 89 c7             	mov    %rax,%rdi
   1212f:	e8 de 03 00 00       	call   12512 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   12134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12138:	48 89 c7             	mov    %rax,%rdi
   1213b:	e8 4c 03 00 00       	call   1248c <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   12140:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12144:	c9                   	leave
   12145:	c3                   	ret

0000000000012146 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12146:	55                   	push   %rbp
   12147:	48 89 e5             	mov    %rsp,%rbp
   1214a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1214e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12152:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1215a:	48 8b 00             	mov    (%rax),%rax
   1215d:	48 29 c2             	sub    %rax,%rdx
   12160:	48 89 d0             	mov    %rdx,%rax
   12163:	48 c1 f8 03          	sar    $0x3,%rax
   12167:	5d                   	pop    %rbp
   12168:	c3                   	ret
   12169:	90                   	nop

000000000001216a <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1216a:	55                   	push   %rbp
   1216b:	48 89 e5             	mov    %rsp,%rbp
   1216e:	48 83 ec 10          	sub    $0x10,%rsp
   12172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1217a:	48 8b 10             	mov    (%rax),%rdx
   1217d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12181:	48 89 d6             	mov    %rdx,%rsi
   12184:	48 89 c7             	mov    %rax,%rdi
   12187:	e8 18 05 00 00       	call   126a4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   1218c:	c9                   	leave
   1218d:	c3                   	ret

000000000001218e <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   1218e:	55                   	push   %rbp
   1218f:	48 89 e5             	mov    %rsp,%rbp
   12192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   12196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1219a:	5d                   	pop    %rbp
   1219b:	c3                   	ret

000000000001219c <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   1219c:	55                   	push   %rbp
   1219d:	48 89 e5             	mov    %rsp,%rbp
   121a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   121a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121a8:	5d                   	pop    %rbp
   121a9:	c3                   	ret

00000000000121aa <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   121aa:	55                   	push   %rbp
   121ab:	48 89 e5             	mov    %rsp,%rbp
   121ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   121b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b6:	5d                   	pop    %rbp
   121b7:	c3                   	ret

00000000000121b8 <_ZSt8exchangeIbbET_RS0_OT0_>:

  /// Assign @p __new_val to @p __obj and return its previous value.
  template <typename _Tp, typename _Up = _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _Tp
    exchange(_Tp& __obj, _Up&& __new_val)
   121b8:	55                   	push   %rbp
   121b9:	48 89 e5             	mov    %rsp,%rbp
   121bc:	48 83 ec 10          	sub    $0x10,%rsp
   121c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
		    is_nothrow_assignable<_Tp&, _Up>>::value)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   121c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   121cc:	48 89 c7             	mov    %rax,%rdi
   121cf:	e8 e2 04 00 00       	call   126b6 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   121d4:	48 89 c2             	mov    %rax,%rdx
   121d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121db:	48 89 d6             	mov    %rdx,%rsi
   121de:	48 89 c7             	mov    %rax,%rdi
   121e1:	e8 de 04 00 00       	call   126c4 <_ZSt10__exchangeIbbET_RS0_OT0_>
   121e6:	c9                   	leave
   121e7:	c3                   	ret

00000000000121e8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   121e8:	55                   	push   %rbp
   121e9:	48 89 e5             	mov    %rsp,%rbp
   121ec:	53                   	push   %rbx
   121ed:	48 83 ec 28          	sub    $0x28,%rsp
   121f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   121f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   121f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   121fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12201:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12205:	48 89 d6             	mov    %rdx,%rsi
   12208:	48 89 c7             	mov    %rax,%rdi
   1220b:	e8 52 cd ff ff       	call   ef62 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   12210:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12214:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12218:	48 89 d6             	mov    %rdx,%rsi
   1221b:	48 89 c7             	mov    %rax,%rdi
   1221e:	e8 df 04 00 00       	call   12702 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
   12223:	eb 1a                	jmp    1223f <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
   12225:	48 89 c3             	mov    %rax,%rbx
   12228:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1222c:	48 89 c7             	mov    %rax,%rdi
   1222f:	e8 14 c3 ff ff       	call   e548 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
   12234:	48 89 d8             	mov    %rbx,%rax
   12237:	48 89 c7             	mov    %rax,%rdi
   1223a:	e8 91 12 ff ff       	call   34d0 <_Unwind_Resume@plt>
   1223f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12243:	c9                   	leave
   12244:	c3                   	ret
   12245:	90                   	nop

0000000000012246 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   12246:	55                   	push   %rbp
   12247:	48 89 e5             	mov    %rsp,%rbp
   1224a:	48 83 ec 10          	sub    $0x10,%rsp
   1224e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12252:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   12256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1225a:	48 89 c7             	mov    %rax,%rdi
   1225d:	e8 9e c4 ff ff       	call   e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12262:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   12265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12269:	48 8b 00             	mov    (%rax),%rax
   1226c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12270:	48 89 ce             	mov    %rcx,%rsi
   12273:	48 89 c7             	mov    %rax,%rdi
   12276:	e8 dd 04 00 00       	call   12758 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   1227b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1227f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   12283:	90                   	nop
   12284:	c9                   	leave
   12285:	c3                   	ret

0000000000012286 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12286:	55                   	push   %rbp
   12287:	48 89 e5             	mov    %rsp,%rbp
   1228a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1228e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12292:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12296:	48 8b 10             	mov    (%rax),%rdx
   12299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1229d:	48 89 10             	mov    %rdx,(%rax)
   122a0:	90                   	nop
   122a1:	5d                   	pop    %rbp
   122a2:	c3                   	ret
   122a3:	90                   	nop

00000000000122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   122a4:	55                   	push   %rbp
   122a5:	48 89 e5             	mov    %rsp,%rbp
   122a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   122ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122b0:	5d                   	pop    %rbp
   122b1:	c3                   	ret

00000000000122b2 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   122b2:	55                   	push   %rbp
   122b3:	48 89 e5             	mov    %rsp,%rbp
   122b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   122ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122be:	5d                   	pop    %rbp
   122bf:	c3                   	ret

00000000000122c0 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   122c0:	55                   	push   %rbp
   122c1:	48 89 e5             	mov    %rsp,%rbp
   122c4:	48 83 ec 20          	sub    $0x20,%rsp
   122c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   122d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   122d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122d8:	48 89 c7             	mov    %rax,%rdi
   122db:	e8 d2 ff ff ff       	call   122b2 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   122e0:	48 89 c2             	mov    %rax,%rdx
   122e3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   122e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122eb:	48 89 ce             	mov    %rcx,%rsi
   122ee:	48 89 c7             	mov    %rax,%rdi
   122f1:	e8 8c 04 00 00       	call   12782 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>
	}
   122f6:	90                   	nop
   122f7:	c9                   	leave
   122f8:	c3                   	ret
   122f9:	90                   	nop

00000000000122fa <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   122fa:	55                   	push   %rbp
   122fb:	48 89 e5             	mov    %rsp,%rbp
   122fe:	53                   	push   %rbx
   122ff:	48 83 ec 68          	sub    $0x68,%rsp
   12303:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   12307:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1230b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   1230f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12313:	48 8d 15 2f 2b 00 00 	lea    0x2b2f(%rip),%rdx        # 14e49 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
   1231a:	be 01 00 00 00       	mov    $0x1,%esi
   1231f:	48 89 c7             	mov    %rax,%rdi
   12322:	e8 9b 04 00 00       	call   127c2 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   12327:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   1232b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1232f:	48 8b 00             	mov    (%rax),%rax
   12332:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   12336:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1233a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1233e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   12342:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12346:	48 89 c7             	mov    %rax,%rdi
   12349:	e8 f4 fb ff ff       	call   11f42 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1234e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   12352:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   12356:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1235a:	48 89 d6             	mov    %rdx,%rsi
   1235d:	48 89 c7             	mov    %rax,%rdi
   12360:	e8 25 05 00 00       	call   1288a <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   12365:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   12369:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1236d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12371:	48 89 d6             	mov    %rdx,%rsi
   12374:	48 89 c7             	mov    %rax,%rdi
   12377:	e8 e6 cc ff ff       	call   f062 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   1237c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   12380:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12384:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   12388:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1238c:	48 89 c7             	mov    %rax,%rdi
   1238f:	e8 1e ff ff ff       	call   122b2 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   12394:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   12397:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1239b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   123a2:	00 
	  _Alloc_traits::construct(this->_M_impl,
   123a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   123a7:	48 01 c1             	add    %rax,%rcx
   123aa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   123ae:	48 89 ce             	mov    %rcx,%rsi
   123b1:	48 89 c7             	mov    %rax,%rdi
   123b4:	e8 07 ff ff ff       	call   122c0 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   123b9:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   123c0:	00 
					 __new_start, _M_get_Tp_allocator());
   123c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   123c5:	48 89 c7             	mov    %rax,%rdi
   123c8:	e8 33 c3 ff ff       	call   e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   123cd:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   123d0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   123d4:	48 89 c7             	mov    %rax,%rdi
   123d7:	e8 c8 fe ff ff       	call   122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   123dc:	48 8b 30             	mov    (%rax),%rsi
   123df:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   123e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   123e7:	48 89 d9             	mov    %rbx,%rcx
   123ea:	48 89 c7             	mov    %rax,%rdi
   123ed:	e8 da 04 00 00       	call   128cc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   123f2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   123f6:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   123fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   123ff:	48 89 c7             	mov    %rax,%rdi
   12402:	e8 f9 c2 ff ff       	call   e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12407:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   1240a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1240e:	48 89 c7             	mov    %rax,%rdi
   12411:	e8 8e fe ff ff       	call   122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12416:	48 8b 00             	mov    (%rax),%rax
   12419:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1241d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   12421:	48 89 d9             	mov    %rbx,%rcx
   12424:	48 89 c7             	mov    %rax,%rdi
   12427:	e8 a0 04 00 00       	call   128cc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1242c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   12430:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   12434:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   12438:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1243c:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   12440:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   12444:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12448:	48 89 ce             	mov    %rcx,%rsi
   1244b:	48 89 c7             	mov    %rax,%rdi
   1244e:	e8 41 cb ff ff       	call   ef94 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   12453:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12457:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1245b:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   1245e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12462:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12466:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   1246a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1246e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12475:	00 
   12476:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1247a:	48 01 c2             	add    %rax,%rdx
   1247d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12481:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   12485:	90                   	nop
   12486:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1248a:	c9                   	leave
   1248b:	c3                   	ret

000000000001248c <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   1248c:	55                   	push   %rbp
   1248d:	48 89 e5             	mov    %rsp,%rbp
   12490:	48 83 ec 20          	sub    $0x20,%rsp
   12494:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   12498:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1249c:	48 89 c7             	mov    %rax,%rdi
   1249f:	e8 c4 fa ff ff       	call   11f68 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   124a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   124a8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   124ac:	be 01 00 00 00       	mov    $0x1,%esi
   124b1:	48 89 c7             	mov    %rax,%rdi
   124b4:	e8 45 04 00 00       	call   128fe <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   124b9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   124bd:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   124c1:	48 89 c7             	mov    %rax,%rdi
   124c4:	e8 23 fb ff ff       	call   11fec <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   124c9:	c9                   	leave
   124ca:	c3                   	ret

00000000000124cb <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   124cb:	55                   	push   %rbp
   124cc:	48 89 e5             	mov    %rsp,%rbp
   124cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   124d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124d7:	5d                   	pop    %rbp
   124d8:	c3                   	ret

00000000000124d9 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   124d9:	55                   	push   %rbp
   124da:	48 89 e5             	mov    %rsp,%rbp
   124dd:	48 83 ec 20          	sub    $0x20,%rsp
   124e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   124e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   124ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124f1:	48 89 c7             	mov    %rax,%rdi
   124f4:	e8 d2 ff ff ff       	call   124cb <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   124f9:	48 89 c2             	mov    %rax,%rdx
   124fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12504:	48 89 ce             	mov    %rcx,%rsi
   12507:	48 89 c7             	mov    %rax,%rdi
   1250a:	e8 31 04 00 00       	call   12940 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>
	}
   1250f:	90                   	nop
   12510:	c9                   	leave
   12511:	c3                   	ret

0000000000012512 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   12512:	55                   	push   %rbp
   12513:	48 89 e5             	mov    %rsp,%rbp
   12516:	53                   	push   %rbx
   12517:	48 83 ec 68          	sub    $0x68,%rsp
   1251b:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1251f:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   12523:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   12527:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1252b:	48 8d 15 17 29 00 00 	lea    0x2917(%rip),%rdx        # 14e49 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
   12532:	be 01 00 00 00       	mov    $0x1,%esi
   12537:	48 89 c7             	mov    %rax,%rdi
   1253a:	e8 83 02 00 00       	call   127c2 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   1253f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   12543:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12547:	48 8b 00             	mov    (%rax),%rax
   1254a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   1254e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12552:	48 8b 40 08          	mov    0x8(%rax),%rax
   12556:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   1255a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1255e:	48 89 c7             	mov    %rax,%rdi
   12561:	e8 dc f9 ff ff       	call   11f42 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   12566:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1256a:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   1256e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   12572:	48 89 d6             	mov    %rdx,%rsi
   12575:	48 89 c7             	mov    %rax,%rdi
   12578:	e8 0d 03 00 00       	call   1288a <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   1257d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   12581:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12585:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12589:	48 89 d6             	mov    %rdx,%rsi
   1258c:	48 89 c7             	mov    %rax,%rdi
   1258f:	e8 ce ca ff ff       	call   f062 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   12594:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   12598:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1259c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   125a0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   125a4:	48 89 c7             	mov    %rax,%rdi
   125a7:	e8 1f ff ff ff       	call   124cb <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   125ac:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   125af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   125b3:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   125ba:	00 
	  _Alloc_traits::construct(this->_M_impl,
   125bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125bf:	48 01 c1             	add    %rax,%rcx
   125c2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   125c6:	48 89 ce             	mov    %rcx,%rsi
   125c9:	48 89 c7             	mov    %rax,%rdi
   125cc:	e8 08 ff ff ff       	call   124d9 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   125d1:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   125d8:	00 
					 __new_start, _M_get_Tp_allocator());
   125d9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   125dd:	48 89 c7             	mov    %rax,%rdi
   125e0:	e8 1b c1 ff ff       	call   e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   125e5:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   125e8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   125ec:	48 89 c7             	mov    %rax,%rdi
   125ef:	e8 b0 fc ff ff       	call   122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   125f4:	48 8b 30             	mov    (%rax),%rsi
   125f7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   125fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   125ff:	48 89 d9             	mov    %rbx,%rcx
   12602:	48 89 c7             	mov    %rax,%rdi
   12605:	e8 c2 02 00 00       	call   128cc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1260a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   1260e:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   12613:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12617:	48 89 c7             	mov    %rax,%rdi
   1261a:	e8 e1 c0 ff ff       	call   e700 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1261f:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   12622:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   12626:	48 89 c7             	mov    %rax,%rdi
   12629:	e8 76 fc ff ff       	call   122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1262e:	48 8b 00             	mov    (%rax),%rax
   12631:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12635:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   12639:	48 89 d9             	mov    %rbx,%rcx
   1263c:	48 89 c7             	mov    %rax,%rdi
   1263f:	e8 88 02 00 00       	call   128cc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   12644:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   12648:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   1264c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   12650:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   12654:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   12658:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   1265c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12660:	48 89 ce             	mov    %rcx,%rsi
   12663:	48 89 c7             	mov    %rax,%rdi
   12666:	e8 29 c9 ff ff       	call   ef94 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   1266b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1266f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12673:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   12676:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1267a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1267e:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   12682:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12686:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1268d:	00 
   1268e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12692:	48 01 c2             	add    %rax,%rdx
   12695:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12699:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1269d:	90                   	nop
   1269e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   126a2:	c9                   	leave
   126a3:	c3                   	ret

00000000000126a4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   126a4:	55                   	push   %rbp
   126a5:	48 89 e5             	mov    %rsp,%rbp
   126a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   126b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126b4:	5d                   	pop    %rbp
   126b5:	c3                   	ret

00000000000126b6 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   126b6:	55                   	push   %rbp
   126b7:	48 89 e5             	mov    %rsp,%rbp
   126ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   126be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126c2:	5d                   	pop    %rbp
   126c3:	c3                   	ret

00000000000126c4 <_ZSt10__exchangeIbbET_RS0_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   126c4:	55                   	push   %rbp
   126c5:	48 89 e5             	mov    %rsp,%rbp
   126c8:	48 83 ec 20          	sub    $0x20,%rsp
   126cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   126d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   126d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126d8:	48 89 c7             	mov    %rax,%rdi
   126db:	e8 9f 02 00 00       	call   1297f <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
   126e0:	0f b6 00             	movzbl (%rax),%eax
   126e3:	88 45 ff             	mov    %al,-0x1(%rbp)
      __obj = std::forward<_Up>(__new_val);
   126e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   126ea:	48 89 c7             	mov    %rax,%rdi
   126ed:	e8 c4 ff ff ff       	call   126b6 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   126f2:	0f b6 10             	movzbl (%rax),%edx
   126f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126f9:	88 10                	mov    %dl,(%rax)
      return __old_val;
   126fb:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    }
   126ff:	c9                   	leave
   12700:	c3                   	ret
   12701:	90                   	nop

0000000000012702 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   12702:	55                   	push   %rbp
   12703:	48 89 e5             	mov    %rsp,%rbp
   12706:	48 83 ec 10          	sub    $0x10,%rsp
   1270a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1270e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   12712:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1271a:	48 89 d6             	mov    %rdx,%rsi
   1271d:	48 89 c7             	mov    %rax,%rdi
   12720:	e8 3d c9 ff ff       	call   f062 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   12725:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12729:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   1272c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12730:	48 8b 10             	mov    (%rax),%rdx
   12733:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12737:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1273b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1273f:	48 8b 00             	mov    (%rax),%rax
   12742:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12746:	48 c1 e2 03          	shl    $0x3,%rdx
   1274a:	48 01 c2             	add    %rax,%rdx
   1274d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12751:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   12755:	90                   	nop
   12756:	c9                   	leave
   12757:	c3                   	ret

0000000000012758 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   12758:	55                   	push   %rbp
   12759:	48 89 e5             	mov    %rsp,%rbp
   1275c:	48 83 ec 20          	sub    $0x20,%rsp
   12760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12764:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12768:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1276c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12774:	48 89 d6             	mov    %rdx,%rsi
   12777:	48 89 c7             	mov    %rax,%rdi
   1277a:	e8 0e 02 00 00       	call   1298d <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
   1277f:	c9                   	leave
   12780:	c3                   	ret
   12781:	90                   	nop

0000000000012782 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   12782:	55                   	push   %rbp
   12783:	48 89 e5             	mov    %rsp,%rbp
   12786:	53                   	push   %rbx
   12787:	48 83 ec 28          	sub    $0x28,%rsp
   1278b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1278f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12793:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   12797:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1279b:	48 89 c6             	mov    %rax,%rsi
   1279e:	bf 08 00 00 00       	mov    $0x8,%edi
   127a3:	e8 e1 10 ff ff       	call   3889 <_ZnwmPv>
   127a8:	48 89 c3             	mov    %rax,%rbx
   127ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127af:	48 89 c7             	mov    %rax,%rdi
   127b2:	e8 fb fa ff ff       	call   122b2 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   127b7:	48 89 03             	mov    %rax,(%rbx)
   127ba:	90                   	nop
   127bb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   127bf:	c9                   	leave
   127c0:	c3                   	ret
   127c1:	90                   	nop

00000000000127c2 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   127c2:	55                   	push   %rbp
   127c3:	48 89 e5             	mov    %rsp,%rbp
   127c6:	53                   	push   %rbx
   127c7:	48 83 ec 38          	sub    $0x38,%rsp
   127cb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   127cf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   127d3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   127d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127db:	48 89 c7             	mov    %rax,%rdi
   127de:	e8 d3 01 00 00       	call   129b6 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   127e3:	48 89 c3             	mov    %rax,%rbx
   127e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127ea:	48 89 c7             	mov    %rax,%rdi
   127ed:	e8 54 f9 ff ff       	call   12146 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   127f2:	48 29 c3             	sub    %rax,%rbx
   127f5:	48 89 da             	mov    %rbx,%rdx
   127f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   127fc:	48 39 c2             	cmp    %rax,%rdx
   127ff:	0f 92 c0             	setb   %al
   12802:	84 c0                	test   %al,%al
   12804:	74 0c                	je     12812 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   12806:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1280a:	48 89 c7             	mov    %rax,%rdi
   1280d:	e8 1e 09 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12812:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12816:	48 89 c7             	mov    %rax,%rdi
   12819:	e8 28 f9 ff ff       	call   12146 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1281e:	48 89 c3             	mov    %rax,%rbx
   12821:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12825:	48 89 c7             	mov    %rax,%rdi
   12828:	e8 19 f9 ff ff       	call   12146 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1282d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12831:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12835:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12839:	48 89 d6             	mov    %rdx,%rsi
   1283c:	48 89 c7             	mov    %rax,%rdi
   1283f:	e8 ae 24 ff ff       	call   4cf2 <_ZSt3maxImERKT_S2_S2_>
   12844:	48 8b 00             	mov    (%rax),%rax
   12847:	48 01 d8             	add    %rbx,%rax
   1284a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1284e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12852:	48 89 c7             	mov    %rax,%rdi
   12855:	e8 ec f8 ff ff       	call   12146 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1285a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1285e:	72 12                	jb     12872 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   12860:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12864:	48 89 c7             	mov    %rax,%rdi
   12867:	e8 4a 01 00 00       	call   129b6 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1286c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12870:	73 0e                	jae    12880 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   12872:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12876:	48 89 c7             	mov    %rax,%rdi
   12879:	e8 38 01 00 00       	call   129b6 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1287e:	eb 04                	jmp    12884 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   12880:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12884:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12888:	c9                   	leave
   12889:	c3                   	ret

000000000001288a <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   1288a:	55                   	push   %rbp
   1288b:	48 89 e5             	mov    %rsp,%rbp
   1288e:	53                   	push   %rbx
   1288f:	48 83 ec 18          	sub    $0x18,%rsp
   12893:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12897:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   1289b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1289f:	48 89 c7             	mov    %rax,%rdi
   128a2:	e8 fd f9 ff ff       	call   122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   128a7:	48 8b 18             	mov    (%rax),%rbx
   128aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   128ae:	48 89 c7             	mov    %rax,%rdi
   128b1:	e8 ee f9 ff ff       	call   122a4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   128b6:	48 8b 00             	mov    (%rax),%rax
   128b9:	48 89 da             	mov    %rbx,%rdx
   128bc:	48 29 c2             	sub    %rax,%rdx
   128bf:	48 89 d0             	mov    %rdx,%rax
   128c2:	48 c1 f8 03          	sar    $0x3,%rax
   128c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   128ca:	c9                   	leave
   128cb:	c3                   	ret

00000000000128cc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   128cc:	55                   	push   %rbp
   128cd:	48 89 e5             	mov    %rsp,%rbp
   128d0:	48 83 ec 20          	sub    $0x20,%rsp
   128d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   128dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   128e0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   128e4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   128e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   128ec:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   128f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128f4:	48 89 c7             	mov    %rax,%rdi
   128f7:	e8 dc 00 00 00       	call   129d8 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   128fc:	c9                   	leave
   128fd:	c3                   	ret

00000000000128fe <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   128fe:	55                   	push   %rbp
   128ff:	48 89 e5             	mov    %rsp,%rbp
   12902:	48 83 ec 20          	sub    $0x20,%rsp
   12906:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1290a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   1290e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12912:	48 8b 00             	mov    (%rax),%rax
   12915:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12919:	48 c1 e2 03          	shl    $0x3,%rdx
   1291d:	48 f7 da             	neg    %rdx
   12920:	48 01 d0             	add    %rdx,%rax
   12923:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12927:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1292b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1292f:	48 89 d6             	mov    %rdx,%rsi
   12932:	48 89 c7             	mov    %rax,%rdi
   12935:	e8 4c f9 ff ff       	call   12286 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1293a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1293e:	c9                   	leave
   1293f:	c3                   	ret

0000000000012940 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   12940:	55                   	push   %rbp
   12941:	48 89 e5             	mov    %rsp,%rbp
   12944:	53                   	push   %rbx
   12945:	48 83 ec 28          	sub    $0x28,%rsp
   12949:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1294d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12951:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   12955:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12959:	48 89 c6             	mov    %rax,%rsi
   1295c:	bf 08 00 00 00       	mov    $0x8,%edi
   12961:	e8 23 0f ff ff       	call   3889 <_ZnwmPv>
   12966:	48 89 c3             	mov    %rax,%rbx
   12969:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1296d:	48 89 c7             	mov    %rax,%rdi
   12970:	e8 56 fb ff ff       	call   124cb <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   12975:	48 89 03             	mov    %rax,(%rbx)
   12978:	90                   	nop
   12979:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1297d:	c9                   	leave
   1297e:	c3                   	ret

000000000001297f <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
   1297f:	55                   	push   %rbp
   12980:	48 89 e5             	mov    %rsp,%rbp
   12983:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   12987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1298b:	5d                   	pop    %rbp
   1298c:	c3                   	ret

000000000001298d <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1298d:	55                   	push   %rbp
   1298e:	48 89 e5             	mov    %rsp,%rbp
   12991:	48 83 ec 20          	sub    $0x20,%rsp
   12995:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12999:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1299d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   129a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   129a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129a9:	48 89 d6             	mov    %rdx,%rsi
   129ac:	48 89 c7             	mov    %rax,%rdi
   129af:	e8 87 00 00 00       	call   12a3b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
   129b4:	c9                   	leave
   129b5:	c3                   	ret

00000000000129b6 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   129b6:	55                   	push   %rbp
   129b7:	48 89 e5             	mov    %rsp,%rbp
   129ba:	48 83 ec 10          	sub    $0x10,%rsp
   129be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   129c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129c6:	48 89 c7             	mov    %rax,%rdi
   129c9:	e8 ca 00 00 00       	call   12a98 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   129ce:	48 89 c7             	mov    %rax,%rdi
   129d1:	e8 6c d2 ff ff       	call   fc42 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   129d6:	c9                   	leave
   129d7:	c3                   	ret

00000000000129d8 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   129d8:	55                   	push   %rbp
   129d9:	48 89 e5             	mov    %rsp,%rbp
   129dc:	41 54                	push   %r12
   129de:	53                   	push   %rbx
   129df:	48 83 ec 20          	sub    $0x20,%rsp
   129e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   129eb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   129ef:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   129f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129f7:	48 89 c7             	mov    %rax,%rdi
   129fa:	e8 81 e7 ff ff       	call   11180 <_ZSt12__niter_baseIPPKcET_S3_>
   129ff:	49 89 c4             	mov    %rax,%r12
   12a02:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12a06:	48 89 c7             	mov    %rax,%rdi
   12a09:	e8 72 e7 ff ff       	call   11180 <_ZSt12__niter_baseIPPKcET_S3_>
   12a0e:	48 89 c3             	mov    %rax,%rbx
   12a11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a15:	48 89 c7             	mov    %rax,%rdi
   12a18:	e8 63 e7 ff ff       	call   11180 <_ZSt12__niter_baseIPPKcET_S3_>
   12a1d:	48 89 c7             	mov    %rax,%rdi
   12a20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12a24:	48 89 c1             	mov    %rax,%rcx
   12a27:	4c 89 e2             	mov    %r12,%rdx
   12a2a:	48 89 de             	mov    %rbx,%rsi
   12a2d:	e8 74 00 00 00       	call   12aa6 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   12a32:	48 83 c4 20          	add    $0x20,%rsp
   12a36:	5b                   	pop    %rbx
   12a37:	41 5c                	pop    %r12
   12a39:	5d                   	pop    %rbp
   12a3a:	c3                   	ret

0000000000012a3b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   12a3b:	55                   	push   %rbp
   12a3c:	48 89 e5             	mov    %rsp,%rbp
   12a3f:	48 83 ec 20          	sub    $0x20,%rsp
   12a43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12a47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   12a4b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   12a50:	74 40                	je     12a92 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   12a52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a56:	48 89 c7             	mov    %rax,%rdi
   12a59:	e8 ab 00 00 00       	call   12b09 <_ZSt11__addressofIPKcEPT_RS2_>
   12a5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   12a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a66:	48 89 c7             	mov    %rax,%rdi
   12a69:	e8 a9 00 00 00       	call   12b17 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
   12a6e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   12a73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12a77:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   12a7b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12a7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a83:	48 89 ce             	mov    %rcx,%rsi
   12a86:	48 89 c7             	mov    %rax,%rdi
   12a89:	e8 b0 00 00 00       	call   12b3e <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
   12a8e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   12a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   12a96:	c9                   	leave
   12a97:	c3                   	ret

0000000000012a98 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   12a98:	55                   	push   %rbp
   12a99:	48 89 e5             	mov    %rsp,%rbp
   12a9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aa4:	5d                   	pop    %rbp
   12aa5:	c3                   	ret

0000000000012aa6 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   12aa6:	55                   	push   %rbp
   12aa7:	48 89 e5             	mov    %rsp,%rbp
   12aaa:	48 83 ec 30          	sub    $0x30,%rsp
   12aae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12ab2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12ab6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12aba:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   12abe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12ac2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   12ac6:	48 c1 f8 03          	sar    $0x3,%rax
   12aca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   12ace:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12ad3:	7e 1f                	jle    12af4 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   12ad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ad9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12ae0:	00 
   12ae1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12ae5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ae9:	48 89 ce             	mov    %rcx,%rsi
   12aec:	48 89 c7             	mov    %rax,%rdi
   12aef:	e8 7c 09 ff ff       	call   3470 <memmove@plt>
      return __result + __count;
   12af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12af8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12aff:	00 
   12b00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12b04:	48 01 d0             	add    %rdx,%rax
    }
   12b07:	c9                   	leave
   12b08:	c3                   	ret

0000000000012b09 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   12b09:	55                   	push   %rbp
   12b0a:	48 89 e5             	mov    %rsp,%rbp
   12b0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   12b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b15:	5d                   	pop    %rbp
   12b16:	c3                   	ret

0000000000012b17 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   12b17:	55                   	push   %rbp
   12b18:	48 89 e5             	mov    %rsp,%rbp
   12b1b:	48 83 ec 10          	sub    $0x10,%rsp
   12b1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   12b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b27:	48 89 c6             	mov    %rax,%rsi
   12b2a:	bf 08 00 00 00       	mov    $0x8,%edi
   12b2f:	e8 55 0d ff ff       	call   3889 <_ZnwmPv>
   12b34:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   12b3b:	90                   	nop
   12b3c:	c9                   	leave
   12b3d:	c3                   	ret

0000000000012b3e <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   12b3e:	55                   	push   %rbp
   12b3f:	48 89 e5             	mov    %rsp,%rbp
   12b42:	48 83 ec 20          	sub    $0x20,%rsp
   12b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12b4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   12b52:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12b56:	48 89 c7             	mov    %rax,%rdi
   12b59:	e8 24 00 00 00       	call   12b82 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   12b5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12b62:	48 89 c7             	mov    %rax,%rdi
   12b65:	e8 2d ae ff ff       	call   d997 <_ZSt17__size_to_integerm>
   12b6a:	48 89 c1             	mov    %rax,%rcx
   12b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b71:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12b75:	48 89 ce             	mov    %rcx,%rsi
   12b78:	48 89 c7             	mov    %rax,%rdi
   12b7b:	e8 0d 00 00 00       	call   12b8d <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   12b80:	c9                   	leave
   12b81:	c3                   	ret

0000000000012b82 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   12b82:	55                   	push   %rbp
   12b83:	48 89 e5             	mov    %rsp,%rbp
   12b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   12b8a:	90                   	nop
   12b8b:	5d                   	pop    %rbp
   12b8c:	c3                   	ret

0000000000012b8d <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   12b8d:	55                   	push   %rbp
   12b8e:	48 89 e5             	mov    %rsp,%rbp
   12b91:	48 83 ec 20          	sub    $0x20,%rsp
   12b95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12b9d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12ba1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12ba6:	75 06                	jne    12bae <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bac:	eb 3a                	jmp    12be8 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   12bae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12bb2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12bb9:	00 
   12bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bbe:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12bc2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bca:	48 89 ce             	mov    %rcx,%rsi
   12bcd:	48 89 c7             	mov    %rax,%rdi
   12bd0:	e8 15 00 00 00       	call   12bea <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
   12bd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12bd9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12be0:	00 
   12be1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12be5:	48 01 d0             	add    %rdx,%rax
    }
   12be8:	c9                   	leave
   12be9:	c3                   	ret

0000000000012bea <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   12bea:	55                   	push   %rbp
   12beb:	48 89 e5             	mov    %rsp,%rbp
   12bee:	48 83 ec 20          	sub    $0x20,%rsp
   12bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12bf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12bfa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   12bfe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12c02:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c0a:	48 89 ce             	mov    %rcx,%rsi
   12c0d:	48 89 c7             	mov    %rax,%rdi
   12c10:	e8 03 00 00 00       	call   12c18 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   12c15:	90                   	nop
   12c16:	c9                   	leave
   12c17:	c3                   	ret

0000000000012c18 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   12c18:	55                   	push   %rbp
   12c19:	48 89 e5             	mov    %rsp,%rbp
   12c1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12c20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12c24:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   12c28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c2c:	48 8b 00             	mov    (%rax),%rax
   12c2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   12c33:	eb 10                	jmp    12c45 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   12c35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12c3d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   12c40:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   12c45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c49:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   12c4d:	75 e6                	jne    12c35 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   12c4f:	90                   	nop
   12c50:	90                   	nop
   12c51:	5d                   	pop    %rbp
   12c52:	c3                   	ret
   12c53:	90                   	nop

0000000000012c54 <_ZN4neko6WindowC1ERKNS_8SettingsE>:
#include "window.hpp"

namespace neko {

Window::Window(const Settings &settings)
   12c54:	55                   	push   %rbp
   12c55:	48 89 e5             	mov    %rsp,%rbp
   12c58:	48 83 ec 10          	sub    $0x10,%rsp
   12c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    : mWidth{settings.graphics.screenWidth},
   12c64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c68:	8b 50 50             	mov    0x50(%rax),%edx
   12c6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c6f:	89 50 08             	mov    %edx,0x8(%rax)
      mHeight{settings.graphics.screenHeight} {
   12c72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c76:	8b 50 54             	mov    0x54(%rax),%edx
   12c79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c7d:	89 50 0c             	mov    %edx,0xc(%rax)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
   12c80:	be 00 00 00 00       	mov    $0x0,%esi
   12c85:	bf 01 20 02 00       	mov    $0x22001,%edi
   12c8a:	e8 c1 05 ff ff       	call   3250 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
   12c8f:	be 00 00 00 00       	mov    $0x0,%esi
   12c94:	bf 03 00 02 00       	mov    $0x20003,%edi
   12c99:	e8 b2 05 ff ff       	call   3250 <glfwWindowHint@plt>
  mWindow = glfwCreateWindow(mWidth, mHeight, settings.general.appName.c_str(),
   12c9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12ca2:	48 89 c7             	mov    %rax,%rdi
   12ca5:	e8 36 04 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
   12caa:	48 89 c2             	mov    %rax,%rdx
   12cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cb1:	8b 40 0c             	mov    0xc(%rax),%eax
   12cb4:	89 c6                	mov    %eax,%esi
   12cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cba:	8b 40 08             	mov    0x8(%rax),%eax
   12cbd:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   12cc3:	b9 00 00 00 00       	mov    $0x0,%ecx
   12cc8:	89 c7                	mov    %eax,%edi
   12cca:	e8 91 07 ff ff       	call   3460 <glfwCreateWindow@plt>
   12ccf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12cd3:	48 89 02             	mov    %rax,(%rdx)
                             nullptr, nullptr);
}
   12cd6:	90                   	nop
   12cd7:	c9                   	leave
   12cd8:	c3                   	ret
   12cd9:	90                   	nop

0000000000012cda <_ZN4neko6WindowD1Ev>:

Window::~Window() { glfwDestroyWindow(mWindow); }
   12cda:	55                   	push   %rbp
   12cdb:	48 89 e5             	mov    %rsp,%rbp
   12cde:	48 83 ec 10          	sub    $0x10,%rsp
   12ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cea:	48 8b 00             	mov    (%rax),%rax
   12ced:	48 89 c7             	mov    %rax,%rdi
   12cf0:	e8 8b 03 ff ff       	call   3080 <glfwDestroyWindow@plt>
   12cf5:	90                   	nop
   12cf6:	c9                   	leave
   12cf7:	c3                   	ret

0000000000012cf8 <_ZN4neko6Window4openEv>:

void Window::open() {
   12cf8:	55                   	push   %rbp
   12cf9:	48 89 e5             	mov    %rsp,%rbp
   12cfc:	48 83 ec 10          	sub    $0x10,%rsp
   12d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(mWindow)) {
   12d04:	eb 05                	jmp    12d0b <_ZN4neko6Window4openEv+0x13>
    glfwPollEvents();
   12d06:	e8 95 05 ff ff       	call   32a0 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(mWindow)) {
   12d0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d0f:	48 8b 00             	mov    (%rax),%rax
   12d12:	48 89 c7             	mov    %rax,%rdi
   12d15:	e8 06 08 ff ff       	call   3520 <glfwWindowShouldClose@plt>
   12d1a:	85 c0                	test   %eax,%eax
   12d1c:	0f 94 c0             	sete   %al
   12d1f:	84 c0                	test   %al,%al
   12d21:	75 e3                	jne    12d06 <_ZN4neko6Window4openEv+0xe>
  }
}
   12d23:	90                   	nop
   12d24:	90                   	nop
   12d25:	c9                   	leave
   12d26:	c3                   	ret
   12d27:	90                   	nop

0000000000012d28 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>:
#include "renderer/basic/instance/instance.hpp"
#include "renderer/basic/window/window.hpp"

namespace neko {

Surface::Surface(const Instance &crInstance, const Window &crWindow)
   12d28:	55                   	push   %rbp
   12d29:	48 89 e5             	mov    %rsp,%rbp
   12d2c:	41 54                	push   %r12
   12d2e:	53                   	push   %rbx
   12d2f:	48 83 ec 20          	sub    $0x20,%rsp
   12d33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12d37:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12d3b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    : mcrInstance{crInstance} {
   12d3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d43:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12d47:	48 89 10             	mov    %rdx,(%rax)
  if (glfwCreateWindowSurface(*crInstance, *crWindow, nullptr, &mSurface) !=
   12d4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d4e:	4c 8d 60 08          	lea    0x8(%rax),%r12
   12d52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d56:	48 89 c7             	mov    %rax,%rdi
   12d59:	e8 c8 00 00 00       	call   12e26 <_ZNK4neko6WindowdeEv>
   12d5e:	48 8b 18             	mov    (%rax),%rbx
   12d61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d65:	48 89 c7             	mov    %rax,%rdi
   12d68:	e8 39 ac ff ff       	call   d9a6 <_ZNK4neko8InstancedeEv>
   12d6d:	48 8b 00             	mov    (%rax),%rax
   12d70:	4c 89 e1             	mov    %r12,%rcx
   12d73:	ba 00 00 00 00       	mov    $0x0,%edx
   12d78:	48 89 de             	mov    %rbx,%rsi
   12d7b:	48 89 c7             	mov    %rax,%rdi
   12d7e:	e8 cd 06 ff ff       	call   3450 <glfwCreateWindowSurface@plt>
   12d83:	85 c0                	test   %eax,%eax
   12d85:	0f 95 c0             	setne  %al
   12d88:	84 c0                	test   %al,%al
   12d8a:	74 51                	je     12ddd <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xb5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
   12d8c:	bf 10 00 00 00       	mov    $0x10,%edi
   12d91:	e8 7a 03 ff ff       	call   3110 <__cxa_allocate_exception@plt>
   12d96:	48 89 c3             	mov    %rax,%rbx
   12d99:	48 8d 05 28 2d 00 00 	lea    0x2d28(%rip),%rax        # 15ac8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   12da0:	48 89 c6             	mov    %rax,%rsi
   12da3:	48 89 df             	mov    %rbx,%rdi
   12da6:	e8 05 03 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
   12dab:	48 8b 05 06 02 01 00 	mov    0x10206(%rip),%rax        # 22fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   12db2:	48 89 c2             	mov    %rax,%rdx
   12db5:	48 8d 05 44 ff 00 00 	lea    0xff44(%rip),%rax        # 22d00 <_ZTISt13runtime_error@GLIBCXX_3.4>
   12dbc:	48 89 c6             	mov    %rax,%rsi
   12dbf:	48 89 df             	mov    %rbx,%rdi
   12dc2:	e8 e9 06 ff ff       	call   34b0 <__cxa_throw@plt>
   12dc7:	49 89 c4             	mov    %rax,%r12
   12dca:	48 89 df             	mov    %rbx,%rdi
   12dcd:	e8 de 03 ff ff       	call   31b0 <__cxa_free_exception@plt>
   12dd2:	4c 89 e0             	mov    %r12,%rax
   12dd5:	48 89 c7             	mov    %rax,%rdi
   12dd8:	e8 f3 06 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
}
   12ddd:	90                   	nop
   12dde:	48 83 c4 20          	add    $0x20,%rsp
   12de2:	5b                   	pop    %rbx
   12de3:	41 5c                	pop    %r12
   12de5:	5d                   	pop    %rbp
   12de6:	c3                   	ret
   12de7:	90                   	nop

0000000000012de8 <_ZN4neko7SurfaceD1Ev>:

Surface::~Surface() { vkDestroySurfaceKHR(*mcrInstance, mSurface, nullptr); }
   12de8:	55                   	push   %rbp
   12de9:	48 89 e5             	mov    %rsp,%rbp
   12dec:	53                   	push   %rbx
   12ded:	48 83 ec 18          	sub    $0x18,%rsp
   12df1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12df5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12df9:	48 8b 58 08          	mov    0x8(%rax),%rbx
   12dfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e01:	48 8b 00             	mov    (%rax),%rax
   12e04:	48 89 c7             	mov    %rax,%rdi
   12e07:	e8 9a ab ff ff       	call   d9a6 <_ZNK4neko8InstancedeEv>
   12e0c:	48 8b 00             	mov    (%rax),%rax
   12e0f:	ba 00 00 00 00       	mov    $0x0,%edx
   12e14:	48 89 de             	mov    %rbx,%rsi
   12e17:	48 89 c7             	mov    %rax,%rdi
   12e1a:	e8 a1 06 ff ff       	call   34c0 <vkDestroySurfaceKHR@plt>
   12e1f:	90                   	nop
   12e20:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12e24:	c9                   	leave
   12e25:	c3                   	ret

0000000000012e26 <_ZNK4neko6WindowdeEv>:

  Window &operator=(Window &&) = default;

  ~Window();

  const GLWindow &operator*() const noexcept { return mWindow; }
   12e26:	55                   	push   %rbp
   12e27:	48 89 e5             	mov    %rsp,%rbp
   12e2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e32:	5d                   	pop    %rbp
   12e33:	c3                   	ret

0000000000012e34 <_Z41__static_initialization_and_destruction_0ii>:
   * !resources.
   */
  std::unique_ptr<ThreadPool> mpThreadPool;
};

} /* namespace neko */
   12e34:	55                   	push   %rbp
   12e35:	48 89 e5             	mov    %rsp,%rbp
   12e38:	48 83 ec 10          	sub    $0x10,%rsp
   12e3c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   12e3f:	89 75 f8             	mov    %esi,-0x8(%rbp)
   12e42:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   12e46:	75 3b                	jne    12e83 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   12e48:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   12e4f:	75 32                	jne    12e83 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   12e51:	48 8d 05 a5 06 01 00 	lea    0x106a5(%rip),%rax        # 234fd <_ZStL8__ioinit>
   12e58:	48 89 c7             	mov    %rax,%rdi
   12e5b:	e8 e0 05 ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
   12e60:	48 8d 05 29 04 01 00 	lea    0x10429(%rip),%rax        # 23290 <__dso_handle>
   12e67:	48 89 c2             	mov    %rax,%rdx
   12e6a:	48 8d 05 8c 06 01 00 	lea    0x1068c(%rip),%rax        # 234fd <_ZStL8__ioinit>
   12e71:	48 89 c6             	mov    %rax,%rsi
   12e74:	48 8b 05 5d 01 01 00 	mov    0x1015d(%rip),%rax        # 22fd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   12e7b:	48 89 c7             	mov    %rax,%rdi
   12e7e:	e8 dd 03 ff ff       	call   3260 <__cxa_atexit@plt>
   12e83:	90                   	nop
   12e84:	c9                   	leave
   12e85:	c3                   	ret

0000000000012e86 <_GLOBAL__sub_I_engine.cpp>:
   12e86:	55                   	push   %rbp
   12e87:	48 89 e5             	mov    %rsp,%rbp
   12e8a:	be ff ff 00 00       	mov    $0xffff,%esi
   12e8f:	bf 01 00 00 00       	mov    $0x1,%edi
   12e94:	e8 9b ff ff ff       	call   12e34 <_Z41__static_initialization_and_destruction_0ii>
   12e99:	5d                   	pop    %rbp
   12e9a:	c3                   	ret

Disassembly of section .fini:

0000000000012e9c <_fini>:
   12e9c:	48 83 ec 08          	sub    $0x8,%rsp
   12ea0:	48 83 c4 08          	add    $0x8,%rsp
   12ea4:	c3                   	ret
