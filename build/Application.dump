
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	48 83 ec 08          	sub    $0x8,%rsp
    2004:	48 8b 05 ad 7f 00 00 	mov    0x7fad(%rip),%rax        # 9fb8 <__gmon_start__@Base>
    200b:	48 85 c0             	test   %rax,%rax
    200e:	74 02                	je     2012 <_init+0x12>
    2010:	ff d0                	call   *%rax
    2012:	48 83 c4 08          	add    $0x8,%rsp
    2016:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <_ZSt17__throw_bad_allocv@plt-0x10>:
    2020:	ff 35 ca 7f 00 00    	push   0x7fca(%rip)        # 9ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 cc 7f 00 00    	jmp    *0x7fcc(%rip)        # 9ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002030 <_ZSt17__throw_bad_allocv@plt>:
    2030:	ff 25 ca 7f 00 00    	jmp    *0x7fca(%rip)        # a000 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    2036:	68 00 00 00 00       	push   $0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002040 <_ZNSt13runtime_errorC1EPKc@plt>:
    2040:	ff 25 c2 7f 00 00    	jmp    *0x7fc2(%rip)        # a008 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    2046:	68 01 00 00 00       	push   $0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002050 <__cxa_begin_catch@plt>:
    2050:	ff 25 ba 7f 00 00    	jmp    *0x7fba(%rip)        # a010 <__cxa_begin_catch@CXXABI_1.3>
    2056:	68 02 00 00 00       	push   $0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002060 <__cxa_allocate_exception@plt>:
    2060:	ff 25 b2 7f 00 00    	jmp    *0x7fb2(%rip)        # a018 <__cxa_allocate_exception@CXXABI_1.3>
    2066:	68 03 00 00 00       	push   $0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002070 <_ZSt20__throw_length_errorPKc@plt>:
    2070:	ff 25 aa 7f 00 00    	jmp    *0x7faa(%rip)        # a020 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    2076:	68 04 00 00 00       	push   $0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002080 <vkEnumeratePhysicalDevices@plt>:
    2080:	ff 25 a2 7f 00 00    	jmp    *0x7fa2(%rip)        # a028 <vkEnumeratePhysicalDevices@Base>
    2086:	68 05 00 00 00       	push   $0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    2090:	ff 25 9a 7f 00 00    	jmp    *0x7f9a(%rip)        # a030 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    2096:	68 06 00 00 00       	push   $0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020a0 <__cxa_free_exception@plt>:
    20a0:	ff 25 92 7f 00 00    	jmp    *0x7f92(%rip)        # a038 <__cxa_free_exception@CXXABI_1.3>
    20a6:	68 07 00 00 00       	push   $0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020b0 <glfwGetRequiredInstanceExtensions@plt>:
    20b0:	ff 25 8a 7f 00 00    	jmp    *0x7f8a(%rip)        # a040 <glfwGetRequiredInstanceExtensions@Base>
    20b6:	68 08 00 00 00       	push   $0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020c0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    20c0:	ff 25 82 7f 00 00    	jmp    *0x7f82(%rip)        # a048 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    20c6:	68 09 00 00 00       	push   $0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020d0 <vkEnumerateInstanceExtensionProperties@plt>:
    20d0:	ff 25 7a 7f 00 00    	jmp    *0x7f7a(%rip)        # a050 <vkEnumerateInstanceExtensionProperties@Base>
    20d6:	68 0a 00 00 00       	push   $0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020e0 <glfwWindowHint@plt>:
    20e0:	ff 25 72 7f 00 00    	jmp    *0x7f72(%rip)        # a058 <glfwWindowHint@Base>
    20e6:	68 0b 00 00 00       	push   $0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020f0 <__cxa_atexit@plt>:
    20f0:	ff 25 6a 7f 00 00    	jmp    *0x7f6a(%rip)        # a060 <__cxa_atexit@GLIBC_2.2.5>
    20f6:	68 0c 00 00 00       	push   $0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002100 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    2100:	ff 25 62 7f 00 00    	jmp    *0x7f62(%rip)        # a068 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    2106:	68 0d 00 00 00       	push   $0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002110 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    2110:	ff 25 5a 7f 00 00    	jmp    *0x7f5a(%rip)        # a070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    2116:	68 0e 00 00 00       	push   $0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002120 <_Znwm@plt>:
    2120:	ff 25 52 7f 00 00    	jmp    *0x7f52(%rip)        # a078 <_Znwm@GLIBCXX_3.4>
    2126:	68 0f 00 00 00       	push   $0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002130 <_ZdlPvm@plt>:
    2130:	ff 25 4a 7f 00 00    	jmp    *0x7f4a(%rip)        # a080 <_ZdlPvm@CXXABI_1.3.9>
    2136:	68 10 00 00 00       	push   $0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002140 <vkDestroyInstance@plt>:
    2140:	ff 25 42 7f 00 00    	jmp    *0x7f42(%rip)        # a088 <vkDestroyInstance@Base>
    2146:	68 11 00 00 00       	push   $0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002150 <glfwTerminate@plt>:
    2150:	ff 25 3a 7f 00 00    	jmp    *0x7f3a(%rip)        # a090 <glfwTerminate@Base>
    2156:	68 12 00 00 00       	push   $0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002160 <glfwInit@plt>:
    2160:	ff 25 32 7f 00 00    	jmp    *0x7f32(%rip)        # a098 <glfwInit@Base>
    2166:	68 13 00 00 00       	push   $0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002170 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    2170:	ff 25 2a 7f 00 00    	jmp    *0x7f2a(%rip)        # a0a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    2176:	68 14 00 00 00       	push   $0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002180 <vkCreateInstance@plt>:
    2180:	ff 25 22 7f 00 00    	jmp    *0x7f22(%rip)        # a0a8 <vkCreateInstance@Base>
    2186:	68 15 00 00 00       	push   $0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    2190:	ff 25 1a 7f 00 00    	jmp    *0x7f1a(%rip)        # a0b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    2196:	68 16 00 00 00       	push   $0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021a0 <vkEnumerateDeviceExtensionProperties@plt>:
    21a0:	ff 25 12 7f 00 00    	jmp    *0x7f12(%rip)        # a0b8 <vkEnumerateDeviceExtensionProperties@Base>
    21a6:	68 17 00 00 00       	push   $0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    21b0:	ff 25 0a 7f 00 00    	jmp    *0x7f0a(%rip)        # a0c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    21b6:	68 18 00 00 00       	push   $0x18
    21bb:	e9 60 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021c0 <_ZNSt8ios_base4InitC1Ev@plt>:
    21c0:	ff 25 02 7f 00 00    	jmp    *0x7f02(%rip)        # a0c8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    21c6:	68 19 00 00 00       	push   $0x19
    21cb:	e9 50 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021d0 <glfwCreateWindow@plt>:
    21d0:	ff 25 fa 7e 00 00    	jmp    *0x7efa(%rip)        # a0d0 <glfwCreateWindow@Base>
    21d6:	68 1a 00 00 00       	push   $0x1a
    21db:	e9 40 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021e0 <__cxa_end_catch@plt>:
    21e0:	ff 25 f2 7e 00 00    	jmp    *0x7ef2(%rip)        # a0d8 <__cxa_end_catch@CXXABI_1.3>
    21e6:	68 1b 00 00 00       	push   $0x1b
    21eb:	e9 30 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021f0 <__cxa_throw@plt>:
    21f0:	ff 25 ea 7e 00 00    	jmp    *0x7eea(%rip)        # a0e0 <__cxa_throw@CXXABI_1.3>
    21f6:	68 1c 00 00 00       	push   $0x1c
    21fb:	e9 20 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002200 <_Unwind_Resume@plt>:
    2200:	ff 25 e2 7e 00 00    	jmp    *0x7ee2(%rip)        # a0e8 <_Unwind_Resume@GCC_3.0>
    2206:	68 1d 00 00 00       	push   $0x1d
    220b:	e9 10 fe ff ff       	jmp    2020 <_init+0x20>

Disassembly of section .plt.got:

0000000000002210 <__cxa_finalize@plt>:
    2210:	ff 25 82 7d 00 00    	jmp    *0x7d82(%rip)        # 9f98 <__cxa_finalize@GLIBC_2.2.5>
    2216:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002220 <_start>:
    2220:	31 ed                	xor    %ebp,%ebp
    2222:	49 89 d1             	mov    %rdx,%r9
    2225:	5e                   	pop    %rsi
    2226:	48 89 e2             	mov    %rsp,%rdx
    2229:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    222d:	50                   	push   %rax
    222e:	54                   	push   %rsp
    222f:	45 31 c0             	xor    %r8d,%r8d
    2232:	31 c9                	xor    %ecx,%ecx
    2234:	48 8d 3d f1 02 00 00 	lea    0x2f1(%rip),%rdi        # 252c <main>
    223b:	ff 15 5f 7d 00 00    	call   *0x7d5f(%rip)        # 9fa0 <__libc_start_main@GLIBC_2.34>
    2241:	f4                   	hlt
    2242:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2249:	00 00 00 
    224c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002250 <deregister_tm_clones>:
    2250:	48 8d 3d b9 7e 00 00 	lea    0x7eb9(%rip),%rdi        # a110 <__TMC_END__>
    2257:	48 8d 05 b2 7e 00 00 	lea    0x7eb2(%rip),%rax        # a110 <__TMC_END__>
    225e:	48 39 f8             	cmp    %rdi,%rax
    2261:	74 15                	je     2278 <deregister_tm_clones+0x28>
    2263:	48 8b 05 46 7d 00 00 	mov    0x7d46(%rip),%rax        # 9fb0 <_ITM_deregisterTMCloneTable@Base>
    226a:	48 85 c0             	test   %rax,%rax
    226d:	74 09                	je     2278 <deregister_tm_clones+0x28>
    226f:	ff e0                	jmp    *%rax
    2271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2278:	c3                   	ret
    2279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002280 <register_tm_clones>:
    2280:	48 8d 3d 89 7e 00 00 	lea    0x7e89(%rip),%rdi        # a110 <__TMC_END__>
    2287:	48 8d 35 82 7e 00 00 	lea    0x7e82(%rip),%rsi        # a110 <__TMC_END__>
    228e:	48 29 fe             	sub    %rdi,%rsi
    2291:	48 89 f0             	mov    %rsi,%rax
    2294:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2298:	48 c1 f8 03          	sar    $0x3,%rax
    229c:	48 01 c6             	add    %rax,%rsi
    229f:	48 d1 fe             	sar    %rsi
    22a2:	74 14                	je     22b8 <register_tm_clones+0x38>
    22a4:	48 8b 05 15 7d 00 00 	mov    0x7d15(%rip),%rax        # 9fc0 <_ITM_registerTMCloneTable@Base>
    22ab:	48 85 c0             	test   %rax,%rax
    22ae:	74 08                	je     22b8 <register_tm_clones+0x38>
    22b0:	ff e0                	jmp    *%rax
    22b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    22b8:	c3                   	ret
    22b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000022c0 <__do_global_dtors_aux>:
    22c0:	f3 0f 1e fa          	endbr64
    22c4:	80 3d a5 80 00 00 00 	cmpb   $0x0,0x80a5(%rip)        # a370 <completed.0>
    22cb:	75 2b                	jne    22f8 <__do_global_dtors_aux+0x38>
    22cd:	55                   	push   %rbp
    22ce:	48 83 3d c2 7c 00 00 	cmpq   $0x0,0x7cc2(%rip)        # 9f98 <__cxa_finalize@GLIBC_2.2.5>
    22d5:	00 
    22d6:	48 89 e5             	mov    %rsp,%rbp
    22d9:	74 0c                	je     22e7 <__do_global_dtors_aux+0x27>
    22db:	48 8b 3d 16 7e 00 00 	mov    0x7e16(%rip),%rdi        # a0f8 <__dso_handle>
    22e2:	e8 29 ff ff ff       	call   2210 <__cxa_finalize@plt>
    22e7:	e8 64 ff ff ff       	call   2250 <deregister_tm_clones>
    22ec:	c6 05 7d 80 00 00 01 	movb   $0x1,0x807d(%rip)        # a370 <completed.0>
    22f3:	5d                   	pop    %rbp
    22f4:	c3                   	ret
    22f5:	0f 1f 00             	nopl   (%rax)
    22f8:	c3                   	ret
    22f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002300 <frame_dummy>:
    2300:	f3 0f 1e fa          	endbr64
    2304:	e9 77 ff ff ff       	jmp    2280 <register_tm_clones>

0000000000002309 <_Z14protected_mainv>:
#include <vkh.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    2309:	55                   	push   %rbp
    230a:	48 89 e5             	mov    %rsp,%rbp
    230d:	53                   	push   %rbx
    230e:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
  glfwInit();
    2315:	e8 46 fe ff ff       	call   2160 <glfwInit@plt>

  auto appInfo = vkh::makeApplicationInfo();
    231a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    231e:	48 8d 15 bb 32 00 00 	lea    0x32bb(%rip),%rdx        # 55e0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2325:	48 89 d6             	mov    %rdx,%rsi
    2328:	48 89 c7             	mov    %rax,%rdi
    232b:	e8 93 22 00 00       	call   45c3 <_ZN3vkh19makeApplicationInfoEPKc>
  auto createInfo = vkh::makeInstanceCreateInfo(&appInfo);
    2330:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    2337:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
    233b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    2341:	b9 00 00 00 00       	mov    $0x0,%ecx
    2346:	ba 00 00 00 00       	mov    $0x0,%edx
    234b:	48 89 c7             	mov    %rax,%rdi
    234e:	e8 dc 22 00 00       	call   462f <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcPKv>
  auto instance = vkh::createInstance(&createInfo);
    2353:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    235a:	be 00 00 00 00       	mov    $0x0,%esi
    235f:	48 89 c7             	mov    %rax,%rdi
    2362:	e8 2c 09 00 00       	call   2c93 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    2367:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

  auto list = vkh::getAvailableInstanceExtensionList();
    236b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    2372:	be 00 00 00 00       	mov    $0x0,%esi
    2377:	48 89 c7             	mov    %rax,%rdi
    237a:	e8 a7 09 00 00       	call   2d26 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &ext : list) {
    237f:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    2386:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    238a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    238e:	48 89 c7             	mov    %rax,%rdi
    2391:	e8 04 03 00 00       	call   269a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    2396:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    239d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    23a1:	48 89 c7             	mov    %rax,%rdi
    23a4:	e8 17 03 00 00       	call   26c0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    23a9:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    23b0:	eb 45                	jmp    23f7 <_Z14protected_mainv+0xee>
    23b2:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    23b9:	48 89 c7             	mov    %rax,%rdi
    23bc:	e8 87 03 00 00       	call   2748 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    23c1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    std::cout << ext.extensionName << '\n';
    23c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    23c9:	48 89 c6             	mov    %rax,%rsi
    23cc:	48 8d 05 6d 7d 00 00 	lea    0x7d6d(%rip),%rax        # a140 <_ZSt4cout@GLIBCXX_3.4>
    23d3:	48 89 c7             	mov    %rax,%rdi
    23d6:	e8 35 fd ff ff       	call   2110 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    23db:	be 0a 00 00 00       	mov    $0xa,%esi
    23e0:	48 89 c7             	mov    %rax,%rdi
    23e3:	e8 88 fd ff ff       	call   2170 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &ext : list) {
    23e8:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    23ef:	48 89 c7             	mov    %rax,%rdi
    23f2:	e8 2d 03 00 00       	call   2724 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    23f7:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    23fe:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    2405:	48 89 d6             	mov    %rdx,%rsi
    2408:	48 89 c7             	mov    %rax,%rdi
    240b:	e8 d9 02 00 00       	call   26e9 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    2410:	84 c0                	test   %al,%al
    2412:	75 9e                	jne    23b2 <_Z14protected_mainv+0xa9>
  }

  auto list1 = vkh::getRequiredInstanceExtensionList();
    2414:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    241b:	48 89 c7             	mov    %rax,%rdi
    241e:	e8 eb 0b 00 00       	call   300e <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev>
  for (const auto &ext : list1) {
    2423:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    242a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    242e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2432:	48 89 c7             	mov    %rax,%rdi
    2435:	e8 64 03 00 00       	call   279e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
    243a:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    2441:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2445:	48 89 c7             	mov    %rax,%rdi
    2448:	e8 77 03 00 00       	call   27c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
    244d:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    2454:	eb 45                	jmp    249b <_Z14protected_mainv+0x192>
    2456:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
    245d:	48 89 c7             	mov    %rax,%rdi
    2460:	e8 e3 03 00 00       	call   2848 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
    2465:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    std::cout << ext << '\n';
    2469:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    246d:	48 89 c6             	mov    %rax,%rsi
    2470:	48 8d 05 c9 7c 00 00 	lea    0x7cc9(%rip),%rax        # a140 <_ZSt4cout@GLIBCXX_3.4>
    2477:	48 89 c7             	mov    %rax,%rdi
    247a:	e8 81 fc ff ff       	call   2100 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    247f:	be 0a 00 00 00       	mov    $0xa,%esi
    2484:	48 89 c7             	mov    %rax,%rdi
    2487:	e8 e4 fc ff ff       	call   2170 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &ext : list1) {
    248c:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
    2493:	48 89 c7             	mov    %rax,%rdi
    2496:	e8 8d 03 00 00       	call   2828 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>
    249b:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    24a2:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
    24a9:	48 89 d6             	mov    %rdx,%rsi
    24ac:	48 89 c7             	mov    %rax,%rdi
    24af:	e8 39 03 00 00       	call   27ed <_ZN9__gnu_cxxneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_>
    24b4:	84 c0                	test   %al,%al
    24b6:	75 9e                	jne    2456 <_Z14protected_mainv+0x14d>
  }

  vkDestroyInstance(instance, nullptr);
    24b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24bc:	be 00 00 00 00       	mov    $0x0,%esi
    24c1:	48 89 c7             	mov    %rax,%rdi
    24c4:	e8 77 fc ff ff       	call   2140 <vkDestroyInstance@plt>

  glfwTerminate();
    24c9:	e8 82 fc ff ff       	call   2150 <glfwTerminate@plt>
  return EXIT_SUCCESS;
    24ce:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    24d3:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    24da:	48 89 c7             	mov    %rax,%rdi
    24dd:	e8 78 02 00 00       	call   275a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
    24e2:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    24e9:	48 89 c7             	mov    %rax,%rdi
    24ec:	e8 65 01 00 00       	call   2656 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
  return EXIT_SUCCESS;
    24f1:	89 d8                	mov    %ebx,%eax
    24f3:	eb 31                	jmp    2526 <_Z14protected_mainv+0x21d>
}
    24f5:	48 89 c3             	mov    %rax,%rbx
    24f8:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    24ff:	48 89 c7             	mov    %rax,%rdi
    2502:	e8 53 02 00 00       	call   275a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
    2507:	eb 03                	jmp    250c <_Z14protected_mainv+0x203>
    2509:	48 89 c3             	mov    %rax,%rbx
    250c:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    2513:	48 89 c7             	mov    %rax,%rdi
    2516:	e8 3b 01 00 00       	call   2656 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    251b:	48 89 d8             	mov    %rbx,%rax
    251e:	48 89 c7             	mov    %rax,%rdi
    2521:	e8 da fc ff ff       	call   2200 <_Unwind_Resume@plt>
    2526:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    252a:	c9                   	leave
    252b:	c3                   	ret

000000000000252c <main>:

int main() {
    252c:	55                   	push   %rbp
    252d:	48 89 e5             	mov    %rsp,%rbp
    2530:	53                   	push   %rbx
    2531:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    2535:	e8 cf fd ff ff       	call   2309 <_Z14protected_mainv>
    253a:	e9 aa 00 00 00       	jmp    25e9 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    253f:	b8 01 00 00 00       	mov    $0x1,%eax
    2544:	e9 a0 00 00 00       	jmp    25e9 <main+0xbd>
  } catch (const std::exception &e) {
    2549:	48 83 fa 01          	cmp    $0x1,%rdx
    254d:	75 49                	jne    2598 <main+0x6c>
    254f:	48 89 c7             	mov    %rax,%rdi
    2552:	e8 f9 fa ff ff       	call   2050 <__cxa_begin_catch@plt>
    2557:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    255b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    255f:	48 8b 00             	mov    (%rax),%rax
    2562:	48 83 c0 10          	add    $0x10,%rax
    2566:	48 8b 10             	mov    (%rax),%rdx
    2569:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    256d:	48 89 c7             	mov    %rax,%rdi
    2570:	ff d2                	call   *%rdx
    2572:	48 89 c6             	mov    %rax,%rsi
    2575:	48 8d 05 e4 7c 00 00 	lea    0x7ce4(%rip),%rax        # a260 <_ZSt4cerr@GLIBCXX_3.4>
    257c:	48 89 c7             	mov    %rax,%rdi
    257f:	e8 8c fb ff ff       	call   2110 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    2584:	be 0a 00 00 00       	mov    $0xa,%esi
    2589:	48 89 c7             	mov    %rax,%rdi
    258c:	e8 df fb ff ff       	call   2170 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    2591:	e8 4a fc ff ff       	call   21e0 <__cxa_end_catch@plt>
    2596:	eb a7                	jmp    253f <main+0x13>
    2598:	48 89 c7             	mov    %rax,%rdi
    259b:	e8 b0 fa ff ff       	call   2050 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    25a0:	48 8d 05 4c 30 00 00 	lea    0x304c(%rip),%rax        # 55f3 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x1b>
    25a7:	48 89 c6             	mov    %rax,%rsi
    25aa:	48 8d 05 af 7c 00 00 	lea    0x7caf(%rip),%rax        # a260 <_ZSt4cerr@GLIBCXX_3.4>
    25b1:	48 89 c7             	mov    %rax,%rdi
    25b4:	e8 57 fb ff ff       	call   2110 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    25b9:	e8 22 fc ff ff       	call   21e0 <__cxa_end_catch@plt>
    25be:	e9 7c ff ff ff       	jmp    253f <main+0x13>
  } catch (...) {
    25c3:	48 89 c3             	mov    %rax,%rbx
    25c6:	e8 15 fc ff ff       	call   21e0 <__cxa_end_catch@plt>
    25cb:	48 89 d8             	mov    %rbx,%rax
    25ce:	48 89 c7             	mov    %rax,%rdi
    25d1:	e8 2a fc ff ff       	call   2200 <_Unwind_Resume@plt>
  }
    25d6:	48 89 c3             	mov    %rax,%rbx
    25d9:	e8 02 fc ff ff       	call   21e0 <__cxa_end_catch@plt>
    25de:	48 89 d8             	mov    %rbx,%rax
    25e1:	48 89 c7             	mov    %rax,%rdi
    25e4:	e8 17 fc ff ff       	call   2200 <_Unwind_Resume@plt>
    25e9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    25ed:	c9                   	leave
    25ee:	c3                   	ret

00000000000025ef <_Z41__static_initialization_and_destruction_0ii>:
    25ef:	55                   	push   %rbp
    25f0:	48 89 e5             	mov    %rsp,%rbp
    25f3:	48 83 ec 10          	sub    $0x10,%rsp
    25f7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    25fa:	89 75 f8             	mov    %esi,-0x8(%rbp)
    25fd:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    2601:	75 3b                	jne    263e <_Z41__static_initialization_and_destruction_0ii+0x4f>
    2603:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    260a:	75 32                	jne    263e <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    260c:	48 8d 05 5e 7d 00 00 	lea    0x7d5e(%rip),%rax        # a371 <_ZStL8__ioinit>
    2613:	48 89 c7             	mov    %rax,%rdi
    2616:	e8 a5 fb ff ff       	call   21c0 <_ZNSt8ios_base4InitC1Ev@plt>
    261b:	48 8d 05 d6 7a 00 00 	lea    0x7ad6(%rip),%rax        # a0f8 <__dso_handle>
    2622:	48 89 c2             	mov    %rax,%rdx
    2625:	48 8d 05 45 7d 00 00 	lea    0x7d45(%rip),%rax        # a371 <_ZStL8__ioinit>
    262c:	48 89 c6             	mov    %rax,%rsi
    262f:	48 8b 05 92 79 00 00 	mov    0x7992(%rip),%rax        # 9fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    2636:	48 89 c7             	mov    %rax,%rdi
    2639:	e8 b2 fa ff ff       	call   20f0 <__cxa_atexit@plt>
    263e:	90                   	nop
    263f:	c9                   	leave
    2640:	c3                   	ret

0000000000002641 <_GLOBAL__sub_I__Z14protected_mainv>:
    2641:	55                   	push   %rbp
    2642:	48 89 e5             	mov    %rsp,%rbp
    2645:	be ff ff 00 00       	mov    $0xffff,%esi
    264a:	bf 01 00 00 00       	mov    $0x1,%edi
    264f:	e8 9b ff ff ff       	call   25ef <_Z41__static_initialization_and_destruction_0ii>
    2654:	5d                   	pop    %rbp
    2655:	c3                   	ret

0000000000002656 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    2656:	55                   	push   %rbp
    2657:	48 89 e5             	mov    %rsp,%rbp
    265a:	48 83 ec 10          	sub    $0x10,%rsp
    265e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    2662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2666:	48 89 c7             	mov    %rax,%rdi
    2669:	e8 60 02 00 00       	call   28ce <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    266e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    2671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2675:	48 8b 48 08          	mov    0x8(%rax),%rcx
    2679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    267d:	48 8b 00             	mov    (%rax),%rax
    2680:	48 89 ce             	mov    %rcx,%rsi
    2683:	48 89 c7             	mov    %rax,%rdi
    2686:	e8 51 02 00 00       	call   28dc <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    268b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    268f:	48 89 c7             	mov    %rax,%rdi
    2692:	e8 df 01 00 00       	call   2876 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    2697:	90                   	nop
    2698:	c9                   	leave
    2699:	c3                   	ret

000000000000269a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      iterator
      begin() _GLIBCXX_NOEXCEPT
    269a:	55                   	push   %rbp
    269b:	48 89 e5             	mov    %rsp,%rbp
    269e:	48 83 ec 20          	sub    $0x20,%rsp
    26a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    26a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    26aa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    26ae:	48 89 d6             	mov    %rdx,%rsi
    26b1:	48 89 c7             	mov    %rax,%rdi
    26b4:	e8 4d 02 00 00       	call   2906 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    26b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26bd:	c9                   	leave
    26be:	c3                   	ret
    26bf:	90                   	nop

00000000000026c0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      iterator
      end() _GLIBCXX_NOEXCEPT
    26c0:	55                   	push   %rbp
    26c1:	48 89 e5             	mov    %rsp,%rbp
    26c4:	48 83 ec 20          	sub    $0x20,%rsp
    26c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    26cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    26d0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    26d4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    26d8:	48 89 d6             	mov    %rdx,%rsi
    26db:	48 89 c7             	mov    %rax,%rdi
    26de:	e8 23 02 00 00       	call   2906 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    26e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26e7:	c9                   	leave
    26e8:	c3                   	ret

00000000000026e9 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    26e9:	55                   	push   %rbp
    26ea:	48 89 e5             	mov    %rsp,%rbp
    26ed:	53                   	push   %rbx
    26ee:	48 83 ec 18          	sub    $0x18,%rsp
    26f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    26f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    26fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    26fe:	48 89 c7             	mov    %rax,%rdi
    2701:	e8 1e 02 00 00       	call   2924 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    2706:	48 8b 18             	mov    (%rax),%rbx
    2709:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    270d:	48 89 c7             	mov    %rax,%rdi
    2710:	e8 0f 02 00 00       	call   2924 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    2715:	48 8b 00             	mov    (%rax),%rax
    2718:	48 39 c3             	cmp    %rax,%rbx
    271b:	0f 95 c0             	setne  %al
    271e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2722:	c9                   	leave
    2723:	c3                   	ret

0000000000002724 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    2724:	55                   	push   %rbp
    2725:	48 89 e5             	mov    %rsp,%rbp
    2728:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    272c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2730:	48 8b 00             	mov    (%rax),%rax
    2733:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    273a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    273e:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    2741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    2745:	5d                   	pop    %rbp
    2746:	c3                   	ret
    2747:	90                   	nop

0000000000002748 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    2748:	55                   	push   %rbp
    2749:	48 89 e5             	mov    %rsp,%rbp
    274c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    2750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2754:	48 8b 00             	mov    (%rax),%rax
    2757:	5d                   	pop    %rbp
    2758:	c3                   	ret
    2759:	90                   	nop

000000000000275a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    275a:	55                   	push   %rbp
    275b:	48 89 e5             	mov    %rsp,%rbp
    275e:	48 83 ec 10          	sub    $0x10,%rsp
    2762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    2766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    276a:	48 89 c7             	mov    %rax,%rdi
    276d:	e8 2a 02 00 00       	call   299c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    2772:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    2775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2779:	48 8b 48 08          	mov    0x8(%rax),%rcx
    277d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2781:	48 8b 00             	mov    (%rax),%rax
    2784:	48 89 ce             	mov    %rcx,%rsi
    2787:	48 89 c7             	mov    %rax,%rdi
    278a:	e8 1b 02 00 00       	call   29aa <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>
      }
    278f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2793:	48 89 c7             	mov    %rax,%rdi
    2796:	e8 b3 01 00 00       	call   294e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
    279b:	90                   	nop
    279c:	c9                   	leave
    279d:	c3                   	ret

000000000000279e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    279e:	55                   	push   %rbp
    279f:	48 89 e5             	mov    %rsp,%rbp
    27a2:	48 83 ec 20          	sub    $0x20,%rsp
    27a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    27aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    27ae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    27b2:	48 89 d6             	mov    %rdx,%rsi
    27b5:	48 89 c7             	mov    %rax,%rdi
    27b8:	e8 17 02 00 00       	call   29d4 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS7_>
    27bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27c1:	c9                   	leave
    27c2:	c3                   	ret
    27c3:	90                   	nop

00000000000027c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    27c4:	55                   	push   %rbp
    27c5:	48 89 e5             	mov    %rsp,%rbp
    27c8:	48 83 ec 20          	sub    $0x20,%rsp
    27cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    27d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    27d4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    27d8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    27dc:	48 89 d6             	mov    %rdx,%rsi
    27df:	48 89 c7             	mov    %rax,%rdi
    27e2:	e8 ed 01 00 00       	call   29d4 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS7_>
    27e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27eb:	c9                   	leave
    27ec:	c3                   	ret

00000000000027ed <_ZN9__gnu_cxxneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    27ed:	55                   	push   %rbp
    27ee:	48 89 e5             	mov    %rsp,%rbp
    27f1:	53                   	push   %rbx
    27f2:	48 83 ec 18          	sub    $0x18,%rsp
    27f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    27fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    27fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2802:	48 89 c7             	mov    %rax,%rdi
    2805:	e8 e8 01 00 00       	call   29f2 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    280a:	48 8b 18             	mov    (%rax),%rbx
    280d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2811:	48 89 c7             	mov    %rax,%rdi
    2814:	e8 d9 01 00 00       	call   29f2 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
    2819:	48 8b 00             	mov    (%rax),%rax
    281c:	48 39 c3             	cmp    %rax,%rbx
    281f:	0f 95 c0             	setne  %al
    2822:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2826:	c9                   	leave
    2827:	c3                   	ret

0000000000002828 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    2828:	55                   	push   %rbp
    2829:	48 89 e5             	mov    %rsp,%rbp
    282c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    2830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2834:	48 8b 00             	mov    (%rax),%rax
    2837:	48 8d 50 20          	lea    0x20(%rax),%rdx
    283b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    283f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    2842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    2846:	5d                   	pop    %rbp
    2847:	c3                   	ret

0000000000002848 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    2848:	55                   	push   %rbp
    2849:	48 89 e5             	mov    %rsp,%rbp
    284c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    2850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2854:	48 8b 00             	mov    (%rax),%rax
    2857:	5d                   	pop    %rbp
    2858:	c3                   	ret
    2859:	90                   	nop

000000000000285a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    285a:	55                   	push   %rbp
    285b:	48 89 e5             	mov    %rsp,%rbp
    285e:	48 83 ec 10          	sub    $0x10,%rsp
    2862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    286a:	48 89 c7             	mov    %rax,%rdi
    286d:	e8 8e 01 00 00       	call   2a00 <_ZNSaI21VkExtensionPropertiesED1Ev>
    2872:	90                   	nop
    2873:	c9                   	leave
    2874:	c3                   	ret
    2875:	90                   	nop

0000000000002876 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    2876:	55                   	push   %rbp
    2877:	48 89 e5             	mov    %rsp,%rbp
    287a:	48 83 ec 10          	sub    $0x10,%rsp
    287e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    2882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2886:	48 8b 50 10          	mov    0x10(%rax),%rdx
    288a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    288e:	48 8b 00             	mov    (%rax),%rax
    2891:	48 29 c2             	sub    %rax,%rdx
    2894:	48 c1 fa 02          	sar    $0x2,%rdx
    2898:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    289f:	fc c0 0f 
    28a2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    28a6:	48 89 c2             	mov    %rax,%rdx
    28a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    28ad:	48 8b 08             	mov    (%rax),%rcx
    28b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    28b4:	48 89 ce             	mov    %rcx,%rsi
    28b7:	48 89 c7             	mov    %rax,%rdi
    28ba:	e8 5d 01 00 00       	call   2a1c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    28bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    28c3:	48 89 c7             	mov    %rax,%rdi
    28c6:	e8 8f ff ff ff       	call   285a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    28cb:	90                   	nop
    28cc:	c9                   	leave
    28cd:	c3                   	ret

00000000000028ce <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    28ce:	55                   	push   %rbp
    28cf:	48 89 e5             	mov    %rsp,%rbp
    28d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    28d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    28da:	5d                   	pop    %rbp
    28db:	c3                   	ret

00000000000028dc <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    28dc:	55                   	push   %rbp
    28dd:	48 89 e5             	mov    %rsp,%rbp
    28e0:	48 83 ec 20          	sub    $0x20,%rsp
    28e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    28e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    28ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    28f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    28f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    28f8:	48 89 d6             	mov    %rdx,%rsi
    28fb:	48 89 c7             	mov    %rax,%rdi
    28fe:	e8 4e 01 00 00       	call   2a51 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    2903:	90                   	nop
    2904:	c9                   	leave
    2905:	c3                   	ret

0000000000002906 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    2906:	55                   	push   %rbp
    2907:	48 89 e5             	mov    %rsp,%rbp
    290a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    290e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    2912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2916:	48 8b 10             	mov    (%rax),%rdx
    2919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    291d:	48 89 10             	mov    %rdx,(%rax)
    2920:	90                   	nop
    2921:	5d                   	pop    %rbp
    2922:	c3                   	ret
    2923:	90                   	nop

0000000000002924 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    2924:	55                   	push   %rbp
    2925:	48 89 e5             	mov    %rsp,%rbp
    2928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    292c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2930:	5d                   	pop    %rbp
    2931:	c3                   	ret

0000000000002932 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    2932:	55                   	push   %rbp
    2933:	48 89 e5             	mov    %rsp,%rbp
    2936:	48 83 ec 10          	sub    $0x10,%rsp
    293a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    293e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2942:	48 89 c7             	mov    %rax,%rdi
    2945:	e8 2e 01 00 00       	call   2a78 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
    294a:	90                   	nop
    294b:	c9                   	leave
    294c:	c3                   	ret
    294d:	90                   	nop

000000000000294e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    294e:	55                   	push   %rbp
    294f:	48 89 e5             	mov    %rsp,%rbp
    2952:	48 83 ec 10          	sub    $0x10,%rsp
    2956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    295a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    295e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    2962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2966:	48 8b 00             	mov    (%rax),%rax
    2969:	48 29 c2             	sub    %rax,%rdx
    296c:	48 89 d0             	mov    %rdx,%rax
    296f:	48 c1 f8 05          	sar    $0x5,%rax
	_M_deallocate(_M_impl._M_start,
    2973:	48 89 c2             	mov    %rax,%rdx
    2976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    297a:	48 8b 08             	mov    (%rax),%rcx
    297d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2981:	48 89 ce             	mov    %rcx,%rsi
    2984:	48 89 c7             	mov    %rax,%rdi
    2987:	e8 08 01 00 00       	call   2a94 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>
      }
    298c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2990:	48 89 c7             	mov    %rax,%rdi
    2993:	e8 9a ff ff ff       	call   2932 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>
    2998:	90                   	nop
    2999:	c9                   	leave
    299a:	c3                   	ret
    299b:	90                   	nop

000000000000299c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    299c:	55                   	push   %rbp
    299d:	48 89 e5             	mov    %rsp,%rbp
    29a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    29a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29a8:	5d                   	pop    %rbp
    29a9:	c3                   	ret

00000000000029aa <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    29aa:	55                   	push   %rbp
    29ab:	48 89 e5             	mov    %rsp,%rbp
    29ae:	48 83 ec 20          	sub    $0x20,%rsp
    29b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    29b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    29ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    29be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    29c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29c6:	48 89 d6             	mov    %rdx,%rsi
    29c9:	48 89 c7             	mov    %rax,%rdi
    29cc:	e8 f8 00 00 00       	call   2ac9 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    }
    29d1:	90                   	nop
    29d2:	c9                   	leave
    29d3:	c3                   	ret

00000000000029d4 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS7_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    29d4:	55                   	push   %rbp
    29d5:	48 89 e5             	mov    %rsp,%rbp
    29d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    29dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    29e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    29e4:	48 8b 10             	mov    (%rax),%rdx
    29e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29eb:	48 89 10             	mov    %rdx,(%rax)
    29ee:	90                   	nop
    29ef:	5d                   	pop    %rbp
    29f0:	c3                   	ret
    29f1:	90                   	nop

00000000000029f2 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    29f2:	55                   	push   %rbp
    29f3:	48 89 e5             	mov    %rsp,%rbp
    29f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    29fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29fe:	5d                   	pop    %rbp
    29ff:	c3                   	ret

0000000000002a00 <_ZNSaI21VkExtensionPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    2a00:	55                   	push   %rbp
    2a01:	48 89 e5             	mov    %rsp,%rbp
    2a04:	48 83 ec 10          	sub    $0x10,%rsp
    2a08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a10:	48 89 c7             	mov    %rax,%rdi
    2a13:	e8 d8 00 00 00       	call   2af0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    2a18:	90                   	nop
    2a19:	c9                   	leave
    2a1a:	c3                   	ret
    2a1b:	90                   	nop

0000000000002a1c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    2a1c:	55                   	push   %rbp
    2a1d:	48 89 e5             	mov    %rsp,%rbp
    2a20:	48 83 ec 20          	sub    $0x20,%rsp
    2a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2a28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2a2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    2a30:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2a35:	74 17                	je     2a4e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    2a37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a3b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2a3f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2a43:	48 89 ce             	mov    %rcx,%rsi
    2a46:	48 89 c7             	mov    %rax,%rdi
    2a49:	e8 ad 00 00 00       	call   2afb <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    2a4e:	90                   	nop
    2a4f:	c9                   	leave
    2a50:	c3                   	ret

0000000000002a51 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    2a51:	55                   	push   %rbp
    2a52:	48 89 e5             	mov    %rsp,%rbp
    2a55:	48 83 ec 10          	sub    $0x10,%rsp
    2a59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2a5d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    2a61:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2a65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a69:	48 89 d6             	mov    %rdx,%rsi
    2a6c:	48 89 c7             	mov    %rax,%rdi
    2a6f:	e8 b5 00 00 00       	call   2b29 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    2a74:	90                   	nop
    2a75:	c9                   	leave
    2a76:	c3                   	ret
    2a77:	90                   	nop

0000000000002a78 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>:
    2a78:	55                   	push   %rbp
    2a79:	48 89 e5             	mov    %rsp,%rbp
    2a7c:	48 83 ec 10          	sub    $0x10,%rsp
    2a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2a84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a88:	48 89 c7             	mov    %rax,%rdi
    2a8b:	e8 a8 00 00 00       	call   2b38 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
    2a90:	90                   	nop
    2a91:	c9                   	leave
    2a92:	c3                   	ret
    2a93:	90                   	nop

0000000000002a94 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>:
      _M_deallocate(pointer __p, size_t __n)
    2a94:	55                   	push   %rbp
    2a95:	48 89 e5             	mov    %rsp,%rbp
    2a98:	48 83 ec 20          	sub    $0x20,%rsp
    2a9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2aa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2aa4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    2aa8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2aad:	74 17                	je     2ac6 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    2aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ab3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2ab7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2abb:	48 89 ce             	mov    %rcx,%rsi
    2abe:	48 89 c7             	mov    %rax,%rdi
    2ac1:	e8 7d 00 00 00       	call   2b43 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m>
      }
    2ac6:	90                   	nop
    2ac7:	c9                   	leave
    2ac8:	c3                   	ret

0000000000002ac9 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    2ac9:	55                   	push   %rbp
    2aca:	48 89 e5             	mov    %rsp,%rbp
    2acd:	48 83 ec 10          	sub    $0x10,%rsp
    2ad1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2ad5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    2ad9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ae1:	48 89 d6             	mov    %rdx,%rsi
    2ae4:	48 89 c7             	mov    %rax,%rdi
    2ae7:	e8 85 00 00 00       	call   2b71 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>
    }
    2aec:	90                   	nop
    2aed:	c9                   	leave
    2aee:	c3                   	ret
    2aef:	90                   	nop

0000000000002af0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    2af0:	55                   	push   %rbp
    2af1:	48 89 e5             	mov    %rsp,%rbp
    2af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2af8:	90                   	nop
    2af9:	5d                   	pop    %rbp
    2afa:	c3                   	ret

0000000000002afb <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    2afb:	55                   	push   %rbp
    2afc:	48 89 e5             	mov    %rsp,%rbp
    2aff:	48 83 ec 20          	sub    $0x20,%rsp
    2b03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2b07:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2b0b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    2b0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2b13:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b1b:	48 89 ce             	mov    %rcx,%rsi
    2b1e:	48 89 c7             	mov    %rax,%rdi
    2b21:	e8 84 00 00 00       	call   2baa <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    2b26:	90                   	nop
    2b27:	c9                   	leave
    2b28:	c3                   	ret

0000000000002b29 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    2b29:	55                   	push   %rbp
    2b2a:	48 89 e5             	mov    %rsp,%rbp
    2b2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2b31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2b35:	90                   	nop
    2b36:	5d                   	pop    %rbp
    2b37:	c3                   	ret

0000000000002b38 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>:
    2b38:	55                   	push   %rbp
    2b39:	48 89 e5             	mov    %rsp,%rbp
    2b3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2b40:	90                   	nop
    2b41:	5d                   	pop    %rbp
    2b42:	c3                   	ret

0000000000002b43 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    2b43:	55                   	push   %rbp
    2b44:	48 89 e5             	mov    %rsp,%rbp
    2b47:	48 83 ec 20          	sub    $0x20,%rsp
    2b4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2b4f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2b53:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    2b57:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2b5b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2b5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b63:	48 89 ce             	mov    %rcx,%rsi
    2b66:	48 89 c7             	mov    %rax,%rdi
    2b69:	e8 76 00 00 00       	call   2be4 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>
    2b6e:	90                   	nop
    2b6f:	c9                   	leave
    2b70:	c3                   	ret

0000000000002b71 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    2b71:	55                   	push   %rbp
    2b72:	48 89 e5             	mov    %rsp,%rbp
    2b75:	48 83 ec 10          	sub    $0x10,%rsp
    2b79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2b7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    2b81:	eb 19                	jmp    2b9c <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    2b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b87:	48 89 c7             	mov    %rax,%rdi
    2b8a:	e8 85 00 00 00       	call   2c14 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
    2b8f:	48 89 c7             	mov    %rax,%rdi
    2b92:	e8 8b 00 00 00       	call   2c22 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
    2b97:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    2b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ba0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    2ba4:	75 dd                	jne    2b83 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x12>
	}
    2ba6:	90                   	nop
    2ba7:	90                   	nop
    2ba8:	c9                   	leave
    2ba9:	c3                   	ret

0000000000002baa <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    2baa:	55                   	push   %rbp
    2bab:	48 89 e5             	mov    %rsp,%rbp
    2bae:	48 83 ec 20          	sub    $0x20,%rsp
    2bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2bb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2bba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    2bbe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2bc2:	48 89 d0             	mov    %rdx,%rax
    2bc5:	48 c1 e0 06          	shl    $0x6,%rax
    2bc9:	48 01 d0             	add    %rdx,%rax
    2bcc:	48 c1 e0 02          	shl    $0x2,%rax
    2bd0:	48 89 c2             	mov    %rax,%rdx
    2bd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2bd7:	48 89 d6             	mov    %rdx,%rsi
    2bda:	48 89 c7             	mov    %rax,%rdi
    2bdd:	e8 4e f5 ff ff       	call   2130 <_ZdlPvm@plt>
      }
    2be2:	c9                   	leave
    2be3:	c3                   	ret

0000000000002be4 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    2be4:	55                   	push   %rbp
    2be5:	48 89 e5             	mov    %rsp,%rbp
    2be8:	48 83 ec 20          	sub    $0x20,%rsp
    2bec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2bf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2bf4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    2bf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2bfc:	48 c1 e0 05          	shl    $0x5,%rax
    2c00:	48 89 c2             	mov    %rax,%rdx
    2c03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2c07:	48 89 d6             	mov    %rdx,%rsi
    2c0a:	48 89 c7             	mov    %rax,%rdi
    2c0d:	e8 1e f5 ff ff       	call   2130 <_ZdlPvm@plt>
      }
    2c12:	c9                   	leave
    2c13:	c3                   	ret

0000000000002c14 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    2c14:	55                   	push   %rbp
    2c15:	48 89 e5             	mov    %rsp,%rbp
    2c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    2c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c20:	5d                   	pop    %rbp
    2c21:	c3                   	ret

0000000000002c22 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    _Destroy(_Tp* __pointer)
    2c22:	55                   	push   %rbp
    2c23:	48 89 e5             	mov    %rsp,%rbp
    2c26:	48 83 ec 10          	sub    $0x10,%rsp
    2c2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    2c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c32:	48 89 c7             	mov    %rax,%rdi
    2c35:	e8 56 f4 ff ff       	call   2090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    }
    2c3a:	90                   	nop
    2c3b:	c9                   	leave
    2c3c:	c3                   	ret

0000000000002c3d <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    2c3d:	55                   	push   %rbp
    2c3e:	48 89 e5             	mov    %rsp,%rbp
    2c41:	48 83 ec 20          	sub    $0x20,%rsp
    2c45:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2c48:	89 75 f8             	mov    %esi,-0x8(%rbp)
    2c4b:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    2c4f:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    2c53:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    2c57:	be 00 00 00 00       	mov    $0x0,%esi
    2c5c:	bf 01 20 02 00       	mov    $0x22001,%edi
    2c61:	e8 7a f4 ff ff       	call   20e0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    2c66:	be 00 00 00 00       	mov    $0x0,%esi
    2c6b:	bf 03 00 02 00       	mov    $0x20003,%edi
    2c70:	e8 6b f4 ff ff       	call   20e0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    2c75:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2c79:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2c7d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2c81:	8b 75 f8             	mov    -0x8(%rbp),%esi
    2c84:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2c87:	49 89 f8             	mov    %rdi,%r8
    2c8a:	89 c7                	mov    %eax,%edi
    2c8c:	e8 3f f5 ff ff       	call   21d0 <glfwCreateWindow@plt>
}
    2c91:	c9                   	leave
    2c92:	c3                   	ret

0000000000002c93 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    2c93:	55                   	push   %rbp
    2c94:	48 89 e5             	mov    %rsp,%rbp
    2c97:	41 54                	push   %r12
    2c99:	53                   	push   %rbx
    2c9a:	48 83 ec 20          	sub    $0x20,%rsp
    2c9e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2ca2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    2ca6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2caa:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    2cae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cb2:	48 89 ce             	mov    %rcx,%rsi
    2cb5:	48 89 c7             	mov    %rax,%rdi
    2cb8:	e8 c3 f4 ff ff       	call   2180 <vkCreateInstance@plt>
    2cbd:	85 c0                	test   %eax,%eax
    2cbf:	0f 95 c0             	setne  %al
    2cc2:	84 c0                	test   %al,%al
    2cc4:	74 3b                	je     2d01 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    2cc6:	bf 10 00 00 00       	mov    $0x10,%edi
    2ccb:	e8 90 f3 ff ff       	call   2060 <__cxa_allocate_exception@plt>
    2cd0:	48 89 c3             	mov    %rax,%rbx
    2cd3:	48 8d 05 06 2f 00 00 	lea    0x2f06(%rip),%rax        # 5be0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2cda:	48 89 c6             	mov    %rax,%rsi
    2cdd:	48 89 df             	mov    %rbx,%rdi
    2ce0:	e8 5b f3 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2ce5:	48 8b 05 bc 72 00 00 	mov    0x72bc(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2cec:	48 89 c2             	mov    %rax,%rdx
    2cef:	48 8d 05 6a 70 00 00 	lea    0x706a(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2cf6:	48 89 c6             	mov    %rax,%rsi
    2cf9:	48 89 df             	mov    %rbx,%rdi
    2cfc:	e8 ef f4 ff ff       	call   21f0 <__cxa_throw@plt>
  }
  return instance;
    2d01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d05:	eb 16                	jmp    2d1d <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    2d07:	49 89 c4             	mov    %rax,%r12
    2d0a:	48 89 df             	mov    %rbx,%rdi
    2d0d:	e8 8e f3 ff ff       	call   20a0 <__cxa_free_exception@plt>
    2d12:	4c 89 e0             	mov    %r12,%rax
    2d15:	48 89 c7             	mov    %rax,%rdi
    2d18:	e8 e3 f4 ff ff       	call   2200 <_Unwind_Resume@plt>
}
    2d1d:	48 83 c4 20          	add    $0x20,%rsp
    2d21:	5b                   	pop    %rbx
    2d22:	41 5c                	pop    %r12
    2d24:	5d                   	pop    %rbp
    2d25:	c3                   	ret

0000000000002d26 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    2d26:	55                   	push   %rbp
    2d27:	48 89 e5             	mov    %rsp,%rbp
    2d2a:	41 54                	push   %r12
    2d2c:	53                   	push   %rbx
    2d2d:	48 83 ec 20          	sub    $0x20,%rsp
    2d31:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2d35:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2d39:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2d3d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2d41:	ba 00 00 00 00       	mov    $0x0,%edx
    2d46:	48 89 ce             	mov    %rcx,%rsi
    2d49:	48 89 c7             	mov    %rax,%rdi
    2d4c:	e8 7f f3 ff ff       	call   20d0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    2d51:	85 c0                	test   %eax,%eax
    2d53:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2d56:	84 c0                	test   %al,%al
    2d58:	74 3b                	je     2d95 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    2d5a:	bf 10 00 00 00       	mov    $0x10,%edi
    2d5f:	e8 fc f2 ff ff       	call   2060 <__cxa_allocate_exception@plt>
    2d64:	48 89 c3             	mov    %rax,%rbx
    2d67:	48 8d 05 6a 34 00 00 	lea    0x346a(%rip),%rax        # 61d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2d6e:	48 89 c6             	mov    %rax,%rsi
    2d71:	48 89 df             	mov    %rbx,%rdi
    2d74:	e8 c7 f2 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2d79:	48 8b 05 28 72 00 00 	mov    0x7228(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2d80:	48 89 c2             	mov    %rax,%rdx
    2d83:	48 8d 05 d6 6f 00 00 	lea    0x6fd6(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2d8a:	48 89 c6             	mov    %rax,%rsi
    2d8d:	48 89 df             	mov    %rbx,%rdi
    2d90:	e8 5b f4 ff ff       	call   21f0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    2d95:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2d98:	89 c3                	mov    %eax,%ebx
    2d9a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2d9e:	48 89 c7             	mov    %rax,%rdi
    2da1:	e8 e8 04 00 00       	call   328e <_ZNSaI21VkExtensionPropertiesEC1Ev>
    2da6:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2daa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2dae:	48 89 de             	mov    %rbx,%rsi
    2db1:	48 89 c7             	mov    %rax,%rdi
    2db4:	e8 f1 04 00 00       	call   32aa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    2db9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2dbd:	48 89 c7             	mov    %rax,%rdi
    2dc0:	e8 3b fc ff ff       	call   2a00 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2dc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2dc9:	48 89 c7             	mov    %rax,%rdi
    2dcc:	e8 4f 05 00 00       	call   3320 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    2dd1:	48 89 c2             	mov    %rax,%rdx
    2dd4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2dd8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2ddc:	48 89 ce             	mov    %rcx,%rsi
    2ddf:	48 89 c7             	mov    %rax,%rdi
    2de2:	e8 e9 f2 ff ff       	call   20d0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    2de7:	85 c0                	test   %eax,%eax
    2de9:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2dec:	84 c0                	test   %al,%al
    2dee:	0f 84 95 00 00 00    	je     2e89 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    2df4:	bf 10 00 00 00       	mov    $0x10,%edi
    2df9:	e8 62 f2 ff ff       	call   2060 <__cxa_allocate_exception@plt>
    2dfe:	48 89 c3             	mov    %rax,%rbx
    2e01:	48 8d 05 d0 33 00 00 	lea    0x33d0(%rip),%rax        # 61d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2e08:	48 89 c6             	mov    %rax,%rsi
    2e0b:	48 89 df             	mov    %rbx,%rdi
    2e0e:	e8 2d f2 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2e13:	48 8b 05 8e 71 00 00 	mov    0x718e(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2e1a:	48 89 c2             	mov    %rax,%rdx
    2e1d:	48 8d 05 3c 6f 00 00 	lea    0x6f3c(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2e24:	48 89 c6             	mov    %rax,%rsi
    2e27:	48 89 df             	mov    %rbx,%rdi
    2e2a:	e8 c1 f3 ff ff       	call   21f0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    2e2f:	49 89 c4             	mov    %rax,%r12
    2e32:	48 89 df             	mov    %rbx,%rdi
    2e35:	e8 66 f2 ff ff       	call   20a0 <__cxa_free_exception@plt>
    2e3a:	4c 89 e0             	mov    %r12,%rax
    2e3d:	48 89 c7             	mov    %rax,%rdi
    2e40:	e8 bb f3 ff ff       	call   2200 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    2e45:	48 89 c3             	mov    %rax,%rbx
    2e48:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2e4c:	48 89 c7             	mov    %rax,%rdi
    2e4f:	e8 ac fb ff ff       	call   2a00 <_ZNSaI21VkExtensionPropertiesED1Ev>
    2e54:	48 89 d8             	mov    %rbx,%rax
    2e57:	48 89 c7             	mov    %rax,%rdi
    2e5a:	e8 a1 f3 ff ff       	call   2200 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    2e5f:	49 89 c4             	mov    %rax,%r12
    2e62:	48 89 df             	mov    %rbx,%rdi
    2e65:	e8 36 f2 ff ff       	call   20a0 <__cxa_free_exception@plt>
    2e6a:	4c 89 e3             	mov    %r12,%rbx
    2e6d:	eb 03                	jmp    2e72 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    2e6f:	48 89 c3             	mov    %rax,%rbx
    2e72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e76:	48 89 c7             	mov    %rax,%rdi
    2e79:	e8 d8 f7 ff ff       	call   2656 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2e7e:	48 89 d8             	mov    %rbx,%rax
    2e81:	48 89 c7             	mov    %rax,%rdi
    2e84:	e8 77 f3 ff ff       	call   2200 <_Unwind_Resume@plt>
  return instanceExtensions;
    2e89:	90                   	nop
}
    2e8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e8e:	48 83 c4 20          	add    $0x20,%rsp
    2e92:	5b                   	pop    %rbx
    2e93:	41 5c                	pop    %r12
    2e95:	5d                   	pop    %rbp
    2e96:	c3                   	ret

0000000000002e97 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    2e97:	55                   	push   %rbp
    2e98:	48 89 e5             	mov    %rsp,%rbp
    2e9b:	41 54                	push   %r12
    2e9d:	53                   	push   %rbx
    2e9e:	48 83 ec 30          	sub    $0x30,%rsp
    2ea2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2ea6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2eaa:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    2eae:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2eb2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2eb6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2eba:	b9 00 00 00 00       	mov    $0x0,%ecx
    2ebf:	48 89 c7             	mov    %rax,%rdi
    2ec2:	e8 d9 f2 ff ff       	call   21a0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    2ec7:	85 c0                	test   %eax,%eax
    2ec9:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    2ecc:	84 c0                	test   %al,%al
    2ece:	74 3b                	je     2f0b <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    2ed0:	bf 10 00 00 00       	mov    $0x10,%edi
    2ed5:	e8 86 f1 ff ff       	call   2060 <__cxa_allocate_exception@plt>
    2eda:	48 89 c3             	mov    %rax,%rbx
    2edd:	48 8d 05 1c 33 00 00 	lea    0x331c(%rip),%rax        # 6200 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    2ee4:	48 89 c6             	mov    %rax,%rsi
    2ee7:	48 89 df             	mov    %rbx,%rdi
    2eea:	e8 51 f1 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2eef:	48 8b 05 b2 70 00 00 	mov    0x70b2(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2ef6:	48 89 c2             	mov    %rax,%rdx
    2ef9:	48 8d 05 60 6e 00 00 	lea    0x6e60(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2f00:	48 89 c6             	mov    %rax,%rsi
    2f03:	48 89 df             	mov    %rbx,%rdi
    2f06:	e8 e5 f2 ff ff       	call   21f0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2f0b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2f0e:	89 c3                	mov    %eax,%ebx
    2f10:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2f14:	48 89 c7             	mov    %rax,%rdi
    2f17:	e8 72 03 00 00       	call   328e <_ZNSaI21VkExtensionPropertiesEC1Ev>
    2f1c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2f20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f24:	48 89 de             	mov    %rbx,%rsi
    2f27:	48 89 c7             	mov    %rax,%rdi
    2f2a:	e8 7b 03 00 00       	call   32aa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    2f2f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2f33:	48 89 c7             	mov    %rax,%rdi
    2f36:	e8 c5 fa ff ff       	call   2a00 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    2f3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f3f:	48 89 c7             	mov    %rax,%rdi
    2f42:	e8 d9 03 00 00       	call   3320 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    2f47:	48 89 c1             	mov    %rax,%rcx
    2f4a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2f4e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2f52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2f56:	48 89 c7             	mov    %rax,%rdi
    2f59:	e8 42 f2 ff ff       	call   21a0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    2f5e:	85 c0                	test   %eax,%eax
    2f60:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    2f63:	84 c0                	test   %al,%al
    2f65:	0f 84 95 00 00 00    	je     3000 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    2f6b:	bf 10 00 00 00       	mov    $0x10,%edi
    2f70:	e8 eb f0 ff ff       	call   2060 <__cxa_allocate_exception@plt>
    2f75:	48 89 c3             	mov    %rax,%rbx
    2f78:	48 8d 05 81 32 00 00 	lea    0x3281(%rip),%rax        # 6200 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    2f7f:	48 89 c6             	mov    %rax,%rsi
    2f82:	48 89 df             	mov    %rbx,%rdi
    2f85:	e8 b6 f0 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2f8a:	48 8b 05 17 70 00 00 	mov    0x7017(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2f91:	48 89 c2             	mov    %rax,%rdx
    2f94:	48 8d 05 c5 6d 00 00 	lea    0x6dc5(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2f9b:	48 89 c6             	mov    %rax,%rsi
    2f9e:	48 89 df             	mov    %rbx,%rdi
    2fa1:	e8 4a f2 ff ff       	call   21f0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2fa6:	49 89 c4             	mov    %rax,%r12
    2fa9:	48 89 df             	mov    %rbx,%rdi
    2fac:	e8 ef f0 ff ff       	call   20a0 <__cxa_free_exception@plt>
    2fb1:	4c 89 e0             	mov    %r12,%rax
    2fb4:	48 89 c7             	mov    %rax,%rdi
    2fb7:	e8 44 f2 ff ff       	call   2200 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2fbc:	48 89 c3             	mov    %rax,%rbx
    2fbf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2fc3:	48 89 c7             	mov    %rax,%rdi
    2fc6:	e8 35 fa ff ff       	call   2a00 <_ZNSaI21VkExtensionPropertiesED1Ev>
    2fcb:	48 89 d8             	mov    %rbx,%rax
    2fce:	48 89 c7             	mov    %rax,%rdi
    2fd1:	e8 2a f2 ff ff       	call   2200 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2fd6:	49 89 c4             	mov    %rax,%r12
    2fd9:	48 89 df             	mov    %rbx,%rdi
    2fdc:	e8 bf f0 ff ff       	call   20a0 <__cxa_free_exception@plt>
    2fe1:	4c 89 e3             	mov    %r12,%rbx
    2fe4:	eb 03                	jmp    2fe9 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    2fe6:	48 89 c3             	mov    %rax,%rbx
    2fe9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2fed:	48 89 c7             	mov    %rax,%rdi
    2ff0:	e8 61 f6 ff ff       	call   2656 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2ff5:	48 89 d8             	mov    %rbx,%rax
    2ff8:	48 89 c7             	mov    %rax,%rdi
    2ffb:	e8 00 f2 ff ff       	call   2200 <_Unwind_Resume@plt>
  return deviceExtensions;
    3000:	90                   	nop
}
    3001:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3005:	48 83 c4 30          	add    $0x30,%rsp
    3009:	5b                   	pop    %rbx
    300a:	41 5c                	pop    %r12
    300c:	5d                   	pop    %rbp
    300d:	c3                   	ret

000000000000300e <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev>:

std::vector<std::string> getRequiredInstanceExtensionList() {
    300e:	55                   	push   %rbp
    300f:	48 89 e5             	mov    %rsp,%rbp
    3012:	53                   	push   %rbx
    3013:	48 83 ec 38          	sub    $0x38,%rsp
    3017:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    301b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    301f:	48 89 c7             	mov    %rax,%rdi
    3022:	e8 89 f0 ff ff       	call   20b0 <glfwGetRequiredInstanceExtensions@plt>
    3027:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<std::string> requiredInstanceExtensions{requiredExtensionCount};
    302b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    302e:	89 c3                	mov    %eax,%ebx
    3030:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    3034:	48 89 c7             	mov    %rax,%rdi
    3037:	e8 08 03 00 00       	call   3344 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>
    303c:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    3040:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3044:	48 89 de             	mov    %rbx,%rsi
    3047:	48 89 c7             	mov    %rax,%rdi
    304a:	e8 11 03 00 00       	call   3360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_>
    304f:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    3053:	48 89 c7             	mov    %rax,%rdi
    3056:	e8 1d fa ff ff       	call   2a78 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    305b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    3062:	eb 36                	jmp    309a <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev+0x8c>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    3064:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3067:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    306e:	00 
    306f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3073:	48 01 d0             	add    %rdx,%rax
    3076:	48 8b 18             	mov    (%rax),%rbx
    3079:	8b 55 ec             	mov    -0x14(%rbp),%edx
    307c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3080:	48 89 d6             	mov    %rdx,%rsi
    3083:	48 89 c7             	mov    %rax,%rdi
    3086:	e8 4b 03 00 00       	call   33d6 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    308b:	48 89 de             	mov    %rbx,%rsi
    308e:	48 89 c7             	mov    %rax,%rdi
    3091:	e8 fa f0 ff ff       	call   2190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    3096:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    309a:	8b 45 d8             	mov    -0x28(%rbp),%eax
    309d:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    30a0:	72 c2                	jb     3064 <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev+0x56>
  }
  return requiredInstanceExtensions;
    30a2:	eb 34                	jmp    30d8 <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev+0xca>
  std::vector<std::string> requiredInstanceExtensions{requiredExtensionCount};
    30a4:	48 89 c3             	mov    %rax,%rbx
    30a7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    30ab:	48 89 c7             	mov    %rax,%rdi
    30ae:	e8 c5 f9 ff ff       	call   2a78 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
    30b3:	48 89 d8             	mov    %rbx,%rax
    30b6:	48 89 c7             	mov    %rax,%rdi
    30b9:	e8 42 f1 ff ff       	call   2200 <_Unwind_Resume@plt>
}
    30be:	48 89 c3             	mov    %rax,%rbx
    30c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    30c5:	48 89 c7             	mov    %rax,%rdi
    30c8:	e8 8d f6 ff ff       	call   275a <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
    30cd:	48 89 d8             	mov    %rbx,%rax
    30d0:	48 89 c7             	mov    %rax,%rdi
    30d3:	e8 28 f1 ff ff       	call   2200 <_Unwind_Resume@plt>
    30d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    30dc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    30e0:	c9                   	leave
    30e1:	c3                   	ret

00000000000030e2 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    30e2:	55                   	push   %rbp
    30e3:	48 89 e5             	mov    %rsp,%rbp
    30e6:	41 54                	push   %r12
    30e8:	53                   	push   %rbx
    30e9:	48 83 ec 20          	sub    $0x20,%rsp
    30ed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    30f1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    30f5:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    30f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    30fd:	ba 00 00 00 00       	mov    $0x0,%edx
    3102:	48 89 ce             	mov    %rcx,%rsi
    3105:	48 89 c7             	mov    %rax,%rdi
    3108:	e8 73 ef ff ff       	call   2080 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    310d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3110:	85 c0                	test   %eax,%eax
    3112:	75 3b                	jne    314f <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    3114:	bf 10 00 00 00       	mov    $0x10,%edi
    3119:	e8 42 ef ff ff       	call   2060 <__cxa_allocate_exception@plt>
    311e:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    3121:	48 8d 05 00 31 00 00 	lea    0x3100(%rip),%rax        # 6228 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    3128:	48 89 c6             	mov    %rax,%rsi
    312b:	48 89 df             	mov    %rbx,%rdi
    312e:	e8 0d ef ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    3133:	48 8b 05 6e 6e 00 00 	mov    0x6e6e(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    313a:	48 89 c2             	mov    %rax,%rdx
    313d:	48 8d 05 1c 6c 00 00 	lea    0x6c1c(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3144:	48 89 c6             	mov    %rax,%rsi
    3147:	48 89 df             	mov    %rbx,%rdi
    314a:	e8 a1 f0 ff ff       	call   21f0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    314f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3152:	89 c3                	mov    %eax,%ebx
    3154:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3158:	48 89 c7             	mov    %rax,%rdi
    315b:	e8 96 02 00 00       	call   33f6 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    3160:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3164:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3168:	48 89 de             	mov    %rbx,%rsi
    316b:	48 89 c7             	mov    %rax,%rdi
    316e:	e8 bb 02 00 00       	call   342e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    3173:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3177:	48 89 c7             	mov    %rax,%rdi
    317a:	e8 93 02 00 00       	call   3412 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    317f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3183:	48 89 c7             	mov    %rax,%rdi
    3186:	e8 5d 03 00 00       	call   34e8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    318b:	48 89 c2             	mov    %rax,%rdx
    318e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3192:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3196:	48 89 ce             	mov    %rcx,%rsi
    3199:	48 89 c7             	mov    %rax,%rdi
    319c:	e8 df ee ff ff       	call   2080 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    31a1:	85 c0                	test   %eax,%eax
    31a3:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    31a6:	84 c0                	test   %al,%al
    31a8:	0f 84 95 00 00 00    	je     3243 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    31ae:	bf 10 00 00 00       	mov    $0x10,%edi
    31b3:	e8 a8 ee ff ff       	call   2060 <__cxa_allocate_exception@plt>
    31b8:	48 89 c3             	mov    %rax,%rbx
    31bb:	48 8d 05 9e 30 00 00 	lea    0x309e(%rip),%rax        # 6260 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    31c2:	48 89 c6             	mov    %rax,%rsi
    31c5:	48 89 df             	mov    %rbx,%rdi
    31c8:	e8 73 ee ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    31cd:	48 8b 05 d4 6d 00 00 	mov    0x6dd4(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    31d4:	48 89 c2             	mov    %rax,%rdx
    31d7:	48 8d 05 82 6b 00 00 	lea    0x6b82(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    31de:	48 89 c6             	mov    %rax,%rsi
    31e1:	48 89 df             	mov    %rbx,%rdi
    31e4:	e8 07 f0 ff ff       	call   21f0 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    31e9:	49 89 c4             	mov    %rax,%r12
    31ec:	48 89 df             	mov    %rbx,%rdi
    31ef:	e8 ac ee ff ff       	call   20a0 <__cxa_free_exception@plt>
    31f4:	4c 89 e0             	mov    %r12,%rax
    31f7:	48 89 c7             	mov    %rax,%rdi
    31fa:	e8 01 f0 ff ff       	call   2200 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    31ff:	48 89 c3             	mov    %rax,%rbx
    3202:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3206:	48 89 c7             	mov    %rax,%rdi
    3209:	e8 04 02 00 00       	call   3412 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    320e:	48 89 d8             	mov    %rbx,%rax
    3211:	48 89 c7             	mov    %rax,%rdi
    3214:	e8 e7 ef ff ff       	call   2200 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    3219:	49 89 c4             	mov    %rax,%r12
    321c:	48 89 df             	mov    %rbx,%rdi
    321f:	e8 7c ee ff ff       	call   20a0 <__cxa_free_exception@plt>
    3224:	4c 89 e3             	mov    %r12,%rbx
    3227:	eb 03                	jmp    322c <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    3229:	48 89 c3             	mov    %rax,%rbx
    322c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3230:	48 89 c7             	mov    %rax,%rdi
    3233:	e8 6c 02 00 00       	call   34a4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    3238:	48 89 d8             	mov    %rbx,%rax
    323b:	48 89 c7             	mov    %rax,%rdi
    323e:	e8 bd ef ff ff       	call   2200 <_Unwind_Resume@plt>
  return physicalDevices;
    3243:	90                   	nop
}
    3244:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3248:	48 83 c4 20          	add    $0x20,%rsp
    324c:	5b                   	pop    %rbx
    324d:	41 5c                	pop    %r12
    324f:	5d                   	pop    %rbp
    3250:	c3                   	ret

0000000000003251 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    3251:	55                   	push   %rbp
    3252:	48 89 e5             	mov    %rsp,%rbp
    3255:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3259:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    325d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3261:	5d                   	pop    %rbp
    3262:	c3                   	ret

0000000000003263 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    3263:	55                   	push   %rbp
    3264:	48 89 e5             	mov    %rsp,%rbp
    3267:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    326b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    326f:	5d                   	pop    %rbp
    3270:	c3                   	ret
    3271:	90                   	nop

0000000000003272 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    3272:	55                   	push   %rbp
    3273:	48 89 e5             	mov    %rsp,%rbp
    3276:	48 83 ec 10          	sub    $0x10,%rsp
    327a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    327e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3282:	48 89 c7             	mov    %rax,%rdi
    3285:	e8 88 01 00 00       	call   3412 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    328a:	90                   	nop
    328b:	c9                   	leave
    328c:	c3                   	ret
    328d:	90                   	nop

000000000000328e <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    328e:	55                   	push   %rbp
    328f:	48 89 e5             	mov    %rsp,%rbp
    3292:	48 83 ec 10          	sub    $0x10,%rsp
    3296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    329a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    329e:	48 89 c7             	mov    %rax,%rdi
    32a1:	e8 b4 02 00 00       	call   355a <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    32a6:	90                   	nop
    32a7:	c9                   	leave
    32a8:	c3                   	ret
    32a9:	90                   	nop

00000000000032aa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    32aa:	55                   	push   %rbp
    32ab:	48 89 e5             	mov    %rsp,%rbp
    32ae:	53                   	push   %rbx
    32af:	48 83 ec 28          	sub    $0x28,%rsp
    32b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    32b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    32bb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    32bf:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    32c3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    32c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    32cb:	48 89 d6             	mov    %rdx,%rsi
    32ce:	48 89 c7             	mov    %rax,%rdi
    32d1:	e8 8f 02 00 00       	call   3565 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    32d6:	48 89 c1             	mov    %rax,%rcx
    32d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    32dd:	48 89 c2             	mov    %rax,%rdx
    32e0:	48 89 ce             	mov    %rcx,%rsi
    32e3:	48 89 df             	mov    %rbx,%rdi
    32e6:	e8 db 02 00 00       	call   35c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    32eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    32ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32f3:	48 89 d6             	mov    %rdx,%rsi
    32f6:	48 89 c7             	mov    %rax,%rdi
    32f9:	e8 26 03 00 00       	call   3624 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    32fe:	eb 1a                	jmp    331a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    3300:	48 89 c3             	mov    %rax,%rbx
    3303:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3307:	48 89 c7             	mov    %rax,%rdi
    330a:	e8 67 f5 ff ff       	call   2876 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    330f:	48 89 d8             	mov    %rbx,%rax
    3312:	48 89 c7             	mov    %rax,%rdi
    3315:	e8 e6 ee ff ff       	call   2200 <_Unwind_Resume@plt>
    331a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    331e:	c9                   	leave
    331f:	c3                   	ret

0000000000003320 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    3320:	55                   	push   %rbp
    3321:	48 89 e5             	mov    %rsp,%rbp
    3324:	48 83 ec 10          	sub    $0x10,%rsp
    3328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    332c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3330:	48 8b 10             	mov    (%rax),%rdx
    3333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3337:	48 89 d6             	mov    %rdx,%rsi
    333a:	48 89 c7             	mov    %rax,%rdi
    333d:	e8 22 03 00 00       	call   3664 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3342:	c9                   	leave
    3343:	c3                   	ret

0000000000003344 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>:
    3344:	55                   	push   %rbp
    3345:	48 89 e5             	mov    %rsp,%rbp
    3348:	48 83 ec 10          	sub    $0x10,%rsp
    334c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3354:	48 89 c7             	mov    %rax,%rdi
    3357:	e8 40 03 00 00       	call   369c <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>
    335c:	90                   	nop
    335d:	c9                   	leave
    335e:	c3                   	ret
    335f:	90                   	nop

0000000000003360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3360:	55                   	push   %rbp
    3361:	48 89 e5             	mov    %rsp,%rbp
    3364:	53                   	push   %rbx
    3365:	48 83 ec 28          	sub    $0x28,%rsp
    3369:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    336d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3371:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    3375:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3379:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    337d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3381:	48 89 d6             	mov    %rdx,%rsi
    3384:	48 89 c7             	mov    %rax,%rdi
    3387:	e8 1b 03 00 00       	call   36a7 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_>
    338c:	48 89 c1             	mov    %rax,%rcx
    338f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3393:	48 89 c2             	mov    %rax,%rdx
    3396:	48 89 ce             	mov    %rcx,%rsi
    3399:	48 89 df             	mov    %rbx,%rdi
    339c:	e8 67 03 00 00       	call   3708 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_>
      { _M_default_initialize(__n); }
    33a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    33a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33a9:	48 89 d6             	mov    %rdx,%rsi
    33ac:	48 89 c7             	mov    %rax,%rdi
    33af:	e8 b2 03 00 00       	call   3766 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE21_M_default_initializeEm>
    33b4:	eb 1a                	jmp    33d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_+0x70>
    33b6:	48 89 c3             	mov    %rax,%rbx
    33b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33bd:	48 89 c7             	mov    %rax,%rdi
    33c0:	e8 89 f5 ff ff       	call   294e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
    33c5:	48 89 d8             	mov    %rbx,%rax
    33c8:	48 89 c7             	mov    %rax,%rdi
    33cb:	e8 30 ee ff ff       	call   2200 <_Unwind_Resume@plt>
    33d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    33d4:	c9                   	leave
    33d5:	c3                   	ret

00000000000033d6 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    33d6:	55                   	push   %rbp
    33d7:	48 89 e5             	mov    %rsp,%rbp
    33da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    33e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33e6:	48 8b 00             	mov    (%rax),%rax
    33e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    33ed:	48 c1 e2 05          	shl    $0x5,%rdx
    33f1:	48 01 d0             	add    %rdx,%rax
      }
    33f4:	5d                   	pop    %rbp
    33f5:	c3                   	ret

00000000000033f6 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
    33f6:	55                   	push   %rbp
    33f7:	48 89 e5             	mov    %rsp,%rbp
    33fa:	48 83 ec 10          	sub    $0x10,%rsp
    33fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3406:	48 89 c7             	mov    %rax,%rdi
    3409:	e8 be 03 00 00       	call   37cc <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    340e:	90                   	nop
    340f:	c9                   	leave
    3410:	c3                   	ret
    3411:	90                   	nop

0000000000003412 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    3412:	55                   	push   %rbp
    3413:	48 89 e5             	mov    %rsp,%rbp
    3416:	48 83 ec 10          	sub    $0x10,%rsp
    341a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    341e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3422:	48 89 c7             	mov    %rax,%rdi
    3425:	e8 ae 03 00 00       	call   37d8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    342a:	90                   	nop
    342b:	c9                   	leave
    342c:	c3                   	ret
    342d:	90                   	nop

000000000000342e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    342e:	55                   	push   %rbp
    342f:	48 89 e5             	mov    %rsp,%rbp
    3432:	53                   	push   %rbx
    3433:	48 83 ec 28          	sub    $0x28,%rsp
    3437:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    343b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    343f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    3443:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3447:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    344b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    344f:	48 89 d6             	mov    %rdx,%rsi
    3452:	48 89 c7             	mov    %rax,%rdi
    3455:	e8 89 03 00 00       	call   37e3 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    345a:	48 89 c1             	mov    %rax,%rcx
    345d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3461:	48 89 c2             	mov    %rax,%rdx
    3464:	48 89 ce             	mov    %rcx,%rsi
    3467:	48 89 df             	mov    %rbx,%rdi
    346a:	e8 d5 03 00 00       	call   3844 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    346f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3473:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3477:	48 89 d6             	mov    %rdx,%rsi
    347a:	48 89 c7             	mov    %rax,%rdi
    347d:	e8 20 04 00 00       	call   38a2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    3482:	eb 1a                	jmp    349e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    3484:	48 89 c3             	mov    %rax,%rbx
    3487:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    348b:	48 89 c7             	mov    %rax,%rdi
    348e:	e8 79 00 00 00       	call   350c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    3493:	48 89 d8             	mov    %rbx,%rax
    3496:	48 89 c7             	mov    %rax,%rdi
    3499:	e8 62 ed ff ff       	call   2200 <_Unwind_Resume@plt>
    349e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    34a2:	c9                   	leave
    34a3:	c3                   	ret

00000000000034a4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    34a4:	55                   	push   %rbp
    34a5:	48 89 e5             	mov    %rsp,%rbp
    34a8:	48 83 ec 10          	sub    $0x10,%rsp
    34ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    34b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34b4:	48 89 c7             	mov    %rax,%rdi
    34b7:	e8 26 04 00 00       	call   38e2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    34bc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    34bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34c3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    34c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34cb:	48 8b 00             	mov    (%rax),%rax
    34ce:	48 89 ce             	mov    %rcx,%rsi
    34d1:	48 89 c7             	mov    %rax,%rdi
    34d4:	e8 17 04 00 00       	call   38f0 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    34d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34dd:	48 89 c7             	mov    %rax,%rdi
    34e0:	e8 27 00 00 00       	call   350c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    34e5:	90                   	nop
    34e6:	c9                   	leave
    34e7:	c3                   	ret

00000000000034e8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    34e8:	55                   	push   %rbp
    34e9:	48 89 e5             	mov    %rsp,%rbp
    34ec:	48 83 ec 10          	sub    $0x10,%rsp
    34f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    34f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34f8:	48 8b 10             	mov    (%rax),%rdx
    34fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34ff:	48 89 d6             	mov    %rdx,%rsi
    3502:	48 89 c7             	mov    %rax,%rdi
    3505:	e8 10 04 00 00       	call   391a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    350a:	c9                   	leave
    350b:	c3                   	ret

000000000000350c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    350c:	55                   	push   %rbp
    350d:	48 89 e5             	mov    %rsp,%rbp
    3510:	48 83 ec 10          	sub    $0x10,%rsp
    3514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    351c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3524:	48 8b 00             	mov    (%rax),%rax
    3527:	48 29 c2             	sub    %rax,%rdx
    352a:	48 89 d0             	mov    %rdx,%rax
    352d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3531:	48 89 c2             	mov    %rax,%rdx
    3534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3538:	48 8b 08             	mov    (%rax),%rcx
    353b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    353f:	48 89 ce             	mov    %rcx,%rsi
    3542:	48 89 c7             	mov    %rax,%rdi
    3545:	e8 08 04 00 00       	call   3952 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    354a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    354e:	48 89 c7             	mov    %rax,%rdi
    3551:	e8 1c fd ff ff       	call   3272 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    3556:	90                   	nop
    3557:	c9                   	leave
    3558:	c3                   	ret
    3559:	90                   	nop

000000000000355a <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    355a:	55                   	push   %rbp
    355b:	48 89 e5             	mov    %rsp,%rbp
    355e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3562:	90                   	nop
    3563:	5d                   	pop    %rbp
    3564:	c3                   	ret

0000000000003565 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3565:	55                   	push   %rbp
    3566:	48 89 e5             	mov    %rsp,%rbp
    3569:	53                   	push   %rbx
    356a:	48 83 ec 28          	sub    $0x28,%rsp
    356e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3572:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3576:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    357a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    357e:	48 89 d6             	mov    %rdx,%rsi
    3581:	48 89 c7             	mov    %rax,%rdi
    3584:	e8 ed 00 00 00       	call   3676 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    3589:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    358d:	48 89 c7             	mov    %rax,%rdi
    3590:	e8 f2 03 00 00       	call   3987 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3595:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3599:	0f 92 c3             	setb   %bl
    359c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    35a0:	48 89 c7             	mov    %rax,%rdi
    35a3:	e8 58 f4 ff ff       	call   2a00 <_ZNSaI21VkExtensionPropertiesED1Ev>
    35a8:	84 db                	test   %bl,%bl
    35aa:	74 0f                	je     35bb <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    35ac:	48 8d 05 d5 2c 00 00 	lea    0x2cd5(%rip),%rax        # 6288 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    35b3:	48 89 c7             	mov    %rax,%rdi
    35b6:	e8 b5 ea ff ff       	call   2070 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    35bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    35bf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    35c3:	c9                   	leave
    35c4:	c3                   	ret
    35c5:	90                   	nop

00000000000035c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    35c6:	55                   	push   %rbp
    35c7:	48 89 e5             	mov    %rsp,%rbp
    35ca:	53                   	push   %rbx
    35cb:	48 83 ec 28          	sub    $0x28,%rsp
    35cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    35d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    35d7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    35db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35df:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    35e3:	48 89 d6             	mov    %rdx,%rsi
    35e6:	48 89 c7             	mov    %rax,%rdi
    35e9:	e8 dc 03 00 00       	call   39ca <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    35ee:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    35f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35f6:	48 89 d6             	mov    %rdx,%rsi
    35f9:	48 89 c7             	mov    %rax,%rdi
    35fc:	e8 fb 03 00 00       	call   39fc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    3601:	eb 1a                	jmp    361d <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    3603:	48 89 c3             	mov    %rax,%rbx
    3606:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    360a:	48 89 c7             	mov    %rax,%rdi
    360d:	e8 48 f2 ff ff       	call   285a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    3612:	48 89 d8             	mov    %rbx,%rax
    3615:	48 89 c7             	mov    %rax,%rdi
    3618:	e8 e3 eb ff ff       	call   2200 <_Unwind_Resume@plt>
    361d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3621:	c9                   	leave
    3622:	c3                   	ret
    3623:	90                   	nop

0000000000003624 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3624:	55                   	push   %rbp
    3625:	48 89 e5             	mov    %rsp,%rbp
    3628:	48 83 ec 10          	sub    $0x10,%rsp
    362c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3630:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3638:	48 89 c7             	mov    %rax,%rdi
    363b:	e8 8e f2 ff ff       	call   28ce <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3640:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3647:	48 8b 00             	mov    (%rax),%rax
    364a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    364e:	48 89 ce             	mov    %rcx,%rsi
    3651:	48 89 c7             	mov    %rax,%rdi
    3654:	e8 04 04 00 00       	call   3a5d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3659:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    365d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3661:	90                   	nop
    3662:	c9                   	leave
    3663:	c3                   	ret

0000000000003664 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3664:	55                   	push   %rbp
    3665:	48 89 e5             	mov    %rsp,%rbp
    3668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    366c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3670:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3674:	5d                   	pop    %rbp
    3675:	c3                   	ret

0000000000003676 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3676:	55                   	push   %rbp
    3677:	48 89 e5             	mov    %rsp,%rbp
    367a:	48 83 ec 10          	sub    $0x10,%rsp
    367e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3682:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3686:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    368a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    368e:	48 89 d6             	mov    %rdx,%rsi
    3691:	48 89 c7             	mov    %rax,%rdi
    3694:	e8 ed 03 00 00       	call   3a86 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    3699:	90                   	nop
    369a:	c9                   	leave
    369b:	c3                   	ret

000000000000369c <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>:
    369c:	55                   	push   %rbp
    369d:	48 89 e5             	mov    %rsp,%rbp
    36a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36a4:	90                   	nop
    36a5:	5d                   	pop    %rbp
    36a6:	c3                   	ret

00000000000036a7 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    36a7:	55                   	push   %rbp
    36a8:	48 89 e5             	mov    %rsp,%rbp
    36ab:	53                   	push   %rbx
    36ac:	48 83 ec 28          	sub    $0x28,%rsp
    36b0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    36b4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    36b8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    36bc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    36c0:	48 89 d6             	mov    %rdx,%rsi
    36c3:	48 89 c7             	mov    %rax,%rdi
    36c6:	e8 db 00 00 00       	call   37a6 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
    36cb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    36cf:	48 89 c7             	mov    %rax,%rdi
    36d2:	e8 be 03 00 00       	call   3a95 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>
    36d7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    36db:	0f 92 c3             	setb   %bl
    36de:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    36e2:	48 89 c7             	mov    %rax,%rdi
    36e5:	e8 8e f3 ff ff       	call   2a78 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
    36ea:	84 db                	test   %bl,%bl
    36ec:	74 0f                	je     36fd <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_+0x56>
	  __throw_length_error(
    36ee:	48 8d 05 93 2b 00 00 	lea    0x2b93(%rip),%rax        # 6288 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    36f5:	48 89 c7             	mov    %rax,%rdi
    36f8:	e8 73 e9 ff ff       	call   2070 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    36fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3701:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3705:	c9                   	leave
    3706:	c3                   	ret
    3707:	90                   	nop

0000000000003708 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3708:	55                   	push   %rbp
    3709:	48 89 e5             	mov    %rsp,%rbp
    370c:	53                   	push   %rbx
    370d:	48 83 ec 28          	sub    $0x28,%rsp
    3711:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3715:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3719:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    371d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3721:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3725:	48 89 d6             	mov    %rdx,%rsi
    3728:	48 89 c7             	mov    %rax,%rdi
    372b:	e8 a8 03 00 00       	call   3ad8 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>
      { _M_create_storage(__n); }
    3730:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3734:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3738:	48 89 d6             	mov    %rdx,%rsi
    373b:	48 89 c7             	mov    %rax,%rdi
    373e:	e8 c7 03 00 00       	call   3b0a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEm>
    3743:	eb 1a                	jmp    375f <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_+0x57>
    3745:	48 89 c3             	mov    %rax,%rbx
    3748:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    374c:	48 89 c7             	mov    %rax,%rdi
    374f:	e8 de f1 ff ff       	call   2932 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>
    3754:	48 89 d8             	mov    %rbx,%rax
    3757:	48 89 c7             	mov    %rax,%rdi
    375a:	e8 a1 ea ff ff       	call   2200 <_Unwind_Resume@plt>
    375f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3763:	c9                   	leave
    3764:	c3                   	ret
    3765:	90                   	nop

0000000000003766 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3766:	55                   	push   %rbp
    3767:	48 89 e5             	mov    %rsp,%rbp
    376a:	48 83 ec 10          	sub    $0x10,%rsp
    376e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3772:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    377a:	48 89 c7             	mov    %rax,%rdi
    377d:	e8 1a f2 ff ff       	call   299c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    3782:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3789:	48 8b 00             	mov    (%rax),%rax
    378c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3790:	48 89 ce             	mov    %rcx,%rsi
    3793:	48 89 c7             	mov    %rax,%rdi
    3796:	e8 c5 03 00 00       	call   3b60 <_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    379b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    379f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    37a3:	90                   	nop
    37a4:	c9                   	leave
    37a5:	c3                   	ret

00000000000037a6 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    37a6:	55                   	push   %rbp
    37a7:	48 89 e5             	mov    %rsp,%rbp
    37aa:	48 83 ec 10          	sub    $0x10,%rsp
    37ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    37b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    37ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37be:	48 89 d6             	mov    %rdx,%rsi
    37c1:	48 89 c7             	mov    %rax,%rdi
    37c4:	e8 c1 03 00 00       	call   3b8a <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_>
    37c9:	90                   	nop
    37ca:	c9                   	leave
    37cb:	c3                   	ret

00000000000037cc <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
    37cc:	55                   	push   %rbp
    37cd:	48 89 e5             	mov    %rsp,%rbp
    37d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37d4:	90                   	nop
    37d5:	5d                   	pop    %rbp
    37d6:	c3                   	ret
    37d7:	90                   	nop

00000000000037d8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    37d8:	55                   	push   %rbp
    37d9:	48 89 e5             	mov    %rsp,%rbp
    37dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37e0:	90                   	nop
    37e1:	5d                   	pop    %rbp
    37e2:	c3                   	ret

00000000000037e3 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    37e3:	55                   	push   %rbp
    37e4:	48 89 e5             	mov    %rsp,%rbp
    37e7:	53                   	push   %rbx
    37e8:	48 83 ec 28          	sub    $0x28,%rsp
    37ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    37f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    37f4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    37f8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    37fc:	48 89 d6             	mov    %rdx,%rsi
    37ff:	48 89 c7             	mov    %rax,%rdi
    3802:	e8 25 01 00 00       	call   392c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    3807:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    380b:	48 89 c7             	mov    %rax,%rdi
    380e:	e8 86 03 00 00       	call   3b99 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    3813:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3817:	0f 92 c3             	setb   %bl
    381a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    381e:	48 89 c7             	mov    %rax,%rdi
    3821:	e8 ec fb ff ff       	call   3412 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    3826:	84 db                	test   %bl,%bl
    3828:	74 0f                	je     3839 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    382a:	48 8d 05 57 2a 00 00 	lea    0x2a57(%rip),%rax        # 6288 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    3831:	48 89 c7             	mov    %rax,%rdi
    3834:	e8 37 e8 ff ff       	call   2070 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3839:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    383d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3841:	c9                   	leave
    3842:	c3                   	ret
    3843:	90                   	nop

0000000000003844 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3844:	55                   	push   %rbp
    3845:	48 89 e5             	mov    %rsp,%rbp
    3848:	53                   	push   %rbx
    3849:	48 83 ec 28          	sub    $0x28,%rsp
    384d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3851:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3855:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    385d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3861:	48 89 d6             	mov    %rdx,%rsi
    3864:	48 89 c7             	mov    %rax,%rdi
    3867:	e8 70 03 00 00       	call   3bdc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    386c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3870:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3874:	48 89 d6             	mov    %rdx,%rsi
    3877:	48 89 c7             	mov    %rax,%rdi
    387a:	e8 8f 03 00 00       	call   3c0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    387f:	eb 1a                	jmp    389b <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    3881:	48 89 c3             	mov    %rax,%rbx
    3884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3888:	48 89 c7             	mov    %rax,%rdi
    388b:	e8 e2 f9 ff ff       	call   3272 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    3890:	48 89 d8             	mov    %rbx,%rax
    3893:	48 89 c7             	mov    %rax,%rdi
    3896:	e8 65 e9 ff ff       	call   2200 <_Unwind_Resume@plt>
    389b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    389f:	c9                   	leave
    38a0:	c3                   	ret
    38a1:	90                   	nop

00000000000038a2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    38a2:	55                   	push   %rbp
    38a3:	48 89 e5             	mov    %rsp,%rbp
    38a6:	48 83 ec 10          	sub    $0x10,%rsp
    38aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    38b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38b6:	48 89 c7             	mov    %rax,%rdi
    38b9:	e8 24 00 00 00       	call   38e2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    38be:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    38c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38c5:	48 8b 00             	mov    (%rax),%rax
    38c8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    38cc:	48 89 ce             	mov    %rcx,%rsi
    38cf:	48 89 c7             	mov    %rax,%rdi
    38d2:	e8 8d 03 00 00       	call   3c64 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    38d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    38db:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    38df:	90                   	nop
    38e0:	c9                   	leave
    38e1:	c3                   	ret

00000000000038e2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    38e2:	55                   	push   %rbp
    38e3:	48 89 e5             	mov    %rsp,%rbp
    38e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    38ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38ee:	5d                   	pop    %rbp
    38ef:	c3                   	ret

00000000000038f0 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    38f0:	55                   	push   %rbp
    38f1:	48 89 e5             	mov    %rsp,%rbp
    38f4:	48 83 ec 20          	sub    $0x20,%rsp
    38f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3900:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3904:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    390c:	48 89 d6             	mov    %rdx,%rsi
    390f:	48 89 c7             	mov    %rax,%rdi
    3912:	e8 76 03 00 00       	call   3c8d <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    3917:	90                   	nop
    3918:	c9                   	leave
    3919:	c3                   	ret

000000000000391a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    391a:	55                   	push   %rbp
    391b:	48 89 e5             	mov    %rsp,%rbp
    391e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3922:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3926:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    392a:	5d                   	pop    %rbp
    392b:	c3                   	ret

000000000000392c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    392c:	55                   	push   %rbp
    392d:	48 89 e5             	mov    %rsp,%rbp
    3930:	48 83 ec 10          	sub    $0x10,%rsp
    3934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3938:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    393c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3944:	48 89 d6             	mov    %rdx,%rsi
    3947:	48 89 c7             	mov    %rax,%rdi
    394a:	e8 65 03 00 00       	call   3cb4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    394f:	90                   	nop
    3950:	c9                   	leave
    3951:	c3                   	ret

0000000000003952 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    3952:	55                   	push   %rbp
    3953:	48 89 e5             	mov    %rsp,%rbp
    3956:	48 83 ec 20          	sub    $0x20,%rsp
    395a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    395e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3962:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3966:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    396b:	74 17                	je     3984 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    396d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3971:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3975:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3979:	48 89 ce             	mov    %rcx,%rsi
    397c:	48 89 c7             	mov    %rax,%rdi
    397f:	e8 3f 03 00 00       	call   3cc3 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    3984:	90                   	nop
    3985:	c9                   	leave
    3986:	c3                   	ret

0000000000003987 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    3987:	55                   	push   %rbp
    3988:	48 89 e5             	mov    %rsp,%rbp
    398b:	48 83 ec 20          	sub    $0x20,%rsp
    398f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    3993:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    399a:	07 7e 00 
    399d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    39a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39a5:	48 89 c7             	mov    %rax,%rdi
    39a8:	e8 44 03 00 00       	call   3cf1 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    39ad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    39b1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    39b5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    39b9:	48 89 d6             	mov    %rdx,%rsi
    39bc:	48 89 c7             	mov    %rax,%rdi
    39bf:	e8 47 03 00 00       	call   3d0b <_ZSt3minImERKT_S2_S2_>
    39c4:	48 8b 00             	mov    (%rax),%rax
      }
    39c7:	c9                   	leave
    39c8:	c3                   	ret
    39c9:	90                   	nop

00000000000039ca <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    39ca:	55                   	push   %rbp
    39cb:	48 89 e5             	mov    %rsp,%rbp
    39ce:	48 83 ec 10          	sub    $0x10,%rsp
    39d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    39da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    39de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39e2:	48 89 d6             	mov    %rdx,%rsi
    39e5:	48 89 c7             	mov    %rax,%rdi
    39e8:	e8 89 fc ff ff       	call   3676 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    39ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39f1:	48 89 c7             	mov    %rax,%rdi
    39f4:	e8 3d 03 00 00       	call   3d36 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    39f9:	90                   	nop
    39fa:	c9                   	leave
    39fb:	c3                   	ret

00000000000039fc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    39fc:	55                   	push   %rbp
    39fd:	48 89 e5             	mov    %rsp,%rbp
    3a00:	48 83 ec 10          	sub    $0x10,%rsp
    3a04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    3a0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a14:	48 89 d6             	mov    %rdx,%rsi
    3a17:	48 89 c7             	mov    %rax,%rdi
    3a1a:	e8 45 03 00 00       	call   3d64 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    3a1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3a23:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    3a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a2a:	48 8b 10             	mov    (%rax),%rdx
    3a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a31:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    3a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a39:	48 8b 08             	mov    (%rax),%rcx
    3a3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a40:	48 89 d0             	mov    %rdx,%rax
    3a43:	48 c1 e0 06          	shl    $0x6,%rax
    3a47:	48 01 d0             	add    %rdx,%rax
    3a4a:	48 c1 e0 02          	shl    $0x2,%rax
    3a4e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    3a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a56:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    3a5a:	90                   	nop
    3a5b:	c9                   	leave
    3a5c:	c3                   	ret

0000000000003a5d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    3a5d:	55                   	push   %rbp
    3a5e:	48 89 e5             	mov    %rsp,%rbp
    3a61:	48 83 ec 20          	sub    $0x20,%rsp
    3a65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a6d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    3a71:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a79:	48 89 d6             	mov    %rdx,%rsi
    3a7c:	48 89 c7             	mov    %rax,%rdi
    3a7f:	e8 13 03 00 00       	call   3d97 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    3a84:	c9                   	leave
    3a85:	c3                   	ret

0000000000003a86 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    3a86:	55                   	push   %rbp
    3a87:	48 89 e5             	mov    %rsp,%rbp
    3a8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a92:	90                   	nop
    3a93:	5d                   	pop    %rbp
    3a94:	c3                   	ret

0000000000003a95 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    3a95:	55                   	push   %rbp
    3a96:	48 89 e5             	mov    %rsp,%rbp
    3a99:	48 83 ec 20          	sub    $0x20,%rsp
    3a9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    3aa1:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
    3aa8:	ff ff 03 
    3aab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    3aaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ab3:	48 89 c7             	mov    %rax,%rdi
    3ab6:	e8 05 03 00 00       	call   3dc0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_>
    3abb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    3abf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    3ac3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3ac7:	48 89 d6             	mov    %rdx,%rsi
    3aca:	48 89 c7             	mov    %rax,%rdi
    3acd:	e8 39 02 00 00       	call   3d0b <_ZSt3minImERKT_S2_S2_>
    3ad2:	48 8b 00             	mov    (%rax),%rax
      }
    3ad5:	c9                   	leave
    3ad6:	c3                   	ret
    3ad7:	90                   	nop

0000000000003ad8 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    3ad8:	55                   	push   %rbp
    3ad9:	48 89 e5             	mov    %rsp,%rbp
    3adc:	48 83 ec 10          	sub    $0x10,%rsp
    3ae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ae4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    3ae8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3aec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3af0:	48 89 d6             	mov    %rdx,%rsi
    3af3:	48 89 c7             	mov    %rax,%rdi
    3af6:	e8 ab fc ff ff       	call   37a6 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
    3afb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aff:	48 89 c7             	mov    %rax,%rdi
    3b02:	e8 d3 02 00 00       	call   3dda <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>
	{ }
    3b07:	90                   	nop
    3b08:	c9                   	leave
    3b09:	c3                   	ret

0000000000003b0a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    3b0a:	55                   	push   %rbp
    3b0b:	48 89 e5             	mov    %rsp,%rbp
    3b0e:	48 83 ec 10          	sub    $0x10,%rsp
    3b12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    3b1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b22:	48 89 d6             	mov    %rdx,%rsi
    3b25:	48 89 c7             	mov    %rax,%rdi
    3b28:	e8 db 02 00 00       	call   3e08 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>
    3b2d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3b31:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    3b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b38:	48 8b 10             	mov    (%rax),%rdx
    3b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b3f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    3b43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b47:	48 8b 00             	mov    (%rax),%rax
    3b4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b4e:	48 c1 e2 05          	shl    $0x5,%rdx
    3b52:	48 01 c2             	add    %rax,%rdx
    3b55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b59:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    3b5d:	90                   	nop
    3b5e:	c9                   	leave
    3b5f:	c3                   	ret

0000000000003b60 <_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    3b60:	55                   	push   %rbp
    3b61:	48 89 e5             	mov    %rsp,%rbp
    3b64:	48 83 ec 20          	sub    $0x20,%rsp
    3b68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3b70:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    3b74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b7c:	48 89 d6             	mov    %rdx,%rsi
    3b7f:	48 89 c7             	mov    %rax,%rdi
    3b82:	e8 b4 02 00 00       	call   3e3b <_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_>
    3b87:	c9                   	leave
    3b88:	c3                   	ret
    3b89:	90                   	nop

0000000000003b8a <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_>:
    3b8a:	55                   	push   %rbp
    3b8b:	48 89 e5             	mov    %rsp,%rbp
    3b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3b96:	90                   	nop
    3b97:	5d                   	pop    %rbp
    3b98:	c3                   	ret

0000000000003b99 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    3b99:	55                   	push   %rbp
    3b9a:	48 89 e5             	mov    %rsp,%rbp
    3b9d:	48 83 ec 20          	sub    $0x20,%rsp
    3ba1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    3ba5:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    3bac:	ff ff 0f 
    3baf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    3bb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bb7:	48 89 c7             	mov    %rax,%rdi
    3bba:	e8 a5 02 00 00       	call   3e64 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    3bbf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    3bc3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    3bc7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3bcb:	48 89 d6             	mov    %rdx,%rsi
    3bce:	48 89 c7             	mov    %rax,%rdi
    3bd1:	e8 35 01 00 00       	call   3d0b <_ZSt3minImERKT_S2_S2_>
    3bd6:	48 8b 00             	mov    (%rax),%rax
      }
    3bd9:	c9                   	leave
    3bda:	c3                   	ret
    3bdb:	90                   	nop

0000000000003bdc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    3bdc:	55                   	push   %rbp
    3bdd:	48 89 e5             	mov    %rsp,%rbp
    3be0:	48 83 ec 10          	sub    $0x10,%rsp
    3be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3be8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    3bec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3bf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bf4:	48 89 d6             	mov    %rdx,%rsi
    3bf7:	48 89 c7             	mov    %rax,%rdi
    3bfa:	e8 2d fd ff ff       	call   392c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    3bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c03:	48 89 c7             	mov    %rax,%rdi
    3c06:	e8 73 02 00 00       	call   3e7e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    3c0b:	90                   	nop
    3c0c:	c9                   	leave
    3c0d:	c3                   	ret

0000000000003c0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    3c0e:	55                   	push   %rbp
    3c0f:	48 89 e5             	mov    %rsp,%rbp
    3c12:	48 83 ec 10          	sub    $0x10,%rsp
    3c16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    3c1e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c26:	48 89 d6             	mov    %rdx,%rsi
    3c29:	48 89 c7             	mov    %rax,%rdi
    3c2c:	e8 7b 02 00 00       	call   3eac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    3c31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3c35:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    3c38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c3c:	48 8b 10             	mov    (%rax),%rdx
    3c3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c43:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    3c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c4b:	48 8b 00             	mov    (%rax),%rax
    3c4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c52:	48 c1 e2 03          	shl    $0x3,%rdx
    3c56:	48 01 c2             	add    %rax,%rdx
    3c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c5d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    3c61:	90                   	nop
    3c62:	c9                   	leave
    3c63:	c3                   	ret

0000000000003c64 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    3c64:	55                   	push   %rbp
    3c65:	48 89 e5             	mov    %rsp,%rbp
    3c68:	48 83 ec 20          	sub    $0x20,%rsp
    3c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    3c78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c80:	48 89 d6             	mov    %rdx,%rsi
    3c83:	48 89 c7             	mov    %rax,%rdi
    3c86:	e8 54 02 00 00       	call   3edf <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    3c8b:	c9                   	leave
    3c8c:	c3                   	ret

0000000000003c8d <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    3c8d:	55                   	push   %rbp
    3c8e:	48 89 e5             	mov    %rsp,%rbp
    3c91:	48 83 ec 10          	sub    $0x10,%rsp
    3c95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    3c9d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ca1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ca5:	48 89 d6             	mov    %rdx,%rsi
    3ca8:	48 89 c7             	mov    %rax,%rdi
    3cab:	e8 58 02 00 00       	call   3f08 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    3cb0:	90                   	nop
    3cb1:	c9                   	leave
    3cb2:	c3                   	ret
    3cb3:	90                   	nop

0000000000003cb4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    3cb4:	55                   	push   %rbp
    3cb5:	48 89 e5             	mov    %rsp,%rbp
    3cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3cc0:	90                   	nop
    3cc1:	5d                   	pop    %rbp
    3cc2:	c3                   	ret

0000000000003cc3 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    3cc3:	55                   	push   %rbp
    3cc4:	48 89 e5             	mov    %rsp,%rbp
    3cc7:	48 83 ec 20          	sub    $0x20,%rsp
    3ccb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ccf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3cd3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    3cd7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3cdb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3cdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ce3:	48 89 ce             	mov    %rcx,%rsi
    3ce6:	48 89 c7             	mov    %rax,%rdi
    3ce9:	e8 2a 02 00 00       	call   3f18 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    3cee:	90                   	nop
    3cef:	c9                   	leave
    3cf0:	c3                   	ret

0000000000003cf1 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    3cf1:	55                   	push   %rbp
    3cf2:	48 89 e5             	mov    %rsp,%rbp
    3cf5:	48 83 ec 10          	sub    $0x10,%rsp
    3cf9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    3cfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d01:	48 89 c7             	mov    %rax,%rdi
    3d04:	e8 41 02 00 00       	call   3f4a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    3d09:	c9                   	leave
    3d0a:	c3                   	ret

0000000000003d0b <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    3d0b:	55                   	push   %rbp
    3d0c:	48 89 e5             	mov    %rsp,%rbp
    3d0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    3d17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d1b:	48 8b 10             	mov    (%rax),%rdx
    3d1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d22:	48 8b 00             	mov    (%rax),%rax
    3d25:	48 39 c2             	cmp    %rax,%rdx
    3d28:	73 06                	jae    3d30 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    3d2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d2e:	eb 04                	jmp    3d34 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    3d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3d34:	5d                   	pop    %rbp
    3d35:	c3                   	ret

0000000000003d36 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    3d36:	55                   	push   %rbp
    3d37:	48 89 e5             	mov    %rsp,%rbp
    3d3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    3d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d42:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d4d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3d54:	00 
    3d55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d59:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3d60:	00 
	{ }
    3d61:	90                   	nop
    3d62:	5d                   	pop    %rbp
    3d63:	c3                   	ret

0000000000003d64 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    3d64:	55                   	push   %rbp
    3d65:	48 89 e5             	mov    %rsp,%rbp
    3d68:	48 83 ec 10          	sub    $0x10,%rsp
    3d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    3d74:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3d79:	74 15                	je     3d90 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    3d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d7f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d83:	48 89 d6             	mov    %rdx,%rsi
    3d86:	48 89 c7             	mov    %rax,%rdi
    3d89:	e8 d6 01 00 00       	call   3f64 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    3d8e:	eb 05                	jmp    3d95 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    3d90:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    3d95:	c9                   	leave
    3d96:	c3                   	ret

0000000000003d97 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    3d97:	55                   	push   %rbp
    3d98:	48 89 e5             	mov    %rsp,%rbp
    3d9b:	48 83 ec 20          	sub    $0x20,%rsp
    3d9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3da3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    3da7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    3dab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3daf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3db3:	48 89 d6             	mov    %rdx,%rsi
    3db6:	48 89 c7             	mov    %rax,%rdi
    3db9:	e8 d0 01 00 00       	call   3f8e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    3dbe:	c9                   	leave
    3dbf:	c3                   	ret

0000000000003dc0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    3dc0:	55                   	push   %rbp
    3dc1:	48 89 e5             	mov    %rsp,%rbp
    3dc4:	48 83 ec 10          	sub    $0x10,%rsp
    3dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    3dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dd0:	48 89 c7             	mov    %rax,%rdi
    3dd3:	e8 16 02 00 00       	call   3fee <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>
      }
    3dd8:	c9                   	leave
    3dd9:	c3                   	ret

0000000000003dda <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    3dda:	55                   	push   %rbp
    3ddb:	48 89 e5             	mov    %rsp,%rbp
    3dde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    3de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3de6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3df1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3df8:	00 
    3df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dfd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3e04:	00 
	{ }
    3e05:	90                   	nop
    3e06:	5d                   	pop    %rbp
    3e07:	c3                   	ret

0000000000003e08 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    3e08:	55                   	push   %rbp
    3e09:	48 89 e5             	mov    %rsp,%rbp
    3e0c:	48 83 ec 10          	sub    $0x10,%rsp
    3e10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    3e18:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3e1d:	74 15                	je     3e34 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x2c>
    3e1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e27:	48 89 d6             	mov    %rdx,%rsi
    3e2a:	48 89 c7             	mov    %rax,%rdi
    3e2d:	e8 d6 01 00 00       	call   4008 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m>
    3e32:	eb 05                	jmp    3e39 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x31>
    3e34:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    3e39:	c9                   	leave
    3e3a:	c3                   	ret

0000000000003e3b <_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    3e3b:	55                   	push   %rbp
    3e3c:	48 89 e5             	mov    %rsp,%rbp
    3e3f:	48 83 ec 20          	sub    $0x20,%rsp
    3e43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3e47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    3e4b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    3e4f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3e53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e57:	48 89 d6             	mov    %rdx,%rsi
    3e5a:	48 89 c7             	mov    %rax,%rdi
    3e5d:	e8 d0 01 00 00       	call   4032 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_>
    }
    3e62:	c9                   	leave
    3e63:	c3                   	ret

0000000000003e64 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    3e64:	55                   	push   %rbp
    3e65:	48 89 e5             	mov    %rsp,%rbp
    3e68:	48 83 ec 10          	sub    $0x10,%rsp
    3e6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    3e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e74:	48 89 c7             	mov    %rax,%rdi
    3e77:	e8 fc 01 00 00       	call   4078 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    3e7c:	c9                   	leave
    3e7d:	c3                   	ret

0000000000003e7e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    3e7e:	55                   	push   %rbp
    3e7f:	48 89 e5             	mov    %rsp,%rbp
    3e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    3e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e8a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3e91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e95:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3e9c:	00 
    3e9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ea1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3ea8:	00 
	{ }
    3ea9:	90                   	nop
    3eaa:	5d                   	pop    %rbp
    3eab:	c3                   	ret

0000000000003eac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    3eac:	55                   	push   %rbp
    3ead:	48 89 e5             	mov    %rsp,%rbp
    3eb0:	48 83 ec 10          	sub    $0x10,%rsp
    3eb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3eb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    3ebc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3ec1:	74 15                	je     3ed8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    3ec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ec7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ecb:	48 89 d6             	mov    %rdx,%rsi
    3ece:	48 89 c7             	mov    %rax,%rdi
    3ed1:	e8 bc 01 00 00       	call   4092 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    3ed6:	eb 05                	jmp    3edd <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    3ed8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    3edd:	c9                   	leave
    3ede:	c3                   	ret

0000000000003edf <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    3edf:	55                   	push   %rbp
    3ee0:	48 89 e5             	mov    %rsp,%rbp
    3ee3:	48 83 ec 20          	sub    $0x20,%rsp
    3ee7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3eeb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    3eef:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    3ef3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3ef7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3efb:	48 89 d6             	mov    %rdx,%rsi
    3efe:	48 89 c7             	mov    %rax,%rdi
    3f01:	e8 b6 01 00 00       	call   40bc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    3f06:	c9                   	leave
    3f07:	c3                   	ret

0000000000003f08 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    3f08:	55                   	push   %rbp
    3f09:	48 89 e5             	mov    %rsp,%rbp
    3f0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3f14:	90                   	nop
    3f15:	5d                   	pop    %rbp
    3f16:	c3                   	ret
    3f17:	90                   	nop

0000000000003f18 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    3f18:	55                   	push   %rbp
    3f19:	48 89 e5             	mov    %rsp,%rbp
    3f1c:	48 83 ec 20          	sub    $0x20,%rsp
    3f20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3f28:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3f2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f30:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3f37:	00 
    3f38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f3c:	48 89 d6             	mov    %rdx,%rsi
    3f3f:	48 89 c7             	mov    %rax,%rdi
    3f42:	e8 e9 e1 ff ff       	call   2130 <_ZdlPvm@plt>
      }
    3f47:	c9                   	leave
    3f48:	c3                   	ret
    3f49:	90                   	nop

0000000000003f4a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    3f4a:	55                   	push   %rbp
    3f4b:	48 89 e5             	mov    %rsp,%rbp
    3f4e:	48 83 ec 10          	sub    $0x10,%rsp
    3f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    3f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f5a:	48 89 c7             	mov    %rax,%rdi
    3f5d:	e8 b8 01 00 00       	call   411a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    3f62:	c9                   	leave
    3f63:	c3                   	ret

0000000000003f64 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    3f64:	55                   	push   %rbp
    3f65:	48 89 e5             	mov    %rsp,%rbp
    3f68:	48 83 ec 10          	sub    $0x10,%rsp
    3f6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    3f74:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f7c:	ba 00 00 00 00       	mov    $0x0,%edx
    3f81:	48 89 ce             	mov    %rcx,%rsi
    3f84:	48 89 c7             	mov    %rax,%rdi
    3f87:	e8 a2 01 00 00       	call   412e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    3f8c:	c9                   	leave
    3f8d:	c3                   	ret

0000000000003f8e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    3f8e:	55                   	push   %rbp
    3f8f:	48 89 e5             	mov    %rsp,%rbp
    3f92:	48 83 ec 20          	sub    $0x20,%rsp
    3f96:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3f9a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    3f9e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    3fa3:	74 43                	je     3fe8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    3fa5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3fa9:	48 89 c7             	mov    %rax,%rdi
    3fac:	e8 e8 01 00 00       	call   4199 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    3fb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    3fb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fb9:	48 89 c7             	mov    %rax,%rdi
    3fbc:	e8 e6 01 00 00       	call   41a7 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    3fc1:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    3fc8:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    3fc9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3fcd:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    3fd1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3fd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3fd9:	48 89 ce             	mov    %rcx,%rsi
    3fdc:	48 89 c7             	mov    %rax,%rdi
    3fdf:	e8 1d 02 00 00       	call   4201 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    3fe4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    3fe8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    3fec:	c9                   	leave
    3fed:	c3                   	ret

0000000000003fee <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    3fee:	55                   	push   %rbp
    3fef:	48 89 e5             	mov    %rsp,%rbp
    3ff2:	48 83 ec 10          	sub    $0x10,%rsp
    3ff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    3ffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ffe:	48 89 c7             	mov    %rax,%rdi
    4001:	e8 40 02 00 00       	call   4246 <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv>
    4006:	c9                   	leave
    4007:	c3                   	ret

0000000000004008 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m>:
      allocate(allocator_type& __a, size_type __n)
    4008:	55                   	push   %rbp
    4009:	48 89 e5             	mov    %rsp,%rbp
    400c:	48 83 ec 10          	sub    $0x10,%rsp
    4010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4014:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    4018:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    401c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4020:	ba 00 00 00 00       	mov    $0x0,%edx
    4025:	48 89 ce             	mov    %rcx,%rsi
    4028:	48 89 c7             	mov    %rax,%rdi
    402b:	e8 2a 02 00 00       	call   425a <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv>
    4030:	c9                   	leave
    4031:	c3                   	ret

0000000000004032 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    4032:	55                   	push   %rbp
    4033:	48 89 e5             	mov    %rsp,%rbp
    4036:	48 83 ec 20          	sub    $0x20,%rsp
    403a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    403e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    4042:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4046:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    404a:	eb 1e                	jmp    406a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    404c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4050:	48 89 c7             	mov    %rax,%rdi
    4053:	e8 bc eb ff ff       	call   2c14 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
    4058:	48 89 c7             	mov    %rax,%rdi
    405b:	e8 5b 02 00 00       	call   42bb <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    4060:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    4065:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    406a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    406f:	75 db                	jne    404c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_+0x1a>
	      return __cur;
    4071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    4075:	c9                   	leave
    4076:	c3                   	ret
    4077:	90                   	nop

0000000000004078 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    4078:	55                   	push   %rbp
    4079:	48 89 e5             	mov    %rsp,%rbp
    407c:	48 83 ec 10          	sub    $0x10,%rsp
    4080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    4084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4088:	48 89 c7             	mov    %rax,%rdi
    408b:	e8 54 02 00 00       	call   42e4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    4090:	c9                   	leave
    4091:	c3                   	ret

0000000000004092 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    4092:	55                   	push   %rbp
    4093:	48 89 e5             	mov    %rsp,%rbp
    4096:	48 83 ec 10          	sub    $0x10,%rsp
    409a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    409e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    40a2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    40a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40aa:	ba 00 00 00 00       	mov    $0x0,%edx
    40af:	48 89 ce             	mov    %rcx,%rsi
    40b2:	48 89 c7             	mov    %rax,%rdi
    40b5:	e8 3e 02 00 00       	call   42f8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    40ba:	c9                   	leave
    40bb:	c3                   	ret

00000000000040bc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    40bc:	55                   	push   %rbp
    40bd:	48 89 e5             	mov    %rsp,%rbp
    40c0:	48 83 ec 20          	sub    $0x20,%rsp
    40c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    40c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    40cc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    40d1:	74 40                	je     4113 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    40d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40d7:	48 89 c7             	mov    %rax,%rdi
    40da:	e8 7a 02 00 00       	call   4359 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    40df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    40e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40e7:	48 89 c7             	mov    %rax,%rdi
    40ea:	e8 78 02 00 00       	call   4367 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    40ef:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    40f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    40f8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    40fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4104:	48 89 ce             	mov    %rcx,%rsi
    4107:	48 89 c7             	mov    %rax,%rdi
    410a:	e8 7f 02 00 00       	call   438e <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    410f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    4113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    4117:	c9                   	leave
    4118:	c3                   	ret
    4119:	90                   	nop

000000000000411a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    411a:	55                   	push   %rbp
    411b:	48 89 e5             	mov    %rsp,%rbp
    411e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    4122:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    4129:	07 7e 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    412c:	5d                   	pop    %rbp
    412d:	c3                   	ret

000000000000412e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    412e:	55                   	push   %rbp
    412f:	48 89 e5             	mov    %rsp,%rbp
    4132:	48 83 ec 20          	sub    $0x20,%rsp
    4136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    413a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    413e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    4142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4146:	48 89 c7             	mov    %rax,%rdi
    4149:	e8 cc ff ff ff       	call   411a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    414e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4152:	0f 92 c0             	setb   %al
    4155:	0f b6 c0             	movzbl %al,%eax
    4158:	48 85 c0             	test   %rax,%rax
    415b:	0f 95 c0             	setne  %al
    415e:	84 c0                	test   %al,%al
    4160:	74 1a                	je     417c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    4162:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    4169:	0f fc 00 
    416c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4170:	73 05                	jae    4177 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    4172:	e8 49 df ff ff       	call   20c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    4177:	e8 b4 de ff ff       	call   2030 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    417c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4180:	48 89 d0             	mov    %rdx,%rax
    4183:	48 c1 e0 06          	shl    $0x6,%rax
    4187:	48 01 d0             	add    %rdx,%rax
    418a:	48 c1 e0 02          	shl    $0x2,%rax
    418e:	48 89 c7             	mov    %rax,%rdi
    4191:	e8 8a df ff ff       	call   2120 <_Znwm@plt>
    4196:	90                   	nop
      }
    4197:	c9                   	leave
    4198:	c3                   	ret

0000000000004199 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    4199:	55                   	push   %rbp
    419a:	48 89 e5             	mov    %rsp,%rbp
    419d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    41a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41a5:	5d                   	pop    %rbp
    41a6:	c3                   	ret

00000000000041a7 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    41a7:	55                   	push   %rbp
    41a8:	48 89 e5             	mov    %rsp,%rbp
    41ab:	48 83 ec 10          	sub    $0x10,%rsp
    41af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    41b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41b7:	48 89 c6             	mov    %rax,%rsi
    41ba:	bf 04 01 00 00       	mov    $0x104,%edi
    41bf:	e8 8d f0 ff ff       	call   3251 <_ZnwmPv>
    41c4:	b9 04 01 00 00       	mov    $0x104,%ecx
    41c9:	be 00 00 00 00       	mov    $0x0,%esi
    41ce:	48 89 30             	mov    %rsi,(%rax)
    41d1:	89 ca                	mov    %ecx,%edx
    41d3:	48 01 c2             	add    %rax,%rdx
    41d6:	48 83 c2 08          	add    $0x8,%rdx
    41da:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    41de:	48 8d 50 08          	lea    0x8(%rax),%rdx
    41e2:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    41e6:	48 29 d0             	sub    %rdx,%rax
    41e9:	01 c1                	add    %eax,%ecx
    41eb:	83 e1 f8             	and    $0xfffffff8,%ecx
    41ee:	89 c8                	mov    %ecx,%eax
    41f0:	c1 e8 03             	shr    $0x3,%eax
    41f3:	89 c1                	mov    %eax,%ecx
    41f5:	48 89 d7             	mov    %rdx,%rdi
    41f8:	48 89 f0             	mov    %rsi,%rax
    41fb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    41fe:	90                   	nop
    41ff:	c9                   	leave
    4200:	c3                   	ret

0000000000004201 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    4201:	55                   	push   %rbp
    4202:	48 89 e5             	mov    %rsp,%rbp
    4205:	48 83 ec 20          	sub    $0x20,%rsp
    4209:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    420d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4211:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    4215:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4219:	48 89 c7             	mov    %rax,%rdi
    421c:	e8 b1 01 00 00       	call   43d2 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    4221:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4225:	48 89 c7             	mov    %rax,%rdi
    4228:	e8 36 f0 ff ff       	call   3263 <_ZSt17__size_to_integerm>
    422d:	48 89 c1             	mov    %rax,%rcx
    4230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4234:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4238:	48 89 ce             	mov    %rcx,%rsi
    423b:	48 89 c7             	mov    %rax,%rdi
    423e:	e8 9a 01 00 00       	call   43dd <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    4243:	c9                   	leave
    4244:	c3                   	ret
    4245:	90                   	nop

0000000000004246 <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    4246:	55                   	push   %rbp
    4247:	48 89 e5             	mov    %rsp,%rbp
    424a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    424e:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
    4255:	ff ff 03 
      }
    4258:	5d                   	pop    %rbp
    4259:	c3                   	ret

000000000000425a <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    425a:	55                   	push   %rbp
    425b:	48 89 e5             	mov    %rsp,%rbp
    425e:	48 83 ec 20          	sub    $0x20,%rsp
    4262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4266:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    426a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    426e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4272:	48 89 c7             	mov    %rax,%rdi
    4275:	e8 cc ff ff ff       	call   4246 <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv>
    427a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    427e:	0f 92 c0             	setb   %al
    4281:	0f b6 c0             	movzbl %al,%eax
    4284:	48 85 c0             	test   %rax,%rax
    4287:	0f 95 c0             	setne  %al
    428a:	84 c0                	test   %al,%al
    428c:	74 1a                	je     42a8 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    428e:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
    4295:	ff ff 07 
    4298:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    429c:	73 05                	jae    42a3 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    429e:	e8 1d de ff ff       	call   20c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    42a3:	e8 88 dd ff ff       	call   2030 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    42a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    42ac:	48 c1 e0 05          	shl    $0x5,%rax
    42b0:	48 89 c7             	mov    %rax,%rdi
    42b3:	e8 68 de ff ff       	call   2120 <_Znwm@plt>
    42b8:	90                   	nop
      }
    42b9:	c9                   	leave
    42ba:	c3                   	ret

00000000000042bb <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    42bb:	55                   	push   %rbp
    42bc:	48 89 e5             	mov    %rsp,%rbp
    42bf:	48 83 ec 10          	sub    $0x10,%rsp
    42c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    42c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42cb:	48 89 c6             	mov    %rax,%rsi
    42ce:	bf 20 00 00 00       	mov    $0x20,%edi
    42d3:	e8 79 ef ff ff       	call   3251 <_ZnwmPv>
    42d8:	48 89 c7             	mov    %rax,%rdi
    42db:	e8 d0 de ff ff       	call   21b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
    }
    42e0:	90                   	nop
    42e1:	c9                   	leave
    42e2:	c3                   	ret
    42e3:	90                   	nop

00000000000042e4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    42e4:	55                   	push   %rbp
    42e5:	48 89 e5             	mov    %rsp,%rbp
    42e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    42ec:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    42f3:	ff ff 0f 
      }
    42f6:	5d                   	pop    %rbp
    42f7:	c3                   	ret

00000000000042f8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    42f8:	55                   	push   %rbp
    42f9:	48 89 e5             	mov    %rsp,%rbp
    42fc:	48 83 ec 20          	sub    $0x20,%rsp
    4300:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4304:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4308:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    430c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4310:	48 89 c7             	mov    %rax,%rdi
    4313:	e8 cc ff ff ff       	call   42e4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    4318:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    431c:	0f 92 c0             	setb   %al
    431f:	0f b6 c0             	movzbl %al,%eax
    4322:	48 85 c0             	test   %rax,%rax
    4325:	0f 95 c0             	setne  %al
    4328:	84 c0                	test   %al,%al
    432a:	74 1a                	je     4346 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    432c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    4333:	ff ff 1f 
    4336:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    433a:	73 05                	jae    4341 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    433c:	e8 7f dd ff ff       	call   20c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    4341:	e8 ea dc ff ff       	call   2030 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4346:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    434a:	48 c1 e0 03          	shl    $0x3,%rax
    434e:	48 89 c7             	mov    %rax,%rdi
    4351:	e8 ca dd ff ff       	call   2120 <_Znwm@plt>
    4356:	90                   	nop
      }
    4357:	c9                   	leave
    4358:	c3                   	ret

0000000000004359 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    4359:	55                   	push   %rbp
    435a:	48 89 e5             	mov    %rsp,%rbp
    435d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    4361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4365:	5d                   	pop    %rbp
    4366:	c3                   	ret

0000000000004367 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    4367:	55                   	push   %rbp
    4368:	48 89 e5             	mov    %rsp,%rbp
    436b:	48 83 ec 10          	sub    $0x10,%rsp
    436f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    4373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4377:	48 89 c6             	mov    %rax,%rsi
    437a:	bf 08 00 00 00       	mov    $0x8,%edi
    437f:	e8 cd ee ff ff       	call   3251 <_ZnwmPv>
    4384:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    438b:	90                   	nop
    438c:	c9                   	leave
    438d:	c3                   	ret

000000000000438e <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    438e:	55                   	push   %rbp
    438f:	48 89 e5             	mov    %rsp,%rbp
    4392:	48 83 ec 20          	sub    $0x20,%rsp
    4396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    439a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    439e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    43a2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    43a6:	48 89 c7             	mov    %rax,%rdi
    43a9:	e8 9e 00 00 00       	call   444c <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    43ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    43b2:	48 89 c7             	mov    %rax,%rdi
    43b5:	e8 a9 ee ff ff       	call   3263 <_ZSt17__size_to_integerm>
    43ba:	48 89 c1             	mov    %rax,%rcx
    43bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    43c5:	48 89 ce             	mov    %rcx,%rsi
    43c8:	48 89 c7             	mov    %rax,%rdi
    43cb:	e8 87 00 00 00       	call   4457 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    43d0:	c9                   	leave
    43d1:	c3                   	ret

00000000000043d2 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    43d2:	55                   	push   %rbp
    43d3:	48 89 e5             	mov    %rsp,%rbp
    43d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    43da:	90                   	nop
    43db:	5d                   	pop    %rbp
    43dc:	c3                   	ret

00000000000043dd <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    43dd:	55                   	push   %rbp
    43de:	48 89 e5             	mov    %rsp,%rbp
    43e1:	48 83 ec 20          	sub    $0x20,%rsp
    43e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    43f1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    43f6:	75 06                	jne    43fe <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    43f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43fc:	eb 4c                	jmp    444a <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    43fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4402:	48 89 d0             	mov    %rdx,%rax
    4405:	48 c1 e0 06          	shl    $0x6,%rax
    4409:	48 01 d0             	add    %rdx,%rax
    440c:	48 c1 e0 02          	shl    $0x2,%rax
    4410:	48 89 c2             	mov    %rax,%rdx
    4413:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4417:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    441b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    441f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4423:	48 89 ce             	mov    %rcx,%rsi
    4426:	48 89 c7             	mov    %rax,%rdi
    4429:	e8 86 00 00 00       	call   44b4 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    442e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4432:	48 89 d0             	mov    %rdx,%rax
    4435:	48 c1 e0 06          	shl    $0x6,%rax
    4439:	48 01 d0             	add    %rdx,%rax
    443c:	48 c1 e0 02          	shl    $0x2,%rax
    4440:	48 89 c2             	mov    %rax,%rdx
    4443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4447:	48 01 d0             	add    %rdx,%rax
    }
    444a:	c9                   	leave
    444b:	c3                   	ret

000000000000444c <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    444c:	55                   	push   %rbp
    444d:	48 89 e5             	mov    %rsp,%rbp
    4450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4454:	90                   	nop
    4455:	5d                   	pop    %rbp
    4456:	c3                   	ret

0000000000004457 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    4457:	55                   	push   %rbp
    4458:	48 89 e5             	mov    %rsp,%rbp
    445b:	48 83 ec 20          	sub    $0x20,%rsp
    445f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4463:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4467:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    446b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4470:	75 06                	jne    4478 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    4472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4476:	eb 3a                	jmp    44b2 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    4478:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    447c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4483:	00 
    4484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4488:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    448c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4494:	48 89 ce             	mov    %rcx,%rsi
    4497:	48 89 c7             	mov    %rax,%rdi
    449a:	e8 43 00 00 00       	call   44e2 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    449f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    44a3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    44aa:	00 
    44ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44af:	48 01 d0             	add    %rdx,%rax
    }
    44b2:	c9                   	leave
    44b3:	c3                   	ret

00000000000044b4 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    44b4:	55                   	push   %rbp
    44b5:	48 89 e5             	mov    %rsp,%rbp
    44b8:	48 83 ec 20          	sub    $0x20,%rsp
    44bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    44c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    44cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    44d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44d4:	48 89 ce             	mov    %rcx,%rsi
    44d7:	48 89 c7             	mov    %rax,%rdi
    44da:	e8 31 00 00 00       	call   4510 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    44df:	90                   	nop
    44e0:	c9                   	leave
    44e1:	c3                   	ret

00000000000044e2 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    44e2:	55                   	push   %rbp
    44e3:	48 89 e5             	mov    %rsp,%rbp
    44e6:	48 83 ec 20          	sub    $0x20,%rsp
    44ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    44f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    44fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    44fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4502:	48 89 ce             	mov    %rcx,%rsi
    4505:	48 89 c7             	mov    %rax,%rdi
    4508:	e8 7b 00 00 00       	call   4588 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    450d:	90                   	nop
    450e:	c9                   	leave
    450f:	c3                   	ret

0000000000004510 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    4510:	55                   	push   %rbp
    4511:	48 89 e5             	mov    %rsp,%rbp
    4514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4518:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    451c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    4520:	eb 58                	jmp    457a <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    4522:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4526:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    452a:	b9 04 01 00 00       	mov    $0x104,%ecx
    452f:	48 8b 32             	mov    (%rdx),%rsi
    4532:	48 89 30             	mov    %rsi,(%rax)
    4535:	89 ce                	mov    %ecx,%esi
    4537:	48 01 c6             	add    %rax,%rsi
    453a:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    453e:	89 ce                	mov    %ecx,%esi
    4540:	48 01 d6             	add    %rdx,%rsi
    4543:	48 83 c6 08          	add    $0x8,%rsi
    4547:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    454b:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    454f:	48 8d 78 08          	lea    0x8(%rax),%rdi
    4553:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    4557:	48 29 f8             	sub    %rdi,%rax
    455a:	48 29 c2             	sub    %rax,%rdx
    455d:	01 c1                	add    %eax,%ecx
    455f:	83 e1 f8             	and    $0xfffffff8,%ecx
    4562:	89 c8                	mov    %ecx,%eax
    4564:	c1 e8 03             	shr    $0x3,%eax
    4567:	89 c0                	mov    %eax,%eax
    4569:	48 89 d6             	mov    %rdx,%rsi
    456c:	48 89 c1             	mov    %rax,%rcx
    456f:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    4572:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    4579:	00 
    457a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    457e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4582:	75 9e                	jne    4522 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    4584:	90                   	nop
    4585:	90                   	nop
    4586:	5d                   	pop    %rbp
    4587:	c3                   	ret

0000000000004588 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    4588:	55                   	push   %rbp
    4589:	48 89 e5             	mov    %rsp,%rbp
    458c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4590:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4594:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    4598:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    459c:	48 8b 00             	mov    (%rax),%rax
    459f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    45a3:	eb 10                	jmp    45b5 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    45a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    45ad:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    45b0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    45b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45b9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    45bd:	75 e6                	jne    45a5 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    45bf:	90                   	nop
    45c0:	90                   	nop
    45c1:	5d                   	pop    %rbp
    45c2:	c3                   	ret

00000000000045c3 <_ZN3vkh19makeApplicationInfoEPKc>:
#include "make_info.hpp"

namespace vkh {
VkApplicationInfo makeApplicationInfo(const char *pApplicationName) {
    45c3:	55                   	push   %rbp
    45c4:	48 89 e5             	mov    %rsp,%rbp
    45c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    45cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45d3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    45d7:	0f 11 00             	movups %xmm0,(%rax)
    45da:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    45de:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    45e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45e6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    45ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45f4:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    45f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45fc:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    4603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4607:	48 8d 15 8a 22 00 00 	lea    0x228a(%rip),%rdx        # 6898 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    460e:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    4612:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4616:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    461d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4621:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    4628:	90                   	nop
}
    4629:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    462d:	5d                   	pop    %rbp
    462e:	c3                   	ret

000000000000462f <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcPKv>:

VkInstanceCreateInfo makeInstanceCreateInfo(
    const VkApplicationInfo *appInfo, uint32_t enabledLayerCount,
    const char *const *ppEnabledLayerNames, const void *pNext) {
    462f:	55                   	push   %rbp
    4630:	48 89 e5             	mov    %rsp,%rbp
    4633:	48 83 ec 40          	sub    $0x40,%rsp
    4637:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    463b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    463f:	89 55 dc             	mov    %edx,-0x24(%rbp)
    4642:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    4646:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  VkInstanceCreateInfo createInfo{};
    464a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    464e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4652:	0f 11 00             	movups %xmm0,(%rax)
    4655:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4659:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    465d:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    4661:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4665:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    466b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    466f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4673:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    4677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    467b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    467f:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    4683:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4687:	8b 55 dc             	mov    -0x24(%rbp),%edx
    468a:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    468d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4691:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4695:	48 89 50 28          	mov    %rdx,0x28(%rax)

  createInfo.enabledLayerCount = 0;
    4699:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    469d:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
  createInfo.ppEnabledLayerNames = nullptr;
    46a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46a8:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    46af:	00 

  uint32_t glfwExtensionCount;
  const char **glfwExtensions;
  glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    46b0:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
    46b4:	48 89 c7             	mov    %rax,%rdi
    46b7:	e8 f4 d9 ff ff       	call   20b0 <glfwGetRequiredInstanceExtensions@plt>
    46bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  createInfo.enabledExtensionCount = glfwExtensionCount;
    46c0:	8b 55 f4             	mov    -0xc(%rbp),%edx
    46c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46c7:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = glfwExtensions;
    46ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    46d2:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    46d6:	90                   	nop
}
    46d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46db:	c9                   	leave
    46dc:	c3                   	ret

Disassembly of section .fini:

00000000000046e0 <_fini>:
    46e0:	48 83 ec 08          	sub    $0x8,%rsp
    46e4:	48 83 c4 08          	add    $0x8,%rsp
    46e8:	c3                   	ret
