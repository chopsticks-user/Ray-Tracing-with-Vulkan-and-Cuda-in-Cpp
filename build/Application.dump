
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	48 83 ec 08          	sub    $0x8,%rsp
    2004:	48 8b 05 ad df 00 00 	mov    0xdfad(%rip),%rax        # ffb8 <__gmon_start__@Base>
    200b:	48 85 c0             	test   %rax,%rax
    200e:	74 02                	je     2012 <_init+0x12>
    2010:	ff d0                	call   *%rax
    2012:	48 83 c4 08          	add    $0x8,%rsp
    2016:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <glfwDestroyWindow@plt-0x10>:
    2020:	ff 35 ca df 00 00    	push   0xdfca(%rip)        # fff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 cc df 00 00    	jmp    *0xdfcc(%rip)        # fff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002030 <glfwDestroyWindow@plt>:
    2030:	ff 25 ca df 00 00    	jmp    *0xdfca(%rip)        # 10000 <glfwDestroyWindow@Base>
    2036:	68 00 00 00 00       	push   $0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002040 <_ZSt17__throw_bad_allocv@plt>:
    2040:	ff 25 c2 df 00 00    	jmp    *0xdfc2(%rip)        # 10008 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    2046:	68 01 00 00 00       	push   $0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002050 <_ZNSt13runtime_errorC1EPKc@plt>:
    2050:	ff 25 ba df 00 00    	jmp    *0xdfba(%rip)        # 10010 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    2056:	68 02 00 00 00       	push   $0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002060 <vkGetPhysicalDeviceProperties@plt>:
    2060:	ff 25 b2 df 00 00    	jmp    *0xdfb2(%rip)        # 10018 <vkGetPhysicalDeviceProperties@Base>
    2066:	68 03 00 00 00       	push   $0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002070 <__cxa_begin_catch@plt>:
    2070:	ff 25 aa df 00 00    	jmp    *0xdfaa(%rip)        # 10020 <__cxa_begin_catch@CXXABI_1.3>
    2076:	68 04 00 00 00       	push   $0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002080 <strlen@plt>:
    2080:	ff 25 a2 df 00 00    	jmp    *0xdfa2(%rip)        # 10028 <strlen@GLIBC_2.2.5>
    2086:	68 05 00 00 00       	push   $0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002090 <memcmp@plt>:
    2090:	ff 25 9a df 00 00    	jmp    *0xdf9a(%rip)        # 10030 <memcmp@GLIBC_2.2.5>
    2096:	68 06 00 00 00       	push   $0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020a0 <__cxa_allocate_exception@plt>:
    20a0:	ff 25 92 df 00 00    	jmp    *0xdf92(%rip)        # 10038 <__cxa_allocate_exception@CXXABI_1.3>
    20a6:	68 07 00 00 00       	push   $0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020b0 <_ZSt20__throw_length_errorPKc@plt>:
    20b0:	ff 25 8a df 00 00    	jmp    *0xdf8a(%rip)        # 10040 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    20b6:	68 08 00 00 00       	push   $0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020c0 <vkEnumeratePhysicalDevices@plt>:
    20c0:	ff 25 82 df 00 00    	jmp    *0xdf82(%rip)        # 10048 <vkEnumeratePhysicalDevices@Base>
    20c6:	68 09 00 00 00       	push   $0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020d0 <__cxa_free_exception@plt>:
    20d0:	ff 25 7a df 00 00    	jmp    *0xdf7a(%rip)        # 10050 <__cxa_free_exception@CXXABI_1.3>
    20d6:	68 0a 00 00 00       	push   $0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    20e0:	ff 25 72 df 00 00    	jmp    *0xdf72(%rip)        # 10058 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    20e6:	68 0b 00 00 00       	push   $0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020f0 <glfwGetRequiredInstanceExtensions@plt>:
    20f0:	ff 25 6a df 00 00    	jmp    *0xdf6a(%rip)        # 10060 <glfwGetRequiredInstanceExtensions@Base>
    20f6:	68 0c 00 00 00       	push   $0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002100 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    2100:	ff 25 62 df 00 00    	jmp    *0xdf62(%rip)        # 10068 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    2106:	68 0d 00 00 00       	push   $0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002110 <vkDestroyDevice@plt>:
    2110:	ff 25 5a df 00 00    	jmp    *0xdf5a(%rip)        # 10070 <vkDestroyDevice@Base>
    2116:	68 0e 00 00 00       	push   $0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002120 <vkEnumerateInstanceExtensionProperties@plt>:
    2120:	ff 25 52 df 00 00    	jmp    *0xdf52(%rip)        # 10078 <vkEnumerateInstanceExtensionProperties@Base>
    2126:	68 0f 00 00 00       	push   $0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002130 <glfwWindowHint@plt>:
    2130:	ff 25 4a df 00 00    	jmp    *0xdf4a(%rip)        # 10080 <glfwWindowHint@Base>
    2136:	68 10 00 00 00       	push   $0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002140 <__cxa_atexit@plt>:
    2140:	ff 25 42 df 00 00    	jmp    *0xdf42(%rip)        # 10088 <__cxa_atexit@GLIBC_2.2.5>
    2146:	68 11 00 00 00       	push   $0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002150 <vkGetPhysicalDeviceProperties2@plt>:
    2150:	ff 25 3a df 00 00    	jmp    *0xdf3a(%rip)        # 10090 <vkGetPhysicalDeviceProperties2@Base>
    2156:	68 12 00 00 00       	push   $0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002160 <vkGetInstanceProcAddr@plt>:
    2160:	ff 25 32 df 00 00    	jmp    *0xdf32(%rip)        # 10098 <vkGetInstanceProcAddr@Base>
    2166:	68 13 00 00 00       	push   $0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002170 <glfwPollEvents@plt>:
    2170:	ff 25 2a df 00 00    	jmp    *0xdf2a(%rip)        # 100a0 <glfwPollEvents@Base>
    2176:	68 14 00 00 00       	push   $0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    2180:	ff 25 22 df 00 00    	jmp    *0xdf22(%rip)        # 100a8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    2186:	68 15 00 00 00       	push   $0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002190 <_Znwm@plt>:
    2190:	ff 25 1a df 00 00    	jmp    *0xdf1a(%rip)        # 100b0 <_Znwm@GLIBCXX_3.4>
    2196:	68 16 00 00 00       	push   $0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021a0 <_ZdlPvm@plt>:
    21a0:	ff 25 12 df 00 00    	jmp    *0xdf12(%rip)        # 100b8 <_ZdlPvm@CXXABI_1.3.9>
    21a6:	68 17 00 00 00       	push   $0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021b0 <vkDestroyInstance@plt>:
    21b0:	ff 25 0a df 00 00    	jmp    *0xdf0a(%rip)        # 100c0 <vkDestroyInstance@Base>
    21b6:	68 18 00 00 00       	push   $0x18
    21bb:	e9 60 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021c0 <glfwTerminate@plt>:
    21c0:	ff 25 02 df 00 00    	jmp    *0xdf02(%rip)        # 100c8 <glfwTerminate@Base>
    21c6:	68 19 00 00 00       	push   $0x19
    21cb:	e9 50 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021d0 <_ZNSolsEPFRSoS_E@plt>:
    21d0:	ff 25 fa de 00 00    	jmp    *0xdefa(%rip)        # 100d0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    21d6:	68 1a 00 00 00       	push   $0x1a
    21db:	e9 40 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021e0 <vkEnumerateInstanceLayerProperties@plt>:
    21e0:	ff 25 f2 de 00 00    	jmp    *0xdef2(%rip)        # 100d8 <vkEnumerateInstanceLayerProperties@Base>
    21e6:	68 1b 00 00 00       	push   $0x1b
    21eb:	e9 30 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021f0 <glfwInit@plt>:
    21f0:	ff 25 ea de 00 00    	jmp    *0xdeea(%rip)        # 100e0 <glfwInit@Base>
    21f6:	68 1c 00 00 00       	push   $0x1c
    21fb:	e9 20 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002200 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    2200:	ff 25 e2 de 00 00    	jmp    *0xdee2(%rip)        # 100e8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    2206:	68 1d 00 00 00       	push   $0x1d
    220b:	e9 10 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002210 <vkCreateInstance@plt>:
    2210:	ff 25 da de 00 00    	jmp    *0xdeda(%rip)        # 100f0 <vkCreateInstance@Base>
    2216:	68 1e 00 00 00       	push   $0x1e
    221b:	e9 00 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002220 <vkEnumerateDeviceExtensionProperties@plt>:
    2220:	ff 25 d2 de 00 00    	jmp    *0xded2(%rip)        # 100f8 <vkEnumerateDeviceExtensionProperties@Base>
    2226:	68 1f 00 00 00       	push   $0x1f
    222b:	e9 f0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002230 <vkCreateDevice@plt>:
    2230:	ff 25 ca de 00 00    	jmp    *0xdeca(%rip)        # 10100 <vkCreateDevice@Base>
    2236:	68 20 00 00 00       	push   $0x20
    223b:	e9 e0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002240 <_ZNSt8ios_base4InitC1Ev@plt>:
    2240:	ff 25 c2 de 00 00    	jmp    *0xdec2(%rip)        # 10108 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    2246:	68 21 00 00 00       	push   $0x21
    224b:	e9 d0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002250 <glfwCreateWindow@plt>:
    2250:	ff 25 ba de 00 00    	jmp    *0xdeba(%rip)        # 10110 <glfwCreateWindow@Base>
    2256:	68 22 00 00 00       	push   $0x22
    225b:	e9 c0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002260 <memmove@plt>:
    2260:	ff 25 b2 de 00 00    	jmp    *0xdeb2(%rip)        # 10118 <memmove@GLIBC_2.2.5>
    2266:	68 23 00 00 00       	push   $0x23
    226b:	e9 b0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002270 <__cxa_end_catch@plt>:
    2270:	ff 25 aa de 00 00    	jmp    *0xdeaa(%rip)        # 10120 <__cxa_end_catch@CXXABI_1.3>
    2276:	68 24 00 00 00       	push   $0x24
    227b:	e9 a0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002280 <__cxa_throw@plt>:
    2280:	ff 25 a2 de 00 00    	jmp    *0xdea2(%rip)        # 10128 <__cxa_throw@CXXABI_1.3>
    2286:	68 25 00 00 00       	push   $0x25
    228b:	e9 90 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002290 <_Unwind_Resume@plt>:
    2290:	ff 25 9a de 00 00    	jmp    *0xde9a(%rip)        # 10130 <_Unwind_Resume@GCC_3.0>
    2296:	68 26 00 00 00       	push   $0x26
    229b:	e9 80 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022a0 <_ZNSt9exceptionD2Ev@plt>:
    22a0:	ff 25 92 de 00 00    	jmp    *0xde92(%rip)        # 10138 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    22a6:	68 27 00 00 00       	push   $0x27
    22ab:	e9 70 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022b0 <glfwWindowShouldClose@plt>:
    22b0:	ff 25 8a de 00 00    	jmp    *0xde8a(%rip)        # 10140 <glfwWindowShouldClose@Base>
    22b6:	68 28 00 00 00       	push   $0x28
    22bb:	e9 60 fd ff ff       	jmp    2020 <_init+0x20>

Disassembly of section .plt.got:

00000000000022c0 <__cxa_finalize@plt>:
    22c0:	ff 25 ca dc 00 00    	jmp    *0xdcca(%rip)        # ff90 <__cxa_finalize@GLIBC_2.2.5>
    22c6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000022d0 <_start>:
    22d0:	31 ed                	xor    %ebp,%ebp
    22d2:	49 89 d1             	mov    %rdx,%r9
    22d5:	5e                   	pop    %rsi
    22d6:	48 89 e2             	mov    %rsp,%rdx
    22d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    22dd:	50                   	push   %rax
    22de:	54                   	push   %rsp
    22df:	45 31 c0             	xor    %r8d,%r8d
    22e2:	31 c9                	xor    %ecx,%ecx
    22e4:	48 8d 3d 24 01 00 00 	lea    0x124(%rip),%rdi        # 240f <main>
    22eb:	ff 15 af dc 00 00    	call   *0xdcaf(%rip)        # ffa0 <__libc_start_main@GLIBC_2.34>
    22f1:	f4                   	hlt
    22f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f9:	00 00 00 
    22fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002300 <deregister_tm_clones>:
    2300:	48 8d 3d 61 de 00 00 	lea    0xde61(%rip),%rdi        # 10168 <__TMC_END__>
    2307:	48 8d 05 5a de 00 00 	lea    0xde5a(%rip),%rax        # 10168 <__TMC_END__>
    230e:	48 39 f8             	cmp    %rdi,%rax
    2311:	74 15                	je     2328 <deregister_tm_clones+0x28>
    2313:	48 8b 05 96 dc 00 00 	mov    0xdc96(%rip),%rax        # ffb0 <_ITM_deregisterTMCloneTable@Base>
    231a:	48 85 c0             	test   %rax,%rax
    231d:	74 09                	je     2328 <deregister_tm_clones+0x28>
    231f:	ff e0                	jmp    *%rax
    2321:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2328:	c3                   	ret
    2329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002330 <register_tm_clones>:
    2330:	48 8d 3d 31 de 00 00 	lea    0xde31(%rip),%rdi        # 10168 <__TMC_END__>
    2337:	48 8d 35 2a de 00 00 	lea    0xde2a(%rip),%rsi        # 10168 <__TMC_END__>
    233e:	48 29 fe             	sub    %rdi,%rsi
    2341:	48 89 f0             	mov    %rsi,%rax
    2344:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2348:	48 c1 f8 03          	sar    $0x3,%rax
    234c:	48 01 c6             	add    %rax,%rsi
    234f:	48 d1 fe             	sar    %rsi
    2352:	74 14                	je     2368 <register_tm_clones+0x38>
    2354:	48 8b 05 65 dc 00 00 	mov    0xdc65(%rip),%rax        # ffc0 <_ITM_registerTMCloneTable@Base>
    235b:	48 85 c0             	test   %rax,%rax
    235e:	74 08                	je     2368 <register_tm_clones+0x38>
    2360:	ff e0                	jmp    *%rax
    2362:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2368:	c3                   	ret
    2369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002370 <__do_global_dtors_aux>:
    2370:	f3 0f 1e fa          	endbr64
    2374:	80 3d 35 e0 00 00 00 	cmpb   $0x0,0xe035(%rip)        # 103b0 <completed.0>
    237b:	75 2b                	jne    23a8 <__do_global_dtors_aux+0x38>
    237d:	55                   	push   %rbp
    237e:	48 83 3d 0a dc 00 00 	cmpq   $0x0,0xdc0a(%rip)        # ff90 <__cxa_finalize@GLIBC_2.2.5>
    2385:	00 
    2386:	48 89 e5             	mov    %rsp,%rbp
    2389:	74 0c                	je     2397 <__do_global_dtors_aux+0x27>
    238b:	48 8b 3d be dd 00 00 	mov    0xddbe(%rip),%rdi        # 10150 <__dso_handle>
    2392:	e8 29 ff ff ff       	call   22c0 <__cxa_finalize@plt>
    2397:	e8 64 ff ff ff       	call   2300 <deregister_tm_clones>
    239c:	c6 05 0d e0 00 00 01 	movb   $0x1,0xe00d(%rip)        # 103b0 <completed.0>
    23a3:	5d                   	pop    %rbp
    23a4:	c3                   	ret
    23a5:	0f 1f 00             	nopl   (%rax)
    23a8:	c3                   	ret
    23a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000023b0 <frame_dummy>:
    23b0:	f3 0f 1e fa          	endbr64
    23b4:	e9 77 ff ff ff       	jmp    2330 <register_tm_clones>

00000000000023b9 <_Z14protected_mainv>:
#include <vkh.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    23b9:	55                   	push   %rbp
    23ba:	48 89 e5             	mov    %rsp,%rbp
    23bd:	53                   	push   %rbx
    23be:	48 83 ec 48          	sub    $0x48,%rsp
  VulkanApp app;
    23c2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    23c6:	48 89 c7             	mov    %rax,%rdi
    23c9:	e8 de 49 00 00       	call   6dac <_ZN9VulkanAppC1Ev>
  app.run();
    23ce:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    23d2:	48 89 c7             	mov    %rax,%rdi
    23d5:	e8 30 4b 00 00       	call   6f0a <_ZN9VulkanApp3runEv>
  // std::cout << 2 & 1 << '\n';
  return EXIT_SUCCESS;
    23da:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    23df:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    23e3:	48 89 c7             	mov    %rax,%rdi
    23e6:	e8 a1 4a 00 00       	call   6e8c <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    23eb:	89 d8                	mov    %ebx,%eax
    23ed:	eb 1a                	jmp    2409 <_Z14protected_mainv+0x50>
}
    23ef:	48 89 c3             	mov    %rax,%rbx
    23f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    23f6:	48 89 c7             	mov    %rax,%rdi
    23f9:	e8 8e 4a 00 00       	call   6e8c <_ZN9VulkanAppD1Ev>
    23fe:	48 89 d8             	mov    %rbx,%rax
    2401:	48 89 c7             	mov    %rax,%rdi
    2404:	e8 87 fe ff ff       	call   2290 <_Unwind_Resume@plt>
    2409:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    240d:	c9                   	leave
    240e:	c3                   	ret

000000000000240f <main>:

int main() {
    240f:	55                   	push   %rbp
    2410:	48 89 e5             	mov    %rsp,%rbp
    2413:	53                   	push   %rbx
    2414:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    2418:	e8 9c ff ff ff       	call   23b9 <_Z14protected_mainv>
    241d:	e9 aa 00 00 00       	jmp    24cc <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    2422:	b8 01 00 00 00       	mov    $0x1,%eax
    2427:	e9 a0 00 00 00       	jmp    24cc <main+0xbd>
  } catch (const std::exception &e) {
    242c:	48 83 fa 01          	cmp    $0x1,%rdx
    2430:	75 49                	jne    247b <main+0x6c>
    2432:	48 89 c7             	mov    %rax,%rdi
    2435:	e8 36 fc ff ff       	call   2070 <__cxa_begin_catch@plt>
    243a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    243e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2442:	48 8b 00             	mov    (%rax),%rax
    2445:	48 83 c0 10          	add    $0x10,%rax
    2449:	48 8b 10             	mov    (%rax),%rdx
    244c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2450:	48 89 c7             	mov    %rax,%rdi
    2453:	ff d2                	call   *%rdx
    2455:	48 89 c6             	mov    %rax,%rsi
    2458:	48 8d 05 41 de 00 00 	lea    0xde41(%rip),%rax        # 102a0 <_ZSt4cerr@GLIBCXX_3.4>
    245f:	48 89 c7             	mov    %rax,%rdi
    2462:	e8 19 fd ff ff       	call   2180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    2467:	be 0a 00 00 00       	mov    $0xa,%esi
    246c:	48 89 c7             	mov    %rax,%rdi
    246f:	e8 8c fd ff ff       	call   2200 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    2474:	e8 f7 fd ff ff       	call   2270 <__cxa_end_catch@plt>
    2479:	eb a7                	jmp    2422 <main+0x13>
    247b:	48 89 c7             	mov    %rax,%rdi
    247e:	e8 ed fb ff ff       	call   2070 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    2483:	48 8d 05 5e 61 00 00 	lea    0x615e(%rip),%rax        # 85e8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    248a:	48 89 c6             	mov    %rax,%rsi
    248d:	48 8d 05 0c de 00 00 	lea    0xde0c(%rip),%rax        # 102a0 <_ZSt4cerr@GLIBCXX_3.4>
    2494:	48 89 c7             	mov    %rax,%rdi
    2497:	e8 e4 fc ff ff       	call   2180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    249c:	e8 cf fd ff ff       	call   2270 <__cxa_end_catch@plt>
    24a1:	e9 7c ff ff ff       	jmp    2422 <main+0x13>
  } catch (...) {
    24a6:	48 89 c3             	mov    %rax,%rbx
    24a9:	e8 c2 fd ff ff       	call   2270 <__cxa_end_catch@plt>
    24ae:	48 89 d8             	mov    %rbx,%rax
    24b1:	48 89 c7             	mov    %rax,%rdi
    24b4:	e8 d7 fd ff ff       	call   2290 <_Unwind_Resume@plt>
  }
    24b9:	48 89 c3             	mov    %rax,%rbx
    24bc:	e8 af fd ff ff       	call   2270 <__cxa_end_catch@plt>
    24c1:	48 89 d8             	mov    %rbx,%rax
    24c4:	48 89 c7             	mov    %rax,%rdi
    24c7:	e8 c4 fd ff ff       	call   2290 <_Unwind_Resume@plt>
    24cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    24d0:	c9                   	leave
    24d1:	c3                   	ret

00000000000024d2 <_Z41__static_initialization_and_destruction_0ii>:
    24d2:	55                   	push   %rbp
    24d3:	48 89 e5             	mov    %rsp,%rbp
    24d6:	48 83 ec 10          	sub    $0x10,%rsp
    24da:	89 7d fc             	mov    %edi,-0x4(%rbp)
    24dd:	89 75 f8             	mov    %esi,-0x8(%rbp)
    24e0:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    24e4:	75 3b                	jne    2521 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    24e6:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    24ed:	75 32                	jne    2521 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    24ef:	48 8d 05 bb de 00 00 	lea    0xdebb(%rip),%rax        # 103b1 <_ZStL8__ioinit>
    24f6:	48 89 c7             	mov    %rax,%rdi
    24f9:	e8 42 fd ff ff       	call   2240 <_ZNSt8ios_base4InitC1Ev@plt>
    24fe:	48 8d 05 4b dc 00 00 	lea    0xdc4b(%rip),%rax        # 10150 <__dso_handle>
    2505:	48 89 c2             	mov    %rax,%rdx
    2508:	48 8d 05 a2 de 00 00 	lea    0xdea2(%rip),%rax        # 103b1 <_ZStL8__ioinit>
    250f:	48 89 c6             	mov    %rax,%rsi
    2512:	48 8b 05 af da 00 00 	mov    0xdaaf(%rip),%rax        # ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    2519:	48 89 c7             	mov    %rax,%rdi
    251c:	e8 1f fc ff ff       	call   2140 <__cxa_atexit@plt>
    2521:	90                   	nop
    2522:	c9                   	leave
    2523:	c3                   	ret

0000000000002524 <_GLOBAL__sub_I__Z14protected_mainv>:
    2524:	55                   	push   %rbp
    2525:	48 89 e5             	mov    %rsp,%rbp
    2528:	be ff ff 00 00       	mov    $0xffff,%esi
    252d:	bf 01 00 00 00       	mov    $0x1,%edi
    2532:	e8 9b ff ff ff       	call   24d2 <_Z41__static_initialization_and_destruction_0ii>
    2537:	5d                   	pop    %rbp
    2538:	c3                   	ret

0000000000002539 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    2539:	55                   	push   %rbp
    253a:	48 89 e5             	mov    %rsp,%rbp
    253d:	48 83 ec 20          	sub    $0x20,%rsp
    2541:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2544:	89 75 f8             	mov    %esi,-0x8(%rbp)
    2547:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    254b:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    254f:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    2553:	be 00 00 00 00       	mov    $0x0,%esi
    2558:	bf 01 20 02 00       	mov    $0x22001,%edi
    255d:	e8 ce fb ff ff       	call   2130 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    2562:	be 00 00 00 00       	mov    $0x0,%esi
    2567:	bf 03 00 02 00       	mov    $0x20003,%edi
    256c:	e8 bf fb ff ff       	call   2130 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    2571:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2575:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2579:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    257d:	8b 75 f8             	mov    -0x8(%rbp),%esi
    2580:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2583:	49 89 f8             	mov    %rdi,%r8
    2586:	89 c7                	mov    %eax,%edi
    2588:	e8 c3 fc ff ff       	call   2250 <glfwCreateWindow@plt>
}
    258d:	c9                   	leave
    258e:	c3                   	ret

000000000000258f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    258f:	55                   	push   %rbp
    2590:	48 89 e5             	mov    %rsp,%rbp
    2593:	41 54                	push   %r12
    2595:	53                   	push   %rbx
    2596:	48 83 ec 20          	sub    $0x20,%rsp
    259a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    259e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    25a2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    25a6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    25aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    25ae:	48 89 ce             	mov    %rcx,%rsi
    25b1:	48 89 c7             	mov    %rax,%rdi
    25b4:	e8 57 fc ff ff       	call   2210 <vkCreateInstance@plt>
    25b9:	85 c0                	test   %eax,%eax
    25bb:	0f 95 c0             	setne  %al
    25be:	84 c0                	test   %al,%al
    25c0:	74 3b                	je     25fd <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    25c2:	bf 10 00 00 00       	mov    $0x10,%edi
    25c7:	e8 d4 fa ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    25cc:	48 89 c3             	mov    %rax,%rbx
    25cf:	48 8d 05 02 66 00 00 	lea    0x6602(%rip),%rax        # 8bd8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    25d6:	48 89 c6             	mov    %rax,%rsi
    25d9:	48 89 df             	mov    %rbx,%rdi
    25dc:	e8 6f fa ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    25e1:	48 8b 05 c0 d9 00 00 	mov    0xd9c0(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    25e8:	48 89 c2             	mov    %rax,%rdx
    25eb:	48 8d 05 4e d7 00 00 	lea    0xd74e(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    25f2:	48 89 c6             	mov    %rax,%rsi
    25f5:	48 89 df             	mov    %rbx,%rdi
    25f8:	e8 83 fc ff ff       	call   2280 <__cxa_throw@plt>
  }
  return instance;
    25fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2601:	eb 16                	jmp    2619 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    2603:	49 89 c4             	mov    %rax,%r12
    2606:	48 89 df             	mov    %rbx,%rdi
    2609:	e8 c2 fa ff ff       	call   20d0 <__cxa_free_exception@plt>
    260e:	4c 89 e0             	mov    %r12,%rax
    2611:	48 89 c7             	mov    %rax,%rdi
    2614:	e8 77 fc ff ff       	call   2290 <_Unwind_Resume@plt>
}
    2619:	48 83 c4 20          	add    $0x20,%rsp
    261d:	5b                   	pop    %rbx
    261e:	41 5c                	pop    %r12
    2620:	5d                   	pop    %rbp
    2621:	c3                   	ret

0000000000002622 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    2622:	55                   	push   %rbp
    2623:	48 89 e5             	mov    %rsp,%rbp
    2626:	41 54                	push   %r12
    2628:	53                   	push   %rbx
    2629:	48 83 ec 30          	sub    $0x30,%rsp
    262d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2631:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2635:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    2639:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    263d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2641:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    2645:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2649:	48 89 c7             	mov    %rax,%rdi
    264c:	e8 df fb ff ff       	call   2230 <vkCreateDevice@plt>
    2651:	85 c0                	test   %eax,%eax
    2653:	0f 95 c0             	setne  %al
    2656:	84 c0                	test   %al,%al
    2658:	74 3b                	je     2695 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    265a:	bf 10 00 00 00       	mov    $0x10,%edi
    265f:	e8 3c fa ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    2664:	48 89 c3             	mov    %rax,%rbx
    2667:	48 8d 05 8a 65 00 00 	lea    0x658a(%rip),%rax        # 8bf8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    266e:	48 89 c6             	mov    %rax,%rsi
    2671:	48 89 df             	mov    %rbx,%rdi
    2674:	e8 d7 f9 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    2679:	48 8b 05 28 d9 00 00 	mov    0xd928(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2680:	48 89 c2             	mov    %rax,%rdx
    2683:	48 8d 05 b6 d6 00 00 	lea    0xd6b6(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    268a:	48 89 c6             	mov    %rax,%rsi
    268d:	48 89 df             	mov    %rbx,%rdi
    2690:	e8 eb fb ff ff       	call   2280 <__cxa_throw@plt>
  }
  return device;
    2695:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2699:	eb 16                	jmp    26b1 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    269b:	49 89 c4             	mov    %rax,%r12
    269e:	48 89 df             	mov    %rbx,%rdi
    26a1:	e8 2a fa ff ff       	call   20d0 <__cxa_free_exception@plt>
    26a6:	4c 89 e0             	mov    %r12,%rax
    26a9:	48 89 c7             	mov    %rax,%rdi
    26ac:	e8 df fb ff ff       	call   2290 <_Unwind_Resume@plt>
}
    26b1:	48 83 c4 30          	add    $0x30,%rsp
    26b5:	5b                   	pop    %rbx
    26b6:	41 5c                	pop    %r12
    26b8:	5d                   	pop    %rbp
    26b9:	c3                   	ret

00000000000026ba <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    26ba:	55                   	push   %rbp
    26bb:	48 89 e5             	mov    %rsp,%rbp
    26be:	48 83 ec 10          	sub    $0x10,%rsp
    26c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    26c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26ca:	48 89 c7             	mov    %rax,%rdi
    26cd:	e8 5e f9 ff ff       	call   2030 <glfwDestroyWindow@plt>
    26d2:	90                   	nop
    26d3:	c9                   	leave
    26d4:	c3                   	ret

00000000000026d5 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    26d5:	55                   	push   %rbp
    26d6:	48 89 e5             	mov    %rsp,%rbp
    26d9:	48 83 ec 10          	sub    $0x10,%rsp
    26dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    26e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    26e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    26e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26ed:	48 89 d6             	mov    %rdx,%rsi
    26f0:	48 89 c7             	mov    %rax,%rdi
    26f3:	e8 b8 fa ff ff       	call   21b0 <vkDestroyInstance@plt>
}
    26f8:	90                   	nop
    26f9:	c9                   	leave
    26fa:	c3                   	ret

00000000000026fb <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    26fb:	55                   	push   %rbp
    26fc:	48 89 e5             	mov    %rsp,%rbp
    26ff:	48 83 ec 10          	sub    $0x10,%rsp
    2703:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2707:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    270b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    270f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2713:	48 89 d6             	mov    %rdx,%rsi
    2716:	48 89 c7             	mov    %rax,%rdi
    2719:	e8 f2 f9 ff ff       	call   2110 <vkDestroyDevice@plt>
}
    271e:	90                   	nop
    271f:	c9                   	leave
    2720:	c3                   	ret

0000000000002721 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    2721:	55                   	push   %rbp
    2722:	48 89 e5             	mov    %rsp,%rbp
    2725:	41 54                	push   %r12
    2727:	53                   	push   %rbx
    2728:	48 83 ec 20          	sub    $0x20,%rsp
    272c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2730:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2734:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2738:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    273c:	ba 00 00 00 00       	mov    $0x0,%edx
    2741:	48 89 ce             	mov    %rcx,%rsi
    2744:	48 89 c7             	mov    %rax,%rdi
    2747:	e8 d4 f9 ff ff       	call   2120 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    274c:	85 c0                	test   %eax,%eax
    274e:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2751:	84 c0                	test   %al,%al
    2753:	74 3b                	je     2790 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    2755:	bf 10 00 00 00       	mov    $0x10,%edi
    275a:	e8 41 f9 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    275f:	48 89 c3             	mov    %rax,%rbx
    2762:	48 8d 05 67 70 00 00 	lea    0x7067(%rip),%rax        # 97d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2769:	48 89 c6             	mov    %rax,%rsi
    276c:	48 89 df             	mov    %rbx,%rdi
    276f:	e8 dc f8 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    2774:	48 8b 05 2d d8 00 00 	mov    0xd82d(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    277b:	48 89 c2             	mov    %rax,%rdx
    277e:	48 8d 05 bb d5 00 00 	lea    0xd5bb(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2785:	48 89 c6             	mov    %rax,%rsi
    2788:	48 89 df             	mov    %rbx,%rdi
    278b:	e8 f0 fa ff ff       	call   2280 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    2790:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2793:	89 c3                	mov    %eax,%ebx
    2795:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2799:	48 89 c7             	mov    %rax,%rdi
    279c:	e8 4f 07 00 00       	call   2ef0 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    27a1:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    27a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    27a9:	48 89 de             	mov    %rbx,%rsi
    27ac:	48 89 c7             	mov    %rax,%rdi
    27af:	e8 74 07 00 00       	call   2f28 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    27b4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    27b8:	48 89 c7             	mov    %rax,%rdi
    27bb:	e8 4c 07 00 00       	call   2f0c <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    27c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    27c4:	48 89 c7             	mov    %rax,%rdi
    27c7:	e8 16 08 00 00       	call   2fe2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    27cc:	48 89 c2             	mov    %rax,%rdx
    27cf:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    27d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    27d7:	48 89 ce             	mov    %rcx,%rsi
    27da:	48 89 c7             	mov    %rax,%rdi
    27dd:	e8 3e f9 ff ff       	call   2120 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    27e2:	85 c0                	test   %eax,%eax
    27e4:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    27e7:	84 c0                	test   %al,%al
    27e9:	0f 84 95 00 00 00    	je     2884 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    27ef:	bf 10 00 00 00       	mov    $0x10,%edi
    27f4:	e8 a7 f8 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    27f9:	48 89 c3             	mov    %rax,%rbx
    27fc:	48 8d 05 cd 6f 00 00 	lea    0x6fcd(%rip),%rax        # 97d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2803:	48 89 c6             	mov    %rax,%rsi
    2806:	48 89 df             	mov    %rbx,%rdi
    2809:	e8 42 f8 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    280e:	48 8b 05 93 d7 00 00 	mov    0xd793(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2815:	48 89 c2             	mov    %rax,%rdx
    2818:	48 8d 05 21 d5 00 00 	lea    0xd521(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    281f:	48 89 c6             	mov    %rax,%rsi
    2822:	48 89 df             	mov    %rbx,%rdi
    2825:	e8 56 fa ff ff       	call   2280 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    282a:	49 89 c4             	mov    %rax,%r12
    282d:	48 89 df             	mov    %rbx,%rdi
    2830:	e8 9b f8 ff ff       	call   20d0 <__cxa_free_exception@plt>
    2835:	4c 89 e0             	mov    %r12,%rax
    2838:	48 89 c7             	mov    %rax,%rdi
    283b:	e8 50 fa ff ff       	call   2290 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    2840:	48 89 c3             	mov    %rax,%rbx
    2843:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2847:	48 89 c7             	mov    %rax,%rdi
    284a:	e8 bd 06 00 00       	call   2f0c <_ZNSaI21VkExtensionPropertiesED1Ev>
    284f:	48 89 d8             	mov    %rbx,%rax
    2852:	48 89 c7             	mov    %rax,%rdi
    2855:	e8 36 fa ff ff       	call   2290 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    285a:	49 89 c4             	mov    %rax,%r12
    285d:	48 89 df             	mov    %rbx,%rdi
    2860:	e8 6b f8 ff ff       	call   20d0 <__cxa_free_exception@plt>
    2865:	4c 89 e3             	mov    %r12,%rbx
    2868:	eb 03                	jmp    286d <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    286a:	48 89 c3             	mov    %rax,%rbx
    286d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2871:	48 89 c7             	mov    %rax,%rdi
    2874:	e8 25 07 00 00       	call   2f9e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2879:	48 89 d8             	mov    %rbx,%rax
    287c:	48 89 c7             	mov    %rax,%rdi
    287f:	e8 0c fa ff ff       	call   2290 <_Unwind_Resume@plt>
  return instanceExtensions;
    2884:	90                   	nop
}
    2885:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2889:	48 83 c4 20          	add    $0x20,%rsp
    288d:	5b                   	pop    %rbx
    288e:	41 5c                	pop    %r12
    2890:	5d                   	pop    %rbp
    2891:	c3                   	ret

0000000000002892 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    2892:	55                   	push   %rbp
    2893:	48 89 e5             	mov    %rsp,%rbp
    2896:	41 54                	push   %r12
    2898:	53                   	push   %rbx
    2899:	48 83 ec 30          	sub    $0x30,%rsp
    289d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    28a1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    28a5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    28a9:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    28ad:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    28b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    28b5:	b9 00 00 00 00       	mov    $0x0,%ecx
    28ba:	48 89 c7             	mov    %rax,%rdi
    28bd:	e8 5e f9 ff ff       	call   2220 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    28c2:	85 c0                	test   %eax,%eax
    28c4:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    28c7:	84 c0                	test   %al,%al
    28c9:	74 3b                	je     2906 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    28cb:	bf 10 00 00 00       	mov    $0x10,%edi
    28d0:	e8 cb f7 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    28d5:	48 89 c3             	mov    %rax,%rbx
    28d8:	48 8d 05 19 6f 00 00 	lea    0x6f19(%rip),%rax        # 97f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    28df:	48 89 c6             	mov    %rax,%rsi
    28e2:	48 89 df             	mov    %rbx,%rdi
    28e5:	e8 66 f7 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    28ea:	48 8b 05 b7 d6 00 00 	mov    0xd6b7(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    28f1:	48 89 c2             	mov    %rax,%rdx
    28f4:	48 8d 05 45 d4 00 00 	lea    0xd445(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    28fb:	48 89 c6             	mov    %rax,%rsi
    28fe:	48 89 df             	mov    %rbx,%rdi
    2901:	e8 7a f9 ff ff       	call   2280 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2906:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2909:	89 c3                	mov    %eax,%ebx
    290b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    290f:	48 89 c7             	mov    %rax,%rdi
    2912:	e8 d9 05 00 00       	call   2ef0 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    2917:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    291b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    291f:	48 89 de             	mov    %rbx,%rsi
    2922:	48 89 c7             	mov    %rax,%rdi
    2925:	e8 fe 05 00 00       	call   2f28 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    292a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    292e:	48 89 c7             	mov    %rax,%rdi
    2931:	e8 d6 05 00 00       	call   2f0c <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    2936:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    293a:	48 89 c7             	mov    %rax,%rdi
    293d:	e8 a0 06 00 00       	call   2fe2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    2942:	48 89 c1             	mov    %rax,%rcx
    2945:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2949:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    294d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2951:	48 89 c7             	mov    %rax,%rdi
    2954:	e8 c7 f8 ff ff       	call   2220 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    2959:	85 c0                	test   %eax,%eax
    295b:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    295e:	84 c0                	test   %al,%al
    2960:	0f 84 95 00 00 00    	je     29fb <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    2966:	bf 10 00 00 00       	mov    $0x10,%edi
    296b:	e8 30 f7 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    2970:	48 89 c3             	mov    %rax,%rbx
    2973:	48 8d 05 7e 6e 00 00 	lea    0x6e7e(%rip),%rax        # 97f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    297a:	48 89 c6             	mov    %rax,%rsi
    297d:	48 89 df             	mov    %rbx,%rdi
    2980:	e8 cb f6 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    2985:	48 8b 05 1c d6 00 00 	mov    0xd61c(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    298c:	48 89 c2             	mov    %rax,%rdx
    298f:	48 8d 05 aa d3 00 00 	lea    0xd3aa(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2996:	48 89 c6             	mov    %rax,%rsi
    2999:	48 89 df             	mov    %rbx,%rdi
    299c:	e8 df f8 ff ff       	call   2280 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    29a1:	49 89 c4             	mov    %rax,%r12
    29a4:	48 89 df             	mov    %rbx,%rdi
    29a7:	e8 24 f7 ff ff       	call   20d0 <__cxa_free_exception@plt>
    29ac:	4c 89 e0             	mov    %r12,%rax
    29af:	48 89 c7             	mov    %rax,%rdi
    29b2:	e8 d9 f8 ff ff       	call   2290 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    29b7:	48 89 c3             	mov    %rax,%rbx
    29ba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    29be:	48 89 c7             	mov    %rax,%rdi
    29c1:	e8 46 05 00 00       	call   2f0c <_ZNSaI21VkExtensionPropertiesED1Ev>
    29c6:	48 89 d8             	mov    %rbx,%rax
    29c9:	48 89 c7             	mov    %rax,%rdi
    29cc:	e8 bf f8 ff ff       	call   2290 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    29d1:	49 89 c4             	mov    %rax,%r12
    29d4:	48 89 df             	mov    %rbx,%rdi
    29d7:	e8 f4 f6 ff ff       	call   20d0 <__cxa_free_exception@plt>
    29dc:	4c 89 e3             	mov    %r12,%rbx
    29df:	eb 03                	jmp    29e4 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    29e1:	48 89 c3             	mov    %rax,%rbx
    29e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29e8:	48 89 c7             	mov    %rax,%rdi
    29eb:	e8 ae 05 00 00       	call   2f9e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    29f0:	48 89 d8             	mov    %rbx,%rax
    29f3:	48 89 c7             	mov    %rax,%rdi
    29f6:	e8 95 f8 ff ff       	call   2290 <_Unwind_Resume@plt>
  return deviceExtensions;
    29fb:	90                   	nop
}
    29fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a00:	48 83 c4 30          	add    $0x30,%rsp
    2a04:	5b                   	pop    %rbx
    2a05:	41 5c                	pop    %r12
    2a07:	5d                   	pop    %rbp
    2a08:	c3                   	ret

0000000000002a09 <_ZN3vkh36getRequiredInstanceExtensionNameListEb>:

std::vector<const char *>
getRequiredInstanceExtensionNameList(bool enableValidationLayers) {
    2a09:	55                   	push   %rbp
    2a0a:	48 89 e5             	mov    %rsp,%rbp
    2a0d:	53                   	push   %rbx
    2a0e:	48 83 ec 38          	sub    $0x38,%rsp
    2a12:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2a16:	89 f0                	mov    %esi,%eax
    2a18:	88 45 c4             	mov    %al,-0x3c(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    2a1b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2a1f:	48 89 c7             	mov    %rax,%rdi
    2a22:	e8 c9 f6 ff ff       	call   20f0 <glfwGetRequiredInstanceExtensions@plt>
    2a27:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    2a2b:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2a2e:	89 c3                	mov    %eax,%ebx
    2a30:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2a34:	48 89 c7             	mov    %rax,%rdi
    2a37:	e8 22 06 00 00       	call   305e <_ZNSaIPKcEC1Ev>
    2a3c:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    2a40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a44:	48 89 de             	mov    %rbx,%rsi
    2a47:	48 89 c7             	mov    %rax,%rdi
    2a4a:	e8 47 06 00 00       	call   3096 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    2a4f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2a53:	48 89 c7             	mov    %rax,%rdi
    2a56:	e8 1f 06 00 00       	call   307a <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2a5b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2a62:	eb 2e                	jmp    2a92 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x89>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    2a64:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2a67:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2a6e:	00 
    2a6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2a73:	48 01 d0             	add    %rdx,%rax
    2a76:	48 8b 18             	mov    (%rax),%rbx
    2a79:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2a7c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a80:	48 89 d6             	mov    %rdx,%rsi
    2a83:	48 89 c7             	mov    %rax,%rdi
    2a86:	e8 c5 06 00 00       	call   3150 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    2a8b:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2a8e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2a92:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2a95:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    2a98:	72 ca                	jb     2a64 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x5b>
  }
  if (enableValidationLayers) {
    2a9a:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
    2a9e:	74 54                	je     2af4 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
    requiredInstanceExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    2aa0:	48 8d 05 76 6d 00 00 	lea    0x6d76(%rip),%rax        # 981d <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x55>
    2aa7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2aab:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    2aaf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ab3:	48 89 d6             	mov    %rdx,%rsi
    2ab6:	48 89 c7             	mov    %rax,%rdi
    2ab9:	e8 b2 06 00 00       	call   3170 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>
  }
  return requiredInstanceExtensions;
    2abe:	eb 34                	jmp    2af4 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    2ac0:	48 89 c3             	mov    %rax,%rbx
    2ac3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2ac7:	48 89 c7             	mov    %rax,%rdi
    2aca:	e8 ab 05 00 00       	call   307a <_ZNSaIPKcED1Ev>
    2acf:	48 89 d8             	mov    %rbx,%rax
    2ad2:	48 89 c7             	mov    %rax,%rdi
    2ad5:	e8 b6 f7 ff ff       	call   2290 <_Unwind_Resume@plt>
}
    2ada:	48 89 c3             	mov    %rax,%rbx
    2add:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ae1:	48 89 c7             	mov    %rax,%rdi
    2ae4:	e8 23 06 00 00       	call   310c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    2ae9:	48 89 d8             	mov    %rbx,%rax
    2aec:	48 89 c7             	mov    %rax,%rdi
    2aef:	e8 9c f7 ff ff       	call   2290 <_Unwind_Resume@plt>
  return requiredInstanceExtensions;
    2af4:	90                   	nop
}
    2af5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2af9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2afd:	c9                   	leave
    2afe:	c3                   	ret

0000000000002aff <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    2aff:	55                   	push   %rbp
    2b00:	48 89 e5             	mov    %rsp,%rbp
    2b03:	53                   	push   %rbx
    2b04:	48 83 ec 28          	sub    $0x28,%rsp
    2b08:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    2b0c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2b10:	be 00 00 00 00       	mov    $0x0,%esi
    2b15:	48 89 c7             	mov    %rax,%rdi
    2b18:	e8 c3 f6 ff ff       	call   21e0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    2b1d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2b20:	89 c3                	mov    %eax,%ebx
    2b22:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b26:	48 89 c7             	mov    %rax,%rdi
    2b29:	e8 c2 06 00 00       	call   31f0 <_ZNSaI17VkLayerPropertiesEC1Ev>
    2b2e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2b32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b36:	48 89 de             	mov    %rbx,%rsi
    2b39:	48 89 c7             	mov    %rax,%rdi
    2b3c:	e8 e7 06 00 00       	call   3228 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    2b41:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b45:	48 89 c7             	mov    %rax,%rdi
    2b48:	e8 bf 06 00 00       	call   320c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    2b4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b51:	48 89 c7             	mov    %rax,%rdi
    2b54:	e8 89 07 00 00       	call   32e2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    2b59:	48 89 c2             	mov    %rax,%rdx
    2b5c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2b60:	48 89 d6             	mov    %rdx,%rsi
    2b63:	48 89 c7             	mov    %rax,%rdi
    2b66:	e8 75 f6 ff ff       	call   21e0 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    2b6b:	eb 34                	jmp    2ba1 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    2b6d:	48 89 c3             	mov    %rax,%rbx
    2b70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b74:	48 89 c7             	mov    %rax,%rdi
    2b77:	e8 90 06 00 00       	call   320c <_ZNSaI17VkLayerPropertiesED1Ev>
    2b7c:	48 89 d8             	mov    %rbx,%rax
    2b7f:	48 89 c7             	mov    %rax,%rdi
    2b82:	e8 09 f7 ff ff       	call   2290 <_Unwind_Resume@plt>
}
    2b87:	48 89 c3             	mov    %rax,%rbx
    2b8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b8e:	48 89 c7             	mov    %rax,%rdi
    2b91:	e8 08 07 00 00       	call   329e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    2b96:	48 89 d8             	mov    %rbx,%rax
    2b99:	48 89 c7             	mov    %rax,%rdi
    2b9c:	e8 ef f6 ff ff       	call   2290 <_Unwind_Resume@plt>
    2ba1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ba5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2ba9:	c9                   	leave
    2baa:	c3                   	ret

0000000000002bab <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    2bab:	55                   	push   %rbp
    2bac:	48 89 e5             	mov    %rsp,%rbp
    2baf:	41 54                	push   %r12
    2bb1:	53                   	push   %rbx
    2bb2:	48 83 ec 20          	sub    $0x20,%rsp
    2bb6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2bba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    2bbe:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2bc2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2bc6:	ba 00 00 00 00       	mov    $0x0,%edx
    2bcb:	48 89 ce             	mov    %rcx,%rsi
    2bce:	48 89 c7             	mov    %rax,%rdi
    2bd1:	e8 ea f4 ff ff       	call   20c0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    2bd6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2bd9:	85 c0                	test   %eax,%eax
    2bdb:	75 3b                	jne    2c18 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    2bdd:	bf 10 00 00 00       	mov    $0x10,%edi
    2be2:	e8 b9 f4 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    2be7:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    2bea:	48 8d 05 3f 6c 00 00 	lea    0x6c3f(%rip),%rax        # 9830 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    2bf1:	48 89 c6             	mov    %rax,%rsi
    2bf4:	48 89 df             	mov    %rbx,%rdi
    2bf7:	e8 54 f4 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    2bfc:	48 8b 05 a5 d3 00 00 	mov    0xd3a5(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2c03:	48 89 c2             	mov    %rax,%rdx
    2c06:	48 8d 05 33 d1 00 00 	lea    0xd133(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2c0d:	48 89 c6             	mov    %rax,%rsi
    2c10:	48 89 df             	mov    %rbx,%rdi
    2c13:	e8 68 f6 ff ff       	call   2280 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2c18:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2c1b:	89 c3                	mov    %eax,%ebx
    2c1d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2c21:	48 89 c7             	mov    %rax,%rdi
    2c24:	e8 35 07 00 00       	call   335e <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    2c29:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2c2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c31:	48 89 de             	mov    %rbx,%rsi
    2c34:	48 89 c7             	mov    %rax,%rdi
    2c37:	e8 5a 07 00 00       	call   3396 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    2c3c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2c40:	48 89 c7             	mov    %rax,%rdi
    2c43:	e8 32 07 00 00       	call   337a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2c48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c4c:	48 89 c7             	mov    %rax,%rdi
    2c4f:	e8 fc 07 00 00       	call   3450 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    2c54:	48 89 c2             	mov    %rax,%rdx
    2c57:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2c5b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2c5f:	48 89 ce             	mov    %rcx,%rsi
    2c62:	48 89 c7             	mov    %rax,%rdi
    2c65:	e8 56 f4 ff ff       	call   20c0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    2c6a:	85 c0                	test   %eax,%eax
    2c6c:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2c6f:	84 c0                	test   %al,%al
    2c71:	0f 84 95 00 00 00    	je     2d0c <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    2c77:	bf 10 00 00 00       	mov    $0x10,%edi
    2c7c:	e8 1f f4 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    2c81:	48 89 c3             	mov    %rax,%rbx
    2c84:	48 8d 05 dd 6b 00 00 	lea    0x6bdd(%rip),%rax        # 9868 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xa0>
    2c8b:	48 89 c6             	mov    %rax,%rsi
    2c8e:	48 89 df             	mov    %rbx,%rdi
    2c91:	e8 ba f3 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    2c96:	48 8b 05 0b d3 00 00 	mov    0xd30b(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2c9d:	48 89 c2             	mov    %rax,%rdx
    2ca0:	48 8d 05 99 d0 00 00 	lea    0xd099(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2ca7:	48 89 c6             	mov    %rax,%rsi
    2caa:	48 89 df             	mov    %rbx,%rdi
    2cad:	e8 ce f5 ff ff       	call   2280 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    2cb2:	49 89 c4             	mov    %rax,%r12
    2cb5:	48 89 df             	mov    %rbx,%rdi
    2cb8:	e8 13 f4 ff ff       	call   20d0 <__cxa_free_exception@plt>
    2cbd:	4c 89 e0             	mov    %r12,%rax
    2cc0:	48 89 c7             	mov    %rax,%rdi
    2cc3:	e8 c8 f5 ff ff       	call   2290 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2cc8:	48 89 c3             	mov    %rax,%rbx
    2ccb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2ccf:	48 89 c7             	mov    %rax,%rdi
    2cd2:	e8 a3 06 00 00       	call   337a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    2cd7:	48 89 d8             	mov    %rbx,%rax
    2cda:	48 89 c7             	mov    %rax,%rdi
    2cdd:	e8 ae f5 ff ff       	call   2290 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    2ce2:	49 89 c4             	mov    %rax,%r12
    2ce5:	48 89 df             	mov    %rbx,%rdi
    2ce8:	e8 e3 f3 ff ff       	call   20d0 <__cxa_free_exception@plt>
    2ced:	4c 89 e3             	mov    %r12,%rbx
    2cf0:	eb 03                	jmp    2cf5 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    2cf2:	48 89 c3             	mov    %rax,%rbx
    2cf5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cf9:	48 89 c7             	mov    %rax,%rdi
    2cfc:	e8 0b 07 00 00       	call   340c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    2d01:	48 89 d8             	mov    %rbx,%rax
    2d04:	48 89 c7             	mov    %rax,%rdi
    2d07:	e8 84 f5 ff ff       	call   2290 <_Unwind_Resume@plt>
  return physicalDevices;
    2d0c:	90                   	nop
}
    2d0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d11:	48 83 c4 20          	add    $0x20,%rsp
    2d15:	5b                   	pop    %rbx
    2d16:	41 5c                	pop    %r12
    2d18:	5d                   	pop    %rbp
    2d19:	c3                   	ret

0000000000002d1a <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    2d1a:	55                   	push   %rbp
    2d1b:	48 89 e5             	mov    %rsp,%rbp
    2d1e:	48 83 ec 10          	sub    $0x10,%rsp
    2d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2d26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    2d2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2d2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d32:	48 89 d6             	mov    %rdx,%rsi
    2d35:	48 89 c7             	mov    %rax,%rdi
    2d38:	e8 23 f3 ff ff       	call   2060 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    2d3d:	90                   	nop
}
    2d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d42:	c9                   	leave
    2d43:	c3                   	ret

0000000000002d44 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    2d44:	55                   	push   %rbp
    2d45:	48 89 e5             	mov    %rsp,%rbp
    2d48:	48 83 ec 20          	sub    $0x20,%rsp
    2d4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2d50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2d54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    2d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d5c:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    2d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d66:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2d6a:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    2d6e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2d72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d76:	48 89 d6             	mov    %rdx,%rsi
    2d79:	48 89 c7             	mov    %rax,%rdi
    2d7c:	e8 cf f3 ff ff       	call   2150 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    2d81:	90                   	nop
}
    2d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d86:	c9                   	leave
    2d87:	c3                   	ret

0000000000002d88 <_ZN3vkh34getPhysicalDeviceQueuePropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueuePropertyList(VkPhysicalDevice physicalDevice) {
    2d88:	55                   	push   %rbp
    2d89:	48 89 e5             	mov    %rsp,%rbp
    2d8c:	53                   	push   %rbx
    2d8d:	48 83 ec 28          	sub    $0x28,%rsp
    2d91:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2d95:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    2d99:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2d9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2da1:	ba 00 00 00 00       	mov    $0x0,%edx
    2da6:	48 89 ce             	mov    %rcx,%rsi
    2da9:	48 89 c7             	mov    %rax,%rdi
    2dac:	e8 2f f3 ff ff       	call   20e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    2db1:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2db4:	89 c3                	mov    %eax,%ebx
    2db6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2dba:	48 89 c7             	mov    %rax,%rdi
    2dbd:	e8 00 07 00 00       	call   34c2 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    2dc2:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2dc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2dca:	48 89 de             	mov    %rbx,%rsi
    2dcd:	48 89 c7             	mov    %rax,%rdi
    2dd0:	e8 25 07 00 00       	call   34fa <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    2dd5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2dd9:	48 89 c7             	mov    %rax,%rdi
    2ddc:	e8 fd 06 00 00       	call   34de <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    2de1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2de5:	48 89 c7             	mov    %rax,%rdi
    2de8:	e8 c7 07 00 00       	call   35b4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    2ded:	48 89 c2             	mov    %rax,%rdx
    2df0:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2df4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2df8:	48 89 ce             	mov    %rcx,%rsi
    2dfb:	48 89 c7             	mov    %rax,%rdi
    2dfe:	e8 dd f2 ff ff       	call   20e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    2e03:	eb 34                	jmp    2e39 <_ZN3vkh34getPhysicalDeviceQueuePropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    2e05:	48 89 c3             	mov    %rax,%rbx
    2e08:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2e0c:	48 89 c7             	mov    %rax,%rdi
    2e0f:	e8 ca 06 00 00       	call   34de <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    2e14:	48 89 d8             	mov    %rbx,%rax
    2e17:	48 89 c7             	mov    %rax,%rdi
    2e1a:	e8 71 f4 ff ff       	call   2290 <_Unwind_Resume@plt>
}
    2e1f:	48 89 c3             	mov    %rax,%rbx
    2e22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e26:	48 89 c7             	mov    %rax,%rdi
    2e29:	e8 42 07 00 00       	call   3570 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    2e2e:	48 89 d8             	mov    %rbx,%rax
    2e31:	48 89 c7             	mov    %rax,%rdi
    2e34:	e8 57 f4 ff ff       	call   2290 <_Unwind_Resume@plt>
    2e39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e3d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2e41:	c9                   	leave
    2e42:	c3                   	ret

0000000000002e43 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    2e43:	55                   	push   %rbp
    2e44:	48 89 e5             	mov    %rsp,%rbp
    2e47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2e4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2e4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e53:	5d                   	pop    %rbp
    2e54:	c3                   	ret

0000000000002e55 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    2e55:	55                   	push   %rbp
    2e56:	48 89 e5             	mov    %rsp,%rbp
    2e59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2e5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e61:	5d                   	pop    %rbp
    2e62:	c3                   	ret
    2e63:	90                   	nop

0000000000002e64 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    2e64:	55                   	push   %rbp
    2e65:	48 89 e5             	mov    %rsp,%rbp
    2e68:	48 83 ec 10          	sub    $0x10,%rsp
    2e6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e74:	48 89 c7             	mov    %rax,%rdi
    2e77:	e8 90 00 00 00       	call   2f0c <_ZNSaI21VkExtensionPropertiesED1Ev>
    2e7c:	90                   	nop
    2e7d:	c9                   	leave
    2e7e:	c3                   	ret
    2e7f:	90                   	nop

0000000000002e80 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    2e80:	55                   	push   %rbp
    2e81:	48 89 e5             	mov    %rsp,%rbp
    2e84:	48 83 ec 10          	sub    $0x10,%rsp
    2e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e90:	48 89 c7             	mov    %rax,%rdi
    2e93:	e8 e2 01 00 00       	call   307a <_ZNSaIPKcED1Ev>
    2e98:	90                   	nop
    2e99:	c9                   	leave
    2e9a:	c3                   	ret
    2e9b:	90                   	nop

0000000000002e9c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
    2e9c:	55                   	push   %rbp
    2e9d:	48 89 e5             	mov    %rsp,%rbp
    2ea0:	48 83 ec 10          	sub    $0x10,%rsp
    2ea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2eac:	48 89 c7             	mov    %rax,%rdi
    2eaf:	e8 58 03 00 00       	call   320c <_ZNSaI17VkLayerPropertiesED1Ev>
    2eb4:	90                   	nop
    2eb5:	c9                   	leave
    2eb6:	c3                   	ret
    2eb7:	90                   	nop

0000000000002eb8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    2eb8:	55                   	push   %rbp
    2eb9:	48 89 e5             	mov    %rsp,%rbp
    2ebc:	48 83 ec 10          	sub    $0x10,%rsp
    2ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ec8:	48 89 c7             	mov    %rax,%rdi
    2ecb:	e8 aa 04 00 00       	call   337a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    2ed0:	90                   	nop
    2ed1:	c9                   	leave
    2ed2:	c3                   	ret
    2ed3:	90                   	nop

0000000000002ed4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    2ed4:	55                   	push   %rbp
    2ed5:	48 89 e5             	mov    %rsp,%rbp
    2ed8:	48 83 ec 10          	sub    $0x10,%rsp
    2edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ee4:	48 89 c7             	mov    %rax,%rdi
    2ee7:	e8 f2 05 00 00       	call   34de <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    2eec:	90                   	nop
    2eed:	c9                   	leave
    2eee:	c3                   	ret
    2eef:	90                   	nop

0000000000002ef0 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    2ef0:	55                   	push   %rbp
    2ef1:	48 89 e5             	mov    %rsp,%rbp
    2ef4:	48 83 ec 10          	sub    $0x10,%rsp
    2ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f00:	48 89 c7             	mov    %rax,%rdi
    2f03:	e8 28 07 00 00       	call   3630 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    2f08:	90                   	nop
    2f09:	c9                   	leave
    2f0a:	c3                   	ret
    2f0b:	90                   	nop

0000000000002f0c <_ZNSaI21VkExtensionPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    2f0c:	55                   	push   %rbp
    2f0d:	48 89 e5             	mov    %rsp,%rbp
    2f10:	48 83 ec 10          	sub    $0x10,%rsp
    2f14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f1c:	48 89 c7             	mov    %rax,%rdi
    2f1f:	e8 18 07 00 00       	call   363c <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    2f24:	90                   	nop
    2f25:	c9                   	leave
    2f26:	c3                   	ret
    2f27:	90                   	nop

0000000000002f28 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    2f28:	55                   	push   %rbp
    2f29:	48 89 e5             	mov    %rsp,%rbp
    2f2c:	53                   	push   %rbx
    2f2d:	48 83 ec 28          	sub    $0x28,%rsp
    2f31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2f35:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2f39:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    2f3d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    2f41:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2f45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2f49:	48 89 d6             	mov    %rdx,%rsi
    2f4c:	48 89 c7             	mov    %rax,%rdi
    2f4f:	e8 f3 06 00 00       	call   3647 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    2f54:	48 89 c1             	mov    %rax,%rcx
    2f57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f5b:	48 89 c2             	mov    %rax,%rdx
    2f5e:	48 89 ce             	mov    %rcx,%rsi
    2f61:	48 89 df             	mov    %rbx,%rdi
    2f64:	e8 3f 07 00 00       	call   36a8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    2f69:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2f6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f71:	48 89 d6             	mov    %rdx,%rsi
    2f74:	48 89 c7             	mov    %rax,%rdi
    2f77:	e8 8a 07 00 00       	call   3706 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    2f7c:	eb 1a                	jmp    2f98 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    2f7e:	48 89 c3             	mov    %rax,%rbx
    2f81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f85:	48 89 c7             	mov    %rax,%rdi
    2f88:	e8 79 00 00 00       	call   3006 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    2f8d:	48 89 d8             	mov    %rbx,%rax
    2f90:	48 89 c7             	mov    %rax,%rdi
    2f93:	e8 f8 f2 ff ff       	call   2290 <_Unwind_Resume@plt>
    2f98:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2f9c:	c9                   	leave
    2f9d:	c3                   	ret

0000000000002f9e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    2f9e:	55                   	push   %rbp
    2f9f:	48 89 e5             	mov    %rsp,%rbp
    2fa2:	48 83 ec 10          	sub    $0x10,%rsp
    2fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    2faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fae:	48 89 c7             	mov    %rax,%rdi
    2fb1:	e8 90 07 00 00       	call   3746 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    2fb6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    2fb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fbd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    2fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fc5:	48 8b 00             	mov    (%rax),%rax
    2fc8:	48 89 ce             	mov    %rcx,%rsi
    2fcb:	48 89 c7             	mov    %rax,%rdi
    2fce:	e8 81 07 00 00       	call   3754 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    2fd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fd7:	48 89 c7             	mov    %rax,%rdi
    2fda:	e8 27 00 00 00       	call   3006 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    2fdf:	90                   	nop
    2fe0:	c9                   	leave
    2fe1:	c3                   	ret

0000000000002fe2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    2fe2:	55                   	push   %rbp
    2fe3:	48 89 e5             	mov    %rsp,%rbp
    2fe6:	48 83 ec 10          	sub    $0x10,%rsp
    2fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    2fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ff2:	48 8b 10             	mov    (%rax),%rdx
    2ff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ff9:	48 89 d6             	mov    %rdx,%rsi
    2ffc:	48 89 c7             	mov    %rax,%rdi
    2fff:	e8 7a 07 00 00       	call   377e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3004:	c9                   	leave
    3005:	c3                   	ret

0000000000003006 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3006:	55                   	push   %rbp
    3007:	48 89 e5             	mov    %rsp,%rbp
    300a:	48 83 ec 10          	sub    $0x10,%rsp
    300e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3016:	48 8b 50 10          	mov    0x10(%rax),%rdx
    301a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    301e:	48 8b 00             	mov    (%rax),%rax
    3021:	48 29 c2             	sub    %rax,%rdx
    3024:	48 c1 fa 02          	sar    $0x2,%rdx
    3028:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    302f:	fc c0 0f 
    3032:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    3036:	48 89 c2             	mov    %rax,%rdx
    3039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    303d:	48 8b 08             	mov    (%rax),%rcx
    3040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3044:	48 89 ce             	mov    %rcx,%rsi
    3047:	48 89 c7             	mov    %rax,%rdi
    304a:	e8 67 07 00 00       	call   37b6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    304f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3053:	48 89 c7             	mov    %rax,%rdi
    3056:	e8 09 fe ff ff       	call   2e64 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    305b:	90                   	nop
    305c:	c9                   	leave
    305d:	c3                   	ret

000000000000305e <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    305e:	55                   	push   %rbp
    305f:	48 89 e5             	mov    %rsp,%rbp
    3062:	48 83 ec 10          	sub    $0x10,%rsp
    3066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    306a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    306e:	48 89 c7             	mov    %rax,%rdi
    3071:	e8 76 07 00 00       	call   37ec <_ZNSt15__new_allocatorIPKcEC1Ev>
    3076:	90                   	nop
    3077:	c9                   	leave
    3078:	c3                   	ret
    3079:	90                   	nop

000000000000307a <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    307a:	55                   	push   %rbp
    307b:	48 89 e5             	mov    %rsp,%rbp
    307e:	48 83 ec 10          	sub    $0x10,%rsp
    3082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    308a:	48 89 c7             	mov    %rax,%rdi
    308d:	e8 66 07 00 00       	call   37f8 <_ZNSt15__new_allocatorIPKcED1Ev>
    3092:	90                   	nop
    3093:	c9                   	leave
    3094:	c3                   	ret
    3095:	90                   	nop

0000000000003096 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3096:	55                   	push   %rbp
    3097:	48 89 e5             	mov    %rsp,%rbp
    309a:	53                   	push   %rbx
    309b:	48 83 ec 28          	sub    $0x28,%rsp
    309f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    30a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    30a7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    30ab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    30af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    30b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    30b7:	48 89 d6             	mov    %rdx,%rsi
    30ba:	48 89 c7             	mov    %rax,%rdi
    30bd:	e8 41 07 00 00       	call   3803 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    30c2:	48 89 c1             	mov    %rax,%rcx
    30c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    30c9:	48 89 c2             	mov    %rax,%rdx
    30cc:	48 89 ce             	mov    %rcx,%rsi
    30cf:	48 89 df             	mov    %rbx,%rdi
    30d2:	e8 8d 07 00 00       	call   3864 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    30d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    30db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    30df:	48 89 d6             	mov    %rdx,%rsi
    30e2:	48 89 c7             	mov    %rax,%rdi
    30e5:	e8 d8 07 00 00       	call   38c2 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    30ea:	eb 1a                	jmp    3106 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    30ec:	48 89 c3             	mov    %rax,%rbx
    30ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    30f3:	48 89 c7             	mov    %rax,%rdi
    30f6:	e8 a7 00 00 00       	call   31a2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    30fb:	48 89 d8             	mov    %rbx,%rax
    30fe:	48 89 c7             	mov    %rax,%rdi
    3101:	e8 8a f1 ff ff       	call   2290 <_Unwind_Resume@plt>
    3106:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    310a:	c9                   	leave
    310b:	c3                   	ret

000000000000310c <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    310c:	55                   	push   %rbp
    310d:	48 89 e5             	mov    %rsp,%rbp
    3110:	48 83 ec 10          	sub    $0x10,%rsp
    3114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    311c:	48 89 c7             	mov    %rax,%rdi
    311f:	e8 de 07 00 00       	call   3902 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3124:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    312b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    312f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3133:	48 8b 00             	mov    (%rax),%rax
    3136:	48 89 ce             	mov    %rcx,%rsi
    3139:	48 89 c7             	mov    %rax,%rdi
    313c:	e8 cf 07 00 00       	call   3910 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    3141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3145:	48 89 c7             	mov    %rax,%rdi
    3148:	e8 55 00 00 00       	call   31a2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    314d:	90                   	nop
    314e:	c9                   	leave
    314f:	c3                   	ret

0000000000003150 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    3150:	55                   	push   %rbp
    3151:	48 89 e5             	mov    %rsp,%rbp
    3154:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3158:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    315c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3160:	48 8b 00             	mov    (%rax),%rax
    3163:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3167:	48 c1 e2 03          	shl    $0x3,%rdx
    316b:	48 01 d0             	add    %rdx,%rax
      }
    316e:	5d                   	pop    %rbp
    316f:	c3                   	ret

0000000000003170 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      }

#if __cplusplus >= 201103L
      _GLIBCXX20_CONSTEXPR
      void
      push_back(value_type&& __x)
    3170:	55                   	push   %rbp
    3171:	48 89 e5             	mov    %rsp,%rbp
    3174:	48 83 ec 10          	sub    $0x10,%rsp
    3178:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    317c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    3180:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3184:	48 89 c7             	mov    %rax,%rdi
    3187:	e8 ae 07 00 00       	call   393a <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    318c:	48 89 c2             	mov    %rax,%rdx
    318f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3193:	48 89 d6             	mov    %rdx,%rsi
    3196:	48 89 c7             	mov    %rax,%rdi
    3199:	e8 aa 07 00 00       	call   3948 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    319e:	90                   	nop
    319f:	c9                   	leave
    31a0:	c3                   	ret
    31a1:	90                   	nop

00000000000031a2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    31a2:	55                   	push   %rbp
    31a3:	48 89 e5             	mov    %rsp,%rbp
    31a6:	48 83 ec 10          	sub    $0x10,%rsp
    31aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    31ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31b2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    31b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31ba:	48 8b 00             	mov    (%rax),%rax
    31bd:	48 29 c2             	sub    %rax,%rdx
    31c0:	48 89 d0             	mov    %rdx,%rax
    31c3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    31c7:	48 89 c2             	mov    %rax,%rdx
    31ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31ce:	48 8b 08             	mov    (%rax),%rcx
    31d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31d5:	48 89 ce             	mov    %rcx,%rsi
    31d8:	48 89 c7             	mov    %rax,%rdi
    31db:	e8 32 08 00 00       	call   3a12 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    31e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31e4:	48 89 c7             	mov    %rax,%rdi
    31e7:	e8 94 fc ff ff       	call   2e80 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    31ec:	90                   	nop
    31ed:	c9                   	leave
    31ee:	c3                   	ret
    31ef:	90                   	nop

00000000000031f0 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    31f0:	55                   	push   %rbp
    31f1:	48 89 e5             	mov    %rsp,%rbp
    31f4:	48 83 ec 10          	sub    $0x10,%rsp
    31f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    31fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3200:	48 89 c7             	mov    %rax,%rdi
    3203:	e8 40 08 00 00       	call   3a48 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    3208:	90                   	nop
    3209:	c9                   	leave
    320a:	c3                   	ret
    320b:	90                   	nop

000000000000320c <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    320c:	55                   	push   %rbp
    320d:	48 89 e5             	mov    %rsp,%rbp
    3210:	48 83 ec 10          	sub    $0x10,%rsp
    3214:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    321c:	48 89 c7             	mov    %rax,%rdi
    321f:	e8 30 08 00 00       	call   3a54 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    3224:	90                   	nop
    3225:	c9                   	leave
    3226:	c3                   	ret
    3227:	90                   	nop

0000000000003228 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3228:	55                   	push   %rbp
    3229:	48 89 e5             	mov    %rsp,%rbp
    322c:	53                   	push   %rbx
    322d:	48 83 ec 28          	sub    $0x28,%rsp
    3231:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3235:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3239:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    323d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3241:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3245:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3249:	48 89 d6             	mov    %rdx,%rsi
    324c:	48 89 c7             	mov    %rax,%rdi
    324f:	e8 0b 08 00 00       	call   3a5f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    3254:	48 89 c1             	mov    %rax,%rcx
    3257:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    325b:	48 89 c2             	mov    %rax,%rdx
    325e:	48 89 ce             	mov    %rcx,%rsi
    3261:	48 89 df             	mov    %rbx,%rdi
    3264:	e8 57 08 00 00       	call   3ac0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    3269:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    326d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3271:	48 89 d6             	mov    %rdx,%rsi
    3274:	48 89 c7             	mov    %rax,%rdi
    3277:	e8 a2 08 00 00       	call   3b1e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    327c:	eb 1a                	jmp    3298 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    327e:	48 89 c3             	mov    %rax,%rbx
    3281:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3285:	48 89 c7             	mov    %rax,%rdi
    3288:	e8 79 00 00 00       	call   3306 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    328d:	48 89 d8             	mov    %rbx,%rax
    3290:	48 89 c7             	mov    %rax,%rdi
    3293:	e8 f8 ef ff ff       	call   2290 <_Unwind_Resume@plt>
    3298:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    329c:	c9                   	leave
    329d:	c3                   	ret

000000000000329e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    329e:	55                   	push   %rbp
    329f:	48 89 e5             	mov    %rsp,%rbp
    32a2:	48 83 ec 10          	sub    $0x10,%rsp
    32a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    32aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32ae:	48 89 c7             	mov    %rax,%rdi
    32b1:	e8 a8 08 00 00       	call   3b5e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    32b6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    32b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32bd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    32c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32c5:	48 8b 00             	mov    (%rax),%rax
    32c8:	48 89 ce             	mov    %rcx,%rsi
    32cb:	48 89 c7             	mov    %rax,%rdi
    32ce:	e8 99 08 00 00       	call   3b6c <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    32d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32d7:	48 89 c7             	mov    %rax,%rdi
    32da:	e8 27 00 00 00       	call   3306 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    32df:	90                   	nop
    32e0:	c9                   	leave
    32e1:	c3                   	ret

00000000000032e2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    32e2:	55                   	push   %rbp
    32e3:	48 89 e5             	mov    %rsp,%rbp
    32e6:	48 83 ec 10          	sub    $0x10,%rsp
    32ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    32ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32f2:	48 8b 10             	mov    (%rax),%rdx
    32f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32f9:	48 89 d6             	mov    %rdx,%rsi
    32fc:	48 89 c7             	mov    %rax,%rdi
    32ff:	e8 92 08 00 00       	call   3b96 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3304:	c9                   	leave
    3305:	c3                   	ret

0000000000003306 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3306:	55                   	push   %rbp
    3307:	48 89 e5             	mov    %rsp,%rbp
    330a:	48 83 ec 10          	sub    $0x10,%rsp
    330e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3316:	48 8b 50 10          	mov    0x10(%rax),%rdx
    331a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    331e:	48 8b 00             	mov    (%rax),%rax
    3321:	48 29 c2             	sub    %rax,%rdx
    3324:	48 c1 fa 03          	sar    $0x3,%rdx
    3328:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    332f:	fc c0 0f 
    3332:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    3336:	48 89 c2             	mov    %rax,%rdx
    3339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    333d:	48 8b 08             	mov    (%rax),%rcx
    3340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3344:	48 89 ce             	mov    %rcx,%rsi
    3347:	48 89 c7             	mov    %rax,%rdi
    334a:	e8 7f 08 00 00       	call   3bce <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    334f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3353:	48 89 c7             	mov    %rax,%rdi
    3356:	e8 41 fb ff ff       	call   2e9c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    335b:	90                   	nop
    335c:	c9                   	leave
    335d:	c3                   	ret

000000000000335e <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    335e:	55                   	push   %rbp
    335f:	48 89 e5             	mov    %rsp,%rbp
    3362:	48 83 ec 10          	sub    $0x10,%rsp
    3366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    336a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    336e:	48 89 c7             	mov    %rax,%rdi
    3371:	e8 8e 08 00 00       	call   3c04 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    3376:	90                   	nop
    3377:	c9                   	leave
    3378:	c3                   	ret
    3379:	90                   	nop

000000000000337a <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    337a:	55                   	push   %rbp
    337b:	48 89 e5             	mov    %rsp,%rbp
    337e:	48 83 ec 10          	sub    $0x10,%rsp
    3382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    338a:	48 89 c7             	mov    %rax,%rdi
    338d:	e8 7e 08 00 00       	call   3c10 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    3392:	90                   	nop
    3393:	c9                   	leave
    3394:	c3                   	ret
    3395:	90                   	nop

0000000000003396 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3396:	55                   	push   %rbp
    3397:	48 89 e5             	mov    %rsp,%rbp
    339a:	53                   	push   %rbx
    339b:	48 83 ec 28          	sub    $0x28,%rsp
    339f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    33a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    33a7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    33ab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    33af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    33b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    33b7:	48 89 d6             	mov    %rdx,%rsi
    33ba:	48 89 c7             	mov    %rax,%rdi
    33bd:	e8 59 08 00 00       	call   3c1b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    33c2:	48 89 c1             	mov    %rax,%rcx
    33c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    33c9:	48 89 c2             	mov    %rax,%rdx
    33cc:	48 89 ce             	mov    %rcx,%rsi
    33cf:	48 89 df             	mov    %rbx,%rdi
    33d2:	e8 a5 08 00 00       	call   3c7c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    33d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    33db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33df:	48 89 d6             	mov    %rdx,%rsi
    33e2:	48 89 c7             	mov    %rax,%rdi
    33e5:	e8 f0 08 00 00       	call   3cda <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    33ea:	eb 1a                	jmp    3406 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    33ec:	48 89 c3             	mov    %rax,%rbx
    33ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33f3:	48 89 c7             	mov    %rax,%rdi
    33f6:	e8 79 00 00 00       	call   3474 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    33fb:	48 89 d8             	mov    %rbx,%rax
    33fe:	48 89 c7             	mov    %rax,%rdi
    3401:	e8 8a ee ff ff       	call   2290 <_Unwind_Resume@plt>
    3406:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    340a:	c9                   	leave
    340b:	c3                   	ret

000000000000340c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    340c:	55                   	push   %rbp
    340d:	48 89 e5             	mov    %rsp,%rbp
    3410:	48 83 ec 10          	sub    $0x10,%rsp
    3414:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    341c:	48 89 c7             	mov    %rax,%rdi
    341f:	e8 f6 08 00 00       	call   3d1a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3424:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    342b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    342f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3433:	48 8b 00             	mov    (%rax),%rax
    3436:	48 89 ce             	mov    %rcx,%rsi
    3439:	48 89 c7             	mov    %rax,%rdi
    343c:	e8 e7 08 00 00       	call   3d28 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    3441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3445:	48 89 c7             	mov    %rax,%rdi
    3448:	e8 27 00 00 00       	call   3474 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    344d:	90                   	nop
    344e:	c9                   	leave
    344f:	c3                   	ret

0000000000003450 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    3450:	55                   	push   %rbp
    3451:	48 89 e5             	mov    %rsp,%rbp
    3454:	48 83 ec 10          	sub    $0x10,%rsp
    3458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    345c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3460:	48 8b 10             	mov    (%rax),%rdx
    3463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3467:	48 89 d6             	mov    %rdx,%rsi
    346a:	48 89 c7             	mov    %rax,%rdi
    346d:	e8 e0 08 00 00       	call   3d52 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    3472:	c9                   	leave
    3473:	c3                   	ret

0000000000003474 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3474:	55                   	push   %rbp
    3475:	48 89 e5             	mov    %rsp,%rbp
    3478:	48 83 ec 10          	sub    $0x10,%rsp
    347c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3484:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    348c:	48 8b 00             	mov    (%rax),%rax
    348f:	48 29 c2             	sub    %rax,%rdx
    3492:	48 89 d0             	mov    %rdx,%rax
    3495:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3499:	48 89 c2             	mov    %rax,%rdx
    349c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34a0:	48 8b 08             	mov    (%rax),%rcx
    34a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34a7:	48 89 ce             	mov    %rcx,%rsi
    34aa:	48 89 c7             	mov    %rax,%rdi
    34ad:	e8 d8 08 00 00       	call   3d8a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    34b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34b6:	48 89 c7             	mov    %rax,%rdi
    34b9:	e8 fa f9 ff ff       	call   2eb8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    34be:	90                   	nop
    34bf:	c9                   	leave
    34c0:	c3                   	ret
    34c1:	90                   	nop

00000000000034c2 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    34c2:	55                   	push   %rbp
    34c3:	48 89 e5             	mov    %rsp,%rbp
    34c6:	48 83 ec 10          	sub    $0x10,%rsp
    34ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    34ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34d2:	48 89 c7             	mov    %rax,%rdi
    34d5:	e8 e6 08 00 00       	call   3dc0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    34da:	90                   	nop
    34db:	c9                   	leave
    34dc:	c3                   	ret
    34dd:	90                   	nop

00000000000034de <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    34de:	55                   	push   %rbp
    34df:	48 89 e5             	mov    %rsp,%rbp
    34e2:	48 83 ec 10          	sub    $0x10,%rsp
    34e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    34ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34ee:	48 89 c7             	mov    %rax,%rdi
    34f1:	e8 d6 08 00 00       	call   3dcc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    34f6:	90                   	nop
    34f7:	c9                   	leave
    34f8:	c3                   	ret
    34f9:	90                   	nop

00000000000034fa <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    34fa:	55                   	push   %rbp
    34fb:	48 89 e5             	mov    %rsp,%rbp
    34fe:	53                   	push   %rbx
    34ff:	48 83 ec 28          	sub    $0x28,%rsp
    3503:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3507:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    350b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    350f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3513:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3517:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    351b:	48 89 d6             	mov    %rdx,%rsi
    351e:	48 89 c7             	mov    %rax,%rdi
    3521:	e8 b1 08 00 00       	call   3dd7 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    3526:	48 89 c1             	mov    %rax,%rcx
    3529:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    352d:	48 89 c2             	mov    %rax,%rdx
    3530:	48 89 ce             	mov    %rcx,%rsi
    3533:	48 89 df             	mov    %rbx,%rdi
    3536:	e8 fd 08 00 00       	call   3e38 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    353b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    353f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3543:	48 89 d6             	mov    %rdx,%rsi
    3546:	48 89 c7             	mov    %rax,%rdi
    3549:	e8 48 09 00 00       	call   3e96 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    354e:	eb 1a                	jmp    356a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    3550:	48 89 c3             	mov    %rax,%rbx
    3553:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3557:	48 89 c7             	mov    %rax,%rdi
    355a:	e8 79 00 00 00       	call   35d8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    355f:	48 89 d8             	mov    %rbx,%rax
    3562:	48 89 c7             	mov    %rax,%rdi
    3565:	e8 26 ed ff ff       	call   2290 <_Unwind_Resume@plt>
    356a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    356e:	c9                   	leave
    356f:	c3                   	ret

0000000000003570 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3570:	55                   	push   %rbp
    3571:	48 89 e5             	mov    %rsp,%rbp
    3574:	48 83 ec 10          	sub    $0x10,%rsp
    3578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    357c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3580:	48 89 c7             	mov    %rax,%rdi
    3583:	e8 4e 09 00 00       	call   3ed6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3588:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    358b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    358f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3597:	48 8b 00             	mov    (%rax),%rax
    359a:	48 89 ce             	mov    %rcx,%rsi
    359d:	48 89 c7             	mov    %rax,%rdi
    35a0:	e8 3f 09 00 00       	call   3ee4 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    35a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35a9:	48 89 c7             	mov    %rax,%rdi
    35ac:	e8 27 00 00 00       	call   35d8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    35b1:	90                   	nop
    35b2:	c9                   	leave
    35b3:	c3                   	ret

00000000000035b4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    35b4:	55                   	push   %rbp
    35b5:	48 89 e5             	mov    %rsp,%rbp
    35b8:	48 83 ec 10          	sub    $0x10,%rsp
    35bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    35c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35c4:	48 8b 10             	mov    (%rax),%rdx
    35c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35cb:	48 89 d6             	mov    %rdx,%rsi
    35ce:	48 89 c7             	mov    %rax,%rdi
    35d1:	e8 38 09 00 00       	call   3f0e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    35d6:	c9                   	leave
    35d7:	c3                   	ret

00000000000035d8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    35d8:	55                   	push   %rbp
    35d9:	48 89 e5             	mov    %rsp,%rbp
    35dc:	48 83 ec 10          	sub    $0x10,%rsp
    35e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    35e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    35ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35f0:	48 8b 00             	mov    (%rax),%rax
    35f3:	48 29 c2             	sub    %rax,%rdx
    35f6:	48 c1 fa 03          	sar    $0x3,%rdx
    35fa:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    3601:	aa aa aa 
    3604:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    3608:	48 89 c2             	mov    %rax,%rdx
    360b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    360f:	48 8b 08             	mov    (%rax),%rcx
    3612:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3616:	48 89 ce             	mov    %rcx,%rsi
    3619:	48 89 c7             	mov    %rax,%rdi
    361c:	e8 25 09 00 00       	call   3f46 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    3621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3625:	48 89 c7             	mov    %rax,%rdi
    3628:	e8 a7 f8 ff ff       	call   2ed4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    362d:	90                   	nop
    362e:	c9                   	leave
    362f:	c3                   	ret

0000000000003630 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3630:	55                   	push   %rbp
    3631:	48 89 e5             	mov    %rsp,%rbp
    3634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3638:	90                   	nop
    3639:	5d                   	pop    %rbp
    363a:	c3                   	ret
    363b:	90                   	nop

000000000000363c <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    363c:	55                   	push   %rbp
    363d:	48 89 e5             	mov    %rsp,%rbp
    3640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3644:	90                   	nop
    3645:	5d                   	pop    %rbp
    3646:	c3                   	ret

0000000000003647 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3647:	55                   	push   %rbp
    3648:	48 89 e5             	mov    %rsp,%rbp
    364b:	53                   	push   %rbx
    364c:	48 83 ec 28          	sub    $0x28,%rsp
    3650:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3654:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3658:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    365c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3660:	48 89 d6             	mov    %rdx,%rsi
    3663:	48 89 c7             	mov    %rax,%rdi
    3666:	e8 25 01 00 00       	call   3790 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    366b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    366f:	48 89 c7             	mov    %rax,%rdi
    3672:	e8 04 09 00 00       	call   3f7b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3677:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    367b:	0f 92 c3             	setb   %bl
    367e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3682:	48 89 c7             	mov    %rax,%rdi
    3685:	e8 82 f8 ff ff       	call   2f0c <_ZNSaI21VkExtensionPropertiesED1Ev>
    368a:	84 db                	test   %bl,%bl
    368c:	74 0f                	je     369d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    368e:	48 8d 05 fb 61 00 00 	lea    0x61fb(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3695:	48 89 c7             	mov    %rax,%rdi
    3698:	e8 13 ea ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    369d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    36a1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    36a5:	c9                   	leave
    36a6:	c3                   	ret
    36a7:	90                   	nop

00000000000036a8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    36a8:	55                   	push   %rbp
    36a9:	48 89 e5             	mov    %rsp,%rbp
    36ac:	53                   	push   %rbx
    36ad:	48 83 ec 28          	sub    $0x28,%rsp
    36b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    36b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    36b9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    36bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36c1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    36c5:	48 89 d6             	mov    %rdx,%rsi
    36c8:	48 89 c7             	mov    %rax,%rdi
    36cb:	e8 ee 08 00 00       	call   3fbe <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    36d0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    36d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36d8:	48 89 d6             	mov    %rdx,%rsi
    36db:	48 89 c7             	mov    %rax,%rdi
    36de:	e8 0d 09 00 00       	call   3ff0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    36e3:	eb 1a                	jmp    36ff <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    36e5:	48 89 c3             	mov    %rax,%rbx
    36e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36ec:	48 89 c7             	mov    %rax,%rdi
    36ef:	e8 70 f7 ff ff       	call   2e64 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    36f4:	48 89 d8             	mov    %rbx,%rax
    36f7:	48 89 c7             	mov    %rax,%rdi
    36fa:	e8 91 eb ff ff       	call   2290 <_Unwind_Resume@plt>
    36ff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3703:	c9                   	leave
    3704:	c3                   	ret
    3705:	90                   	nop

0000000000003706 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3706:	55                   	push   %rbp
    3707:	48 89 e5             	mov    %rsp,%rbp
    370a:	48 83 ec 10          	sub    $0x10,%rsp
    370e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3712:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    371a:	48 89 c7             	mov    %rax,%rdi
    371d:	e8 24 00 00 00       	call   3746 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3722:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3729:	48 8b 00             	mov    (%rax),%rax
    372c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3730:	48 89 ce             	mov    %rcx,%rsi
    3733:	48 89 c7             	mov    %rax,%rdi
    3736:	e8 16 09 00 00       	call   4051 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    373b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    373f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3743:	90                   	nop
    3744:	c9                   	leave
    3745:	c3                   	ret

0000000000003746 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3746:	55                   	push   %rbp
    3747:	48 89 e5             	mov    %rsp,%rbp
    374a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    374e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3752:	5d                   	pop    %rbp
    3753:	c3                   	ret

0000000000003754 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3754:	55                   	push   %rbp
    3755:	48 89 e5             	mov    %rsp,%rbp
    3758:	48 83 ec 20          	sub    $0x20,%rsp
    375c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3760:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3764:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    3768:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    376c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3770:	48 89 d6             	mov    %rdx,%rsi
    3773:	48 89 c7             	mov    %rax,%rdi
    3776:	e8 ff 08 00 00       	call   407a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    377b:	90                   	nop
    377c:	c9                   	leave
    377d:	c3                   	ret

000000000000377e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    377e:	55                   	push   %rbp
    377f:	48 89 e5             	mov    %rsp,%rbp
    3782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3786:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    378a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    378e:	5d                   	pop    %rbp
    378f:	c3                   	ret

0000000000003790 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3790:	55                   	push   %rbp
    3791:	48 89 e5             	mov    %rsp,%rbp
    3794:	48 83 ec 10          	sub    $0x10,%rsp
    3798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    379c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    37a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    37a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37a8:	48 89 d6             	mov    %rdx,%rsi
    37ab:	48 89 c7             	mov    %rax,%rdi
    37ae:	e8 ed 08 00 00       	call   40a0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    37b3:	90                   	nop
    37b4:	c9                   	leave
    37b5:	c3                   	ret

00000000000037b6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    37b6:	55                   	push   %rbp
    37b7:	48 89 e5             	mov    %rsp,%rbp
    37ba:	48 83 ec 20          	sub    $0x20,%rsp
    37be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    37c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    37ca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    37cf:	74 17                	je     37e8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    37d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    37d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    37dd:	48 89 ce             	mov    %rcx,%rsi
    37e0:	48 89 c7             	mov    %rax,%rdi
    37e3:	e8 c7 08 00 00       	call   40af <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    37e8:	90                   	nop
    37e9:	c9                   	leave
    37ea:	c3                   	ret
    37eb:	90                   	nop

00000000000037ec <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    37ec:	55                   	push   %rbp
    37ed:	48 89 e5             	mov    %rsp,%rbp
    37f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37f4:	90                   	nop
    37f5:	5d                   	pop    %rbp
    37f6:	c3                   	ret
    37f7:	90                   	nop

00000000000037f8 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    37f8:	55                   	push   %rbp
    37f9:	48 89 e5             	mov    %rsp,%rbp
    37fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3800:	90                   	nop
    3801:	5d                   	pop    %rbp
    3802:	c3                   	ret

0000000000003803 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3803:	55                   	push   %rbp
    3804:	48 89 e5             	mov    %rsp,%rbp
    3807:	53                   	push   %rbx
    3808:	48 83 ec 28          	sub    $0x28,%rsp
    380c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3810:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3814:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3818:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    381c:	48 89 d6             	mov    %rdx,%rsi
    381f:	48 89 c7             	mov    %rax,%rdi
    3822:	e8 c5 01 00 00       	call   39ec <_ZNSaIPKcEC1ERKS1_>
    3827:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    382b:	48 89 c7             	mov    %rax,%rdi
    382e:	e8 aa 08 00 00       	call   40dd <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    3833:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3837:	0f 92 c3             	setb   %bl
    383a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    383e:	48 89 c7             	mov    %rax,%rdi
    3841:	e8 34 f8 ff ff       	call   307a <_ZNSaIPKcED1Ev>
    3846:	84 db                	test   %bl,%bl
    3848:	74 0f                	je     3859 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    384a:	48 8d 05 3f 60 00 00 	lea    0x603f(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3851:	48 89 c7             	mov    %rax,%rdi
    3854:	e8 57 e8 ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3859:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    385d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3861:	c9                   	leave
    3862:	c3                   	ret
    3863:	90                   	nop

0000000000003864 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3864:	55                   	push   %rbp
    3865:	48 89 e5             	mov    %rsp,%rbp
    3868:	53                   	push   %rbx
    3869:	48 83 ec 28          	sub    $0x28,%rsp
    386d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3871:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3875:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3879:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    387d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3881:	48 89 d6             	mov    %rdx,%rsi
    3884:	48 89 c7             	mov    %rax,%rdi
    3887:	e8 94 08 00 00       	call   4120 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    388c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3894:	48 89 d6             	mov    %rdx,%rsi
    3897:	48 89 c7             	mov    %rax,%rdi
    389a:	e8 b3 08 00 00       	call   4152 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    389f:	eb 1a                	jmp    38bb <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    38a1:	48 89 c3             	mov    %rax,%rbx
    38a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38a8:	48 89 c7             	mov    %rax,%rdi
    38ab:	e8 d0 f5 ff ff       	call   2e80 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    38b0:	48 89 d8             	mov    %rbx,%rax
    38b3:	48 89 c7             	mov    %rax,%rdi
    38b6:	e8 d5 e9 ff ff       	call   2290 <_Unwind_Resume@plt>
    38bb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    38bf:	c9                   	leave
    38c0:	c3                   	ret
    38c1:	90                   	nop

00000000000038c2 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    38c2:	55                   	push   %rbp
    38c3:	48 89 e5             	mov    %rsp,%rbp
    38c6:	48 83 ec 10          	sub    $0x10,%rsp
    38ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    38d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38d6:	48 89 c7             	mov    %rax,%rdi
    38d9:	e8 24 00 00 00       	call   3902 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    38de:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    38e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38e5:	48 8b 00             	mov    (%rax),%rax
    38e8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    38ec:	48 89 ce             	mov    %rcx,%rsi
    38ef:	48 89 c7             	mov    %rax,%rdi
    38f2:	e8 b1 08 00 00       	call   41a8 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    38f7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    38fb:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    38ff:	90                   	nop
    3900:	c9                   	leave
    3901:	c3                   	ret

0000000000003902 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3902:	55                   	push   %rbp
    3903:	48 89 e5             	mov    %rsp,%rbp
    3906:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    390a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    390e:	5d                   	pop    %rbp
    390f:	c3                   	ret

0000000000003910 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3910:	55                   	push   %rbp
    3911:	48 89 e5             	mov    %rsp,%rbp
    3914:	48 83 ec 20          	sub    $0x20,%rsp
    3918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    391c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3920:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3924:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    392c:	48 89 d6             	mov    %rdx,%rsi
    392f:	48 89 c7             	mov    %rax,%rdi
    3932:	e8 9a 08 00 00       	call   41d1 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    3937:	90                   	nop
    3938:	c9                   	leave
    3939:	c3                   	ret

000000000000393a <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    393a:	55                   	push   %rbp
    393b:	48 89 e5             	mov    %rsp,%rbp
    393e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    3942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3946:	5d                   	pop    %rbp
    3947:	c3                   	ret

0000000000003948 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    3948:	55                   	push   %rbp
    3949:	48 89 e5             	mov    %rsp,%rbp
    394c:	53                   	push   %rbx
    394d:	48 83 ec 18          	sub    $0x18,%rsp
    3951:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3955:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    3959:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    395d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3965:	48 8b 40 10          	mov    0x10(%rax),%rax
    3969:	48 39 c2             	cmp    %rax,%rdx
    396c:	74 3c                	je     39aa <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    396e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3972:	48 89 c7             	mov    %rax,%rdi
    3975:	e8 7d 08 00 00       	call   41f7 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    397a:	48 89 c2             	mov    %rax,%rdx
    397d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3981:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3985:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3989:	48 89 ce             	mov    %rcx,%rsi
    398c:	48 89 c7             	mov    %rax,%rdi
    398f:	e8 71 08 00 00       	call   4205 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    3994:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3998:	48 8b 40 08          	mov    0x8(%rax),%rax
    399c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    39a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39a4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    39a8:	eb 30                	jmp    39da <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    39aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    39ae:	48 89 c7             	mov    %rax,%rdi
    39b1:	e8 41 08 00 00       	call   41f7 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    39b6:	48 89 c3             	mov    %rax,%rbx
    39b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39bd:	48 89 c7             	mov    %rax,%rdi
    39c0:	e8 79 08 00 00       	call   423e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    39c5:	48 89 c1             	mov    %rax,%rcx
    39c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39cc:	48 89 da             	mov    %rbx,%rdx
    39cf:	48 89 ce             	mov    %rcx,%rsi
    39d2:	48 89 c7             	mov    %rax,%rdi
    39d5:	e8 8e 08 00 00       	call   4268 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    39da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39de:	48 89 c7             	mov    %rax,%rdi
    39e1:	e8 14 0a 00 00       	call   43fa <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    39e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    39ea:	c9                   	leave
    39eb:	c3                   	ret

00000000000039ec <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    39ec:	55                   	push   %rbp
    39ed:	48 89 e5             	mov    %rsp,%rbp
    39f0:	48 83 ec 10          	sub    $0x10,%rsp
    39f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    39fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a04:	48 89 d6             	mov    %rdx,%rsi
    3a07:	48 89 c7             	mov    %rax,%rdi
    3a0a:	e8 2b 0a 00 00       	call   443a <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    3a0f:	90                   	nop
    3a10:	c9                   	leave
    3a11:	c3                   	ret

0000000000003a12 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    3a12:	55                   	push   %rbp
    3a13:	48 89 e5             	mov    %rsp,%rbp
    3a16:	48 83 ec 20          	sub    $0x20,%rsp
    3a1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a22:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3a26:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3a2b:	74 17                	je     3a44 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a31:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3a35:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3a39:	48 89 ce             	mov    %rcx,%rsi
    3a3c:	48 89 c7             	mov    %rax,%rdi
    3a3f:	e8 05 0a 00 00       	call   4449 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    3a44:	90                   	nop
    3a45:	c9                   	leave
    3a46:	c3                   	ret
    3a47:	90                   	nop

0000000000003a48 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3a48:	55                   	push   %rbp
    3a49:	48 89 e5             	mov    %rsp,%rbp
    3a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a50:	90                   	nop
    3a51:	5d                   	pop    %rbp
    3a52:	c3                   	ret
    3a53:	90                   	nop

0000000000003a54 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3a54:	55                   	push   %rbp
    3a55:	48 89 e5             	mov    %rsp,%rbp
    3a58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a5c:	90                   	nop
    3a5d:	5d                   	pop    %rbp
    3a5e:	c3                   	ret

0000000000003a5f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3a5f:	55                   	push   %rbp
    3a60:	48 89 e5             	mov    %rsp,%rbp
    3a63:	53                   	push   %rbx
    3a64:	48 83 ec 28          	sub    $0x28,%rsp
    3a68:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3a6c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3a70:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3a74:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3a78:	48 89 d6             	mov    %rdx,%rsi
    3a7b:	48 89 c7             	mov    %rax,%rdi
    3a7e:	e8 25 01 00 00       	call   3ba8 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    3a83:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3a87:	48 89 c7             	mov    %rax,%rdi
    3a8a:	e8 e8 09 00 00       	call   4477 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3a8f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3a93:	0f 92 c3             	setb   %bl
    3a96:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3a9a:	48 89 c7             	mov    %rax,%rdi
    3a9d:	e8 6a f7 ff ff       	call   320c <_ZNSaI17VkLayerPropertiesED1Ev>
    3aa2:	84 db                	test   %bl,%bl
    3aa4:	74 0f                	je     3ab5 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    3aa6:	48 8d 05 e3 5d 00 00 	lea    0x5de3(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3aad:	48 89 c7             	mov    %rax,%rdi
    3ab0:	e8 fb e5 ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3ab5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3ab9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3abd:	c9                   	leave
    3abe:	c3                   	ret
    3abf:	90                   	nop

0000000000003ac0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3ac0:	55                   	push   %rbp
    3ac1:	48 89 e5             	mov    %rsp,%rbp
    3ac4:	53                   	push   %rbx
    3ac5:	48 83 ec 28          	sub    $0x28,%rsp
    3ac9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3acd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3ad1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ad9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3add:	48 89 d6             	mov    %rdx,%rsi
    3ae0:	48 89 c7             	mov    %rax,%rdi
    3ae3:	e8 d2 09 00 00       	call   44ba <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    3ae8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3aec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3af0:	48 89 d6             	mov    %rdx,%rsi
    3af3:	48 89 c7             	mov    %rax,%rdi
    3af6:	e8 f1 09 00 00       	call   44ec <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    3afb:	eb 1a                	jmp    3b17 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    3afd:	48 89 c3             	mov    %rax,%rbx
    3b00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b04:	48 89 c7             	mov    %rax,%rdi
    3b07:	e8 90 f3 ff ff       	call   2e9c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    3b0c:	48 89 d8             	mov    %rbx,%rax
    3b0f:	48 89 c7             	mov    %rax,%rdi
    3b12:	e8 79 e7 ff ff       	call   2290 <_Unwind_Resume@plt>
    3b17:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3b1b:	c9                   	leave
    3b1c:	c3                   	ret
    3b1d:	90                   	nop

0000000000003b1e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3b1e:	55                   	push   %rbp
    3b1f:	48 89 e5             	mov    %rsp,%rbp
    3b22:	48 83 ec 10          	sub    $0x10,%rsp
    3b26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b32:	48 89 c7             	mov    %rax,%rdi
    3b35:	e8 24 00 00 00       	call   3b5e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3b3a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b41:	48 8b 00             	mov    (%rax),%rax
    3b44:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3b48:	48 89 ce             	mov    %rcx,%rsi
    3b4b:	48 89 c7             	mov    %rax,%rdi
    3b4e:	e8 fa 09 00 00       	call   454d <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3b53:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3b57:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3b5b:	90                   	nop
    3b5c:	c9                   	leave
    3b5d:	c3                   	ret

0000000000003b5e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3b5e:	55                   	push   %rbp
    3b5f:	48 89 e5             	mov    %rsp,%rbp
    3b62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3b66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b6a:	5d                   	pop    %rbp
    3b6b:	c3                   	ret

0000000000003b6c <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3b6c:	55                   	push   %rbp
    3b6d:	48 89 e5             	mov    %rsp,%rbp
    3b70:	48 83 ec 20          	sub    $0x20,%rsp
    3b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3b7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3b80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b88:	48 89 d6             	mov    %rdx,%rsi
    3b8b:	48 89 c7             	mov    %rax,%rdi
    3b8e:	e8 e3 09 00 00       	call   4576 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    3b93:	90                   	nop
    3b94:	c9                   	leave
    3b95:	c3                   	ret

0000000000003b96 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3b96:	55                   	push   %rbp
    3b97:	48 89 e5             	mov    %rsp,%rbp
    3b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3ba2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3ba6:	5d                   	pop    %rbp
    3ba7:	c3                   	ret

0000000000003ba8 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3ba8:	55                   	push   %rbp
    3ba9:	48 89 e5             	mov    %rsp,%rbp
    3bac:	48 83 ec 10          	sub    $0x10,%rsp
    3bb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3bb8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bc0:	48 89 d6             	mov    %rdx,%rsi
    3bc3:	48 89 c7             	mov    %rax,%rdi
    3bc6:	e8 d1 09 00 00       	call   459c <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    3bcb:	90                   	nop
    3bcc:	c9                   	leave
    3bcd:	c3                   	ret

0000000000003bce <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    3bce:	55                   	push   %rbp
    3bcf:	48 89 e5             	mov    %rsp,%rbp
    3bd2:	48 83 ec 20          	sub    $0x20,%rsp
    3bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3bde:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3be2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3be7:	74 17                	je     3c00 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3be9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3bf1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3bf5:	48 89 ce             	mov    %rcx,%rsi
    3bf8:	48 89 c7             	mov    %rax,%rdi
    3bfb:	e8 ab 09 00 00       	call   45ab <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    3c00:	90                   	nop
    3c01:	c9                   	leave
    3c02:	c3                   	ret
    3c03:	90                   	nop

0000000000003c04 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3c04:	55                   	push   %rbp
    3c05:	48 89 e5             	mov    %rsp,%rbp
    3c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c0c:	90                   	nop
    3c0d:	5d                   	pop    %rbp
    3c0e:	c3                   	ret
    3c0f:	90                   	nop

0000000000003c10 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3c10:	55                   	push   %rbp
    3c11:	48 89 e5             	mov    %rsp,%rbp
    3c14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c18:	90                   	nop
    3c19:	5d                   	pop    %rbp
    3c1a:	c3                   	ret

0000000000003c1b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3c1b:	55                   	push   %rbp
    3c1c:	48 89 e5             	mov    %rsp,%rbp
    3c1f:	53                   	push   %rbx
    3c20:	48 83 ec 28          	sub    $0x28,%rsp
    3c24:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3c28:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3c2c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3c30:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3c34:	48 89 d6             	mov    %rdx,%rsi
    3c37:	48 89 c7             	mov    %rax,%rdi
    3c3a:	e8 25 01 00 00       	call   3d64 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    3c3f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3c43:	48 89 c7             	mov    %rax,%rdi
    3c46:	e8 8e 09 00 00       	call   45d9 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    3c4b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3c4f:	0f 92 c3             	setb   %bl
    3c52:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3c56:	48 89 c7             	mov    %rax,%rdi
    3c59:	e8 1c f7 ff ff       	call   337a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    3c5e:	84 db                	test   %bl,%bl
    3c60:	74 0f                	je     3c71 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    3c62:	48 8d 05 27 5c 00 00 	lea    0x5c27(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3c69:	48 89 c7             	mov    %rax,%rdi
    3c6c:	e8 3f e4 ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3c71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3c75:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3c79:	c9                   	leave
    3c7a:	c3                   	ret
    3c7b:	90                   	nop

0000000000003c7c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3c7c:	55                   	push   %rbp
    3c7d:	48 89 e5             	mov    %rsp,%rbp
    3c80:	53                   	push   %rbx
    3c81:	48 83 ec 28          	sub    $0x28,%rsp
    3c85:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3c89:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3c8d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3c91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c95:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3c99:	48 89 d6             	mov    %rdx,%rsi
    3c9c:	48 89 c7             	mov    %rax,%rdi
    3c9f:	e8 78 09 00 00       	call   461c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    3ca4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3ca8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3cac:	48 89 d6             	mov    %rdx,%rsi
    3caf:	48 89 c7             	mov    %rax,%rdi
    3cb2:	e8 97 09 00 00       	call   464e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    3cb7:	eb 1a                	jmp    3cd3 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    3cb9:	48 89 c3             	mov    %rax,%rbx
    3cbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3cc0:	48 89 c7             	mov    %rax,%rdi
    3cc3:	e8 f0 f1 ff ff       	call   2eb8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    3cc8:	48 89 d8             	mov    %rbx,%rax
    3ccb:	48 89 c7             	mov    %rax,%rdi
    3cce:	e8 bd e5 ff ff       	call   2290 <_Unwind_Resume@plt>
    3cd3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3cd7:	c9                   	leave
    3cd8:	c3                   	ret
    3cd9:	90                   	nop

0000000000003cda <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3cda:	55                   	push   %rbp
    3cdb:	48 89 e5             	mov    %rsp,%rbp
    3cde:	48 83 ec 10          	sub    $0x10,%rsp
    3ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ce6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cee:	48 89 c7             	mov    %rax,%rdi
    3cf1:	e8 24 00 00 00       	call   3d1a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3cf6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3cf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cfd:	48 8b 00             	mov    (%rax),%rax
    3d00:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3d04:	48 89 ce             	mov    %rcx,%rsi
    3d07:	48 89 c7             	mov    %rax,%rdi
    3d0a:	e8 95 09 00 00       	call   46a4 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3d0f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d13:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3d17:	90                   	nop
    3d18:	c9                   	leave
    3d19:	c3                   	ret

0000000000003d1a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3d1a:	55                   	push   %rbp
    3d1b:	48 89 e5             	mov    %rsp,%rbp
    3d1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d26:	5d                   	pop    %rbp
    3d27:	c3                   	ret

0000000000003d28 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3d28:	55                   	push   %rbp
    3d29:	48 89 e5             	mov    %rsp,%rbp
    3d2c:	48 83 ec 20          	sub    $0x20,%rsp
    3d30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3d38:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3d3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d44:	48 89 d6             	mov    %rdx,%rsi
    3d47:	48 89 c7             	mov    %rax,%rdi
    3d4a:	e8 7e 09 00 00       	call   46cd <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    3d4f:	90                   	nop
    3d50:	c9                   	leave
    3d51:	c3                   	ret

0000000000003d52 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3d52:	55                   	push   %rbp
    3d53:	48 89 e5             	mov    %rsp,%rbp
    3d56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3d5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d62:	5d                   	pop    %rbp
    3d63:	c3                   	ret

0000000000003d64 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3d64:	55                   	push   %rbp
    3d65:	48 89 e5             	mov    %rsp,%rbp
    3d68:	48 83 ec 10          	sub    $0x10,%rsp
    3d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3d74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d7c:	48 89 d6             	mov    %rdx,%rsi
    3d7f:	48 89 c7             	mov    %rax,%rdi
    3d82:	e8 6d 09 00 00       	call   46f4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    3d87:	90                   	nop
    3d88:	c9                   	leave
    3d89:	c3                   	ret

0000000000003d8a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    3d8a:	55                   	push   %rbp
    3d8b:	48 89 e5             	mov    %rsp,%rbp
    3d8e:	48 83 ec 20          	sub    $0x20,%rsp
    3d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3d9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3d9e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3da3:	74 17                	je     3dbc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3da9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3dad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3db1:	48 89 ce             	mov    %rcx,%rsi
    3db4:	48 89 c7             	mov    %rax,%rdi
    3db7:	e8 47 09 00 00       	call   4703 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    3dbc:	90                   	nop
    3dbd:	c9                   	leave
    3dbe:	c3                   	ret
    3dbf:	90                   	nop

0000000000003dc0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3dc0:	55                   	push   %rbp
    3dc1:	48 89 e5             	mov    %rsp,%rbp
    3dc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dc8:	90                   	nop
    3dc9:	5d                   	pop    %rbp
    3dca:	c3                   	ret
    3dcb:	90                   	nop

0000000000003dcc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3dcc:	55                   	push   %rbp
    3dcd:	48 89 e5             	mov    %rsp,%rbp
    3dd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dd4:	90                   	nop
    3dd5:	5d                   	pop    %rbp
    3dd6:	c3                   	ret

0000000000003dd7 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3dd7:	55                   	push   %rbp
    3dd8:	48 89 e5             	mov    %rsp,%rbp
    3ddb:	53                   	push   %rbx
    3ddc:	48 83 ec 28          	sub    $0x28,%rsp
    3de0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3de4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3de8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3dec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3df0:	48 89 d6             	mov    %rdx,%rsi
    3df3:	48 89 c7             	mov    %rax,%rdi
    3df6:	e8 25 01 00 00       	call   3f20 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    3dfb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3dff:	48 89 c7             	mov    %rax,%rdi
    3e02:	e8 2a 09 00 00       	call   4731 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3e07:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3e0b:	0f 92 c3             	setb   %bl
    3e0e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3e12:	48 89 c7             	mov    %rax,%rdi
    3e15:	e8 c4 f6 ff ff       	call   34de <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    3e1a:	84 db                	test   %bl,%bl
    3e1c:	74 0f                	je     3e2d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    3e1e:	48 8d 05 6b 5a 00 00 	lea    0x5a6b(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3e25:	48 89 c7             	mov    %rax,%rdi
    3e28:	e8 83 e2 ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3e2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3e31:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3e35:	c9                   	leave
    3e36:	c3                   	ret
    3e37:	90                   	nop

0000000000003e38 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3e38:	55                   	push   %rbp
    3e39:	48 89 e5             	mov    %rsp,%rbp
    3e3c:	53                   	push   %rbx
    3e3d:	48 83 ec 28          	sub    $0x28,%rsp
    3e41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3e45:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3e49:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3e4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e51:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3e55:	48 89 d6             	mov    %rdx,%rsi
    3e58:	48 89 c7             	mov    %rax,%rdi
    3e5b:	e8 14 09 00 00       	call   4774 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    3e60:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3e64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e68:	48 89 d6             	mov    %rdx,%rsi
    3e6b:	48 89 c7             	mov    %rax,%rdi
    3e6e:	e8 33 09 00 00       	call   47a6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    3e73:	eb 1a                	jmp    3e8f <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    3e75:	48 89 c3             	mov    %rax,%rbx
    3e78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e7c:	48 89 c7             	mov    %rax,%rdi
    3e7f:	e8 50 f0 ff ff       	call   2ed4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    3e84:	48 89 d8             	mov    %rbx,%rax
    3e87:	48 89 c7             	mov    %rax,%rdi
    3e8a:	e8 01 e4 ff ff       	call   2290 <_Unwind_Resume@plt>
    3e8f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3e93:	c9                   	leave
    3e94:	c3                   	ret
    3e95:	90                   	nop

0000000000003e96 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3e96:	55                   	push   %rbp
    3e97:	48 89 e5             	mov    %rsp,%rbp
    3e9a:	48 83 ec 10          	sub    $0x10,%rsp
    3e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ea2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3ea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3eaa:	48 89 c7             	mov    %rax,%rdi
    3ead:	e8 24 00 00 00       	call   3ed6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3eb2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3eb9:	48 8b 00             	mov    (%rax),%rax
    3ebc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3ec0:	48 89 ce             	mov    %rcx,%rsi
    3ec3:	48 89 c7             	mov    %rax,%rdi
    3ec6:	e8 3b 09 00 00       	call   4806 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3ecb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3ecf:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3ed3:	90                   	nop
    3ed4:	c9                   	leave
    3ed5:	c3                   	ret

0000000000003ed6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3ed6:	55                   	push   %rbp
    3ed7:	48 89 e5             	mov    %rsp,%rbp
    3eda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ee2:	5d                   	pop    %rbp
    3ee3:	c3                   	ret

0000000000003ee4 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3ee4:	55                   	push   %rbp
    3ee5:	48 89 e5             	mov    %rsp,%rbp
    3ee8:	48 83 ec 20          	sub    $0x20,%rsp
    3eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ef0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3ef4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3ef8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f00:	48 89 d6             	mov    %rdx,%rsi
    3f03:	48 89 c7             	mov    %rax,%rdi
    3f06:	e8 24 09 00 00       	call   482f <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    3f0b:	90                   	nop
    3f0c:	c9                   	leave
    3f0d:	c3                   	ret

0000000000003f0e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3f0e:	55                   	push   %rbp
    3f0f:	48 89 e5             	mov    %rsp,%rbp
    3f12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3f1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f1e:	5d                   	pop    %rbp
    3f1f:	c3                   	ret

0000000000003f20 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3f20:	55                   	push   %rbp
    3f21:	48 89 e5             	mov    %rsp,%rbp
    3f24:	48 83 ec 10          	sub    $0x10,%rsp
    3f28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3f30:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f38:	48 89 d6             	mov    %rdx,%rsi
    3f3b:	48 89 c7             	mov    %rax,%rdi
    3f3e:	e8 13 09 00 00       	call   4856 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    3f43:	90                   	nop
    3f44:	c9                   	leave
    3f45:	c3                   	ret

0000000000003f46 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    3f46:	55                   	push   %rbp
    3f47:	48 89 e5             	mov    %rsp,%rbp
    3f4a:	48 83 ec 20          	sub    $0x20,%rsp
    3f4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3f56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3f5a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3f5f:	74 17                	je     3f78 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f65:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3f69:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3f6d:	48 89 ce             	mov    %rcx,%rsi
    3f70:	48 89 c7             	mov    %rax,%rdi
    3f73:	e8 ed 08 00 00       	call   4865 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    3f78:	90                   	nop
    3f79:	c9                   	leave
    3f7a:	c3                   	ret

0000000000003f7b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    3f7b:	55                   	push   %rbp
    3f7c:	48 89 e5             	mov    %rsp,%rbp
    3f7f:	48 83 ec 20          	sub    $0x20,%rsp
    3f83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    3f87:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    3f8e:	07 7e 00 
    3f91:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    3f95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f99:	48 89 c7             	mov    %rax,%rdi
    3f9c:	e8 f2 08 00 00       	call   4893 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    3fa1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    3fa5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    3fa9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3fad:	48 89 d6             	mov    %rdx,%rsi
    3fb0:	48 89 c7             	mov    %rax,%rdi
    3fb3:	e8 f5 08 00 00       	call   48ad <_ZSt3minImERKT_S2_S2_>
    3fb8:	48 8b 00             	mov    (%rax),%rax
      }
    3fbb:	c9                   	leave
    3fbc:	c3                   	ret
    3fbd:	90                   	nop

0000000000003fbe <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    3fbe:	55                   	push   %rbp
    3fbf:	48 89 e5             	mov    %rsp,%rbp
    3fc2:	48 83 ec 10          	sub    $0x10,%rsp
    3fc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    3fce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fd6:	48 89 d6             	mov    %rdx,%rsi
    3fd9:	48 89 c7             	mov    %rax,%rdi
    3fdc:	e8 af f7 ff ff       	call   3790 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    3fe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fe5:	48 89 c7             	mov    %rax,%rdi
    3fe8:	e8 eb 08 00 00       	call   48d8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    3fed:	90                   	nop
    3fee:	c9                   	leave
    3fef:	c3                   	ret

0000000000003ff0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    3ff0:	55                   	push   %rbp
    3ff1:	48 89 e5             	mov    %rsp,%rbp
    3ff4:	48 83 ec 10          	sub    $0x10,%rsp
    3ff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ffc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    4000:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4008:	48 89 d6             	mov    %rdx,%rsi
    400b:	48 89 c7             	mov    %rax,%rdi
    400e:	e8 f3 08 00 00       	call   4906 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    4013:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4017:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    401a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    401e:	48 8b 10             	mov    (%rax),%rdx
    4021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4025:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    402d:	48 8b 08             	mov    (%rax),%rcx
    4030:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4034:	48 89 d0             	mov    %rdx,%rax
    4037:	48 c1 e0 06          	shl    $0x6,%rax
    403b:	48 01 d0             	add    %rdx,%rax
    403e:	48 c1 e0 02          	shl    $0x2,%rax
    4042:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    404a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    404e:	90                   	nop
    404f:	c9                   	leave
    4050:	c3                   	ret

0000000000004051 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4051:	55                   	push   %rbp
    4052:	48 89 e5             	mov    %rsp,%rbp
    4055:	48 83 ec 20          	sub    $0x20,%rsp
    4059:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    405d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4061:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    4065:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4069:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    406d:	48 89 d6             	mov    %rdx,%rsi
    4070:	48 89 c7             	mov    %rax,%rdi
    4073:	e8 c1 08 00 00       	call   4939 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    4078:	c9                   	leave
    4079:	c3                   	ret

000000000000407a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    407a:	55                   	push   %rbp
    407b:	48 89 e5             	mov    %rsp,%rbp
    407e:	48 83 ec 10          	sub    $0x10,%rsp
    4082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4086:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    408a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    408e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4092:	48 89 d6             	mov    %rdx,%rsi
    4095:	48 89 c7             	mov    %rax,%rdi
    4098:	e8 c5 08 00 00       	call   4962 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    409d:	90                   	nop
    409e:	c9                   	leave
    409f:	c3                   	ret

00000000000040a0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    40a0:	55                   	push   %rbp
    40a1:	48 89 e5             	mov    %rsp,%rbp
    40a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    40ac:	90                   	nop
    40ad:	5d                   	pop    %rbp
    40ae:	c3                   	ret

00000000000040af <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    40af:	55                   	push   %rbp
    40b0:	48 89 e5             	mov    %rsp,%rbp
    40b3:	48 83 ec 20          	sub    $0x20,%rsp
    40b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    40bf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    40c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    40c7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    40cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40cf:	48 89 ce             	mov    %rcx,%rsi
    40d2:	48 89 c7             	mov    %rax,%rdi
    40d5:	e8 98 08 00 00       	call   4972 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    40da:	90                   	nop
    40db:	c9                   	leave
    40dc:	c3                   	ret

00000000000040dd <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    40dd:	55                   	push   %rbp
    40de:	48 89 e5             	mov    %rsp,%rbp
    40e1:	48 83 ec 20          	sub    $0x20,%rsp
    40e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    40e9:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    40f0:	ff ff 0f 
    40f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    40f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40fb:	48 89 c7             	mov    %rax,%rdi
    40fe:	e8 a9 08 00 00       	call   49ac <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    4103:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4107:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    410b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    410f:	48 89 d6             	mov    %rdx,%rsi
    4112:	48 89 c7             	mov    %rax,%rdi
    4115:	e8 93 07 00 00       	call   48ad <_ZSt3minImERKT_S2_S2_>
    411a:	48 8b 00             	mov    (%rax),%rax
      }
    411d:	c9                   	leave
    411e:	c3                   	ret
    411f:	90                   	nop

0000000000004120 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    4120:	55                   	push   %rbp
    4121:	48 89 e5             	mov    %rsp,%rbp
    4124:	48 83 ec 10          	sub    $0x10,%rsp
    4128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    412c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    4130:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4138:	48 89 d6             	mov    %rdx,%rsi
    413b:	48 89 c7             	mov    %rax,%rdi
    413e:	e8 a9 f8 ff ff       	call   39ec <_ZNSaIPKcEC1ERKS1_>
    4143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4147:	48 89 c7             	mov    %rax,%rdi
    414a:	e8 77 08 00 00       	call   49c6 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    414f:	90                   	nop
    4150:	c9                   	leave
    4151:	c3                   	ret

0000000000004152 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    4152:	55                   	push   %rbp
    4153:	48 89 e5             	mov    %rsp,%rbp
    4156:	48 83 ec 10          	sub    $0x10,%rsp
    415a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    415e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    4162:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    416a:	48 89 d6             	mov    %rdx,%rsi
    416d:	48 89 c7             	mov    %rax,%rdi
    4170:	e8 7f 08 00 00       	call   49f4 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    4175:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4179:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    417c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4180:	48 8b 10             	mov    (%rax),%rdx
    4183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4187:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    418b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    418f:	48 8b 00             	mov    (%rax),%rax
    4192:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4196:	48 c1 e2 03          	shl    $0x3,%rdx
    419a:	48 01 c2             	add    %rax,%rdx
    419d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41a1:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    41a5:	90                   	nop
    41a6:	c9                   	leave
    41a7:	c3                   	ret

00000000000041a8 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    41a8:	55                   	push   %rbp
    41a9:	48 89 e5             	mov    %rsp,%rbp
    41ac:	48 83 ec 20          	sub    $0x20,%rsp
    41b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    41b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    41bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    41c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41c4:	48 89 d6             	mov    %rdx,%rsi
    41c7:	48 89 c7             	mov    %rax,%rdi
    41ca:	e8 58 08 00 00       	call   4a27 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    41cf:	c9                   	leave
    41d0:	c3                   	ret

00000000000041d1 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    41d1:	55                   	push   %rbp
    41d2:	48 89 e5             	mov    %rsp,%rbp
    41d5:	48 83 ec 10          	sub    $0x10,%rsp
    41d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    41e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    41e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41e9:	48 89 d6             	mov    %rdx,%rsi
    41ec:	48 89 c7             	mov    %rax,%rdi
    41ef:	e8 5c 08 00 00       	call   4a50 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    41f4:	90                   	nop
    41f5:	c9                   	leave
    41f6:	c3                   	ret

00000000000041f7 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    41f7:	55                   	push   %rbp
    41f8:	48 89 e5             	mov    %rsp,%rbp
    41fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    41ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4203:	5d                   	pop    %rbp
    4204:	c3                   	ret

0000000000004205 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    4205:	55                   	push   %rbp
    4206:	48 89 e5             	mov    %rsp,%rbp
    4209:	48 83 ec 20          	sub    $0x20,%rsp
    420d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4211:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4215:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    4219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    421d:	48 89 c7             	mov    %rax,%rdi
    4220:	e8 d2 ff ff ff       	call   41f7 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4225:	48 89 c2             	mov    %rax,%rdx
    4228:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    422c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4230:	48 89 ce             	mov    %rcx,%rsi
    4233:	48 89 c7             	mov    %rax,%rdi
    4236:	e8 25 08 00 00       	call   4a60 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
    423b:	90                   	nop
    423c:	c9                   	leave
    423d:	c3                   	ret

000000000000423e <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    423e:	55                   	push   %rbp
    423f:	48 89 e5             	mov    %rsp,%rbp
    4242:	48 83 ec 20          	sub    $0x20,%rsp
    4246:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    424a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    424e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4252:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4256:	48 89 d6             	mov    %rdx,%rsi
    4259:	48 89 c7             	mov    %rax,%rdi
    425c:	e8 41 08 00 00       	call   4aa2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4265:	c9                   	leave
    4266:	c3                   	ret
    4267:	90                   	nop

0000000000004268 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    4268:	55                   	push   %rbp
    4269:	48 89 e5             	mov    %rsp,%rbp
    426c:	53                   	push   %rbx
    426d:	48 83 ec 68          	sub    $0x68,%rsp
    4271:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    4275:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    4279:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    427d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4281:	48 8d 15 39 56 00 00 	lea    0x5639(%rip),%rdx        # 98c1 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xf9>
    4288:	be 01 00 00 00       	mov    $0x1,%esi
    428d:	48 89 c7             	mov    %rax,%rdi
    4290:	e8 2b 08 00 00       	call   4ac0 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    4295:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    4299:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    429d:	48 8b 00             	mov    (%rax),%rax
    42a0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    42a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    42a8:	48 8b 40 08          	mov    0x8(%rax),%rax
    42ac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    42b0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    42b4:	48 89 c7             	mov    %rax,%rdi
    42b7:	e8 cc 08 00 00       	call   4b88 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    42bc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    42c0:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    42c4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    42c8:	48 89 d6             	mov    %rdx,%rsi
    42cb:	48 89 c7             	mov    %rax,%rdi
    42ce:	e8 da 08 00 00       	call   4bad <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    42d3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    42d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    42db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    42df:	48 89 d6             	mov    %rdx,%rsi
    42e2:	48 89 c7             	mov    %rax,%rdi
    42e5:	e8 0a 07 00 00       	call   49f4 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    42ea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    42ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42f2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    42f6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    42fa:	48 89 c7             	mov    %rax,%rdi
    42fd:	e8 f5 fe ff ff       	call   41f7 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4302:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    4305:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4309:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    4310:	00 
	  _Alloc_traits::construct(this->_M_impl,
    4311:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4315:	48 01 c1             	add    %rax,%rcx
    4318:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    431c:	48 89 ce             	mov    %rcx,%rsi
    431f:	48 89 c7             	mov    %rax,%rdi
    4322:	e8 de fe ff ff       	call   4205 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    4327:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    432e:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    432f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4333:	48 89 c7             	mov    %rax,%rdi
    4336:	e8 c7 f5 ff ff       	call   3902 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    433b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    433e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4342:	48 89 c7             	mov    %rax,%rdi
    4345:	e8 d8 08 00 00       	call   4c22 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    434a:	48 8b 30             	mov    (%rax),%rsi
    434d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4351:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4355:	48 89 d9             	mov    %rbx,%rcx
    4358:	48 89 c7             	mov    %rax,%rdi
    435b:	e8 8f 08 00 00       	call   4bef <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    4360:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    4364:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    4369:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    436d:	48 89 c7             	mov    %rax,%rdi
    4370:	e8 8d f5 ff ff       	call   3902 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    4375:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    4378:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    437c:	48 89 c7             	mov    %rax,%rdi
    437f:	e8 9e 08 00 00       	call   4c22 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4384:	48 8b 00             	mov    (%rax),%rax
    4387:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    438b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    438f:	48 89 d9             	mov    %rbx,%rcx
    4392:	48 89 c7             	mov    %rax,%rdi
    4395:	e8 55 08 00 00       	call   4bef <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    439a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    439e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    43a2:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    43a6:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    43aa:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    43ae:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    43b2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    43b6:	48 89 ce             	mov    %rcx,%rsi
    43b9:	48 89 c7             	mov    %rax,%rdi
    43bc:	e8 51 f6 ff ff       	call   3a12 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    43c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43c5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    43c9:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    43cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43d0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    43d4:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    43d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    43dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    43e3:	00 
    43e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    43e8:	48 01 c2             	add    %rax,%rdx
    43eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43ef:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    43f3:	90                   	nop
    43f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    43f8:	c9                   	leave
    43f9:	c3                   	ret

00000000000043fa <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    43fa:	55                   	push   %rbp
    43fb:	48 89 e5             	mov    %rsp,%rbp
    43fe:	48 83 ec 20          	sub    $0x20,%rsp
    4402:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    4406:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    440a:	48 89 c7             	mov    %rax,%rdi
    440d:	e8 2c fe ff ff       	call   423e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    4412:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4416:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    441a:	be 01 00 00 00       	mov    $0x1,%esi
    441f:	48 89 c7             	mov    %rax,%rdi
    4422:	e8 09 08 00 00       	call   4c30 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    4427:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    442b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    442f:	48 89 c7             	mov    %rax,%rdi
    4432:	e8 3b 08 00 00       	call   4c72 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    4437:	c9                   	leave
    4438:	c3                   	ret
    4439:	90                   	nop

000000000000443a <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    443a:	55                   	push   %rbp
    443b:	48 89 e5             	mov    %rsp,%rbp
    443e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4442:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4446:	90                   	nop
    4447:	5d                   	pop    %rbp
    4448:	c3                   	ret

0000000000004449 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4449:	55                   	push   %rbp
    444a:	48 89 e5             	mov    %rsp,%rbp
    444d:	48 83 ec 20          	sub    $0x20,%rsp
    4451:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4455:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4459:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    445d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4461:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4469:	48 89 ce             	mov    %rcx,%rsi
    446c:	48 89 c7             	mov    %rax,%rdi
    446f:	e8 10 08 00 00       	call   4c84 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    4474:	90                   	nop
    4475:	c9                   	leave
    4476:	c3                   	ret

0000000000004477 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    4477:	55                   	push   %rbp
    4478:	48 89 e5             	mov    %rsp,%rbp
    447b:	48 83 ec 20          	sub    $0x20,%rsp
    447f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4483:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    448a:	03 3f 00 
    448d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    4491:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4495:	48 89 c7             	mov    %rax,%rdi
    4498:	e8 18 08 00 00       	call   4cb5 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    449d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    44a1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    44a5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    44a9:	48 89 d6             	mov    %rdx,%rsi
    44ac:	48 89 c7             	mov    %rax,%rdi
    44af:	e8 f9 03 00 00       	call   48ad <_ZSt3minImERKT_S2_S2_>
    44b4:	48 8b 00             	mov    (%rax),%rax
      }
    44b7:	c9                   	leave
    44b8:	c3                   	ret
    44b9:	90                   	nop

00000000000044ba <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    44ba:	55                   	push   %rbp
    44bb:	48 89 e5             	mov    %rsp,%rbp
    44be:	48 83 ec 10          	sub    $0x10,%rsp
    44c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    44ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    44ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44d2:	48 89 d6             	mov    %rdx,%rsi
    44d5:	48 89 c7             	mov    %rax,%rdi
    44d8:	e8 cb f6 ff ff       	call   3ba8 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    44dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44e1:	48 89 c7             	mov    %rax,%rdi
    44e4:	e8 e7 07 00 00       	call   4cd0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    44e9:	90                   	nop
    44ea:	c9                   	leave
    44eb:	c3                   	ret

00000000000044ec <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    44ec:	55                   	push   %rbp
    44ed:	48 89 e5             	mov    %rsp,%rbp
    44f0:	48 83 ec 10          	sub    $0x10,%rsp
    44f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    44fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4504:	48 89 d6             	mov    %rdx,%rsi
    4507:	48 89 c7             	mov    %rax,%rdi
    450a:	e8 ef 07 00 00       	call   4cfe <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    450f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4513:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    4516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    451a:	48 8b 10             	mov    (%rax),%rdx
    451d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4521:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4529:	48 8b 08             	mov    (%rax),%rcx
    452c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4530:	48 89 d0             	mov    %rdx,%rax
    4533:	48 c1 e0 06          	shl    $0x6,%rax
    4537:	48 01 d0             	add    %rdx,%rax
    453a:	48 c1 e0 03          	shl    $0x3,%rax
    453e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4546:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    454a:	90                   	nop
    454b:	c9                   	leave
    454c:	c3                   	ret

000000000000454d <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    454d:	55                   	push   %rbp
    454e:	48 89 e5             	mov    %rsp,%rbp
    4551:	48 83 ec 20          	sub    $0x20,%rsp
    4555:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4559:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    455d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    4561:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4569:	48 89 d6             	mov    %rdx,%rsi
    456c:	48 89 c7             	mov    %rax,%rdi
    456f:	e8 bd 07 00 00       	call   4d31 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    4574:	c9                   	leave
    4575:	c3                   	ret

0000000000004576 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    4576:	55                   	push   %rbp
    4577:	48 89 e5             	mov    %rsp,%rbp
    457a:	48 83 ec 10          	sub    $0x10,%rsp
    457e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4582:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    4586:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    458a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    458e:	48 89 d6             	mov    %rdx,%rsi
    4591:	48 89 c7             	mov    %rax,%rdi
    4594:	e8 c1 07 00 00       	call   4d5a <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    4599:	90                   	nop
    459a:	c9                   	leave
    459b:	c3                   	ret

000000000000459c <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
    459c:	55                   	push   %rbp
    459d:	48 89 e5             	mov    %rsp,%rbp
    45a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45a8:	90                   	nop
    45a9:	5d                   	pop    %rbp
    45aa:	c3                   	ret

00000000000045ab <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    45ab:	55                   	push   %rbp
    45ac:	48 89 e5             	mov    %rsp,%rbp
    45af:	48 83 ec 20          	sub    $0x20,%rsp
    45b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45bb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    45bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    45c3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    45c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45cb:	48 89 ce             	mov    %rcx,%rsi
    45ce:	48 89 c7             	mov    %rax,%rdi
    45d1:	e8 94 07 00 00       	call   4d6a <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    45d6:	90                   	nop
    45d7:	c9                   	leave
    45d8:	c3                   	ret

00000000000045d9 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    45d9:	55                   	push   %rbp
    45da:	48 89 e5             	mov    %rsp,%rbp
    45dd:	48 83 ec 20          	sub    $0x20,%rsp
    45e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    45e5:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    45ec:	ff ff 0f 
    45ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    45f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45f7:	48 89 c7             	mov    %rax,%rdi
    45fa:	e8 a5 07 00 00       	call   4da4 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    45ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4603:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4607:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    460b:	48 89 d6             	mov    %rdx,%rsi
    460e:	48 89 c7             	mov    %rax,%rdi
    4611:	e8 97 02 00 00       	call   48ad <_ZSt3minImERKT_S2_S2_>
    4616:	48 8b 00             	mov    (%rax),%rax
      }
    4619:	c9                   	leave
    461a:	c3                   	ret
    461b:	90                   	nop

000000000000461c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    461c:	55                   	push   %rbp
    461d:	48 89 e5             	mov    %rsp,%rbp
    4620:	48 83 ec 10          	sub    $0x10,%rsp
    4624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    462c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4634:	48 89 d6             	mov    %rdx,%rsi
    4637:	48 89 c7             	mov    %rax,%rdi
    463a:	e8 25 f7 ff ff       	call   3d64 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    463f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4643:	48 89 c7             	mov    %rax,%rdi
    4646:	e8 73 07 00 00       	call   4dbe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    464b:	90                   	nop
    464c:	c9                   	leave
    464d:	c3                   	ret

000000000000464e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    464e:	55                   	push   %rbp
    464f:	48 89 e5             	mov    %rsp,%rbp
    4652:	48 83 ec 10          	sub    $0x10,%rsp
    4656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    465a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    465e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4666:	48 89 d6             	mov    %rdx,%rsi
    4669:	48 89 c7             	mov    %rax,%rdi
    466c:	e8 7b 07 00 00       	call   4dec <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    4671:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4675:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    4678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    467c:	48 8b 10             	mov    (%rax),%rdx
    467f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4683:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    468b:	48 8b 00             	mov    (%rax),%rax
    468e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4692:	48 c1 e2 03          	shl    $0x3,%rdx
    4696:	48 01 c2             	add    %rax,%rdx
    4699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    469d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    46a1:	90                   	nop
    46a2:	c9                   	leave
    46a3:	c3                   	ret

00000000000046a4 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    46a4:	55                   	push   %rbp
    46a5:	48 89 e5             	mov    %rsp,%rbp
    46a8:	48 83 ec 20          	sub    $0x20,%rsp
    46ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    46b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    46b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46c0:	48 89 d6             	mov    %rdx,%rsi
    46c3:	48 89 c7             	mov    %rax,%rdi
    46c6:	e8 54 07 00 00       	call   4e1f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    46cb:	c9                   	leave
    46cc:	c3                   	ret

00000000000046cd <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    46cd:	55                   	push   %rbp
    46ce:	48 89 e5             	mov    %rsp,%rbp
    46d1:	48 83 ec 10          	sub    $0x10,%rsp
    46d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    46dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46e5:	48 89 d6             	mov    %rdx,%rsi
    46e8:	48 89 c7             	mov    %rax,%rdi
    46eb:	e8 58 07 00 00       	call   4e48 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    46f0:	90                   	nop
    46f1:	c9                   	leave
    46f2:	c3                   	ret
    46f3:	90                   	nop

00000000000046f4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    46f4:	55                   	push   %rbp
    46f5:	48 89 e5             	mov    %rsp,%rbp
    46f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4700:	90                   	nop
    4701:	5d                   	pop    %rbp
    4702:	c3                   	ret

0000000000004703 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4703:	55                   	push   %rbp
    4704:	48 89 e5             	mov    %rsp,%rbp
    4707:	48 83 ec 20          	sub    $0x20,%rsp
    470b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    470f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4713:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4717:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    471b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    471f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4723:	48 89 ce             	mov    %rcx,%rsi
    4726:	48 89 c7             	mov    %rax,%rdi
    4729:	e8 2a 07 00 00       	call   4e58 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    472e:	90                   	nop
    472f:	c9                   	leave
    4730:	c3                   	ret

0000000000004731 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    4731:	55                   	push   %rbp
    4732:	48 89 e5             	mov    %rsp,%rbp
    4735:	48 83 ec 20          	sub    $0x20,%rsp
    4739:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    473d:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    4744:	55 55 05 
    4747:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    474b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    474f:	48 89 c7             	mov    %rax,%rdi
    4752:	e8 32 07 00 00       	call   4e89 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    4757:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    475b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    475f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4763:	48 89 d6             	mov    %rdx,%rsi
    4766:	48 89 c7             	mov    %rax,%rdi
    4769:	e8 3f 01 00 00       	call   48ad <_ZSt3minImERKT_S2_S2_>
    476e:	48 8b 00             	mov    (%rax),%rax
      }
    4771:	c9                   	leave
    4772:	c3                   	ret
    4773:	90                   	nop

0000000000004774 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    4774:	55                   	push   %rbp
    4775:	48 89 e5             	mov    %rsp,%rbp
    4778:	48 83 ec 10          	sub    $0x10,%rsp
    477c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4780:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    4784:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    478c:	48 89 d6             	mov    %rdx,%rsi
    478f:	48 89 c7             	mov    %rax,%rdi
    4792:	e8 89 f7 ff ff       	call   3f20 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    4797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    479b:	48 89 c7             	mov    %rax,%rdi
    479e:	e8 01 07 00 00       	call   4ea4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    47a3:	90                   	nop
    47a4:	c9                   	leave
    47a5:	c3                   	ret

00000000000047a6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    47a6:	55                   	push   %rbp
    47a7:	48 89 e5             	mov    %rsp,%rbp
    47aa:	48 83 ec 10          	sub    $0x10,%rsp
    47ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    47b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    47ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47be:	48 89 d6             	mov    %rdx,%rsi
    47c1:	48 89 c7             	mov    %rax,%rdi
    47c4:	e8 09 07 00 00       	call   4ed2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    47c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    47cd:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    47d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47d4:	48 8b 10             	mov    (%rax),%rdx
    47d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47db:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    47df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47e3:	48 8b 08             	mov    (%rax),%rcx
    47e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    47ea:	48 89 d0             	mov    %rdx,%rax
    47ed:	48 01 c0             	add    %rax,%rax
    47f0:	48 01 d0             	add    %rdx,%rax
    47f3:	48 c1 e0 03          	shl    $0x3,%rax
    47f7:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    47fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47ff:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    4803:	90                   	nop
    4804:	c9                   	leave
    4805:	c3                   	ret

0000000000004806 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4806:	55                   	push   %rbp
    4807:	48 89 e5             	mov    %rsp,%rbp
    480a:	48 83 ec 20          	sub    $0x20,%rsp
    480e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4812:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4816:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    481a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    481e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4822:	48 89 d6             	mov    %rdx,%rsi
    4825:	48 89 c7             	mov    %rax,%rdi
    4828:	e8 d8 06 00 00       	call   4f05 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    482d:	c9                   	leave
    482e:	c3                   	ret

000000000000482f <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    482f:	55                   	push   %rbp
    4830:	48 89 e5             	mov    %rsp,%rbp
    4833:	48 83 ec 10          	sub    $0x10,%rsp
    4837:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    483b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    483f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4847:	48 89 d6             	mov    %rdx,%rsi
    484a:	48 89 c7             	mov    %rax,%rdi
    484d:	e8 dc 06 00 00       	call   4f2e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    4852:	90                   	nop
    4853:	c9                   	leave
    4854:	c3                   	ret
    4855:	90                   	nop

0000000000004856 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    4856:	55                   	push   %rbp
    4857:	48 89 e5             	mov    %rsp,%rbp
    485a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    485e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4862:	90                   	nop
    4863:	5d                   	pop    %rbp
    4864:	c3                   	ret

0000000000004865 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4865:	55                   	push   %rbp
    4866:	48 89 e5             	mov    %rsp,%rbp
    4869:	48 83 ec 20          	sub    $0x20,%rsp
    486d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4871:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4875:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4879:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    487d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4881:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4885:	48 89 ce             	mov    %rcx,%rsi
    4888:	48 89 c7             	mov    %rax,%rdi
    488b:	e8 ae 06 00 00       	call   4f3e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    4890:	90                   	nop
    4891:	c9                   	leave
    4892:	c3                   	ret

0000000000004893 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4893:	55                   	push   %rbp
    4894:	48 89 e5             	mov    %rsp,%rbp
    4897:	48 83 ec 10          	sub    $0x10,%rsp
    489b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    489f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48a3:	48 89 c7             	mov    %rax,%rdi
    48a6:	e8 cd 06 00 00       	call   4f78 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    48ab:	c9                   	leave
    48ac:	c3                   	ret

00000000000048ad <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    48ad:	55                   	push   %rbp
    48ae:	48 89 e5             	mov    %rsp,%rbp
    48b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    48b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    48bd:	48 8b 10             	mov    (%rax),%rdx
    48c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48c4:	48 8b 00             	mov    (%rax),%rax
    48c7:	48 39 c2             	cmp    %rax,%rdx
    48ca:	73 06                	jae    48d2 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    48cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    48d0:	eb 04                	jmp    48d6 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    48d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    48d6:	5d                   	pop    %rbp
    48d7:	c3                   	ret

00000000000048d8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    48d8:	55                   	push   %rbp
    48d9:	48 89 e5             	mov    %rsp,%rbp
    48dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    48e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48e4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    48eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48ef:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    48f6:	00 
    48f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48fb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4902:	00 
	{ }
    4903:	90                   	nop
    4904:	5d                   	pop    %rbp
    4905:	c3                   	ret

0000000000004906 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4906:	55                   	push   %rbp
    4907:	48 89 e5             	mov    %rsp,%rbp
    490a:	48 83 ec 10          	sub    $0x10,%rsp
    490e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4912:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4916:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    491b:	74 15                	je     4932 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    491d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4921:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4925:	48 89 d6             	mov    %rdx,%rsi
    4928:	48 89 c7             	mov    %rax,%rdi
    492b:	e8 62 06 00 00       	call   4f92 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    4930:	eb 05                	jmp    4937 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    4932:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4937:	c9                   	leave
    4938:	c3                   	ret

0000000000004939 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4939:	55                   	push   %rbp
    493a:	48 89 e5             	mov    %rsp,%rbp
    493d:	48 83 ec 20          	sub    $0x20,%rsp
    4941:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4945:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4949:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    494d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4955:	48 89 d6             	mov    %rdx,%rsi
    4958:	48 89 c7             	mov    %rax,%rdi
    495b:	e8 5c 06 00 00       	call   4fbc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    4960:	c9                   	leave
    4961:	c3                   	ret

0000000000004962 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    4962:	55                   	push   %rbp
    4963:	48 89 e5             	mov    %rsp,%rbp
    4966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    496a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    496e:	90                   	nop
    496f:	5d                   	pop    %rbp
    4970:	c3                   	ret
    4971:	90                   	nop

0000000000004972 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4972:	55                   	push   %rbp
    4973:	48 89 e5             	mov    %rsp,%rbp
    4976:	48 83 ec 20          	sub    $0x20,%rsp
    497a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    497e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4982:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4986:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    498a:	48 89 d0             	mov    %rdx,%rax
    498d:	48 c1 e0 06          	shl    $0x6,%rax
    4991:	48 01 d0             	add    %rdx,%rax
    4994:	48 c1 e0 02          	shl    $0x2,%rax
    4998:	48 89 c2             	mov    %rax,%rdx
    499b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    499f:	48 89 d6             	mov    %rdx,%rsi
    49a2:	48 89 c7             	mov    %rax,%rdi
    49a5:	e8 f6 d7 ff ff       	call   21a0 <_ZdlPvm@plt>
      }
    49aa:	c9                   	leave
    49ab:	c3                   	ret

00000000000049ac <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    49ac:	55                   	push   %rbp
    49ad:	48 89 e5             	mov    %rsp,%rbp
    49b0:	48 83 ec 10          	sub    $0x10,%rsp
    49b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    49b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49bc:	48 89 c7             	mov    %rax,%rdi
    49bf:	e8 58 06 00 00       	call   501c <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    49c4:	c9                   	leave
    49c5:	c3                   	ret

00000000000049c6 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    49c6:	55                   	push   %rbp
    49c7:	48 89 e5             	mov    %rsp,%rbp
    49ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    49ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49d2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    49d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49dd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    49e4:	00 
    49e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49e9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    49f0:	00 
	{ }
    49f1:	90                   	nop
    49f2:	5d                   	pop    %rbp
    49f3:	c3                   	ret

00000000000049f4 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    49f4:	55                   	push   %rbp
    49f5:	48 89 e5             	mov    %rsp,%rbp
    49f8:	48 83 ec 10          	sub    $0x10,%rsp
    49fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4a04:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4a09:	74 15                	je     4a20 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    4a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a0f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4a13:	48 89 d6             	mov    %rdx,%rsi
    4a16:	48 89 c7             	mov    %rax,%rdi
    4a19:	e8 18 06 00 00       	call   5036 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    4a1e:	eb 05                	jmp    4a25 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    4a20:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4a25:	c9                   	leave
    4a26:	c3                   	ret

0000000000004a27 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4a27:	55                   	push   %rbp
    4a28:	48 89 e5             	mov    %rsp,%rbp
    4a2b:	48 83 ec 20          	sub    $0x20,%rsp
    4a2f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4a33:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4a37:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    4a3b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a43:	48 89 d6             	mov    %rdx,%rsi
    4a46:	48 89 c7             	mov    %rax,%rdi
    4a49:	e8 12 06 00 00       	call   5060 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    4a4e:	c9                   	leave
    4a4f:	c3                   	ret

0000000000004a50 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    4a50:	55                   	push   %rbp
    4a51:	48 89 e5             	mov    %rsp,%rbp
    4a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4a5c:	90                   	nop
    4a5d:	5d                   	pop    %rbp
    4a5e:	c3                   	ret
    4a5f:	90                   	nop

0000000000004a60 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    4a60:	55                   	push   %rbp
    4a61:	48 89 e5             	mov    %rsp,%rbp
    4a64:	53                   	push   %rbx
    4a65:	48 83 ec 28          	sub    $0x28,%rsp
    4a69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4a6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4a71:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    4a75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a79:	48 89 c6             	mov    %rax,%rsi
    4a7c:	bf 08 00 00 00       	mov    $0x8,%edi
    4a81:	e8 bd e3 ff ff       	call   2e43 <_ZnwmPv>
    4a86:	48 89 c3             	mov    %rax,%rbx
    4a89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4a8d:	48 89 c7             	mov    %rax,%rdi
    4a90:	e8 62 f7 ff ff       	call   41f7 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4a95:	48 8b 00             	mov    (%rax),%rax
    4a98:	48 89 03             	mov    %rax,(%rbx)
    4a9b:	90                   	nop
    4a9c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4aa0:	c9                   	leave
    4aa1:	c3                   	ret

0000000000004aa2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:

      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
      : _M_current(_Iterator()) { }

      explicit _GLIBCXX20_CONSTEXPR
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    4aa2:	55                   	push   %rbp
    4aa3:	48 89 e5             	mov    %rsp,%rbp
    4aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4aaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    4aae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ab2:	48 8b 10             	mov    (%rax),%rdx
    4ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab9:	48 89 10             	mov    %rdx,(%rax)
    4abc:	90                   	nop
    4abd:	5d                   	pop    %rbp
    4abe:	c3                   	ret
    4abf:	90                   	nop

0000000000004ac0 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    4ac0:	55                   	push   %rbp
    4ac1:	48 89 e5             	mov    %rsp,%rbp
    4ac4:	53                   	push   %rbx
    4ac5:	48 83 ec 38          	sub    $0x38,%rsp
    4ac9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4acd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4ad1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    4ad5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ad9:	48 89 c7             	mov    %rax,%rdi
    4adc:	e8 dd 05 00 00       	call   50be <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    4ae1:	48 89 c3             	mov    %rax,%rbx
    4ae4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ae8:	48 89 c7             	mov    %rax,%rdi
    4aeb:	e8 f0 05 00 00       	call   50e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4af0:	48 29 c3             	sub    %rax,%rbx
    4af3:	48 89 da             	mov    %rbx,%rdx
    4af6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4afa:	48 39 c2             	cmp    %rax,%rdx
    4afd:	0f 92 c0             	setb   %al
    4b00:	84 c0                	test   %al,%al
    4b02:	74 0c                	je     4b10 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    4b04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b08:	48 89 c7             	mov    %rax,%rdi
    4b0b:	e8 a0 d5 ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    4b10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b14:	48 89 c7             	mov    %rax,%rdi
    4b17:	e8 c4 05 00 00       	call   50e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4b1c:	48 89 c3             	mov    %rax,%rbx
    4b1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b23:	48 89 c7             	mov    %rax,%rdi
    4b26:	e8 b5 05 00 00       	call   50e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4b2b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4b2f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4b33:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4b37:	48 89 d6             	mov    %rdx,%rsi
    4b3a:	48 89 c7             	mov    %rax,%rdi
    4b3d:	e8 c1 05 00 00       	call   5103 <_ZSt3maxImERKT_S2_S2_>
    4b42:	48 8b 00             	mov    (%rax),%rax
    4b45:	48 01 d8             	add    %rbx,%rax
    4b48:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4b4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b50:	48 89 c7             	mov    %rax,%rdi
    4b53:	e8 88 05 00 00       	call   50e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4b58:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    4b5c:	72 12                	jb     4b70 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    4b5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b62:	48 89 c7             	mov    %rax,%rdi
    4b65:	e8 54 05 00 00       	call   50be <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    4b6a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    4b6e:	73 0e                	jae    4b7e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    4b70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b74:	48 89 c7             	mov    %rax,%rdi
    4b77:	e8 42 05 00 00       	call   50be <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    4b7c:	eb 04                	jmp    4b82 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    4b7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    4b82:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b86:	c9                   	leave
    4b87:	c3                   	ret

0000000000004b88 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4b88:	55                   	push   %rbp
    4b89:	48 89 e5             	mov    %rsp,%rbp
    4b8c:	48 83 ec 20          	sub    $0x20,%rsp
    4b90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4b94:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b98:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4b9c:	48 89 d6             	mov    %rdx,%rsi
    4b9f:	48 89 c7             	mov    %rax,%rdi
    4ba2:	e8 fb fe ff ff       	call   4aa2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bab:	c9                   	leave
    4bac:	c3                   	ret

0000000000004bad <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    4bad:	55                   	push   %rbp
    4bae:	48 89 e5             	mov    %rsp,%rbp
    4bb1:	53                   	push   %rbx
    4bb2:	48 83 ec 18          	sub    $0x18,%rsp
    4bb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4bba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    4bbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4bc2:	48 89 c7             	mov    %rax,%rdi
    4bc5:	e8 58 00 00 00       	call   4c22 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4bca:	48 8b 18             	mov    (%rax),%rbx
    4bcd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4bd1:	48 89 c7             	mov    %rax,%rdi
    4bd4:	e8 49 00 00 00       	call   4c22 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4bd9:	48 8b 00             	mov    (%rax),%rax
    4bdc:	48 89 da             	mov    %rbx,%rdx
    4bdf:	48 29 c2             	sub    %rax,%rdx
    4be2:	48 89 d0             	mov    %rdx,%rax
    4be5:	48 c1 f8 03          	sar    $0x3,%rax
    4be9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4bed:	c9                   	leave
    4bee:	c3                   	ret

0000000000004bef <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    4bef:	55                   	push   %rbp
    4bf0:	48 89 e5             	mov    %rsp,%rbp
    4bf3:	48 83 ec 20          	sub    $0x20,%rsp
    4bf7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bfb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4bff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    4c03:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    4c07:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4c0b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4c0f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    4c13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c17:	48 89 c7             	mov    %rax,%rdi
    4c1a:	e8 0f 05 00 00       	call   512e <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    4c1f:	c9                   	leave
    4c20:	c3                   	ret
    4c21:	90                   	nop

0000000000004c22 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    4c22:	55                   	push   %rbp
    4c23:	48 89 e5             	mov    %rsp,%rbp
    4c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    4c2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c2e:	5d                   	pop    %rbp
    4c2f:	c3                   	ret

0000000000004c30 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    4c30:	55                   	push   %rbp
    4c31:	48 89 e5             	mov    %rsp,%rbp
    4c34:	48 83 ec 20          	sub    $0x20,%rsp
    4c38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c3c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    4c40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c44:	48 8b 00             	mov    (%rax),%rax
    4c47:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4c4b:	48 c1 e2 03          	shl    $0x3,%rdx
    4c4f:	48 f7 da             	neg    %rdx
    4c52:	48 01 d0             	add    %rdx,%rax
    4c55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4c59:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    4c5d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    4c61:	48 89 d6             	mov    %rdx,%rsi
    4c64:	48 89 c7             	mov    %rax,%rdi
    4c67:	e8 36 fe ff ff       	call   4aa2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4c6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c70:	c9                   	leave
    4c71:	c3                   	ret

0000000000004c72 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    4c72:	55                   	push   %rbp
    4c73:	48 89 e5             	mov    %rsp,%rbp
    4c76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    4c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c7e:	48 8b 00             	mov    (%rax),%rax
    4c81:	5d                   	pop    %rbp
    4c82:	c3                   	ret
    4c83:	90                   	nop

0000000000004c84 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4c84:	55                   	push   %rbp
    4c85:	48 89 e5             	mov    %rsp,%rbp
    4c88:	48 83 ec 20          	sub    $0x20,%rsp
    4c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4c94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4c98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c9c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4ca3:	00 
    4ca4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ca8:	48 89 d6             	mov    %rdx,%rsi
    4cab:	48 89 c7             	mov    %rax,%rdi
    4cae:	e8 ed d4 ff ff       	call   21a0 <_ZdlPvm@plt>
      }
    4cb3:	c9                   	leave
    4cb4:	c3                   	ret

0000000000004cb5 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4cb5:	55                   	push   %rbp
    4cb6:	48 89 e5             	mov    %rsp,%rbp
    4cb9:	48 83 ec 10          	sub    $0x10,%rsp
    4cbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4cc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cc5:	48 89 c7             	mov    %rax,%rdi
    4cc8:	e8 c5 04 00 00       	call   5192 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    4ccd:	c9                   	leave
    4cce:	c3                   	ret
    4ccf:	90                   	nop

0000000000004cd0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4cd0:	55                   	push   %rbp
    4cd1:	48 89 e5             	mov    %rsp,%rbp
    4cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cdc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ce7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4cee:	00 
    4cef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cf3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4cfa:	00 
	{ }
    4cfb:	90                   	nop
    4cfc:	5d                   	pop    %rbp
    4cfd:	c3                   	ret

0000000000004cfe <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4cfe:	55                   	push   %rbp
    4cff:	48 89 e5             	mov    %rsp,%rbp
    4d02:	48 83 ec 10          	sub    $0x10,%rsp
    4d06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4d0e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4d13:	74 15                	je     4d2a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    4d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d1d:	48 89 d6             	mov    %rdx,%rsi
    4d20:	48 89 c7             	mov    %rax,%rdi
    4d23:	e8 84 04 00 00       	call   51ac <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    4d28:	eb 05                	jmp    4d2f <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    4d2a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4d2f:	c9                   	leave
    4d30:	c3                   	ret

0000000000004d31 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4d31:	55                   	push   %rbp
    4d32:	48 89 e5             	mov    %rsp,%rbp
    4d35:	48 83 ec 20          	sub    $0x20,%rsp
    4d39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4d3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4d41:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    4d45:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4d49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d4d:	48 89 d6             	mov    %rdx,%rsi
    4d50:	48 89 c7             	mov    %rax,%rdi
    4d53:	e8 7e 04 00 00       	call   51d6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    4d58:	c9                   	leave
    4d59:	c3                   	ret

0000000000004d5a <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
    4d5a:	55                   	push   %rbp
    4d5b:	48 89 e5             	mov    %rsp,%rbp
    4d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4d66:	90                   	nop
    4d67:	5d                   	pop    %rbp
    4d68:	c3                   	ret
    4d69:	90                   	nop

0000000000004d6a <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4d6a:	55                   	push   %rbp
    4d6b:	48 89 e5             	mov    %rsp,%rbp
    4d6e:	48 83 ec 20          	sub    $0x20,%rsp
    4d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4d7a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4d7e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4d82:	48 89 d0             	mov    %rdx,%rax
    4d85:	48 c1 e0 06          	shl    $0x6,%rax
    4d89:	48 01 d0             	add    %rdx,%rax
    4d8c:	48 c1 e0 03          	shl    $0x3,%rax
    4d90:	48 89 c2             	mov    %rax,%rdx
    4d93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d97:	48 89 d6             	mov    %rdx,%rsi
    4d9a:	48 89 c7             	mov    %rax,%rdi
    4d9d:	e8 fe d3 ff ff       	call   21a0 <_ZdlPvm@plt>
      }
    4da2:	c9                   	leave
    4da3:	c3                   	ret

0000000000004da4 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4da4:	55                   	push   %rbp
    4da5:	48 89 e5             	mov    %rsp,%rbp
    4da8:	48 83 ec 10          	sub    $0x10,%rsp
    4dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4db4:	48 89 c7             	mov    %rax,%rdi
    4db7:	e8 7a 04 00 00       	call   5236 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    4dbc:	c9                   	leave
    4dbd:	c3                   	ret

0000000000004dbe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4dbe:	55                   	push   %rbp
    4dbf:	48 89 e5             	mov    %rsp,%rbp
    4dc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4dd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dd5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4ddc:	00 
    4ddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4de1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4de8:	00 
	{ }
    4de9:	90                   	nop
    4dea:	5d                   	pop    %rbp
    4deb:	c3                   	ret

0000000000004dec <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4dec:	55                   	push   %rbp
    4ded:	48 89 e5             	mov    %rsp,%rbp
    4df0:	48 83 ec 10          	sub    $0x10,%rsp
    4df4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4df8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4dfc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4e01:	74 15                	je     4e18 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    4e03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e07:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4e0b:	48 89 d6             	mov    %rdx,%rsi
    4e0e:	48 89 c7             	mov    %rax,%rdi
    4e11:	e8 3a 04 00 00       	call   5250 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    4e16:	eb 05                	jmp    4e1d <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    4e18:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4e1d:	c9                   	leave
    4e1e:	c3                   	ret

0000000000004e1f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4e1f:	55                   	push   %rbp
    4e20:	48 89 e5             	mov    %rsp,%rbp
    4e23:	48 83 ec 20          	sub    $0x20,%rsp
    4e27:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4e2b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4e2f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    4e33:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4e37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e3b:	48 89 d6             	mov    %rdx,%rsi
    4e3e:	48 89 c7             	mov    %rax,%rdi
    4e41:	e8 34 04 00 00       	call   527a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    4e46:	c9                   	leave
    4e47:	c3                   	ret

0000000000004e48 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    4e48:	55                   	push   %rbp
    4e49:	48 89 e5             	mov    %rsp,%rbp
    4e4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e54:	90                   	nop
    4e55:	5d                   	pop    %rbp
    4e56:	c3                   	ret
    4e57:	90                   	nop

0000000000004e58 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4e58:	55                   	push   %rbp
    4e59:	48 89 e5             	mov    %rsp,%rbp
    4e5c:	48 83 ec 20          	sub    $0x20,%rsp
    4e60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4e6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e70:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4e77:	00 
    4e78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e7c:	48 89 d6             	mov    %rdx,%rsi
    4e7f:	48 89 c7             	mov    %rax,%rdi
    4e82:	e8 19 d3 ff ff       	call   21a0 <_ZdlPvm@plt>
      }
    4e87:	c9                   	leave
    4e88:	c3                   	ret

0000000000004e89 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4e89:	55                   	push   %rbp
    4e8a:	48 89 e5             	mov    %rsp,%rbp
    4e8d:	48 83 ec 10          	sub    $0x10,%rsp
    4e91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e99:	48 89 c7             	mov    %rax,%rdi
    4e9c:	e8 37 04 00 00       	call   52d8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    4ea1:	c9                   	leave
    4ea2:	c3                   	ret
    4ea3:	90                   	nop

0000000000004ea4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4ea4:	55                   	push   %rbp
    4ea5:	48 89 e5             	mov    %rsp,%rbp
    4ea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eb0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4eb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ebb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4ec2:	00 
    4ec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ec7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4ece:	00 
	{ }
    4ecf:	90                   	nop
    4ed0:	5d                   	pop    %rbp
    4ed1:	c3                   	ret

0000000000004ed2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4ed2:	55                   	push   %rbp
    4ed3:	48 89 e5             	mov    %rsp,%rbp
    4ed6:	48 83 ec 10          	sub    $0x10,%rsp
    4eda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ede:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4ee2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4ee7:	74 15                	je     4efe <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    4ee9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4ef1:	48 89 d6             	mov    %rdx,%rsi
    4ef4:	48 89 c7             	mov    %rax,%rdi
    4ef7:	e8 f6 03 00 00       	call   52f2 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    4efc:	eb 05                	jmp    4f03 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    4efe:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4f03:	c9                   	leave
    4f04:	c3                   	ret

0000000000004f05 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4f05:	55                   	push   %rbp
    4f06:	48 89 e5             	mov    %rsp,%rbp
    4f09:	48 83 ec 20          	sub    $0x20,%rsp
    4f0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4f11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4f15:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    4f19:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4f1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f21:	48 89 d6             	mov    %rdx,%rsi
    4f24:	48 89 c7             	mov    %rax,%rdi
    4f27:	e8 f0 03 00 00       	call   531c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    4f2c:	c9                   	leave
    4f2d:	c3                   	ret

0000000000004f2e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    4f2e:	55                   	push   %rbp
    4f2f:	48 89 e5             	mov    %rsp,%rbp
    4f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4f3a:	90                   	nop
    4f3b:	5d                   	pop    %rbp
    4f3c:	c3                   	ret
    4f3d:	90                   	nop

0000000000004f3e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4f3e:	55                   	push   %rbp
    4f3f:	48 89 e5             	mov    %rsp,%rbp
    4f42:	48 83 ec 20          	sub    $0x20,%rsp
    4f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4f4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4f52:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4f56:	48 89 d0             	mov    %rdx,%rax
    4f59:	48 01 c0             	add    %rax,%rax
    4f5c:	48 01 d0             	add    %rdx,%rax
    4f5f:	48 c1 e0 03          	shl    $0x3,%rax
    4f63:	48 89 c2             	mov    %rax,%rdx
    4f66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4f6a:	48 89 d6             	mov    %rdx,%rsi
    4f6d:	48 89 c7             	mov    %rax,%rdi
    4f70:	e8 2b d2 ff ff       	call   21a0 <_ZdlPvm@plt>
      }
    4f75:	c9                   	leave
    4f76:	c3                   	ret
    4f77:	90                   	nop

0000000000004f78 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    4f78:	55                   	push   %rbp
    4f79:	48 89 e5             	mov    %rsp,%rbp
    4f7c:	48 83 ec 10          	sub    $0x10,%rsp
    4f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    4f84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f88:	48 89 c7             	mov    %rax,%rdi
    4f8b:	e8 ea 03 00 00       	call   537a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    4f90:	c9                   	leave
    4f91:	c3                   	ret

0000000000004f92 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    4f92:	55                   	push   %rbp
    4f93:	48 89 e5             	mov    %rsp,%rbp
    4f96:	48 83 ec 10          	sub    $0x10,%rsp
    4f9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    4fa2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4fa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4faa:	ba 00 00 00 00       	mov    $0x0,%edx
    4faf:	48 89 ce             	mov    %rcx,%rsi
    4fb2:	48 89 c7             	mov    %rax,%rdi
    4fb5:	e8 d4 03 00 00       	call   538e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    4fba:	c9                   	leave
    4fbb:	c3                   	ret

0000000000004fbc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    4fbc:	55                   	push   %rbp
    4fbd:	48 89 e5             	mov    %rsp,%rbp
    4fc0:	48 83 ec 20          	sub    $0x20,%rsp
    4fc4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4fc8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    4fcc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    4fd1:	74 43                	je     5016 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    4fd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fd7:	48 89 c7             	mov    %rax,%rdi
    4fda:	e8 1a 04 00 00       	call   53f9 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    4fdf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    4fe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fe7:	48 89 c7             	mov    %rax,%rdi
    4fea:	e8 18 04 00 00       	call   5407 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    4fef:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    4ff6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    4ff7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ffb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    4fff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5003:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5007:	48 89 ce             	mov    %rcx,%rsi
    500a:	48 89 c7             	mov    %rax,%rdi
    500d:	e8 4f 04 00 00       	call   5461 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    5012:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5016:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    501a:	c9                   	leave
    501b:	c3                   	ret

000000000000501c <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    501c:	55                   	push   %rbp
    501d:	48 89 e5             	mov    %rsp,%rbp
    5020:	48 83 ec 10          	sub    $0x10,%rsp
    5024:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    502c:	48 89 c7             	mov    %rax,%rdi
    502f:	e8 72 04 00 00       	call   54a6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    5034:	c9                   	leave
    5035:	c3                   	ret

0000000000005036 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    5036:	55                   	push   %rbp
    5037:	48 89 e5             	mov    %rsp,%rbp
    503a:	48 83 ec 10          	sub    $0x10,%rsp
    503e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5042:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5046:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    504a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    504e:	ba 00 00 00 00       	mov    $0x0,%edx
    5053:	48 89 ce             	mov    %rcx,%rsi
    5056:	48 89 c7             	mov    %rax,%rdi
    5059:	e8 5c 04 00 00       	call   54ba <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    505e:	c9                   	leave
    505f:	c3                   	ret

0000000000005060 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5060:	55                   	push   %rbp
    5061:	48 89 e5             	mov    %rsp,%rbp
    5064:	48 83 ec 20          	sub    $0x20,%rsp
    5068:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    506c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5070:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5075:	74 40                	je     50b7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    5077:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    507b:	48 89 c7             	mov    %rax,%rdi
    507e:	e8 98 04 00 00       	call   551b <_ZSt11__addressofIPKcEPT_RS2_>
    5083:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    508b:	48 89 c7             	mov    %rax,%rdi
    508e:	e8 96 04 00 00       	call   5529 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    5093:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5098:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    509c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    50a0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    50a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50a8:	48 89 ce             	mov    %rcx,%rsi
    50ab:	48 89 c7             	mov    %rax,%rdi
    50ae:	e8 9d 04 00 00       	call   5550 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    50b3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    50b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    50bb:	c9                   	leave
    50bc:	c3                   	ret
    50bd:	90                   	nop

00000000000050be <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    50be:	55                   	push   %rbp
    50bf:	48 89 e5             	mov    %rsp,%rbp
    50c2:	48 83 ec 10          	sub    $0x10,%rsp
    50c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    50ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ce:	48 89 c7             	mov    %rax,%rdi
    50d1:	e8 be 04 00 00       	call   5594 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    50d6:	48 89 c7             	mov    %rax,%rdi
    50d9:	e8 ff ef ff ff       	call   40dd <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    50de:	c9                   	leave
    50df:	c3                   	ret

00000000000050e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    50e0:	55                   	push   %rbp
    50e1:	48 89 e5             	mov    %rsp,%rbp
    50e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    50e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ec:	48 8b 50 08          	mov    0x8(%rax),%rdx
    50f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f4:	48 8b 00             	mov    (%rax),%rax
    50f7:	48 29 c2             	sub    %rax,%rdx
    50fa:	48 89 d0             	mov    %rdx,%rax
    50fd:	48 c1 f8 03          	sar    $0x3,%rax
    5101:	5d                   	pop    %rbp
    5102:	c3                   	ret

0000000000005103 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    5103:	55                   	push   %rbp
    5104:	48 89 e5             	mov    %rsp,%rbp
    5107:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    510b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    510f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5113:	48 8b 10             	mov    (%rax),%rdx
    5116:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    511a:	48 8b 00             	mov    (%rax),%rax
    511d:	48 39 c2             	cmp    %rax,%rdx
    5120:	73 06                	jae    5128 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    5122:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5126:	eb 04                	jmp    512c <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    5128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    512c:	5d                   	pop    %rbp
    512d:	c3                   	ret

000000000000512e <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    512e:	55                   	push   %rbp
    512f:	48 89 e5             	mov    %rsp,%rbp
    5132:	41 54                	push   %r12
    5134:	53                   	push   %rbx
    5135:	48 83 ec 20          	sub    $0x20,%rsp
    5139:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    513d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5141:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    5145:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    5149:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    514d:	48 89 c7             	mov    %rax,%rdi
    5150:	e8 4d 04 00 00       	call   55a2 <_ZSt12__niter_baseIPPKcET_S3_>
    5155:	49 89 c4             	mov    %rax,%r12
    5158:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    515c:	48 89 c7             	mov    %rax,%rdi
    515f:	e8 3e 04 00 00       	call   55a2 <_ZSt12__niter_baseIPPKcET_S3_>
    5164:	48 89 c3             	mov    %rax,%rbx
    5167:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    516b:	48 89 c7             	mov    %rax,%rdi
    516e:	e8 2f 04 00 00       	call   55a2 <_ZSt12__niter_baseIPPKcET_S3_>
    5173:	48 89 c7             	mov    %rax,%rdi
    5176:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    517a:	48 89 c1             	mov    %rax,%rcx
    517d:	4c 89 e2             	mov    %r12,%rdx
    5180:	48 89 de             	mov    %rbx,%rsi
    5183:	e8 28 04 00 00       	call   55b0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    5188:	48 83 c4 20          	add    $0x20,%rsp
    518c:	5b                   	pop    %rbx
    518d:	41 5c                	pop    %r12
    518f:	5d                   	pop    %rbp
    5190:	c3                   	ret
    5191:	90                   	nop

0000000000005192 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5192:	55                   	push   %rbp
    5193:	48 89 e5             	mov    %rsp,%rbp
    5196:	48 83 ec 10          	sub    $0x10,%rsp
    519a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    519e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a2:	48 89 c7             	mov    %rax,%rdi
    51a5:	e8 6a 04 00 00       	call   5614 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    51aa:	c9                   	leave
    51ab:	c3                   	ret

00000000000051ac <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    51ac:	55                   	push   %rbp
    51ad:	48 89 e5             	mov    %rsp,%rbp
    51b0:	48 83 ec 10          	sub    $0x10,%rsp
    51b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    51bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    51c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51c4:	ba 00 00 00 00       	mov    $0x0,%edx
    51c9:	48 89 ce             	mov    %rcx,%rsi
    51cc:	48 89 c7             	mov    %rax,%rdi
    51cf:	e8 54 04 00 00       	call   5628 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    51d4:	c9                   	leave
    51d5:	c3                   	ret

00000000000051d6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    51d6:	55                   	push   %rbp
    51d7:	48 89 e5             	mov    %rsp,%rbp
    51da:	48 83 ec 20          	sub    $0x20,%rsp
    51de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    51e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    51e6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    51eb:	74 43                	je     5230 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    51ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51f1:	48 89 c7             	mov    %rax,%rdi
    51f4:	e8 9a 04 00 00       	call   5693 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    51f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    51fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5201:	48 89 c7             	mov    %rax,%rdi
    5204:	e8 98 04 00 00       	call   56a1 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    5209:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    5210:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    5211:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5215:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5219:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    521d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5221:	48 89 ce             	mov    %rcx,%rsi
    5224:	48 89 c7             	mov    %rax,%rdi
    5227:	e8 cf 04 00 00       	call   56fb <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    522c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5230:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5234:	c9                   	leave
    5235:	c3                   	ret

0000000000005236 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5236:	55                   	push   %rbp
    5237:	48 89 e5             	mov    %rsp,%rbp
    523a:	48 83 ec 10          	sub    $0x10,%rsp
    523e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5246:	48 89 c7             	mov    %rax,%rdi
    5249:	e8 f2 04 00 00       	call   5740 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    524e:	c9                   	leave
    524f:	c3                   	ret

0000000000005250 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    5250:	55                   	push   %rbp
    5251:	48 89 e5             	mov    %rsp,%rbp
    5254:	48 83 ec 10          	sub    $0x10,%rsp
    5258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    525c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5260:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5268:	ba 00 00 00 00       	mov    $0x0,%edx
    526d:	48 89 ce             	mov    %rcx,%rsi
    5270:	48 89 c7             	mov    %rax,%rdi
    5273:	e8 dc 04 00 00       	call   5754 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    5278:	c9                   	leave
    5279:	c3                   	ret

000000000000527a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    527a:	55                   	push   %rbp
    527b:	48 89 e5             	mov    %rsp,%rbp
    527e:	48 83 ec 20          	sub    $0x20,%rsp
    5282:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5286:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    528a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    528f:	74 40                	je     52d1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    5291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5295:	48 89 c7             	mov    %rax,%rdi
    5298:	e8 18 05 00 00       	call   57b5 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    529d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    52a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a5:	48 89 c7             	mov    %rax,%rdi
    52a8:	e8 16 05 00 00       	call   57c3 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    52ad:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    52b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    52b6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    52ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    52be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52c2:	48 89 ce             	mov    %rcx,%rsi
    52c5:	48 89 c7             	mov    %rax,%rdi
    52c8:	e8 1d 05 00 00       	call   57ea <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    52cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    52d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    52d5:	c9                   	leave
    52d6:	c3                   	ret
    52d7:	90                   	nop

00000000000052d8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    52d8:	55                   	push   %rbp
    52d9:	48 89 e5             	mov    %rsp,%rbp
    52dc:	48 83 ec 10          	sub    $0x10,%rsp
    52e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    52e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e8:	48 89 c7             	mov    %rax,%rdi
    52eb:	e8 3e 05 00 00       	call   582e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    52f0:	c9                   	leave
    52f1:	c3                   	ret

00000000000052f2 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    52f2:	55                   	push   %rbp
    52f3:	48 89 e5             	mov    %rsp,%rbp
    52f6:	48 83 ec 10          	sub    $0x10,%rsp
    52fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5302:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    530a:	ba 00 00 00 00       	mov    $0x0,%edx
    530f:	48 89 ce             	mov    %rcx,%rsi
    5312:	48 89 c7             	mov    %rax,%rdi
    5315:	e8 28 05 00 00       	call   5842 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    531a:	c9                   	leave
    531b:	c3                   	ret

000000000000531c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    531c:	55                   	push   %rbp
    531d:	48 89 e5             	mov    %rsp,%rbp
    5320:	48 83 ec 20          	sub    $0x20,%rsp
    5324:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5328:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    532c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5331:	74 40                	je     5373 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    5333:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5337:	48 89 c7             	mov    %rax,%rdi
    533a:	e8 6d 05 00 00       	call   58ac <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    533f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5347:	48 89 c7             	mov    %rax,%rdi
    534a:	e8 6b 05 00 00       	call   58ba <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    534f:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5354:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5358:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    535c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5360:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5364:	48 89 ce             	mov    %rcx,%rsi
    5367:	48 89 c7             	mov    %rax,%rdi
    536a:	e8 94 05 00 00       	call   5903 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    536f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5373:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5377:	c9                   	leave
    5378:	c3                   	ret
    5379:	90                   	nop

000000000000537a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    537a:	55                   	push   %rbp
    537b:	48 89 e5             	mov    %rsp,%rbp
    537e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5382:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    5389:	07 7e 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    538c:	5d                   	pop    %rbp
    538d:	c3                   	ret

000000000000538e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    538e:	55                   	push   %rbp
    538f:	48 89 e5             	mov    %rsp,%rbp
    5392:	48 83 ec 20          	sub    $0x20,%rsp
    5396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    539a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    539e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    53a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a6:	48 89 c7             	mov    %rax,%rdi
    53a9:	e8 cc ff ff ff       	call   537a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    53ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    53b2:	0f 92 c0             	setb   %al
    53b5:	0f b6 c0             	movzbl %al,%eax
    53b8:	48 85 c0             	test   %rax,%rax
    53bb:	0f 95 c0             	setne  %al
    53be:	84 c0                	test   %al,%al
    53c0:	74 1a                	je     53dc <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    53c2:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    53c9:	0f fc 00 
    53cc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    53d0:	73 05                	jae    53d7 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    53d2:	e8 29 cd ff ff       	call   2100 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    53d7:	e8 64 cc ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    53dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53e0:	48 89 d0             	mov    %rdx,%rax
    53e3:	48 c1 e0 06          	shl    $0x6,%rax
    53e7:	48 01 d0             	add    %rdx,%rax
    53ea:	48 c1 e0 02          	shl    $0x2,%rax
    53ee:	48 89 c7             	mov    %rax,%rdi
    53f1:	e8 9a cd ff ff       	call   2190 <_Znwm@plt>
    53f6:	90                   	nop
      }
    53f7:	c9                   	leave
    53f8:	c3                   	ret

00000000000053f9 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    53f9:	55                   	push   %rbp
    53fa:	48 89 e5             	mov    %rsp,%rbp
    53fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5405:	5d                   	pop    %rbp
    5406:	c3                   	ret

0000000000005407 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5407:	55                   	push   %rbp
    5408:	48 89 e5             	mov    %rsp,%rbp
    540b:	48 83 ec 10          	sub    $0x10,%rsp
    540f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5413:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5417:	48 89 c6             	mov    %rax,%rsi
    541a:	bf 04 01 00 00       	mov    $0x104,%edi
    541f:	e8 1f da ff ff       	call   2e43 <_ZnwmPv>
    5424:	b9 04 01 00 00       	mov    $0x104,%ecx
    5429:	be 00 00 00 00       	mov    $0x0,%esi
    542e:	48 89 30             	mov    %rsi,(%rax)
    5431:	89 ca                	mov    %ecx,%edx
    5433:	48 01 c2             	add    %rax,%rdx
    5436:	48 83 c2 08          	add    $0x8,%rdx
    543a:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    543e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5442:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    5446:	48 29 d0             	sub    %rdx,%rax
    5449:	01 c1                	add    %eax,%ecx
    544b:	83 e1 f8             	and    $0xfffffff8,%ecx
    544e:	89 c8                	mov    %ecx,%eax
    5450:	c1 e8 03             	shr    $0x3,%eax
    5453:	89 c1                	mov    %eax,%ecx
    5455:	48 89 d7             	mov    %rdx,%rdi
    5458:	48 89 f0             	mov    %rsi,%rax
    545b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    545e:	90                   	nop
    545f:	c9                   	leave
    5460:	c3                   	ret

0000000000005461 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5461:	55                   	push   %rbp
    5462:	48 89 e5             	mov    %rsp,%rbp
    5465:	48 83 ec 20          	sub    $0x20,%rsp
    5469:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    546d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5471:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    5475:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5479:	48 89 c7             	mov    %rax,%rdi
    547c:	e8 c6 04 00 00       	call   5947 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5481:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5485:	48 89 c7             	mov    %rax,%rdi
    5488:	e8 c8 d9 ff ff       	call   2e55 <_ZSt17__size_to_integerm>
    548d:	48 89 c1             	mov    %rax,%rcx
    5490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5494:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5498:	48 89 ce             	mov    %rcx,%rsi
    549b:	48 89 c7             	mov    %rax,%rdi
    549e:	e8 af 04 00 00       	call   5952 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    54a3:	c9                   	leave
    54a4:	c3                   	ret
    54a5:	90                   	nop

00000000000054a6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    54a6:	55                   	push   %rbp
    54a7:	48 89 e5             	mov    %rsp,%rbp
    54aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    54ae:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    54b5:	ff ff 0f 
      }
    54b8:	5d                   	pop    %rbp
    54b9:	c3                   	ret

00000000000054ba <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    54ba:	55                   	push   %rbp
    54bb:	48 89 e5             	mov    %rsp,%rbp
    54be:	48 83 ec 20          	sub    $0x20,%rsp
    54c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    54ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d2:	48 89 c7             	mov    %rax,%rdi
    54d5:	e8 cc ff ff ff       	call   54a6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    54da:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54de:	0f 92 c0             	setb   %al
    54e1:	0f b6 c0             	movzbl %al,%eax
    54e4:	48 85 c0             	test   %rax,%rax
    54e7:	0f 95 c0             	setne  %al
    54ea:	84 c0                	test   %al,%al
    54ec:	74 1a                	je     5508 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    54ee:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    54f5:	ff ff 1f 
    54f8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54fc:	73 05                	jae    5503 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    54fe:	e8 fd cb ff ff       	call   2100 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5503:	e8 38 cb ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5508:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    550c:	48 c1 e0 03          	shl    $0x3,%rax
    5510:	48 89 c7             	mov    %rax,%rdi
    5513:	e8 78 cc ff ff       	call   2190 <_Znwm@plt>
    5518:	90                   	nop
      }
    5519:	c9                   	leave
    551a:	c3                   	ret

000000000000551b <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    551b:	55                   	push   %rbp
    551c:	48 89 e5             	mov    %rsp,%rbp
    551f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5527:	5d                   	pop    %rbp
    5528:	c3                   	ret

0000000000005529 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5529:	55                   	push   %rbp
    552a:	48 89 e5             	mov    %rsp,%rbp
    552d:	48 83 ec 10          	sub    $0x10,%rsp
    5531:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5539:	48 89 c6             	mov    %rax,%rsi
    553c:	bf 08 00 00 00       	mov    $0x8,%edi
    5541:	e8 fd d8 ff ff       	call   2e43 <_ZnwmPv>
    5546:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    554d:	90                   	nop
    554e:	c9                   	leave
    554f:	c3                   	ret

0000000000005550 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5550:	55                   	push   %rbp
    5551:	48 89 e5             	mov    %rsp,%rbp
    5554:	48 83 ec 20          	sub    $0x20,%rsp
    5558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    555c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5560:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    5564:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5568:	48 89 c7             	mov    %rax,%rdi
    556b:	e8 51 04 00 00       	call   59c1 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5570:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5574:	48 89 c7             	mov    %rax,%rdi
    5577:	e8 d9 d8 ff ff       	call   2e55 <_ZSt17__size_to_integerm>
    557c:	48 89 c1             	mov    %rax,%rcx
    557f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5583:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5587:	48 89 ce             	mov    %rcx,%rsi
    558a:	48 89 c7             	mov    %rax,%rdi
    558d:	e8 3a 04 00 00       	call   59cc <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    5592:	c9                   	leave
    5593:	c3                   	ret

0000000000005594 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    5594:	55                   	push   %rbp
    5595:	48 89 e5             	mov    %rsp,%rbp
    5598:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    559c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a0:	5d                   	pop    %rbp
    55a1:	c3                   	ret

00000000000055a2 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    55a2:	55                   	push   %rbp
    55a3:	48 89 e5             	mov    %rsp,%rbp
    55a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    55aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ae:	5d                   	pop    %rbp
    55af:	c3                   	ret

00000000000055b0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    55b0:	55                   	push   %rbp
    55b1:	48 89 e5             	mov    %rsp,%rbp
    55b4:	48 83 ec 30          	sub    $0x30,%rsp
    55b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    55c0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    55c4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    55c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    55cc:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    55d0:	48 c1 f8 03          	sar    $0x3,%rax
    55d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    55d8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    55dd:	7e 1f                	jle    55fe <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    55df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55e3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55ea:	00 
    55eb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    55ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    55f3:	48 89 ce             	mov    %rcx,%rsi
    55f6:	48 89 c7             	mov    %rax,%rdi
    55f9:	e8 62 cc ff ff       	call   2260 <memmove@plt>
      return __result + __count;
    55fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5602:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5609:	00 
    560a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    560e:	48 01 d0             	add    %rdx,%rax
    }
    5611:	c9                   	leave
    5612:	c3                   	ret
    5613:	90                   	nop

0000000000005614 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5614:	55                   	push   %rbp
    5615:	48 89 e5             	mov    %rsp,%rbp
    5618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    561c:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    5623:	03 3f 00 
      }
    5626:	5d                   	pop    %rbp
    5627:	c3                   	ret

0000000000005628 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5628:	55                   	push   %rbp
    5629:	48 89 e5             	mov    %rsp,%rbp
    562c:	48 83 ec 20          	sub    $0x20,%rsp
    5630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5634:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5638:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    563c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5640:	48 89 c7             	mov    %rax,%rdi
    5643:	e8 cc ff ff ff       	call   5614 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    5648:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    564c:	0f 92 c0             	setb   %al
    564f:	0f b6 c0             	movzbl %al,%eax
    5652:	48 85 c0             	test   %rax,%rax
    5655:	0f 95 c0             	setne  %al
    5658:	84 c0                	test   %al,%al
    565a:	74 1a                	je     5676 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    565c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    5663:	07 7e 00 
    5666:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    566a:	73 05                	jae    5671 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    566c:	e8 8f ca ff ff       	call   2100 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5671:	e8 ca c9 ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5676:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    567a:	48 89 d0             	mov    %rdx,%rax
    567d:	48 c1 e0 06          	shl    $0x6,%rax
    5681:	48 01 d0             	add    %rdx,%rax
    5684:	48 c1 e0 03          	shl    $0x3,%rax
    5688:	48 89 c7             	mov    %rax,%rdi
    568b:	e8 00 cb ff ff       	call   2190 <_Znwm@plt>
    5690:	90                   	nop
      }
    5691:	c9                   	leave
    5692:	c3                   	ret

0000000000005693 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    5693:	55                   	push   %rbp
    5694:	48 89 e5             	mov    %rsp,%rbp
    5697:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    569b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    569f:	5d                   	pop    %rbp
    56a0:	c3                   	ret

00000000000056a1 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    56a1:	55                   	push   %rbp
    56a2:	48 89 e5             	mov    %rsp,%rbp
    56a5:	48 83 ec 10          	sub    $0x10,%rsp
    56a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    56ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56b1:	48 89 c6             	mov    %rax,%rsi
    56b4:	bf 08 02 00 00       	mov    $0x208,%edi
    56b9:	e8 85 d7 ff ff       	call   2e43 <_ZnwmPv>
    56be:	b9 08 02 00 00       	mov    $0x208,%ecx
    56c3:	be 00 00 00 00       	mov    $0x0,%esi
    56c8:	48 89 30             	mov    %rsi,(%rax)
    56cb:	89 ca                	mov    %ecx,%edx
    56cd:	48 01 c2             	add    %rax,%rdx
    56d0:	48 83 c2 08          	add    $0x8,%rdx
    56d4:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    56d8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    56dc:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    56e0:	48 29 d0             	sub    %rdx,%rax
    56e3:	01 c1                	add    %eax,%ecx
    56e5:	83 e1 f8             	and    $0xfffffff8,%ecx
    56e8:	89 c8                	mov    %ecx,%eax
    56ea:	c1 e8 03             	shr    $0x3,%eax
    56ed:	89 c1                	mov    %eax,%ecx
    56ef:	48 89 d7             	mov    %rdx,%rdi
    56f2:	48 89 f0             	mov    %rsi,%rax
    56f5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    56f8:	90                   	nop
    56f9:	c9                   	leave
    56fa:	c3                   	ret

00000000000056fb <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    56fb:	55                   	push   %rbp
    56fc:	48 89 e5             	mov    %rsp,%rbp
    56ff:	48 83 ec 20          	sub    $0x20,%rsp
    5703:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5707:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    570b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    570f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5713:	48 89 c7             	mov    %rax,%rdi
    5716:	e8 0e 03 00 00       	call   5a29 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    571b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    571f:	48 89 c7             	mov    %rax,%rdi
    5722:	e8 2e d7 ff ff       	call   2e55 <_ZSt17__size_to_integerm>
    5727:	48 89 c1             	mov    %rax,%rcx
    572a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    572e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5732:	48 89 ce             	mov    %rcx,%rsi
    5735:	48 89 c7             	mov    %rax,%rdi
    5738:	e8 f7 02 00 00       	call   5a34 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    573d:	c9                   	leave
    573e:	c3                   	ret
    573f:	90                   	nop

0000000000005740 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5740:	55                   	push   %rbp
    5741:	48 89 e5             	mov    %rsp,%rbp
    5744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5748:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    574f:	ff ff 0f 
      }
    5752:	5d                   	pop    %rbp
    5753:	c3                   	ret

0000000000005754 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5754:	55                   	push   %rbp
    5755:	48 89 e5             	mov    %rsp,%rbp
    5758:	48 83 ec 20          	sub    $0x20,%rsp
    575c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5760:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5764:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5768:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    576c:	48 89 c7             	mov    %rax,%rdi
    576f:	e8 cc ff ff ff       	call   5740 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    5774:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5778:	0f 92 c0             	setb   %al
    577b:	0f b6 c0             	movzbl %al,%eax
    577e:	48 85 c0             	test   %rax,%rax
    5781:	0f 95 c0             	setne  %al
    5784:	84 c0                	test   %al,%al
    5786:	74 1a                	je     57a2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5788:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    578f:	ff ff 1f 
    5792:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5796:	73 05                	jae    579d <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5798:	e8 63 c9 ff ff       	call   2100 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    579d:	e8 9e c8 ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    57a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57a6:	48 c1 e0 03          	shl    $0x3,%rax
    57aa:	48 89 c7             	mov    %rax,%rdi
    57ad:	e8 de c9 ff ff       	call   2190 <_Znwm@plt>
    57b2:	90                   	nop
      }
    57b3:	c9                   	leave
    57b4:	c3                   	ret

00000000000057b5 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    57b5:	55                   	push   %rbp
    57b6:	48 89 e5             	mov    %rsp,%rbp
    57b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    57bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57c1:	5d                   	pop    %rbp
    57c2:	c3                   	ret

00000000000057c3 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    57c3:	55                   	push   %rbp
    57c4:	48 89 e5             	mov    %rsp,%rbp
    57c7:	48 83 ec 10          	sub    $0x10,%rsp
    57cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    57cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57d3:	48 89 c6             	mov    %rax,%rsi
    57d6:	bf 08 00 00 00       	mov    $0x8,%edi
    57db:	e8 63 d6 ff ff       	call   2e43 <_ZnwmPv>
    57e0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    57e7:	90                   	nop
    57e8:	c9                   	leave
    57e9:	c3                   	ret

00000000000057ea <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    57ea:	55                   	push   %rbp
    57eb:	48 89 e5             	mov    %rsp,%rbp
    57ee:	48 83 ec 20          	sub    $0x20,%rsp
    57f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    57fe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5802:	48 89 c7             	mov    %rax,%rdi
    5805:	e8 99 02 00 00       	call   5aa3 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    580a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    580e:	48 89 c7             	mov    %rax,%rdi
    5811:	e8 3f d6 ff ff       	call   2e55 <_ZSt17__size_to_integerm>
    5816:	48 89 c1             	mov    %rax,%rcx
    5819:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    581d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5821:	48 89 ce             	mov    %rcx,%rsi
    5824:	48 89 c7             	mov    %rax,%rdi
    5827:	e8 82 02 00 00       	call   5aae <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    582c:	c9                   	leave
    582d:	c3                   	ret

000000000000582e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    582e:	55                   	push   %rbp
    582f:	48 89 e5             	mov    %rsp,%rbp
    5832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5836:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    583d:	55 55 05 
      }
    5840:	5d                   	pop    %rbp
    5841:	c3                   	ret

0000000000005842 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5842:	55                   	push   %rbp
    5843:	48 89 e5             	mov    %rsp,%rbp
    5846:	48 83 ec 20          	sub    $0x20,%rsp
    584a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    584e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5852:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    585a:	48 89 c7             	mov    %rax,%rdi
    585d:	e8 cc ff ff ff       	call   582e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    5862:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5866:	0f 92 c0             	setb   %al
    5869:	0f b6 c0             	movzbl %al,%eax
    586c:	48 85 c0             	test   %rax,%rax
    586f:	0f 95 c0             	setne  %al
    5872:	84 c0                	test   %al,%al
    5874:	74 1a                	je     5890 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5876:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    587d:	aa aa 0a 
    5880:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5884:	73 05                	jae    588b <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5886:	e8 75 c8 ff ff       	call   2100 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    588b:	e8 b0 c7 ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5890:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5894:	48 89 d0             	mov    %rdx,%rax
    5897:	48 01 c0             	add    %rax,%rax
    589a:	48 01 d0             	add    %rdx,%rax
    589d:	48 c1 e0 03          	shl    $0x3,%rax
    58a1:	48 89 c7             	mov    %rax,%rdi
    58a4:	e8 e7 c8 ff ff       	call   2190 <_Znwm@plt>
    58a9:	90                   	nop
      }
    58aa:	c9                   	leave
    58ab:	c3                   	ret

00000000000058ac <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    58ac:	55                   	push   %rbp
    58ad:	48 89 e5             	mov    %rsp,%rbp
    58b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    58b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58b8:	5d                   	pop    %rbp
    58b9:	c3                   	ret

00000000000058ba <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    58ba:	55                   	push   %rbp
    58bb:	48 89 e5             	mov    %rsp,%rbp
    58be:	48 83 ec 10          	sub    $0x10,%rsp
    58c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    58c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ca:	48 89 c6             	mov    %rax,%rsi
    58cd:	bf 18 00 00 00       	mov    $0x18,%edi
    58d2:	e8 6c d5 ff ff       	call   2e43 <_ZnwmPv>
    58d7:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    58dd:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    58e4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    58eb:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    58f2:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    58f9:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    5900:	90                   	nop
    5901:	c9                   	leave
    5902:	c3                   	ret

0000000000005903 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5903:	55                   	push   %rbp
    5904:	48 89 e5             	mov    %rsp,%rbp
    5907:	48 83 ec 20          	sub    $0x20,%rsp
    590b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    590f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5913:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    5917:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    591b:	48 89 c7             	mov    %rax,%rdi
    591e:	e8 e8 01 00 00       	call   5b0b <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5923:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5927:	48 89 c7             	mov    %rax,%rdi
    592a:	e8 26 d5 ff ff       	call   2e55 <_ZSt17__size_to_integerm>
    592f:	48 89 c1             	mov    %rax,%rcx
    5932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5936:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    593a:	48 89 ce             	mov    %rcx,%rsi
    593d:	48 89 c7             	mov    %rax,%rdi
    5940:	e8 d1 01 00 00       	call   5b16 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    5945:	c9                   	leave
    5946:	c3                   	ret

0000000000005947 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    5947:	55                   	push   %rbp
    5948:	48 89 e5             	mov    %rsp,%rbp
    594b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    594f:	90                   	nop
    5950:	5d                   	pop    %rbp
    5951:	c3                   	ret

0000000000005952 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5952:	55                   	push   %rbp
    5953:	48 89 e5             	mov    %rsp,%rbp
    5956:	48 83 ec 20          	sub    $0x20,%rsp
    595a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    595e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5962:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5966:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    596b:	75 06                	jne    5973 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    596d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5971:	eb 4c                	jmp    59bf <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    5973:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5977:	48 89 d0             	mov    %rdx,%rax
    597a:	48 c1 e0 06          	shl    $0x6,%rax
    597e:	48 01 d0             	add    %rdx,%rax
    5981:	48 c1 e0 02          	shl    $0x2,%rax
    5985:	48 89 c2             	mov    %rax,%rdx
    5988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    598c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5990:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5998:	48 89 ce             	mov    %rcx,%rsi
    599b:	48 89 c7             	mov    %rax,%rdi
    599e:	e8 e0 01 00 00       	call   5b83 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    59a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    59a7:	48 89 d0             	mov    %rdx,%rax
    59aa:	48 c1 e0 06          	shl    $0x6,%rax
    59ae:	48 01 d0             	add    %rdx,%rax
    59b1:	48 c1 e0 02          	shl    $0x2,%rax
    59b5:	48 89 c2             	mov    %rax,%rdx
    59b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59bc:	48 01 d0             	add    %rdx,%rax
    }
    59bf:	c9                   	leave
    59c0:	c3                   	ret

00000000000059c1 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    59c1:	55                   	push   %rbp
    59c2:	48 89 e5             	mov    %rsp,%rbp
    59c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    59c9:	90                   	nop
    59ca:	5d                   	pop    %rbp
    59cb:	c3                   	ret

00000000000059cc <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    59cc:	55                   	push   %rbp
    59cd:	48 89 e5             	mov    %rsp,%rbp
    59d0:	48 83 ec 20          	sub    $0x20,%rsp
    59d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    59e0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    59e5:	75 06                	jne    59ed <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    59e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59eb:	eb 3a                	jmp    5a27 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    59ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59f1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    59f8:	00 
    59f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59fd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5a01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5a05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a09:	48 89 ce             	mov    %rcx,%rsi
    5a0c:	48 89 c7             	mov    %rax,%rdi
    5a0f:	e8 9d 01 00 00       	call   5bb1 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    5a14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a18:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5a1f:	00 
    5a20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a24:	48 01 d0             	add    %rdx,%rax
    }
    5a27:	c9                   	leave
    5a28:	c3                   	ret

0000000000005a29 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    5a29:	55                   	push   %rbp
    5a2a:	48 89 e5             	mov    %rsp,%rbp
    5a2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5a31:	90                   	nop
    5a32:	5d                   	pop    %rbp
    5a33:	c3                   	ret

0000000000005a34 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5a34:	55                   	push   %rbp
    5a35:	48 89 e5             	mov    %rsp,%rbp
    5a38:	48 83 ec 20          	sub    $0x20,%rsp
    5a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5a44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5a48:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5a4d:	75 06                	jne    5a55 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a53:	eb 4c                	jmp    5aa1 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    5a55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a59:	48 89 d0             	mov    %rdx,%rax
    5a5c:	48 c1 e0 06          	shl    $0x6,%rax
    5a60:	48 01 d0             	add    %rdx,%rax
    5a63:	48 c1 e0 03          	shl    $0x3,%rax
    5a67:	48 89 c2             	mov    %rax,%rdx
    5a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a6e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5a72:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a7a:	48 89 ce             	mov    %rcx,%rsi
    5a7d:	48 89 c7             	mov    %rax,%rdi
    5a80:	e8 5a 01 00 00       	call   5bdf <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    5a85:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a89:	48 89 d0             	mov    %rdx,%rax
    5a8c:	48 c1 e0 06          	shl    $0x6,%rax
    5a90:	48 01 d0             	add    %rdx,%rax
    5a93:	48 c1 e0 03          	shl    $0x3,%rax
    5a97:	48 89 c2             	mov    %rax,%rdx
    5a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a9e:	48 01 d0             	add    %rdx,%rax
    }
    5aa1:	c9                   	leave
    5aa2:	c3                   	ret

0000000000005aa3 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5aa3:	55                   	push   %rbp
    5aa4:	48 89 e5             	mov    %rsp,%rbp
    5aa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5aab:	90                   	nop
    5aac:	5d                   	pop    %rbp
    5aad:	c3                   	ret

0000000000005aae <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5aae:	55                   	push   %rbp
    5aaf:	48 89 e5             	mov    %rsp,%rbp
    5ab2:	48 83 ec 20          	sub    $0x20,%rsp
    5ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5aba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5abe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5ac2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5ac7:	75 06                	jne    5acf <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5ac9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5acd:	eb 3a                	jmp    5b09 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    5acf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ad3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5ada:	00 
    5adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5adf:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5ae3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aeb:	48 89 ce             	mov    %rcx,%rsi
    5aee:	48 89 c7             	mov    %rax,%rdi
    5af1:	e8 17 01 00 00       	call   5c0d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    5af6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5afa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5b01:	00 
    5b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b06:	48 01 d0             	add    %rdx,%rax
    }
    5b09:	c9                   	leave
    5b0a:	c3                   	ret

0000000000005b0b <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    5b0b:	55                   	push   %rbp
    5b0c:	48 89 e5             	mov    %rsp,%rbp
    5b0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5b13:	90                   	nop
    5b14:	5d                   	pop    %rbp
    5b15:	c3                   	ret

0000000000005b16 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5b16:	55                   	push   %rbp
    5b17:	48 89 e5             	mov    %rsp,%rbp
    5b1a:	48 83 ec 20          	sub    $0x20,%rsp
    5b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5b26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5b2a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5b2f:	75 06                	jne    5b37 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5b31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b35:	eb 4a                	jmp    5b81 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    5b37:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b3b:	48 89 d0             	mov    %rdx,%rax
    5b3e:	48 01 c0             	add    %rax,%rax
    5b41:	48 01 d0             	add    %rdx,%rax
    5b44:	48 c1 e0 03          	shl    $0x3,%rax
    5b48:	48 89 c2             	mov    %rax,%rdx
    5b4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b4f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5b53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b5b:	48 89 ce             	mov    %rcx,%rsi
    5b5e:	48 89 c7             	mov    %rax,%rdi
    5b61:	e8 d5 00 00 00       	call   5c3b <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    5b66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b6a:	48 89 d0             	mov    %rdx,%rax
    5b6d:	48 01 c0             	add    %rax,%rax
    5b70:	48 01 d0             	add    %rdx,%rax
    5b73:	48 c1 e0 03          	shl    $0x3,%rax
    5b77:	48 89 c2             	mov    %rax,%rdx
    5b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b7e:	48 01 d0             	add    %rdx,%rax
    }
    5b81:	c9                   	leave
    5b82:	c3                   	ret

0000000000005b83 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5b83:	55                   	push   %rbp
    5b84:	48 89 e5             	mov    %rsp,%rbp
    5b87:	48 83 ec 20          	sub    $0x20,%rsp
    5b8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5b93:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5b97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5b9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5b9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ba3:	48 89 ce             	mov    %rcx,%rsi
    5ba6:	48 89 c7             	mov    %rax,%rdi
    5ba9:	e8 bb 00 00 00       	call   5c69 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    5bae:	90                   	nop
    5baf:	c9                   	leave
    5bb0:	c3                   	ret

0000000000005bb1 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5bb1:	55                   	push   %rbp
    5bb2:	48 89 e5             	mov    %rsp,%rbp
    5bb5:	48 83 ec 20          	sub    $0x20,%rsp
    5bb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bbd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bc1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5bc5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5bc9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bd1:	48 89 ce             	mov    %rcx,%rsi
    5bd4:	48 89 c7             	mov    %rax,%rdi
    5bd7:	e8 05 01 00 00       	call   5ce1 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5bdc:	90                   	nop
    5bdd:	c9                   	leave
    5bde:	c3                   	ret

0000000000005bdf <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5bdf:	55                   	push   %rbp
    5be0:	48 89 e5             	mov    %rsp,%rbp
    5be3:	48 83 ec 20          	sub    $0x20,%rsp
    5be7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5beb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5bf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5bf7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5bfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bff:	48 89 ce             	mov    %rcx,%rsi
    5c02:	48 89 c7             	mov    %rax,%rdi
    5c05:	e8 12 01 00 00       	call   5d1c <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    5c0a:	90                   	nop
    5c0b:	c9                   	leave
    5c0c:	c3                   	ret

0000000000005c0d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5c0d:	55                   	push   %rbp
    5c0e:	48 89 e5             	mov    %rsp,%rbp
    5c11:	48 83 ec 20          	sub    $0x20,%rsp
    5c15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c19:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c1d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5c21:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5c25:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c2d:	48 89 ce             	mov    %rcx,%rsi
    5c30:	48 89 c7             	mov    %rax,%rdi
    5c33:	e8 5c 01 00 00       	call   5d94 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5c38:	90                   	nop
    5c39:	c9                   	leave
    5c3a:	c3                   	ret

0000000000005c3b <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5c3b:	55                   	push   %rbp
    5c3c:	48 89 e5             	mov    %rsp,%rbp
    5c3f:	48 83 ec 20          	sub    $0x20,%rsp
    5c43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c47:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c4b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5c4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5c53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c5b:	48 89 ce             	mov    %rcx,%rsi
    5c5e:	48 89 c7             	mov    %rax,%rdi
    5c61:	e8 69 01 00 00       	call   5dcf <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    5c66:	90                   	nop
    5c67:	c9                   	leave
    5c68:	c3                   	ret

0000000000005c69 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5c69:	55                   	push   %rbp
    5c6a:	48 89 e5             	mov    %rsp,%rbp
    5c6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c71:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c75:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    5c79:	eb 58                	jmp    5cd3 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    5c7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5c83:	b9 04 01 00 00       	mov    $0x104,%ecx
    5c88:	48 8b 32             	mov    (%rdx),%rsi
    5c8b:	48 89 30             	mov    %rsi,(%rax)
    5c8e:	89 ce                	mov    %ecx,%esi
    5c90:	48 01 c6             	add    %rax,%rsi
    5c93:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    5c97:	89 ce                	mov    %ecx,%esi
    5c99:	48 01 d6             	add    %rdx,%rsi
    5c9c:	48 83 c6 08          	add    $0x8,%rsi
    5ca0:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    5ca4:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    5ca8:	48 8d 78 08          	lea    0x8(%rax),%rdi
    5cac:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5cb0:	48 29 f8             	sub    %rdi,%rax
    5cb3:	48 29 c2             	sub    %rax,%rdx
    5cb6:	01 c1                	add    %eax,%ecx
    5cb8:	83 e1 f8             	and    $0xfffffff8,%ecx
    5cbb:	89 c8                	mov    %ecx,%eax
    5cbd:	c1 e8 03             	shr    $0x3,%eax
    5cc0:	89 c0                	mov    %eax,%eax
    5cc2:	48 89 d6             	mov    %rdx,%rsi
    5cc5:	48 89 c1             	mov    %rax,%rcx
    5cc8:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    5ccb:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    5cd2:	00 
    5cd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cd7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5cdb:	75 9e                	jne    5c7b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    5cdd:	90                   	nop
    5cde:	90                   	nop
    5cdf:	5d                   	pop    %rbp
    5ce0:	c3                   	ret

0000000000005ce1 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5ce1:	55                   	push   %rbp
    5ce2:	48 89 e5             	mov    %rsp,%rbp
    5ce5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5ce9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5ced:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    5cf1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5cf5:	48 8b 00             	mov    (%rax),%rax
    5cf8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5cfc:	eb 10                	jmp    5d0e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5cfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5d06:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5d09:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5d0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d12:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5d16:	75 e6                	jne    5cfe <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5d18:	90                   	nop
    5d19:	90                   	nop
    5d1a:	5d                   	pop    %rbp
    5d1b:	c3                   	ret

0000000000005d1c <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5d1c:	55                   	push   %rbp
    5d1d:	48 89 e5             	mov    %rsp,%rbp
    5d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d28:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    5d2c:	eb 58                	jmp    5d86 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    5d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d32:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d36:	b9 08 02 00 00       	mov    $0x208,%ecx
    5d3b:	48 8b 32             	mov    (%rdx),%rsi
    5d3e:	48 89 30             	mov    %rsi,(%rax)
    5d41:	89 ce                	mov    %ecx,%esi
    5d43:	48 01 c6             	add    %rax,%rsi
    5d46:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    5d4a:	89 ce                	mov    %ecx,%esi
    5d4c:	48 01 d6             	add    %rdx,%rsi
    5d4f:	48 83 c6 08          	add    $0x8,%rsi
    5d53:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    5d57:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    5d5b:	48 8d 78 08          	lea    0x8(%rax),%rdi
    5d5f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5d63:	48 29 f8             	sub    %rdi,%rax
    5d66:	48 29 c2             	sub    %rax,%rdx
    5d69:	01 c1                	add    %eax,%ecx
    5d6b:	83 e1 f8             	and    $0xfffffff8,%ecx
    5d6e:	89 c8                	mov    %ecx,%eax
    5d70:	c1 e8 03             	shr    $0x3,%eax
    5d73:	89 c0                	mov    %eax,%eax
    5d75:	48 89 d6             	mov    %rdx,%rsi
    5d78:	48 89 c1             	mov    %rax,%rcx
    5d7b:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    5d7e:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    5d85:	00 
    5d86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d8a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5d8e:	75 9e                	jne    5d2e <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    5d90:	90                   	nop
    5d91:	90                   	nop
    5d92:	5d                   	pop    %rbp
    5d93:	c3                   	ret

0000000000005d94 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5d94:	55                   	push   %rbp
    5d95:	48 89 e5             	mov    %rsp,%rbp
    5d98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5d9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5da0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    5da4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5da8:	48 8b 00             	mov    (%rax),%rax
    5dab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5daf:	eb 10                	jmp    5dc1 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5db1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5db5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5db9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5dbc:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5dc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dc5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5dc9:	75 e6                	jne    5db1 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5dcb:	90                   	nop
    5dcc:	90                   	nop
    5dcd:	5d                   	pop    %rbp
    5dce:	c3                   	ret

0000000000005dcf <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5dcf:	55                   	push   %rbp
    5dd0:	48 89 e5             	mov    %rsp,%rbp
    5dd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ddb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    5ddf:	eb 23                	jmp    5e04 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    5de1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    5de5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    5de9:	48 8b 06             	mov    (%rsi),%rax
    5dec:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    5df0:	48 89 01             	mov    %rax,(%rcx)
    5df3:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    5df7:	48 8b 46 10          	mov    0x10(%rsi),%rax
    5dfb:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    5dff:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    5e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e08:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5e0c:	75 d3                	jne    5de1 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    5e0e:	90                   	nop
    5e0f:	90                   	nop
    5e10:	5d                   	pop    %rbp
    5e11:	c3                   	ret

0000000000005e12 <_ZN3vkh19makeApplicationInfoEPKc>:
#include "make_info.hpp"

namespace vkh {
VkApplicationInfo makeApplicationInfo(const char *pApplicationName) {
    5e12:	55                   	push   %rbp
    5e13:	48 89 e5             	mov    %rsp,%rbp
    5e16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    5e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e22:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5e26:	0f 11 00             	movups %xmm0,(%rax)
    5e29:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5e2d:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    5e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e35:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    5e3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e3f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e43:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    5e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e4b:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    5e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e56:	48 8d 15 63 40 00 00 	lea    0x4063(%rip),%rdx        # 9ec0 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    5e5d:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    5e61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e65:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    5e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e70:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    5e77:	90                   	nop
}
    5e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e7c:	5d                   	pop    %rbp
    5e7d:	c3                   	ret

0000000000005e7e <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>:

VkInstanceCreateInfo makeInstanceCreateInfo(
    const VkApplicationInfo *appInfo, uint32_t enabledExtensionCount,
    const char *const *ppEnabledExtensionNames, uint32_t enabledLayerCount,
    const char *const *ppEnabledLayerNames, const void *pNext) {
    5e7e:	55                   	push   %rbp
    5e7f:	48 89 e5             	mov    %rsp,%rbp
    5e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e8a:	89 55 ec             	mov    %edx,-0x14(%rbp)
    5e8d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5e91:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
    5e95:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkInstanceCreateInfo createInfo{};
    5e99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e9d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5ea1:	0f 11 00             	movups %xmm0,(%rax)
    5ea4:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5ea8:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    5eac:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    5eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb4:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    5eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ebe:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    5ec2:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    5ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ece:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    5ed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed6:	8b 55 e8             	mov    -0x18(%rbp),%edx
    5ed9:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    5edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5ee4:	48 89 50 28          	mov    %rdx,0x28(%rax)
  createInfo.enabledExtensionCount = enabledExtensionCount;
    5ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eec:	8b 55 ec             	mov    -0x14(%rbp),%edx
    5eef:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    5ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5efa:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    5efe:	90                   	nop
}
    5eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f03:	5d                   	pop    %rbp
    5f04:	c3                   	ret

0000000000005f05 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfoPK24VkPhysicalDeviceFeaturesjPKPKcPKv>:
makeDeviceCreateInfo(uint32_t queueCreateInfoCount,
                     const VkDeviceQueueCreateInfo *pQueueCreateInfos,
                     const VkPhysicalDeviceFeatures *pEnabledFeatures,
                     uint32_t enabledLayerCount,
                     const char *const *ppEnabledLayerNames,
                     const void *pNext) {
    5f05:	55                   	push   %rbp
    5f06:	48 89 e5             	mov    %rsp,%rbp
    5f09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f0d:	89 75 f4             	mov    %esi,-0xc(%rbp)
    5f10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5f14:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5f18:	44 89 45 f0          	mov    %r8d,-0x10(%rbp)
    5f1c:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkDeviceCreateInfo deviceCreateInfo{};
    5f20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f24:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5f28:	0f 11 00             	movups %xmm0,(%rax)
    5f2b:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5f2f:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    5f33:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    5f37:	66 0f d6 40 40       	movq   %xmm0,0x40(%rax)
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    5f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f40:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  deviceCreateInfo.pNext = pNext;
    5f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f4a:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    5f4e:	48 89 50 08          	mov    %rdx,0x8(%rax)
  deviceCreateInfo.queueCreateInfoCount = queueCreateInfoCount;
    5f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f56:	8b 55 f4             	mov    -0xc(%rbp),%edx
    5f59:	89 50 14             	mov    %edx,0x14(%rax)
  deviceCreateInfo.pQueueCreateInfos = pQueueCreateInfos;
    5f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f60:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f64:	48 89 50 18          	mov    %rdx,0x18(%rax)
  deviceCreateInfo.pEnabledFeatures = pEnabledFeatures;
    5f68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f6c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5f70:	48 89 50 40          	mov    %rdx,0x40(%rax)
  deviceCreateInfo.enabledLayerCount = enabledLayerCount;
    5f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f78:	8b 55 f0             	mov    -0x10(%rbp),%edx
    5f7b:	89 50 20             	mov    %edx,0x20(%rax)
  deviceCreateInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    5f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f82:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5f86:	48 89 50 28          	mov    %rdx,0x28(%rax)
  return deviceCreateInfo;
    5f8a:	90                   	nop
}
    5f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f8f:	5d                   	pop    %rbp
    5f90:	c3                   	ret

0000000000005f91 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>:

VkDeviceQueueCreateInfo makeDeviceQueueCreateInfo(uint32_t queueFamilyIndex,
                                                  uint32_t queueCount,
                                                  const float *pQueuePriorities,
                                                  const void *pNext) {
    5f91:	55                   	push   %rbp
    5f92:	48 89 e5             	mov    %rsp,%rbp
    5f95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f99:	89 75 f4             	mov    %esi,-0xc(%rbp)
    5f9c:	89 55 f0             	mov    %edx,-0x10(%rbp)
    5f9f:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    5fa3:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  VkDeviceQueueCreateInfo queueCreateInfo{};
    5fa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fab:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5faf:	0f 11 00             	movups %xmm0,(%rax)
    5fb2:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5fb6:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
  queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    5fbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fbf:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  queueCreateInfo.pNext = pNext;
    5fc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fc9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5fcd:	48 89 50 08          	mov    %rdx,0x8(%rax)
  queueCreateInfo.queueFamilyIndex = queueFamilyIndex;
    5fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fd5:	8b 55 f4             	mov    -0xc(%rbp),%edx
    5fd8:	89 50 14             	mov    %edx,0x14(%rax)
  queueCreateInfo.queueCount = queueCount;
    5fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fdf:	8b 55 f0             	mov    -0x10(%rbp),%edx
    5fe2:	89 50 18             	mov    %edx,0x18(%rax)
  queueCreateInfo.pQueuePriorities = pQueuePriorities;
    5fe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5fed:	48 89 50 20          	mov    %rdx,0x20(%rax)
  return queueCreateInfo;
    5ff1:	90                   	nop
}
    5ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ff6:	5d                   	pop    %rbp
    5ff7:	c3                   	ret

0000000000005ff8 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    5ff8:	55                   	push   %rbp
    5ff9:	48 89 e5             	mov    %rsp,%rbp
    5ffc:	53                   	push   %rbx
    5ffd:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6001:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    6005:	be 00 00 00 00       	mov    $0x0,%esi
    600a:	48 89 c7             	mov    %rax,%rdi
    600d:	e8 ce c1 ff ff       	call   21e0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6012:	8b 45 c8             	mov    -0x38(%rbp),%eax
    6015:	89 c3                	mov    %eax,%ebx
    6017:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    601b:	48 89 c7             	mov    %rax,%rdi
    601e:	e8 cd d1 ff ff       	call   31f0 <_ZNSaI17VkLayerPropertiesEC1Ev>
    6023:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    6027:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    602b:	48 89 de             	mov    %rbx,%rsi
    602e:	48 89 c7             	mov    %rax,%rdi
    6031:	e8 f2 d1 ff ff       	call   3228 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6036:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    603a:	48 89 c7             	mov    %rax,%rdi
    603d:	e8 ca d1 ff ff       	call   320c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6042:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6046:	48 89 c7             	mov    %rax,%rdi
    6049:	e8 94 d2 ff ff       	call   32e2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    604e:	48 89 c2             	mov    %rax,%rdx
    6051:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    6055:	48 89 d6             	mov    %rdx,%rsi
    6058:	48 89 c7             	mov    %rax,%rdi
    605b:	e8 80 c1 ff ff       	call   21e0 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    6060:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6064:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6068:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    606c:	48 89 c7             	mov    %rax,%rdi
    606f:	e8 06 05 00 00       	call   657a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    6074:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6078:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    607c:	48 89 c7             	mov    %rax,%rdi
    607f:	e8 1c 05 00 00       	call   65a0 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    6084:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6088:	eb 5b                	jmp    60e5 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    608a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    608e:	48 89 c7             	mov    %rax,%rdi
    6091:	e8 92 05 00 00       	call   6628 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    6096:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    609a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    609e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    60a2:	48 89 d6             	mov    %rdx,%rsi
    60a5:	48 89 c7             	mov    %rax,%rdi
    60a8:	e8 33 04 00 00       	call   64e0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    60ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    60b1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    60b5:	48 8b 3d 04 9c 00 00 	mov    0x9c04(%rip),%rdi        # fcc0 <_ZN3vkh19validationLayerNameE>
    60bc:	48 8b 35 05 9c 00 00 	mov    0x9c05(%rip),%rsi        # fcc8 <_ZN3vkh19validationLayerNameE+0x8>
    60c3:	48 89 d1             	mov    %rdx,%rcx
    60c6:	48 89 c2             	mov    %rax,%rdx
    60c9:	e8 7d 05 00 00       	call   664b <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    60ce:	84 c0                	test   %al,%al
    60d0:	74 07                	je     60d9 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    60d2:	bb 01 00 00 00       	mov    $0x1,%ebx
    60d7:	eb 28                	jmp    6101 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    60d9:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    60dd:	48 89 c7             	mov    %rax,%rdi
    60e0:	e8 1f 05 00 00       	call   6604 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    60e5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    60e9:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    60ed:	48 89 d6             	mov    %rdx,%rsi
    60f0:	48 89 c7             	mov    %rax,%rdi
    60f3:	e8 d1 04 00 00       	call   65c9 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    60f8:	84 c0                	test   %al,%al
    60fa:	75 8e                	jne    608a <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    60fc:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    6101:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6105:	48 89 c7             	mov    %rax,%rdi
    6108:	e8 91 d1 ff ff       	call   329e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    610d:	89 d8                	mov    %ebx,%eax
    610f:	eb 34                	jmp    6145 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6111:	48 89 c3             	mov    %rax,%rbx
    6114:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6118:	48 89 c7             	mov    %rax,%rdi
    611b:	e8 ec d0 ff ff       	call   320c <_ZNSaI17VkLayerPropertiesED1Ev>
    6120:	48 89 d8             	mov    %rbx,%rax
    6123:	48 89 c7             	mov    %rax,%rdi
    6126:	e8 65 c1 ff ff       	call   2290 <_Unwind_Resume@plt>
}
    612b:	48 89 c3             	mov    %rax,%rbx
    612e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6132:	48 89 c7             	mov    %rax,%rdi
    6135:	e8 64 d1 ff ff       	call   329e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    613a:	48 89 d8             	mov    %rbx,%rax
    613d:	48 89 c7             	mov    %rax,%rdi
    6140:	e8 4b c1 ff ff       	call   2290 <_Unwind_Resume@plt>
    6145:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6149:	c9                   	leave
    614a:	c3                   	ret

000000000000614b <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    614b:	55                   	push   %rbp
    614c:	48 89 e5             	mov    %rsp,%rbp
    614f:	48 83 ec 20          	sub    $0x20,%rsp
    6153:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6156:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6159:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    615d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    6161:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6164:	83 f8 01             	cmp    $0x1,%eax
    6167:	7e 39                	jle    61a2 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x57>
    std::cerr << pCallbackData->pMessage << '\n' << std::endl;
    6169:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    616d:	48 8b 40 28          	mov    0x28(%rax),%rax
    6171:	48 89 c6             	mov    %rax,%rsi
    6174:	48 8d 05 25 a1 00 00 	lea    0xa125(%rip),%rax        # 102a0 <_ZSt4cerr@GLIBCXX_3.4>
    617b:	48 89 c7             	mov    %rax,%rdi
    617e:	e8 fd bf ff ff       	call   2180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    6183:	be 0a 00 00 00       	mov    $0xa,%esi
    6188:	48 89 c7             	mov    %rax,%rdi
    618b:	e8 70 c0 ff ff       	call   2200 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    6190:	48 8b 15 01 9e 00 00 	mov    0x9e01(%rip),%rdx        # ff98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    6197:	48 89 d6             	mov    %rdx,%rsi
    619a:	48 89 c7             	mov    %rax,%rdi
    619d:	e8 2e c0 ff ff       	call   21d0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    61a2:	b8 00 00 00 00       	mov    $0x0,%eax
}
    61a7:	c9                   	leave
    61a8:	c3                   	ret

00000000000061a9 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    61a9:	55                   	push   %rbp
    61aa:	48 89 e5             	mov    %rsp,%rbp
    61ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    61b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    61b9:	0f 11 00             	movups %xmm0,(%rax)
    61bc:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    61c0:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    61c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61c8:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    61ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61d2:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    61d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61dd:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    61e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61e8:	48 8d 15 5c ff ff ff 	lea    -0xa4(%rip),%rdx        # 614b <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    61ef:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    61f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61f7:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    61fe:	00 
}
    61ff:	90                   	nop
    6200:	5d                   	pop    %rbp
    6201:	c3                   	ret

0000000000006202 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    6202:	55                   	push   %rbp
    6203:	48 89 e5             	mov    %rsp,%rbp
    6206:	48 83 ec 30          	sub    $0x30,%rsp
    620a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    620e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6212:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6216:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    621a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    621e:	48 8d 15 a3 42 00 00 	lea    0x42a3(%rip),%rdx        # a4c8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    6225:	48 89 d6             	mov    %rdx,%rsi
    6228:	48 89 c7             	mov    %rax,%rdi
    622b:	e8 30 bf ff ff       	call   2160 <vkGetInstanceProcAddr@plt>
    6230:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    6234:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6239:	75 07                	jne    6242 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    623b:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    6240:	eb 1b                	jmp    625d <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    6242:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    6246:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    624a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    624e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    6252:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6256:	48 89 c7             	mov    %rax,%rdi
    6259:	41 ff d0             	call   *%r8
    625c:	90                   	nop
}
    625d:	c9                   	leave
    625e:	c3                   	ret

000000000000625f <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    625f:	55                   	push   %rbp
    6260:	48 89 e5             	mov    %rsp,%rbp
    6263:	41 54                	push   %r12
    6265:	53                   	push   %rbx
    6266:	48 83 ec 50          	sub    $0x50,%rsp
    626a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    626e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6272:	48 89 c7             	mov    %rax,%rdi
    6275:	e8 2f ff ff ff       	call   61a9 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    627a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    6281:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    6282:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    6286:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    628a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    628e:	48 89 d1             	mov    %rdx,%rcx
    6291:	ba 00 00 00 00       	mov    $0x0,%edx
    6296:	48 89 c7             	mov    %rax,%rdi
    6299:	e8 64 ff ff ff       	call   6202 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    629e:	85 c0                	test   %eax,%eax
    62a0:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    62a3:	84 c0                	test   %al,%al
    62a5:	74 3b                	je     62e2 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    62a7:	bf 10 00 00 00       	mov    $0x10,%edi
    62ac:	e8 ef bd ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    62b1:	48 89 c3             	mov    %rax,%rbx
    62b4:	48 8d 05 2d 42 00 00 	lea    0x422d(%rip),%rax        # a4e8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    62bb:	48 89 c6             	mov    %rax,%rsi
    62be:	48 89 df             	mov    %rbx,%rdi
    62c1:	e8 8a bd ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    62c6:	48 8b 05 db 9c 00 00 	mov    0x9cdb(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    62cd:	48 89 c2             	mov    %rax,%rdx
    62d0:	48 8d 05 69 9a 00 00 	lea    0x9a69(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    62d7:	48 89 c6             	mov    %rax,%rsi
    62da:	48 89 df             	mov    %rbx,%rdi
    62dd:	e8 9e bf ff ff       	call   2280 <__cxa_throw@plt>
  }
  return debugMessenger;
    62e2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    62e6:	eb 16                	jmp    62fe <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    62e8:	49 89 c4             	mov    %rax,%r12
    62eb:	48 89 df             	mov    %rbx,%rdi
    62ee:	e8 dd bd ff ff       	call   20d0 <__cxa_free_exception@plt>
    62f3:	4c 89 e0             	mov    %r12,%rax
    62f6:	48 89 c7             	mov    %rax,%rdi
    62f9:	e8 92 bf ff ff       	call   2290 <_Unwind_Resume@plt>
}
    62fe:	48 83 c4 50          	add    $0x50,%rsp
    6302:	5b                   	pop    %rbx
    6303:	41 5c                	pop    %r12
    6305:	5d                   	pop    %rbp
    6306:	c3                   	ret

0000000000006307 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    6307:	55                   	push   %rbp
    6308:	48 89 e5             	mov    %rsp,%rbp
    630b:	48 83 ec 30          	sub    $0x30,%rsp
    630f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6313:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6317:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    631b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    631f:	48 8d 15 e2 41 00 00 	lea    0x41e2(%rip),%rdx        # a508 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    6326:	48 89 d6             	mov    %rdx,%rsi
    6329:	48 89 c7             	mov    %rax,%rdi
    632c:	e8 2f be ff ff       	call   2160 <vkGetInstanceProcAddr@plt>
    6331:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    6335:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    633a:	74 19                	je     6355 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    633c:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    6340:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6344:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6348:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    634c:	48 89 ce             	mov    %rcx,%rsi
    634f:	48 89 c7             	mov    %rax,%rdi
    6352:	41 ff d0             	call   *%r8
  }
}
    6355:	90                   	nop
    6356:	c9                   	leave
    6357:	c3                   	ret

0000000000006358 <_Z41__static_initialization_and_destruction_0ii>:

    6358:	55                   	push   %rbp
    6359:	48 89 e5             	mov    %rsp,%rbp
    635c:	48 83 ec 10          	sub    $0x10,%rsp
    6360:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6363:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6366:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    636a:	75 3b                	jne    63a7 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    636c:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    6373:	75 32                	jne    63a7 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6375:	48 8d 05 36 a0 00 00 	lea    0xa036(%rip),%rax        # 103b2 <_ZStL8__ioinit>
    637c:	48 89 c7             	mov    %rax,%rdi
    637f:	e8 bc be ff ff       	call   2240 <_ZNSt8ios_base4InitC1Ev@plt>
    6384:	48 8d 05 c5 9d 00 00 	lea    0x9dc5(%rip),%rax        # 10150 <__dso_handle>
    638b:	48 89 c2             	mov    %rax,%rdx
    638e:	48 8d 05 1d a0 00 00 	lea    0xa01d(%rip),%rax        # 103b2 <_ZStL8__ioinit>
    6395:	48 89 c6             	mov    %rax,%rsi
    6398:	48 8b 05 29 9c 00 00 	mov    0x9c29(%rip),%rax        # ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    639f:	48 89 c7             	mov    %rax,%rdi
    63a2:	e8 99 bd ff ff       	call   2140 <__cxa_atexit@plt>
    63a7:	90                   	nop
    63a8:	c9                   	leave
    63a9:	c3                   	ret

00000000000063aa <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    63aa:	55                   	push   %rbp
    63ab:	48 89 e5             	mov    %rsp,%rbp
    63ae:	be ff ff 00 00       	mov    $0xffff,%esi
    63b3:	bf 01 00 00 00       	mov    $0x1,%edi
    63b8:	e8 9b ff ff ff       	call   6358 <_Z41__static_initialization_and_destruction_0ii>
    63bd:	5d                   	pop    %rbp
    63be:	c3                   	ret

00000000000063bf <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    63bf:	55                   	push   %rbp
    63c0:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    63c3:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    63c8:	5d                   	pop    %rbp
    63c9:	c3                   	ret

00000000000063ca <_ZNSt11char_traitsIcE2ltERKcS2_>:
      static _GLIBCXX_CONSTEXPR bool
      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { return __c1 == __c2; }

      static _GLIBCXX_CONSTEXPR bool
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    63ca:	55                   	push   %rbp
    63cb:	48 89 e5             	mov    %rsp,%rbp
    63ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	// LWG 467.
	return (static_cast<unsigned char>(__c1)
    63d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63da:	0f b6 00             	movzbl (%rax),%eax
    63dd:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    63df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63e3:	0f b6 00             	movzbl (%rax),%eax
    63e6:	38 c2                	cmp    %al,%dl
    63e8:	0f 92 c0             	setb   %al
      }
    63eb:	5d                   	pop    %rbp
    63ec:	c3                   	ret

00000000000063ed <_ZNSt11char_traitsIcE7compareEPKcS2_m>:

      static _GLIBCXX17_CONSTEXPR int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    63ed:	55                   	push   %rbp
    63ee:	48 89 e5             	mov    %rsp,%rbp
    63f1:	48 83 ec 30          	sub    $0x30,%rsp
    63f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    63f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    63fd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      {
	if (__n == 0)
    6401:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    6406:	75 0a                	jne    6412 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    6408:	b8 00 00 00 00       	mov    $0x0,%eax
    640d:	e9 99 00 00 00       	jmp    64ab <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    6412:	e8 a8 ff ff ff       	call   63bf <_ZSt23__is_constant_evaluatedv>
    6417:	84 c0                	test   %al,%al
    6419:	74 78                	je     6493 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	  {
	    for (size_t __i = 0; __i < __n; ++__i)
    641b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    6422:	00 
    6423:	eb 5d                	jmp    6482 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    6425:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    642d:	48 01 c2             	add    %rax,%rdx
    6430:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6438:	48 01 c8             	add    %rcx,%rax
    643b:	48 89 d6             	mov    %rdx,%rsi
    643e:	48 89 c7             	mov    %rax,%rdi
    6441:	e8 84 ff ff ff       	call   63ca <_ZNSt11char_traitsIcE2ltERKcS2_>
    6446:	84 c0                	test   %al,%al
    6448:	74 07                	je     6451 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    644a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    644f:	eb 5a                	jmp    64ab <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    6451:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6459:	48 01 c2             	add    %rax,%rdx
    645c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6464:	48 01 c8             	add    %rcx,%rax
    6467:	48 89 d6             	mov    %rdx,%rsi
    646a:	48 89 c7             	mov    %rax,%rdi
    646d:	e8 58 ff ff ff       	call   63ca <_ZNSt11char_traitsIcE2ltERKcS2_>
    6472:	84 c0                	test   %al,%al
    6474:	74 07                	je     647d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    6476:	b8 01 00 00 00       	mov    $0x1,%eax
    647b:	eb 2e                	jmp    64ab <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    647d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    6482:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6486:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    648a:	72 99                	jb     6425 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    648c:	b8 00 00 00 00       	mov    $0x0,%eax
    6491:	eb 18                	jmp    64ab <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	  }
#endif
	return __builtin_memcmp(__s1, __s2, __n);
    6493:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6497:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    649b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    649f:	48 89 ce             	mov    %rcx,%rsi
    64a2:	48 89 c7             	mov    %rax,%rdi
    64a5:	e8 e6 bb ff ff       	call   2090 <memcmp@plt>
    64aa:	90                   	nop
      }
    64ab:	c9                   	leave
    64ac:	c3                   	ret

00000000000064ad <_ZNSt11char_traitsIcE6lengthEPKc>:

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    64ad:	55                   	push   %rbp
    64ae:	48 89 e5             	mov    %rsp,%rbp
    64b1:	48 83 ec 10          	sub    $0x10,%rsp
    64b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    64b9:	e8 01 ff ff ff       	call   63bf <_ZSt23__is_constant_evaluatedv>
    64be:	84 c0                	test   %al,%al
    64c0:	74 0e                	je     64d0 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    64c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64c6:	48 89 c7             	mov    %rax,%rdi
    64c9:	e8 44 00 00 00       	call   6512 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    64ce:	eb 0d                	jmp    64dd <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    64d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d4:	48 89 c7             	mov    %rax,%rdi
    64d7:	e8 a4 bb ff ff       	call   2080 <strlen@plt>
    64dc:	90                   	nop
      }
    64dd:	c9                   	leave
    64de:	c3                   	ret
    64df:	90                   	nop

00000000000064e0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    64e0:	55                   	push   %rbp
    64e1:	48 89 e5             	mov    %rsp,%rbp
    64e4:	48 83 ec 10          	sub    $0x10,%rsp
    64e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    64f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    64f4:	48 89 c7             	mov    %rax,%rdi
    64f7:	e8 b1 ff ff ff       	call   64ad <_ZNSt11char_traitsIcE6lengthEPKc>
    64fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6500:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    6503:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6507:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    650b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    650f:	90                   	nop
    6510:	c9                   	leave
    6511:	c3                   	ret

0000000000006512 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    6512:	55                   	push   %rbp
    6513:	48 89 e5             	mov    %rsp,%rbp
    6516:	48 83 ec 20          	sub    $0x20,%rsp
    651a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    651e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    6525:	00 
      while (!eq(__p[__i], char_type()))
    6526:	eb 05                	jmp    652d <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    6528:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    652d:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    6531:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6539:	48 01 c2             	add    %rax,%rdx
    653c:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    6540:	48 89 c6             	mov    %rax,%rsi
    6543:	48 89 d7             	mov    %rdx,%rdi
    6546:	e8 0d 00 00 00       	call   6558 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    654b:	83 f0 01             	xor    $0x1,%eax
    654e:	84 c0                	test   %al,%al
    6550:	75 d6                	jne    6528 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    6552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    6556:	c9                   	leave
    6557:	c3                   	ret

0000000000006558 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    6558:	55                   	push   %rbp
    6559:	48 89 e5             	mov    %rsp,%rbp
    655c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6560:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    6564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6568:	0f b6 10             	movzbl (%rax),%edx
    656b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    656f:	0f b6 00             	movzbl (%rax),%eax
    6572:	38 c2                	cmp    %al,%dl
    6574:	0f 94 c0             	sete   %al
    6577:	5d                   	pop    %rbp
    6578:	c3                   	ret
    6579:	90                   	nop

000000000000657a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    657a:	55                   	push   %rbp
    657b:	48 89 e5             	mov    %rsp,%rbp
    657e:	48 83 ec 20          	sub    $0x20,%rsp
    6582:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6586:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    658a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    658e:	48 89 d6             	mov    %rdx,%rsi
    6591:	48 89 c7             	mov    %rax,%rdi
    6594:	e8 27 01 00 00       	call   66c0 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    6599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    659d:	c9                   	leave
    659e:	c3                   	ret
    659f:	90                   	nop

00000000000065a0 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    65a0:	55                   	push   %rbp
    65a1:	48 89 e5             	mov    %rsp,%rbp
    65a4:	48 83 ec 20          	sub    $0x20,%rsp
    65a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    65ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65b0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    65b4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    65b8:	48 89 d6             	mov    %rdx,%rsi
    65bb:	48 89 c7             	mov    %rax,%rdi
    65be:	e8 fd 00 00 00       	call   66c0 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    65c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65c7:	c9                   	leave
    65c8:	c3                   	ret

00000000000065c9 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    65c9:	55                   	push   %rbp
    65ca:	48 89 e5             	mov    %rsp,%rbp
    65cd:	53                   	push   %rbx
    65ce:	48 83 ec 18          	sub    $0x18,%rsp
    65d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    65da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65de:	48 89 c7             	mov    %rax,%rdi
    65e1:	e8 f8 00 00 00       	call   66de <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    65e6:	48 8b 18             	mov    (%rax),%rbx
    65e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65ed:	48 89 c7             	mov    %rax,%rdi
    65f0:	e8 e9 00 00 00       	call   66de <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    65f5:	48 8b 00             	mov    (%rax),%rax
    65f8:	48 39 c3             	cmp    %rax,%rbx
    65fb:	0f 95 c0             	setne  %al
    65fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6602:	c9                   	leave
    6603:	c3                   	ret

0000000000006604 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6604:	55                   	push   %rbp
    6605:	48 89 e5             	mov    %rsp,%rbp
    6608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    660c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6610:	48 8b 00             	mov    (%rax),%rax
    6613:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    661a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    661e:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6625:	5d                   	pop    %rbp
    6626:	c3                   	ret
    6627:	90                   	nop

0000000000006628 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6628:	55                   	push   %rbp
    6629:	48 89 e5             	mov    %rsp,%rbp
    662c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6634:	48 8b 00             	mov    (%rax),%rax
    6637:	5d                   	pop    %rbp
    6638:	c3                   	ret
    6639:	90                   	nop

000000000000663a <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    663a:	55                   	push   %rbp
    663b:	48 89 e5             	mov    %rsp,%rbp
    663e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    6642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6646:	48 8b 00             	mov    (%rax),%rax
    6649:	5d                   	pop    %rbp
    664a:	c3                   	ret

000000000000664b <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    664b:	55                   	push   %rbp
    664c:	48 89 e5             	mov    %rsp,%rbp
    664f:	53                   	push   %rbx
    6650:	48 83 ec 28          	sub    $0x28,%rsp
    6654:	48 89 f0             	mov    %rsi,%rax
    6657:	49 89 f8             	mov    %rdi,%r8
    665a:	4c 89 c6             	mov    %r8,%rsi
    665d:	4c 89 cf             	mov    %r9,%rdi
    6660:	48 89 c7             	mov    %rax,%rdi
    6663:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6667:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    666b:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    666f:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    6673:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6677:	48 89 c7             	mov    %rax,%rdi
    667a:	e8 bb ff ff ff       	call   663a <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    667f:	48 89 c3             	mov    %rax,%rbx
    6682:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6686:	48 89 c7             	mov    %rax,%rdi
    6689:	e8 ac ff ff ff       	call   663a <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    668e:	48 39 c3             	cmp    %rax,%rbx
    6691:	75 22                	jne    66b5 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    6693:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6697:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    669b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    669f:	48 89 ce             	mov    %rcx,%rsi
    66a2:	48 89 c7             	mov    %rax,%rdi
    66a5:	e8 42 00 00 00       	call   66ec <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    66aa:	85 c0                	test   %eax,%eax
    66ac:	75 07                	jne    66b5 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    66ae:	b8 01 00 00 00       	mov    $0x1,%eax
    66b3:	eb 05                	jmp    66ba <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    66b5:	b8 00 00 00 00       	mov    $0x0,%eax
    66ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    66be:	c9                   	leave
    66bf:	c3                   	ret

00000000000066c0 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    66c0:	55                   	push   %rbp
    66c1:	48 89 e5             	mov    %rsp,%rbp
    66c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    66cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66d0:	48 8b 10             	mov    (%rax),%rdx
    66d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66d7:	48 89 10             	mov    %rdx,(%rax)
    66da:	90                   	nop
    66db:	5d                   	pop    %rbp
    66dc:	c3                   	ret
    66dd:	90                   	nop

00000000000066de <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    66de:	55                   	push   %rbp
    66df:	48 89 e5             	mov    %rsp,%rbp
    66e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    66e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66ea:	5d                   	pop    %rbp
    66eb:	c3                   	ret

00000000000066ec <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    66ec:	55                   	push   %rbp
    66ed:	48 89 e5             	mov    %rsp,%rbp
    66f0:	48 83 ec 30          	sub    $0x30,%rsp
    66f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    66f8:	48 89 d1             	mov    %rdx,%rcx
    66fb:	48 89 f0             	mov    %rsi,%rax
    66fe:	48 89 fa             	mov    %rdi,%rdx
    6701:	48 89 ca             	mov    %rcx,%rdx
    6704:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6708:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    670c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6710:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    6714:	48 89 d6             	mov    %rdx,%rsi
    6717:	48 89 c7             	mov    %rax,%rdi
    671a:	e8 8e e1 ff ff       	call   48ad <_ZSt3minImERKT_S2_S2_>
    671f:	48 8b 00             	mov    (%rax),%rax
    6722:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    6726:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    672a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    672e:	48 8b 40 08          	mov    0x8(%rax),%rax
    6732:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6736:	48 89 ce             	mov    %rcx,%rsi
    6739:	48 89 c7             	mov    %rax,%rdi
    673c:	e8 ac fc ff ff       	call   63ed <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    6741:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    6744:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    6748:	75 19                	jne    6763 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    674a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    674e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6752:	48 8b 00             	mov    (%rax),%rax
    6755:	48 89 d6             	mov    %rdx,%rsi
    6758:	48 89 c7             	mov    %rax,%rdi
    675b:	e8 08 00 00 00       	call   6768 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    6760:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    6763:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    6766:	c9                   	leave
    6767:	c3                   	ret

0000000000006768 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    6768:	55                   	push   %rbp
    6769:	48 89 e5             	mov    %rsp,%rbp
    676c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6770:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    6774:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6778:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    677c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    6780:	b8 00 00 00 80       	mov    $0x80000000,%eax
    6785:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    6789:	7c 07                	jl     6792 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    678b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    6790:	eb 1b                	jmp    67ad <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    6792:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    6799:	ff ff ff 
    679c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    67a0:	7f 07                	jg     67a9 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    67a2:	b8 00 00 00 80       	mov    $0x80000000,%eax
    67a7:	eb 04                	jmp    67ad <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    67a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    67ad:	5d                   	pop    %rbp
    67ae:	c3                   	ret
    67af:	90                   	nop

00000000000067b0 <_ZN9VulkanApp12createWindowEv>:
#include "vkh.hpp"

void VulkanApp::createWindow() {
    67b0:	55                   	push   %rbp
    67b1:	48 89 e5             	mov    %rsp,%rbp
    67b4:	48 83 ec 10          	sub    $0x10,%rsp
    67b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    67bc:	e8 2f ba ff ff       	call   21f0 <glfwInit@plt>
  this->window = vkh::createWindow(800, 600);
    67c1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    67c7:	b9 00 00 00 00       	mov    $0x0,%ecx
    67cc:	48 8d 05 81 43 00 00 	lea    0x4381(%rip),%rax        # ab54 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    67d3:	48 89 c2             	mov    %rax,%rdx
    67d6:	be 58 02 00 00       	mov    $0x258,%esi
    67db:	bf 20 03 00 00       	mov    $0x320,%edi
    67e0:	e8 54 bd ff ff       	call   2539 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    67e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67e9:	48 89 02             	mov    %rax,(%rdx)
}
    67ec:	90                   	nop
    67ed:	c9                   	leave
    67ee:	c3                   	ret
    67ef:	90                   	nop

00000000000067f0 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    67f0:	55                   	push   %rbp
    67f1:	48 89 e5             	mov    %rsp,%rbp
    67f4:	41 55                	push   %r13
    67f6:	41 54                	push   %r12
    67f8:	53                   	push   %rbx
    67f9:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    6800:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  auto appInfo = vkh::makeApplicationInfo();
    6807:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    680b:	48 8d 15 42 43 00 00 	lea    0x4342(%rip),%rdx        # ab54 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    6812:	48 89 d6             	mov    %rdx,%rsi
    6815:	48 89 c7             	mov    %rax,%rdi
    6818:	e8 f5 f5 ff ff       	call   5e12 <_ZN3vkh19makeApplicationInfoEPKc>
  auto extensions = vkh::getRequiredInstanceExtensionNameList(true);
    681d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6821:	be 01 00 00 00       	mov    $0x1,%esi
    6826:	48 89 c7             	mov    %rax,%rdi
    6829:	e8 db c1 ff ff       	call   2a09 <_ZN3vkh36getRequiredInstanceExtensionNameListEb>
  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    682e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6832:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    6839:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    6840:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    6844:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    684b:	48 89 c7             	mov    %rax,%rdi
    684e:	e8 56 f9 ff ff       	call   61a9 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  auto createInfo = vkh::makeInstanceCreateInfo(
    6853:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    685a:	48 83 c0 10          	add    $0x10,%rax
    685e:	48 89 c7             	mov    %rax,%rdi
    6861:	e8 d4 08 00 00       	call   713a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    6866:	49 89 c4             	mov    %rax,%r12
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
      static_cast<uint32_t>(this->layers.size()), this->layers.data(),
    6869:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6870:	48 83 c0 10          	add    $0x10,%rax
    6874:	48 89 c7             	mov    %rax,%rdi
    6877:	e8 64 e8 ff ff       	call   50e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    687c:	41 89 c5             	mov    %eax,%r13d
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
    687f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6883:	48 89 c7             	mov    %rax,%rdi
    6886:	e8 8b 08 00 00       	call   7116 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    688b:	48 89 c3             	mov    %rax,%rbx
    688e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6892:	48 89 c7             	mov    %rax,%rdi
    6895:	e8 46 e8 ff ff       	call   50e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    689a:	89 c7                	mov    %eax,%edi
    689c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    68a3:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
    68a7:	48 83 ec 08          	sub    $0x8,%rsp
    68ab:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    68b2:	52                   	push   %rdx
    68b3:	4d 89 e1             	mov    %r12,%r9
    68b6:	45 89 e8             	mov    %r13d,%r8d
    68b9:	48 89 d9             	mov    %rbx,%rcx
    68bc:	89 fa                	mov    %edi,%edx
    68be:	48 89 c7             	mov    %rax,%rdi
    68c1:	e8 b8 f5 ff ff       	call   5e7e <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>
    68c6:	48 83 c4 10          	add    $0x10,%rsp
      (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo);
  this->instance = vkh::createInstance(&createInfo);
    68ca:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    68d1:	be 00 00 00 00       	mov    $0x0,%esi
    68d6:	48 89 c7             	mov    %rax,%rdi
    68d9:	e8 b1 bc ff ff       	call   258f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    68de:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    68e5:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    68e9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    68ed:	48 89 c7             	mov    %rax,%rdi
    68f0:	e8 17 c8 ff ff       	call   310c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    68f5:	eb 1a                	jmp    6911 <_ZN9VulkanApp14createInstanceEv+0x121>
    68f7:	48 89 c3             	mov    %rax,%rbx
    68fa:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    68fe:	48 89 c7             	mov    %rax,%rdi
    6901:	e8 06 c8 ff ff       	call   310c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    6906:	48 89 d8             	mov    %rbx,%rax
    6909:	48 89 c7             	mov    %rax,%rdi
    690c:	e8 7f b9 ff ff       	call   2290 <_Unwind_Resume@plt>
    6911:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    6915:	5b                   	pop    %rbx
    6916:	41 5c                	pop    %r12
    6918:	41 5d                	pop    %r13
    691a:	5d                   	pop    %rbp
    691b:	c3                   	ret

000000000000691c <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    691c:	55                   	push   %rbp
    691d:	48 89 e5             	mov    %rsp,%rbp
    6920:	48 83 ec 10          	sub    $0x10,%rsp
    6924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  this->debugMessenger = vkh::createDebugMessenger(this->instance);
    6928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    692c:	48 8b 40 08          	mov    0x8(%rax),%rax
    6930:	48 89 c7             	mov    %rax,%rdi
    6933:	e8 27 f9 ff ff       	call   625f <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    6938:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    693c:	48 89 42 28          	mov    %rax,0x28(%rdx)
}
    6940:	90                   	nop
    6941:	c9                   	leave
    6942:	c3                   	ret
    6943:	90                   	nop

0000000000006944 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    6944:	55                   	push   %rbp
    6945:	48 89 e5             	mov    %rsp,%rbp
    6948:	41 54                	push   %r12
    694a:	53                   	push   %rbx
    694b:	48 81 ec a0 04 00 00 	sub    $0x4a0,%rsp
    6952:	48 89 bd 88 fb ff ff 	mov    %rdi,-0x478(%rbp)

  /* Select a suitable physical device */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(this->instance);
    6959:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
    6960:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6964:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6968:	48 89 d6             	mov    %rdx,%rsi
    696b:	48 89 c7             	mov    %rax,%rdi
    696e:	e8 38 c2 ff ff       	call   2bab <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    6973:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    697a:	00 
  QueueFamilyIndices selectedIndices;
    697b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    697f:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
  for (const auto &physicalDevice : physicalDeviceList) {
    6983:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6987:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    698b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    698f:	48 89 c7             	mov    %rax,%rdi
    6992:	e8 c7 07 00 00       	call   715e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    6997:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    699e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    69a2:	48 89 c7             	mov    %rax,%rdi
    69a5:	e8 da 07 00 00       	call   7184 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    69aa:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    69b1:	e9 b6 01 00 00       	jmp    6b6c <_ZN9VulkanApp12createDeviceEv+0x228>
    69b6:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    69bd:	48 89 c7             	mov    %rax,%rdi
    69c0:	e8 43 08 00 00       	call   7208 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    69c5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    auto physDevPropList = vkh::getPhysicalDevicePropertyList(physicalDevice);
    69c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69cd:	48 8b 10             	mov    (%rax),%rdx
    69d0:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
    69d7:	48 89 d6             	mov    %rdx,%rsi
    69da:	48 89 c7             	mov    %rax,%rdi
    69dd:	e8 38 c3 ff ff       	call   2d1a <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
    if (physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) {
    69e2:	8b 85 a0 fb ff ff    	mov    -0x460(%rbp),%eax
    69e8:	83 f8 02             	cmp    $0x2,%eax
    69eb:	0f 85 6c 01 00 00    	jne    6b5d <_ZN9VulkanApp12createDeviceEv+0x219>
      /* Select queue families */
      QueueFamilyIndices indices;
    69f1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    69f5:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
      auto queueFamilies =
          vkh::getPhysicalDeviceQueuePropertyList(physicalDevice);
    69fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a00:	48 8b 10             	mov    (%rax),%rdx
    6a03:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    6a0a:	48 89 d6             	mov    %rdx,%rsi
    6a0d:	48 89 c7             	mov    %rax,%rdi
    6a10:	e8 73 c3 ff ff       	call   2d88 <_ZN3vkh34getPhysicalDeviceQueuePropertyListEP18VkPhysicalDevice_T>
      for (std::size_t i = 0; i < queueFamilies.size(); ++i) {
    6a15:	48 c7 85 c8 fe ff ff 	movq   $0x0,-0x138(%rbp)
    6a1c:	00 00 00 00 
    6a20:	e9 96 00 00 00       	jmp    6abb <_ZN9VulkanApp12createDeviceEv+0x177>
        if (queueFamilies[i].queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    6a25:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    6a2c:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    6a33:	48 89 d6             	mov    %rdx,%rsi
    6a36:	48 89 c7             	mov    %rax,%rdi
    6a39:	e8 0a 08 00 00       	call   7248 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEixEm>
    6a3e:	8b 00                	mov    (%rax),%eax
    6a40:	83 e0 01             	and    $0x1,%eax
    6a43:	85 c0                	test   %eax,%eax
    6a45:	0f 95 c0             	setne  %al
    6a48:	84 c0                	test   %al,%al
    6a4a:	74 19                	je     6a65 <_ZN9VulkanApp12createDeviceEv+0x121>
          indices.graphicsFamily = i;
    6a4c:	48 8d 95 c8 fe ff ff 	lea    -0x138(%rbp),%rdx
    6a53:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    6a5a:	48 89 d6             	mov    %rdx,%rsi
    6a5d:	48 89 c7             	mov    %rax,%rdi
    6a60:	e8 0d 08 00 00       	call   7272 <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>
          //   std::cout << "graphics: " << indices.graphicsFamily.value() <<
          //   '\n';
        }
        if (queueFamilies[i].queueFlags & VK_QUEUE_COMPUTE_BIT) {
    6a65:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    6a6c:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    6a73:	48 89 d6             	mov    %rdx,%rsi
    6a76:	48 89 c7             	mov    %rax,%rdi
    6a79:	e8 ca 07 00 00       	call   7248 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEixEm>
    6a7e:	8b 00                	mov    (%rax),%eax
    6a80:	83 e0 02             	and    $0x2,%eax
    6a83:	85 c0                	test   %eax,%eax
    6a85:	0f 95 c0             	setne  %al
    6a88:	84 c0                	test   %al,%al
    6a8a:	74 1d                	je     6aa9 <_ZN9VulkanApp12createDeviceEv+0x165>
          indices.computeFamily = i;
    6a8c:	48 8d 85 c8 fe ff ff 	lea    -0x138(%rbp),%rax
    6a93:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    6a9a:	48 83 c2 08          	add    $0x8,%rdx
    6a9e:	48 89 c6             	mov    %rax,%rsi
    6aa1:	48 89 d7             	mov    %rdx,%rdi
    6aa4:	e8 c9 07 00 00       	call   7272 <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>
      for (std::size_t i = 0; i < queueFamilies.size(); ++i) {
    6aa9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    6ab0:	48 83 c0 01          	add    $0x1,%rax
    6ab4:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    6abb:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    6ac2:	48 89 c7             	mov    %rax,%rdi
    6ac5:	e8 50 07 00 00       	call   721a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    6aca:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    6ad1:	48 39 c2             	cmp    %rax,%rdx
    6ad4:	0f 92 c0             	setb   %al
    6ad7:	84 c0                	test   %al,%al
    6ad9:	0f 85 46 ff ff ff    	jne    6a25 <_ZN9VulkanApp12createDeviceEv+0xe1>
          //   std::cout << "compute: " << indices.computeFamily.value() <<
          //   '\n';
        }
      }
      if (indices.isComplete()) {
    6adf:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    6ae6:	48 89 c7             	mov    %rax,%rdi
    6ae9:	e8 48 05 00 00       	call   7036 <_ZN18QueueFamilyIndices10isCompleteEv>
    6aee:	84 c0                	test   %al,%al
    6af0:	74 52                	je     6b44 <_ZN9VulkanApp12createDeviceEv+0x200>
        std::cout << physDevPropList.deviceName << '\n';
    6af2:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
    6af9:	48 83 c0 14          	add    $0x14,%rax
    6afd:	48 89 c6             	mov    %rax,%rsi
    6b00:	48 8d 05 79 96 00 00 	lea    0x9679(%rip),%rax        # 10180 <_ZSt4cout@GLIBCXX_3.4>
    6b07:	48 89 c7             	mov    %rax,%rdi
    6b0a:	e8 71 b6 ff ff       	call   2180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    6b0f:	be 0a 00 00 00       	mov    $0xa,%esi
    6b14:	48 89 c7             	mov    %rax,%rdi
    6b17:	e8 e4 b6 ff ff       	call   2200 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
        selectedPhysDev = physicalDevice;
    6b1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b20:	48 8b 00             	mov    (%rax),%rax
    6b23:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
        selectedIndices.graphicsFamily = indices.graphicsFamily;
    6b27:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    6b2e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
        selectedIndices.computeFamily = indices.computeFamily;
    6b32:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6b39:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
        break;
    6b3d:	bb 00 00 00 00       	mov    $0x0,%ebx
    6b42:	eb 05                	jmp    6b49 <_ZN9VulkanApp12createDeviceEv+0x205>
      }
    }
    6b44:	bb 01 00 00 00       	mov    $0x1,%ebx
    6b49:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    6b50:	48 89 c7             	mov    %rax,%rdi
    6b53:	e8 18 ca ff ff       	call   3570 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    6b58:	83 fb 01             	cmp    $0x1,%ebx
    6b5b:	75 30                	jne    6b8d <_ZN9VulkanApp12createDeviceEv+0x249>
  for (const auto &physicalDevice : physicalDeviceList) {
    6b5d:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    6b64:	48 89 c7             	mov    %rax,%rdi
    6b67:	e8 7c 06 00 00       	call   71e8 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    6b6c:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    6b73:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    6b7a:	48 89 d6             	mov    %rdx,%rsi
    6b7d:	48 89 c7             	mov    %rax,%rdi
    6b80:	e8 28 06 00 00       	call   71ad <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6b85:	84 c0                	test   %al,%al
    6b87:	0f 85 29 fe ff ff    	jne    69b6 <_ZN9VulkanApp12createDeviceEv+0x72>
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    6b8d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6b92:	75 3b                	jne    6bcf <_ZN9VulkanApp12createDeviceEv+0x28b>
    throw std::runtime_error("Failed to select a physical device.");
    6b94:	bf 10 00 00 00       	mov    $0x10,%edi
    6b99:	e8 02 b5 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    6b9e:	48 89 c3             	mov    %rax,%rbx
    6ba1:	48 8d 05 c0 3f 00 00 	lea    0x3fc0(%rip),%rax        # ab68 <_ZN6__pstl9execution2v1L5unseqE+0x29>
    6ba8:	48 89 c6             	mov    %rax,%rsi
    6bab:	48 89 df             	mov    %rbx,%rdi
    6bae:	e8 9d b4 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    6bb3:	48 8b 05 ee 93 00 00 	mov    0x93ee(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6bba:	48 89 c2             	mov    %rax,%rdx
    6bbd:	48 8d 05 7c 91 00 00 	lea    0x917c(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6bc4:	48 89 c6             	mov    %rax,%rsi
    6bc7:	48 89 df             	mov    %rbx,%rdi
    6bca:	e8 b1 b6 ff ff       	call   2280 <__cxa_throw@plt>
  }

  /* Setup the selected queue families' createInfos */
  VkDeviceQueueCreateInfo queueCreateInfos[2];
  const float queuePriorities[2] = {1.0f, 0.8f};
    6bcf:	f3 0f 10 05 05 40 00 	movss  0x4005(%rip),%xmm0        # abdc <_ZN6__pstl9execution2v1L5unseqE+0x9d>
    6bd6:	00 
    6bd7:	f3 0f 11 85 58 ff ff 	movss  %xmm0,-0xa8(%rbp)
    6bde:	ff 
    6bdf:	f3 0f 10 05 f9 3f 00 	movss  0x3ff9(%rip),%xmm0        # abe0 <_ZN6__pstl9execution2v1L5unseqE+0xa1>
    6be6:	00 
    6be7:	f3 0f 11 85 5c ff ff 	movss  %xmm0,-0xa4(%rbp)
    6bee:	ff 
  queueCreateInfos[0] = vkh::makeDeviceQueueCreateInfo(
      selectedIndices.graphicsFamily.value(), 1, &queuePriorities[0]);
    6bef:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6bf3:	48 89 c7             	mov    %rax,%rdi
    6bf6:	e8 e1 06 00 00       	call   72dc <_ZNRSt8optionalIjE5valueEv>
  queueCreateInfos[0] = vkh::makeDeviceQueueCreateInfo(
    6bfb:	8b 30                	mov    (%rax),%esi
    6bfd:	48 8d 85 50 fb ff ff 	lea    -0x4b0(%rbp),%rax
    6c04:	48 8d 95 58 ff ff ff 	lea    -0xa8(%rbp),%rdx
    6c0b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    6c11:	48 89 d1             	mov    %rdx,%rcx
    6c14:	ba 01 00 00 00       	mov    $0x1,%edx
    6c19:	48 89 c7             	mov    %rax,%rdi
    6c1c:	e8 70 f3 ff ff       	call   5f91 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>
    6c21:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
    6c28:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
    6c2f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    6c36:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    6c3d:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
    6c44:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
    6c4b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    6c52:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    6c59:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
    6c60:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  queueCreateInfos[1] = vkh::makeDeviceQueueCreateInfo(
      selectedIndices.computeFamily.value(), 1, &queuePriorities[1]);
    6c64:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6c68:	48 83 c0 08          	add    $0x8,%rax
    6c6c:	48 89 c7             	mov    %rax,%rdi
    6c6f:	e8 68 06 00 00       	call   72dc <_ZNRSt8optionalIjE5valueEv>
  queueCreateInfos[1] = vkh::makeDeviceQueueCreateInfo(
    6c74:	8b 30                	mov    (%rax),%esi
    6c76:	48 8d 85 50 fb ff ff 	lea    -0x4b0(%rbp),%rax
    6c7d:	48 8d 95 58 ff ff ff 	lea    -0xa8(%rbp),%rdx
    6c84:	48 83 c2 04          	add    $0x4,%rdx
    6c88:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    6c8e:	48 89 d1             	mov    %rdx,%rcx
    6c91:	ba 01 00 00 00       	mov    $0x1,%edx
    6c96:	48 89 c7             	mov    %rax,%rdi
    6c99:	e8 f3 f2 ff ff       	call   5f91 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>
    6c9e:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
    6ca5:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
    6cac:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6cb0:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
    6cb4:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
    6cbb:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
    6cc2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6cc6:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    6cca:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
    6cd1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)

  /* Setup the selected device's createInfo */

  /* Create the logical device */
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    6cd5:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
    6cdc:	48 83 c0 10          	add    $0x10,%rax
    6ce0:	48 89 c7             	mov    %rax,%rdi
    6ce3:	e8 52 04 00 00       	call   713a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    6ce8:	48 89 c3             	mov    %rax,%rbx
      2, queueCreateInfos, nullptr, static_cast<uint32_t>(this->layers.size()),
    6ceb:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
    6cf2:	48 83 c0 10          	add    $0x10,%rax
    6cf6:	48 89 c7             	mov    %rax,%rdi
    6cf9:	e8 e2 e3 ff ff       	call   50e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    6cfe:	89 c1                	mov    %eax,%ecx
    6d00:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    6d07:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    6d0e:	48 83 ec 08          	sub    $0x8,%rsp
    6d12:	6a 00                	push   $0x0
    6d14:	49 89 d9             	mov    %rbx,%r9
    6d17:	41 89 c8             	mov    %ecx,%r8d
    6d1a:	b9 00 00 00 00       	mov    $0x0,%ecx
    6d1f:	be 02 00 00 00       	mov    $0x2,%esi
    6d24:	48 89 c7             	mov    %rax,%rdi
    6d27:	e8 d9 f1 ff ff       	call   5f05 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfoPK24VkPhysicalDeviceFeaturesjPKPKcPKv>
    6d2c:	48 83 c4 10          	add    $0x10,%rsp
      this->layers.data());
  this->device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    6d30:	48 8d 8d 10 ff ff ff 	lea    -0xf0(%rbp),%rcx
    6d37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d3b:	ba 00 00 00 00       	mov    $0x0,%edx
    6d40:	48 89 ce             	mov    %rcx,%rsi
    6d43:	48 89 c7             	mov    %rax,%rdi
    6d46:	e8 d7 b8 ff ff       	call   2622 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    6d4b:	48 8b 95 88 fb ff ff 	mov    -0x478(%rbp),%rdx
    6d52:	48 89 42 30          	mov    %rax,0x30(%rdx)
}
    6d56:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6d5a:	48 89 c7             	mov    %rax,%rdi
    6d5d:	e8 aa c6 ff ff       	call   340c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    6d62:	eb 3e                	jmp    6da2 <_ZN9VulkanApp12createDeviceEv+0x45e>
    }
    6d64:	48 89 c3             	mov    %rax,%rbx
    6d67:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    6d6e:	48 89 c7             	mov    %rax,%rdi
    6d71:	e8 fa c7 ff ff       	call   3570 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    6d76:	eb 13                	jmp    6d8b <_ZN9VulkanApp12createDeviceEv+0x447>
    throw std::runtime_error("Failed to select a physical device.");
    6d78:	49 89 c4             	mov    %rax,%r12
    6d7b:	48 89 df             	mov    %rbx,%rdi
    6d7e:	e8 4d b3 ff ff       	call   20d0 <__cxa_free_exception@plt>
    6d83:	4c 89 e3             	mov    %r12,%rbx
    6d86:	eb 03                	jmp    6d8b <_ZN9VulkanApp12createDeviceEv+0x447>
}
    6d88:	48 89 c3             	mov    %rax,%rbx
    6d8b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6d8f:	48 89 c7             	mov    %rax,%rdi
    6d92:	e8 75 c6 ff ff       	call   340c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    6d97:	48 89 d8             	mov    %rbx,%rax
    6d9a:	48 89 c7             	mov    %rax,%rdi
    6d9d:	e8 ee b4 ff ff       	call   2290 <_Unwind_Resume@plt>
    6da2:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
    6da6:	5b                   	pop    %rbx
    6da7:	41 5c                	pop    %r12
    6da9:	5d                   	pop    %rbp
    6daa:	c3                   	ret
    6dab:	90                   	nop

0000000000006dac <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    6dac:	55                   	push   %rbp
    6dad:	48 89 e5             	mov    %rsp,%rbp
    6db0:	41 55                	push   %r13
    6db2:	41 54                	push   %r12
    6db4:	53                   	push   %rbx
    6db5:	48 83 ec 28          	sub    $0x28,%rsp
    6db9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6dbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6dc1:	48 8d 58 10          	lea    0x10(%rax),%rbx
    6dc5:	48 8d 05 c0 3d 00 00 	lea    0x3dc0(%rip),%rax        # ab8c <_ZN6__pstl9execution2v1L5unseqE+0x4d>
    6dcc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6dd0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6dd4:	49 89 c4             	mov    %rax,%r12
    6dd7:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    6ddd:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6de1:	48 89 c7             	mov    %rax,%rdi
    6de4:	e8 75 c2 ff ff       	call   305e <_ZNSaIPKcEC1Ev>
    6de9:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6ded:	4d 89 e0             	mov    %r12,%r8
    6df0:	4d 89 e9             	mov    %r13,%r9
    6df3:	4c 89 e6             	mov    %r12,%rsi
    6df6:	4c 89 ef             	mov    %r13,%rdi
    6df9:	48 89 fa             	mov    %rdi,%rdx
    6dfc:	48 89 c1             	mov    %rax,%rcx
    6dff:	4c 89 c6             	mov    %r8,%rsi
    6e02:	48 89 df             	mov    %rbx,%rdi
    6e05:	e8 84 02 00 00       	call   708e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    6e0a:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6e0e:	48 89 c7             	mov    %rax,%rdi
    6e11:	e8 64 c2 ff ff       	call   307a <_ZNSaIPKcED1Ev>
  createWindow();
    6e16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e1a:	48 89 c7             	mov    %rax,%rdi
    6e1d:	e8 8e f9 ff ff       	call   67b0 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    6e22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e26:	48 89 c7             	mov    %rax,%rdi
    6e29:	e8 c2 f9 ff ff       	call   67f0 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    6e2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e32:	48 89 c7             	mov    %rax,%rdi
    6e35:	e8 e2 fa ff ff       	call   691c <_ZN9VulkanApp20createDebugMessengerEv>
  createDevice();
    6e3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e3e:	48 89 c7             	mov    %rax,%rdi
    6e41:	e8 fe fa ff ff       	call   6944 <_ZN9VulkanApp12createDeviceEv>
}
    6e46:	eb 38                	jmp    6e80 <_ZN9VulkanAppC1Ev+0xd4>
VulkanApp::VulkanApp() {
    6e48:	48 89 c3             	mov    %rax,%rbx
    6e4b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6e4f:	48 89 c7             	mov    %rax,%rdi
    6e52:	e8 23 c2 ff ff       	call   307a <_ZNSaIPKcED1Ev>
    6e57:	48 89 d8             	mov    %rbx,%rax
    6e5a:	48 89 c7             	mov    %rax,%rdi
    6e5d:	e8 2e b4 ff ff       	call   2290 <_Unwind_Resume@plt>
    6e62:	48 89 c3             	mov    %rax,%rbx
    6e65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e69:	48 83 c0 10          	add    $0x10,%rax
}
    6e6d:	48 89 c7             	mov    %rax,%rdi
    6e70:	e8 97 c2 ff ff       	call   310c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    6e75:	48 89 d8             	mov    %rbx,%rax
    6e78:	48 89 c7             	mov    %rax,%rdi
    6e7b:	e8 10 b4 ff ff       	call   2290 <_Unwind_Resume@plt>
    6e80:	48 83 c4 28          	add    $0x28,%rsp
    6e84:	5b                   	pop    %rbx
    6e85:	41 5c                	pop    %r12
    6e87:	41 5d                	pop    %r13
    6e89:	5d                   	pop    %rbp
    6e8a:	c3                   	ret
    6e8b:	90                   	nop

0000000000006e8c <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    6e8c:	55                   	push   %rbp
    6e8d:	48 89 e5             	mov    %rsp,%rbp
    6e90:	48 83 ec 10          	sub    $0x10,%rsp
    6e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  vkh::destroyDevice(this->device);
    6e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e9c:	48 8b 40 30          	mov    0x30(%rax),%rax
    6ea0:	be 00 00 00 00       	mov    $0x0,%esi
    6ea5:	48 89 c7             	mov    %rax,%rdi
    6ea8:	e8 4e b8 ff ff       	call   26fb <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(this->instance, this->debugMessenger,
    6ead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eb1:	48 8b 48 28          	mov    0x28(%rax),%rcx
    6eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eb9:	48 8b 40 08          	mov    0x8(%rax),%rax
    6ebd:	ba 00 00 00 00       	mov    $0x0,%edx
    6ec2:	48 89 ce             	mov    %rcx,%rsi
    6ec5:	48 89 c7             	mov    %rax,%rdi
    6ec8:	e8 3a f4 ff ff       	call   6307 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
                                     nullptr);
  vkh::destroyInstance(this->instance, nullptr);
    6ecd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ed1:	48 8b 40 08          	mov    0x8(%rax),%rax
    6ed5:	be 00 00 00 00       	mov    $0x0,%esi
    6eda:	48 89 c7             	mov    %rax,%rdi
    6edd:	e8 f3 b7 ff ff       	call   26d5 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  glfwDestroyWindow(this->window);
    6ee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ee6:	48 8b 00             	mov    (%rax),%rax
    6ee9:	48 89 c7             	mov    %rax,%rdi
    6eec:	e8 3f b1 ff ff       	call   2030 <glfwDestroyWindow@plt>
  glfwTerminate();
    6ef1:	e8 ca b2 ff ff       	call   21c0 <glfwTerminate@plt>
VulkanApp::~VulkanApp() {
    6ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6efa:	48 83 c0 10          	add    $0x10,%rax
}
    6efe:	48 89 c7             	mov    %rax,%rdi
    6f01:	e8 06 c2 ff ff       	call   310c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    6f06:	90                   	nop
    6f07:	c9                   	leave
    6f08:	c3                   	ret
    6f09:	90                   	nop

0000000000006f0a <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    6f0a:	55                   	push   %rbp
    6f0b:	48 89 e5             	mov    %rsp,%rbp
    6f0e:	48 83 ec 10          	sub    $0x10,%rsp
    6f12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(this->window)) {
    6f16:	eb 05                	jmp    6f1d <_ZN9VulkanApp3runEv+0x13>
    glfwPollEvents();
    6f18:	e8 53 b2 ff ff       	call   2170 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(this->window)) {
    6f1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f21:	48 8b 00             	mov    (%rax),%rax
    6f24:	48 89 c7             	mov    %rax,%rdi
    6f27:	e8 84 b3 ff ff       	call   22b0 <glfwWindowShouldClose@plt>
    6f2c:	85 c0                	test   %eax,%eax
    6f2e:	0f 94 c0             	sete   %al
    6f31:	84 c0                	test   %al,%al
    6f33:	75 e3                	jne    6f18 <_ZN9VulkanApp3runEv+0xe>
  }
    6f35:	90                   	nop
    6f36:	90                   	nop
    6f37:	c9                   	leave
    6f38:	c3                   	ret

0000000000006f39 <_Z41__static_initialization_and_destruction_0ii>:
    6f39:	55                   	push   %rbp
    6f3a:	48 89 e5             	mov    %rsp,%rbp
    6f3d:	48 83 ec 10          	sub    $0x10,%rsp
    6f41:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6f44:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6f47:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    6f4b:	75 3b                	jne    6f88 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6f4d:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    6f54:	75 32                	jne    6f88 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6f56:	48 8d 05 56 94 00 00 	lea    0x9456(%rip),%rax        # 103b3 <_ZStL8__ioinit>
    6f5d:	48 89 c7             	mov    %rax,%rdi
    6f60:	e8 db b2 ff ff       	call   2240 <_ZNSt8ios_base4InitC1Ev@plt>
    6f65:	48 8d 05 e4 91 00 00 	lea    0x91e4(%rip),%rax        # 10150 <__dso_handle>
    6f6c:	48 89 c2             	mov    %rax,%rdx
    6f6f:	48 8d 05 3d 94 00 00 	lea    0x943d(%rip),%rax        # 103b3 <_ZStL8__ioinit>
    6f76:	48 89 c6             	mov    %rax,%rsi
    6f79:	48 8b 05 48 90 00 00 	mov    0x9048(%rip),%rax        # ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    6f80:	48 89 c7             	mov    %rax,%rdi
    6f83:	e8 b8 b1 ff ff       	call   2140 <__cxa_atexit@plt>
    6f88:	90                   	nop
    6f89:	c9                   	leave
    6f8a:	c3                   	ret

0000000000006f8b <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    6f8b:	55                   	push   %rbp
    6f8c:	48 89 e5             	mov    %rsp,%rbp
    6f8f:	be ff ff 00 00       	mov    $0xffff,%esi
    6f94:	bf 01 00 00 00       	mov    $0x1,%edi
    6f99:	e8 9b ff ff ff       	call   6f39 <_Z41__static_initialization_and_destruction_0ii>
    6f9e:	5d                   	pop    %rbp
    6f9f:	c3                   	ret

0000000000006fa0 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    6fa0:	55                   	push   %rbp
    6fa1:	48 89 e5             	mov    %rsp,%rbp
    6fa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fa8:	48 8d 15 61 8d 00 00 	lea    0x8d61(%rip),%rdx        # fd10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    6faf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fb3:	48 89 10             	mov    %rdx,(%rax)
    6fb6:	90                   	nop
    6fb7:	5d                   	pop    %rbp
    6fb8:	c3                   	ret
    6fb9:	90                   	nop

0000000000006fba <_ZNKSt19bad_optional_access4whatEv>:
  {
  public:
    bad_optional_access() = default;
    virtual ~bad_optional_access() = default;

    const char* what() const noexcept override
    6fba:	55                   	push   %rbp
    6fbb:	48 89 e5             	mov    %rsp,%rbp
    6fbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    6fc2:	48 8d 05 77 3b 00 00 	lea    0x3b77(%rip),%rax        # ab40 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    6fc9:	5d                   	pop    %rbp
    6fca:	c3                   	ret
    6fcb:	90                   	nop

0000000000006fcc <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    6fcc:	55                   	push   %rbp
    6fcd:	48 89 e5             	mov    %rsp,%rbp
    6fd0:	48 83 ec 10          	sub    $0x10,%rsp
    6fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fdc:	48 89 c7             	mov    %rax,%rdi
    6fdf:	e8 bc ff ff ff       	call   6fa0 <_ZNSt9exceptionC1Ev>
    6fe4:	48 8d 15 f5 8c 00 00 	lea    0x8cf5(%rip),%rdx        # fce0 <_ZTVSt19bad_optional_access+0x10>
    6feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fef:	48 89 10             	mov    %rdx,(%rax)
    6ff2:	90                   	nop
    6ff3:	c9                   	leave
    6ff4:	c3                   	ret

0000000000006ff5 <_ZSt27__throw_bad_optional_accessv>:
  };

  // XXX Does not belong here.
  [[__noreturn__]] inline void
  __throw_bad_optional_access()
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    6ff5:	55                   	push   %rbp
    6ff6:	48 89 e5             	mov    %rsp,%rbp
    6ff9:	53                   	push   %rbx
    6ffa:	48 83 ec 08          	sub    $0x8,%rsp
    6ffe:	bf 08 00 00 00       	mov    $0x8,%edi
    7003:	e8 98 b0 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    7008:	48 89 c3             	mov    %rax,%rbx
    700b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    7012:	48 89 df             	mov    %rbx,%rdi
    7015:	e8 b2 ff ff ff       	call   6fcc <_ZNSt19bad_optional_accessC1Ev>
    701a:	48 8d 05 17 08 00 00 	lea    0x817(%rip),%rax        # 7838 <_ZNSt19bad_optional_accessD1Ev>
    7021:	48 89 c2             	mov    %rax,%rdx
    7024:	48 8d 05 2d 8d 00 00 	lea    0x8d2d(%rip),%rax        # fd58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    702b:	48 89 c6             	mov    %rax,%rsi
    702e:	48 89 df             	mov    %rbx,%rdi
    7031:	e8 4a b2 ff ff       	call   2280 <__cxa_throw@plt>

0000000000007036 <_ZN18QueueFamilyIndices10isCompleteEv>:

struct QueueFamilyIndices {
  std::optional<uint32_t> graphicsFamily;
  std::optional<uint32_t> computeFamily;

  bool isComplete() {
    7036:	55                   	push   %rbp
    7037:	48 89 e5             	mov    %rsp,%rbp
    703a:	48 83 ec 10          	sub    $0x10,%rsp
    703e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    return graphicsFamily.has_value() && computeFamily.has_value();
    7042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7046:	48 89 c7             	mov    %rax,%rdi
    7049:	e8 26 00 00 00       	call   7074 <_ZNKSt8optionalIjE9has_valueEv>
    704e:	84 c0                	test   %al,%al
    7050:	74 1b                	je     706d <_ZN18QueueFamilyIndices10isCompleteEv+0x37>
    7052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7056:	48 83 c0 08          	add    $0x8,%rax
    705a:	48 89 c7             	mov    %rax,%rdi
    705d:	e8 12 00 00 00       	call   7074 <_ZNKSt8optionalIjE9has_valueEv>
    7062:	84 c0                	test   %al,%al
    7064:	74 07                	je     706d <_ZN18QueueFamilyIndices10isCompleteEv+0x37>
    7066:	b8 01 00 00 00       	mov    $0x1,%eax
    706b:	eb 05                	jmp    7072 <_ZN18QueueFamilyIndices10isCompleteEv+0x3c>
    706d:	b8 00 00 00 00       	mov    $0x0,%eax
  }
    7072:	c9                   	leave
    7073:	c3                   	ret

0000000000007074 <_ZNKSt8optionalIjE9has_valueEv>:
      { return std::move(this->_M_get()); }

      constexpr explicit operator bool() const noexcept
      { return this->_M_is_engaged(); }

      constexpr bool has_value() const noexcept
    7074:	55                   	push   %rbp
    7075:	48 89 e5             	mov    %rsp,%rbp
    7078:	48 83 ec 10          	sub    $0x10,%rsp
    707c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    7080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7084:	48 89 c7             	mov    %rax,%rdi
    7087:	e8 82 02 00 00       	call   730e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    708c:	c9                   	leave
    708d:	c3                   	ret

000000000000708e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    708e:	55                   	push   %rbp
    708f:	48 89 e5             	mov    %rsp,%rbp
    7092:	53                   	push   %rbx
    7093:	48 83 ec 38          	sub    $0x38,%rsp
    7097:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    709b:	48 89 f0             	mov    %rsi,%rax
    709e:	48 89 d6             	mov    %rdx,%rsi
    70a1:	48 89 f2             	mov    %rsi,%rdx
    70a4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    70a8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    70ac:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    70b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70b4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    70b8:	48 89 d6             	mov    %rdx,%rsi
    70bb:	48 89 c7             	mov    %rax,%rdi
    70be:	e8 5d 02 00 00       	call   7320 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    70c3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    70c7:	48 89 c7             	mov    %rax,%rdi
    70ca:	e8 89 02 00 00       	call   7358 <_ZNKSt16initializer_listIPKcE3endEv>
    70cf:	48 89 c3             	mov    %rax,%rbx
    70d2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    70d6:	48 89 c7             	mov    %rax,%rdi
    70d9:	e8 68 02 00 00       	call   7346 <_ZNKSt16initializer_listIPKcE5beginEv>
    70de:	48 89 c1             	mov    %rax,%rcx
    70e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70e5:	48 89 da             	mov    %rbx,%rdx
    70e8:	48 89 ce             	mov    %rcx,%rsi
    70eb:	48 89 c7             	mov    %rax,%rdi
    70ee:	e8 cb 02 00 00       	call   73be <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    70f3:	eb 1a                	jmp    710f <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    70f5:	48 89 c3             	mov    %rax,%rbx
    70f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70fc:	48 89 c7             	mov    %rax,%rdi
    70ff:	e8 9e c0 ff ff       	call   31a2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    7104:	48 89 d8             	mov    %rbx,%rax
    7107:	48 89 c7             	mov    %rax,%rdi
    710a:	e8 81 b1 ff ff       	call   2290 <_Unwind_Resume@plt>
    710f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7113:	c9                   	leave
    7114:	c3                   	ret
    7115:	90                   	nop

0000000000007116 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7116:	55                   	push   %rbp
    7117:	48 89 e5             	mov    %rsp,%rbp
    711a:	48 83 ec 10          	sub    $0x10,%rsp
    711e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7126:	48 8b 10             	mov    (%rax),%rdx
    7129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    712d:	48 89 d6             	mov    %rdx,%rsi
    7130:	48 89 c7             	mov    %rax,%rdi
    7133:	e8 36 03 00 00       	call   746e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    7138:	c9                   	leave
    7139:	c3                   	ret

000000000000713a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    713a:	55                   	push   %rbp
    713b:	48 89 e5             	mov    %rsp,%rbp
    713e:	48 83 ec 10          	sub    $0x10,%rsp
    7142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    714a:	48 8b 10             	mov    (%rax),%rdx
    714d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7151:	48 89 d6             	mov    %rdx,%rsi
    7154:	48 89 c7             	mov    %rax,%rdi
    7157:	e8 12 03 00 00       	call   746e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    715c:	c9                   	leave
    715d:	c3                   	ret

000000000000715e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    715e:	55                   	push   %rbp
    715f:	48 89 e5             	mov    %rsp,%rbp
    7162:	48 83 ec 20          	sub    $0x20,%rsp
    7166:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    716a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    716e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7172:	48 89 d6             	mov    %rdx,%rsi
    7175:	48 89 c7             	mov    %rax,%rdi
    7178:	e8 03 03 00 00       	call   7480 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    717d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7181:	c9                   	leave
    7182:	c3                   	ret
    7183:	90                   	nop

0000000000007184 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    7184:	55                   	push   %rbp
    7185:	48 89 e5             	mov    %rsp,%rbp
    7188:	48 83 ec 20          	sub    $0x20,%rsp
    718c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    7190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7194:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7198:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    719c:	48 89 d6             	mov    %rdx,%rsi
    719f:	48 89 c7             	mov    %rax,%rdi
    71a2:	e8 d9 02 00 00       	call   7480 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    71a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71ab:	c9                   	leave
    71ac:	c3                   	ret

00000000000071ad <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    71ad:	55                   	push   %rbp
    71ae:	48 89 e5             	mov    %rsp,%rbp
    71b1:	53                   	push   %rbx
    71b2:	48 83 ec 18          	sub    $0x18,%rsp
    71b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    71ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    71be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    71c2:	48 89 c7             	mov    %rax,%rdi
    71c5:	e8 d4 02 00 00       	call   749e <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    71ca:	48 8b 18             	mov    (%rax),%rbx
    71cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    71d1:	48 89 c7             	mov    %rax,%rdi
    71d4:	e8 c5 02 00 00       	call   749e <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    71d9:	48 8b 00             	mov    (%rax),%rax
    71dc:	48 39 c3             	cmp    %rax,%rbx
    71df:	0f 95 c0             	setne  %al
    71e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    71e6:	c9                   	leave
    71e7:	c3                   	ret

00000000000071e8 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    71e8:	55                   	push   %rbp
    71e9:	48 89 e5             	mov    %rsp,%rbp
    71ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    71f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71f4:	48 8b 00             	mov    (%rax),%rax
    71f7:	48 8d 50 08          	lea    0x8(%rax),%rdx
    71fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71ff:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    7202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7206:	5d                   	pop    %rbp
    7207:	c3                   	ret

0000000000007208 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    7208:	55                   	push   %rbp
    7209:	48 89 e5             	mov    %rsp,%rbp
    720c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    7210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7214:	48 8b 00             	mov    (%rax),%rax
    7217:	5d                   	pop    %rbp
    7218:	c3                   	ret
    7219:	90                   	nop

000000000000721a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    721a:	55                   	push   %rbp
    721b:	48 89 e5             	mov    %rsp,%rbp
    721e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7226:	48 8b 50 08          	mov    0x8(%rax),%rdx
    722a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    722e:	48 8b 00             	mov    (%rax),%rax
    7231:	48 29 c2             	sub    %rax,%rdx
    7234:	48 c1 fa 03          	sar    $0x3,%rdx
    7238:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    723f:	aa aa aa 
    7242:	48 0f af c2          	imul   %rdx,%rax
    7246:	5d                   	pop    %rbp
    7247:	c3                   	ret

0000000000007248 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    7248:	55                   	push   %rbp
    7249:	48 89 e5             	mov    %rsp,%rbp
    724c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7250:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    7254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7258:	48 8b 08             	mov    (%rax),%rcx
    725b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    725f:	48 89 d0             	mov    %rdx,%rax
    7262:	48 01 c0             	add    %rax,%rax
    7265:	48 01 d0             	add    %rdx,%rax
    7268:	48 c1 e0 03          	shl    $0x3,%rax
    726c:	48 01 c8             	add    %rcx,%rax
      }
    726f:	5d                   	pop    %rbp
    7270:	c3                   	ret
    7271:	90                   	nop

0000000000007272 <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>:
	operator=(_Up&& __u)
    7272:	55                   	push   %rbp
    7273:	48 89 e5             	mov    %rsp,%rbp
    7276:	53                   	push   %rbx
    7277:	48 83 ec 18          	sub    $0x18,%rsp
    727b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    727f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (this->_M_is_engaged())
    7283:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7287:	48 89 c7             	mov    %rax,%rdi
    728a:	e8 7f 00 00 00       	call   730e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    728f:	84 c0                	test   %al,%al
    7291:	74 21                	je     72b4 <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x42>
	    this->_M_get() = std::forward<_Up>(__u);
    7293:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7297:	48 89 c7             	mov    %rax,%rdi
    729a:	e8 51 02 00 00       	call   74f0 <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    729f:	48 8b 00             	mov    (%rax),%rax
    72a2:	89 c3                	mov    %eax,%ebx
    72a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72a8:	48 89 c7             	mov    %rax,%rdi
    72ab:	e8 fc 01 00 00       	call   74ac <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    72b0:	89 18                	mov    %ebx,(%rax)
    72b2:	eb 1e                	jmp    72d2 <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x60>
	    this->_M_construct(std::forward<_Up>(__u));
    72b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72b8:	48 89 c7             	mov    %rax,%rdi
    72bb:	e8 30 02 00 00       	call   74f0 <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    72c0:	48 89 c2             	mov    %rax,%rdx
    72c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72c7:	48 89 d6             	mov    %rdx,%rsi
    72ca:	48 89 c7             	mov    %rax,%rdi
    72cd:	e8 2c 02 00 00       	call   74fe <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRmEEEvDpOT_>
	  return *this;
    72d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    72d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    72da:	c9                   	leave
    72db:	c3                   	ret

00000000000072dc <_ZNRSt8optionalIjE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    72dc:	55                   	push   %rbp
    72dd:	48 89 e5             	mov    %rsp,%rbp
    72e0:	48 83 ec 10          	sub    $0x10,%rsp
    72e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    72e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72ec:	48 89 c7             	mov    %rax,%rdi
    72ef:	e8 1a 00 00 00       	call   730e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    72f4:	84 c0                	test   %al,%al
    72f6:	74 0e                	je     7306 <_ZNRSt8optionalIjE5valueEv+0x2a>
	  return this->_M_get();
    72f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72fc:	48 89 c7             	mov    %rax,%rdi
    72ff:	e8 a8 01 00 00       	call   74ac <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    7304:	eb 05                	jmp    730b <_ZNRSt8optionalIjE5valueEv+0x2f>
	__throw_bad_optional_access();
    7306:	e8 ea fc ff ff       	call   6ff5 <_ZSt27__throw_bad_optional_accessv>
      }
    730b:	c9                   	leave
    730c:	c3                   	ret
    730d:	90                   	nop

000000000000730e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    730e:	55                   	push   %rbp
    730f:	48 89 e5             	mov    %rsp,%rbp
    7312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    7316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    731a:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    731e:	5d                   	pop    %rbp
    731f:	c3                   	ret

0000000000007320 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    7320:	55                   	push   %rbp
    7321:	48 89 e5             	mov    %rsp,%rbp
    7324:	48 83 ec 10          	sub    $0x10,%rsp
    7328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    732c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    7330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7334:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7338:	48 89 d6             	mov    %rdx,%rsi
    733b:	48 89 c7             	mov    %rax,%rdi
    733e:	e8 dd cd ff ff       	call   4120 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    7343:	90                   	nop
    7344:	c9                   	leave
    7345:	c3                   	ret

0000000000007346 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    7346:	55                   	push   %rbp
    7347:	48 89 e5             	mov    %rsp,%rbp
    734a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    734e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7352:	48 8b 00             	mov    (%rax),%rax
    7355:	5d                   	pop    %rbp
    7356:	c3                   	ret
    7357:	90                   	nop

0000000000007358 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    7358:	55                   	push   %rbp
    7359:	48 89 e5             	mov    %rsp,%rbp
    735c:	53                   	push   %rbx
    735d:	48 83 ec 18          	sub    $0x18,%rsp
    7361:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7365:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7369:	48 89 c7             	mov    %rax,%rdi
    736c:	e8 d5 ff ff ff       	call   7346 <_ZNKSt16initializer_listIPKcE5beginEv>
    7371:	48 89 c3             	mov    %rax,%rbx
    7374:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7378:	48 89 c7             	mov    %rax,%rdi
    737b:	e8 b2 01 00 00       	call   7532 <_ZNKSt16initializer_listIPKcE4sizeEv>
    7380:	48 c1 e0 03          	shl    $0x3,%rax
    7384:	48 01 d8             	add    %rbx,%rax
    7387:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    738b:	c9                   	leave
    738c:	c3                   	ret

000000000000738d <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    738d:	55                   	push   %rbp
    738e:	48 89 e5             	mov    %rsp,%rbp
    7391:	48 83 ec 10          	sub    $0x10,%rsp
    7395:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7399:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    739d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    73a1:	48 89 c7             	mov    %rax,%rdi
    73a4:	e8 9b 01 00 00       	call   7544 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    73a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    73b1:	48 89 d6             	mov    %rdx,%rsi
    73b4:	48 89 c7             	mov    %rax,%rdi
    73b7:	e8 93 01 00 00       	call   754f <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    73bc:	c9                   	leave
    73bd:	c3                   	ret

00000000000073be <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    73be:	55                   	push   %rbp
    73bf:	48 89 e5             	mov    %rsp,%rbp
    73c2:	53                   	push   %rbx
    73c3:	48 83 ec 38          	sub    $0x38,%rsp
    73c7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    73cb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    73cf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    73d3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    73d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73db:	48 89 d6             	mov    %rdx,%rsi
    73de:	48 89 c7             	mov    %rax,%rdi
    73e1:	e8 a7 ff ff ff       	call   738d <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    73e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    73ea:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    73ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73f2:	48 89 c7             	mov    %rax,%rdi
    73f5:	e8 08 c5 ff ff       	call   3902 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    73fa:	48 89 c2             	mov    %rax,%rdx
    73fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7401:	48 89 d6             	mov    %rdx,%rsi
    7404:	48 89 c7             	mov    %rax,%rdi
    7407:	e8 f7 c3 ff ff       	call   3803 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    740c:	48 89 c6             	mov    %rax,%rsi
    740f:	48 89 df             	mov    %rbx,%rdi
    7412:	e8 dd d5 ff ff       	call   49f4 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    7417:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    741b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    741e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7422:	48 8b 00             	mov    (%rax),%rax
    7425:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7429:	48 c1 e2 03          	shl    $0x3,%rdx
    742d:	48 01 c2             	add    %rax,%rdx
    7430:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7434:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    7438:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    743c:	48 89 c7             	mov    %rax,%rdi
    743f:	e8 be c4 ff ff       	call   3902 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    7444:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    7447:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    744b:	48 8b 10             	mov    (%rax),%rdx
    744e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7452:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7456:	48 89 c7             	mov    %rax,%rdi
    7459:	e8 0b 01 00 00       	call   7569 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    745e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7462:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    7466:	90                   	nop
    7467:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    746b:	c9                   	leave
    746c:	c3                   	ret
    746d:	90                   	nop

000000000000746e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    746e:	55                   	push   %rbp
    746f:	48 89 e5             	mov    %rsp,%rbp
    7472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7476:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    747a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    747e:	5d                   	pop    %rbp
    747f:	c3                   	ret

0000000000007480 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    7480:	55                   	push   %rbp
    7481:	48 89 e5             	mov    %rsp,%rbp
    7484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7488:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    748c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7490:	48 8b 10             	mov    (%rax),%rdx
    7493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7497:	48 89 10             	mov    %rdx,(%rax)
    749a:	90                   	nop
    749b:	5d                   	pop    %rbp
    749c:	c3                   	ret
    749d:	90                   	nop

000000000000749e <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    749e:	55                   	push   %rbp
    749f:	48 89 e5             	mov    %rsp,%rbp
    74a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    74a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74aa:	5d                   	pop    %rbp
    74ab:	c3                   	ret

00000000000074ac <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    74ac:	55                   	push   %rbp
    74ad:	48 89 e5             	mov    %rsp,%rbp
    74b0:	48 83 ec 10          	sub    $0x10,%rsp
    74b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    74b8:	e8 02 ef ff ff       	call   63bf <_ZSt23__is_constant_evaluatedv>
    74bd:	84 c0                	test   %al,%al
    74bf:	74 1a                	je     74db <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    74c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74c5:	48 89 c7             	mov    %rax,%rdi
    74c8:	e8 41 fe ff ff       	call   730e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    74cd:	83 f0 01             	xor    $0x1,%eax
    74d0:	84 c0                	test   %al,%al
    74d2:	74 07                	je     74db <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    74d4:	b8 01 00 00 00       	mov    $0x1,%eax
    74d9:	eb 05                	jmp    74e0 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
    74db:	b8 00 00 00 00       	mov    $0x0,%eax
    74e0:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    74e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74e6:	48 89 c7             	mov    %rax,%rdi
    74e9:	e8 ac 00 00 00       	call   759a <_ZNSt22_Optional_payload_baseIjE6_M_getEv>
      }
    74ee:	c9                   	leave
    74ef:	c3                   	ret

00000000000074f0 <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    74f0:	55                   	push   %rbp
    74f1:	48 89 e5             	mov    %rsp,%rbp
    74f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    74f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74fc:	5d                   	pop    %rbp
    74fd:	c3                   	ret

00000000000074fe <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRmEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    74fe:	55                   	push   %rbp
    74ff:	48 89 e5             	mov    %rsp,%rbp
    7502:	53                   	push   %rbx
    7503:	48 83 ec 18          	sub    $0x18,%rsp
    7507:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    750b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    750f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7513:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7517:	48 89 c7             	mov    %rax,%rdi
    751a:	e8 d1 ff ff ff       	call   74f0 <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    751f:	48 89 c6             	mov    %rax,%rsi
    7522:	48 89 df             	mov    %rbx,%rdi
    7525:	e8 7e 00 00 00       	call   75a8 <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRmEEEvDpOT_>
	}
    752a:	90                   	nop
    752b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    752f:	c9                   	leave
    7530:	c3                   	ret
    7531:	90                   	nop

0000000000007532 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    7532:	55                   	push   %rbp
    7533:	48 89 e5             	mov    %rsp,%rbp
    7536:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    753a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    753e:	48 8b 40 08          	mov    0x8(%rax),%rax
    7542:	5d                   	pop    %rbp
    7543:	c3                   	ret

0000000000007544 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    7544:	55                   	push   %rbp
    7545:	48 89 e5             	mov    %rsp,%rbp
    7548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    754c:	90                   	nop
    754d:	5d                   	pop    %rbp
    754e:	c3                   	ret

000000000000754f <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    754f:	55                   	push   %rbp
    7550:	48 89 e5             	mov    %rsp,%rbp
    7553:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7557:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    755b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    755f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    7563:	48 c1 f8 03          	sar    $0x3,%rax
    }
    7567:	5d                   	pop    %rbp
    7568:	c3                   	ret

0000000000007569 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    7569:	55                   	push   %rbp
    756a:	48 89 e5             	mov    %rsp,%rbp
    756d:	48 83 ec 20          	sub    $0x20,%rsp
    7571:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7575:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7579:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    757d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    7581:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7585:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7589:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    758d:	48 89 ce             	mov    %rcx,%rsi
    7590:	48 89 c7             	mov    %rax,%rdi
    7593:	e8 56 00 00 00       	call   75ee <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    7598:	c9                   	leave
    7599:	c3                   	ret

000000000000759a <_ZNSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() noexcept
    759a:	55                   	push   %rbp
    759b:	48 89 e5             	mov    %rsp,%rbp
    759e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    75a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75a6:	5d                   	pop    %rbp
    75a7:	c3                   	ret

00000000000075a8 <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRmEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    75a8:	55                   	push   %rbp
    75a9:	48 89 e5             	mov    %rsp,%rbp
    75ac:	53                   	push   %rbx
    75ad:	48 83 ec 18          	sub    $0x18,%rsp
    75b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    75b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    75bd:	48 89 c7             	mov    %rax,%rdi
    75c0:	e8 2b ff ff ff       	call   74f0 <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    75c5:	48 89 c3             	mov    %rax,%rbx
    75c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75cc:	48 89 c7             	mov    %rax,%rdi
    75cf:	e8 4f 00 00 00       	call   7623 <_ZSt11__addressofIjEPT_RS0_>
    75d4:	48 89 de             	mov    %rbx,%rsi
    75d7:	48 89 c7             	mov    %rax,%rdi
    75da:	e8 52 00 00 00       	call   7631 <_ZSt10_ConstructIjJRmEEvPT_DpOT0_>
	  this->_M_engaged = true;
    75df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75e3:	c6 40 04 01          	movb   $0x1,0x4(%rax)
	}
    75e7:	90                   	nop
    75e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    75ec:	c9                   	leave
    75ed:	c3                   	ret

00000000000075ee <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    75ee:	55                   	push   %rbp
    75ef:	48 89 e5             	mov    %rsp,%rbp
    75f2:	48 83 ec 30          	sub    $0x30,%rsp
    75f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    75fe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    7602:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    7606:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    760a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    760e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7612:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7616:	48 89 ce             	mov    %rcx,%rsi
    7619:	48 89 c7             	mov    %rax,%rdi
    761c:	e8 4d 00 00 00       	call   766e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    7621:	c9                   	leave
    7622:	c3                   	ret

0000000000007623 <_ZSt11__addressofIjEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7623:	55                   	push   %rbp
    7624:	48 89 e5             	mov    %rsp,%rbp
    7627:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    762b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    762f:	5d                   	pop    %rbp
    7630:	c3                   	ret

0000000000007631 <_ZSt10_ConstructIjJRmEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7631:	55                   	push   %rbp
    7632:	48 89 e5             	mov    %rsp,%rbp
    7635:	53                   	push   %rbx
    7636:	48 83 ec 18          	sub    $0x18,%rsp
    763a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    763e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7646:	48 89 c6             	mov    %rax,%rsi
    7649:	bf 04 00 00 00       	mov    $0x4,%edi
    764e:	e8 f0 b7 ff ff       	call   2e43 <_ZnwmPv>
    7653:	48 89 c3             	mov    %rax,%rbx
    7656:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    765a:	48 89 c7             	mov    %rax,%rdi
    765d:	e8 8e fe ff ff       	call   74f0 <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    7662:	48 8b 00             	mov    (%rax),%rax
    7665:	89 03                	mov    %eax,(%rbx)
    }
    7667:	90                   	nop
    7668:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    766c:	c9                   	leave
    766d:	c3                   	ret

000000000000766e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    766e:	55                   	push   %rbp
    766f:	48 89 e5             	mov    %rsp,%rbp
    7672:	48 83 ec 20          	sub    $0x20,%rsp
    7676:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    767a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    767e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    7682:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7686:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    768a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    768e:	48 89 ce             	mov    %rcx,%rsi
    7691:	48 89 c7             	mov    %rax,%rdi
    7694:	e8 02 00 00 00       	call   769b <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    7699:	c9                   	leave
    769a:	c3                   	ret

000000000000769b <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    769b:	55                   	push   %rbp
    769c:	48 89 e5             	mov    %rsp,%rbp
    769f:	53                   	push   %rbx
    76a0:	48 83 ec 28          	sub    $0x28,%rsp
    76a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    76a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    76ac:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    76b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    76b4:	48 89 c7             	mov    %rax,%rdi
    76b7:	e8 2a 00 00 00       	call   76e6 <_ZSt12__miter_baseIPKPKcET_S4_>
    76bc:	48 89 c3             	mov    %rax,%rbx
    76bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76c3:	48 89 c7             	mov    %rax,%rdi
    76c6:	e8 1b 00 00 00       	call   76e6 <_ZSt12__miter_baseIPKPKcET_S4_>
    76cb:	48 89 c1             	mov    %rax,%rcx
    76ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76d2:	48 89 c2             	mov    %rax,%rdx
    76d5:	48 89 de             	mov    %rbx,%rsi
    76d8:	48 89 cf             	mov    %rcx,%rdi
    76db:	e8 14 00 00 00       	call   76f4 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    76e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    76e4:	c9                   	leave
    76e5:	c3                   	ret

00000000000076e6 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    76e6:	55                   	push   %rbp
    76e7:	48 89 e5             	mov    %rsp,%rbp
    76ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    76ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76f2:	5d                   	pop    %rbp
    76f3:	c3                   	ret

00000000000076f4 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    76f4:	55                   	push   %rbp
    76f5:	48 89 e5             	mov    %rsp,%rbp
    76f8:	41 54                	push   %r12
    76fa:	53                   	push   %rbx
    76fb:	48 83 ec 20          	sub    $0x20,%rsp
    76ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7703:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7707:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    770b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    770f:	48 89 c7             	mov    %rax,%rdi
    7712:	e8 8b de ff ff       	call   55a2 <_ZSt12__niter_baseIPPKcET_S3_>
    7717:	49 89 c4             	mov    %rax,%r12
    771a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    771e:	48 89 c7             	mov    %rax,%rdi
    7721:	e8 38 00 00 00       	call   775e <_ZSt12__niter_baseIPKPKcET_S4_>
    7726:	48 89 c3             	mov    %rax,%rbx
    7729:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    772d:	48 89 c7             	mov    %rax,%rdi
    7730:	e8 29 00 00 00       	call   775e <_ZSt12__niter_baseIPKPKcET_S4_>
    7735:	4c 89 e2             	mov    %r12,%rdx
    7738:	48 89 de             	mov    %rbx,%rsi
    773b:	48 89 c7             	mov    %rax,%rdi
    773e:	e8 29 00 00 00       	call   776c <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    7743:	48 89 c2             	mov    %rax,%rdx
    7746:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    774a:	48 89 d6             	mov    %rdx,%rsi
    774d:	48 89 c7             	mov    %rax,%rdi
    7750:	e8 44 00 00 00       	call   7799 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    7755:	48 83 c4 20          	add    $0x20,%rsp
    7759:	5b                   	pop    %rbx
    775a:	41 5c                	pop    %r12
    775c:	5d                   	pop    %rbp
    775d:	c3                   	ret

000000000000775e <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    775e:	55                   	push   %rbp
    775f:	48 89 e5             	mov    %rsp,%rbp
    7762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    7766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    776a:	5d                   	pop    %rbp
    776b:	c3                   	ret

000000000000776c <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    776c:	55                   	push   %rbp
    776d:	48 89 e5             	mov    %rsp,%rbp
    7770:	48 83 ec 20          	sub    $0x20,%rsp
    7774:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7778:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    777c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    7780:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7784:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    778c:	48 89 ce             	mov    %rcx,%rsi
    778f:	48 89 c7             	mov    %rax,%rdi
    7792:	e8 14 00 00 00       	call   77ab <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    7797:	c9                   	leave
    7798:	c3                   	ret

0000000000007799 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    7799:	55                   	push   %rbp
    779a:	48 89 e5             	mov    %rsp,%rbp
    779d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    77a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    77a9:	5d                   	pop    %rbp
    77aa:	c3                   	ret

00000000000077ab <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    77ab:	55                   	push   %rbp
    77ac:	48 89 e5             	mov    %rsp,%rbp
    77af:	48 83 ec 20          	sub    $0x20,%rsp
    77b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    77bb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    77bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    77c3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    77c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77cb:	48 89 ce             	mov    %rcx,%rsi
    77ce:	48 89 c7             	mov    %rax,%rdi
    77d1:	e8 02 00 00 00       	call   77d8 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    77d6:	c9                   	leave
    77d7:	c3                   	ret

00000000000077d8 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    77d8:	55                   	push   %rbp
    77d9:	48 89 e5             	mov    %rsp,%rbp
    77dc:	48 83 ec 30          	sub    $0x30,%rsp
    77e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    77e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    77e8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    77ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    77f0:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    77f4:	48 c1 f8 03          	sar    $0x3,%rax
    77f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    77fc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7801:	74 1f                	je     7822 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    7803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7807:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    780e:	00 
    780f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    7813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7817:	48 89 ce             	mov    %rcx,%rsi
    781a:	48 89 c7             	mov    %rax,%rdi
    781d:	e8 3e aa ff ff       	call   2260 <memmove@plt>
	  return __result + _Num;
    7822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7826:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    782d:	00 
    782e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7832:	48 01 d0             	add    %rdx,%rax
	}
    7835:	c9                   	leave
    7836:	c3                   	ret
    7837:	90                   	nop

0000000000007838 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
    7838:	55                   	push   %rbp
    7839:	48 89 e5             	mov    %rsp,%rbp
    783c:	48 83 ec 10          	sub    $0x10,%rsp
    7840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7844:	48 8d 15 95 84 00 00 	lea    0x8495(%rip),%rdx        # fce0 <_ZTVSt19bad_optional_access+0x10>
    784b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    784f:	48 89 10             	mov    %rdx,(%rax)
    7852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7856:	48 89 c7             	mov    %rax,%rdi
    7859:	e8 42 aa ff ff       	call   22a0 <_ZNSt9exceptionD2Ev@plt>
    785e:	90                   	nop
    785f:	c9                   	leave
    7860:	c3                   	ret
    7861:	90                   	nop

0000000000007862 <_ZNSt19bad_optional_accessD0Ev>:
    7862:	55                   	push   %rbp
    7863:	48 89 e5             	mov    %rsp,%rbp
    7866:	48 83 ec 10          	sub    $0x10,%rsp
    786a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    786e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7872:	48 89 c7             	mov    %rax,%rdi
    7875:	e8 be ff ff ff       	call   7838 <_ZNSt19bad_optional_accessD1Ev>
    787a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    787e:	be 08 00 00 00       	mov    $0x8,%esi
    7883:	48 89 c7             	mov    %rax,%rdi
    7886:	e8 15 a9 ff ff       	call   21a0 <_ZdlPvm@plt>
    788b:	c9                   	leave
    788c:	c3                   	ret

Disassembly of section .fini:

0000000000007890 <_fini>:
    7890:	48 83 ec 08          	sub    $0x8,%rsp
    7894:	48 83 c4 08          	add    $0x8,%rsp
    7898:	c3                   	ret
