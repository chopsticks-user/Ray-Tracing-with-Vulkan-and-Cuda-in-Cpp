
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 c5 af 00 00 	mov    0xafc5(%rip),%rax        # dfd0 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNSo3putEc@plt-0x10>:
    3020:	ff 35 ca af 00 00    	push   0xafca(%rip)        # dff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc af 00 00    	jmp    *0xafcc(%rip)        # dff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNSo3putEc@plt>:
    3030:	ff 25 ca af 00 00    	jmp    *0xafca(%rip)        # e000 <_ZNSo3putEc@GLIBCXX_3.4>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>:
    3040:	ff 25 c2 af 00 00    	jmp    *0xafc2(%rip)        # e008 <_ZNSt6chrono3_V212system_clock3nowEv@GLIBCXX_3.4.19>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <vkCmdEndRenderPass@plt>:
    3050:	ff 25 ba af 00 00    	jmp    *0xafba(%rip)        # e010 <vkCmdEndRenderPass@Base>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3060:	ff 25 b2 af 00 00    	jmp    *0xafb2(%rip)        # e018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv@plt>:
    3070:	ff 25 aa af 00 00    	jmp    *0xafaa(%rip)        # e020 <_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <_ZNKSt12__basic_fileIcE7is_openEv@plt>:
    3080:	ff 25 a2 af 00 00    	jmp    *0xafa2(%rip)        # e028 <_ZNKSt12__basic_fileIcE7is_openEv@GLIBCXX_3.4>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <vkDeviceWaitIdle@plt>:
    3090:	ff 25 9a af 00 00    	jmp    *0xaf9a(%rip)        # e030 <vkDeviceWaitIdle@Base>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    30a0:	ff 25 92 af 00 00    	jmp    *0xaf92(%rip)        # e038 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <vkDestroySwapchainKHR@plt>:
    30b0:	ff 25 8a af 00 00    	jmp    *0xaf8a(%rip)        # e040 <vkDestroySwapchainKHR@Base>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <_ZNSt8ios_baseC2Ev@plt>:
    30c0:	ff 25 82 af 00 00    	jmp    *0xaf82(%rip)        # e048 <_ZNSt8ios_baseC2Ev@GLIBCXX_3.4>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <vkDestroySemaphore@plt>:
    30d0:	ff 25 7a af 00 00    	jmp    *0xaf7a(%rip)        # e050 <vkDestroySemaphore@Base>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <glfwDestroyWindow@plt>:
    30e0:	ff 25 72 af 00 00    	jmp    *0xaf72(%rip)        # e058 <glfwDestroyWindow@Base>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <_ZNSt8ios_baseD2Ev@plt>:
    30f0:	ff 25 6a af 00 00    	jmp    *0xaf6a(%rip)        # e060 <_ZNSt8ios_baseD2Ev@GLIBCXX_3.4>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <_ZNSt13runtime_errorC1EPKc@plt>:
    3100:	ff 25 62 af 00 00    	jmp    *0xaf62(%rip)        # e068 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <__cxa_begin_catch@plt>:
    3110:	ff 25 5a af 00 00    	jmp    *0xaf5a(%rip)        # e070 <__cxa_begin_catch@CXXABI_1.3>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <vkAcquireNextImageKHR@plt>:
    3120:	ff 25 52 af 00 00    	jmp    *0xaf52(%rip)        # e078 <vkAcquireNextImageKHR@Base>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <vkCreateCommandPool@plt>:
    3130:	ff 25 4a af 00 00    	jmp    *0xaf4a(%rip)        # e080 <vkCreateCommandPool@Base>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <strlen@plt>:
    3140:	ff 25 42 af 00 00    	jmp    *0xaf42(%rip)        # e088 <strlen@GLIBC_2.2.5>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <memcmp@plt>:
    3150:	ff 25 3a af 00 00    	jmp    *0xaf3a(%rip)        # e090 <memcmp@GLIBC_2.2.5>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <vkCreateGraphicsPipelines@plt>:
    3160:	ff 25 32 af 00 00    	jmp    *0xaf32(%rip)        # e098 <vkCreateGraphicsPipelines@Base>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <__cxa_allocate_exception@plt>:
    3170:	ff 25 2a af 00 00    	jmp    *0xaf2a(%rip)        # e0a0 <__cxa_allocate_exception@CXXABI_1.3>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <vkDestroyBuffer@plt>:
    3180:	ff 25 22 af 00 00    	jmp    *0xaf22(%rip)        # e0a8 <vkDestroyBuffer@Base>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <glfwSetWindowUserPointer@plt>:
    3190:	ff 25 1a af 00 00    	jmp    *0xaf1a(%rip)        # e0b0 <glfwSetWindowUserPointer@Base>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZSt20__throw_length_errorPKc@plt>:
    31a0:	ff 25 12 af 00 00    	jmp    *0xaf12(%rip)        # e0b8 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <vkEnumeratePhysicalDevices@plt>:
    31b0:	ff 25 0a af 00 00    	jmp    *0xaf0a(%rip)        # e0c0 <vkEnumeratePhysicalDevices@Base>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <memset@plt>:
    31c0:	ff 25 02 af 00 00    	jmp    *0xaf02(%rip)        # e0c8 <memset@GLIBC_2.2.5>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <vkWaitForFences@plt>:
    31d0:	ff 25 fa ae 00 00    	jmp    *0xaefa(%rip)        # e0d0 <vkWaitForFences@Base>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <glfwWaitEvents@plt>:
    31e0:	ff 25 f2 ae 00 00    	jmp    *0xaef2(%rip)        # e0d8 <glfwWaitEvents@Base>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <vkGetSwapchainImagesKHR@plt>:
    31f0:	ff 25 ea ae 00 00    	jmp    *0xaeea(%rip)        # e0e0 <vkGetSwapchainImagesKHR@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>:
    3200:	ff 25 e2 ae 00 00    	jmp    *0xaee2(%rip)        # e0e8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@GLIBCXX_3.4>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <vkCreateRenderPass@plt>:
    3210:	ff 25 da ae 00 00    	jmp    *0xaeda(%rip)        # e0f0 <vkCreateRenderPass@Base>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <_ZNSo5flushEv@plt>:
    3220:	ff 25 d2 ae 00 00    	jmp    *0xaed2(%rip)        # e0f8 <_ZNSo5flushEv@GLIBCXX_3.4>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <_ZSt19__throw_logic_errorPKc@plt>:
    3230:	ff 25 ca ae 00 00    	jmp    *0xaeca(%rip)        # e100 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <__cxa_free_exception@plt>:
    3240:	ff 25 c2 ae 00 00    	jmp    *0xaec2(%rip)        # e108 <__cxa_free_exception@CXXABI_1.3>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    3250:	ff 25 ba ae 00 00    	jmp    *0xaeba(%rip)        # e110 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <glfwGetRequiredInstanceExtensions@plt>:
    3260:	ff 25 b2 ae 00 00    	jmp    *0xaeb2(%rip)        # e118 <glfwGetRequiredInstanceExtensions@Base>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <vkCreateShaderModule@plt>:
    3270:	ff 25 aa ae 00 00    	jmp    *0xaeaa(%rip)        # e120 <vkCreateShaderModule@Base>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <memcpy@plt>:
    3280:	ff 25 a2 ae 00 00    	jmp    *0xaea2(%rip)        # e128 <memcpy@GLIBC_2.14>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <vkDestroyDevice@plt>:
    3290:	ff 25 9a ae 00 00    	jmp    *0xae9a(%rip)        # e130 <vkDestroyDevice@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <vkCreatePipelineLayout@plt>:
    32a0:	ff 25 92 ae 00 00    	jmp    *0xae92(%rip)        # e138 <vkCreatePipelineLayout@Base>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <vkEnumerateInstanceExtensionProperties@plt>:
    32b0:	ff 25 8a ae 00 00    	jmp    *0xae8a(%rip)        # e140 <vkEnumerateInstanceExtensionProperties@Base>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <glfwWindowHint@plt>:
    32c0:	ff 25 82 ae 00 00    	jmp    *0xae82(%rip)        # e148 <glfwWindowHint@Base>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    32d0:	ff 25 7a ae 00 00    	jmp    *0xae7a(%rip)        # e150 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <vkCmdBindPipeline@plt>:
    32e0:	ff 25 72 ae 00 00    	jmp    *0xae72(%rip)        # e158 <vkCmdBindPipeline@Base>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <__cxa_atexit@plt>:
    32f0:	ff 25 6a ae 00 00    	jmp    *0xae6a(%rip)        # e160 <__cxa_atexit@GLIBC_2.2.5>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode@plt>:
    3300:	ff 25 62 ae 00 00    	jmp    *0xae62(%rip)        # e168 <_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode@GLIBCXX_3.4>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <vkAllocateCommandBuffers@plt>:
    3310:	ff 25 5a ae 00 00    	jmp    *0xae5a(%rip)        # e170 <vkAllocateCommandBuffers@Base>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <vkGetInstanceProcAddr@plt>:
    3320:	ff 25 52 ae 00 00    	jmp    *0xae52(%rip)        # e178 <vkGetInstanceProcAddr@Base>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <glfwPollEvents@plt>:
    3330:	ff 25 4a ae 00 00    	jmp    *0xae4a(%rip)        # e180 <glfwPollEvents@Base>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <vkDestroyRenderPass@plt>:
    3340:	ff 25 42 ae 00 00    	jmp    *0xae42(%rip)        # e188 <vkDestroyRenderPass@Base>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <vkCreateBuffer@plt>:
    3350:	ff 25 3a ae 00 00    	jmp    *0xae3a(%rip)        # e190 <vkCreateBuffer@Base>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    3360:	ff 25 32 ae 00 00    	jmp    *0xae32(%rip)        # e198 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <_Znwm@plt>:
    3370:	ff 25 2a ae 00 00    	jmp    *0xae2a(%rip)        # e1a0 <_Znwm@GLIBCXX_3.4>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <vkBeginCommandBuffer@plt>:
    3380:	ff 25 22 ae 00 00    	jmp    *0xae22(%rip)        # e1a8 <vkBeginCommandBuffer@Base>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <_ZdlPvm@plt>:
    3390:	ff 25 1a ae 00 00    	jmp    *0xae1a(%rip)        # e1b0 <_ZdlPvm@CXXABI_1.3.9>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <vkDestroyInstance@plt>:
    33a0:	ff 25 12 ae 00 00    	jmp    *0xae12(%rip)        # e1b8 <vkDestroyInstance@Base>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <glfwTerminate@plt>:
    33b0:	ff 25 0a ae 00 00    	jmp    *0xae0a(%rip)        # e1c0 <glfwTerminate@Base>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev@plt>:
    33c0:	ff 25 02 ae 00 00    	jmp    *0xae02(%rip)        # e1c8 <_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <vkCreateImageView@plt>:
    33d0:	ff 25 fa ad 00 00    	jmp    *0xadfa(%rip)        # e1d0 <vkCreateImageView@Base>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    33e0:	ff 25 f2 ad 00 00    	jmp    *0xadf2(%rip)        # e1d8 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    33f0:	ff 25 ea ad 00 00    	jmp    *0xadea(%rip)        # e1e0 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <vkDestroyFence@plt>:
    3400:	ff 25 e2 ad 00 00    	jmp    *0xade2(%rip)        # e1e8 <vkDestroyFence@Base>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <vkDestroyPipeline@plt>:
    3410:	ff 25 da ad 00 00    	jmp    *0xadda(%rip)        # e1f0 <vkDestroyPipeline@Base>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <vkEnumerateInstanceLayerProperties@plt>:
    3420:	ff 25 d2 ad 00 00    	jmp    *0xadd2(%rip)        # e1f8 <vkEnumerateInstanceLayerProperties@Base>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
    3430:	ff 25 ca ad 00 00    	jmp    *0xadca(%rip)        # e200 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@GLIBCXX_3.4.9>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <_ZNKSt5ctypeIcE13_M_widen_initEv@plt>:
    3440:	ff 25 c2 ad 00 00    	jmp    *0xadc2(%rip)        # e208 <_ZNKSt5ctypeIcE13_M_widen_initEv@GLIBCXX_3.4.11>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <glfwInit@plt>:
    3450:	ff 25 ba ad 00 00    	jmp    *0xadba(%rip)        # e210 <glfwInit@Base>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>:
    3460:	ff 25 b2 ad 00 00    	jmp    *0xadb2(%rip)        # e218 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <vkCreateSwapchainKHR@plt>:
    3470:	ff 25 aa ad 00 00    	jmp    *0xadaa(%rip)        # e220 <vkCreateSwapchainKHR@Base>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <vkDestroyShaderModule@plt>:
    3480:	ff 25 a2 ad 00 00    	jmp    *0xada2(%rip)        # e228 <vkDestroyShaderModule@Base>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <vkCreateInstance@plt>:
    3490:	ff 25 9a ad 00 00    	jmp    *0xad9a(%rip)        # e230 <vkCreateInstance@Base>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <vkCreateFence@plt>:
    34a0:	ff 25 92 ad 00 00    	jmp    *0xad92(%rip)        # e238 <vkCreateFence@Base>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <vkResetCommandBuffer@plt>:
    34b0:	ff 25 8a ad 00 00    	jmp    *0xad8a(%rip)        # e240 <vkResetCommandBuffer@Base>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <vkDestroyPipelineLayout@plt>:
    34c0:	ff 25 82 ad 00 00    	jmp    *0xad82(%rip)        # e248 <vkDestroyPipelineLayout@Base>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <_ZNSi4readEPcl@plt>:
    34d0:	ff 25 7a ad 00 00    	jmp    *0xad7a(%rip)        # e250 <_ZNSi4readEPcl@GLIBCXX_3.4>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <_ZSt16__throw_bad_castv@plt>:
    34e0:	ff 25 72 ad 00 00    	jmp    *0xad72(%rip)        # e258 <_ZSt16__throw_bad_castv@GLIBCXX_3.4>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    34f0:	ff 25 6a ad 00 00    	jmp    *0xad6a(%rip)        # e260 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    3500:	ff 25 62 ad 00 00    	jmp    *0xad62(%rip)        # e268 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    3510:	ff 25 5a ad 00 00    	jmp    *0xad5a(%rip)        # e270 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <vkQueueSubmit@plt>:
    3520:	ff 25 52 ad 00 00    	jmp    *0xad52(%rip)        # e278 <vkQueueSubmit@Base>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003530 <vkGetDeviceQueue@plt>:
    3530:	ff 25 4a ad 00 00    	jmp    *0xad4a(%rip)        # e280 <vkGetDeviceQueue@Base>
    3536:	68 50 00 00 00       	push   $0x50
    353b:	e9 e0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003540 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>:
    3540:	ff 25 42 ad 00 00    	jmp    *0xad42(%rip)        # e288 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@GLIBCXX_3.4>
    3546:	68 51 00 00 00       	push   $0x51
    354b:	e9 d0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003550 <vkCreateFramebuffer@plt>:
    3550:	ff 25 3a ad 00 00    	jmp    *0xad3a(%rip)        # e290 <vkCreateFramebuffer@Base>
    3556:	68 52 00 00 00       	push   $0x52
    355b:	e9 c0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003560 <glfwGetWindowUserPointer@plt>:
    3560:	ff 25 32 ad 00 00    	jmp    *0xad32(%rip)        # e298 <glfwGetWindowUserPointer@Base>
    3566:	68 53 00 00 00       	push   $0x53
    356b:	e9 b0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003570 <vkEnumerateDeviceExtensionProperties@plt>:
    3570:	ff 25 2a ad 00 00    	jmp    *0xad2a(%rip)        # e2a0 <vkEnumerateDeviceExtensionProperties@Base>
    3576:	68 54 00 00 00       	push   $0x54
    357b:	e9 a0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003580 <vkCreateSemaphore@plt>:
    3580:	ff 25 22 ad 00 00    	jmp    *0xad22(%rip)        # e2a8 <vkCreateSemaphore@Base>
    3586:	68 55 00 00 00       	push   $0x55
    358b:	e9 90 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003590 <vkCmdBeginRenderPass@plt>:
    3590:	ff 25 1a ad 00 00    	jmp    *0xad1a(%rip)        # e2b0 <vkCmdBeginRenderPass@Base>
    3596:	68 56 00 00 00       	push   $0x56
    359b:	e9 80 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035a0 <vkDestroyCommandPool@plt>:
    35a0:	ff 25 12 ad 00 00    	jmp    *0xad12(%rip)        # e2b8 <vkDestroyCommandPool@Base>
    35a6:	68 57 00 00 00       	push   $0x57
    35ab:	e9 70 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035b0 <strcmp@plt>:
    35b0:	ff 25 0a ad 00 00    	jmp    *0xad0a(%rip)        # e2c0 <strcmp@GLIBC_2.2.5>
    35b6:	68 58 00 00 00       	push   $0x58
    35bb:	e9 60 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035c0 <_ZNSt6localeD1Ev@plt>:
    35c0:	ff 25 02 ad 00 00    	jmp    *0xad02(%rip)        # e2c8 <_ZNSt6localeD1Ev@GLIBCXX_3.4>
    35c6:	68 59 00 00 00       	push   $0x59
    35cb:	e9 50 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035d0 <__cxa_rethrow@plt>:
    35d0:	ff 25 fa ac 00 00    	jmp    *0xacfa(%rip)        # e2d0 <__cxa_rethrow@CXXABI_1.3>
    35d6:	68 5a 00 00 00       	push   $0x5a
    35db:	e9 40 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035e0 <vkCreateDevice@plt>:
    35e0:	ff 25 f2 ac 00 00    	jmp    *0xacf2(%rip)        # e2d8 <vkCreateDevice@Base>
    35e6:	68 5b 00 00 00       	push   $0x5b
    35eb:	e9 30 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035f0 <glfwSetFramebufferSizeCallback@plt>:
    35f0:	ff 25 ea ac 00 00    	jmp    *0xacea(%rip)        # e2e0 <glfwSetFramebufferSizeCallback@Base>
    35f6:	68 5c 00 00 00       	push   $0x5c
    35fb:	e9 20 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003600 <_ZNSt8ios_base4InitC1Ev@plt>:
    3600:	ff 25 e2 ac 00 00    	jmp    *0xace2(%rip)        # e2e8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3606:	68 5d 00 00 00       	push   $0x5d
    360b:	e9 10 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003610 <glfwCreateWindowSurface@plt>:
    3610:	ff 25 da ac 00 00    	jmp    *0xacda(%rip)        # e2f0 <glfwCreateWindowSurface@Base>
    3616:	68 5e 00 00 00       	push   $0x5e
    361b:	e9 00 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
    3620:	ff 25 d2 ac 00 00    	jmp    *0xacd2(%rip)        # e2f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@GLIBCXX_3.4.21>
    3626:	68 5f 00 00 00       	push   $0x5f
    362b:	e9 f0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003630 <vkResetFences@plt>:
    3630:	ff 25 ca ac 00 00    	jmp    *0xacca(%rip)        # e300 <vkResetFences@Base>
    3636:	68 60 00 00 00       	push   $0x60
    363b:	e9 e0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003640 <glfwCreateWindow@plt>:
    3640:	ff 25 c2 ac 00 00    	jmp    *0xacc2(%rip)        # e308 <glfwCreateWindow@Base>
    3646:	68 61 00 00 00       	push   $0x61
    364b:	e9 d0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003650 <_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev@plt>:
    3650:	ff 25 ba ac 00 00    	jmp    *0xacba(%rip)        # e310 <_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    3656:	68 62 00 00 00       	push   $0x62
    365b:	e9 c0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003660 <vkQueuePresentKHR@plt>:
    3660:	ff 25 b2 ac 00 00    	jmp    *0xacb2(%rip)        # e318 <vkQueuePresentKHR@Base>
    3666:	68 63 00 00 00       	push   $0x63
    366b:	e9 b0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003670 <glfwGetFramebufferSize@plt>:
    3670:	ff 25 aa ac 00 00    	jmp    *0xacaa(%rip)        # e320 <glfwGetFramebufferSize@Base>
    3676:	68 64 00 00 00       	push   $0x64
    367b:	e9 a0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003680 <_ZNSo9_M_insertIdEERSoT_@plt>:
    3680:	ff 25 a2 ac 00 00    	jmp    *0xaca2(%rip)        # e328 <_ZNSo9_M_insertIdEERSoT_@GLIBCXX_3.4.9>
    3686:	68 65 00 00 00       	push   $0x65
    368b:	e9 90 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003690 <memmove@plt>:
    3690:	ff 25 9a ac 00 00    	jmp    *0xac9a(%rip)        # e330 <memmove@GLIBC_2.2.5>
    3696:	68 66 00 00 00       	push   $0x66
    369b:	e9 80 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036a0 <__cxa_end_catch@plt>:
    36a0:	ff 25 92 ac 00 00    	jmp    *0xac92(%rip)        # e338 <__cxa_end_catch@CXXABI_1.3>
    36a6:	68 67 00 00 00       	push   $0x67
    36ab:	e9 70 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036b0 <vkDestroyFramebuffer@plt>:
    36b0:	ff 25 8a ac 00 00    	jmp    *0xac8a(%rip)        # e340 <vkDestroyFramebuffer@Base>
    36b6:	68 68 00 00 00       	push   $0x68
    36bb:	e9 60 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036c0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>:
    36c0:	ff 25 82 ac 00 00    	jmp    *0xac82(%rip)        # e348 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@GLIBCXX_3.4>
    36c6:	68 69 00 00 00       	push   $0x69
    36cb:	e9 50 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036d0 <__cxa_throw@plt>:
    36d0:	ff 25 7a ac 00 00    	jmp    *0xac7a(%rip)        # e350 <__cxa_throw@CXXABI_1.3>
    36d6:	68 6a 00 00 00       	push   $0x6a
    36db:	e9 40 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036e0 <_ZNSi5tellgEv@plt>:
    36e0:	ff 25 72 ac 00 00    	jmp    *0xac72(%rip)        # e358 <_ZNSi5tellgEv@GLIBCXX_3.4>
    36e6:	68 6b 00 00 00       	push   $0x6b
    36eb:	e9 30 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036f0 <vkDestroySurfaceKHR@plt>:
    36f0:	ff 25 6a ac 00 00    	jmp    *0xac6a(%rip)        # e360 <vkDestroySurfaceKHR@Base>
    36f6:	68 6c 00 00 00       	push   $0x6c
    36fb:	e9 20 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003700 <_Unwind_Resume@plt>:
    3700:	ff 25 62 ac 00 00    	jmp    *0xac62(%rip)        # e368 <_Unwind_Resume@GCC_3.0>
    3706:	68 6d 00 00 00       	push   $0x6d
    370b:	e9 10 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003710 <vkDestroyImageView@plt>:
    3710:	ff 25 5a ac 00 00    	jmp    *0xac5a(%rip)        # e370 <vkDestroyImageView@Base>
    3716:	68 6e 00 00 00       	push   $0x6e
    371b:	e9 00 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    3720:	ff 25 52 ac 00 00    	jmp    *0xac52(%rip)        # e378 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    3726:	68 6f 00 00 00       	push   $0x6f
    372b:	e9 f0 f8 ff ff       	jmp    3020 <_init+0x20>

0000000000003730 <_ZNSt9exceptionD2Ev@plt>:
    3730:	ff 25 4a ac 00 00    	jmp    *0xac4a(%rip)        # e380 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    3736:	68 70 00 00 00       	push   $0x70
    373b:	e9 e0 f8 ff ff       	jmp    3020 <_init+0x20>

0000000000003740 <_ZNSt12__basic_fileIcED1Ev@plt>:
    3740:	ff 25 42 ac 00 00    	jmp    *0xac42(%rip)        # e388 <_ZNSt12__basic_fileIcED1Ev@GLIBCXX_3.4>
    3746:	68 71 00 00 00       	push   $0x71
    374b:	e9 d0 f8 ff ff       	jmp    3020 <_init+0x20>

0000000000003750 <glfwWindowShouldClose@plt>:
    3750:	ff 25 3a ac 00 00    	jmp    *0xac3a(%rip)        # e390 <glfwWindowShouldClose@Base>
    3756:	68 72 00 00 00       	push   $0x72
    375b:	e9 c0 f8 ff ff       	jmp    3020 <_init+0x20>

0000000000003760 <vkEndCommandBuffer@plt>:
    3760:	ff 25 32 ac 00 00    	jmp    *0xac32(%rip)        # e398 <vkEndCommandBuffer@Base>
    3766:	68 73 00 00 00       	push   $0x73
    376b:	e9 b0 f8 ff ff       	jmp    3020 <_init+0x20>

0000000000003770 <vkCmdDraw@plt>:
    3770:	ff 25 2a ac 00 00    	jmp    *0xac2a(%rip)        # e3a0 <vkCmdDraw@Base>
    3776:	68 74 00 00 00       	push   $0x74
    377b:	e9 a0 f8 ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003780 <__cxa_finalize@plt>:
    3780:	ff 25 2a a8 00 00    	jmp    *0xa82a(%rip)        # dfb0 <__cxa_finalize@GLIBC_2.2.5>
    3786:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003790 <_Z14protected_mainiPPc.cold>:
int protected_main([[maybe_unused]] int argc, [[maybe_unused]] char **argv) {
  rtvc::RenderApplication app;
  app.run();

  return EXIT_SUCCESS;
}
    3790:	48 89 df             	mov    %rbx,%rdi
    3793:	e8 a8 10 00 00       	call   4840 <_ZN4rtvc17RenderApplicationD1Ev>
    3798:	48 89 ef             	mov    %rbp,%rdi
    379b:	e8 60 ff ff ff       	call   3700 <_Unwind_Resume@plt>

      _GLIBCXX20_CONSTEXPR
      ~_Vector_base() _GLIBCXX_NOEXCEPT
      {
	_M_deallocate(_M_impl._M_start,
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    37a0:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    37a5:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
    37aa:	48 29 fe             	sub    %rdi,%rsi
      _GLIBCXX20_CONSTEXPR
      void
      _M_deallocate(pointer __p, size_t __n)
      {
	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
	if (__p)
    37ad:	48 85 ff             	test   %rdi,%rdi
    37b0:	74 05                	je     37b7 <_Z14protected_mainiPPc.cold+0x27>
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    37b2:	e8 d9 fb ff ff       	call   3390 <_ZdlPvm@plt>
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    37b7:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    37bc:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    37c1:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    37c4:	48 85 ff             	test   %rdi,%rdi
    37c7:	74 05                	je     37ce <_Z14protected_mainiPPc.cold+0x3e>
    37c9:	e8 c2 fb ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    37ce:	48 89 df             	mov    %rbx,%rdi
    37d1:	e8 2a ff ff ff       	call   3700 <_Unwind_Resume@plt>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    37d6:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    37db:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    37e0:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    37e3:	48 85 ff             	test   %rdi,%rdi
    37e6:	74 05                	je     37ed <_Z14protected_mainiPPc.cold+0x5d>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    37e8:	e8 a3 fb ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    37ed:	48 89 df             	mov    %rbx,%rdi
    37f0:	e8 0b ff ff ff       	call   3700 <_Unwind_Resume@plt>

00000000000037f5 <main.cold>:
    37f5:	48 83 e8 01          	sub    $0x1,%rax
    37f9:	74 27                	je     3822 <main.cold+0x2d>
int main([[maybe_unused]] int argc, [[maybe_unused]] char **argv) {
  try {
    return protected_main(argc, argv);
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    37fb:	e8 10 f9 ff ff       	call   3110 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    3800:	48 8d 35 2a 68 00 00 	lea    0x682a(%rip),%rsi        # a031 <_IO_stdin_used+0x31>
    3807:	48 8d 3d 12 ad 00 00 	lea    0xad12(%rip),%rdi        # e520 <_ZSt4cerr@GLIBCXX_3.4>
    380e:	e8 4d fb ff ff       	call   3360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    3813:	e8 88 fe ff ff       	call   36a0 <__cxa_end_catch@plt>
  return EXIT_FAILURE;
    3818:	b8 01 00 00 00       	mov    $0x1,%eax
    381d:	e9 88 0a 00 00       	jmp    42aa <main+0xa>
  } catch (const std::exception &e) {
    3822:	e8 e9 f8 ff ff       	call   3110 <__cxa_begin_catch@plt>
    3827:	48 89 c7             	mov    %rax,%rdi
    std::cerr << e.what() << '\n';
    382a:	48 8b 00             	mov    (%rax),%rax
    382d:	ff 50 10             	call   *0x10(%rax)
    3830:	48 8d 3d e9 ac 00 00 	lea    0xace9(%rip),%rdi        # e520 <_ZSt4cerr@GLIBCXX_3.4>
    3837:	48 89 c6             	mov    %rax,%rsi
    383a:	e8 21 fb ff ff       	call   3360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    383f:	48 89 c7             	mov    %rax,%rdi
  // Specialization
  template<typename _Traits>
    inline basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, char __c)
    {
      if (__out.width() != 0)
    3842:	48 8b 00             	mov    (%rax),%rax
    3845:	c6 44 24 0f 0a       	movb   $0xa,0xf(%rsp)
     *
     *  <em>Minimum field width</em> refers to the number of characters.
    */
    streamsize
    width() const
    { return _M_width; }
    384a:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    384e:	48 83 7c 07 10 00    	cmpq   $0x0,0x10(%rdi,%rax,1)
    3854:	75 21                	jne    3877 <main.cold+0x82>
	return __ostream_insert(__out, &__c, 1);
      __out.put(__c);
    3856:	be 0a 00 00 00       	mov    $0xa,%esi
    385b:	e8 d0 f7 ff ff       	call   3030 <_ZNSo3putEc@plt>
  } catch (...) {
    3860:	e8 3b fe ff ff       	call   36a0 <__cxa_end_catch@plt>
    3865:	eb b1                	jmp    3818 <main.cold+0x23>
  }
    3867:	48 89 c3             	mov    %rax,%rbx
    386a:	e8 31 fe ff ff       	call   36a0 <__cxa_end_catch@plt>
    386f:	48 89 df             	mov    %rbx,%rdi
    3872:	e8 89 fe ff ff       	call   3700 <_Unwind_Resume@plt>
	return __ostream_insert(__out, &__c, 1);
    3877:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
    387c:	ba 01 00 00 00       	mov    $0x1,%edx
    3881:	e8 aa fb ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    3886:	eb d8                	jmp    3860 <main.cold+0x6b>
  } catch (...) {
    3888:	48 89 c3             	mov    %rax,%rbx
    388b:	e8 10 fe ff ff       	call   36a0 <__cxa_end_catch@plt>
    3890:	48 89 df             	mov    %rbx,%rdi
    3893:	e8 68 fe ff ff       	call   3700 <_Unwind_Resume@plt>

0000000000003898 <_GLOBAL__sub_I__Z14protected_mainiPPc.cold>:
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3898:	48 8b 3d a1 ad 00 00 	mov    0xada1(%rip),%rdi        # e640 <_ZN4rtvc9resources7shaders8triangleE>
    389f:	48 8b 35 aa ad 00 00 	mov    0xadaa(%rip),%rsi        # e650 <_ZN4rtvc9resources7shaders8triangleE+0x10>
    38a6:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    38a9:	48 85 ff             	test   %rdi,%rdi
    38ac:	74 05                	je     38b3 <_GLOBAL__sub_I__Z14protected_mainiPPc.cold+0x1b>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    38ae:	e8 dd fa ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    38b3:	48 89 df             	mov    %rbx,%rdi
    38b6:	e8 45 fe ff ff       	call   3700 <_Unwind_Resume@plt>

00000000000038bb <_ZSt27__throw_bad_optional_accessv>:
  };

  // XXX Does not belong here.
  [[__noreturn__]] inline void
  __throw_bad_optional_access()
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    38bb:	50                   	push   %rax
    38bc:	bf 08 00 00 00       	mov    $0x8,%edi
    38c1:	e8 aa f8 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    38c6:	48 8d 15 93 50 00 00 	lea    0x5093(%rip),%rdx        # 8960 <_ZNSt19bad_optional_accessD1Ev>
    38cd:	48 8d 35 a4 a4 00 00 	lea    0xa4a4(%rip),%rsi        # dd78 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    38d4:	48 89 c7             	mov    %rax,%rdi
    bad_optional_access() = default;
    38d7:	48 8d 05 b2 a2 00 00 	lea    0xa2b2(%rip),%rax        # db90 <_ZTVSt19bad_optional_access+0x10>
    38de:	48 89 07             	mov    %rax,(%rdi)
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    38e1:	e8 ea fd ff ff       	call   36d0 <__cxa_throw@plt>

00000000000038e6 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv.cold>:
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    38e6:	48 8b 3b             	mov    (%rbx),%rdi
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    38e9:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    38ed:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    38f0:	48 85 ff             	test   %rdi,%rdi
    38f3:	74 05                	je     38fa <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv.cold+0x14>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    38f5:	e8 96 fa ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    38fa:	48 89 ef             	mov    %rbp,%rdi
    38fd:	e8 fe fd ff ff       	call   3700 <_Unwind_Resume@plt>

0000000000003902 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv.cold>:
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3902:	48 8b 3b             	mov    (%rbx),%rdi
    3905:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    3909:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    390c:	48 85 ff             	test   %rdi,%rdi
    390f:	74 05                	je     3916 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv.cold+0x14>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3911:	e8 7a fa ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3916:	48 89 ef             	mov    %rbp,%rdi
    3919:	e8 e2 fd ff ff       	call   3700 <_Unwind_Resume@plt>

000000000000391e <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv.cold>:
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    391e:	4c 89 ef             	mov    %r13,%rdi
    3921:	4c 89 e6             	mov    %r12,%rsi
    3924:	e8 67 fa ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3929:	48 89 df             	mov    %rbx,%rdi
    392c:	e8 cf fd ff ff       	call   3700 <_Unwind_Resume@plt>
    3931:	90                   	nop

0000000000003932 <_ZN4rtvc17RenderApplication13creatInstanceEv.cold>:
    createInfo.enabledLayerCount = 0;
    createInfo.pNext = nullptr;
  }

  if (vkCreateInstance(&createInfo, nullptr, &instance) != VK_SUCCESS)
    throw std::runtime_error("Failed to create instance.");
    3932:	bf 10 00 00 00       	mov    $0x10,%edi
    3937:	e8 34 f8 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    393c:	48 8d 35 a9 67 00 00 	lea    0x67a9(%rip),%rsi        # a0ec <_IO_stdin_used+0xec>
    3943:	48 89 c7             	mov    %rax,%rdi
    3946:	48 89 c5             	mov    %rax,%rbp
    3949:	e8 b2 f7 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    394e:	48 8b 15 6b a6 00 00 	mov    0xa66b(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3955:	48 8d 35 04 a4 00 00 	lea    0xa404(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    395c:	48 89 ef             	mov    %rbp,%rdi
    395f:	e8 6c fd ff ff       	call   36d0 <__cxa_throw@plt>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3964:	48 89 c3             	mov    %rax,%rbx
    3967:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    396c:	4c 29 fe             	sub    %r15,%rsi
	if (__p)
    396f:	4d 85 ff             	test   %r15,%r15
    3972:	74 08                	je     397c <_ZN4rtvc17RenderApplication13creatInstanceEv.cold+0x4a>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3974:	4c 89 ff             	mov    %r15,%rdi
    3977:	e8 14 fa ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    397c:	48 89 df             	mov    %rbx,%rdi
    397f:	e8 7c fd ff ff       	call   3700 <_Unwind_Resume@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3984:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3989:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    398e:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    3991:	48 85 ff             	test   %rdi,%rdi
    3994:	74 d1                	je     3967 <_ZN4rtvc17RenderApplication13creatInstanceEv.cold+0x35>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3996:	e8 f5 f9 ff ff       	call   3390 <_ZdlPvm@plt>
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
      { __a.deallocate(__p, __n); }
    399b:	eb ca                	jmp    3967 <_ZN4rtvc17RenderApplication13creatInstanceEv.cold+0x35>
    399d:	48 89 ef             	mov    %rbp,%rdi
    39a0:	48 89 c3             	mov    %rax,%rbx
    39a3:	e8 98 f8 ff ff       	call   3240 <__cxa_free_exception@plt>
    39a8:	eb bd                	jmp    3967 <_ZN4rtvc17RenderApplication13creatInstanceEv.cold+0x35>

00000000000039aa <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T.cold>:
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    39aa:	be 18 00 00 00       	mov    $0x18,%esi
    39af:	4c 89 f7             	mov    %r14,%rdi
    39b2:	e8 d9 f9 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    39b7:	48 89 df             	mov    %rbx,%rdi
    39ba:	e8 41 fd ff ff       	call   3700 <_Unwind_Resume@plt>
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    39bf:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
	if (__p)
    39c4:	4d 85 f6             	test   %r14,%r14
    39c7:	75 e6                	jne    39af <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T.cold+0x5>
    39c9:	eb ec                	jmp    39b7 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T.cold+0xd>
    39cb:	90                   	nop

00000000000039cc <_ZN4rtvc17RenderApplication13createSurfaceEv.cold>:
}

void rtvc::RenderApplication::createSurface() {
  if (glfwCreateWindowSurface(instance, window, nullptr, &surface) !=
      VK_SUCCESS)
    throw std::runtime_error("Failed to create window surface.");
    39cc:	bf 10 00 00 00       	mov    $0x10,%edi
    39d1:	e8 9a f7 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    39d6:	48 8d 35 33 68 00 00 	lea    0x6833(%rip),%rsi        # a210 <_IO_stdin_used+0x210>
    39dd:	48 89 c7             	mov    %rax,%rdi
    39e0:	48 89 c3             	mov    %rax,%rbx
    39e3:	e8 18 f7 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    39e8:	48 8b 15 d1 a5 00 00 	mov    0xa5d1(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    39ef:	48 8d 35 6a a3 00 00 	lea    0xa36a(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    39f6:	48 89 df             	mov    %rbx,%rdi
    39f9:	e8 d2 fc ff ff       	call   36d0 <__cxa_throw@plt>
    39fe:	48 89 c5             	mov    %rax,%rbp
    3a01:	48 89 df             	mov    %rbx,%rdi
    3a04:	e8 37 f8 ff ff       	call   3240 <__cxa_free_exception@plt>
    3a09:	48 89 ef             	mov    %rbp,%rdi
    3a0c:	e8 ef fc ff ff       	call   3700 <_Unwind_Resume@plt>
    3a11:	90                   	nop

0000000000003a12 <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE.cold>:
  createInfo.pCode = reinterpret_cast<const uint32_t *>(code.data());

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
      VK_SUCCESS)
    throw std::runtime_error("Failed to create shader module.");
    3a12:	bf 10 00 00 00       	mov    $0x10,%edi
    3a17:	e8 54 f7 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3a1c:	48 8d 35 15 68 00 00 	lea    0x6815(%rip),%rsi        # a238 <_IO_stdin_used+0x238>
    3a23:	48 89 c7             	mov    %rax,%rdi
    3a26:	48 89 c3             	mov    %rax,%rbx
    3a29:	e8 d2 f6 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3a2e:	48 8b 15 8b a5 00 00 	mov    0xa58b(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3a35:	48 8d 35 24 a3 00 00 	lea    0xa324(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3a3c:	48 89 df             	mov    %rbx,%rdi
    3a3f:	e8 8c fc ff ff       	call   36d0 <__cxa_throw@plt>
    3a44:	48 89 c5             	mov    %rax,%rbp
    3a47:	48 89 df             	mov    %rbx,%rdi
    3a4a:	e8 f1 f7 ff ff       	call   3240 <__cxa_free_exception@plt>
    3a4f:	48 89 ef             	mov    %rbp,%rdi
    3a52:	e8 a9 fc ff ff       	call   3700 <_Unwind_Resume@plt>
    3a57:	90                   	nop

0000000000003a58 <_ZN4rtvc17RenderApplication16createRenderPassEv.cold>:
  renderPassInfo.dependencyCount = 1;
  renderPassInfo.pDependencies = &dependency;

  if (vkCreateRenderPass(device, &renderPassInfo, nullptr, &renderPass) !=
      VK_SUCCESS)
    throw std::runtime_error("Failed to create render pass.");
    3a58:	bf 10 00 00 00       	mov    $0x10,%edi
    3a5d:	e8 0e f7 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3a62:	48 8d 35 cb 66 00 00 	lea    0x66cb(%rip),%rsi        # a134 <_IO_stdin_used+0x134>
    3a69:	48 89 c7             	mov    %rax,%rdi
    3a6c:	48 89 c3             	mov    %rax,%rbx
    3a6f:	e8 8c f6 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3a74:	48 8b 15 45 a5 00 00 	mov    0xa545(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3a7b:	48 8d 35 de a2 00 00 	lea    0xa2de(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3a82:	48 89 df             	mov    %rbx,%rdi
    3a85:	e8 46 fc ff ff       	call   36d0 <__cxa_throw@plt>
    3a8a:	48 89 c5             	mov    %rax,%rbp
    3a8d:	48 89 df             	mov    %rbx,%rdi
    3a90:	e8 ab f7 ff ff       	call   3240 <__cxa_free_exception@plt>
    3a95:	48 89 ef             	mov    %rbp,%rdi
    3a98:	e8 63 fc ff ff       	call   3700 <_Unwind_Resume@plt>
    3a9d:	90                   	nop

0000000000003a9e <_ZN4rtvc17RenderApplication17createCommandPoolEv.cold>:
      constexpr _Tp&
      value()&
      {
	if (this->_M_is_engaged())
	  return this->_M_get();
	__throw_bad_optional_access();
    3a9e:	e8 18 fe ff ff       	call   38bb <_ZSt27__throw_bad_optional_accessv>
  poolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
  poolInfo.queueFamilyIndex = queueFamilyIndices.graphicsFamily.value();

  if (vkCreateCommandPool(device, &poolInfo, nullptr, &commandPool) !=
      VK_SUCCESS)
    throw std::runtime_error("Failed to create command pool.");
    3aa3:	bf 10 00 00 00       	mov    $0x10,%edi
    3aa8:	e8 c3 f6 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3aad:	48 8d 35 a4 67 00 00 	lea    0x67a4(%rip),%rsi        # a258 <_IO_stdin_used+0x258>
    3ab4:	48 89 c7             	mov    %rax,%rdi
    3ab7:	48 89 c3             	mov    %rax,%rbx
    3aba:	e8 41 f6 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3abf:	48 8b 15 fa a4 00 00 	mov    0xa4fa(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3ac6:	48 8d 35 93 a2 00 00 	lea    0xa293(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3acd:	48 89 df             	mov    %rbx,%rdi
    3ad0:	e8 fb fb ff ff       	call   36d0 <__cxa_throw@plt>
    3ad5:	48 89 c5             	mov    %rax,%rbp
    3ad8:	48 89 df             	mov    %rbx,%rdi
    3adb:	e8 60 f7 ff ff       	call   3240 <__cxa_free_exception@plt>
    3ae0:	48 89 ef             	mov    %rbp,%rdi
    3ae3:	e8 18 fc ff ff       	call   3700 <_Unwind_Resume@plt>

0000000000003ae8 <_ZN4rtvc17RenderApplication19createVertexBuffersEv.cold>:
  bufferInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
  bufferInfo.flags = 0;

  if (vkCreateBuffer(device, &bufferInfo, nullptr, &vertexBuffer) !=
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create vertex buffer.");
    3ae8:	bf 10 00 00 00       	mov    $0x10,%edi
    3aed:	e8 7e f6 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3af2:	48 8d 35 7f 67 00 00 	lea    0x677f(%rip),%rsi        # a278 <_IO_stdin_used+0x278>
    3af9:	48 89 c7             	mov    %rax,%rdi
    3afc:	48 89 c3             	mov    %rax,%rbx
    3aff:	e8 fc f5 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3b04:	48 8b 15 b5 a4 00 00 	mov    0xa4b5(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3b0b:	48 8d 35 4e a2 00 00 	lea    0xa24e(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3b12:	48 89 df             	mov    %rbx,%rdi
    3b15:	e8 b6 fb ff ff       	call   36d0 <__cxa_throw@plt>
    3b1a:	48 89 c5             	mov    %rax,%rbp
    3b1d:	48 89 df             	mov    %rbx,%rdi
    3b20:	e8 1b f7 ff ff       	call   3240 <__cxa_free_exception@plt>
    3b25:	48 89 ef             	mov    %rbp,%rdi
    3b28:	e8 d3 fb ff ff       	call   3700 <_Unwind_Resume@plt>
    3b2d:	90                   	nop

0000000000003b2e <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj.cold>:
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
  beginInfo.flags = 0;
  beginInfo.pInheritanceInfo = nullptr;

  if (vkBeginCommandBuffer(commandBuffer, &beginInfo) != VK_SUCCESS)
    throw std::runtime_error("Failed to begin recording command buffer.");
    3b2e:	bf 10 00 00 00       	mov    $0x10,%edi
    3b33:	e8 38 f6 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3b38:	48 8d 35 59 67 00 00 	lea    0x6759(%rip),%rsi        # a298 <_IO_stdin_used+0x298>
    3b3f:	48 89 c7             	mov    %rax,%rdi
    3b42:	48 89 c3             	mov    %rax,%rbx
    3b45:	e8 b6 f5 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3b4a:	48 8b 15 6f a4 00 00 	mov    0xa46f(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3b51:	48 8d 35 08 a2 00 00 	lea    0xa208(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3b58:	48 89 df             	mov    %rbx,%rdi
    3b5b:	e8 70 fb ff ff       	call   36d0 <__cxa_throw@plt>
  vkCmdDraw(commandBuffer, 3, 1, 0, 0);

  vkCmdEndRenderPass(commandBuffer);

  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS)
    throw std::runtime_error("Failed to record command buffer");
    3b60:	bf 10 00 00 00       	mov    $0x10,%edi
    3b65:	e8 06 f6 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3b6a:	48 8d 35 57 67 00 00 	lea    0x6757(%rip),%rsi        # a2c8 <_IO_stdin_used+0x2c8>
    3b71:	48 89 c7             	mov    %rax,%rdi
    3b74:	48 89 c3             	mov    %rax,%rbx
    3b77:	e8 84 f5 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3b7c:	48 8b 15 3d a4 00 00 	mov    0xa43d(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3b83:	48 8d 35 d6 a1 00 00 	lea    0xa1d6(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3b8a:	48 89 df             	mov    %rbx,%rdi
    3b8d:	e8 3e fb ff ff       	call   36d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to begin recording command buffer.");
    3b92:	48 89 c5             	mov    %rax,%rbp
    3b95:	48 89 df             	mov    %rbx,%rdi
    3b98:	e8 a3 f6 ff ff       	call   3240 <__cxa_free_exception@plt>
    3b9d:	48 89 ef             	mov    %rbp,%rdi
    3ba0:	e8 5b fb ff ff       	call   3700 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to record command buffer");
    3ba5:	48 89 c5             	mov    %rax,%rbp
    3ba8:	48 89 df             	mov    %rbx,%rdi
    3bab:	e8 90 f6 ff ff       	call   3240 <__cxa_free_exception@plt>
    3bb0:	48 89 ef             	mov    %rbp,%rdi
    3bb3:	e8 48 fb ff ff       	call   3700 <_Unwind_Resume@plt>

0000000000003bb8 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T.cold>:
    3bb8:	48 89 df             	mov    %rbx,%rdi
    3bbb:	e8 e0 4d 00 00       	call   89a0 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    3bc0:	48 89 ef             	mov    %rbp,%rdi
    3bc3:	e8 38 fb ff ff       	call   3700 <_Unwind_Resume@plt>

0000000000003bc8 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold>:
    throw std::runtime_error("Failed to create logical device.");
    3bc8:	bf 10 00 00 00       	mov    $0x10,%edi
    3bcd:	e8 9e f5 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3bd2:	48 8d 35 0f 67 00 00 	lea    0x670f(%rip),%rsi        # a2e8 <_IO_stdin_used+0x2e8>
    3bd9:	48 89 c7             	mov    %rax,%rdi
    3bdc:	48 89 c5             	mov    %rax,%rbp
    3bdf:	e8 1c f5 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3be4:	48 8b 15 d5 a3 00 00 	mov    0xa3d5(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3beb:	48 8d 35 6e a1 00 00 	lea    0xa16e(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3bf2:	48 89 ef             	mov    %rbp,%rdi
    3bf5:	e8 d6 fa ff ff       	call   36d0 <__cxa_throw@plt>
    3bfa:	e8 bc fc ff ff       	call   38bb <_ZSt27__throw_bad_optional_accessv>
    3bff:	e8 b7 fc ff ff       	call   38bb <_ZSt27__throw_bad_optional_accessv>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3c04:	48 89 c3             	mov    %rax,%rbx
    3c07:	eb 0d                	jmp    3c16 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold+0x4e>
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
      { _M_erase(_M_begin()); }
    3c09:	48 89 c3             	mov    %rax,%rbx
    3c0c:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    3c11:	e8 da 0d 00 00       	call   49f0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0>
    3c16:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3c1b:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    3c20:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    3c23:	48 85 ff             	test   %rdi,%rdi
    3c26:	74 05                	je     3c2d <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold+0x65>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3c28:	e8 63 f7 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3c2d:	48 89 df             	mov    %rbx,%rdi
    3c30:	e8 cb fa ff ff       	call   3700 <_Unwind_Resume@plt>
    3c35:	48 89 ef             	mov    %rbp,%rdi
    3c38:	48 89 c3             	mov    %rax,%rbx
    3c3b:	e8 00 f6 ff ff       	call   3240 <__cxa_free_exception@plt>
    3c40:	eb ca                	jmp    3c0c <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold+0x44>

0000000000003c42 <_ZN4rtvc17RenderApplication15createSwapChainEv.cold>:
    throw std::runtime_error("Failed to create swap chain.");
    3c42:	bf 10 00 00 00       	mov    $0x10,%edi
    3c47:	e8 24 f5 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3c4c:	48 8d 35 1b 65 00 00 	lea    0x651b(%rip),%rsi        # a16e <_IO_stdin_used+0x16e>
    3c53:	48 89 c7             	mov    %rax,%rdi
    3c56:	48 89 c5             	mov    %rax,%rbp
    3c59:	e8 a2 f4 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3c5e:	48 8b 15 5b a3 00 00 	mov    0xa35b(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3c65:	48 8d 35 f4 a0 00 00 	lea    0xa0f4(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3c6c:	48 89 ef             	mov    %rbp,%rdi
    3c6f:	e8 5c fa ff ff       	call   36d0 <__cxa_throw@plt>
}
    3c74:	48 89 c3             	mov    %rax,%rbx
    3c77:	eb 10                	jmp    3c89 <_ZN4rtvc17RenderApplication15createSwapChainEv.cold+0x47>
    3c79:	e8 3d fc ff ff       	call   38bb <_ZSt27__throw_bad_optional_accessv>
    throw std::runtime_error("Failed to create swap chain.");
    3c7e:	48 89 ef             	mov    %rbp,%rdi
    3c81:	48 89 c3             	mov    %rax,%rbx
    3c84:	e8 b7 f5 ff ff       	call   3240 <__cxa_free_exception@plt>
}
    3c89:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    3c8e:	e8 0d 4d 00 00       	call   89a0 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    3c93:	48 89 df             	mov    %rbx,%rdi
    3c96:	e8 65 fa ff ff       	call   3700 <_Unwind_Resume@plt>
    3c9b:	e8 1b fc ff ff       	call   38bb <_ZSt27__throw_bad_optional_accessv>

0000000000003ca0 <_ZN4rtvc17RenderApplication16createImageViewsEv.cold>:
      throw std::runtime_error("Failed to create image view.");
    3ca0:	bf 10 00 00 00       	mov    $0x10,%edi
    3ca5:	e8 c6 f4 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3caa:	48 8d 35 da 64 00 00 	lea    0x64da(%rip),%rsi        # a18b <_IO_stdin_used+0x18b>
    3cb1:	48 89 c7             	mov    %rax,%rdi
    3cb4:	48 89 c3             	mov    %rax,%rbx
    3cb7:	e8 44 f4 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3cbc:	48 8b 15 fd a2 00 00 	mov    0xa2fd(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3cc3:	48 8d 35 96 a0 00 00 	lea    0xa096(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3cca:	48 89 df             	mov    %rbx,%rdi
    3ccd:	e8 fe f9 ff ff       	call   36d0 <__cxa_throw@plt>
    3cd2:	48 89 c5             	mov    %rax,%rbp
    3cd5:	48 89 df             	mov    %rbx,%rdi
    3cd8:	e8 63 f5 ff ff       	call   3240 <__cxa_free_exception@plt>
    3cdd:	48 89 ef             	mov    %rbp,%rdi
    3ce0:	e8 1b fa ff ff       	call   3700 <_Unwind_Resume@plt>
    3ce5:	90                   	nop

0000000000003ce6 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold>:
    throw std::runtime_error("Failed to open shader file");
    3ce6:	bf 10 00 00 00       	mov    $0x10,%edi
    3ceb:	e8 80 f4 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3cf0:	48 8d 35 b1 64 00 00 	lea    0x64b1(%rip),%rsi        # a1a8 <_IO_stdin_used+0x1a8>
    3cf7:	48 89 c7             	mov    %rax,%rdi
    3cfa:	48 89 c5             	mov    %rax,%rbp
    3cfd:	e8 fe f3 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3d02:	48 8b 15 b7 a2 00 00 	mov    0xa2b7(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3d09:	48 8d 35 50 a0 00 00 	lea    0xa050(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3d10:	48 89 ef             	mov    %rbp,%rdi
    3d13:	e8 b8 f9 ff ff       	call   36d0 <__cxa_throw@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3d18:	48 8b 3b             	mov    (%rbx),%rdi
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3d1b:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    3d1f:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    3d22:	48 85 ff             	test   %rdi,%rdi
    3d25:	74 05                	je     3d2c <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0x46>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3d27:	e8 64 f6 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3d2c:	48 89 eb             	mov    %rbp,%rbx
}
    3d2f:	4c 89 e7             	mov    %r12,%rdi
    3d32:	e8 69 f3 ff ff       	call   30a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    3d37:	48 89 df             	mov    %rbx,%rdi
    3d3a:	e8 c1 f9 ff ff       	call   3700 <_Unwind_Resume@plt>
		     ios_base::openmode __mode = ios_base::in)
      : __istream_type(), _M_filebuf()
      {
	this->init(&_M_filebuf);
	this->open(__s, __mode);
      }
    3d3f:	4c 89 f7             	mov    %r14,%rdi
    3d42:	e8 09 f9 ff ff       	call   3650 <_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev@plt>
       *
       *  This does very little apart from providing a virtual base dtor.
      */
      virtual
      ~basic_istream()
      { _M_gcount = streamsize(0); }
    3d47:	49 8b 45 e8          	mov    -0x18(%r13),%rax
    3d4b:	48 8b 0d ee 9f 00 00 	mov    0x9fee(%rip),%rcx        # dd40 <_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE@GLIBCXX_3.4+0x10>
    3d52:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    3d57:	48 89 4c 04 10       	mov    %rcx,0x10(%rsp,%rax,1)
    3d5c:	31 c0                	xor    %eax,%eax
    3d5e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
       *
       *  The destructor does nothing.  More specifically, it does not
       *  destroy the streambuf held by rdbuf().
      */
      virtual
      ~basic_ios() { }
    3d63:	48 8d 05 66 9e 00 00 	lea    0x9e66(%rip),%rax        # dbd0 <_ZTVSt9basic_iosIcSt11char_traitsIcEE@GLIBCXX_3.4+0x10>
    3d6a:	4c 89 ff             	mov    %r15,%rdi
    3d6d:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    3d74:	00 
    3d75:	e8 76 f3 ff ff       	call   30f0 <_ZNSt8ios_baseD2Ev@plt>
    3d7a:	48 89 df             	mov    %rbx,%rdi
    3d7d:	e8 7e f9 ff ff       	call   3700 <_Unwind_Resume@plt>
  size_t fileSize = static_cast<size_t>(file.tellg());
    3d82:	48 89 c3             	mov    %rax,%rbx
    3d85:	eb a8                	jmp    3d2f <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0x49>
    throw std::runtime_error("Failed to open shader file");
    3d87:	48 89 ef             	mov    %rbp,%rdi
    3d8a:	48 89 c3             	mov    %rax,%rbx
    3d8d:	e8 ae f4 ff ff       	call   3240 <__cxa_free_exception@plt>
    3d92:	eb 9b                	jmp    3d2f <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0x49>
	__catch(...)
    3d94:	e8 77 f3 ff ff       	call   3110 <__cxa_begin_catch@plt>
    3d99:	e8 02 f9 ff ff       	call   36a0 <__cxa_end_catch@plt>
    3d9e:	e9 8e 2f 00 00       	jmp    6d31 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c1>
    3da3:	90                   	nop

0000000000003da4 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold>:
    throw std::runtime_error("Failed to create graphics pipeline.");
    3da4:	bf 10 00 00 00       	mov    $0x10,%edi
    3da9:	e8 c2 f3 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3dae:	48 8d 35 bb 65 00 00 	lea    0x65bb(%rip),%rsi        # a370 <_IO_stdin_used+0x370>
    3db5:	48 89 c7             	mov    %rax,%rdi
    3db8:	48 89 c5             	mov    %rax,%rbp
    3dbb:	e8 40 f3 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3dc0:	48 8b 15 f9 a1 00 00 	mov    0xa1f9(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3dc7:	48 8d 35 92 9f 00 00 	lea    0x9f92(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3dce:	48 89 ef             	mov    %rbp,%rdi
    3dd1:	e8 fa f8 ff ff       	call   36d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to create shader module.");
    3dd6:	bf 10 00 00 00       	mov    $0x10,%edi
    3ddb:	e8 90 f3 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3de0:	48 8d 35 51 64 00 00 	lea    0x6451(%rip),%rsi        # a238 <_IO_stdin_used+0x238>
    3de7:	48 89 c7             	mov    %rax,%rdi
    3dea:	48 89 c5             	mov    %rax,%rbp
    3ded:	e8 0e f3 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3df2:	48 8b 15 c7 a1 00 00 	mov    0xa1c7(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3df9:	48 8d 35 60 9f 00 00 	lea    0x9f60(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3e00:	48 89 ef             	mov    %rbp,%rdi
    3e03:	e8 c8 f8 ff ff       	call   36d0 <__cxa_throw@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3e08:	48 89 c3             	mov    %rax,%rbx
    3e0b:	eb 0b                	jmp    3e18 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x74>
    3e0d:	48 89 ef             	mov    %rbp,%rdi
    3e10:	48 89 c3             	mov    %rax,%rbx
    3e13:	e8 28 f4 ff ff       	call   3240 <__cxa_free_exception@plt>
    3e18:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e1d:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    3e22:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    3e25:	48 85 ff             	test   %rdi,%rdi
    3e28:	74 6b                	je     3e95 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0xf1>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3e2a:	e8 61 f5 ff ff       	call   3390 <_ZdlPvm@plt>
    3e2f:	eb 64                	jmp    3e95 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0xf1>
    3e31:	48 89 c3             	mov    %rax,%rbx
    3e34:	be 08 00 00 00       	mov    $0x8,%esi
    3e39:	4c 89 ff             	mov    %r15,%rdi
    3e3c:	e8 4f f5 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3e41:	eb d5                	jmp    3e18 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x74>
    3e43:	bf 10 00 00 00       	mov    $0x10,%edi
    3e48:	e8 23 f3 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3e4d:	48 8d 35 e4 63 00 00 	lea    0x63e4(%rip),%rsi        # a238 <_IO_stdin_used+0x238>
    3e54:	48 89 c7             	mov    %rax,%rdi
    3e57:	48 89 c5             	mov    %rax,%rbp
    3e5a:	e8 a1 f2 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3e5f:	48 8b 15 5a a1 00 00 	mov    0xa15a(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3e66:	48 8d 35 f3 9e 00 00 	lea    0x9ef3(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3e6d:	48 89 ef             	mov    %rbp,%rdi
    3e70:	e8 5b f8 ff ff       	call   36d0 <__cxa_throw@plt>
    3e75:	eb 96                	jmp    3e0d <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x69>
      { _M_string_length = __length; }

      _GLIBCXX20_CONSTEXPR
      pointer
      _M_data() const
      { return _M_dataplus._M_p; }
    3e77:	48 8b bc 24 90 02 00 	mov    0x290(%rsp),%rdi
    3e7e:	00 

      _GLIBCXX20_CONSTEXPR
      void
      _M_dispose()
      {
	if (!_M_is_local())
    3e7f:	4c 39 ef             	cmp    %r13,%rdi
    3e82:	74 11                	je     3e95 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0xf1>
      }

      _GLIBCXX20_CONSTEXPR
      void
      _M_destroy(size_type __size) throw()
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    3e84:	48 8b 84 24 a0 02 00 	mov    0x2a0(%rsp),%rax
    3e8b:	00 
    3e8c:	48 8d 70 01          	lea    0x1(%rax),%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3e90:	e8 fb f4 ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3e95:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e9a:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    3e9f:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    3ea2:	48 85 ff             	test   %rdi,%rdi
    3ea5:	74 05                	je     3eac <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x108>
    3ea7:	e8 e4 f4 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3eac:	48 89 df             	mov    %rbx,%rdi
    3eaf:	e8 4c f8 ff ff       	call   3700 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create graphics pipeline.");
    3eb4:	48 89 ef             	mov    %rbp,%rdi
    3eb7:	48 89 c3             	mov    %rax,%rbx
    3eba:	e8 81 f3 ff ff       	call   3240 <__cxa_free_exception@plt>
    3ebf:	e9 70 ff ff ff       	jmp    3e34 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x90>
    throw std::runtime_error("Failed to create pipeline layout.");
    3ec4:	bf 10 00 00 00       	mov    $0x10,%edi
    3ec9:	e8 a2 f2 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3ece:	48 8d 35 73 64 00 00 	lea    0x6473(%rip),%rsi        # a348 <_IO_stdin_used+0x348>
    3ed5:	48 89 c7             	mov    %rax,%rdi
    3ed8:	48 89 c5             	mov    %rax,%rbp
    3edb:	e8 20 f2 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3ee0:	48 8b 15 d9 a0 00 00 	mov    0xa0d9(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3ee7:	48 8d 35 72 9e 00 00 	lea    0x9e72(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3eee:	48 89 ef             	mov    %rbp,%rdi
    3ef1:	e8 da f7 ff ff       	call   36d0 <__cxa_throw@plt>
      { return _M_dataplus._M_p; }
    3ef6:	48 8b bc 24 90 02 00 	mov    0x290(%rsp),%rdi
    3efd:	00 
	if (!_M_is_local())
    3efe:	4c 39 ef             	cmp    %r13,%rdi
    3f01:	74 11                	je     3f14 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x170>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    3f03:	48 8b 84 24 a0 02 00 	mov    0x2a0(%rsp),%rax
    3f0a:	00 
    3f0b:	48 8d 70 01          	lea    0x1(%rax),%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3f0f:	e8 7c f4 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3f14:	48 89 df             	mov    %rbx,%rdi
    3f17:	e8 e4 f7 ff ff       	call   3700 <_Unwind_Resume@plt>
    3f1c:	eb 96                	jmp    3eb4 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x110>

0000000000003f1e <_ZN4rtvc17RenderApplication18createFramebuffersEv.cold>:
      throw std::runtime_error("Failed to create framebuffer.");
    3f1e:	bf 10 00 00 00       	mov    $0x10,%edi
    3f23:	e8 48 f2 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3f28:	48 8d 35 99 62 00 00 	lea    0x6299(%rip),%rsi        # a1c8 <_IO_stdin_used+0x1c8>
    3f2f:	48 89 c7             	mov    %rax,%rdi
    3f32:	48 89 c3             	mov    %rax,%rbx
    3f35:	e8 c6 f1 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3f3a:	48 8b 15 7f a0 00 00 	mov    0xa07f(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3f41:	48 8d 35 18 9e 00 00 	lea    0x9e18(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3f48:	48 89 df             	mov    %rbx,%rdi
    3f4b:	e8 80 f7 ff ff       	call   36d0 <__cxa_throw@plt>
    3f50:	48 89 c5             	mov    %rax,%rbp
    3f53:	48 89 df             	mov    %rbx,%rdi
    3f56:	e8 e5 f2 ff ff       	call   3240 <__cxa_free_exception@plt>
    3f5b:	48 89 ef             	mov    %rbp,%rdi
    3f5e:	e8 9d f7 ff ff       	call   3700 <_Unwind_Resume@plt>
    3f63:	90                   	nop

0000000000003f64 <_ZN4rtvc17RenderApplication9drawFrameEv.cold>:
  if (result == VK_ERROR_OUT_OF_DATE_KHR || result == VK_SUBOPTIMAL_KHR ||
      frameBufferResized) {
    frameBufferResized = false;
    recreateSwapChain();
  } else if (result != VK_SUCCESS) {
    throw std::runtime_error("Failed to acquire swap chain image.");
    3f64:	bf 10 00 00 00       	mov    $0x10,%edi
    3f69:	e8 02 f2 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3f6e:	48 8d 35 23 64 00 00 	lea    0x6423(%rip),%rsi        # a398 <_IO_stdin_used+0x398>
    3f75:	48 89 c7             	mov    %rax,%rdi
    3f78:	48 89 c3             	mov    %rax,%rbx
    3f7b:	e8 80 f1 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3f80:	48 8b 15 39 a0 00 00 	mov    0xa039(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3f87:	48 8d 35 d2 9d 00 00 	lea    0x9dd2(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3f8e:	48 89 df             	mov    %rbx,%rdi
    3f91:	e8 3a f7 ff ff       	call   36d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to submit draw command buffer.");
    3f96:	bf 10 00 00 00       	mov    $0x10,%edi
    3f9b:	e8 d0 f1 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3fa0:	48 8d 35 19 64 00 00 	lea    0x6419(%rip),%rsi        # a3c0 <_IO_stdin_used+0x3c0>
    3fa7:	48 89 c7             	mov    %rax,%rdi
    3faa:	48 89 c3             	mov    %rax,%rbx
    3fad:	e8 4e f1 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3fb2:	48 8b 15 07 a0 00 00 	mov    0xa007(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3fb9:	48 8d 35 a0 9d 00 00 	lea    0x9da0(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3fc0:	48 89 df             	mov    %rbx,%rdi
    3fc3:	e8 08 f7 ff ff       	call   36d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to acquire swap chain image.");
    3fc8:	bf 10 00 00 00       	mov    $0x10,%edi
    3fcd:	e8 9e f1 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    3fd2:	48 8d 35 bf 63 00 00 	lea    0x63bf(%rip),%rsi        # a398 <_IO_stdin_used+0x398>
    3fd9:	48 89 c7             	mov    %rax,%rdi
    3fdc:	48 89 c3             	mov    %rax,%rbx
    3fdf:	e8 1c f1 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    3fe4:	48 8b 15 d5 9f 00 00 	mov    0x9fd5(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3feb:	48 8d 35 6e 9d 00 00 	lea    0x9d6e(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3ff2:	48 89 df             	mov    %rbx,%rdi
    3ff5:	e8 d6 f6 ff ff       	call   36d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to acquire swap chain image.");
    3ffa:	48 89 c5             	mov    %rax,%rbp
    3ffd:	48 89 df             	mov    %rbx,%rdi
    4000:	e8 3b f2 ff ff       	call   3240 <__cxa_free_exception@plt>
    4005:	48 89 ef             	mov    %rbp,%rdi
    4008:	e8 f3 f6 ff ff       	call   3700 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to submit draw command buffer.");
    400d:	48 89 c5             	mov    %rax,%rbp
    4010:	48 89 df             	mov    %rbx,%rdi
    4013:	e8 28 f2 ff ff       	call   3240 <__cxa_free_exception@plt>
    4018:	48 89 ef             	mov    %rbp,%rdi
    401b:	e8 e0 f6 ff ff       	call   3700 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to acquire swap chain image.");
    4020:	48 89 c5             	mov    %rax,%rbp
    4023:	48 89 df             	mov    %rbx,%rdi
    4026:	e8 15 f2 ff ff       	call   3240 <__cxa_free_exception@plt>
    402b:	48 89 ef             	mov    %rbp,%rdi
    402e:	e8 cd f6 ff ff       	call   3700 <_Unwind_Resume@plt>
    4033:	90                   	nop

0000000000004034 <_ZN4rtvc17RenderApplication8mainLoopEv.cold>:
      { return _M_dataplus._M_p; }
    4034:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
	if (!_M_is_local())
    4039:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    403e:	48 39 c7             	cmp    %rax,%rdi
    4041:	74 0e                	je     4051 <_ZN4rtvc17RenderApplication8mainLoopEv.cold+0x1d>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4043:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    4048:	48 8d 70 01          	lea    0x1(%rax),%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    404c:	e8 3f f3 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4051:	48 89 df             	mov    %rbx,%rdi
    4054:	e8 a7 f6 ff ff       	call   3700 <_Unwind_Resume@plt>

    if (time_total.current() >= sec_to_mics) {
      std::cout << sec_to_mics / time_circle.current() << " FPS\n";
      time_total.reset();
    }
  }
    4059:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    405e:	e8 7d 49 00 00       	call   89e0 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>

  vkDeviceWaitIdle(device);
}
    4063:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    4068:	e8 73 49 00 00       	call   89e0 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    406d:	48 89 df             	mov    %rbx,%rdi
    4070:	e8 8b f6 ff ff       	call   3700 <_Unwind_Resume@plt>
      { return _M_dataplus._M_p; }
    4075:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
	if (!_M_is_local())
    407a:	48 39 df             	cmp    %rbx,%rdi
    407d:	74 0e                	je     408d <_ZN4rtvc17RenderApplication8mainLoopEv.cold+0x59>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    407f:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    4084:	48 8d 70 01          	lea    0x1(%rax),%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4088:	e8 03 f3 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    408d:	48 89 eb             	mov    %rbp,%rbx
    4090:	eb d1                	jmp    4063 <_ZN4rtvc17RenderApplication8mainLoopEv.cold+0x2f>

0000000000004092 <_ZN4rtvc17RenderApplication20createCommandBuffersEv.cold>:
    throw std::runtime_error("Failed to allocate command buffer.");
    4092:	bf 10 00 00 00       	mov    $0x10,%edi
    4097:	e8 d4 f0 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    409c:	48 8d 35 45 63 00 00 	lea    0x6345(%rip),%rsi        # a3e8 <_IO_stdin_used+0x3e8>
    40a3:	48 89 c7             	mov    %rax,%rdi
    40a6:	48 89 c3             	mov    %rax,%rbx
    40a9:	e8 52 f0 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    40ae:	48 8b 15 0b 9f 00 00 	mov    0x9f0b(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    40b5:	48 8d 35 a4 9c 00 00 	lea    0x9ca4(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    40bc:	48 89 df             	mov    %rbx,%rdi
    40bf:	e8 0c f6 ff ff       	call   36d0 <__cxa_throw@plt>
    40c4:	48 89 c5             	mov    %rax,%rbp
    40c7:	48 89 df             	mov    %rbx,%rdi
    40ca:	e8 71 f1 ff ff       	call   3240 <__cxa_free_exception@plt>
    40cf:	48 89 ef             	mov    %rbp,%rdi
    40d2:	e8 29 f6 ff ff       	call   3700 <_Unwind_Resume@plt>
    40d7:	90                   	nop

00000000000040d8 <_ZN4rtvc17RenderApplication17createSyncObjectsEv.cold>:
      throw std::runtime_error("Failed to create semaphores.");
    40d8:	bf 10 00 00 00       	mov    $0x10,%edi
    40dd:	e8 8e f0 ff ff       	call   3170 <__cxa_allocate_exception@plt>
    40e2:	48 8d 35 07 61 00 00 	lea    0x6107(%rip),%rsi        # a1f0 <_IO_stdin_used+0x1f0>
    40e9:	48 89 c7             	mov    %rax,%rdi
    40ec:	48 89 c3             	mov    %rax,%rbx
    40ef:	e8 0c f0 ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    40f4:	48 8b 15 c5 9e 00 00 	mov    0x9ec5(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    40fb:	48 8d 35 5e 9c 00 00 	lea    0x9c5e(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4102:	48 89 df             	mov    %rbx,%rdi
    4105:	e8 c6 f5 ff ff       	call   36d0 <__cxa_throw@plt>
    410a:	48 89 c5             	mov    %rax,%rbp
    410d:	48 89 df             	mov    %rbx,%rdi
    4110:	e8 2b f1 ff ff       	call   3240 <__cxa_free_exception@plt>
    4115:	48 89 ef             	mov    %rbp,%rdi
    4118:	e8 e3 f5 ff ff       	call   3700 <_Unwind_Resume@plt>
    411d:	90                   	nop

000000000000411e <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold>:
    411e:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    4125:	00 
    4126:	e8 c5 0b 00 00       	call   4cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0>
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    412b:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4130:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    4135:	e8 56 f2 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    413a:	48 89 df             	mov    %rbx,%rdi
    413d:	e8 be f5 ff ff       	call   3700 <_Unwind_Resume@plt>
	  __catch(...)
    4142:	e8 c9 ef ff ff       	call   3110 <__cxa_begin_catch@plt>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4147:	be 40 00 00 00       	mov    $0x40,%esi
    414c:	48 89 df             	mov    %rbx,%rdi
    414f:	e8 3c f2 ff ff       	call   3390 <_ZdlPvm@plt>
	      __throw_exception_again;
    4154:	e8 77 f4 ff ff       	call   35d0 <__cxa_rethrow@plt>
	  __catch(...)
    4159:	48 89 c3             	mov    %rax,%rbx
    415c:	e8 3f f5 ff ff       	call   36a0 <__cxa_end_catch@plt>
      { _M_erase(_M_begin()); }
    4161:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    4168:	00 
    4169:	e8 82 0b 00 00       	call   4cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0>
	if (__p)
    416e:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
    4174:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    4179:	75 b5                	jne    4130 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold+0x12>
    417b:	eb bd                	jmp    413a <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold+0x1c>
    417d:	be 04 01 00 00       	mov    $0x104,%esi
    4182:	eb ac                	jmp    4130 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold+0x12>
    4184:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    418b:	00 
    418c:	e8 5f 0b 00 00       	call   4cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4191:	48 89 df             	mov    %rbx,%rdi
    4194:	e8 67 f5 ff ff       	call   3700 <_Unwind_Resume@plt>
    4199:	90                   	nop

000000000000419a <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv.cold>:
    throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    419a:	bf 10 00 00 00       	mov    $0x10,%edi
    419f:	e8 cc ef ff ff       	call   3170 <__cxa_allocate_exception@plt>
    41a4:	48 8d 35 9d 62 00 00 	lea    0x629d(%rip),%rsi        # a448 <_IO_stdin_used+0x448>
    41ab:	48 89 c7             	mov    %rax,%rdi
    41ae:	48 89 c3             	mov    %rax,%rbx
    41b1:	e8 4a ef ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    41b6:	48 8b 15 03 9e 00 00 	mov    0x9e03(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    41bd:	48 8d 35 9c 9b 00 00 	lea    0x9b9c(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    41c4:	48 89 df             	mov    %rbx,%rdi
    41c7:	e8 04 f5 ff ff       	call   36d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to find a suitable GPU.");
    41cc:	bf 10 00 00 00       	mov    $0x10,%edi
    41d1:	e8 9a ef ff ff       	call   3170 <__cxa_allocate_exception@plt>
    41d6:	48 8d 35 9b 62 00 00 	lea    0x629b(%rip),%rsi        # a478 <_IO_stdin_used+0x478>
    41dd:	48 89 c7             	mov    %rax,%rdi
    41e0:	48 89 c5             	mov    %rax,%rbp
    41e3:	e8 18 ef ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    41e8:	48 8b 15 d1 9d 00 00 	mov    0x9dd1(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    41ef:	48 8d 35 6a 9b 00 00 	lea    0x9b6a(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    41f6:	48 89 ef             	mov    %rbp,%rdi
    41f9:	e8 d2 f4 ff ff       	call   36d0 <__cxa_throw@plt>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    41fe:	48 89 c3             	mov    %rax,%rbx
    4201:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    4206:	4c 89 ff             	mov    %r15,%rdi
    4209:	e8 82 f1 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    420e:	48 89 df             	mov    %rbx,%rdi
    4211:	e8 ea f4 ff ff       	call   3700 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    4216:	48 89 c5             	mov    %rax,%rbp
    4219:	48 89 df             	mov    %rbx,%rdi
    421c:	e8 1f f0 ff ff       	call   3240 <__cxa_free_exception@plt>
    4221:	48 89 ef             	mov    %rbp,%rdi
    4224:	e8 d7 f4 ff ff       	call   3700 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find a suitable GPU.");
    4229:	48 89 ef             	mov    %rbp,%rdi
    422c:	48 89 c3             	mov    %rax,%rbx
    422f:	e8 0c f0 ff ff       	call   3240 <__cxa_free_exception@plt>
    4234:	eb cb                	jmp    4201 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv.cold+0x67>

0000000000004236 <_ZN4rtvc17RenderApplication10initVulkanEv.cold>:
    throw std::runtime_error("Failed to create window surface.");
    4236:	bf 10 00 00 00       	mov    $0x10,%edi
    423b:	e8 30 ef ff ff       	call   3170 <__cxa_allocate_exception@plt>
    4240:	48 8d 35 c9 5f 00 00 	lea    0x5fc9(%rip),%rsi        # a210 <_IO_stdin_used+0x210>
    4247:	48 89 c7             	mov    %rax,%rdi
    424a:	48 89 c3             	mov    %rax,%rbx
    424d:	e8 ae ee ff ff       	call   3100 <_ZNSt13runtime_errorC1EPKc@plt>
    4252:	48 8b 15 67 9d 00 00 	mov    0x9d67(%rip),%rdx        # dfc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4259:	48 8d 35 00 9b 00 00 	lea    0x9b00(%rip),%rsi        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4260:	48 89 df             	mov    %rbx,%rdi
    4263:	e8 68 f4 ff ff       	call   36d0 <__cxa_throw@plt>
    4268:	48 89 c5             	mov    %rax,%rbp
    426b:	48 89 df             	mov    %rbx,%rdi
    426e:	e8 cd ef ff ff       	call   3240 <__cxa_free_exception@plt>
    4273:	48 89 ef             	mov    %rbp,%rdi
    4276:	e8 85 f4 ff ff       	call   3700 <_Unwind_Resume@plt>

000000000000427b <_GLOBAL__sub_I__ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv.cold>:
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    427b:	48 8b 3d be a3 00 00 	mov    0xa3be(%rip),%rdi        # e640 <_ZN4rtvc9resources7shaders8triangleE>
    4282:	48 8b 35 c7 a3 00 00 	mov    0xa3c7(%rip),%rsi        # e650 <_ZN4rtvc9resources7shaders8triangleE+0x10>
    4289:	48 29 fe             	sub    %rdi,%rsi
	if (__p)
    428c:	48 85 ff             	test   %rdi,%rdi
    428f:	74 05                	je     4296 <_GLOBAL__sub_I__ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv.cold+0x1b>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4291:	e8 fa f0 ff ff       	call   3390 <_ZdlPvm@plt>
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4296:	48 89 df             	mov    %rbx,%rdi
    4299:	e8 62 f4 ff ff       	call   3700 <_Unwind_Resume@plt>
    429e:	66 90                	xchg   %ax,%ax

00000000000042a0 <main>:
int main([[maybe_unused]] int argc, [[maybe_unused]] char **argv) {
    42a0:	53                   	push   %rbx
    42a1:	48 83 ec 10          	sub    $0x10,%rsp
    return protected_main(argc, argv);
    42a5:	e8 16 03 00 00       	call   45c0 <_Z14protected_mainiPPc>
    42aa:	48 83 c4 10          	add    $0x10,%rsp
    42ae:	5b                   	pop    %rbx
    42af:	c3                   	ret
  } catch (const std::exception &e) {
    42b0:	48 89 c7             	mov    %rax,%rdi
    42b3:	48 89 d0             	mov    %rdx,%rax
    42b6:	e9 3a f5 ff ff       	jmp    37f5 <main.cold>
    42bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000042c0 <_GLOBAL__sub_I__Z14protected_mainiPPc>:
    42c0:	55                   	push   %rbp
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    42c1:	48 8d 2d e8 a0 00 00 	lea    0xa0e8(%rip),%rbp        # e3b0 <__dso_handle>
    42c8:	53                   	push   %rbx
    42c9:	48 8d 1d 61 a3 00 00 	lea    0xa361(%rip),%rbx        # e631 <_ZStL8__ioinit>
    42d0:	48 89 df             	mov    %rbx,%rdi
    42d3:	48 83 ec 48          	sub    $0x48,%rsp
    42d7:	e8 24 f3 ff ff       	call   3600 <_ZNSt8ios_base4InitC1Ev@plt>
    42dc:	48 8b 3d fd 9c 00 00 	mov    0x9cfd(%rip),%rdi        # dfe0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    42e3:	48 89 ea             	mov    %rbp,%rdx
    42e6:	48 89 de             	mov    %rbx,%rsi
    42e9:	e8 02 f0 ff ff       	call   32f0 <__cxa_atexit@plt>

#include "Vertex.hpp"
#include <vector>

namespace rtvc::resources::shaders {
inline const std::vector<rtvc::Vertex> triangle = {
    42ee:	80 3d 43 a3 00 00 00 	cmpb   $0x0,0xa343(%rip)        # e638 <_ZGVN4rtvc9resources7shaders8triangleE>
    42f5:	74 07                	je     42fe <_GLOBAL__sub_I__Z14protected_mainiPPc+0x3e>
    42f7:	48 83 c4 48          	add    $0x48,%rsp
    42fb:	5b                   	pop    %rbx
    42fc:	5d                   	pop    %rbp
    42fd:	c3                   	ret
    42fe:	0f 28 05 4b 5d 00 00 	movaps 0x5d4b(%rip),%xmm0        # a050 <_IO_stdin_used+0x50>
	: _M_start(), _M_finish(), _M_end_of_storage()
    4305:	31 c0                	xor    %eax,%eax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4307:	bf 3c 00 00 00       	mov    $0x3c,%edi
    430c:	c6 05 25 a3 00 00 01 	movb   $0x1,0xa325(%rip)        # e638 <_ZGVN4rtvc9resources7shaders8triangleE>
    4313:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    431a:	00 00 
    431c:	0f 29 04 24          	movaps %xmm0,(%rsp)
    4320:	0f 28 05 39 5d 00 00 	movaps 0x5d39(%rip),%xmm0        # a060 <_IO_stdin_used+0x60>
    4327:	c7 44 24 38 00 00 80 	movl   $0x3f800000,0x38(%rsp)
    432e:	3f 
    432f:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    4334:	0f 28 05 35 5d 00 00 	movaps 0x5d35(%rip),%xmm0        # a070 <_IO_stdin_used+0x70>
    433b:	48 89 05 0e a3 00 00 	mov    %rax,0xa30e(%rip)        # e650 <_ZN4rtvc9resources7shaders8triangleE+0x10>
    4342:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    4347:	66 0f ef c0          	pxor   %xmm0,%xmm0
    434b:	0f 11 05 ee a2 00 00 	movups %xmm0,0xa2ee(%rip)        # e640 <_ZN4rtvc9resources7shaders8triangleE>
    4352:	e8 19 f0 ff ff       	call   3370 <_Znwm@plt>
	  // trivial types can have deleted assignment
	  static_assert( __assignable::value, "type must be assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    4357:	48 89 e6             	mov    %rsp,%rsi
    435a:	b9 0f 00 00 00       	mov    $0xf,%ecx
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    435f:	48 8d 50 3c          	lea    0x3c(%rax),%rdx
    4363:	48 89 c7             	mov    %rax,%rdi
    4366:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    4368:	48 89 15 e1 a2 00 00 	mov    %rdx,0xa2e1(%rip)        # e650 <_ZN4rtvc9resources7shaders8triangleE+0x10>
    436f:	48 8d 35 ca a2 00 00 	lea    0xa2ca(%rip),%rsi        # e640 <_ZN4rtvc9resources7shaders8triangleE>
    4376:	48 8d 3d 93 04 00 00 	lea    0x493(%rip),%rdi        # 4810 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>
	  this->_M_impl._M_finish =
    437d:	48 89 15 c4 a2 00 00 	mov    %rdx,0xa2c4(%rip)        # e648 <_ZN4rtvc9resources7shaders8triangleE+0x8>
    4384:	48 89 ea             	mov    %rbp,%rdx
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    4387:	48 89 05 b2 a2 00 00 	mov    %rax,0xa2b2(%rip)        # e640 <_ZN4rtvc9resources7shaders8triangleE>
    438e:	48 83 c4 48          	add    $0x48,%rsp
    4392:	5b                   	pop    %rbx
    4393:	5d                   	pop    %rbp
    4394:	e9 57 ef ff ff       	jmp    32f0 <__cxa_atexit@plt>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4399:	48 89 c3             	mov    %rax,%rbx
    439c:	e9 f7 f4 ff ff       	jmp    3898 <_GLOBAL__sub_I__Z14protected_mainiPPc.cold>
    43a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    43a8:	00 00 00 
    43ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000043b0 <_GLOBAL__sub_I__ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
void rtvc::RenderApplication::run() {
  initWindow();
  initVulkan();
  mainLoop();
  cleanUp();
    43b0:	55                   	push   %rbp
    43b1:	48 8d 2d f8 9f 00 00 	lea    0x9ff8(%rip),%rbp        # e3b0 <__dso_handle>
    43b8:	53                   	push   %rbx
    43b9:	48 8d 1d 98 a2 00 00 	lea    0xa298(%rip),%rbx        # e658 <_ZStL8__ioinit>
    43c0:	48 89 df             	mov    %rbx,%rdi
    43c3:	48 83 ec 48          	sub    $0x48,%rsp
    43c7:	e8 34 f2 ff ff       	call   3600 <_ZNSt8ios_base4InitC1Ev@plt>
    43cc:	48 8b 3d 0d 9c 00 00 	mov    0x9c0d(%rip),%rdi        # dfe0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    43d3:	48 89 ea             	mov    %rbp,%rdx
    43d6:	48 89 de             	mov    %rbx,%rsi
    43d9:	e8 12 ef ff ff       	call   32f0 <__cxa_atexit@plt>
    43de:	80 3d 53 a2 00 00 00 	cmpb   $0x0,0xa253(%rip)        # e638 <_ZGVN4rtvc9resources7shaders8triangleE>
    43e5:	74 07                	je     43ee <_GLOBAL__sub_I__ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x3e>
    43e7:	48 83 c4 48          	add    $0x48,%rsp
    43eb:	5b                   	pop    %rbx
    43ec:	5d                   	pop    %rbp
    43ed:	c3                   	ret
    43ee:	0f 28 05 5b 5c 00 00 	movaps 0x5c5b(%rip),%xmm0        # a050 <_IO_stdin_used+0x50>
	: _M_start(), _M_finish(), _M_end_of_storage()
    43f5:	31 c0                	xor    %eax,%eax
    43f7:	bf 3c 00 00 00       	mov    $0x3c,%edi
    43fc:	c6 05 35 a2 00 00 01 	movb   $0x1,0xa235(%rip)        # e638 <_ZGVN4rtvc9resources7shaders8triangleE>
    4403:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    440a:	00 00 
    440c:	0f 29 04 24          	movaps %xmm0,(%rsp)
    4410:	0f 28 05 49 5c 00 00 	movaps 0x5c49(%rip),%xmm0        # a060 <_IO_stdin_used+0x60>
    4417:	c7 44 24 38 00 00 80 	movl   $0x3f800000,0x38(%rsp)
    441e:	3f 
    441f:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    4424:	0f 28 05 45 5c 00 00 	movaps 0x5c45(%rip),%xmm0        # a070 <_IO_stdin_used+0x70>
    442b:	48 89 05 1e a2 00 00 	mov    %rax,0xa21e(%rip)        # e650 <_ZN4rtvc9resources7shaders8triangleE+0x10>
    4432:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    4437:	66 0f ef c0          	pxor   %xmm0,%xmm0
    443b:	0f 11 05 fe a1 00 00 	movups %xmm0,0xa1fe(%rip)        # e640 <_ZN4rtvc9resources7shaders8triangleE>
    4442:	e8 29 ef ff ff       	call   3370 <_Znwm@plt>
    4447:	48 89 e6             	mov    %rsp,%rsi
    444a:	b9 0f 00 00 00       	mov    $0xf,%ecx
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    444f:	48 8d 50 3c          	lea    0x3c(%rax),%rdx
    4453:	48 89 c7             	mov    %rax,%rdi
    4456:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    4458:	48 89 15 f1 a1 00 00 	mov    %rdx,0xa1f1(%rip)        # e650 <_ZN4rtvc9resources7shaders8triangleE+0x10>
    445f:	48 8d 35 da a1 00 00 	lea    0xa1da(%rip),%rsi        # e640 <_ZN4rtvc9resources7shaders8triangleE>
    4466:	48 8d 3d a3 03 00 00 	lea    0x3a3(%rip),%rdi        # 4810 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>
	  this->_M_impl._M_finish =
    446d:	48 89 15 d4 a1 00 00 	mov    %rdx,0xa1d4(%rip)        # e648 <_ZN4rtvc9resources7shaders8triangleE+0x8>
    4474:	48 89 ea             	mov    %rbp,%rdx
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    4477:	48 89 05 c2 a1 00 00 	mov    %rax,0xa1c2(%rip)        # e640 <_ZN4rtvc9resources7shaders8triangleE>
    447e:	48 83 c4 48          	add    $0x48,%rsp
    4482:	5b                   	pop    %rbx
    4483:	5d                   	pop    %rbp
    4484:	e9 67 ee ff ff       	jmp    32f0 <__cxa_atexit@plt>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4489:	48 89 c3             	mov    %rax,%rbx
    448c:	e9 ea fd ff ff       	jmp    427b <_GLOBAL__sub_I__ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv.cold>
    4491:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4498:	00 00 00 
    449b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000044a0 <_GLOBAL__sub_I_Utility.cpp>:
  std::mt19937 gen(rd());
  std::uniform_real_distribution<> dis(min, max);
  while (it_begin != it_end)
    *(it_begin++) = dis(gen);
}
} // namespace rtvc
    44a0:	53                   	push   %rbx
    44a1:	48 8d 1d b1 a1 00 00 	lea    0xa1b1(%rip),%rbx        # e659 <_ZStL8__ioinit>
    44a8:	48 89 df             	mov    %rbx,%rdi
    44ab:	e8 50 f1 ff ff       	call   3600 <_ZNSt8ios_base4InitC1Ev@plt>
    44b0:	48 8b 3d 29 9b 00 00 	mov    0x9b29(%rip),%rdi        # dfe0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    44b7:	48 89 de             	mov    %rbx,%rsi
    44ba:	5b                   	pop    %rbx
    44bb:	48 8d 15 ee 9e 00 00 	lea    0x9eee(%rip),%rdx        # e3b0 <__dso_handle>
    44c2:	e9 29 ee ff ff       	jmp    32f0 <__cxa_atexit@plt>
    44c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    44ce:	00 00 

00000000000044d0 <_start>:
    44d0:	31 ed                	xor    %ebp,%ebp
    44d2:	49 89 d1             	mov    %rdx,%r9
    44d5:	5e                   	pop    %rsi
    44d6:	48 89 e2             	mov    %rsp,%rdx
    44d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    44dd:	50                   	push   %rax
    44de:	54                   	push   %rsp
    44df:	45 31 c0             	xor    %r8d,%r8d
    44e2:	31 c9                	xor    %ecx,%ecx
    44e4:	48 8d 3d b5 fd ff ff 	lea    -0x24b(%rip),%rdi        # 42a0 <main>
    44eb:	ff 15 c7 9a 00 00    	call   *0x9ac7(%rip)        # dfb8 <__libc_start_main@GLIBC_2.34>
    44f1:	f4                   	hlt
    44f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    44f9:	00 00 00 
    44fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004500 <deregister_tm_clones>:
    4500:	48 8d 3d c1 9e 00 00 	lea    0x9ec1(%rip),%rdi        # e3c8 <__TMC_END__>
    4507:	48 8d 05 ba 9e 00 00 	lea    0x9eba(%rip),%rax        # e3c8 <__TMC_END__>
    450e:	48 39 f8             	cmp    %rdi,%rax
    4511:	74 15                	je     4528 <deregister_tm_clones+0x28>
    4513:	48 8b 05 ae 9a 00 00 	mov    0x9aae(%rip),%rax        # dfc8 <_ITM_deregisterTMCloneTable@Base>
    451a:	48 85 c0             	test   %rax,%rax
    451d:	74 09                	je     4528 <deregister_tm_clones+0x28>
    451f:	ff e0                	jmp    *%rax
    4521:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4528:	c3                   	ret
    4529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004530 <register_tm_clones>:
    4530:	48 8d 3d 91 9e 00 00 	lea    0x9e91(%rip),%rdi        # e3c8 <__TMC_END__>
    4537:	48 8d 35 8a 9e 00 00 	lea    0x9e8a(%rip),%rsi        # e3c8 <__TMC_END__>
    453e:	48 29 fe             	sub    %rdi,%rsi
    4541:	48 89 f0             	mov    %rsi,%rax
    4544:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4548:	48 c1 f8 03          	sar    $0x3,%rax
    454c:	48 01 c6             	add    %rax,%rsi
    454f:	48 d1 fe             	sar    %rsi
    4552:	74 14                	je     4568 <register_tm_clones+0x38>
    4554:	48 8b 05 7d 9a 00 00 	mov    0x9a7d(%rip),%rax        # dfd8 <_ITM_registerTMCloneTable@Base>
    455b:	48 85 c0             	test   %rax,%rax
    455e:	74 08                	je     4568 <register_tm_clones+0x38>
    4560:	ff e0                	jmp    *%rax
    4562:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4568:	c3                   	ret
    4569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004570 <__do_global_dtors_aux>:
    4570:	f3 0f 1e fa          	endbr64
    4574:	80 3d b5 a0 00 00 00 	cmpb   $0x0,0xa0b5(%rip)        # e630 <completed.0>
    457b:	75 2b                	jne    45a8 <__do_global_dtors_aux+0x38>
    457d:	55                   	push   %rbp
    457e:	48 83 3d 2a 9a 00 00 	cmpq   $0x0,0x9a2a(%rip)        # dfb0 <__cxa_finalize@GLIBC_2.2.5>
    4585:	00 
    4586:	48 89 e5             	mov    %rsp,%rbp
    4589:	74 0c                	je     4597 <__do_global_dtors_aux+0x27>
    458b:	48 8b 3d 1e 9e 00 00 	mov    0x9e1e(%rip),%rdi        # e3b0 <__dso_handle>
    4592:	e8 e9 f1 ff ff       	call   3780 <__cxa_finalize@plt>
    4597:	e8 64 ff ff ff       	call   4500 <deregister_tm_clones>
    459c:	c6 05 8d a0 00 00 01 	movb   $0x1,0xa08d(%rip)        # e630 <completed.0>
    45a3:	5d                   	pop    %rbp
    45a4:	c3                   	ret
    45a5:	0f 1f 00             	nopl   (%rax)
    45a8:	c3                   	ret
    45a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000045b0 <frame_dummy>:
    45b0:	f3 0f 1e fa          	endbr64
    45b4:	e9 77 ff ff ff       	jmp    4530 <register_tm_clones>
    45b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000045c0 <_Z14protected_mainiPPc>:
int protected_main([[maybe_unused]] int argc, [[maybe_unused]] char **argv) {
    45c0:	55                   	push   %rbp
	: _M_start(), _M_finish(), _M_end_of_storage()
    45c1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    45c5:	bf 08 00 00 00       	mov    $0x8,%edi
    45ca:	53                   	push   %rbx
    45cb:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
  // RenderApplication()
  //     : window{nullptr, init_window_width, init_window_height} {}
  // RenderApplication(uint32_t w, uint32_t h) : window{nullptr, w, h} {}

  RenderApplication()
      : window{nullptr}, width{init_window_width}, height{init_window_height} {}
    45d2:	48 8b 05 6f 5a 00 00 	mov    0x5a6f(%rip),%rax        # a048 <_IO_stdin_used+0x48>
    45d9:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    45e0:	00 
    45e1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    45e6:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    45ed:	00 00 
    45ef:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    45f4:	e8 77 ed ff ff       	call   3370 <_Znwm@plt>
    45f9:	48 8d 0d 04 5a 00 00 	lea    0x5a04(%rip),%rcx        # a004 <_IO_stdin_used+0x4>
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4600:	48 8d 50 08          	lea    0x8(%rax),%rdx
	: _M_start(), _M_finish(), _M_end_of_storage()
    4604:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4608:	bf 08 00 00 00       	mov    $0x8,%edi
    460d:	48 89 08             	mov    %rcx,(%rax)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    4610:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4615:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
	  this->_M_impl._M_finish =
    461a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    461f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    4626:	00 00 
	: _M_start(), _M_finish(), _M_end_of_storage()
    4628:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
    462f:	00 00 
    4631:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    4636:	e8 35 ed ff ff       	call   3370 <_Znwm@plt>
    463b:	48 8d 1d de 59 00 00 	lea    0x59de(%rip),%rbx        # a020 <_IO_stdin_used+0x20>
    4642:	66 0f ef c0          	pxor   %xmm0,%xmm0
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4646:	48 8d 50 08          	lea    0x8(%rax),%rdx
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    464a:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    464f:	48 89 18             	mov    %rbx,(%rax)
  app.run();
    4652:	48 89 e3             	mov    %rsp,%rbx
    4655:	48 89 df             	mov    %rbx,%rdi
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4658:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
	  this->_M_impl._M_finish =
    465d:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4662:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    4669:	00 00 00 00 00 
    466e:	48 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%rsp)
    4675:	00 00 00 00 00 
    467a:	48 c7 84 24 e8 00 00 	movq   $0x0,0xe8(%rsp)
    4681:	00 00 00 00 00 
    4686:	c6 84 24 58 01 00 00 	movb   $0x0,0x158(%rsp)
    468d:	00 
    468e:	c7 84 24 5c 01 00 00 	movl   $0x0,0x15c(%rsp)
    4695:	00 00 00 00 
    4699:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    46a0:	00 
    46a1:	0f 11 84 24 a8 00 00 	movups %xmm0,0xa8(%rsp)
    46a8:	00 
    46a9:	0f 11 84 24 d8 00 00 	movups %xmm0,0xd8(%rsp)
    46b0:	00 
    46b1:	0f 11 84 24 f8 00 00 	movups %xmm0,0xf8(%rsp)
    46b8:	00 
    46b9:	0f 11 84 24 08 01 00 	movups %xmm0,0x108(%rsp)
    46c0:	00 
    46c1:	0f 11 84 24 18 01 00 	movups %xmm0,0x118(%rsp)
    46c8:	00 
    46c9:	0f 11 84 24 28 01 00 	movups %xmm0,0x128(%rsp)
    46d0:	00 
    46d1:	0f 11 84 24 38 01 00 	movups %xmm0,0x138(%rsp)
    46d8:	00 
    46d9:	0f 11 84 24 48 01 00 	movups %xmm0,0x148(%rsp)
    46e0:	00 
    46e1:	e8 ea 41 00 00       	call   88d0 <_ZN4rtvc17RenderApplication3runEv>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    46e6:	48 8b bc 24 40 01 00 	mov    0x140(%rsp),%rdi
    46ed:	00 
	if (__p)
    46ee:	48 85 ff             	test   %rdi,%rdi
    46f1:	74 10                	je     4703 <_Z14protected_mainiPPc+0x143>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    46f3:	48 8b b4 24 50 01 00 	mov    0x150(%rsp),%rsi
    46fa:	00 
    46fb:	48 29 fe             	sub    %rdi,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    46fe:	e8 8d ec ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4703:	48 8b bc 24 28 01 00 	mov    0x128(%rsp),%rdi
    470a:	00 
	if (__p)
    470b:	48 85 ff             	test   %rdi,%rdi
    470e:	74 10                	je     4720 <_Z14protected_mainiPPc+0x160>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4710:	48 8b b4 24 38 01 00 	mov    0x138(%rsp),%rsi
    4717:	00 
    4718:	48 29 fe             	sub    %rdi,%rsi
    471b:	e8 70 ec ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4720:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
    4727:	00 
	if (__p)
    4728:	48 85 ff             	test   %rdi,%rdi
    472b:	74 10                	je     473d <_Z14protected_mainiPPc+0x17d>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    472d:	48 8b b4 24 20 01 00 	mov    0x120(%rsp),%rsi
    4734:	00 
    4735:	48 29 fe             	sub    %rdi,%rsi
    4738:	e8 53 ec ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    473d:	48 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%rdi
    4744:	00 
	if (__p)
    4745:	48 85 ff             	test   %rdi,%rdi
    4748:	74 10                	je     475a <_Z14protected_mainiPPc+0x19a>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    474a:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
    4751:	00 
    4752:	48 29 fe             	sub    %rdi,%rsi
    4755:	e8 36 ec ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    475a:	48 8b bc 24 d8 00 00 	mov    0xd8(%rsp),%rdi
    4761:	00 
	if (__p)
    4762:	48 85 ff             	test   %rdi,%rdi
    4765:	74 10                	je     4777 <_Z14protected_mainiPPc+0x1b7>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4767:	48 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%rsi
    476e:	00 
    476f:	48 29 fe             	sub    %rdi,%rsi
    4772:	e8 19 ec ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4777:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
    477e:	00 
	if (__p)
    477f:	48 85 ff             	test   %rdi,%rdi
    4782:	74 10                	je     4794 <_Z14protected_mainiPPc+0x1d4>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4784:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    478b:	00 
    478c:	48 29 fe             	sub    %rdi,%rsi
    478f:	e8 fc eb ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4794:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
    479b:	00 
	if (__p)
    479c:	48 85 ff             	test   %rdi,%rdi
    479f:	74 10                	je     47b1 <_Z14protected_mainiPPc+0x1f1>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    47a1:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
    47a8:	00 
    47a9:	48 29 fe             	sub    %rdi,%rsi
    47ac:	e8 df eb ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    47b1:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
	if (__p)
    47b6:	48 85 ff             	test   %rdi,%rdi
    47b9:	74 0d                	je     47c8 <_Z14protected_mainiPPc+0x208>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    47bb:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
    47c0:	48 29 fe             	sub    %rdi,%rsi
    47c3:	e8 c8 eb ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    47c8:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
	if (__p)
    47cd:	48 85 ff             	test   %rdi,%rdi
    47d0:	74 0d                	je     47df <_Z14protected_mainiPPc+0x21f>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    47d2:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    47d7:	48 29 fe             	sub    %rdi,%rsi
    47da:	e8 b1 eb ff ff       	call   3390 <_ZdlPvm@plt>
}
    47df:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
    47e6:	31 c0                	xor    %eax,%eax
    47e8:	5b                   	pop    %rbx
    47e9:	5d                   	pop    %rbp
    47ea:	c3                   	ret
    47eb:	48 89 c5             	mov    %rax,%rbp
    47ee:	e9 9d ef ff ff       	jmp    3790 <_Z14protected_mainiPPc.cold>
    47f3:	48 89 c3             	mov    %rax,%rbx
    47f6:	e9 a5 ef ff ff       	jmp    37a0 <_Z14protected_mainiPPc.cold+0x10>
    47fb:	48 89 c3             	mov    %rax,%rbx
    47fe:	e9 d3 ef ff ff       	jmp    37d6 <_Z14protected_mainiPPc.cold+0x46>
    4803:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    480a:	00 00 00 
    480d:	0f 1f 00             	nopl   (%rax)

0000000000004810 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>:
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4810:	48 8b 07             	mov    (%rdi),%rax
	if (__p)
    4813:	48 85 c0             	test   %rax,%rax
    4816:	74 18                	je     4830 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev+0x20>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4818:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    481c:	48 89 c7             	mov    %rax,%rdi
    481f:	48 29 c6             	sub    %rax,%rsi
    4822:	e9 69 eb ff ff       	jmp    3390 <_ZdlPvm@plt>
    4827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    482e:	00 00 
      }
    4830:	c3                   	ret
    4831:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4838:	00 00 00 
    483b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004840 <_ZN4rtvc17RenderApplicationD1Ev>:
class RenderApplication {
    4840:	53                   	push   %rbx
    4841:	48 89 fb             	mov    %rdi,%rbx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4844:	48 8b bf 40 01 00 00 	mov    0x140(%rdi),%rdi
	if (__p)
    484b:	48 85 ff             	test   %rdi,%rdi
    484e:	74 0f                	je     485f <_ZN4rtvc17RenderApplicationD1Ev+0x1f>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4850:	48 8b b3 50 01 00 00 	mov    0x150(%rbx),%rsi
    4857:	48 29 fe             	sub    %rdi,%rsi
    485a:	e8 31 eb ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    485f:	48 8b bb 28 01 00 00 	mov    0x128(%rbx),%rdi
	if (__p)
    4866:	48 85 ff             	test   %rdi,%rdi
    4869:	74 0f                	je     487a <_ZN4rtvc17RenderApplicationD1Ev+0x3a>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    486b:	48 8b b3 38 01 00 00 	mov    0x138(%rbx),%rsi
    4872:	48 29 fe             	sub    %rdi,%rsi
    4875:	e8 16 eb ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    487a:	48 8b bb 10 01 00 00 	mov    0x110(%rbx),%rdi
	if (__p)
    4881:	48 85 ff             	test   %rdi,%rdi
    4884:	74 0f                	je     4895 <_ZN4rtvc17RenderApplicationD1Ev+0x55>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4886:	48 8b b3 20 01 00 00 	mov    0x120(%rbx),%rsi
    488d:	48 29 fe             	sub    %rdi,%rsi
    4890:	e8 fb ea ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4895:	48 8b bb f8 00 00 00 	mov    0xf8(%rbx),%rdi
	if (__p)
    489c:	48 85 ff             	test   %rdi,%rdi
    489f:	74 0f                	je     48b0 <_ZN4rtvc17RenderApplicationD1Ev+0x70>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    48a1:	48 8b b3 08 01 00 00 	mov    0x108(%rbx),%rsi
    48a8:	48 29 fe             	sub    %rdi,%rsi
    48ab:	e8 e0 ea ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    48b0:	48 8b bb d8 00 00 00 	mov    0xd8(%rbx),%rdi
	if (__p)
    48b7:	48 85 ff             	test   %rdi,%rdi
    48ba:	74 0f                	je     48cb <_ZN4rtvc17RenderApplicationD1Ev+0x8b>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    48bc:	48 8b b3 e8 00 00 00 	mov    0xe8(%rbx),%rsi
    48c3:	48 29 fe             	sub    %rdi,%rsi
    48c6:	e8 c5 ea ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    48cb:	48 8b bb a8 00 00 00 	mov    0xa8(%rbx),%rdi
	if (__p)
    48d2:	48 85 ff             	test   %rdi,%rdi
    48d5:	74 0f                	je     48e6 <_ZN4rtvc17RenderApplicationD1Ev+0xa6>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    48d7:	48 8b b3 b8 00 00 00 	mov    0xb8(%rbx),%rsi
    48de:	48 29 fe             	sub    %rdi,%rsi
    48e1:	e8 aa ea ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    48e6:	48 8b bb 80 00 00 00 	mov    0x80(%rbx),%rdi
	if (__p)
    48ed:	48 85 ff             	test   %rdi,%rdi
    48f0:	74 0f                	je     4901 <_ZN4rtvc17RenderApplicationD1Ev+0xc1>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    48f2:	48 8b b3 90 00 00 00 	mov    0x90(%rbx),%rsi
    48f9:	48 29 fe             	sub    %rdi,%rsi
    48fc:	e8 8f ea ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4901:	48 8b 7b 60          	mov    0x60(%rbx),%rdi
	if (__p)
    4905:	48 85 ff             	test   %rdi,%rdi
    4908:	74 0c                	je     4916 <_ZN4rtvc17RenderApplicationD1Ev+0xd6>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    490a:	48 8b 73 70          	mov    0x70(%rbx),%rsi
    490e:	48 29 fe             	sub    %rdi,%rsi
    4911:	e8 7a ea ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4916:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
	if (__p)
    491a:	48 85 ff             	test   %rdi,%rdi
    491d:	74 11                	je     4930 <_ZN4rtvc17RenderApplicationD1Ev+0xf0>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    491f:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    4923:	5b                   	pop    %rbx
    4924:	48 29 fe             	sub    %rdi,%rsi
    4927:	e9 64 ea ff ff       	jmp    3390 <_ZdlPvm@plt>
    492c:	0f 1f 40 00          	nopl   0x0(%rax)
    4930:	5b                   	pop    %rbx
    4931:	c3                   	ret
    4932:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4939:	00 00 00 
    493c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004940 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:
#include "ProxyFuncs.hpp"

VkResult rtvc::createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    4940:	41 55                	push   %r13
    4942:	49 89 cd             	mov    %rcx,%r13
    4945:	41 54                	push   %r12
    4947:	49 89 d4             	mov    %rdx,%r12
    494a:	55                   	push   %rbp
    494b:	48 89 f5             	mov    %rsi,%rbp
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    494e:	48 8d 35 2b 57 00 00 	lea    0x572b(%rip),%rsi        # a080 <_IO_stdin_used+0x80>
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    4955:	53                   	push   %rbx
    4956:	48 89 fb             	mov    %rdi,%rbx
    4959:	48 83 ec 08          	sub    $0x8,%rsp
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    495d:	e8 be e9 ff ff       	call   3320 <vkGetInstanceProcAddr@plt>
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func != nullptr)
    4962:	48 85 c0             	test   %rax,%rax
    4965:	74 18                	je     497f <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x3f>
    return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
  else
    return VK_ERROR_EXTENSION_NOT_PRESENT;
}
    4967:	48 83 c4 08          	add    $0x8,%rsp
    return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    496b:	4c 89 e9             	mov    %r13,%rcx
    496e:	4c 89 e2             	mov    %r12,%rdx
    4971:	48 89 ee             	mov    %rbp,%rsi
    4974:	48 89 df             	mov    %rbx,%rdi
}
    4977:	5b                   	pop    %rbx
    4978:	5d                   	pop    %rbp
    4979:	41 5c                	pop    %r12
    497b:	41 5d                	pop    %r13
    return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    497d:	ff e0                	jmp    *%rax
}
    497f:	48 83 c4 08          	add    $0x8,%rsp
    4983:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    4988:	5b                   	pop    %rbx
    4989:	5d                   	pop    %rbp
    498a:	41 5c                	pop    %r12
    498c:	41 5d                	pop    %r13
    498e:	c3                   	ret
    498f:	90                   	nop

0000000000004990 <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void rtvc::destroyDebugUtilsMessengerEXT(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) {
    4990:	41 54                	push   %r12
    4992:	49 89 d4             	mov    %rdx,%r12
    4995:	55                   	push   %rbp
    4996:	48 89 f5             	mov    %rsi,%rbp
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    4999:	48 8d 35 00 57 00 00 	lea    0x5700(%rip),%rsi        # a0a0 <_IO_stdin_used+0xa0>
    const VkAllocationCallbacks *pAllocator) {
    49a0:	53                   	push   %rbx
    49a1:	48 89 fb             	mov    %rdi,%rbx
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    49a4:	e8 77 e9 ff ff       	call   3320 <vkGetInstanceProcAddr@plt>
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr)
    49a9:	48 85 c0             	test   %rax,%rax
    49ac:	74 12                	je     49c0 <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x30>
    return func(instance, debugMessenger, pAllocator);
    49ae:	4c 89 e2             	mov    %r12,%rdx
    49b1:	48 89 ee             	mov    %rbp,%rsi
    49b4:	48 89 df             	mov    %rbx,%rdi
    49b7:	5b                   	pop    %rbx
    49b8:	5d                   	pop    %rbp
    49b9:	41 5c                	pop    %r12
    return func(instance, debugMessenger, pAllocator);
    49bb:	ff e0                	jmp    *%rax
    49bd:	0f 1f 00             	nopl   (%rax)
    49c0:	5b                   	pop    %rbx
    49c1:	5d                   	pop    %rbp
    49c2:	41 5c                	pop    %r12
    49c4:	c3                   	ret
    49c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    49cc:	00 00 00 
    49cf:	90                   	nop

00000000000049d0 <_ZN4rtvc17RenderApplication25framebufferResizeCallbackEP10GLFWwindowii>:
    [[maybe_unused]] int height) {
    49d0:	48 83 ec 08          	sub    $0x8,%rsp
      glfwGetWindowUserPointer(window));
    49d4:	e8 87 eb ff ff       	call   3560 <glfwGetWindowUserPointer@plt>
  app->frameBufferResized = true;
    49d9:	c6 80 58 01 00 00 01 	movb   $0x1,0x158(%rax)
}
    49e0:	48 83 c4 08          	add    $0x8,%rsp
    49e4:	c3                   	ret
    49e5:	90                   	nop
    49e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    49ed:	00 00 00 

00000000000049f0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    49f0:	41 57                	push   %r15
    49f2:	41 56                	push   %r14
    49f4:	41 55                	push   %r13
    49f6:	41 54                	push   %r12
    49f8:	55                   	push   %rbp
    49f9:	53                   	push   %rbx
    49fa:	48 83 ec 28          	sub    $0x28,%rsp
    49fe:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    4a03:	48 85 ff             	test   %rdi,%rdi
    4a06:	0f 84 9e 01 00 00    	je     4baa <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x1ba>
      { return static_cast<_Link_type>(__x->_M_right); }
    4a0c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4a11:	48 8b 40 18          	mov    0x18(%rax),%rax
    4a15:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
      while (__x != 0)
    4a1a:	48 85 c0             	test   %rax,%rax
    4a1d:	0f 84 65 01 00 00    	je     4b88 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x198>
      { return static_cast<_Link_type>(__x->_M_right); }
    4a23:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4a28:	4c 8b 70 18          	mov    0x18(%rax),%r14
      while (__x != 0)
    4a2c:	4d 85 f6             	test   %r14,%r14
    4a2f:	0f 84 31 01 00 00    	je     4b66 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x176>
      { return static_cast<_Link_type>(__x->_M_right); }
    4a35:	4d 8b 7e 18          	mov    0x18(%r14),%r15
      while (__x != 0)
    4a39:	4d 85 ff             	test   %r15,%r15
    4a3c:	0f 84 06 01 00 00    	je     4b48 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x158>
      { return static_cast<_Link_type>(__x->_M_right); }
    4a42:	49 8b 5f 18          	mov    0x18(%r15),%rbx
      while (__x != 0)
    4a46:	48 85 db             	test   %rbx,%rbx
    4a49:	0f 84 b0 00 00 00    	je     4aff <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x10f>
      { return static_cast<_Link_type>(__x->_M_right); }
    4a4f:	4c 8b 63 18          	mov    0x18(%rbx),%r12
      while (__x != 0)
    4a53:	4d 85 e4             	test   %r12,%r12
    4a56:	74 64                	je     4abc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0xcc>
      { return static_cast<_Link_type>(__x->_M_right); }
    4a58:	49 8b 6c 24 18       	mov    0x18(%r12),%rbp
      while (__x != 0)
    4a5d:	48 85 ed             	test   %rbp,%rbp
    4a60:	74 7e                	je     4ae0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0xf0>
      { return static_cast<_Link_type>(__x->_M_right); }
    4a62:	48 8b 55 18          	mov    0x18(%rbp),%rdx
      while (__x != 0)
    4a66:	48 85 d2             	test   %rdx,%rdx
    4a69:	0f 84 b1 00 00 00    	je     4b20 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x130>
      { return static_cast<_Link_type>(__x->_M_right); }
    4a6f:	4c 8b 6a 18          	mov    0x18(%rdx),%r13
      while (__x != 0)
    4a73:	4d 85 ed             	test   %r13,%r13
    4a76:	74 29                	je     4aa1 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0xb1>
	{
	  _M_erase(_S_right(__x));
    4a78:	49 8b 7d 18          	mov    0x18(%r13),%rdi
    4a7c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4a81:	e8 6a ff ff ff       	call   49f0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0>
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    4a86:	4c 89 ef             	mov    %r13,%rdi
      { return static_cast<_Link_type>(__x->_M_left); }
    4a89:	4d 8b 6d 10          	mov    0x10(%r13),%r13
    4a8d:	be 28 00 00 00       	mov    $0x28,%esi
    4a92:	e8 f9 e8 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4a97:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    4a9c:	4d 85 ed             	test   %r13,%r13
    4a9f:	75 d7                	jne    4a78 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x88>
      { return static_cast<_Link_type>(__x->_M_left); }
    4aa1:	4c 8b 6a 10          	mov    0x10(%rdx),%r13
    4aa5:	be 28 00 00 00       	mov    $0x28,%esi
    4aaa:	48 89 d7             	mov    %rdx,%rdi
    4aad:	e8 de e8 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4ab2:	4d 85 ed             	test   %r13,%r13
    4ab5:	74 69                	je     4b20 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x130>
	  _Link_type __y = _S_left(__x);
	  _M_drop_node(__x);
	  __x = __y;
    4ab7:	4c 89 ea             	mov    %r13,%rdx
    4aba:	eb b3                	jmp    4a6f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x7f>
      { return static_cast<_Link_type>(__x->_M_left); }
    4abc:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
    4ac0:	be 28 00 00 00       	mov    $0x28,%esi
    4ac5:	48 89 df             	mov    %rbx,%rdi
    4ac8:	e8 c3 e8 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4acd:	48 85 ed             	test   %rbp,%rbp
    4ad0:	74 2d                	je     4aff <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x10f>
	  __x = __y;
    4ad2:	48 89 eb             	mov    %rbp,%rbx
    4ad5:	e9 75 ff ff ff       	jmp    4a4f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x5f>
    4ada:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      { return static_cast<_Link_type>(__x->_M_left); }
    4ae0:	49 8b 6c 24 10       	mov    0x10(%r12),%rbp
    4ae5:	be 28 00 00 00       	mov    $0x28,%esi
    4aea:	4c 89 e7             	mov    %r12,%rdi
    4aed:	e8 9e e8 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4af2:	48 85 ed             	test   %rbp,%rbp
    4af5:	74 c5                	je     4abc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0xcc>
	  __x = __y;
    4af7:	49 89 ec             	mov    %rbp,%r12
    4afa:	e9 59 ff ff ff       	jmp    4a58 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x68>
      { return static_cast<_Link_type>(__x->_M_left); }
    4aff:	49 8b 5f 10          	mov    0x10(%r15),%rbx
    4b03:	be 28 00 00 00       	mov    $0x28,%esi
    4b08:	4c 89 ff             	mov    %r15,%rdi
    4b0b:	e8 80 e8 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4b10:	48 85 db             	test   %rbx,%rbx
    4b13:	74 33                	je     4b48 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x158>
	  __x = __y;
    4b15:	49 89 df             	mov    %rbx,%r15
    4b18:	e9 25 ff ff ff       	jmp    4a42 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x52>
    4b1d:	0f 1f 00             	nopl   (%rax)
      { return static_cast<_Link_type>(__x->_M_left); }
    4b20:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    4b24:	be 28 00 00 00       	mov    $0x28,%esi
    4b29:	48 89 ef             	mov    %rbp,%rdi
    4b2c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4b31:	e8 5a e8 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4b36:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    4b3b:	48 85 d2             	test   %rdx,%rdx
    4b3e:	74 a0                	je     4ae0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0xf0>
	  __x = __y;
    4b40:	48 89 d5             	mov    %rdx,%rbp
    4b43:	e9 1a ff ff ff       	jmp    4a62 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x72>
      { return static_cast<_Link_type>(__x->_M_left); }
    4b48:	49 8b 5e 10          	mov    0x10(%r14),%rbx
    4b4c:	be 28 00 00 00       	mov    $0x28,%esi
    4b51:	4c 89 f7             	mov    %r14,%rdi
    4b54:	e8 37 e8 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4b59:	48 85 db             	test   %rbx,%rbx
    4b5c:	74 08                	je     4b66 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x176>
	  __x = __y;
    4b5e:	49 89 de             	mov    %rbx,%r14
    4b61:	e9 cf fe ff ff       	jmp    4a35 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x45>
      { return static_cast<_Link_type>(__x->_M_left); }
    4b66:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    4b6b:	be 28 00 00 00       	mov    $0x28,%esi
    4b70:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    4b74:	e8 17 e8 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4b79:	48 85 db             	test   %rbx,%rbx
    4b7c:	74 0a                	je     4b88 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x198>
	  __x = __y;
    4b7e:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    4b83:	e9 9b fe ff ff       	jmp    4a23 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x33>
      { return static_cast<_Link_type>(__x->_M_left); }
    4b88:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    4b8d:	be 28 00 00 00       	mov    $0x28,%esi
    4b92:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    4b96:	e8 f5 e7 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4b9b:	48 85 db             	test   %rbx,%rbx
    4b9e:	74 0a                	je     4baa <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x1ba>
	  __x = __y;
    4ba0:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    4ba5:	e9 62 fe ff ff       	jmp    4a0c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0+0x1c>
	}
    }
    4baa:	48 83 c4 28          	add    $0x28,%rsp
    4bae:	5b                   	pop    %rbx
    4baf:	5d                   	pop    %rbp
    4bb0:	41 5c                	pop    %r12
    4bb2:	41 5d                	pop    %r13
    4bb4:	41 5e                	pop    %r14
    4bb6:	41 5f                	pop    %r15
    4bb8:	c3                   	ret
    4bb9:	90                   	nop
    4bba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004bc0 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
  if (messageSeverity >= VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT)
    4bc0:	81 ff ff 00 00 00    	cmp    $0xff,%edi
    4bc6:	7f 08                	jg     4bd0 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x10>
}
    4bc8:	31 c0                	xor    %eax,%eax
    4bca:	c3                   	ret
    4bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    [[maybe_unused]] void *pUserData) {
    4bd0:	55                   	push   %rbp
    4bd1:	53                   	push   %rbx
    4bd2:	48 83 ec 18          	sub    $0x18,%rsp
    4bd6:	48 8b 5a 28          	mov    0x28(%rdx),%rbx
  // Partial specializations
  template<typename _Traits>
    inline basic_ostream<char, _Traits>&
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    {
      if (!__s)
    4bda:	48 85 db             	test   %rbx,%rbx
    4bdd:	0f 84 dd 00 00 00    	je     4cc0 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x100>
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::length(__s);
#endif
	return __builtin_strlen(__s);
    4be3:	48 89 df             	mov    %rbx,%rdi
    4be6:	e8 55 e5 ff ff       	call   3140 <strlen@plt>
	__out.setstate(ios_base::badbit);
      else
	__ostream_insert(__out, __s,
    4beb:	48 89 de             	mov    %rbx,%rsi
    4bee:	48 8d 1d 2b 99 00 00 	lea    0x992b(%rip),%rbx        # e520 <_ZSt4cerr@GLIBCXX_3.4>
    4bf5:	48 89 c2             	mov    %rax,%rdx
    4bf8:	48 89 df             	mov    %rbx,%rdi
    4bfb:	e8 30 e8 ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
      if (__out.width() != 0)
    4c00:	48 8b 05 19 99 00 00 	mov    0x9919(%rip),%rax        # e520 <_ZSt4cerr@GLIBCXX_3.4>
    4c07:	c6 44 24 0f 0a       	movb   $0xa,0xf(%rsp)
    4c0c:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    4c10:	48 83 7c 03 10 00    	cmpq   $0x0,0x10(%rbx,%rax,1)
    4c16:	75 58                	jne    4c70 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0xb0>
      __out.put(__c);
    4c18:	48 89 df             	mov    %rbx,%rdi
    4c1b:	be 0a 00 00 00       	mov    $0xa,%esi
      return __out;
    4c20:	48 8d 1d f9 98 00 00 	lea    0x98f9(%rip),%rbx        # e520 <_ZSt4cerr@GLIBCXX_3.4>
      __out.put(__c);
    4c27:	e8 04 e4 ff ff       	call   3030 <_ZNSo3putEc@plt>
   *  for more on this subject.
  */
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    endl(basic_ostream<_CharT, _Traits>& __os)
    { return flush(__os.put(__os.widen('\n'))); }
    4c2c:	48 8b 03             	mov    (%rbx),%rax
    4c2f:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    4c33:	48 8b ac 03 f0 00 00 	mov    0xf0(%rbx,%rax,1),%rbp
    4c3a:	00 
      if (!__f)
    4c3b:	48 85 ed             	test   %rbp,%rbp
    4c3e:	0f 84 a1 00 00 00    	je     4ce5 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x125>
       *  @return  The converted character.
      */
      char_type
      widen(char __c) const
      {
	if (_M_widen_ok)
    4c44:	80 7d 38 00          	cmpb   $0x0,0x38(%rbp)
    4c48:	74 46                	je     4c90 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0xd0>
    4c4a:	0f be 75 43          	movsbl 0x43(%rbp),%esi
    4c4e:	48 89 df             	mov    %rbx,%rdi
    4c51:	e8 da e3 ff ff       	call   3030 <_ZNSo3putEc@plt>
    4c56:	48 89 c7             	mov    %rax,%rdi
   *  This manipulator simply calls the stream's @c flush() member function.
  */
  template<typename _CharT, typename _Traits>
    inline basic_ostream<_CharT, _Traits>&
    flush(basic_ostream<_CharT, _Traits>& __os)
    { return __os.flush(); }
    4c59:	e8 c2 e5 ff ff       	call   3220 <_ZNSo5flushEv@plt>
}
    4c5e:	48 83 c4 18          	add    $0x18,%rsp
    4c62:	31 c0                	xor    %eax,%eax
    4c64:	5b                   	pop    %rbx
    4c65:	5d                   	pop    %rbp
    4c66:	c3                   	ret
    4c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4c6e:	00 00 
	return __ostream_insert(__out, &__c, 1);
    4c70:	48 89 df             	mov    %rbx,%rdi
    4c73:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
    4c78:	ba 01 00 00 00       	mov    $0x1,%edx
    4c7d:	e8 ae e7 ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    4c82:	48 89 c3             	mov    %rax,%rbx
    4c85:	eb a5                	jmp    4c2c <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x6c>
    4c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4c8e:	00 00 
	  return _M_widen[static_cast<unsigned char>(__c)];
	this->_M_widen_init();
    4c90:	48 89 ef             	mov    %rbp,%rdi
    4c93:	e8 a8 e7 ff ff       	call   3440 <_ZNKSt5ctypeIcE13_M_widen_initEv@plt>
	return this->do_widen(__c);
    4c98:	48 8b 45 00          	mov    0x0(%rbp),%rax
    4c9c:	be 0a 00 00 00       	mov    $0xa,%esi
    4ca1:	48 8d 15 98 3c 00 00 	lea    0x3c98(%rip),%rdx        # 8940 <_ZNKSt5ctypeIcE8do_widenEc>
    4ca8:	48 8b 40 30          	mov    0x30(%rax),%rax
    4cac:	48 39 d0             	cmp    %rdx,%rax
    4caf:	74 9d                	je     4c4e <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x8e>
    4cb1:	48 89 ef             	mov    %rbp,%rdi
    4cb4:	ff d0                	call   *%rax
    { return flush(__os.put(__os.widen('\n'))); }
    4cb6:	0f be f0             	movsbl %al,%esi
    4cb9:	eb 93                	jmp    4c4e <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x8e>
    4cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	__out.setstate(ios_base::badbit);
    4cc0:	48 8b 05 59 98 00 00 	mov    0x9859(%rip),%rax        # e520 <_ZSt4cerr@GLIBCXX_3.4>
    4cc7:	48 8d 1d 52 98 00 00 	lea    0x9852(%rip),%rbx        # e520 <_ZSt4cerr@GLIBCXX_3.4>
    4cce:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    4cd2:	48 01 df             	add    %rbx,%rdi
  { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }
    4cd5:	8b 77 20             	mov    0x20(%rdi),%esi
    4cd8:	83 ce 01             	or     $0x1,%esi
      { this->clear(this->rdstate() | __state); }
    4cdb:	e8 e0 e9 ff ff       	call   36c0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    4ce0:	e9 1b ff ff ff       	jmp    4c00 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x40>
	__throw_bad_cast();
    4ce5:	e8 f6 e7 ff ff       	call   34e0 <_ZSt16__throw_bad_castv@plt>
    4cea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    4cf0:	41 57                	push   %r15
    4cf2:	41 56                	push   %r14
    4cf4:	41 55                	push   %r13
    4cf6:	41 54                	push   %r12
    4cf8:	55                   	push   %rbp
    4cf9:	53                   	push   %rbx
    4cfa:	48 83 ec 28          	sub    $0x28,%rsp
    4cfe:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
      while (__x != 0)
    4d03:	48 85 ff             	test   %rdi,%rdi
    4d06:	0f 84 1a 03 00 00    	je     5026 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x336>
      { return static_cast<_Link_type>(__x->_M_right); }
    4d0c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4d11:	48 8b 40 18          	mov    0x18(%rax),%rax
    4d15:	48 89 04 24          	mov    %rax,(%rsp)
      while (__x != 0)
    4d19:	48 85 c0             	test   %rax,%rax
    4d1c:	0f 84 af 02 00 00    	je     4fd1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x2e1>
      { return static_cast<_Link_type>(__x->_M_right); }
    4d22:	48 8b 04 24          	mov    (%rsp),%rax
    4d26:	48 8b 40 18          	mov    0x18(%rax),%rax
    4d2a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
      while (__x != 0)
    4d2f:	48 85 c0             	test   %rax,%rax
    4d32:	0f 84 46 02 00 00    	je     4f7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x28e>
      { return static_cast<_Link_type>(__x->_M_right); }
    4d38:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4d3d:	4c 8b 78 18          	mov    0x18(%rax),%r15
      while (__x != 0)
    4d41:	4d 85 ff             	test   %r15,%r15
    4d44:	0f 84 de 01 00 00    	je     4f28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x238>
      { return static_cast<_Link_type>(__x->_M_right); }
    4d4a:	49 8b 6f 18          	mov    0x18(%r15),%rbp
      while (__x != 0)
    4d4e:	48 85 ed             	test   %rbp,%rbp
    4d51:	0f 84 55 01 00 00    	je     4eac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x1bc>
      { return static_cast<_Link_type>(__x->_M_right); }
    4d57:	48 8b 5d 18          	mov    0x18(%rbp),%rbx
      while (__x != 0)
    4d5b:	48 85 db             	test   %rbx,%rbx
    4d5e:	0f 84 ad 00 00 00    	je     4e11 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x121>
      { return static_cast<_Link_type>(__x->_M_right); }
    4d64:	4c 8b 63 18          	mov    0x18(%rbx),%r12
      while (__x != 0)
    4d68:	4d 85 e4             	test   %r12,%r12
    4d6b:	0f 84 ff 00 00 00    	je     4e70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x180>
      { return static_cast<_Link_type>(__x->_M_right); }
    4d71:	4d 8b 74 24 18       	mov    0x18(%r12),%r14
      while (__x != 0)
    4d76:	4d 85 f6             	test   %r14,%r14
    4d79:	0f 84 69 01 00 00    	je     4ee8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x1f8>
      { return static_cast<_Link_type>(__x->_M_right); }
    4d7f:	49 8b 56 18          	mov    0x18(%r14),%rdx
      while (__x != 0)
    4d83:	48 85 d2             	test   %rdx,%rdx
    4d86:	74 4d                	je     4dd5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0xe5>
	  _M_erase(_S_right(__x));
    4d88:	48 8b 7a 18          	mov    0x18(%rdx),%rdi
    4d8c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    4d91:	e8 5a ff ff ff       	call   4cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0>
      { return static_cast<_Link_type>(__x->_M_left); }
    4d96:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
      { return _M_dataplus._M_p; }
    4d9b:	48 8b 7a 20          	mov    0x20(%rdx),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4d9f:	48 8d 4a 30          	lea    0x30(%rdx),%rcx
    4da3:	4c 8b 6a 10          	mov    0x10(%rdx),%r13
	if (!_M_is_local())
    4da7:	48 39 cf             	cmp    %rcx,%rdi
    4daa:	0f 84 99 00 00 00    	je     4e49 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x159>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4db0:	48 8b 42 30          	mov    0x30(%rdx),%rax
    4db4:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4db8:	e8 d3 e5 ff ff       	call   3390 <_ZdlPvm@plt>
    4dbd:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    4dc2:	be 40 00 00 00       	mov    $0x40,%esi
    4dc7:	e8 c4 e5 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4dcc:	4d 85 ed             	test   %r13,%r13
    4dcf:	0f 85 8a 00 00 00    	jne    4e5f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x16f>
      { return _M_dataplus._M_p; }
    4dd5:	49 8b 7e 20          	mov    0x20(%r14),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4dd9:	49 8d 56 30          	lea    0x30(%r14),%rdx
      { return static_cast<_Link_type>(__x->_M_left); }
    4ddd:	4d 8b 6e 10          	mov    0x10(%r14),%r13
	if (!_M_is_local())
    4de1:	48 39 d7             	cmp    %rdx,%rdi
    4de4:	74 0d                	je     4df3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x103>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4de6:	49 8b 46 30          	mov    0x30(%r14),%rax
    4dea:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4dee:	e8 9d e5 ff ff       	call   3390 <_ZdlPvm@plt>
    4df3:	be 40 00 00 00       	mov    $0x40,%esi
    4df8:	4c 89 f7             	mov    %r14,%rdi
    4dfb:	e8 90 e5 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4e00:	4d 85 ed             	test   %r13,%r13
    4e03:	0f 84 df 00 00 00    	je     4ee8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x1f8>
	  __x = __y;
    4e09:	4d 89 ee             	mov    %r13,%r14
    4e0c:	e9 6e ff ff ff       	jmp    4d7f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x8f>
      { return _M_dataplus._M_p; }
    4e11:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4e15:	48 8d 45 30          	lea    0x30(%rbp),%rax
      { return static_cast<_Link_type>(__x->_M_left); }
    4e19:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
	if (!_M_is_local())
    4e1d:	48 39 c7             	cmp    %rax,%rdi
    4e20:	74 0d                	je     4e2f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x13f>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4e22:	48 8b 45 30          	mov    0x30(%rbp),%rax
    4e26:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4e2a:	e8 61 e5 ff ff       	call   3390 <_ZdlPvm@plt>
    4e2f:	be 40 00 00 00       	mov    $0x40,%esi
    4e34:	48 89 ef             	mov    %rbp,%rdi
    4e37:	e8 54 e5 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4e3c:	48 85 db             	test   %rbx,%rbx
    4e3f:	74 6b                	je     4eac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x1bc>
	  __x = __y;
    4e41:	48 89 dd             	mov    %rbx,%rbp
    4e44:	e9 0e ff ff ff       	jmp    4d57 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x67>
    4e49:	be 40 00 00 00       	mov    $0x40,%esi
    4e4e:	48 89 d7             	mov    %rdx,%rdi
    4e51:	e8 3a e5 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4e56:	4d 85 ed             	test   %r13,%r13
    4e59:	0f 84 76 ff ff ff    	je     4dd5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0xe5>
	  __x = __y;
    4e5f:	4c 89 ea             	mov    %r13,%rdx
    4e62:	e9 21 ff ff ff       	jmp    4d88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x98>
    4e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4e6e:	00 00 
      { return _M_dataplus._M_p; }
    4e70:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4e74:	48 8d 43 30          	lea    0x30(%rbx),%rax
      { return static_cast<_Link_type>(__x->_M_left); }
    4e78:	4c 8b 63 10          	mov    0x10(%rbx),%r12
	if (!_M_is_local())
    4e7c:	48 39 c7             	cmp    %rax,%rdi
    4e7f:	74 0d                	je     4e8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x19e>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4e81:	48 8b 43 30          	mov    0x30(%rbx),%rax
    4e85:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4e89:	e8 02 e5 ff ff       	call   3390 <_ZdlPvm@plt>
    4e8e:	be 40 00 00 00       	mov    $0x40,%esi
    4e93:	48 89 df             	mov    %rbx,%rdi
    4e96:	e8 f5 e4 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4e9b:	4d 85 e4             	test   %r12,%r12
    4e9e:	0f 84 6d ff ff ff    	je     4e11 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x121>
	  __x = __y;
    4ea4:	4c 89 e3             	mov    %r12,%rbx
    4ea7:	e9 b8 fe ff ff       	jmp    4d64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x74>
      { return _M_dataplus._M_p; }
    4eac:	49 8b 7f 20          	mov    0x20(%r15),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4eb0:	49 8d 47 30          	lea    0x30(%r15),%rax
      { return static_cast<_Link_type>(__x->_M_left); }
    4eb4:	49 8b 5f 10          	mov    0x10(%r15),%rbx
	if (!_M_is_local())
    4eb8:	48 39 c7             	cmp    %rax,%rdi
    4ebb:	74 0d                	je     4eca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x1da>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4ebd:	49 8b 47 30          	mov    0x30(%r15),%rax
    4ec1:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4ec5:	e8 c6 e4 ff ff       	call   3390 <_ZdlPvm@plt>
    4eca:	be 40 00 00 00       	mov    $0x40,%esi
    4ecf:	4c 89 ff             	mov    %r15,%rdi
    4ed2:	e8 b9 e4 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4ed7:	48 85 db             	test   %rbx,%rbx
    4eda:	74 4c                	je     4f28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x238>
	  __x = __y;
    4edc:	49 89 df             	mov    %rbx,%r15
    4edf:	e9 66 fe ff ff       	jmp    4d4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x5a>
    4ee4:	0f 1f 40 00          	nopl   0x0(%rax)
      { return _M_dataplus._M_p; }
    4ee8:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4eed:	49 8d 44 24 30       	lea    0x30(%r12),%rax
      { return static_cast<_Link_type>(__x->_M_left); }
    4ef2:	4d 8b 6c 24 10       	mov    0x10(%r12),%r13
	if (!_M_is_local())
    4ef7:	48 39 c7             	cmp    %rax,%rdi
    4efa:	74 0e                	je     4f0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x21a>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4efc:	49 8b 44 24 30       	mov    0x30(%r12),%rax
    4f01:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4f05:	e8 86 e4 ff ff       	call   3390 <_ZdlPvm@plt>
    4f0a:	be 40 00 00 00       	mov    $0x40,%esi
    4f0f:	4c 89 e7             	mov    %r12,%rdi
    4f12:	e8 79 e4 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4f17:	4d 85 ed             	test   %r13,%r13
    4f1a:	0f 84 50 ff ff ff    	je     4e70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x180>
	  __x = __y;
    4f20:	4d 89 ec             	mov    %r13,%r12
    4f23:	e9 49 fe ff ff       	jmp    4d71 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x81>
      { return static_cast<_Link_type>(__x->_M_left); }
    4f28:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
      { return _M_dataplus._M_p; }
    4f2d:	49 8b 7f 20          	mov    0x20(%r15),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4f31:	49 8d 47 30          	lea    0x30(%r15),%rax
    4f35:	49 8b 5f 10          	mov    0x10(%r15),%rbx
	if (!_M_is_local())
    4f39:	48 39 c7             	cmp    %rax,%rdi
    4f3c:	74 2e                	je     4f6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x27c>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4f3e:	49 8b 47 30          	mov    0x30(%r15),%rax
    4f42:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4f46:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4f4b:	e8 40 e4 ff ff       	call   3390 <_ZdlPvm@plt>
    4f50:	be 40 00 00 00       	mov    $0x40,%esi
    4f55:	4c 89 ff             	mov    %r15,%rdi
    4f58:	e8 33 e4 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4f5d:	48 85 db             	test   %rbx,%rbx
    4f60:	74 1c                	je     4f7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x28e>
	  __x = __y;
    4f62:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    4f67:	e9 cc fd ff ff       	jmp    4d38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x48>
    4f6c:	4c 89 ff             	mov    %r15,%rdi
    4f6f:	be 40 00 00 00       	mov    $0x40,%esi
    4f74:	e8 17 e4 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4f79:	48 85 db             	test   %rbx,%rbx
    4f7c:	75 e4                	jne    4f62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x272>
      { return static_cast<_Link_type>(__x->_M_left); }
    4f7e:	4c 8b 3c 24          	mov    (%rsp),%r15
      { return _M_dataplus._M_p; }
    4f82:	49 8b 7f 20          	mov    0x20(%r15),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4f86:	49 8d 47 30          	lea    0x30(%r15),%rax
    4f8a:	49 8b 5f 10          	mov    0x10(%r15),%rbx
	if (!_M_is_local())
    4f8e:	48 39 c7             	cmp    %rax,%rdi
    4f91:	74 2c                	je     4fbf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x2cf>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4f93:	49 8b 47 30          	mov    0x30(%r15),%rax
    4f97:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4f9b:	48 89 04 24          	mov    %rax,(%rsp)
    4f9f:	e8 ec e3 ff ff       	call   3390 <_ZdlPvm@plt>
    4fa4:	be 40 00 00 00       	mov    $0x40,%esi
    4fa9:	4c 89 ff             	mov    %r15,%rdi
    4fac:	e8 df e3 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4fb1:	48 85 db             	test   %rbx,%rbx
    4fb4:	74 1b                	je     4fd1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x2e1>
	  __x = __y;
    4fb6:	48 89 1c 24          	mov    %rbx,(%rsp)
    4fba:	e9 63 fd ff ff       	jmp    4d22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x32>
    4fbf:	4c 89 ff             	mov    %r15,%rdi
    4fc2:	be 40 00 00 00       	mov    $0x40,%esi
    4fc7:	e8 c4 e3 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    4fcc:	48 85 db             	test   %rbx,%rbx
    4fcf:	75 e5                	jne    4fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x2c6>
      { return static_cast<_Link_type>(__x->_M_left); }
    4fd1:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
      { return _M_dataplus._M_p; }
    4fd6:	49 8b 7e 20          	mov    0x20(%r14),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4fda:	49 8d 46 30          	lea    0x30(%r14),%rax
    4fde:	49 8b 5e 10          	mov    0x10(%r14),%rbx
	if (!_M_is_local())
    4fe2:	48 39 c7             	cmp    %rax,%rdi
    4fe5:	74 2d                	je     5014 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x324>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4fe7:	49 8b 46 30          	mov    0x30(%r14),%rax
    4feb:	48 8d 70 01          	lea    0x1(%rax),%rsi
    4fef:	48 89 04 24          	mov    %rax,(%rsp)
    4ff3:	e8 98 e3 ff ff       	call   3390 <_ZdlPvm@plt>
    4ff8:	be 40 00 00 00       	mov    $0x40,%esi
    4ffd:	4c 89 f7             	mov    %r14,%rdi
    5000:	e8 8b e3 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    5005:	48 85 db             	test   %rbx,%rbx
    5008:	74 1c                	je     5026 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x336>
	  __x = __y;
    500a:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    500f:	e9 f8 fc ff ff       	jmp    4d0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x1c>
    5014:	4c 89 f7             	mov    %r14,%rdi
    5017:	be 40 00 00 00       	mov    $0x40,%esi
    501c:	e8 6f e3 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    5021:	48 85 db             	test   %rbx,%rbx
    5024:	75 e4                	jne    500a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0+0x31a>
    }
    5026:	48 83 c4 28          	add    $0x28,%rsp
    502a:	5b                   	pop    %rbx
    502b:	5d                   	pop    %rbp
    502c:	41 5c                	pop    %r12
    502e:	41 5d                	pop    %r13
    5030:	41 5e                	pop    %r14
    5032:	41 5f                	pop    %r15
    5034:	c3                   	ret
    5035:	90                   	nop
    5036:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    503d:	00 00 00 

0000000000005040 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv>:
rtvc::RenderApplication::getSupportedExtensions() {
    5040:	41 55                	push   %r13
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, nullptr);
    5042:	31 d2                	xor    %edx,%edx
rtvc::RenderApplication::getSupportedExtensions() {
    5044:	41 54                	push   %r12
    5046:	55                   	push   %rbp
    5047:	53                   	push   %rbx
    5048:	48 89 fb             	mov    %rdi,%rbx
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, nullptr);
    504b:	31 ff                	xor    %edi,%edi
rtvc::RenderApplication::getSupportedExtensions() {
    504d:	48 83 ec 18          	sub    $0x18,%rsp
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, nullptr);
    5051:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
  uint32_t extensionsCount = 0;
    5056:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    505d:	00 
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, nullptr);
    505e:	48 89 ee             	mov    %rbp,%rsi
    5061:	e8 4a e2 ff ff       	call   32b0 <vkEnumerateInstanceExtensionProperties@plt>
  std::vector<VkExtensionProperties> extensions{extensionsCount};
    5066:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
	: _M_start(), _M_finish(), _M_end_of_storage()
    506b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    506f:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    5076:	00 
    5077:	0f 11 03             	movups %xmm0,(%rbx)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    507a:	4d 85 e4             	test   %r12,%r12
    507d:	0f 84 d5 00 00 00    	je     5158 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv+0x118>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5083:	4d 89 e0             	mov    %r12,%r8
    5086:	49 c1 e0 06          	shl    $0x6,%r8
    508a:	4d 01 e0             	add    %r12,%r8
    508d:	4e 8d 2c 85 00 00 00 	lea    0x0(,%r8,4),%r13
    5094:	00 
    5095:	4c 89 ef             	mov    %r13,%rdi
    5098:	e8 d3 e2 ff ff       	call   3370 <_Znwm@plt>
	  // Allow std::_Construct to be used in constant expressions.
	  std::construct_at(__p, std::forward<_Args>(__args)...);
	  return;
	}
#endif
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    509d:	48 8d 78 08          	lea    0x8(%rax),%rdi
    50a1:	48 89 c1             	mov    %rax,%rcx
	this->_M_impl._M_start = this->_M_allocate(__n);
    50a4:	66 48 0f 6e c0       	movq   %rax,%xmm0
    50a9:	48 89 c2             	mov    %rax,%rdx
    50ac:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    50b0:	4e 8d 04 28          	lea    (%rax,%r13,1),%r8
	this->_M_impl._M_start = this->_M_allocate(__n);
    50b4:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    50b8:	48 29 f9             	sub    %rdi,%rcx
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    50bb:	4c 89 43 10          	mov    %r8,0x10(%rbx)
    50bf:	4c 8d 88 0c 01 00 00 	lea    0x10c(%rax),%r9
    50c6:	81 c1 04 01 00 00    	add    $0x104,%ecx
	this->_M_impl._M_start = this->_M_allocate(__n);
    50cc:	0f 11 03             	movups %xmm0,(%rbx)
    50cf:	c1 e9 03             	shr    $0x3,%ecx
    50d2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    50d9:	31 c0                	xor    %eax,%eax
    50db:	49 c7 41 f0 00 00 00 	movq   $0x0,-0x10(%r9)
    50e2:	00 
    50e3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
	  if (__n > 0)
	    {
	      typename iterator_traits<_ForwardIterator>::value_type* __val
		= std::__addressof(*__first);
	      std::_Construct(__val);
	      ++__first;
    50e6:	48 8d 82 04 01 00 00 	lea    0x104(%rdx),%rax
	       std::random_access_iterator_tag)
    {
#if __cplusplus >= 201103L
      static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
#endif
      if (__n <= 0)
    50ed:	49 83 fc 01          	cmp    $0x1,%r12
    50f1:	75 54                	jne    5147 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv+0x107>
      // Called by the vector(n) constructor.
      _GLIBCXX20_CONSTEXPR
      void
      _M_default_initialize(size_type __n)
      {
	this->_M_impl._M_finish =
    50f3:	48 89 43 08          	mov    %rax,0x8(%rbx)
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount,
    50f7:	48 89 ee             	mov    %rbp,%rsi
    50fa:	31 ff                	xor    %edi,%edi
    50fc:	e8 af e1 ff ff       	call   32b0 <vkEnumerateInstanceExtensionProperties@plt>
}
    5101:	48 83 c4 18          	add    $0x18,%rsp
    5105:	48 89 d8             	mov    %rbx,%rax
    5108:	5b                   	pop    %rbx
    5109:	5d                   	pop    %rbp
    510a:	41 5c                	pop    %r12
    510c:	41 5d                	pop    %r13
    510e:	c3                   	ret
    510f:	90                   	nop
	*__first = __value;
    5110:	48 8b 0a             	mov    (%rdx),%rcx
    5113:	48 8d 78 08          	lea    0x8(%rax),%rdi
    5117:	48 89 d6             	mov    %rdx,%rsi
    511a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    511e:	48 89 08             	mov    %rcx,(%rax)
    5121:	49 8b 49 f0          	mov    -0x10(%r9),%rcx
    5125:	48 89 88 fc 00 00 00 	mov    %rcx,0xfc(%rax)
    512c:	48 89 c1             	mov    %rax,%rcx
      for (; __first != __last; ++__first)
    512f:	48 05 04 01 00 00    	add    $0x104,%rax
	*__first = __value;
    5135:	48 29 f9             	sub    %rdi,%rcx
    5138:	48 29 ce             	sub    %rcx,%rsi
    513b:	81 c1 04 01 00 00    	add    $0x104,%ecx
    5141:	c1 e9 03             	shr    $0x3,%ecx
    5144:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    5147:	4c 39 c0             	cmp    %r8,%rax
    514a:	75 c4                	jne    5110 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv+0xd0>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    514c:	4c 89 c0             	mov    %r8,%rax
    514f:	eb a2                	jmp    50f3 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv+0xb3>
    5151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5158:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    515f:	31 d2                	xor    %edx,%edx
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5161:	31 c0                	xor    %eax,%eax
    5163:	eb 8e                	jmp    50f3 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv+0xb3>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5165:	48 89 c5             	mov    %rax,%rbp
    5168:	e9 79 e7 ff ff       	jmp    38e6 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv.cold>
    516d:	90                   	nop
    516e:	66 90                	xchg   %ax,%ax

0000000000005170 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv>:
std::vector<const char *> rtvc::RenderApplication::getRequiredExtensions() {
    5170:	41 55                	push   %r13
    5172:	41 54                	push   %r12
    5174:	55                   	push   %rbp
    5175:	53                   	push   %rbx
    5176:	48 89 fb             	mov    %rdi,%rbx
    5179:	48 83 ec 18          	sub    $0x18,%rsp
  glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    517d:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
  uint32_t glfwExtensionCount = 0;
    5182:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    5189:	00 
  glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    518a:	e8 d1 e0 ff ff       	call   3260 <glfwGetRequiredInstanceExtensions@plt>
	: _M_start(), _M_finish(), _M_end_of_storage()
    518f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5193:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    519a:	00 
    519b:	49 89 c4             	mov    %rax,%r12
                                       glfwExtensions + glfwExtensionCount};
    519e:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    51a2:	0f 11 03             	movups %xmm0,(%rbx)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    51a5:	48 c1 e0 03          	shl    $0x3,%rax
    51a9:	74 3d                	je     51e8 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv+0x78>
    51ab:	48 89 c7             	mov    %rax,%rdi
    51ae:	48 89 c5             	mov    %rax,%rbp
    51b1:	e8 ba e1 ff ff       	call   3370 <_Znwm@plt>
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    51b6:	4c 8d 2c 28          	lea    (%rax,%rbp,1),%r13
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    51ba:	48 89 03             	mov    %rax,(%rbx)
    51bd:	48 89 c7             	mov    %rax,%rdi
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    51c0:	48 89 ea             	mov    %rbp,%rdx
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    51c3:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    51c7:	4c 89 e6             	mov    %r12,%rsi
    51ca:	e8 b1 e0 ff ff       	call   3280 <memcpy@plt>
	  this->_M_impl._M_finish =
    51cf:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
}
    51d3:	48 83 c4 18          	add    $0x18,%rsp
    51d7:	48 89 d8             	mov    %rbx,%rax
    51da:	5b                   	pop    %rbx
    51db:	5d                   	pop    %rbp
    51dc:	41 5c                	pop    %r12
    51de:	41 5d                	pop    %r13
    51e0:	c3                   	ret
    51e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    51e8:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    51ef:	45 31 ed             	xor    %r13d,%r13d
    51f2:	eb db                	jmp    51cf <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv+0x5f>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    51f4:	48 89 c5             	mov    %rax,%rbp
    51f7:	e9 06 e7 ff ff       	jmp    3902 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv.cold>
    51fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005200 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv>:
bool rtvc::RenderApplication::checkValidationLayerSupport() {
    5200:	41 57                	push   %r15
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    5202:	31 f6                	xor    %esi,%esi
bool rtvc::RenderApplication::checkValidationLayerSupport() {
    5204:	41 56                	push   %r14
    5206:	41 55                	push   %r13
    5208:	41 54                	push   %r12
    520a:	55                   	push   %rbp
    520b:	53                   	push   %rbx
    520c:	48 89 fb             	mov    %rdi,%rbx
    520f:	48 83 ec 28          	sub    $0x28,%rsp
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    5213:	4c 8d 74 24 1c       	lea    0x1c(%rsp),%r14
    5218:	4c 89 f7             	mov    %r14,%rdi
    521b:	e8 00 e2 ff ff       	call   3420 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    5220:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    5224:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5229:	48 85 c0             	test   %rax,%rax
    522c:	0f 84 8a 01 00 00    	je     53bc <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1bc>
    5232:	49 89 c4             	mov    %rax,%r12
    5235:	49 89 c7             	mov    %rax,%r15
    5238:	49 c1 e4 06          	shl    $0x6,%r12
    523c:	49 01 c4             	add    %rax,%r12
    523f:	49 c1 e4 03          	shl    $0x3,%r12
    5243:	4c 89 e7             	mov    %r12,%rdi
    5246:	e8 25 e1 ff ff       	call   3370 <_Znwm@plt>
    524b:	48 8d 78 08          	lea    0x8(%rax),%rdi
    524f:	48 89 c1             	mov    %rax,%rcx
    5252:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5259:	4c 8d 80 08 02 00 00 	lea    0x208(%rax),%r8
    5260:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5264:	49 89 c5             	mov    %rax,%r13
    5267:	48 8d 90 10 02 00 00 	lea    0x210(%rax),%rdx
    526e:	31 c0                	xor    %eax,%eax
    5270:	48 29 f9             	sub    %rdi,%rcx
    5273:	48 c7 42 f0 00 00 00 	movq   $0x0,-0x10(%rdx)
    527a:	00 
    527b:	4c 89 c5             	mov    %r8,%rbp
    527e:	81 c1 08 02 00 00    	add    $0x208,%ecx
    5284:	c1 e9 03             	shr    $0x3,%ecx
    5287:	f3 48 ab             	rep stos %rax,%es:(%rdi)
      if (__n <= 0)
    528a:	49 83 ff 01          	cmp    $0x1,%r15
    528e:	0f 84 4f 01 00 00    	je     53e3 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1e3>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5294:	4f 8d 54 25 00       	lea    0x0(%r13,%r12,1),%r10
      for (; __first != __last; ++__first)
    5299:	4d 89 c1             	mov    %r8,%r9
    529c:	4d 39 c2             	cmp    %r8,%r10
    529f:	0f 84 7e 00 00 00    	je     5323 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x123>
    52a5:	0f 1f 00             	nopl   (%rax)
	*__first = __value;
    52a8:	49 8b 45 00          	mov    0x0(%r13),%rax
    52ac:	49 8d 79 08          	lea    0x8(%r9),%rdi
    52b0:	4c 89 ee             	mov    %r13,%rsi
    52b3:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    52b7:	49 89 01             	mov    %rax,(%r9)
    52ba:	48 8b 42 f0          	mov    -0x10(%rdx),%rax
    52be:	49 89 81 00 02 00 00 	mov    %rax,0x200(%r9)
    52c5:	4c 89 c8             	mov    %r9,%rax
      for (; __first != __last; ++__first)
    52c8:	49 81 c1 08 02 00 00 	add    $0x208,%r9
	*__first = __value;
    52cf:	48 29 f8             	sub    %rdi,%rax
    52d2:	8d 88 08 02 00 00    	lea    0x208(%rax),%ecx
    52d8:	48 29 c6             	sub    %rax,%rsi
    52db:	89 c8                	mov    %ecx,%eax
    52dd:	c1 e8 03             	shr    $0x3,%eax
    52e0:	89 c1                	mov    %eax,%ecx
    52e2:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    52e5:	4d 39 ca             	cmp    %r9,%r10
    52e8:	75 be                	jne    52a8 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0xa8>
    52ea:	49 8d 84 24 f0 fb ff 	lea    -0x410(%r12),%rax
    52f1:	ff 
    52f2:	48 ba c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rdx
    52f9:	fc c0 0f 
    52fc:	48 c1 e8 03          	shr    $0x3,%rax
    5300:	48 0f af c2          	imul   %rdx,%rax
    5304:	48 ba ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rdx
    530b:	ff ff 1f 
    530e:	48 21 d0             	and    %rdx,%rax
    5311:	48 83 c0 01          	add    $0x1,%rax
    5315:	48 89 c2             	mov    %rax,%rdx
    5318:	48 c1 e2 06          	shl    $0x6,%rdx
    531c:	48 01 d0             	add    %rdx,%rax
    531f:	49 8d 2c c0          	lea    (%r8,%rax,8),%rbp
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    5323:	4c 89 ee             	mov    %r13,%rsi
    5326:	4c 89 f7             	mov    %r14,%rdi
    5329:	e8 f2 e0 ff ff       	call   3420 <vkEnumerateInstanceLayerProperties@plt>
    532e:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
      : _M_current(_Iterator()) { }

      explicit _GLIBCXX20_CONSTEXPR
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
      : _M_current(__i) { }
    5333:	4c 8b 63 18          	mov    0x18(%rbx),%r12
    5337:	4c 8b 73 20          	mov    0x20(%rbx),%r14
  for (const char *layerName : validationLayers) {
    533b:	4d 39 e6             	cmp    %r12,%r14
    533e:	0f 84 b8 00 00 00    	je     53fc <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1fc>
    5344:	0f 1f 40 00          	nopl   0x0(%rax)
    5348:	49 8b 1c 24          	mov    (%r12),%rbx
    for (const auto &layerProperties : availableLayers) {
    534c:	4c 39 ed             	cmp    %r13,%rbp
    534f:	74 67                	je     53b8 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1b8>
    5351:	4d 89 ef             	mov    %r13,%r15
    5354:	eb 16                	jmp    536c <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x16c>
    5356:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    535d:	00 00 00 
    5360:	49 81 c7 08 02 00 00 	add    $0x208,%r15
    5367:	4c 39 fd             	cmp    %r15,%rbp
    536a:	74 4c                	je     53b8 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1b8>
      if (strcmp(layerName, layerProperties.layerName) == 0) {
    536c:	4c 89 fe             	mov    %r15,%rsi
    536f:	48 89 df             	mov    %rbx,%rdi
    5372:	e8 39 e2 ff ff       	call   35b0 <strcmp@plt>
    5377:	85 c0                	test   %eax,%eax
    5379:	75 e5                	jne    5360 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x160>
  for (const char *layerName : validationLayers) {
    537b:	49 83 c4 08          	add    $0x8,%r12
    537f:	4d 39 e6             	cmp    %r12,%r14
    5382:	75 c4                	jne    5348 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x148>
  return true;
    5384:	bb 01 00 00 00       	mov    $0x1,%ebx
    5389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	if (__p)
    5390:	4d 85 ed             	test   %r13,%r13
    5393:	74 0d                	je     53a2 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1a2>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5395:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    539a:	4c 89 ef             	mov    %r13,%rdi
    539d:	e8 ee df ff ff       	call   3390 <_ZdlPvm@plt>
}
    53a2:	48 83 c4 28          	add    $0x28,%rsp
    53a6:	89 d8                	mov    %ebx,%eax
    53a8:	5b                   	pop    %rbx
    53a9:	5d                   	pop    %rbp
    53aa:	41 5c                	pop    %r12
    53ac:	41 5d                	pop    %r13
    53ae:	41 5e                	pop    %r14
    53b0:	41 5f                	pop    %r15
    53b2:	c3                   	ret
    53b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      return false;
    53b8:	31 db                	xor    %ebx,%ebx
    53ba:	eb d4                	jmp    5390 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x190>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    53bc:	4c 89 f7             	mov    %r14,%rdi
    53bf:	31 f6                	xor    %esi,%esi
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    53c1:	45 31 ed             	xor    %r13d,%r13d
    53c4:	31 ed                	xor    %ebp,%ebp
    53c6:	e8 55 e0 ff ff       	call   3420 <vkEnumerateInstanceLayerProperties@plt>
    53cb:	4c 8b 63 18          	mov    0x18(%rbx),%r12
    53cf:	4c 8b 73 20          	mov    0x20(%rbx),%r14
  return true;
    53d3:	bb 01 00 00 00       	mov    $0x1,%ebx
  for (const char *layerName : validationLayers) {
    53d8:	4d 39 f4             	cmp    %r14,%r12
    53db:	0f 85 67 ff ff ff    	jne    5348 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x148>
    53e1:	eb bf                	jmp    53a2 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1a2>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    53e3:	4c 89 ee             	mov    %r13,%rsi
    53e6:	4c 89 f7             	mov    %r14,%rdi
    53e9:	e8 32 e0 ff ff       	call   3420 <vkEnumerateInstanceLayerProperties@plt>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    53ee:	48 c7 44 24 08 08 02 	movq   $0x208,0x8(%rsp)
    53f5:	00 00 
    53f7:	e9 37 ff ff ff       	jmp    5333 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x133>
  return true;
    53fc:	bb 01 00 00 00       	mov    $0x1,%ebx
    5401:	eb 92                	jmp    5395 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x195>
    5403:	48 89 c3             	mov    %rax,%rbx
    5406:	e9 13 e5 ff ff       	jmp    391e <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv.cold>
    540b:	90                   	nop
    540c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005410 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:
  createInfo.messageSeverity = VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
    5410:	48 8b 05 d1 50 00 00 	mov    0x50d1(%rip),%rax        # a4e8 <_ZTSSt19bad_optional_access+0x18>
  createInfo = {};
    5417:	66 0f ef c0          	pxor   %xmm0,%xmm0
    541b:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
  createInfo.messageSeverity = VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
    541f:	48 89 46 14          	mov    %rax,0x14(%rsi)
  createInfo.pfnUserCallback = debugCallback;
    5423:	48 8d 05 96 f7 ff ff 	lea    -0x86a(%rip),%rax        # 4bc0 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
  createInfo = {};
    542a:	0f 11 06             	movups %xmm0,(%rsi)
    542d:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    5431:	c7 06 04 be 9c 3b    	movl   $0x3b9cbe04,(%rsi)
  createInfo.pfnUserCallback = debugCallback;
    5437:	48 89 46 20          	mov    %rax,0x20(%rsi)
}
    543b:	c3                   	ret
    543c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005440 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv>:
}
    5440:	c3                   	ret
    5441:	90                   	nop
    5442:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5449:	00 00 00 00 
    544d:	0f 1f 00             	nopl   (%rax)

0000000000005450 <_ZN4rtvc17RenderApplication13creatInstanceEv>:
void rtvc::RenderApplication::creatInstance() {
    5450:	41 57                	push   %r15
  VkApplicationInfo appInfo{};
    5452:	66 0f ef c0          	pxor   %xmm0,%xmm0
  appInfo.pApplicationName = "Test Triangle";
    5456:	48 8d 05 77 4c 00 00 	lea    0x4c77(%rip),%rax        # a0d4 <_IO_stdin_used+0xd4>
void rtvc::RenderApplication::creatInstance() {
    545d:	41 56                	push   %r14
    545f:	41 55                	push   %r13
    5461:	41 54                	push   %r12
    5463:	55                   	push   %rbp
    5464:	53                   	push   %rbx
    5465:	48 89 fb             	mov    %rdi,%rbx
  auto requiredExtensions = getRequiredExtensions();
    5468:	48 89 de             	mov    %rbx,%rsi
void rtvc::RenderApplication::creatInstance() {
    546b:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
  VkApplicationInfo appInfo{};
    5472:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
  auto requiredExtensions = getRequiredExtensions();
    5477:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  appInfo.pApplicationName = "Test Triangle";
    547c:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
  appInfo.pEngineName = "No Engine";
    5481:	48 8d 05 5a 4c 00 00 	lea    0x4c5a(%rip),%rax        # a0e2 <_IO_stdin_used+0xe2>
    5488:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    548f:	00 
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    5490:	48 8b 05 59 50 00 00 	mov    0x5059(%rip),%rax        # a4f0 <_ZTSSt19bad_optional_access+0x20>
  VkInstanceCreateInfo createInfo{};
    5497:	0f 11 84 24 a4 00 00 	movups %xmm0,0xa4(%rsp)
    549e:	00 
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    549f:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    54a6:	00 
  createInfo.pApplicationInfo = &appInfo;
    54a7:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    54ac:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    54b3:	00 
  VkInstanceCreateInfo createInfo{};
    54b4:	0f 11 84 24 b4 00 00 	movups %xmm0,0xb4(%rsp)
    54bb:	00 
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    54bc:	c7 44 24 78 00 00 40 	movl   $0x400000,0x78(%rsp)
    54c3:	00 
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    54c4:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    54cb:	01 00 00 00 
  VkApplicationInfo appInfo{};
    54cf:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
  VkInstanceCreateInfo createInfo{};
    54d4:	0f 11 84 24 94 00 00 	movups %xmm0,0x94(%rsp)
    54db:	00 
    54dc:	0f 11 84 24 c0 00 00 	movups %xmm0,0xc0(%rsp)
    54e3:	00 
  auto requiredExtensions = getRequiredExtensions();
    54e4:	e8 87 fc ff ff       	call   5170 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    54e9:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
  if (vkCreateInstance(&createInfo, nullptr, &instance) != VK_SUCCESS)
    54ee:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    54f2:	31 f6                	xor    %esi,%esi
    54f4:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
    54f9:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    5500:	00 
    createInfo.enabledLayerCount = 0;
    5501:	c7 84 24 b0 00 00 00 	movl   $0x0,0xb0(%rsp)
    5508:	00 00 00 00 
    createInfo.pNext = nullptr;
    550c:	48 c7 84 24 98 00 00 	movq   $0x0,0x98(%rsp)
    5513:	00 00 00 00 00 
    5518:	4c 89 e8             	mov    %r13,%rax
    551b:	4c 29 f8             	sub    %r15,%rax
  createInfo.ppEnabledExtensionNames = requiredExtensions.data();
    551e:	4c 89 bc 24 c8 00 00 	mov    %r15,0xc8(%rsp)
    5525:	00 
    5526:	48 c1 f8 03          	sar    $0x3,%rax
  createInfo.enabledExtensionCount =
    552a:	89 84 24 c0 00 00 00 	mov    %eax,0xc0(%rsp)
  if (vkCreateInstance(&createInfo, nullptr, &instance) != VK_SUCCESS)
    5531:	e8 5a df ff ff       	call   3490 <vkCreateInstance@plt>
    5536:	85 c0                	test   %eax,%eax
    5538:	0f 85 f4 e3 ff ff    	jne    3932 <_ZN4rtvc17RenderApplication13creatInstanceEv.cold>
  auto supportedExtensions = getSupportedExtensions();
    553e:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    5543:	48 89 de             	mov    %rbx,%rsi
    5546:	e8 f5 fa ff ff       	call   5040 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv>
	__ostream_insert(__out, __s,
    554b:	48 8d 1d ae 8e 00 00 	lea    0x8eae(%rip),%rbx        # e400 <_ZSt4cout@GLIBCXX_3.4>
    5552:	ba 16 00 00 00       	mov    $0x16,%edx
    5557:	48 8d 35 a9 4b 00 00 	lea    0x4ba9(%rip),%rsi        # a107 <_IO_stdin_used+0x107>
    555e:	48 89 df             	mov    %rbx,%rdi
    5561:	e8 ca de ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5566:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    556b:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
    5570:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  for (const auto &extension : supportedExtensions)
    5575:	49 39 c6             	cmp    %rax,%r14
    5578:	0f 84 a2 00 00 00    	je     5620 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x1d0>
    557e:	49 89 c4             	mov    %rax,%r12
    5581:	eb 23                	jmp    55a6 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x156>
    5583:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	return __ostream_insert(__out, &__c, 1);
    5588:	48 8d 74 24 1b       	lea    0x1b(%rsp),%rsi
    558d:	ba 01 00 00 00       	mov    $0x1,%edx
    5592:	48 89 ef             	mov    %rbp,%rdi
    5595:	e8 96 de ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    559a:	49 81 c4 04 01 00 00 	add    $0x104,%r12
    55a1:	4d 39 e6             	cmp    %r12,%r14
    55a4:	74 7a                	je     5620 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x1d0>
      if (__out.width() != 0)
    55a6:	48 8b 03             	mov    (%rbx),%rax
    55a9:	c6 44 24 1a 09       	movb   $0x9,0x1a(%rsp)
    { return _M_width; }
    55ae:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    55b2:	48 83 7c 03 10 00    	cmpq   $0x0,0x10(%rbx,%rax,1)
    55b8:	0f 84 ba 01 00 00    	je     5778 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x328>
	return __ostream_insert(__out, &__c, 1);
    55be:	48 8d 74 24 1a       	lea    0x1a(%rsp),%rsi
    55c3:	ba 01 00 00 00       	mov    $0x1,%edx
    55c8:	48 89 df             	mov    %rbx,%rdi
    55cb:	e8 60 de ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    55d0:	48 89 c5             	mov    %rax,%rbp
      if (!__s)
    55d3:	4d 85 e4             	test   %r12,%r12
    55d6:	0f 84 b9 01 00 00    	je     5795 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x345>
    55dc:	4c 89 e7             	mov    %r12,%rdi
    55df:	e8 5c db ff ff       	call   3140 <strlen@plt>
	__ostream_insert(__out, __s,
    55e4:	4c 89 e6             	mov    %r12,%rsi
    55e7:	48 89 ef             	mov    %rbp,%rdi
    55ea:	48 89 c2             	mov    %rax,%rdx
    55ed:	e8 3e de ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
      if (__out.width() != 0)
    55f2:	48 8b 45 00          	mov    0x0(%rbp),%rax
    55f6:	c6 44 24 1b 0a       	movb   $0xa,0x1b(%rsp)
    55fb:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    55ff:	48 83 7c 05 10 00    	cmpq   $0x0,0x10(%rbp,%rax,1)
    5605:	75 81                	jne    5588 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x138>
      __out.put(__c);
    5607:	be 0a 00 00 00       	mov    $0xa,%esi
    560c:	48 89 ef             	mov    %rbp,%rdi
    560f:	e8 1c da ff ff       	call   3030 <_ZNSo3putEc@plt>
    5614:	49 81 c4 04 01 00 00 	add    $0x104,%r12
    561b:	4d 39 e6             	cmp    %r12,%r14
    561e:	75 86                	jne    55a6 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x156>
      if (__out.width() != 0)
    5620:	48 8b 05 d9 8d 00 00 	mov    0x8dd9(%rip),%rax        # e400 <_ZSt4cout@GLIBCXX_3.4>
    5627:	c6 44 24 1c 0a       	movb   $0xa,0x1c(%rsp)
    562c:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5630:	48 83 7c 03 10 00    	cmpq   $0x0,0x10(%rbx,%rax,1)
    5636:	0f 84 cc 01 00 00    	je     5808 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x3b8>
	return __ostream_insert(__out, &__c, 1);
    563c:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
    5641:	ba 01 00 00 00       	mov    $0x1,%edx
    5646:	48 89 df             	mov    %rbx,%rdi
    5649:	e8 e2 dd ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
	__ostream_insert(__out, __s,
    564e:	ba 15 00 00 00       	mov    $0x15,%edx
    5653:	48 8d 35 c4 4a 00 00 	lea    0x4ac4(%rip),%rsi        # a11e <_IO_stdin_used+0x11e>
    565a:	48 89 df             	mov    %rbx,%rdi
    565d:	e8 ce dd ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
  for (const auto &extension : requiredExtensions)
    5662:	4d 39 ef             	cmp    %r13,%r15
    5665:	0f 84 9b 00 00 00    	je     5706 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x2b6>
    566b:	4d 89 fc             	mov    %r15,%r12
    566e:	eb 1b                	jmp    568b <_ZN4rtvc17RenderApplication13creatInstanceEv+0x23b>
	return __ostream_insert(__out, &__c, 1);
    5670:	48 8d 74 24 1e       	lea    0x1e(%rsp),%rsi
    5675:	ba 01 00 00 00       	mov    $0x1,%edx
    567a:	48 89 ef             	mov    %rbp,%rdi
    567d:	e8 ae dd ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5682:	49 83 c4 08          	add    $0x8,%r12
    5686:	4d 39 e5             	cmp    %r12,%r13
    5689:	74 7b                	je     5706 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x2b6>
      if (__out.width() != 0)
    568b:	48 8b 03             	mov    (%rbx),%rax
    568e:	c6 44 24 1d 09       	movb   $0x9,0x1d(%rsp)
    5693:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5697:	48 83 7c 03 10 00    	cmpq   $0x0,0x10(%rbx,%rax,1)
    569d:	0f 84 0d 01 00 00    	je     57b0 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x360>
	return __ostream_insert(__out, &__c, 1);
    56a3:	48 8d 74 24 1d       	lea    0x1d(%rsp),%rsi
    56a8:	ba 01 00 00 00       	mov    $0x1,%edx
    56ad:	48 89 df             	mov    %rbx,%rdi
    56b0:	e8 7b dd ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    std::cout << '\t' << extension << '\n';
    56b5:	4d 8b 34 24          	mov    (%r12),%r14
    56b9:	48 89 c5             	mov    %rax,%rbp
      if (!__s)
    56bc:	4d 85 f6             	test   %r14,%r14
    56bf:	0f 84 0c 01 00 00    	je     57d1 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x381>
    56c5:	4c 89 f7             	mov    %r14,%rdi
    56c8:	e8 73 da ff ff       	call   3140 <strlen@plt>
	__ostream_insert(__out, __s,
    56cd:	4c 89 f6             	mov    %r14,%rsi
    56d0:	48 89 ef             	mov    %rbp,%rdi
    56d3:	48 89 c2             	mov    %rax,%rdx
    56d6:	e8 55 dd ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
      if (__out.width() != 0)
    56db:	48 8b 45 00          	mov    0x0(%rbp),%rax
    56df:	c6 44 24 1e 0a       	movb   $0xa,0x1e(%rsp)
    56e4:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    56e8:	48 83 7c 05 10 00    	cmpq   $0x0,0x10(%rbp,%rax,1)
    56ee:	75 80                	jne    5670 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x220>
      __out.put(__c);
    56f0:	be 0a 00 00 00       	mov    $0xa,%esi
    56f5:	48 89 ef             	mov    %rbp,%rdi
    56f8:	e8 33 d9 ff ff       	call   3030 <_ZNSo3putEc@plt>
  for (const auto &extension : requiredExtensions)
    56fd:	49 83 c4 08          	add    $0x8,%r12
    5701:	4d 39 e5             	cmp    %r12,%r13
    5704:	75 85                	jne    568b <_ZN4rtvc17RenderApplication13creatInstanceEv+0x23b>
      if (__out.width() != 0)
    5706:	48 8b 05 f3 8c 00 00 	mov    0x8cf3(%rip),%rax        # e400 <_ZSt4cout@GLIBCXX_3.4>
    570d:	c6 44 24 1f 0a       	movb   $0xa,0x1f(%rsp)
    5712:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5716:	48 83 7c 03 10 00    	cmpq   $0x0,0x10(%rbx,%rax,1)
    571c:	0f 84 ce 00 00 00    	je     57f0 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x3a0>
	return __ostream_insert(__out, &__c, 1);
    5722:	48 8d 74 24 1f       	lea    0x1f(%rsp),%rsi
    5727:	ba 01 00 00 00       	mov    $0x1,%edx
    572c:	48 89 df             	mov    %rbx,%rdi
    572f:	e8 fc dc ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
	if (__p)
    5734:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    573a:	74 12                	je     574e <_ZN4rtvc17RenderApplication13creatInstanceEv+0x2fe>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    573c:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    5741:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5746:	48 29 fe             	sub    %rdi,%rsi
    5749:	e8 42 dc ff ff       	call   3390 <_ZdlPvm@plt>
	if (__p)
    574e:	4d 85 ff             	test   %r15,%r15
    5751:	74 10                	je     5763 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x313>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5753:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    5758:	4c 89 ff             	mov    %r15,%rdi
    575b:	4c 29 fe             	sub    %r15,%rsi
    575e:	e8 2d dc ff ff       	call   3390 <_ZdlPvm@plt>
}
    5763:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    576a:	5b                   	pop    %rbx
    576b:	5d                   	pop    %rbp
    576c:	41 5c                	pop    %r12
    576e:	41 5d                	pop    %r13
    5770:	41 5e                	pop    %r14
    5772:	41 5f                	pop    %r15
    5774:	c3                   	ret
    5775:	0f 1f 00             	nopl   (%rax)
      __out.put(__c);
    5778:	be 09 00 00 00       	mov    $0x9,%esi
    577d:	48 89 df             	mov    %rbx,%rdi
    5780:	e8 ab d8 ff ff       	call   3030 <_ZNSo3putEc@plt>
      return __out;
    5785:	48 8d 2d 74 8c 00 00 	lea    0x8c74(%rip),%rbp        # e400 <_ZSt4cout@GLIBCXX_3.4>
      if (!__s)
    578c:	4d 85 e4             	test   %r12,%r12
    578f:	0f 85 47 fe ff ff    	jne    55dc <_ZN4rtvc17RenderApplication13creatInstanceEv+0x18c>
	__out.setstate(ios_base::badbit);
    5795:	48 8b 45 00          	mov    0x0(%rbp),%rax
    5799:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    579d:	48 01 ef             	add    %rbp,%rdi
  { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }
    57a0:	8b 77 20             	mov    0x20(%rdi),%esi
    57a3:	83 ce 01             	or     $0x1,%esi
      { this->clear(this->rdstate() | __state); }
    57a6:	e8 15 df ff ff       	call   36c0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    57ab:	e9 42 fe ff ff       	jmp    55f2 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x1a2>
      __out.put(__c);
    57b0:	be 09 00 00 00       	mov    $0x9,%esi
    57b5:	48 89 df             	mov    %rbx,%rdi
    57b8:	e8 73 d8 ff ff       	call   3030 <_ZNSo3putEc@plt>
    std::cout << '\t' << extension << '\n';
    57bd:	4d 8b 34 24          	mov    (%r12),%r14
      return __out;
    57c1:	48 8d 2d 38 8c 00 00 	lea    0x8c38(%rip),%rbp        # e400 <_ZSt4cout@GLIBCXX_3.4>
      if (!__s)
    57c8:	4d 85 f6             	test   %r14,%r14
    57cb:	0f 85 f4 fe ff ff    	jne    56c5 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x275>
	__out.setstate(ios_base::badbit);
    57d1:	48 8b 45 00          	mov    0x0(%rbp),%rax
    57d5:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    57d9:	48 01 ef             	add    %rbp,%rdi
    57dc:	8b 77 20             	mov    0x20(%rdi),%esi
    57df:	83 ce 01             	or     $0x1,%esi
    57e2:	e8 d9 de ff ff       	call   36c0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    57e7:	e9 ef fe ff ff       	jmp    56db <_ZN4rtvc17RenderApplication13creatInstanceEv+0x28b>
    57ec:	0f 1f 40 00          	nopl   0x0(%rax)
      __out.put(__c);
    57f0:	be 0a 00 00 00       	mov    $0xa,%esi
    57f5:	48 89 df             	mov    %rbx,%rdi
    57f8:	e8 33 d8 ff ff       	call   3030 <_ZNSo3putEc@plt>
    57fd:	e9 32 ff ff ff       	jmp    5734 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x2e4>
    5802:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5808:	be 0a 00 00 00       	mov    $0xa,%esi
    580d:	48 89 df             	mov    %rbx,%rdi
    5810:	e8 1b d8 ff ff       	call   3030 <_ZNSo3putEc@plt>
    5815:	e9 34 fe ff ff       	jmp    564e <_ZN4rtvc17RenderApplication13creatInstanceEv+0x1fe>
    581a:	e9 45 e1 ff ff       	jmp    3964 <_ZN4rtvc17RenderApplication13creatInstanceEv.cold+0x32>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    581f:	48 89 c3             	mov    %rax,%rbx
    5822:	e9 5d e1 ff ff       	jmp    3984 <_ZN4rtvc17RenderApplication13creatInstanceEv.cold+0x52>
    5827:	90                   	nop
    5828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    582f:	00 

0000000000005830 <_ZN4rtvc17RenderApplication21rateDeviceSuitabilityEP18VkPhysicalDevice_T>:
}
    5830:	31 c0                	xor    %eax,%eax
    5832:	c3                   	ret
    5833:	90                   	nop
    5834:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    583b:	00 00 00 00 
    583f:	90                   	nop

0000000000005840 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>:
rtvc::RenderApplication::findQueueFamilies(VkPhysicalDevice device) {
    5840:	41 57                	push   %r15
  QueueFamilyIndices indices{};
    5842:	66 0f ef c0          	pxor   %xmm0,%xmm0
rtvc::RenderApplication::findQueueFamilies(VkPhysicalDevice device) {
    5846:	49 89 ff             	mov    %rdi,%r15
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, nullptr);
    5849:	31 d2                	xor    %edx,%edx
rtvc::RenderApplication::findQueueFamilies(VkPhysicalDevice device) {
    584b:	41 56                	push   %r14
    584d:	48 89 f7             	mov    %rsi,%rdi
    5850:	41 55                	push   %r13
    5852:	41 54                	push   %r12
    5854:	55                   	push   %rbp
    5855:	53                   	push   %rbx
    5856:	48 83 ec 78          	sub    $0x78,%rsp
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, nullptr);
    585a:	48 8d 5c 24 4c       	lea    0x4c(%rsp),%rbx
rtvc::RenderApplication::findQueueFamilies(VkPhysicalDevice device) {
    585f:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, nullptr);
    5864:	48 89 de             	mov    %rbx,%rsi
  uint32_t queueFamilyCount = 0;
    5867:	c7 44 24 4c 00 00 00 	movl   $0x0,0x4c(%rsp)
    586e:	00 
  QueueFamilyIndices indices{};
    586f:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, nullptr);
    5874:	e8 d7 d9 ff ff       	call   3250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
  std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    5879:	44 8b 6c 24 4c       	mov    0x4c(%rsp),%r13d
    587e:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5883:	4d 85 ed             	test   %r13,%r13
    5886:	0f 84 84 01 00 00    	je     5a10 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x1d0>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    588c:	4b 8d 6c 6d 00       	lea    0x0(%r13,%r13,2),%rbp
    5891:	48 c1 e5 03          	shl    $0x3,%rbp
    5895:	48 89 ef             	mov    %rbp,%rdi
    5898:	e8 d3 da ff ff       	call   3370 <_Znwm@plt>
    589d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    58a1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    58a8:	00 
    58a9:	49 89 c6             	mov    %rax,%r14
    58ac:	48 8d 40 18          	lea    0x18(%rax),%rax
    58b0:	0f 11 40 e8          	movups %xmm0,-0x18(%rax)
    58b4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
      if (__n <= 0)
    58b9:	49 83 fd 01          	cmp    $0x1,%r13
    58bd:	0f 84 65 01 00 00    	je     5a28 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x1e8>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    58c3:	49 8d 0c 2e          	lea    (%r14,%rbp,1),%rcx
      for (; __first != __last; ++__first)
    58c7:	48 39 c8             	cmp    %rcx,%rax
    58ca:	74 2d                	je     58f9 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0xb9>
    58cc:	0f 1f 40 00          	nopl   0x0(%rax)
	*__first = __value;
    58d0:	f3 41 0f 6f 0e       	movdqu (%r14),%xmm1
      for (; __first != __last; ++__first)
    58d5:	48 83 c0 18          	add    $0x18,%rax
	*__first = __value;
    58d9:	0f 11 48 e8          	movups %xmm1,-0x18(%rax)
    58dd:	49 8b 56 10          	mov    0x10(%r14),%rdx
    58e1:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
      for (; __first != __last; ++__first)
    58e5:	48 39 c1             	cmp    %rax,%rcx
    58e8:	75 e6                	jne    58d0 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x90>
    58ea:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    58ef:	48 8d 44 28 e8       	lea    -0x18(%rax,%rbp,1),%rax
    58f4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    58f9:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount,
    58fe:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5903:	4c 89 f2             	mov    %r14,%rdx
    5906:	48 89 de             	mov    %rbx,%rsi
    5909:	e8 42 d9 ff ff       	call   3250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
  for (const auto &queueFamily : queueFamilies) {
    590e:	4c 39 74 24 08       	cmp    %r14,0x8(%rsp)
    5913:	0f 84 2d 01 00 00    	je     5a46 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x206>
    5919:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  QueueFamilyIndices indices{};
    591e:	c6 44 24 23 00       	movb   $0x0,0x23(%rsp)
    5923:	4c 89 f5             	mov    %r14,%rbp
    5926:	45 31 e4             	xor    %r12d,%r12d
    5929:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
    5930:	00 
  int i = 0;
    5931:	31 db                	xor    %ebx,%ebx
  QueueFamilyIndices indices{};
    5933:	45 31 ed             	xor    %r13d,%r13d
    5936:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    593b:	eb 23                	jmp    5960 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x120>
    593d:	0f 1f 00             	nopl   (%rax)
    if (indices.isComplete())
    5940:	0f b6 44 24 23       	movzbl 0x23(%rsp),%eax
    5945:	83 e0 01             	and    $0x1,%eax
    5948:	41 f6 c4 01          	test   $0x1,%r12b
    594c:	74 04                	je     5952 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x112>
    594e:	84 c0                	test   %al,%al
    5950:	75 5e                	jne    59b0 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x170>
    ++i;
    5952:	83 c3 01             	add    $0x1,%ebx
  for (const auto &queueFamily : queueFamilies) {
    5955:	48 83 c5 18          	add    $0x18,%rbp
    5959:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
    595e:	74 56                	je     59b6 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x176>
    vkGetPhysicalDeviceSurfaceSupportKHR(device, i, surface, &presentSupport);
    5960:	49 8b 57 50          	mov    0x50(%r15),%rdx
    5964:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
	    this->_M_get() = std::forward<_Up>(__u);
    5969:	b8 01 00 00 00       	mov    $0x1,%eax
    596e:	89 de                	mov    %ebx,%esi
    5970:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5975:	f6 45 00 01          	testb  $0x1,0x0(%rbp)
    VkBool32 presentSupport = false;
    5979:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
    5980:	00 
    5981:	44 0f 45 eb          	cmovne %ebx,%r13d
    5985:	44 0f 45 e0          	cmovne %eax,%r12d
    vkGetPhysicalDeviceSurfaceSupportKHR(device, i, surface, &presentSupport);
    5989:	e8 62 da ff ff       	call   33f0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
    if (presentSupport)
    598e:	8b 44 24 60          	mov    0x60(%rsp),%eax
    5992:	85 c0                	test   %eax,%eax
    5994:	74 aa                	je     5940 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x100>
    5996:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
    599a:	b8 01 00 00 00       	mov    $0x1,%eax
    599f:	c6 44 24 23 01       	movb   $0x1,0x23(%rsp)
    59a4:	eb a2                	jmp    5948 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x108>
    59a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59ad:	00 00 00 
    59b0:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  return indices;
    59b6:	8b 44 24 24          	mov    0x24(%rsp),%eax
    59ba:	44 89 6c 24 50       	mov    %r13d,0x50(%rsp)
    59bf:	44 88 64 24 54       	mov    %r12b,0x54(%rsp)
    59c4:	89 44 24 58          	mov    %eax,0x58(%rsp)
    59c8:	0f b6 44 24 23       	movzbl 0x23(%rsp),%eax
    59cd:	88 44 24 5c          	mov    %al,0x5c(%rsp)
    59d1:	66 0f 6f 54 24 50    	movdqa 0x50(%rsp),%xmm2
    59d7:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
	if (__p)
    59dc:	4d 85 f6             	test   %r14,%r14
    59df:	74 0d                	je     59ee <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x1ae>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    59e1:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    59e6:	4c 89 f7             	mov    %r14,%rdi
    59e9:	e8 a2 d9 ff ff       	call   3390 <_ZdlPvm@plt>
    59ee:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    59f3:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
}
    59f8:	48 83 c4 78          	add    $0x78,%rsp
    59fc:	5b                   	pop    %rbx
    59fd:	5d                   	pop    %rbp
    59fe:	41 5c                	pop    %r12
    5a00:	41 5d                	pop    %r13
    5a02:	41 5e                	pop    %r14
    5a04:	41 5f                	pop    %r15
    5a06:	c3                   	ret
    5a07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5a0e:	00 00 
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5a10:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    5a17:	00 00 
    5a19:	45 31 f6             	xor    %r14d,%r14d
    5a1c:	e9 dd fe ff ff       	jmp    58fe <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0xbe>
    5a21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount,
    5a28:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5a2d:	4c 89 f2             	mov    %r14,%rdx
    5a30:	48 89 de             	mov    %rbx,%rsi
    5a33:	e8 18 d8 ff ff       	call   3250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5a38:	48 c7 44 24 28 18 00 	movq   $0x18,0x28(%rsp)
    5a3f:	00 00 
    5a41:	e9 c8 fe ff ff       	jmp    590e <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0xce>
  QueueFamilyIndices indices{};
    5a46:	c6 44 24 23 00       	movb   $0x0,0x23(%rsp)
    5a4b:	45 31 e4             	xor    %r12d,%r12d
    5a4e:	45 31 ed             	xor    %r13d,%r13d
    5a51:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
    5a58:	00 
    5a59:	e9 58 ff ff ff       	jmp    59b6 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x176>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5a5e:	48 89 c3             	mov    %rax,%rbx
    5a61:	e9 44 df ff ff       	jmp    39aa <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T.cold>
    5a66:	48 89 c3             	mov    %rax,%rbx
    5a69:	e9 51 df ff ff       	jmp    39bf <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T.cold+0x15>
    5a6e:	66 90                	xchg   %ax,%ax

0000000000005a70 <_ZN4rtvc17RenderApplication13createSurfaceEv>:
void rtvc::RenderApplication::createSurface() {
    5a70:	55                   	push   %rbp
  if (glfwCreateWindowSurface(instance, window, nullptr, &surface) !=
    5a71:	48 8d 4f 50          	lea    0x50(%rdi),%rcx
    5a75:	31 d2                	xor    %edx,%edx
void rtvc::RenderApplication::createSurface() {
    5a77:	53                   	push   %rbx
    5a78:	48 83 ec 08          	sub    $0x8,%rsp
  if (glfwCreateWindowSurface(instance, window, nullptr, &surface) !=
    5a7c:	48 8b 37             	mov    (%rdi),%rsi
    5a7f:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    5a83:	e8 88 db ff ff       	call   3610 <glfwCreateWindowSurface@plt>
    5a88:	85 c0                	test   %eax,%eax
    5a8a:	0f 85 3c df ff ff    	jne    39cc <_ZN4rtvc17RenderApplication13createSurfaceEv.cold>
}
    5a90:	48 83 c4 08          	add    $0x8,%rsp
    5a94:	5b                   	pop    %rbx
    5a95:	5d                   	pop    %rbp
    5a96:	c3                   	ret
    5a97:	90                   	nop
    5a98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5a9f:	00 

0000000000005aa0 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>:
    5aa0:	48 8b 0e             	mov    (%rsi),%rcx
    5aa3:	48 8b 56 08          	mov    0x8(%rsi),%rdx
  for (const auto &availableFormat : availableFormats)
    5aa7:	48 39 d1             	cmp    %rdx,%rcx
    5aaa:	74 2c                	je     5ad8 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x38>
    5aac:	48 89 c8             	mov    %rcx,%rax
    5aaf:	eb 10                	jmp    5ac1 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x21>
    5ab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ab8:	48 83 c0 08          	add    $0x8,%rax
    5abc:	48 39 c2             	cmp    %rax,%rdx
    5abf:	74 17                	je     5ad8 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x38>
    if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    5ac1:	83 38 32             	cmpl   $0x32,(%rax)
    5ac4:	75 f2                	jne    5ab8 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x18>
    5ac6:	8b 70 04             	mov    0x4(%rax),%esi
    5ac9:	85 f6                	test   %esi,%esi
    5acb:	75 eb                	jne    5ab8 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x18>
      return availableFormat;
    5acd:	48 8b 00             	mov    (%rax),%rax
    5ad0:	c3                   	ret
    5ad1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  return availableFormats[0];
    5ad8:	48 8b 01             	mov    (%rcx),%rax
}
    5adb:	c3                   	ret
    5adc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005ae0 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>:
    5ae0:	48 8b 06             	mov    (%rsi),%rax
    5ae3:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
  for (const auto &availablePresentMode : availablePresentModes) {
    5ae7:	48 39 c1             	cmp    %rax,%rcx
    5aea:	75 0d                	jne    5af9 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x19>
    5aec:	eb 1a                	jmp    5b08 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x28>
    5aee:	66 90                	xchg   %ax,%ax
    5af0:	48 83 c0 04          	add    $0x4,%rax
    5af4:	48 39 c1             	cmp    %rax,%rcx
    5af7:	74 0f                	je     5b08 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x28>
    if (availablePresentMode == VK_PRESENT_MODE_IMMEDIATE_KHR) {
    5af9:	8b 10                	mov    (%rax),%edx
    5afb:	85 d2                	test   %edx,%edx
    5afd:	75 f1                	jne    5af0 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x10>
}
    5aff:	89 d0                	mov    %edx,%eax
    5b01:	c3                   	ret
    5b02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  return VK_PRESENT_MODE_FIFO_KHR;
    5b08:	ba 02 00 00 00       	mov    $0x2,%edx
}
    5b0d:	89 d0                	mov    %edx,%eax
    5b0f:	c3                   	ret

0000000000005b10 <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>:
    const VkSurfaceCapabilitiesKHR &capabilities) {
    5b10:	53                   	push   %rbx
    5b11:	48 89 f3             	mov    %rsi,%rbx
    5b14:	48 83 ec 10          	sub    $0x10,%rsp
  if (capabilities.currentExtent.width != std::numeric_limits<uint32_t>::max())
    5b18:	83 7e 08 ff          	cmpl   $0xffffffff,0x8(%rsi)
    5b1c:	74 12                	je     5b30 <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0x20>
    return capabilities.currentExtent;
    5b1e:	48 8b 46 08          	mov    0x8(%rsi),%rax
}
    5b22:	48 83 c4 10          	add    $0x10,%rsp
    5b26:	5b                   	pop    %rbx
    5b27:	c3                   	ret
    5b28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5b2f:	00 
    glfwGetFramebufferSize(window, &w, &h);
    5b30:	48 8b 3f             	mov    (%rdi),%rdi
    5b33:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    5b38:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    5b3d:	e8 2e db ff ff       	call   3670 <glfwGetFramebufferSize@plt>
    min(const _Tp& __a, const _Tp& __b)
    5b42:	8b 53 10             	mov    0x10(%rbx),%edx
    5b45:	8b 44 24 08          	mov    0x8(%rsp),%eax
    5b49:	8b 4b 14             	mov    0x14(%rbx),%ecx
    5b4c:	39 d0                	cmp    %edx,%eax
    5b4e:	48 0f 42 c2          	cmovb  %rdx,%rax
    5b52:	8b 53 18             	mov    0x18(%rbx),%edx
    5b55:	39 d0                	cmp    %edx,%eax
    5b57:	48 0f 47 c2          	cmova  %rdx,%rax
    5b5b:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    5b5f:	39 ca                	cmp    %ecx,%edx
    5b61:	0f 42 d1             	cmovb  %ecx,%edx
    5b64:	8b 4b 1c             	mov    0x1c(%rbx),%ecx
    5b67:	39 ca                	cmp    %ecx,%edx
    5b69:	0f 47 d1             	cmova  %ecx,%edx
}
    5b6c:	48 83 c4 10          	add    $0x10,%rsp
    5b70:	5b                   	pop    %rbx
    5b71:	48 c1 e2 20          	shl    $0x20,%rdx
    5b75:	48 09 d0             	or     %rdx,%rax
    5b78:	c3                   	ret
    5b79:	90                   	nop
    5b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005b80 <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>:
rtvc::RenderApplication::createShaderModule(const std::vector<char> &code) {
    5b80:	55                   	push   %rbp
  VkShaderModuleCreateInfo createInfo{};
    5b81:	66 0f ef c0          	pxor   %xmm0,%xmm0
rtvc::RenderApplication::createShaderModule(const std::vector<char> &code) {
    5b85:	53                   	push   %rbx
    5b86:	48 83 ec 48          	sub    $0x48,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5b8a:	48 8b 16             	mov    (%rsi),%rdx
    5b8d:	48 8b 46 08          	mov    0x8(%rsi),%rax
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    5b91:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
    5b95:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    5b9a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  VkShaderModuleCreateInfo createInfo{};
    5b9f:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
    5ba6:	00 
    5ba7:	48 29 d0             	sub    %rdx,%rax
  createInfo.pCode = reinterpret_cast<const uint32_t *>(code.data());
    5baa:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    5baf:	31 d2                	xor    %edx,%edx
  createInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    5bb1:	c7 44 24 10 10 00 00 	movl   $0x10,0x10(%rsp)
    5bb8:	00 
  createInfo.codeSize = code.size();
    5bb9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  VkShaderModuleCreateInfo createInfo{};
    5bbe:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    5bc3:	e8 a8 d6 ff ff       	call   3270 <vkCreateShaderModule@plt>
    5bc8:	85 c0                	test   %eax,%eax
    5bca:	0f 85 42 de ff ff    	jne    3a12 <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE.cold>
  return shaderModule;
    5bd0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
}
    5bd5:	48 83 c4 48          	add    $0x48,%rsp
    5bd9:	5b                   	pop    %rbx
    5bda:	5d                   	pop    %rbp
    5bdb:	c3                   	ret
    5bdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005be0 <_ZN4rtvc17RenderApplication16createRenderPassEv>:
void rtvc::RenderApplication::createRenderPass() {
    5be0:	55                   	push   %rbp
  VkAttachmentDescription colorAttachment{};
    5be1:	66 0f ef c0          	pxor   %xmm0,%xmm0
  if (vkCreateRenderPass(device, &renderPassInfo, nullptr, &renderPass) !=
    5be5:	48 8d 8f c0 00 00 00 	lea    0xc0(%rdi),%rcx
    5bec:	31 d2                	xor    %edx,%edx
void rtvc::RenderApplication::createRenderPass() {
    5bee:	53                   	push   %rbx
    5bef:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  colorAttachment.format = swapChainImageFormat;
    5bf6:	8b 87 98 00 00 00    	mov    0x98(%rdi),%eax
  VkAttachmentDescription colorAttachment{};
    5bfc:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
  if (vkCreateRenderPass(device, &renderPassInfo, nullptr, &renderPass) !=
    5c01:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
  colorAttachment.format = swapChainImageFormat;
    5c06:	89 44 24 34          	mov    %eax,0x34(%rsp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    5c0a:	48 b8 01 00 00 00 01 	movabs $0x100000001,%rax
    5c11:	00 00 00 
    5c14:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    5c19:	48 8b 05 d8 48 00 00 	mov    0x48d8(%rip),%rax        # a4f8 <_ZTSSt19bad_optional_access+0x28>
  VkAttachmentDescription colorAttachment{};
    5c20:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    5c25:	48 89 44 24 44       	mov    %rax,0x44(%rsp)
  VkAttachmentReference colorAttachmentRef{};
    5c2a:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
    5c31:	00 00 00 
    5c34:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  subpass.pColorAttachments = &colorAttachmentRef;
    5c39:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  VkSubpassDescription subpass{};
    5c3e:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    5c45:	00 
  subpass.pColorAttachments = &colorAttachmentRef;
    5c46:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    5c4d:	00 
  dependency.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    5c4e:	48 8b 05 ab 48 00 00 	mov    0x48ab(%rip),%rax        # a500 <_ZTSSt19bad_optional_access+0x30>
  VkSubpassDependency dependency{};
    5c55:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
  dependency.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    5c5a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  renderPassInfo.pAttachments = &colorAttachment;
    5c5f:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    5c64:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  renderPassInfo.pSubpasses = &subpass;
    5c69:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    5c70:	00 
  VkSubpassDependency dependency{};
    5c71:	48 c7 44 24 24 00 00 	movq   $0x0,0x24(%rsp)
    5c78:	00 00 
  VkSubpassDescription subpass{};
    5c7a:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
    5c81:	00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    5c82:	c7 44 24 50 ea cd 9a 	movl   $0x3b9acdea,0x50(%rsp)
    5c89:	3b 
  VkSubpassDescription subpass{};
    5c8a:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
    5c91:	00 00 00 00 00 
  subpass.colorAttachmentCount = 1;
    5c96:	c7 84 24 b8 00 00 00 	movl   $0x1,0xb8(%rsp)
    5c9d:	01 00 00 00 
  dependency.srcSubpass = VK_SUBPASS_EXTERNAL;
    5ca1:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%rsp)
    5ca8:	ff 
  dependency.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
    5ca9:	c7 44 24 24 00 01 00 	movl   $0x100,0x24(%rsp)
    5cb0:	00 
  VkRenderPassCreateInfo renderPassInfo{};
    5cb1:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
    5cb8:	00 00 00 00 
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    5cbc:	c7 44 24 60 26 00 00 	movl   $0x26,0x60(%rsp)
    5cc3:	00 
  renderPassInfo.attachmentCount = 1;
    5cc4:	c7 44 24 74 01 00 00 	movl   $0x1,0x74(%rsp)
    5ccb:	00 
  renderPassInfo.subpassCount = 1;
    5ccc:	c7 84 24 80 00 00 00 	movl   $0x1,0x80(%rsp)
    5cd3:	01 00 00 00 
  VkSubpassDescription subpass{};
    5cd7:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
    5cde:	00 
    5cdf:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
    5ce6:	00 
  VkRenderPassCreateInfo renderPassInfo{};
    5ce7:	0f 11 44 24 64       	movups %xmm0,0x64(%rsp)
    5cec:	0f 11 84 24 84 00 00 	movups %xmm0,0x84(%rsp)
    5cf3:	00 
  renderPassInfo.pSubpasses = &subpass;
    5cf4:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    5cfb:	00 
  if (vkCreateRenderPass(device, &renderPassInfo, nullptr, &renderPass) !=
    5cfc:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
  renderPassInfo.pDependencies = &dependency;
    5d00:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  renderPassInfo.dependencyCount = 1;
    5d05:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    5d0c:	01 00 00 00 
  renderPassInfo.pDependencies = &dependency;
    5d10:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    5d17:	00 
  if (vkCreateRenderPass(device, &renderPassInfo, nullptr, &renderPass) !=
    5d18:	e8 f3 d4 ff ff       	call   3210 <vkCreateRenderPass@plt>
    5d1d:	85 c0                	test   %eax,%eax
    5d1f:	0f 85 33 dd ff ff    	jne    3a58 <_ZN4rtvc17RenderApplication16createRenderPassEv.cold>
}
    5d25:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
    5d2c:	5b                   	pop    %rbx
    5d2d:	5d                   	pop    %rbp
    5d2e:	c3                   	ret
    5d2f:	90                   	nop

0000000000005d30 <_ZN4rtvc17RenderApplication17createCommandPoolEv>:
void rtvc::RenderApplication::createCommandPool() {
    5d30:	55                   	push   %rbp
    5d31:	53                   	push   %rbx
    5d32:	48 89 fb             	mov    %rdi,%rbx
    5d35:	48 83 ec 38          	sub    $0x38,%rsp
  QueueFamilyIndices queueFamilyIndices = findQueueFamilies(physicalDevice);
    5d39:	48 8b 77 38          	mov    0x38(%rdi),%rsi
    5d3d:	e8 fe fa ff ff       	call   5840 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
  VkCommandPoolCreateInfo poolInfo{};
    5d42:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5d46:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
    5d4d:	00 
  QueueFamilyIndices queueFamilyIndices = findQueueFamilies(physicalDevice);
    5d4e:	48 89 04 24          	mov    %rax,(%rsp)
	if (this->_M_is_engaged())
    5d52:	80 7c 24 04 00       	cmpb   $0x0,0x4(%rsp)
  VkCommandPoolCreateInfo poolInfo{};
    5d57:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
  QueueFamilyIndices queueFamilyIndices = findQueueFamilies(physicalDevice);
    5d5c:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  poolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    5d61:	c7 44 24 10 27 00 00 	movl   $0x27,0x10(%rsp)
    5d68:	00 
  poolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    5d69:	c7 44 24 20 02 00 00 	movl   $0x2,0x20(%rsp)
    5d70:	00 
    5d71:	0f 84 27 dd ff ff    	je     3a9e <_ZN4rtvc17RenderApplication17createCommandPoolEv.cold>
  poolInfo.queueFamilyIndex = queueFamilyIndices.graphicsFamily.value();
    5d77:	8b 04 24             	mov    (%rsp),%eax
  if (vkCreateCommandPool(device, &poolInfo, nullptr, &commandPool) !=
    5d7a:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    5d7e:	31 d2                	xor    %edx,%edx
    5d80:	48 8d 8b f0 00 00 00 	lea    0xf0(%rbx),%rcx
    5d87:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  poolInfo.queueFamilyIndex = queueFamilyIndices.graphicsFamily.value();
    5d8c:	89 44 24 24          	mov    %eax,0x24(%rsp)
  if (vkCreateCommandPool(device, &poolInfo, nullptr, &commandPool) !=
    5d90:	e8 9b d3 ff ff       	call   3130 <vkCreateCommandPool@plt>
    5d95:	85 c0                	test   %eax,%eax
    5d97:	75 07                	jne    5da0 <_ZN4rtvc17RenderApplication17createCommandPoolEv+0x70>
}
    5d99:	48 83 c4 38          	add    $0x38,%rsp
    5d9d:	5b                   	pop    %rbx
    5d9e:	5d                   	pop    %rbp
    5d9f:	c3                   	ret
    5da0:	e9 fe dc ff ff       	jmp    3aa3 <_ZN4rtvc17RenderApplication17createCommandPoolEv.cold+0x5>
    5da5:	90                   	nop
    5da6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5dad:	00 00 00 

0000000000005db0 <_ZN4rtvc17RenderApplication19createVertexBuffersEv>:
void rtvc::RenderApplication::createVertexBuffers() {
    5db0:	55                   	push   %rbp
  if (vkCreateBuffer(device, &bufferInfo, nullptr, &vertexBuffer) !=
    5db1:	48 8d 8f 60 01 00 00 	lea    0x160(%rdi),%rcx
  VkBufferCreateInfo bufferInfo{};
    5db8:	66 0f ef c0          	pxor   %xmm0,%xmm0
  if (vkCreateBuffer(device, &bufferInfo, nullptr, &vertexBuffer) !=
    5dbc:	31 d2                	xor    %edx,%edx
void rtvc::RenderApplication::createVertexBuffers() {
    5dbe:	53                   	push   %rbx
    5dbf:	48 83 ec 48          	sub    $0x48,%rsp
  if (vkCreateBuffer(device, &bufferInfo, nullptr, &vertexBuffer) !=
    5dc3:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
    5dc7:	48 8b 05 7a 88 00 00 	mov    0x887a(%rip),%rax        # e648 <_ZN4rtvc9resources7shaders8triangleE+0x8>
    5dce:	48 89 e6             	mov    %rsp,%rsi
    5dd1:	48 2b 05 68 88 00 00 	sub    0x8868(%rip),%rax        # e640 <_ZN4rtvc9resources7shaders8triangleE>
  VkBufferCreateInfo bufferInfo{};
    5dd8:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
    5ddd:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%rsp)
    5de4:	00 
  bufferInfo.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
    5de5:	c7 04 24 0c 00 00 00 	movl   $0xc,(%rsp)
  bufferInfo.size = sizeof(triangle[0]) * triangle.size();
    5dec:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  bufferInfo.usage = VK_BUFFER_USAGE_VERTEX_BUFFER_BIT;
    5df1:	c7 44 24 20 80 00 00 	movl   $0x80,0x20(%rsp)
    5df8:	00 
  VkBufferCreateInfo bufferInfo{};
    5df9:	0f 11 44 24 04       	movups %xmm0,0x4(%rsp)
    5dfe:	0f 11 44 24 24       	movups %xmm0,0x24(%rsp)
  if (vkCreateBuffer(device, &bufferInfo, nullptr, &vertexBuffer) !=
    5e03:	e8 48 d5 ff ff       	call   3350 <vkCreateBuffer@plt>
    5e08:	85 c0                	test   %eax,%eax
    5e0a:	0f 85 d8 dc ff ff    	jne    3ae8 <_ZN4rtvc17RenderApplication19createVertexBuffersEv.cold>
}
    5e10:	48 83 c4 48          	add    $0x48,%rsp
    5e14:	5b                   	pop    %rbx
    5e15:	5d                   	pop    %rbp
    5e16:	c3                   	ret
    5e17:	90                   	nop
    5e18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5e1f:	00 

0000000000005e20 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj>:
                                                  uint32_t imageIndex) {
    5e20:	41 54                	push   %r12
  VkCommandBufferBeginInfo beginInfo{};
    5e22:	66 0f ef c0          	pxor   %xmm0,%xmm0
                                                  uint32_t imageIndex) {
    5e26:	41 89 d4             	mov    %edx,%r12d
    5e29:	55                   	push   %rbp
    5e2a:	48 89 fd             	mov    %rdi,%rbp
    5e2d:	53                   	push   %rbx
    5e2e:	48 89 f3             	mov    %rsi,%rbx
  if (vkBeginCommandBuffer(commandBuffer, &beginInfo) != VK_SUCCESS)
    5e31:	48 89 df             	mov    %rbx,%rdi
                                                  uint32_t imageIndex) {
    5e34:	48 83 ec 70          	sub    $0x70,%rsp
  if (vkBeginCommandBuffer(commandBuffer, &beginInfo) != VK_SUCCESS)
    5e38:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  VkCommandBufferBeginInfo beginInfo{};
    5e3d:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    5e42:	c7 44 24 10 2a 00 00 	movl   $0x2a,0x10(%rsp)
    5e49:	00 
  VkCommandBufferBeginInfo beginInfo{};
    5e4a:	0f 11 44 24 20       	movups %xmm0,0x20(%rsp)
  if (vkBeginCommandBuffer(commandBuffer, &beginInfo) != VK_SUCCESS)
    5e4f:	e8 2c d5 ff ff       	call   3380 <vkBeginCommandBuffer@plt>
    5e54:	85 c0                	test   %eax,%eax
    5e56:	0f 85 d2 dc ff ff    	jne    3b2e <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj.cold>
    5e5c:	66 0f ef c0          	pxor   %xmm0,%xmm0
  renderPassInfo.framebuffer = swapChainFrameBuffers[imageIndex];
    5e60:	48 8b 85 d8 00 00 00 	mov    0xd8(%rbp),%rax
  vkCmdBeginRenderPass(commandBuffer, &renderPassInfo,
    5e67:	31 d2                	xor    %edx,%edx
    5e69:	48 89 df             	mov    %rbx,%rdi
  VkRenderPassBeginInfo renderPassInfo{};
    5e6c:	0f 11 44 24 54       	movups %xmm0,0x54(%rsp)
  vkCmdBeginRenderPass(commandBuffer, &renderPassInfo,
    5e71:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  VkRenderPassBeginInfo renderPassInfo{};
    5e76:	0f 11 44 24 60       	movups %xmm0,0x60(%rsp)
    5e7b:	0f 11 44 24 34       	movups %xmm0,0x34(%rsp)
    5e80:	0f 11 44 24 44       	movups %xmm0,0x44(%rsp)
  renderPassInfo.renderPass = renderPass;
    5e85:	f3 0f 7e 85 c0 00 00 	movq   0xc0(%rbp),%xmm0
    5e8c:	00 
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
    5e8d:	c7 44 24 30 2b 00 00 	movl   $0x2b,0x30(%rsp)
    5e94:	00 
  renderPassInfo.renderPass = renderPass;
    5e95:	42 0f 16 04 e0       	movhps (%rax,%r12,8),%xmm0
  renderPassInfo.renderArea.extent = swapChainExtent;
    5e9a:	48 8b 85 9c 00 00 00 	mov    0x9c(%rbp),%rax
  renderPassInfo.clearValueCount = 1;
    5ea1:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
    5ea8:	00 
  renderPassInfo.renderPass = renderPass;
    5ea9:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
  VkClearValue clearColor{{{0.0f, 0.0f, 0.0f, 1.0f}}};
    5eae:	0f 28 05 7b 46 00 00 	movaps 0x467b(%rip),%xmm0        # a530 <_ZTSSt19bad_optional_access+0x60>
  renderPassInfo.renderArea.extent = swapChainExtent;
    5eb5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  renderPassInfo.pClearValues = &clearColor;
    5eba:	48 89 e0             	mov    %rsp,%rax
    5ebd:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  VkClearValue clearColor{{{0.0f, 0.0f, 0.0f, 1.0f}}};
    5ec2:	0f 29 04 24          	movaps %xmm0,(%rsp)
  vkCmdBeginRenderPass(commandBuffer, &renderPassInfo,
    5ec6:	e8 c5 d6 ff ff       	call   3590 <vkCmdBeginRenderPass@plt>
  vkCmdBindPipeline(commandBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
    5ecb:	48 8b 95 d0 00 00 00 	mov    0xd0(%rbp),%rdx
    5ed2:	31 f6                	xor    %esi,%esi
    5ed4:	48 89 df             	mov    %rbx,%rdi
    5ed7:	e8 04 d4 ff ff       	call   32e0 <vkCmdBindPipeline@plt>
  vkCmdDraw(commandBuffer, 3, 1, 0, 0);
    5edc:	45 31 c0             	xor    %r8d,%r8d
    5edf:	31 c9                	xor    %ecx,%ecx
    5ee1:	ba 01 00 00 00       	mov    $0x1,%edx
    5ee6:	be 03 00 00 00       	mov    $0x3,%esi
    5eeb:	48 89 df             	mov    %rbx,%rdi
    5eee:	e8 7d d8 ff ff       	call   3770 <vkCmdDraw@plt>
  vkCmdEndRenderPass(commandBuffer);
    5ef3:	48 89 df             	mov    %rbx,%rdi
    5ef6:	e8 55 d1 ff ff       	call   3050 <vkCmdEndRenderPass@plt>
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS)
    5efb:	48 89 df             	mov    %rbx,%rdi
    5efe:	e8 5d d8 ff ff       	call   3760 <vkEndCommandBuffer@plt>
    5f03:	85 c0                	test   %eax,%eax
    5f05:	0f 85 55 dc ff ff    	jne    3b60 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj.cold+0x32>
}
    5f0b:	48 83 c4 70          	add    $0x70,%rsp
    5f0f:	5b                   	pop    %rbx
    5f10:	5d                   	pop    %rbp
    5f11:	41 5c                	pop    %r12
    5f13:	c3                   	ret
    5f14:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5f1b:	00 00 00 00 
    5f1f:	90                   	nop

0000000000005f20 <_ZN4rtvc17RenderApplication10initWindowEv>:
void rtvc::RenderApplication::initWindow() {
    5f20:	53                   	push   %rbx
    5f21:	48 89 fb             	mov    %rdi,%rbx
  glfwInit();
    5f24:	e8 27 d5 ff ff       	call   3450 <glfwInit@plt>
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    5f29:	31 f6                	xor    %esi,%esi
    5f2b:	bf 01 20 02 00       	mov    $0x22001,%edi
    5f30:	e8 8b d3 ff ff       	call   32c0 <glfwWindowHint@plt>
  window = glfwCreateWindow(width, height, "Vulkan Triangle Application",
    5f35:	8b 73 0c             	mov    0xc(%rbx),%esi
    5f38:	8b 7b 08             	mov    0x8(%rbx),%edi
    5f3b:	45 31 c0             	xor    %r8d,%r8d
    5f3e:	31 c9                	xor    %ecx,%ecx
    5f40:	48 8d 15 0b 42 00 00 	lea    0x420b(%rip),%rdx        # a152 <_IO_stdin_used+0x152>
    5f47:	e8 f4 d6 ff ff       	call   3640 <glfwCreateWindow@plt>
  glfwSetWindowUserPointer(window, this);
    5f4c:	48 89 de             	mov    %rbx,%rsi
  window = glfwCreateWindow(width, height, "Vulkan Triangle Application",
    5f4f:	48 89 03             	mov    %rax,(%rbx)
    5f52:	48 89 c7             	mov    %rax,%rdi
  glfwSetWindowUserPointer(window, this);
    5f55:	e8 36 d2 ff ff       	call   3190 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    5f5a:	48 8b 3b             	mov    (%rbx),%rdi
    5f5d:	48 8d 35 6c ea ff ff 	lea    -0x1594(%rip),%rsi        # 49d0 <_ZN4rtvc17RenderApplication25framebufferResizeCallbackEP10GLFWwindowii>
}
    5f64:	5b                   	pop    %rbx
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    5f65:	e9 86 d6 ff ff       	jmp    35f0 <glfwSetFramebufferSizeCallback@plt>
    5f6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005f70 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>:
void rtvc::RenderApplication::cleanUpSwapChain() {
    5f70:	55                   	push   %rbp
    5f71:	53                   	push   %rbx
    5f72:	48 89 fb             	mov    %rdi,%rbx
    5f75:	48 83 ec 08          	sub    $0x8,%rsp
    5f79:	48 8b 97 d8 00 00 00 	mov    0xd8(%rdi),%rdx
  for (size_t i = 0; i < swapChainFrameBuffers.size(); ++i) {
    5f80:	48 39 97 e0 00 00 00 	cmp    %rdx,0xe0(%rdi)
    5f87:	74 34                	je     5fbd <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x4d>
    5f89:	31 ed                	xor    %ebp,%ebp
    5f8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    vkDestroyFramebuffer(device, swapChainFrameBuffers[i], nullptr);
    5f90:	48 8b 34 ea          	mov    (%rdx,%rbp,8),%rsi
    5f94:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    5f98:	31 d2                	xor    %edx,%edx
  for (size_t i = 0; i < swapChainFrameBuffers.size(); ++i) {
    5f9a:	48 83 c5 01          	add    $0x1,%rbp
    vkDestroyFramebuffer(device, swapChainFrameBuffers[i], nullptr);
    5f9e:	e8 0d d7 ff ff       	call   36b0 <vkDestroyFramebuffer@plt>
    5fa3:	48 8b 93 d8 00 00 00 	mov    0xd8(%rbx),%rdx
    5faa:	48 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%rax
    5fb1:	48 29 d0             	sub    %rdx,%rax
    5fb4:	48 c1 f8 03          	sar    $0x3,%rax
  for (size_t i = 0; i < swapChainFrameBuffers.size(); ++i) {
    5fb8:	48 39 c5             	cmp    %rax,%rbp
    5fbb:	72 d3                	jb     5f90 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x20>
  vkDestroyPipeline(device, graphicsPipeline, nullptr);
    5fbd:	48 8b b3 d0 00 00 00 	mov    0xd0(%rbx),%rsi
    5fc4:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    5fc8:	31 d2                	xor    %edx,%edx
    5fca:	e8 41 d4 ff ff       	call   3410 <vkDestroyPipeline@plt>
  vkDestroyPipelineLayout(device, pipelineLayout, nullptr);
    5fcf:	48 8b b3 c8 00 00 00 	mov    0xc8(%rbx),%rsi
    5fd6:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    5fda:	31 d2                	xor    %edx,%edx
    5fdc:	e8 df d4 ff ff       	call   34c0 <vkDestroyPipelineLayout@plt>
  vkDestroyRenderPass(device, renderPass, nullptr);
    5fe1:	48 8b b3 c0 00 00 00 	mov    0xc0(%rbx),%rsi
    5fe8:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    5fec:	31 d2                	xor    %edx,%edx
    5fee:	e8 4d d3 ff ff       	call   3340 <vkDestroyRenderPass@plt>
    5ff3:	48 8b 93 a8 00 00 00 	mov    0xa8(%rbx),%rdx
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    5ffa:	48 39 93 b0 00 00 00 	cmp    %rdx,0xb0(%rbx)
    6001:	74 32                	je     6035 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0xc5>
    6003:	31 ed                	xor    %ebp,%ebp
    6005:	0f 1f 00             	nopl   (%rax)
    vkDestroyImageView(device, swapChainImageViews[i], nullptr);
    6008:	48 8b 34 ea          	mov    (%rdx,%rbp,8),%rsi
    600c:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    6010:	31 d2                	xor    %edx,%edx
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    6012:	48 83 c5 01          	add    $0x1,%rbp
    vkDestroyImageView(device, swapChainImageViews[i], nullptr);
    6016:	e8 f5 d6 ff ff       	call   3710 <vkDestroyImageView@plt>
    601b:	48 8b 93 a8 00 00 00 	mov    0xa8(%rbx),%rdx
    6022:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
    6029:	48 29 d0             	sub    %rdx,%rax
    602c:	48 c1 f8 03          	sar    $0x3,%rax
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    6030:	48 39 c5             	cmp    %rax,%rbp
    6033:	72 d3                	jb     6008 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x98>
  vkDestroySwapchainKHR(device, swapChain, nullptr);
    6035:	48 8b 73 78          	mov    0x78(%rbx),%rsi
    6039:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
}
    603d:	48 83 c4 08          	add    $0x8,%rsp
  vkDestroySwapchainKHR(device, swapChain, nullptr);
    6041:	31 d2                	xor    %edx,%edx
}
    6043:	5b                   	pop    %rbx
    6044:	5d                   	pop    %rbp
  vkDestroySwapchainKHR(device, swapChain, nullptr);
    6045:	e9 66 d0 ff ff       	jmp    30b0 <vkDestroySwapchainKHR@plt>
    604a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006050 <_ZN4rtvc17RenderApplication7cleanUpEv>:
void rtvc::RenderApplication::cleanUp() {
    6050:	55                   	push   %rbp
  vkDestroyBuffer(device, vertexBuffer, nullptr);
    6051:	31 ed                	xor    %ebp,%ebp
void rtvc::RenderApplication::cleanUp() {
    6053:	53                   	push   %rbx
    6054:	48 89 fb             	mov    %rdi,%rbx
    6057:	48 83 ec 08          	sub    $0x8,%rsp
  cleanUpSwapChain();
    605b:	e8 10 ff ff ff       	call   5f70 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>
  vkDestroyBuffer(device, vertexBuffer, nullptr);
    6060:	48 8b b3 60 01 00 00 	mov    0x160(%rbx),%rsi
    6067:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    606b:	31 d2                	xor    %edx,%edx
    606d:	e8 0e d1 ff ff       	call   3180 <vkDestroyBuffer@plt>
    vkDestroySemaphore(device, imageAvailableSemaphores[i], nullptr);
    6072:	48 8b 83 10 01 00 00 	mov    0x110(%rbx),%rax
    6079:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    607d:	31 d2                	xor    %edx,%edx
    607f:	48 8b 34 28          	mov    (%rax,%rbp,1),%rsi
    6083:	e8 48 d0 ff ff       	call   30d0 <vkDestroySemaphore@plt>
    vkDestroySemaphore(device, renderFinishedSemaphores[i], nullptr);
    6088:	48 8b 83 28 01 00 00 	mov    0x128(%rbx),%rax
    608f:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    6093:	31 d2                	xor    %edx,%edx
    6095:	48 8b 34 28          	mov    (%rax,%rbp,1),%rsi
    6099:	e8 32 d0 ff ff       	call   30d0 <vkDestroySemaphore@plt>
    vkDestroyFence(device, inFlightFences[i], nullptr);
    609e:	48 8b 83 40 01 00 00 	mov    0x140(%rbx),%rax
    60a5:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    60a9:	31 d2                	xor    %edx,%edx
    60ab:	48 8b 34 28          	mov    (%rax,%rbp,1),%rsi
    60af:	e8 4c d3 ff ff       	call   3400 <vkDestroyFence@plt>
  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    60b4:	48 83 fd 08          	cmp    $0x8,%rbp
    60b8:	74 0e                	je     60c8 <_ZN4rtvc17RenderApplication7cleanUpEv+0x78>
    60ba:	bd 08 00 00 00       	mov    $0x8,%ebp
    60bf:	eb b1                	jmp    6072 <_ZN4rtvc17RenderApplication7cleanUpEv+0x22>
    60c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  vkDestroyCommandPool(device, commandPool, nullptr);
    60c8:	48 8b b3 f0 00 00 00 	mov    0xf0(%rbx),%rsi
    60cf:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    60d3:	31 d2                	xor    %edx,%edx
    60d5:	e8 c6 d4 ff ff       	call   35a0 <vkDestroyCommandPool@plt>
  vkDestroyDevice(device, nullptr);
    60da:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    60de:	31 f6                	xor    %esi,%esi
    60e0:	e8 ab d1 ff ff       	call   3290 <vkDestroyDevice@plt>
  vkDestroySurfaceKHR(instance, surface, nullptr);
    60e5:	48 8b 73 50          	mov    0x50(%rbx),%rsi
    60e9:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    60ed:	31 d2                	xor    %edx,%edx
    60ef:	e8 fc d5 ff ff       	call   36f0 <vkDestroySurfaceKHR@plt>
  vkDestroyInstance(instance, nullptr);
    60f4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    60f8:	31 f6                	xor    %esi,%esi
    60fa:	e8 a1 d2 ff ff       	call   33a0 <vkDestroyInstance@plt>
  glfwDestroyWindow(window);
    60ff:	48 8b 3b             	mov    (%rbx),%rdi
    6102:	e8 d9 cf ff ff       	call   30e0 <glfwDestroyWindow@plt>
}
    6107:	48 83 c4 08          	add    $0x8,%rsp
    610b:	5b                   	pop    %rbx
    610c:	5d                   	pop    %rbp
  glfwTerminate();
    610d:	e9 9e d2 ff ff       	jmp    33b0 <glfwTerminate@plt>
    6112:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6119:	00 00 00 00 
    611d:	0f 1f 00             	nopl   (%rax)

0000000000006120 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>:
rtvc::RenderApplication::querySwapChainSupport(VkPhysicalDevice device) {
    6120:	41 55                	push   %r13
	: _M_start(), _M_finish(), _M_end_of_storage()
    6122:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6126:	41 54                	push   %r12
    6128:	49 89 f4             	mov    %rsi,%r12
    612b:	55                   	push   %rbp
    612c:	48 89 d5             	mov    %rdx,%rbp
  vkGetPhysicalDeviceSurfaceCapabilitiesKHR(device, surface,
    612f:	48 89 fa             	mov    %rdi,%rdx
rtvc::RenderApplication::querySwapChainSupport(VkPhysicalDevice device) {
    6132:	53                   	push   %rbx
    6133:	48 89 fb             	mov    %rdi,%rbx
    6136:	48 83 ec 18          	sub    $0x18,%rsp
    613a:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    613e:	0f 11 47 48          	movups %xmm0,0x48(%rdi)
    6142:	0f 11 47 58          	movups %xmm0,0x58(%rdi)
  vkGetPhysicalDeviceSurfaceCapabilitiesKHR(device, surface,
    6146:	48 8b 76 50          	mov    0x50(%rsi),%rsi
    614a:	48 89 ef             	mov    %rbp,%rdi
    614d:	e8 7e d1 ff ff       	call   32d0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
  vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount, nullptr);
    6152:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
    6157:	49 8b 74 24 50       	mov    0x50(%r12),%rsi
    615c:	31 c9                	xor    %ecx,%ecx
    615e:	48 89 ef             	mov    %rbp,%rdi
    6161:	4c 89 ea             	mov    %r13,%rdx
    6164:	e8 97 d3 ff ff       	call   3500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
  if (formatCount != 0) {
    6169:	8b 74 24 08          	mov    0x8(%rsp),%esi
    616d:	85 f6                	test   %esi,%esi
    616f:	74 3d                	je     61ae <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x8e>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6171:	48 8b 53 40          	mov    0x40(%rbx),%rdx
    6175:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
    6179:	48 89 d0             	mov    %rdx,%rax
    617c:	48 29 c8             	sub    %rcx,%rax
    617f:	48 c1 f8 03          	sar    $0x3,%rax
	if (__new_size > size())
    6183:	48 39 f0             	cmp    %rsi,%rax
    6186:	0f 82 a4 00 00 00    	jb     6230 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x110>
	else if (__new_size < size())
    618c:	48 39 c6             	cmp    %rax,%rsi
    618f:	73 0d                	jae    619e <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x7e>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    6191:	48 8d 04 f1          	lea    (%rcx,%rsi,8),%rax
      // _M_assign_aux.
      _GLIBCXX20_CONSTEXPR
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
    6195:	48 39 c2             	cmp    %rax,%rdx
    6198:	74 04                	je     619e <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x7e>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
			  _M_get_Tp_allocator());
	    this->_M_impl._M_finish = __pos;
    619a:	48 89 43 40          	mov    %rax,0x40(%rbx)
    vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount,
    619e:	49 8b 74 24 50       	mov    0x50(%r12),%rsi
    61a3:	4c 89 ea             	mov    %r13,%rdx
    61a6:	48 89 ef             	mov    %rbp,%rdi
    61a9:	e8 52 d3 ff ff       	call   3500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
  vkGetPhysicalDeviceSurfacePresentModesKHR(device, surface, &presentModeCount,
    61ae:	4c 8d 6c 24 0c       	lea    0xc(%rsp),%r13
    61b3:	49 8b 74 24 50       	mov    0x50(%r12),%rsi
    61b8:	31 c9                	xor    %ecx,%ecx
    61ba:	48 89 ef             	mov    %rbp,%rdi
    61bd:	4c 89 ea             	mov    %r13,%rdx
    61c0:	e8 4b d3 ff ff       	call   3510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
  if (presentModeCount != 0) {
    61c5:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    61c9:	85 f6                	test   %esi,%esi
    61cb:	75 13                	jne    61e0 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0xc0>
}
    61cd:	48 83 c4 18          	add    $0x18,%rsp
    61d1:	48 89 d8             	mov    %rbx,%rax
    61d4:	5b                   	pop    %rbx
    61d5:	5d                   	pop    %rbp
    61d6:	41 5c                	pop    %r12
    61d8:	41 5d                	pop    %r13
    61da:	c3                   	ret
    61db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    61e0:	48 8b 53 58          	mov    0x58(%rbx),%rdx
    61e4:	48 8b 4b 50          	mov    0x50(%rbx),%rcx
    61e8:	48 89 d0             	mov    %rdx,%rax
    61eb:	48 29 c8             	sub    %rcx,%rax
    61ee:	48 c1 f8 02          	sar    $0x2,%rax
	if (__new_size > size())
    61f2:	48 39 f0             	cmp    %rsi,%rax
    61f5:	72 61                	jb     6258 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x138>
	else if (__new_size < size())
    61f7:	48 39 c6             	cmp    %rax,%rsi
    61fa:	73 0d                	jae    6209 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0xe9>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    61fc:	48 8d 04 b1          	lea    (%rcx,%rsi,4),%rax
	if (size_type __n = this->_M_impl._M_finish - __pos)
    6200:	48 39 c2             	cmp    %rax,%rdx
    6203:	74 04                	je     6209 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0xe9>
	    this->_M_impl._M_finish = __pos;
    6205:	48 89 43 58          	mov    %rax,0x58(%rbx)
    vkGetPhysicalDeviceSurfacePresentModesKHR(
    6209:	49 8b 74 24 50       	mov    0x50(%r12),%rsi
    620e:	4c 89 ea             	mov    %r13,%rdx
    6211:	48 89 ef             	mov    %rbp,%rdi
    6214:	e8 f7 d2 ff ff       	call   3510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
}
    6219:	48 83 c4 18          	add    $0x18,%rsp
    621d:	48 89 d8             	mov    %rbx,%rax
    6220:	5b                   	pop    %rbx
    6221:	5d                   	pop    %rbp
    6222:	41 5c                	pop    %r12
    6224:	41 5d                	pop    %r13
    6226:	c3                   	ret
    6227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    622e:	00 00 
	  _M_default_append(__new_size - size());
    6230:	48 29 c6             	sub    %rax,%rsi
    6233:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
    6237:	e8 d4 27 00 00       	call   8a10 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>
      { return _M_data_ptr(this->_M_impl._M_start); }
    623c:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
    vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount,
    6240:	49 8b 74 24 50       	mov    0x50(%r12),%rsi
    6245:	4c 89 ea             	mov    %r13,%rdx
    6248:	48 89 ef             	mov    %rbp,%rdi
    624b:	e8 b0 d2 ff ff       	call   3500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
    6250:	e9 59 ff ff ff       	jmp    61ae <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x8e>
    6255:	0f 1f 00             	nopl   (%rax)
	  _M_default_append(__new_size - size());
    6258:	48 29 c6             	sub    %rax,%rsi
    details.presentModes.resize(presentModeCount);
    625b:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
    625f:	e8 8c 29 00 00       	call   8bf0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>
      { return _M_data_ptr(this->_M_impl._M_start); }
    6264:	48 8b 4b 50          	mov    0x50(%rbx),%rcx
    vkGetPhysicalDeviceSurfacePresentModesKHR(
    6268:	49 8b 74 24 50       	mov    0x50(%r12),%rsi
    626d:	4c 89 ea             	mov    %r13,%rdx
    6270:	48 89 ef             	mov    %rbp,%rdi
    6273:	e8 98 d2 ff ff       	call   3510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    6278:	eb 9f                	jmp    6219 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0xf9>
}
    627a:	48 89 c5             	mov    %rax,%rbp
    627d:	e9 36 d9 ff ff       	jmp    3bb8 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T.cold>
    6282:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6289:	00 00 00 00 
    628d:	0f 1f 00             	nopl   (%rax)

0000000000006290 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv>:
void rtvc::RenderApplication::createLogicalDevice() {
    6290:	41 57                	push   %r15
    6292:	49 89 ff             	mov    %rdi,%r15
    6295:	41 56                	push   %r14
    6297:	41 55                	push   %r13
    6299:	41 54                	push   %r12
    629b:	55                   	push   %rbp
    629c:	53                   	push   %rbx
    629d:	48 81 ec b8 01 00 00 	sub    $0x1b8,%rsp
  QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    62a4:	48 8b 77 38          	mov    0x38(%rdi),%rsi
    62a8:	e8 93 f5 ff ff       	call   5840 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
	: _M_start(), _M_finish(), _M_end_of_storage()
    62ad:	66 0f ef c0          	pxor   %xmm0,%xmm0
    62b1:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    62b8:	00 00 
    62ba:	48 89 d3             	mov    %rdx,%rbx
    62bd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    62c2:	48 89 c2             	mov    %rax,%rdx
    62c5:	80 7c 24 24 00       	cmpb   $0x0,0x24(%rsp)
    62ca:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    62cf:	44 0f b6 6c 24 2c    	movzbl 0x2c(%rsp),%r13d
    62d5:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    62d9:	8b 44 24 28          	mov    0x28(%rsp),%eax
    62dd:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    62e2:	89 44 24 08          	mov    %eax,0x8(%rsp)
    62e6:	0f 84 0e d9 ff ff    	je     3bfa <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold+0x32>
                                            indices.presentFamily.value()};
    62ec:	89 94 24 d0 00 00 00 	mov    %edx,0xd0(%rsp)
    62f3:	45 84 ed             	test   %r13b,%r13b
    62f6:	0f 84 6c 03 00 00    	je     6668 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3d8>
      _M_header._M_left = &_M_header;
    62fc:	4c 8d 64 24 58       	lea    0x58(%rsp),%r12
    6301:	89 84 24 d4 00 00 00 	mov    %eax,0xd4(%rsp)
      _M_node_count = 0;
    6308:	45 31 f6             	xor    %r14d,%r14d
    630b:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    6312:	00 
      _M_header._M_color = _S_red;
    6313:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
    631a:	00 
      _M_node_count = 0;
    631b:	48 89 c5             	mov    %rax,%rbp
      _M_header._M_parent = 0;
    631e:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    6325:	00 00 
      _M_header._M_left = &_M_header;
    6327:	4c 89 64 24 68       	mov    %r12,0x68(%rsp)
      _M_header._M_right = &_M_header;
    632c:	4c 89 64 24 70       	mov    %r12,0x70(%rsp)
      _M_node_count = 0;
    6331:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    6338:	00 00 
    633a:	48 89 04 24          	mov    %rax,(%rsp)
    633e:	66 90                	xchg   %ax,%ax

      // end()
      if (__pos._M_node == _M_end())
	{
	  if (size() > 0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    6340:	4d 85 f6             	test   %r14,%r14
    6343:	0f 84 6f 02 00 00    	je     65b8 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x328>
    6349:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    634e:	8b 45 00             	mov    0x0(%rbp),%eax
    6351:	39 43 20             	cmp    %eax,0x20(%rbx)
    6354:	0f 83 5e 02 00 00    	jae    65b8 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x328>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
    635a:	45 89 ee             	mov    %r13d,%r14d
	bool __insert_left = (__x != 0 || __p == _M_end()
    635d:	4c 39 e3             	cmp    %r12,%rbx
    6360:	0f 85 a2 02 00 00    	jne    6608 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x378>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6366:	bf 28 00 00 00       	mov    $0x28,%edi
    636b:	e8 00 d0 ff ff       	call   3370 <_Znwm@plt>
    6370:	48 89 c6             	mov    %rax,%rsi
#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    6373:	8b 45 00             	mov    0x0(%rbp),%eax
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    6376:	41 0f b6 fe          	movzbl %r14b,%edi
    637a:	4c 89 e1             	mov    %r12,%rcx
    637d:	48 89 da             	mov    %rbx,%rdx
    6380:	89 46 20             	mov    %eax,0x20(%rsi)
    6383:	e8 d8 cc ff ff       	call   3060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
	++_M_impl._M_node_count;
    6388:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    638d:	4c 8d 70 01          	lea    0x1(%rax),%r14
    6391:	4c 89 74 24 78       	mov    %r14,0x78(%rsp)
	  for (; __first != __last; ++__first)
    6396:	48 83 c5 04          	add    $0x4,%rbp
    639a:	48 8d 84 24 d8 00 00 	lea    0xd8(%rsp),%rax
    63a1:	00 
    63a2:	48 39 c5             	cmp    %rax,%rbp
    63a5:	75 99                	jne    6340 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0xb0>
      { return const_iterator(this->_M_impl._M_header._M_left); }
    63a7:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
  for (uint32_t queueFamily : uniqueQueueFamilies) {
    63ac:	31 ed                	xor    %ebp,%ebp
    63ae:	45 31 f6             	xor    %r14d,%r14d
    63b1:	4c 8d 6c 24 1c       	lea    0x1c(%rsp),%r13
  float queuePriority = 1.0f;
    63b6:	c7 44 24 1c 00 00 80 	movl   $0x3f800000,0x1c(%rsp)
    63bd:	3f 
  for (uint32_t queueFamily : uniqueQueueFamilies) {
    63be:	4c 39 e3             	cmp    %r12,%rbx
    63c1:	75 4e                	jne    6411 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x181>
    63c3:	e9 8f 02 00 00       	jmp    6657 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3c7>
    63c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    63cf:	00 
    63d0:	66 0f 6f 94 24 d0 00 	movdqa 0xd0(%rsp),%xmm2
    63d7:	00 00 
	_M_node = _Rb_tree_increment(_M_node);
    63d9:	48 89 df             	mov    %rbx,%rdi
	    ++this->_M_impl._M_finish;
    63dc:	49 83 c6 28          	add    $0x28,%r14
    63e0:	41 0f 11 56 d8       	movups %xmm2,-0x28(%r14)
    63e5:	66 0f 6f 9c 24 e0 00 	movdqa 0xe0(%rsp),%xmm3
    63ec:	00 00 
    63ee:	41 0f 11 5e e8       	movups %xmm3,-0x18(%r14)
    63f3:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
    63fa:	00 
    63fb:	49 89 46 f8          	mov    %rax,-0x8(%r14)
    63ff:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
    6404:	e8 57 d0 ff ff       	call   3460 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
    6409:	48 89 c3             	mov    %rax,%rbx
    640c:	4c 39 e0             	cmp    %r12,%rax
    640f:	74 77                	je     6488 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x1f8>
    6411:	8b 43 20             	mov    0x20(%rbx),%eax
    VkDeviceQueueCreateInfo queueCreateInfo{};
    6414:	66 0f ef c9          	pxor   %xmm1,%xmm1
    queueCreateInfo.pQueuePriorities = &queuePriority;
    6418:	4c 89 ac 24 f0 00 00 	mov    %r13,0xf0(%rsp)
    641f:	00 
    VkDeviceQueueCreateInfo queueCreateInfo{};
    6420:	0f 11 8c 24 d4 00 00 	movups %xmm1,0xd4(%rsp)
    6427:	00 
    queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    6428:	c7 84 24 d0 00 00 00 	movl   $0x2,0xd0(%rsp)
    642f:	02 00 00 00 
    VkDeviceQueueCreateInfo queueCreateInfo{};
    6433:	0f 11 8c 24 e0 00 00 	movups %xmm1,0xe0(%rsp)
    643a:	00 
    queueCreateInfo.queueFamilyIndex = queueFamily;
    643b:	89 84 24 e4 00 00 00 	mov    %eax,0xe4(%rsp)
    queueCreateInfo.queueCount = 1;
    6442:	c7 84 24 e8 00 00 00 	movl   $0x1,0xe8(%rsp)
    6449:	01 00 00 00 
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    644d:	49 39 ee             	cmp    %rbp,%r14
    6450:	0f 85 7a ff ff ff    	jne    63d0 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x140>
	  _M_realloc_insert(end(), __x);
    6456:	48 8b 14 24          	mov    (%rsp),%rdx
    645a:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    645f:	4c 89 f6             	mov    %r14,%rsi
    6462:	e8 99 2a 00 00       	call   8f00 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
    6467:	48 89 df             	mov    %rbx,%rdi
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    646a:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    646f:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
    6474:	e8 e7 cf ff ff       	call   3460 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
    6479:	48 89 c3             	mov    %rax,%rbx
  for (uint32_t queueFamily : uniqueQueueFamilies) {
    647c:	4c 39 e0             	cmp    %r12,%rax
    647f:	75 90                	jne    6411 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x181>
    6481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6488:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    648d:	49 29 de             	sub    %rbx,%r14
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6490:	48 29 dd             	sub    %rbx,%rbp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6493:	49 c1 fe 03          	sar    $0x3,%r14
  createInfo.queueCreateInfoCount = queueCreateInfos.size();
    6497:	41 69 d6 cd cc cc cc 	imul   $0xcccccccd,%r14d,%edx
  VkPhysicalDeviceFeatures deviceFeatures{};
    649e:	48 8b 3c 24          	mov    (%rsp),%rdi
    64a2:	31 c0                	xor    %eax,%eax
    64a4:	b9 1b 00 00 00       	mov    $0x1b,%ecx
  VkDeviceCreateInfo createInfo{};
    64a9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    64ad:	0f 11 84 24 94 00 00 	movups %xmm0,0x94(%rsp)
    64b4:	00 
  if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) !=
    64b5:	48 8d b4 24 80 00 00 	lea    0x80(%rsp),%rsi
    64bc:	00 
  VkPhysicalDeviceFeatures deviceFeatures{};
    64bd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) !=
    64c0:	49 8d 4f 40          	lea    0x40(%r15),%rcx
  createInfo.pEnabledFeatures = &deviceFeatures;
    64c4:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    64cb:	00 
  createInfo.queueCreateInfoCount = queueCreateInfos.size();
    64cc:	89 94 24 94 00 00 00 	mov    %edx,0x94(%rsp)
  createInfo.pEnabledFeatures = &deviceFeatures;
    64d3:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    64da:	00 
    64db:	49 8b 57 60          	mov    0x60(%r15),%rdx
    64df:	49 8b 47 68          	mov    0x68(%r15),%rax
  VkDeviceCreateInfo createInfo{};
    64e3:	0f 11 84 24 a4 00 00 	movups %xmm0,0xa4(%rsp)
    64ea:	00 
  createInfo.ppEnabledExtensionNames = deviceExtensions.data();
    64eb:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
    64f2:	00 
    64f3:	48 29 d0             	sub    %rdx,%rax
  if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) !=
    64f6:	31 d2                	xor    %edx,%edx
  VkDeviceCreateInfo createInfo{};
    64f8:	c7 84 24 b4 00 00 00 	movl   $0x0,0xb4(%rsp)
    64ff:	00 00 00 00 
    6503:	48 c1 f8 03          	sar    $0x3,%rax
  createInfo.pQueueCreateInfos = queueCreateInfos.data();
    6507:	48 89 9c 24 98 00 00 	mov    %rbx,0x98(%rsp)
    650e:	00 
  VkPhysicalDeviceFeatures deviceFeatures{};
    650f:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) !=
    6515:	49 8b 7f 38          	mov    0x38(%r15),%rdi
  createInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    6519:	c7 84 24 80 00 00 00 	movl   $0x3,0x80(%rsp)
    6520:	03 00 00 00 
  createInfo.enabledExtensionCount =
    6524:	89 84 24 b0 00 00 00 	mov    %eax,0xb0(%rsp)
  VkDeviceCreateInfo createInfo{};
    652b:	0f 11 84 24 84 00 00 	movups %xmm0,0x84(%rsp)
    6532:	00 
  if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) !=
    6533:	e8 a8 d0 ff ff       	call   35e0 <vkCreateDevice@plt>
    6538:	85 c0                	test   %eax,%eax
    653a:	0f 85 88 d6 ff ff    	jne    3bc8 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold>
  vkGetDeviceQueue(device, indices.graphicsFamily.value(), 0, &graphicsQueue);
    6540:	49 8b 7f 40          	mov    0x40(%r15),%rdi
    6544:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    6548:	49 8d 4f 48          	lea    0x48(%r15),%rcx
    654c:	31 d2                	xor    %edx,%edx
    654e:	e8 dd cf ff ff       	call   3530 <vkGetDeviceQueue@plt>
  vkGetDeviceQueue(device, indices.presentFamily.value(), 0, &presentQueue);
    6553:	49 8b 7f 40          	mov    0x40(%r15),%rdi
    6557:	8b 74 24 08          	mov    0x8(%rsp),%esi
    655b:	49 8d 4f 58          	lea    0x58(%r15),%rcx
    655f:	31 d2                	xor    %edx,%edx
    6561:	e8 ca cf ff ff       	call   3530 <vkGetDeviceQueue@plt>
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    6566:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
      while (__x != 0)
    656b:	4d 85 e4             	test   %r12,%r12
    656e:	74 21                	je     6591 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x301>
	  _M_erase(_S_right(__x));
    6570:	49 8b 7c 24 18       	mov    0x18(%r12),%rdi
    6575:	e8 76 e4 ff ff       	call   49f0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE.isra.0>
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    657a:	4c 89 e7             	mov    %r12,%rdi
      { return static_cast<_Link_type>(__x->_M_left); }
    657d:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6582:	be 28 00 00 00       	mov    $0x28,%esi
    6587:	e8 04 ce ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    658c:	4d 85 e4             	test   %r12,%r12
    658f:	75 df                	jne    6570 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x2e0>
	if (__p)
    6591:	48 85 db             	test   %rbx,%rbx
    6594:	74 0b                	je     65a1 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x311>
    6596:	48 89 ee             	mov    %rbp,%rsi
    6599:	48 89 df             	mov    %rbx,%rdi
    659c:	e8 ef cd ff ff       	call   3390 <_ZdlPvm@plt>
}
    65a1:	48 81 c4 b8 01 00 00 	add    $0x1b8,%rsp
    65a8:	5b                   	pop    %rbx
    65a9:	5d                   	pop    %rbp
    65aa:	41 5c                	pop    %r12
    65ac:	41 5d                	pop    %r13
    65ae:	41 5e                	pop    %r14
    65b0:	41 5f                	pop    %r15
    65b2:	c3                   	ret
    65b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    65b8:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
      while (__x != 0)
    65bd:	48 85 db             	test   %rbx,%rbx
    65c0:	0f 84 82 00 00 00    	je     6648 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3b8>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
      { return __x < __y; }
    65c6:	8b 4d 00             	mov    0x0(%rbp),%ecx
      { return static_cast<_Link_type>(__x->_M_right); }
    65c9:	31 ff                	xor    %edi,%edi
    65cb:	eb 06                	jmp    65d3 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x343>
    65cd:	0f 1f 00             	nopl   (%rax)
      while (__x != 0)
    65d0:	48 89 c3             	mov    %rax,%rbx
    65d3:	8b 53 20             	mov    0x20(%rbx),%edx
      { return static_cast<_Link_type>(__x->_M_right); }
    65d6:	48 8b 43 18          	mov    0x18(%rbx),%rax
    65da:	89 fe                	mov    %edi,%esi
    65dc:	39 d1                	cmp    %edx,%ecx
    65de:	48 0f 42 43 10       	cmovb  0x10(%rbx),%rax
    65e3:	41 0f 42 f5          	cmovb  %r13d,%esi
      while (__x != 0)
    65e7:	48 85 c0             	test   %rax,%rax
    65ea:	75 e4                	jne    65d0 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x340>
      if (__comp)
    65ec:	40 84 f6             	test   %sil,%sil
    65ef:	75 2f                	jne    6620 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x390>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    65f1:	39 ca                	cmp    %ecx,%edx
    65f3:	0f 83 9d fd ff ff    	jae    6396 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x106>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
    65f9:	45 89 ee             	mov    %r13d,%r14d
	bool __insert_left = (__x != 0 || __p == _M_end()
    65fc:	4c 39 e3             	cmp    %r12,%rbx
    65ff:	0f 84 61 fd ff ff    	je     6366 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0xd6>
    6605:	0f 1f 00             	nopl   (%rax)
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
    6608:	8b 43 20             	mov    0x20(%rbx),%eax
    660b:	39 45 00             	cmp    %eax,0x0(%rbp)
    660e:	41 0f 92 c6          	setb   %r14b
    6612:	e9 4f fd ff ff       	jmp    6366 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0xd6>
    6617:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    661e:	00 00 
	  if (__j == begin())
    6620:	48 39 5c 24 68       	cmp    %rbx,0x68(%rsp)
    6625:	0f 84 2f fd ff ff    	je     635a <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0xca>
	_M_node = _Rb_tree_decrement(_M_node);
    662b:	48 89 df             	mov    %rbx,%rdi
    662e:	e8 ad cd ff ff       	call   33e0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    6633:	8b 4d 00             	mov    0x0(%rbp),%ecx
    6636:	39 48 20             	cmp    %ecx,0x20(%rax)
    6639:	0f 83 57 fd ff ff    	jae    6396 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x106>
    663f:	e9 16 fd ff ff       	jmp    635a <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0xca>
    6644:	0f 1f 40 00          	nopl   0x0(%rax)
      _Base_ptr __y = _M_end();
    6648:	4c 89 e3             	mov    %r12,%rbx
	  if (__j == begin())
    664b:	4c 39 64 24 68       	cmp    %r12,0x68(%rsp)
    6650:	75 d9                	jne    662b <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x39b>
    6652:	e9 03 fd ff ff       	jmp    635a <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0xca>
  for (uint32_t queueFamily : uniqueQueueFamilies) {
    6657:	31 d2                	xor    %edx,%edx
    6659:	31 db                	xor    %ebx,%ebx
    665b:	e9 3e fe ff ff       	jmp    649e <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x20e>
      { _M_erase(_M_begin()); }
    6660:	48 89 c3             	mov    %rax,%rbx
    6663:	e9 a4 d5 ff ff       	jmp    3c0c <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold+0x44>
    6668:	e9 92 d5 ff ff       	jmp    3bff <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold+0x37>
    666d:	e9 97 d5 ff ff       	jmp    3c09 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv.cold+0x41>
    6672:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6679:	00 00 00 00 
    667d:	0f 1f 00             	nopl   (%rax)

0000000000006680 <_ZN4rtvc17RenderApplication15createSwapChainEv>:
void rtvc::RenderApplication::createSwapChain() {
    6680:	41 57                	push   %r15
      querySwapChainSupport(physicalDevice);
    6682:	48 89 fe             	mov    %rdi,%rsi
void rtvc::RenderApplication::createSwapChain() {
    6685:	41 56                	push   %r14
    6687:	41 55                	push   %r13
    6689:	41 54                	push   %r12
    668b:	55                   	push   %rbp
    668c:	48 89 fd             	mov    %rdi,%rbp
    668f:	53                   	push   %rbx
    6690:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
      querySwapChainSupport(physicalDevice);
    6697:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    669b:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    66a0:	48 89 c7             	mov    %rax,%rdi
    66a3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    66a8:	e8 73 fa ff ff       	call   6120 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>
    66ad:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    66b2:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
  for (const auto &availableFormat : availableFormats)
    66b7:	48 39 d1             	cmp    %rdx,%rcx
    66ba:	0f 84 70 02 00 00    	je     6930 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x2b0>
    66c0:	48 89 c8             	mov    %rcx,%rax
    66c3:	eb 10                	jmp    66d5 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x55>
    66c5:	0f 1f 00             	nopl   (%rax)
    66c8:	48 83 c0 08          	add    $0x8,%rax
    66cc:	48 39 c2             	cmp    %rax,%rdx
    66cf:	0f 84 5b 02 00 00    	je     6930 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x2b0>
    if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    66d5:	8b 18                	mov    (%rax),%ebx
    66d7:	83 fb 32             	cmp    $0x32,%ebx
    66da:	75 ec                	jne    66c8 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x48>
        availableFormat.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR)
    66dc:	44 8b 68 04          	mov    0x4(%rax),%r13d
    if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    66e0:	45 85 ed             	test   %r13d,%r13d
    66e3:	75 e3                	jne    66c8 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x48>
    66e5:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
    66ec:	00 
    66ed:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    66f4:	00 
  for (const auto &availablePresentMode : availablePresentModes) {
    66f5:	48 39 c2             	cmp    %rax,%rdx
    66f8:	75 13                	jne    670d <_ZN4rtvc17RenderApplication15createSwapChainEv+0x8d>
    66fa:	e9 41 02 00 00       	jmp    6940 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x2c0>
    66ff:	90                   	nop
    6700:	48 83 c0 04          	add    $0x4,%rax
    6704:	48 39 c2             	cmp    %rax,%rdx
    6707:	0f 84 33 02 00 00    	je     6940 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x2c0>
    if (availablePresentMode == VK_PRESENT_MODE_IMMEDIATE_KHR) {
    670d:	44 8b 20             	mov    (%rax),%r12d
    6710:	45 85 e4             	test   %r12d,%r12d
    6713:	75 eb                	jne    6700 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x80>
  if (capabilities.currentExtent.width != std::numeric_limits<uint32_t>::max())
    6715:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
    671a:	41 83 fe ff          	cmp    $0xffffffff,%r14d
    671e:	0f 84 31 02 00 00    	je     6955 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x2d5>
    return capabilities.currentExtent;
    6724:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
  uint32_t imageCount = swapChainSupport.capabilities.minImageCount + 1;
    6729:	8b 44 24 30          	mov    0x30(%rsp),%eax
    672d:	8d 50 01             	lea    0x1(%rax),%edx
  if (swapChainSupport.capabilities.maxImageCount > 0 &&
    6730:	8b 44 24 34          	mov    0x34(%rsp),%eax
  uint32_t imageCount = swapChainSupport.capabilities.minImageCount + 1;
    6734:	89 54 24 14          	mov    %edx,0x14(%rsp)
  if (swapChainSupport.capabilities.maxImageCount > 0 &&
    6738:	39 d0                	cmp    %edx,%eax
    673a:	73 08                	jae    6744 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xc4>
    673c:	85 c0                	test   %eax,%eax
    673e:	0f 85 8c 02 00 00    	jne    69d0 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x350>
  VkSwapchainCreateInfoKHR createInfo{};
    6744:	31 c0                	xor    %eax,%eax
  createInfo.minImageCount = imageCount;
    6746:	66 41 0f 6e cd       	movd   %r13d,%xmm1
    674b:	66 0f 6e c2          	movd   %edx,%xmm0
  VkSwapchainCreateInfoKHR createInfo{};
    674f:	b9 0c 00 00 00       	mov    $0xc,%ecx
    6754:	48 8d bc 24 a8 00 00 	lea    0xa8(%rsp),%rdi
    675b:	00 
  createInfo.minImageCount = imageCount;
    675c:	66 41 0f 6e d6       	movd   %r14d,%xmm2
    6761:	66 0f 6e db          	movd   %ebx,%xmm3
  VkSwapchainCreateInfoKHR createInfo{};
    6765:	48 c7 84 24 a4 00 00 	movq   $0x0,0xa4(%rsp)
    676c:	00 00 00 00 00 
    6771:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
    6778:	00 00 00 00 00 
  createInfo.minImageCount = imageCount;
    677d:	66 0f 62 ca          	punpckldq %xmm2,%xmm1
    6781:	66 0f 62 c3          	punpckldq %xmm3,%xmm0
  VkSwapchainCreateInfoKHR createInfo{};
    6785:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  createInfo.minImageCount = imageCount;
    6788:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
  QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    678c:	48 89 ef             	mov    %rbp,%rdi
  createInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    678f:	c7 84 24 a0 00 00 00 	movl   $0x3b9acde8,0xa0(%rsp)
    6796:	e8 cd 9a 3b 
  createInfo.imageExtent = extent;
    679a:	44 89 bc 24 d0 00 00 	mov    %r15d,0xd0(%rsp)
    67a1:	00 
  createInfo.surface = surface;
    67a2:	48 8b 45 50          	mov    0x50(%rbp),%rax
  QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    67a6:	48 8b 75 38          	mov    0x38(%rbp),%rsi
  createInfo.minImageCount = imageCount;
    67aa:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    67b1:	00 
  createInfo.surface = surface;
    67b2:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    67b9:	00 
  createInfo.imageArrayLayers = 1;
    67ba:	48 8b 05 47 3d 00 00 	mov    0x3d47(%rip),%rax        # a508 <_ZTSSt19bad_optional_access+0x38>
    67c1:	48 89 84 24 d4 00 00 	mov    %rax,0xd4(%rsp)
    67c8:	00 
  QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    67c9:	e8 72 f0 ff ff       	call   5840 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    67ce:	48 89 c1             	mov    %rax,%rcx
    67d1:	48 89 d0             	mov    %rdx,%rax
    67d4:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    67d9:	80 7c 24 24 00       	cmpb   $0x0,0x24(%rsp)
    67de:	89 ca                	mov    %ecx,%edx
    67e0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    67e5:	8b 44 24 28          	mov    0x28(%rsp),%eax
    67e9:	0f b6 4c 24 2c       	movzbl 0x2c(%rsp),%ecx
    67ee:	0f 84 85 d4 ff ff    	je     3c79 <_ZN4rtvc17RenderApplication15createSwapChainEv.cold+0x37>
                                   indices.presentFamily.value()};
    67f4:	89 54 24 18          	mov    %edx,0x18(%rsp)
    67f8:	84 c9                	test   %cl,%cl
    67fa:	0f 84 0b 02 00 00    	je     6a0b <_ZN4rtvc17RenderApplication15createSwapChainEv+0x38b>
    constexpr auto
    operator!=(const optional<_Tp>& __lhs, const optional<_Up>& __rhs)
    -> __optional_ne_t<_Tp, _Up>
    {
      return static_cast<bool>(__lhs) != static_cast<bool>(__rhs)
	|| (static_cast<bool>(__lhs) && *__lhs != *__rhs);
    6800:	39 c2                	cmp    %eax,%edx
    6802:	0f 84 d8 01 00 00    	je     69e0 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x360>
    6808:	be 01 00 00 00       	mov    $0x1,%esi
    680d:	b9 02 00 00 00       	mov    $0x2,%ecx
    6812:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    6817:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
  if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) !=
    681b:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
  createInfo.preTransform = swapChainSupport.capabilities.currentTransform;
    681f:	8b 44 24 58          	mov    0x58(%rsp),%eax
    createInfo.imageSharingMode = VK_SHARING_MODE_CONCURRENT;
    6823:	89 b4 24 dc 00 00 00 	mov    %esi,0xdc(%rsp)
  if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) !=
    682a:	48 8d b4 24 a0 00 00 	lea    0xa0(%rsp),%rsi
    6831:	00 
    createInfo.queueFamilyIndexCount = 2;
    6832:	89 8c 24 e0 00 00 00 	mov    %ecx,0xe0(%rsp)
  if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) !=
    6839:	48 8d 4d 78          	lea    0x78(%rbp),%rcx
    createInfo.pQueueFamilyIndices = QueueFamilyIndices;
    683d:	48 89 94 24 e8 00 00 	mov    %rdx,0xe8(%rsp)
    6844:	00 
  if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) !=
    6845:	31 d2                	xor    %edx,%edx
  createInfo.preTransform = swapChainSupport.capabilities.currentTransform;
    6847:	89 84 24 f0 00 00 00 	mov    %eax,0xf0(%rsp)
  createInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    684e:	c7 84 24 f4 00 00 00 	movl   $0x1,0xf4(%rsp)
    6855:	01 00 00 00 
  createInfo.presentMode = presentMode;
    6859:	44 89 a4 24 f8 00 00 	mov    %r12d,0xf8(%rsp)
    6860:	00 
  createInfo.clipped = VK_TRUE;
    6861:	c7 84 24 fc 00 00 00 	movl   $0x1,0xfc(%rsp)
    6868:	01 00 00 00 
  if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) !=
    686c:	e8 ff cb ff ff       	call   3470 <vkCreateSwapchainKHR@plt>
    6871:	85 c0                	test   %eax,%eax
    6873:	0f 85 c9 d3 ff ff    	jne    3c42 <_ZN4rtvc17RenderApplication15createSwapChainEv.cold>
  vkGetSwapchainImagesKHR(device, swapChain, &imageCount, nullptr);
    6879:	4c 8d 64 24 14       	lea    0x14(%rsp),%r12
    687e:	48 8b 75 78          	mov    0x78(%rbp),%rsi
    6882:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
    6886:	31 c9                	xor    %ecx,%ecx
    6888:	4c 89 e2             	mov    %r12,%rdx
    688b:	e8 60 c9 ff ff       	call   31f0 <vkGetSwapchainImagesKHR@plt>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6890:	48 8b 95 88 00 00 00 	mov    0x88(%rbp),%rdx
    6897:	48 8b 8d 80 00 00 00 	mov    0x80(%rbp),%rcx
  swapChainImages.resize(imageCount);
    689e:	8b 74 24 14          	mov    0x14(%rsp),%esi
    68a2:	48 89 d0             	mov    %rdx,%rax
    68a5:	48 29 c8             	sub    %rcx,%rax
    68a8:	48 c1 f8 03          	sar    $0x3,%rax
	if (__new_size > size())
    68ac:	48 39 f0             	cmp    %rsi,%rax
    68af:	0f 82 3b 01 00 00    	jb     69f0 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x370>
	else if (__new_size < size())
    68b5:	48 39 c6             	cmp    %rax,%rsi
    68b8:	0f 82 f2 00 00 00    	jb     69b0 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x330>
  vkGetSwapchainImagesKHR(device, swapChain, &imageCount,
    68be:	48 8b 75 78          	mov    0x78(%rbp),%rsi
    68c2:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
    68c6:	4c 89 e2             	mov    %r12,%rdx
    68c9:	e8 22 c9 ff ff       	call   31f0 <vkGetSwapchainImagesKHR@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    68ce:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
    68d5:	00 
  swapChainImageFormat = surfaceFormat.format;
    68d6:	89 9d 98 00 00 00    	mov    %ebx,0x98(%rbp)
  swapChainExtent = extent;
    68dc:	44 89 b5 9c 00 00 00 	mov    %r14d,0x9c(%rbp)
    68e3:	44 89 bd a0 00 00 00 	mov    %r15d,0xa0(%rbp)
	if (__p)
    68ea:	48 85 ff             	test   %rdi,%rdi
    68ed:	74 10                	je     68ff <_ZN4rtvc17RenderApplication15createSwapChainEv+0x27f>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    68ef:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
    68f6:	00 
    68f7:	48 29 fe             	sub    %rdi,%rsi
    68fa:	e8 91 ca ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    68ff:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
	if (__p)
    6904:	48 85 ff             	test   %rdi,%rdi
    6907:	74 0d                	je     6916 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x296>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6909:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
    690e:	48 29 fe             	sub    %rdi,%rsi
    6911:	e8 7a ca ff ff       	call   3390 <_ZdlPvm@plt>
}
    6916:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    691d:	5b                   	pop    %rbx
    691e:	5d                   	pop    %rbp
    691f:	41 5c                	pop    %r12
    6921:	41 5d                	pop    %r13
    6923:	41 5e                	pop    %r14
    6925:	41 5f                	pop    %r15
    6927:	c3                   	ret
    6928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    692f:	00 
  return availableFormats[0];
    6930:	8b 19                	mov    (%rcx),%ebx
    6932:	44 8b 69 04          	mov    0x4(%rcx),%r13d
    6936:	e9 aa fd ff ff       	jmp    66e5 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x65>
    693b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  if (capabilities.currentExtent.width != std::numeric_limits<uint32_t>::max())
    6940:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
  return VK_PRESENT_MODE_FIFO_KHR;
    6945:	41 bc 02 00 00 00    	mov    $0x2,%r12d
  if (capabilities.currentExtent.width != std::numeric_limits<uint32_t>::max())
    694b:	41 83 fe ff          	cmp    $0xffffffff,%r14d
    694f:	0f 85 cf fd ff ff    	jne    6724 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xa4>
    glfwGetFramebufferSize(window, &w, &h);
    6955:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    6959:	48 8d 94 24 a0 00 00 	lea    0xa0(%rsp),%rdx
    6960:	00 
    6961:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    6966:	e8 05 cd ff ff       	call   3670 <glfwGetFramebufferSize@plt>
    696b:	8b 44 24 40          	mov    0x40(%rsp),%eax
    696f:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    6974:	44 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%r15d
    697b:	00 
    697c:	41 39 c6             	cmp    %eax,%r14d
    697f:	44 0f 42 f0          	cmovb  %eax,%r14d
    6983:	8b 44 24 48          	mov    0x48(%rsp),%eax
    6987:	41 39 c6             	cmp    %eax,%r14d
    698a:	44 0f 47 f0          	cmova  %eax,%r14d
    698e:	8b 44 24 44          	mov    0x44(%rsp),%eax
    6992:	41 39 c7             	cmp    %eax,%r15d
    6995:	44 0f 42 f8          	cmovb  %eax,%r15d
    6999:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
    699d:	41 39 c7             	cmp    %eax,%r15d
    69a0:	44 0f 47 f8          	cmova  %eax,%r15d
    return actualExtent;
    69a4:	e9 80 fd ff ff       	jmp    6729 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xa9>
    69a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    69b0:	48 8d 04 f1          	lea    (%rcx,%rsi,8),%rax
	if (size_type __n = this->_M_impl._M_finish - __pos)
    69b4:	48 39 c2             	cmp    %rax,%rdx
    69b7:	0f 84 01 ff ff ff    	je     68be <_ZN4rtvc17RenderApplication15createSwapChainEv+0x23e>
	    this->_M_impl._M_finish = __pos;
    69bd:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
    69c4:	e9 f5 fe ff ff       	jmp    68be <_ZN4rtvc17RenderApplication15createSwapChainEv+0x23e>
    69c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    imageCount = swapChainSupport.capabilities.maxImageCount;
    69d0:	89 44 24 14          	mov    %eax,0x14(%rsp)
    69d4:	89 c2                	mov    %eax,%edx
    69d6:	e9 69 fd ff ff       	jmp    6744 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xc4>
    69db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    69e0:	31 f6                	xor    %esi,%esi
    69e2:	31 c9                	xor    %ecx,%ecx
    69e4:	31 d2                	xor    %edx,%edx
    69e6:	e9 2c fe ff ff       	jmp    6817 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x197>
    69eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	  _M_default_append(__new_size - size());
    69f0:	48 29 c6             	sub    %rax,%rsi
  swapChainImages.resize(imageCount);
    69f3:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
    69fa:	e8 a1 26 00 00       	call   90a0 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>
      { return _M_data_ptr(this->_M_impl._M_start); }
    69ff:	48 8b 8d 80 00 00 00 	mov    0x80(%rbp),%rcx
    6a06:	e9 b3 fe ff ff       	jmp    68be <_ZN4rtvc17RenderApplication15createSwapChainEv+0x23e>
    6a0b:	e9 8b d2 ff ff       	jmp    3c9b <_ZN4rtvc17RenderApplication15createSwapChainEv.cold+0x59>
    6a10:	e9 5f d2 ff ff       	jmp    3c74 <_ZN4rtvc17RenderApplication15createSwapChainEv.cold+0x32>
    6a15:	90                   	nop
    6a16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a1d:	00 00 00 

0000000000006a20 <_ZN4rtvc17RenderApplication16createImageViewsEv>:
void rtvc::RenderApplication::createImageViews() {
    6a20:	41 54                	push   %r12
    6a22:	55                   	push   %rbp
    6a23:	53                   	push   %rbx
    6a24:	48 89 fb             	mov    %rdi,%rbx
    6a27:	48 83 ec 50          	sub    $0x50,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6a2b:	48 8b 8f 88 00 00 00 	mov    0x88(%rdi),%rcx
    6a32:	4c 8b 87 b0 00 00 00 	mov    0xb0(%rdi),%r8
    6a39:	48 8b 97 80 00 00 00 	mov    0x80(%rdi),%rdx
    6a40:	48 8b bf a8 00 00 00 	mov    0xa8(%rdi),%rdi
    6a47:	48 89 ce             	mov    %rcx,%rsi
    6a4a:	4c 89 c0             	mov    %r8,%rax
    6a4d:	48 29 d6             	sub    %rdx,%rsi
    6a50:	48 29 f8             	sub    %rdi,%rax
	if (__new_size > size())
    6a53:	48 39 f0             	cmp    %rsi,%rax
    6a56:	0f 82 e4 00 00 00    	jb     6b40 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x120>
	else if (__new_size < size())
    6a5c:	48 39 c6             	cmp    %rax,%rsi
    6a5f:	0f 82 c3 00 00 00    	jb     6b28 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x108>
  for (size_t i = 0; i < swapChainImages.size(); ++i) {
    6a65:	31 ed                	xor    %ebp,%ebp
    6a67:	49 89 e4             	mov    %rsp,%r12
    VkImageViewCreateInfo createInfo{};
    6a6a:	66 0f ef c0          	pxor   %xmm0,%xmm0
  for (size_t i = 0; i < swapChainImages.size(); ++i) {
    6a6e:	48 39 d1             	cmp    %rdx,%rcx
    6a71:	0f 84 a3 00 00 00    	je     6b1a <_ZN4rtvc17RenderApplication16createImageViewsEv+0xfa>
    6a77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a7e:	00 00 
    VkImageViewCreateInfo createInfo{};
    6a80:	0f 11 44 24 34       	movups %xmm0,0x34(%rsp)
    if (vkCreateImageView(device, &createInfo, nullptr,
    6a85:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    6a89:	4c 89 e6             	mov    %r12,%rsi
    VkImageViewCreateInfo createInfo{};
    6a8c:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
    6a91:	0f 11 44 24 40       	movups %xmm0,0x40(%rsp)
    6a96:	0f 11 44 24 24       	movups %xmm0,0x24(%rsp)
    6a9b:	0f 11 44 24 04       	movups %xmm0,0x4(%rsp)
    createInfo.image = swapChainImages[i];
    6aa0:	48 8b 04 ea          	mov    (%rdx,%rbp,8),%rax
    if (vkCreateImageView(device, &createInfo, nullptr,
    6aa4:	31 d2                	xor    %edx,%edx
    createInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    6aa6:	c7 04 24 0f 00 00 00 	movl   $0xf,(%rsp)
    createInfo.image = swapChainImages[i];
    6aad:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    createInfo.format = swapChainImageFormat;
    6ab2:	8b 83 98 00 00 00    	mov    0x98(%rbx),%eax
    createInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    6ab8:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
    6abf:	00 
    createInfo.format = swapChainImageFormat;
    6ac0:	89 44 24 24          	mov    %eax,0x24(%rsp)
	return *(this->_M_impl._M_start + __n);
    6ac4:	48 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%rax
    createInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    6acb:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
    6ad2:	00 
    6ad3:	48 8d 0c e8          	lea    (%rax,%rbp,8),%rcx
    createInfo.subresourceRange.levelCount = 1;
    6ad7:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
    6ade:	00 
    createInfo.subresourceRange.layerCount = 1;
    6adf:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%rsp)
    6ae6:	00 
    if (vkCreateImageView(device, &createInfo, nullptr,
    6ae7:	e8 e4 c8 ff ff       	call   33d0 <vkCreateImageView@plt>
    6aec:	85 c0                	test   %eax,%eax
    6aee:	0f 85 ac d1 ff ff    	jne    3ca0 <_ZN4rtvc17RenderApplication16createImageViewsEv.cold>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6af4:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
    6afb:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
  for (size_t i = 0; i < swapChainImages.size(); ++i) {
    6b02:	48 83 c5 01          	add    $0x1,%rbp
    6b06:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6b0a:	48 29 d0             	sub    %rdx,%rax
    6b0d:	48 c1 f8 03          	sar    $0x3,%rax
    6b11:	48 39 c5             	cmp    %rax,%rbp
    6b14:	0f 82 66 ff ff ff    	jb     6a80 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x60>
}
    6b1a:	48 83 c4 50          	add    $0x50,%rsp
    6b1e:	5b                   	pop    %rbx
    6b1f:	5d                   	pop    %rbp
    6b20:	41 5c                	pop    %r12
    6b22:	c3                   	ret
    6b23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    6b28:	48 01 f7             	add    %rsi,%rdi
	if (size_type __n = this->_M_impl._M_finish - __pos)
    6b2b:	49 39 f8             	cmp    %rdi,%r8
    6b2e:	0f 84 31 ff ff ff    	je     6a65 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x45>
	    this->_M_impl._M_finish = __pos;
    6b34:	48 89 bb b0 00 00 00 	mov    %rdi,0xb0(%rbx)
    6b3b:	e9 25 ff ff ff       	jmp    6a65 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x45>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6b40:	48 c1 f8 03          	sar    $0x3,%rax
    6b44:	48 c1 fe 03          	sar    $0x3,%rsi
  swapChainImageViews.resize(swapChainImages.size());
    6b48:	48 8d bb a8 00 00 00 	lea    0xa8(%rbx),%rdi
	  _M_default_append(__new_size - size());
    6b4f:	48 29 c6             	sub    %rax,%rsi
    6b52:	e8 29 27 00 00       	call   9280 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6b57:	48 8b 8b 88 00 00 00 	mov    0x88(%rbx),%rcx
    6b5e:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
    6b65:	e9 fb fe ff ff       	jmp    6a65 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x45>
    6b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006b70 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
rtvc::RenderApplication::readShader(const std::string &filePath) {
    6b70:	41 57                	push   %r15
    6b72:	41 56                	push   %r14
    6b74:	41 55                	push   %r13
    6b76:	41 54                	push   %r12
    6b78:	55                   	push   %rbp
    6b79:	48 89 d5             	mov    %rdx,%rbp
    6b7c:	53                   	push   %rbx
    6b7d:	48 89 fb             	mov    %rdi,%rbx
    6b80:	48 81 ec 28 02 00 00 	sub    $0x228,%rsp
       *  The default constructor does nothing and is not normally
       *  accessible to users.
      */
      basic_ios()
      : ios_base(), _M_tie(0), _M_fill(char_type()), _M_fill_init(false), 
	_M_streambuf(0), _M_ctype(0), _M_num_put(0), _M_num_get(0)
    6b87:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
    6b8e:	00 
    6b8f:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    6b94:	4c 89 ff             	mov    %r15,%rdi
    6b97:	e8 24 c5 ff ff       	call   30c0 <_ZNSt8ios_baseC2Ev@plt>
      seekg(off_type, ios_base::seekdir);
      ///@}

    protected:
      basic_istream()
      : _M_gcount(streamsize(0))
    6b9c:	4c 8b 2d 95 71 00 00 	mov    0x7195(%rip),%r13        # dd38 <_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE@GLIBCXX_3.4+0x8>
      : ios_base(), _M_tie(0), _M_fill(char_type()), _M_fill_init(false), 
    6ba3:	31 d2                	xor    %edx,%edx
      { this->init(0); }
    6ba5:	31 f6                	xor    %esi,%esi
	_M_streambuf(0), _M_ctype(0), _M_num_put(0), _M_num_get(0)
    6ba7:	48 8d 05 22 70 00 00 	lea    0x7022(%rip),%rax        # dbd0 <_ZTVSt9basic_iosIcSt11char_traitsIcEE@GLIBCXX_3.4+0x10>
    6bae:	66 0f ef c0          	pxor   %xmm0,%xmm0
      : ios_base(), _M_tie(0), _M_fill(char_type()), _M_fill_init(false), 
    6bb2:	66 89 94 24 f0 01 00 	mov    %dx,0x1f0(%rsp)
    6bb9:	00 
      : _M_gcount(streamsize(0))
    6bba:	48 8b 0d 7f 71 00 00 	mov    0x717f(%rip),%rcx        # dd40 <_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE@GLIBCXX_3.4+0x10>
	_M_streambuf(0), _M_ctype(0), _M_num_put(0), _M_num_get(0)
    6bc1:	0f 11 84 24 f8 01 00 	movups %xmm0,0x1f8(%rsp)
    6bc8:	00 
    6bc9:	0f 11 84 24 08 02 00 	movups %xmm0,0x208(%rsp)
    6bd0:	00 
    6bd1:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    6bd8:	00 
    6bd9:	49 8b 45 e8          	mov    -0x18(%r13),%rax
      : ios_base(), _M_tie(0), _M_fill(char_type()), _M_fill_init(false), 
    6bdd:	48 c7 84 24 e8 01 00 	movq   $0x0,0x1e8(%rsp)
    6be4:	00 00 00 00 00 
    6be9:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    6bee:	48 89 4c 04 10       	mov    %rcx,0x10(%rsp,%rax,1)
    6bf3:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6bfa:	00 00 
      { this->init(0); }
    6bfc:	49 8b 7d e8          	mov    -0x18(%r13),%rdi
    6c00:	4c 01 e7             	add    %r12,%rdi
    6c03:	e8 38 c9 ff ff       	call   3540 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
      : __istream_type(), _M_filebuf()
    6c08:	48 8d 05 69 70 00 00 	lea    0x7069(%rip),%rax        # dc78 <_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE@GLIBCXX_3.4+0x18>
    6c0f:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    6c14:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6c19:	4c 89 f7             	mov    %r14,%rdi
    6c1c:	48 83 c0 28          	add    $0x28,%rax
    6c20:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    6c27:	00 
    6c28:	e8 93 c7 ff ff       	call   33c0 <_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev@plt>
	this->init(&_M_filebuf);
    6c2d:	4c 89 f6             	mov    %r14,%rsi
    6c30:	4c 89 ff             	mov    %r15,%rdi
    6c33:	e8 08 c9 ff ff       	call   3540 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
      { return open(__s.c_str(), __mode); }
    6c38:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    6c3c:	ba 0e 00 00 00       	mov    $0xe,%edx
    6c41:	4c 89 f7             	mov    %r14,%rdi
    6c44:	e8 b7 c6 ff ff       	call   3300 <_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode@plt>
       */
      void
      open(const std::string& __s, ios_base::openmode __mode = ios_base::in)
      {
	if (!_M_filebuf.open(__s, __mode | ios_base::in))
	  this->setstate(ios_base::failbit);
    6c49:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    6c4e:	48 8b 7a e8          	mov    -0x18(%rdx),%rdi
    6c52:	4c 01 e7             	add    %r12,%rdi
	if (!_M_filebuf.open(__s, __mode | ios_base::in))
    6c55:	48 85 c0             	test   %rax,%rax
    6c58:	0f 84 5a 01 00 00    	je     6db8 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x248>
	else
	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
	  // 409. Closing an fstream should clear error state
	  this->clear();
    6c5e:	31 f6                	xor    %esi,%esi
    6c60:	e8 5b ca ff ff       	call   36c0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
      { return _M_file.is_open(); }
    6c65:	48 8d 84 24 88 00 00 	lea    0x88(%rsp),%rax
    6c6c:	00 
    6c6d:	48 89 c7             	mov    %rax,%rdi
    6c70:	48 89 04 24          	mov    %rax,(%rsp)
    6c74:	e8 07 c4 ff ff       	call   3080 <_ZNKSt12__basic_fileIcE7is_openEv@plt>
  if (!file.is_open())
    6c79:	84 c0                	test   %al,%al
    6c7b:	0f 84 87 01 00 00    	je     6e08 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x298>
  size_t fileSize = static_cast<size_t>(file.tellg());
    6c81:	4c 89 e7             	mov    %r12,%rdi
    6c84:	e8 57 ca ff ff       	call   36e0 <_ZNSi5tellgEv@plt>
    6c89:	48 89 c5             	mov    %rax,%rbp
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6c8c:	48 85 c0             	test   %rax,%rax
    6c8f:	0f 88 67 01 00 00    	js     6dfc <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x28c>
	: _M_start(), _M_finish(), _M_end_of_storage()
    6c95:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6c99:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    6ca0:	00 
    6ca1:	0f 11 03             	movups %xmm0,(%rbx)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6ca4:	0f 84 26 01 00 00    	je     6dd0 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6caa:	48 89 c7             	mov    %rax,%rdi
    6cad:	e8 be c6 ff ff       	call   3370 <_Znwm@plt>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6cb2:	48 8d 0c 28          	lea    (%rax,%rbp,1),%rcx
      if (__n <= 0)
    6cb6:	48 89 ea             	mov    %rbp,%rdx
	this->_M_impl._M_start = this->_M_allocate(__n);
    6cb9:	48 89 03             	mov    %rax,(%rbx)
    6cbc:	48 8d 78 01          	lea    0x1(%rax),%rdi
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6cc0:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    6cc4:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    6cc9:	c6 00 00             	movb   $0x0,(%rax)
    6ccc:	48 83 ea 01          	sub    $0x1,%rdx
    6cd0:	0f 85 ca 00 00 00    	jne    6da0 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x230>
	this->_M_impl._M_finish =
    6cd6:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
  file.seekg(0);
    6cda:	31 f6                	xor    %esi,%esi
    6cdc:	31 d2                	xor    %edx,%edx
    6cde:	4c 89 e7             	mov    %r12,%rdi
    6ce1:	e8 0a c8 ff ff       	call   34f0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), fileSize);
    6ce6:	48 8b 33             	mov    (%rbx),%rsi
    6ce9:	48 89 ea             	mov    %rbp,%rdx
    6cec:	4c 89 e7             	mov    %r12,%rdi
    6cef:	e8 dc c7 ff ff       	call   34d0 <_ZNSi4readEPcl@plt>
       *  fails, @c failbit is set in the stream's error state.
       */
      void
      close()
      {
	if (!_M_filebuf.close())
    6cf4:	4c 89 f7             	mov    %r14,%rdi
    6cf7:	e8 74 c3 ff ff       	call   3070 <_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv@plt>
    6cfc:	48 85 c0             	test   %rax,%rax
    6cff:	0f 84 db 00 00 00    	je     6de0 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x270>
      { }
    6d05:	48 8d 05 6c 6f 00 00 	lea    0x6f6c(%rip),%rax        # dc78 <_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE@GLIBCXX_3.4+0x18>
	  { this->close(); }
    6d0c:	4c 89 f7             	mov    %r14,%rdi
      { }
    6d0f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6d14:	48 83 c0 28          	add    $0x28,%rax
    6d18:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    6d1f:	00 
      }
    6d20:	48 8d 05 99 6f 00 00 	lea    0x6f99(%rip),%rax        # dcc0 <_ZTVSt13basic_filebufIcSt11char_traitsIcEE@GLIBCXX_3.4+0x10>
    6d27:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
	  { this->close(); }
    6d2c:	e8 3f c3 ff ff       	call   3070 <_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv@plt>
      }
    6d31:	48 8b 3c 24          	mov    (%rsp),%rdi
    6d35:	e8 06 ca ff ff       	call   3740 <_ZNSt12__basic_fileIcED1Ev@plt>

  public:
      /// Destructor deallocates no buffer space.
      virtual
      ~basic_streambuf()
      { }
    6d3a:	48 8d 05 af 6e 00 00 	lea    0x6eaf(%rip),%rax        # dbf0 <_ZTVSt15basic_streambufIcSt11char_traitsIcEE@GLIBCXX_3.4+0x10>
    6d41:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
    6d46:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    6d4b:	e8 70 c8 ff ff       	call   35c0 <_ZNSt6localeD1Ev@plt>
      { _M_gcount = streamsize(0); }
    6d50:	49 8b 45 e8          	mov    -0x18(%r13),%rax
    6d54:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
      ~basic_ios() { }
    6d59:	4c 89 ff             	mov    %r15,%rdi
    6d5c:	48 8b 0d dd 6f 00 00 	mov    0x6fdd(%rip),%rcx        # dd40 <_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE@GLIBCXX_3.4+0x10>
    6d63:	48 89 4c 04 10       	mov    %rcx,0x10(%rsp,%rax,1)
    6d68:	48 8d 05 61 6e 00 00 	lea    0x6e61(%rip),%rax        # dbd0 <_ZTVSt9basic_iosIcSt11char_traitsIcEE@GLIBCXX_3.4+0x10>
    6d6f:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    6d76:	00 
    6d77:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6d7e:	00 00 
    6d80:	e8 6b c3 ff ff       	call   30f0 <_ZNSt8ios_baseD2Ev@plt>
}
    6d85:	48 81 c4 28 02 00 00 	add    $0x228,%rsp
    6d8c:	48 89 d8             	mov    %rbx,%rax
    6d8f:	5b                   	pop    %rbx
    6d90:	5d                   	pop    %rbp
    6d91:	41 5c                	pop    %r12
    6d93:	41 5d                	pop    %r13
    6d95:	41 5e                	pop    %r14
    6d97:	41 5f                	pop    %r15
    6d99:	c3                   	ret
    6d9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6da0:	31 f6                	xor    %esi,%esi
    6da2:	e8 19 c4 ff ff       	call   31c0 <memset@plt>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6da7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
	return __first;

      __glibcxx_requires_can_increment(__first, __n);

      std::__fill_a(__first, __first + __n, __value);
      return __first + __n;
    6dac:	e9 25 ff ff ff       	jmp    6cd6 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x166>
    6db1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6db8:	8b 77 20             	mov    0x20(%rdi),%esi
    6dbb:	83 ce 04             	or     $0x4,%esi
      { this->clear(this->rdstate() | __state); }
    6dbe:	e8 fd c8 ff ff       	call   36c0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    6dc3:	e9 9d fe ff ff       	jmp    6c65 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf5>
    6dc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6dcf:	00 
	this->_M_impl._M_start = this->_M_allocate(__n);
    6dd0:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6dd7:	31 ff                	xor    %edi,%edi
    6dd9:	e9 f8 fe ff ff       	jmp    6cd6 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x166>
    6dde:	66 90                	xchg   %ax,%ax
	  this->setstate(ios_base::failbit);
    6de0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6de5:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    6de9:	4c 01 e7             	add    %r12,%rdi
    6dec:	8b 77 20             	mov    0x20(%rdi),%esi
    6def:	83 ce 04             	or     $0x4,%esi
    6df2:	e8 c9 c8 ff ff       	call   36c0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    6df7:	e9 09 ff ff ff       	jmp    6d05 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x195>
	  __throw_length_error(
    6dfc:	48 8d 3d 0d 35 00 00 	lea    0x350d(%rip),%rdi        # a310 <_IO_stdin_used+0x310>
    6e03:	e8 98 c3 ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
    6e08:	e9 d9 ce ff ff       	jmp    3ce6 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold>
  file.seekg(0);
    6e0d:	48 89 c5             	mov    %rax,%rbp
    6e10:	e9 03 cf ff ff       	jmp    3d18 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0x32>
      ~basic_ios() { }
    6e15:	48 89 c3             	mov    %rax,%rbx
    6e18:	e9 46 cf ff ff       	jmp    3d63 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0x7d>
	__catch(...)
    6e1d:	48 89 c7             	mov    %rax,%rdi
    6e20:	e9 6f cf ff ff       	jmp    3d94 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0xae>
      }
    6e25:	48 89 c3             	mov    %rax,%rbx
    6e28:	e9 12 cf ff ff       	jmp    3d3f <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0x59>
    6e2d:	48 89 c3             	mov    %rax,%rbx
    6e30:	e9 12 cf ff ff       	jmp    3d47 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0x61>
    6e35:	e9 48 cf ff ff       	jmp    3d82 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.cold+0x9c>
    6e3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006e40 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>:
void rtvc::RenderApplication::createGraphicsPipeline() {
    6e40:	41 57                	push   %r15
      {
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));

	if (__dnew > size_type(_S_local_capacity))
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
    6e42:	31 d2                	xor    %edx,%edx
    6e44:	41 56                	push   %r14
    6e46:	41 55                	push   %r13
    6e48:	41 54                	push   %r12
    6e4a:	55                   	push   %rbp
    6e4b:	53                   	push   %rbx
    6e4c:	48 89 fb             	mov    %rdi,%rbx
    6e4f:	48 81 ec 28 03 00 00 	sub    $0x328,%rsp
	: allocator_type(__a), _M_p(__dat) { }
    6e56:	48 8d ac 24 90 02 00 	lea    0x290(%rsp),%rbp
    6e5d:	00 
    6e5e:	4c 8d a4 24 30 02 00 	lea    0x230(%rsp),%r12
    6e65:	00 
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    6e66:	48 c7 84 24 30 02 00 	movq   $0x1f,0x230(%rsp)
    6e6d:	00 1f 00 00 00 
	    _M_data(_M_create(__dnew, size_type(0)));
    6e72:	4c 89 e6             	mov    %r12,%rsi
    6e75:	48 89 ef             	mov    %rbp,%rdi
    6e78:	4c 8d ac 24 a0 02 00 	lea    0x2a0(%rsp),%r13
    6e7f:	00 
    6e80:	4c 89 ac 24 90 02 00 	mov    %r13,0x290(%rsp)
    6e87:	00 
    6e88:	e8 93 c8 ff ff       	call   3720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
	    _M_capacity(__dnew);
    6e8d:	48 8b 94 24 30 02 00 	mov    0x230(%rsp),%rdx
    6e94:	00 
  auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    6e95:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6e9a:	48 89 de             	mov    %rbx,%rsi
	  return __s1;
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    6e9d:	66 0f 6f 05 9b 36 00 	movdqa 0x369b(%rip),%xmm0        # a540 <_ZTSSt19bad_optional_access+0x70>
    6ea4:	00 
      { _M_dataplus._M_p = __p; }
    6ea5:	48 89 84 24 90 02 00 	mov    %rax,0x290(%rsp)
    6eac:	00 
      { _M_allocated_capacity = __capacity; }
    6ead:	48 89 94 24 a0 02 00 	mov    %rdx,0x2a0(%rsp)
    6eb4:	00 
    6eb5:	0f 11 00             	movups %xmm0,(%rax)
    6eb8:	66 0f 6f 05 90 36 00 	movdqa 0x3690(%rip),%xmm0        # a550 <_ZTSSt19bad_optional_access+0x80>
    6ebf:	00 
    6ec0:	0f 11 40 0f          	movups %xmm0,0xf(%rax)
	__c1 = __c2;
    6ec4:	48 8b 84 24 90 02 00 	mov    0x290(%rsp),%rax
    6ecb:	00 
      { _M_string_length = __length; }
    6ecc:	48 89 94 24 98 02 00 	mov    %rdx,0x298(%rsp)
    6ed3:	00 
    6ed4:	c6 04 10 00          	movb   $0x0,(%rax,%rdx,1)
    6ed8:	48 89 ea             	mov    %rbp,%rdx
    6edb:	e8 90 fc ff ff       	call   6b70 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
      { return _M_dataplus._M_p; }
    6ee0:	48 8b bc 24 90 02 00 	mov    0x290(%rsp),%rdi
    6ee7:	00 
	if (!_M_is_local())
    6ee8:	4c 39 ef             	cmp    %r13,%rdi
    6eeb:	74 11                	je     6efe <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xbe>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    6eed:	48 8b 84 24 a0 02 00 	mov    0x2a0(%rsp),%rax
    6ef4:	00 
    6ef5:	48 8d 70 01          	lea    0x1(%rax),%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6ef9:	e8 92 c4 ff ff       	call   3390 <_ZdlPvm@plt>
	    _M_data(_M_create(__dnew, size_type(0)));
    6efe:	31 d2                	xor    %edx,%edx
    6f00:	4c 89 e6             	mov    %r12,%rsi
    6f03:	48 89 ef             	mov    %rbp,%rdi
	: allocator_type(__a), _M_p(__dat) { }
    6f06:	4c 89 ac 24 90 02 00 	mov    %r13,0x290(%rsp)
    6f0d:	00 
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    6f0e:	48 c7 84 24 30 02 00 	movq   $0x1f,0x230(%rsp)
    6f15:	00 1f 00 00 00 
	    _M_data(_M_create(__dnew, size_type(0)));
    6f1a:	e8 01 c8 ff ff       	call   3720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
	    _M_capacity(__dnew);
    6f1f:	48 8b 94 24 30 02 00 	mov    0x230(%rsp),%rdx
    6f26:	00 
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    6f27:	66 0f 6f 05 11 36 00 	movdqa 0x3611(%rip),%xmm0        # a540 <_ZTSSt19bad_optional_access+0x70>
    6f2e:	00 
  auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    6f2f:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    6f34:	48 89 de             	mov    %rbx,%rsi
      { _M_dataplus._M_p = __p; }
    6f37:	48 89 84 24 90 02 00 	mov    %rax,0x290(%rsp)
    6f3e:	00 
      { _M_allocated_capacity = __capacity; }
    6f3f:	48 89 94 24 a0 02 00 	mov    %rdx,0x2a0(%rsp)
    6f46:	00 
    6f47:	0f 11 00             	movups %xmm0,(%rax)
    6f4a:	66 0f 6f 05 0e 36 00 	movdqa 0x360e(%rip),%xmm0        # a560 <_ZTSSt19bad_optional_access+0x90>
    6f51:	00 
    6f52:	0f 11 40 0f          	movups %xmm0,0xf(%rax)
	__c1 = __c2;
    6f56:	48 8b 84 24 90 02 00 	mov    0x290(%rsp),%rax
    6f5d:	00 
      { _M_string_length = __length; }
    6f5e:	48 89 94 24 98 02 00 	mov    %rdx,0x298(%rsp)
    6f65:	00 
    6f66:	c6 04 10 00          	movb   $0x0,(%rax,%rdx,1)
    6f6a:	48 89 ea             	mov    %rbp,%rdx
    6f6d:	e8 fe fb ff ff       	call   6b70 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
      { return _M_dataplus._M_p; }
    6f72:	48 8b bc 24 90 02 00 	mov    0x290(%rsp),%rdi
    6f79:	00 
	if (!_M_is_local())
    6f7a:	4c 39 ef             	cmp    %r13,%rdi
    6f7d:	74 11                	je     6f90 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x150>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    6f7f:	48 8b 84 24 a0 02 00 	mov    0x2a0(%rsp),%rax
    6f86:	00 
    6f87:	48 8d 70 01          	lea    0x1(%rax),%rsi
    6f8b:	e8 00 c4 ff ff       	call   3390 <_ZdlPvm@plt>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6f90:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
    6f95:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  VkShaderModuleCreateInfo createInfo{};
    6f9a:	66 0f ef c0          	pxor   %xmm0,%xmm0
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    6f9e:	31 d2                	xor    %edx,%edx
    6fa0:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    6fa4:	4c 89 e1             	mov    %r12,%rcx
    6fa7:	48 89 ee             	mov    %rbp,%rsi
  VkShaderModuleCreateInfo createInfo{};
    6faa:	c7 84 24 a4 02 00 00 	movl   $0x0,0x2a4(%rsp)
    6fb1:	00 00 00 00 
    6fb5:	4c 29 e8             	sub    %r13,%rax
  createInfo.pCode = reinterpret_cast<const uint32_t *>(code.data());
    6fb8:	4c 89 ac 24 b0 02 00 	mov    %r13,0x2b0(%rsp)
    6fbf:	00 
  createInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    6fc0:	c7 84 24 90 02 00 00 	movl   $0x10,0x290(%rsp)
    6fc7:	10 00 00 00 
  createInfo.codeSize = code.size();
    6fcb:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
    6fd2:	00 
  VkShaderModuleCreateInfo createInfo{};
    6fd3:	0f 11 84 24 94 02 00 	movups %xmm0,0x294(%rsp)
    6fda:	00 
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    6fdb:	e8 90 c2 ff ff       	call   3270 <vkCreateShaderModule@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6fe0:	4c 8b 74 24 50       	mov    0x50(%rsp),%r14
    6fe5:	85 c0                	test   %eax,%eax
    6fe7:	0f 85 e9 cd ff ff    	jne    3dd6 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x32>
  return shaderModule;
    6fed:	48 8b 84 24 30 02 00 	mov    0x230(%rsp),%rax
    6ff4:	00 
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    6ff5:	4c 89 e1             	mov    %r12,%rcx
    6ff8:	31 d2                	xor    %edx,%edx
    6ffa:	48 89 ee             	mov    %rbp,%rsi
    6ffd:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
  VkShaderModuleCreateInfo createInfo{};
    7001:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7005:	c7 84 24 a4 02 00 00 	movl   $0x0,0x2a4(%rsp)
    700c:	00 00 00 00 
  return shaderModule;
    7010:	48 89 04 24          	mov    %rax,(%rsp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7014:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  createInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    7019:	c7 84 24 90 02 00 00 	movl   $0x10,0x290(%rsp)
    7020:	10 00 00 00 
    7024:	4c 29 f0             	sub    %r14,%rax
  createInfo.pCode = reinterpret_cast<const uint32_t *>(code.data());
    7027:	4c 89 b4 24 b0 02 00 	mov    %r14,0x2b0(%rsp)
    702e:	00 
  createInfo.codeSize = code.size();
    702f:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
    7036:	00 
  VkShaderModuleCreateInfo createInfo{};
    7037:	0f 11 84 24 94 02 00 	movups %xmm0,0x294(%rsp)
    703e:	00 
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    703f:	e8 2c c2 ff ff       	call   3270 <vkCreateShaderModule@plt>
    7044:	85 c0                	test   %eax,%eax
    7046:	0f 85 ae 04 00 00    	jne    74fa <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x6ba>
                                                    fragShaderStageInfo};
    704c:	48 8b 05 bd 34 00 00 	mov    0x34bd(%rip),%rax        # a510 <_ZTSSt19bad_optional_access+0x40>
  return shaderModule;
    7053:	48 8b 8c 24 30 02 00 	mov    0x230(%rsp),%rcx
    705a:	00 
  VkPipelineVertexInputStateCreateInfo vertexInputInfo{};
    705b:	66 0f ef c0          	pxor   %xmm0,%xmm0
                                                    fragShaderStageInfo};
    705f:	c7 84 24 30 02 00 00 	movl   $0x12,0x230(%rsp)
    7066:	12 00 00 00 
    706a:	48 8b 15 a7 34 00 00 	mov    0x34a7(%rip),%rdx        # a518 <_ZTSSt19bad_optional_access+0x48>
  VkPipelineVertexInputStateCreateInfo vertexInputInfo{};
    7071:	0f 11 84 24 04 01 00 	movups %xmm0,0x104(%rsp)
    7078:	00 
                                                    fragShaderStageInfo};
    7079:	48 89 84 24 40 02 00 	mov    %rax,0x240(%rsp)
    7080:	00 
    7081:	48 8b 04 24          	mov    (%rsp),%rax
  return shaderModule;
    7085:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
                                                    fragShaderStageInfo};
    708a:	48 89 84 24 48 02 00 	mov    %rax,0x248(%rsp)
    7091:	00 
    7092:	48 8d 05 2a 31 00 00 	lea    0x312a(%rip),%rax        # a1c3 <_IO_stdin_used+0x1c3>
    7099:	48 c7 84 24 38 02 00 	movq   $0x0,0x238(%rsp)
    70a0:	00 00 00 00 00 
    70a5:	48 89 84 24 50 02 00 	mov    %rax,0x250(%rsp)
    70ac:	00 
    70ad:	48 c7 84 24 58 02 00 	movq   $0x0,0x258(%rsp)
    70b4:	00 00 00 00 00 
    70b9:	c7 84 24 60 02 00 00 	movl   $0x12,0x260(%rsp)
    70c0:	12 00 00 00 
    70c4:	48 c7 84 24 68 02 00 	movq   $0x0,0x268(%rsp)
    70cb:	00 00 00 00 00 
    70d0:	48 89 94 24 70 02 00 	mov    %rdx,0x270(%rsp)
    70d7:	00 
    70d8:	48 89 8c 24 78 02 00 	mov    %rcx,0x278(%rsp)
    70df:	00 
    70e0:	48 89 84 24 80 02 00 	mov    %rax,0x280(%rsp)
    70e7:	00 
    70e8:	48 c7 84 24 88 02 00 	movq   $0x0,0x288(%rsp)
    70ef:	00 00 00 00 00 
  vertexInputInfo.sType =
    70f4:	c7 84 24 f0 00 00 00 	movl   $0x13,0xf0(%rsp)
    70fb:	13 00 00 00 
  VkPipelineVertexInputStateCreateInfo vertexInputInfo{};
    70ff:	0f 11 84 24 f4 00 00 	movups %xmm0,0xf4(%rsp)
    7106:	00 
    7107:	0f 11 84 24 10 01 00 	movups %xmm0,0x110(%rsp)
    710e:	00 
  auto bindingDescription = rtvc::Vertex::getBindingDescription();
    710f:	e8 ec 2c 00 00       	call   9e00 <_ZN4rtvc6Vertex21getBindingDescriptionEv>
  auto attributeDescriptions = rtvc::Vertex::getAttributeDescriptions();
    7114:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
    711b:	00 
  auto bindingDescription = rtvc::Vertex::getBindingDescription();
    711c:	48 89 44 24 14       	mov    %rax,0x14(%rsp)
  auto attributeDescriptions = rtvc::Vertex::getAttributeDescriptions();
    7121:	4c 89 ff             	mov    %r15,%rdi
  auto bindingDescription = rtvc::Vertex::getBindingDescription();
    7124:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
  auto attributeDescriptions = rtvc::Vertex::getAttributeDescriptions();
    7128:	e8 e3 2c 00 00       	call   9e10 <_ZN4rtvc6Vertex24getAttributeDescriptionsEv>
  vertexInputInfo.pVertexBindingDescriptions = &bindingDescription;
    712d:	48 8d 44 24 14       	lea    0x14(%rsp),%rax
  viewport.width = static_cast<float>(swapChainExtent.width);
    7132:	66 0f ef c9          	pxor   %xmm1,%xmm1
  viewport.height = static_cast<float>(swapChainExtent.height);
    7136:	66 0f ef d2          	pxor   %xmm2,%xmm2
  vertexInputInfo.vertexBindingDescriptionCount = 1;
    713a:	c7 84 24 04 01 00 00 	movl   $0x1,0x104(%rsp)
    7141:	01 00 00 00 
  vertexInputInfo.pVertexBindingDescriptions = &bindingDescription;
    7145:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    714c:	00 
  viewport.width = static_cast<float>(swapChainExtent.width);
    714d:	8b 83 9c 00 00 00    	mov    0x9c(%rbx),%eax
  VkPipelineInputAssemblyStateCreateInfo inputAssembly{};
    7153:	66 0f ef c0          	pxor   %xmm0,%xmm0
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7157:	bf 08 00 00 00       	mov    $0x8,%edi
  VkViewport viewport{};
    715c:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
  viewport.width = static_cast<float>(swapChainExtent.width);
    7161:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
  viewport.height = static_cast<float>(swapChainExtent.height);
    7166:	8b 83 a0 00 00 00    	mov    0xa0(%rbx),%eax
  VkPipelineInputAssemblyStateCreateInfo inputAssembly{};
    716c:	0f 11 84 24 b4 00 00 	movups %xmm0,0xb4(%rsp)
    7173:	00 
  VkPipelineRasterizationStateCreateInfo rasterizer{};
    7174:	0f 11 84 24 14 02 00 	movups %xmm0,0x214(%rsp)
    717b:	00 
  viewport.height = static_cast<float>(swapChainExtent.height);
    717c:	f3 48 0f 2a d0       	cvtsi2ss %rax,%xmm2
  scissor.extent = swapChainExtent;
    7181:	48 8b 83 9c 00 00 00 	mov    0x9c(%rbx),%rax
  VkPipelineInputAssemblyStateCreateInfo inputAssembly{};
    7188:	0f 11 84 24 c0 00 00 	movups %xmm0,0xc0(%rsp)
    718f:	00 
  VkPipelineRasterizationStateCreateInfo rasterizer{};
    7190:	0f 11 84 24 20 02 00 	movups %xmm0,0x220(%rsp)
    7197:	00 
  scissor.extent = swapChainExtent;
    7198:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  viewportState.pViewports = &viewport;
    719d:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
    71a2:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
    71a9:	00 
  viewportState.pScissors = &scissor;
    71aa:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  viewport.width = static_cast<float>(swapChainExtent.width);
    71af:	0f 14 ca             	unpcklps %xmm2,%xmm1
  viewportState.pScissors = &scissor;
    71b2:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
    71b9:	00 
  rasterizer.cullMode = VK_CULL_MODE_BACK_BIT;
    71ba:	48 8b 05 37 33 00 00 	mov    0x3337(%rip),%rax        # a4f8 <_ZTSSt19bad_optional_access+0x28>
  viewport.width = static_cast<float>(swapChainExtent.width);
    71c1:	0f 13 4c 24 78       	movlps %xmm1,0x78(%rsp)
  viewport.maxDepth = 1.0f;
    71c6:	f3 0f 10 0d 6e 33 00 	movss  0x336e(%rip),%xmm1        # a53c <_ZTSSt19bad_optional_access+0x6c>
    71cd:	00 
  vertexInputInfo.vertexAttributeDescriptionCount =
    71ce:	c7 84 24 10 01 00 00 	movl   $0x2,0x110(%rsp)
    71d5:	02 00 00 00 
  vertexInputInfo.pVertexAttributeDescriptions = attributeDescriptions.data();
    71d9:	4c 89 bc 24 18 01 00 	mov    %r15,0x118(%rsp)
    71e0:	00 
  inputAssembly.sType =
    71e1:	c7 84 24 b0 00 00 00 	movl   $0x14,0xb0(%rsp)
    71e8:	14 00 00 00 
  inputAssembly.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    71ec:	c7 84 24 c4 00 00 00 	movl   $0x3,0xc4(%rsp)
    71f3:	03 00 00 00 
  VkViewport viewport{};
    71f7:	c7 84 24 80 00 00 00 	movl   $0x0,0x80(%rsp)
    71fe:	00 00 00 00 
  VkRect2D scissor{};
    7202:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    7209:	00 00 
  VkPipelineViewportStateCreateInfo viewportState{};
    720b:	c7 84 24 44 01 00 00 	movl   $0x0,0x144(%rsp)
    7212:	00 00 00 00 
  viewportState.sType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
    7216:	c7 84 24 20 01 00 00 	movl   $0x16,0x120(%rsp)
    721d:	16 00 00 00 
  viewportState.viewportCount = 1;
    7221:	c7 84 24 34 01 00 00 	movl   $0x1,0x134(%rsp)
    7228:	01 00 00 00 
  viewportState.scissorCount = 1;
    722c:	c7 84 24 40 01 00 00 	movl   $0x1,0x140(%rsp)
    7233:	01 00 00 00 
  rasterizer.sType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
    7237:	c7 84 24 f0 01 00 00 	movl   $0x17,0x1f0(%rsp)
    723e:	17 00 00 00 
  viewport.maxDepth = 1.0f;
    7242:	f3 0f 11 8c 24 84 00 	movss  %xmm1,0x84(%rsp)
    7249:	00 00 
  VkPipelineViewportStateCreateInfo viewportState{};
    724b:	0f 11 84 24 24 01 00 	movups %xmm0,0x124(%rsp)
    7252:	00 
  VkPipelineRasterizationStateCreateInfo rasterizer{};
    7253:	0f 11 84 24 f4 01 00 	movups %xmm0,0x1f4(%rsp)
    725a:	00 
    725b:	0f 11 84 24 04 02 00 	movups %xmm0,0x204(%rsp)
    7262:	00 
  rasterizer.lineWidth = 1.0f;
    7263:	f3 0f 11 8c 24 28 02 	movss  %xmm1,0x228(%rsp)
    726a:	00 00 
  rasterizer.cullMode = VK_CULL_MODE_BACK_BIT;
    726c:	48 89 84 24 10 02 00 	mov    %rax,0x210(%rsp)
    7273:	00 
  colorBlending.logicOp = VK_LOGIC_OP_COPY;
    7274:	48 8b 05 a5 32 00 00 	mov    0x32a5(%rip),%rax        # a520 <_ZTSSt19bad_optional_access+0x50>
  VkPipelineColorBlendStateCreateInfo colorBlending{};
    727b:	0f 11 84 24 c4 01 00 	movups %xmm0,0x1c4(%rsp)
    7282:	00 
  colorBlending.logicOp = VK_LOGIC_OP_COPY;
    7283:	48 89 84 24 c8 01 00 	mov    %rax,0x1c8(%rsp)
    728a:	00 
  colorBlending.pAttachments = &colorBlendAttachment;
    728b:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
    7292:	00 
  VkPipelineMultisampleStateCreateInfo multisampling{};
    7293:	0f 11 84 24 64 01 00 	movups %xmm0,0x164(%rsp)
    729a:	00 
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    729b:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
    72a2:	00 
  VkPipelineColorBlendStateCreateInfo colorBlending{};
    72a3:	0f 11 84 24 d4 01 00 	movups %xmm0,0x1d4(%rsp)
    72aa:	00 
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    72ab:	0f 11 84 24 dc 00 00 	movups %xmm0,0xdc(%rsp)
    72b2:	00 
  multisampling.sType =
    72b3:	c7 84 24 50 01 00 00 	movl   $0x18,0x150(%rsp)
    72ba:	18 00 00 00 
  multisampling.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    72be:	c7 84 24 64 01 00 00 	movl   $0x1,0x164(%rsp)
    72c5:	01 00 00 00 
  colorBlendAttachment.colorWriteMask =
    72c9:	c7 84 24 ec 00 00 00 	movl   $0xf,0xec(%rsp)
    72d0:	0f 00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_ONE;
    72d4:	c7 84 24 d4 00 00 00 	movl   $0x1,0xd4(%rsp)
    72db:	01 00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    72df:	c7 84 24 e0 00 00 00 	movl   $0x1,0xe0(%rsp)
    72e6:	01 00 00 00 
  VkPipelineColorBlendStateCreateInfo colorBlending{};
    72ea:	c7 84 24 e4 01 00 00 	movl   $0x0,0x1e4(%rsp)
    72f1:	00 00 00 00 
  colorBlending.sType =
    72f5:	c7 84 24 b0 01 00 00 	movl   $0x1a,0x1b0(%rsp)
    72fc:	1a 00 00 00 
  colorBlending.pAttachments = &colorBlendAttachment;
    7300:	48 89 84 24 d0 01 00 	mov    %rax,0x1d0(%rsp)
    7307:	00 
  VkPipelineMultisampleStateCreateInfo multisampling{};
    7308:	0f 11 84 24 54 01 00 	movups %xmm0,0x154(%rsp)
    730f:	00 
    7310:	0f 11 84 24 70 01 00 	movups %xmm0,0x170(%rsp)
    7317:	00 
  multisampling.minSampleShading = 1.0F;
    7318:	f3 0f 11 8c 24 6c 01 	movss  %xmm1,0x16c(%rsp)
    731f:	00 00 
  VkPipelineColorBlendStateCreateInfo colorBlending{};
    7321:	0f 11 84 24 b4 01 00 	movups %xmm0,0x1b4(%rsp)
    7328:	00 
    7329:	e8 42 c0 ff ff       	call   3370 <_Znwm@plt>
    732e:	49 89 c7             	mov    %rax,%r15
  if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    7331:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    7335:	66 0f ef c0          	pxor   %xmm0,%xmm0
  if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    7339:	31 d2                	xor    %edx,%edx
    733b:	48 8d 8b c8 00 00 00 	lea    0xc8(%rbx),%rcx
    7342:	48 8d b4 24 80 01 00 	lea    0x180(%rsp),%rsi
    7349:	00 
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    734a:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
    7351:	00 00 00 
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    7354:	0f 11 84 24 94 01 00 	movups %xmm0,0x194(%rsp)
    735b:	00 
    735c:	49 89 07             	mov    %rax,(%r15)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    735f:	c7 84 24 80 01 00 00 	movl   $0x1e,0x180(%rsp)
    7366:	1e 00 00 00 
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    736a:	0f 11 84 24 84 01 00 	movups %xmm0,0x184(%rsp)
    7371:	00 
    7372:	0f 11 84 24 a0 01 00 	movups %xmm0,0x1a0(%rsp)
    7379:	00 
  if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    737a:	e8 21 bf ff ff       	call   32a0 <vkCreatePipelineLayout@plt>
    737f:	48 8d 94 24 f0 01 00 	lea    0x1f0(%rsp),%rdx
    7386:	00 
    7387:	48 8d 8c 24 20 01 00 	lea    0x120(%rsp),%rcx
    738e:	00 
    738f:	66 49 0f 6e c4       	movq   %r12,%xmm0
    7394:	66 48 0f 6e da       	movq   %rdx,%xmm3
    7399:	48 8d 94 24 f0 00 00 	lea    0xf0(%rsp),%rdx
    73a0:	00 
    73a1:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    73a6:	66 48 0f 6e e2       	movq   %rdx,%xmm4
    73ab:	66 0f 6c cb          	punpcklqdq %xmm3,%xmm1
    73af:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    73b3:	85 c0                	test   %eax,%eax
    73b5:	0f 85 09 cb ff ff    	jne    3ec4 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x120>
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    73bb:	31 c0                	xor    %eax,%eax
    73bd:	48 8d bc 24 98 02 00 	lea    0x298(%rsp),%rdi
    73c4:	00 
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    73c5:	45 31 c0             	xor    %r8d,%r8d
    73c8:	31 f6                	xor    %esi,%esi
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    73ca:	b9 11 00 00 00       	mov    $0x11,%ecx
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    73cf:	4c 8d 8b d0 00 00 00 	lea    0xd0(%rbx),%r9
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    73d6:	48 c7 84 24 18 03 00 	movq   $0x0,0x318(%rsp)
    73dd:	00 00 00 00 00 
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    73e2:	ba 01 00 00 00       	mov    $0x1,%edx
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    73e7:	48 c7 84 24 94 02 00 	movq   $0x0,0x294(%rsp)
    73ee:	00 00 00 00 00 
    73f3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.pInputAssemblyState = &inputAssembly;
    73f6:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
    73fd:	00 
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    73fe:	48 89 e9             	mov    %rbp,%rcx
  pipelineInfo.pStages = shaderStages;
    7401:	0f 11 84 24 a8 02 00 	movups %xmm0,0x2a8(%rsp)
    7408:	00 
  pipelineInfo.pInputAssemblyState = &inputAssembly;
    7409:	48 89 84 24 b8 02 00 	mov    %rax,0x2b8(%rsp)
    7410:	00 
  pipelineInfo.pMultisampleState = &multisampling;
    7411:	48 8d 84 24 50 01 00 	lea    0x150(%rsp),%rax
    7418:	00 
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    7419:	f3 0f 6f 83 c0 00 00 	movdqu 0xc0(%rbx),%xmm0
    7420:	00 
    7421:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
  pipelineInfo.pMultisampleState = &multisampling;
    7425:	48 89 84 24 d8 02 00 	mov    %rax,0x2d8(%rsp)
    742c:	00 
  pipelineInfo.pColorBlendState = &colorBlending;
    742d:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
    7434:	00 
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    7435:	c7 84 24 90 02 00 00 	movl   $0x1c,0x290(%rsp)
    743c:	1c 00 00 00 
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    7440:	66 0f c6 c0 01       	shufpd $0x1,%xmm0,%xmm0
  pipelineInfo.stageCount = 2;
    7445:	c7 84 24 a4 02 00 00 	movl   $0x2,0x2a4(%rsp)
    744c:	02 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlending;
    7450:	48 89 84 24 e8 02 00 	mov    %rax,0x2e8(%rsp)
    7457:	00 
  pipelineInfo.basePipelineIndex = -1;
    7458:	c7 84 24 18 03 00 00 	movl   $0xffffffff,0x318(%rsp)
    745f:	ff ff ff ff 
  pipelineInfo.pViewportState = &viewportState;
    7463:	0f 11 8c 24 c8 02 00 	movups %xmm1,0x2c8(%rsp)
    746a:	00 
  pipelineInfo.layout = pipelineLayout;
    746b:	0f 11 84 24 f8 02 00 	movups %xmm0,0x2f8(%rsp)
    7472:	00 
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    7473:	e8 e8 bc ff ff       	call   3160 <vkCreateGraphicsPipelines@plt>
    7478:	85 c0                	test   %eax,%eax
    747a:	0f 85 24 c9 ff ff    	jne    3da4 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold>
  vkDestroyShaderModule(device, fragShaderModule, nullptr);
    7480:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    7484:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7489:	31 d2                	xor    %edx,%edx
    748b:	e8 f0 bf ff ff       	call   3480 <vkDestroyShaderModule@plt>
  vkDestroyShaderModule(device, vertShaderModule, nullptr);
    7490:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    7494:	48 8b 34 24          	mov    (%rsp),%rsi
    7498:	31 d2                	xor    %edx,%edx
    749a:	e8 e1 bf ff ff       	call   3480 <vkDestroyShaderModule@plt>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    749f:	be 08 00 00 00       	mov    $0x8,%esi
    74a4:	4c 89 ff             	mov    %r15,%rdi
    74a7:	e8 e4 be ff ff       	call   3390 <_ZdlPvm@plt>
	if (__p)
    74ac:	4d 85 f6             	test   %r14,%r14
    74af:	74 10                	je     74c1 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x681>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    74b1:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    74b6:	4c 89 f7             	mov    %r14,%rdi
    74b9:	4c 29 f6             	sub    %r14,%rsi
    74bc:	e8 cf be ff ff       	call   3390 <_ZdlPvm@plt>
	if (__p)
    74c1:	4d 85 ed             	test   %r13,%r13
    74c4:	74 10                	je     74d6 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x696>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    74c6:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    74cb:	4c 89 ef             	mov    %r13,%rdi
    74ce:	4c 29 ee             	sub    %r13,%rsi
    74d1:	e8 ba be ff ff       	call   3390 <_ZdlPvm@plt>
}
    74d6:	48 81 c4 28 03 00 00 	add    $0x328,%rsp
    74dd:	5b                   	pop    %rbx
    74de:	5d                   	pop    %rbp
    74df:	41 5c                	pop    %r12
    74e1:	41 5d                	pop    %r13
    74e3:	41 5e                	pop    %r14
    74e5:	41 5f                	pop    %r15
    74e7:	c3                   	ret
      { return _M_dataplus._M_p; }
    74e8:	48 89 c3             	mov    %rax,%rbx
    74eb:	e9 06 ca ff ff       	jmp    3ef6 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x152>
    74f0:	e9 13 c9 ff ff       	jmp    3e08 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x64>
    74f5:	e9 37 c9 ff ff       	jmp    3e31 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x8d>
    74fa:	e9 44 c9 ff ff       	jmp    3e43 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0x9f>
    74ff:	48 89 c3             	mov    %rax,%rbx
    7502:	e9 70 c9 ff ff       	jmp    3e77 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0xd3>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7507:	48 89 c3             	mov    %rax,%rbx
    750a:	e9 86 c9 ff ff       	jmp    3e95 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv.cold+0xf1>
    750f:	90                   	nop

0000000000007510 <_ZN4rtvc17RenderApplication18createFramebuffersEv>:
void rtvc::RenderApplication::createFramebuffers() {
    7510:	41 55                	push   %r13
    7512:	41 54                	push   %r12
    7514:	55                   	push   %rbp
    7515:	53                   	push   %rbx
    7516:	48 89 fb             	mov    %rdi,%rbx
    7519:	48 83 ec 58          	sub    $0x58,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    751d:	48 8b 8f b0 00 00 00 	mov    0xb0(%rdi),%rcx
    7524:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
    752b:	48 8b 97 a8 00 00 00 	mov    0xa8(%rdi),%rdx
    7532:	48 8b bf d8 00 00 00 	mov    0xd8(%rdi),%rdi
    7539:	48 89 ce             	mov    %rcx,%rsi
    753c:	4c 89 c0             	mov    %r8,%rax
    753f:	48 29 d6             	sub    %rdx,%rsi
    7542:	48 29 f8             	sub    %rdi,%rax
	if (__new_size > size())
    7545:	48 39 f0             	cmp    %rsi,%rax
    7548:	0f 82 e2 00 00 00    	jb     7630 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x120>
	else if (__new_size < size())
    754e:	48 39 c6             	cmp    %rax,%rsi
    7551:	0f 82 c1 00 00 00    	jb     7618 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x108>
      size() const _GLIBCXX_NOEXCEPT
    7557:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
    755c:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    VkFramebufferCreateInfo framebufferInfo{};
    7561:	66 0f ef c0          	pxor   %xmm0,%xmm0
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    7565:	31 ed                	xor    %ebp,%ebp
    7567:	48 39 d1             	cmp    %rdx,%rcx
    756a:	0f 84 99 00 00 00    	je     7609 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0xf9>
    VkImageView attachments[] = {swapChainImageViews[i]};
    7570:	48 8b 04 ea          	mov    (%rdx,%rbp,8),%rax
    VkFramebufferCreateInfo framebufferInfo{};
    7574:	0f 11 44 24 24       	movups %xmm0,0x24(%rsp)
    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
    7579:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    757d:	31 d2                	xor    %edx,%edx
    VkFramebufferCreateInfo framebufferInfo{};
    757f:	0f 11 44 24 34       	movups %xmm0,0x34(%rsp)
    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
    7584:	4c 89 e6             	mov    %r12,%rsi
    VkImageView attachments[] = {swapChainImageViews[i]};
    7587:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    framebufferInfo.renderPass = renderPass;
    758c:	48 8b 83 c0 00 00 00 	mov    0xc0(%rbx),%rax
    VkFramebufferCreateInfo framebufferInfo{};
    7593:	0f 11 44 24 40       	movups %xmm0,0x40(%rsp)
    framebufferInfo.renderPass = renderPass;
    7598:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    framebufferInfo.width = swapChainExtent.width;
    759d:	48 8b 83 9c 00 00 00 	mov    0x9c(%rbx),%rax
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    75a4:	c7 44 24 10 25 00 00 	movl   $0x25,0x10(%rsp)
    75ab:	00 
    framebufferInfo.width = swapChainExtent.width;
    75ac:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
	return *(this->_M_impl._M_start + __n);
    75b1:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
    framebufferInfo.attachmentCount = 1;
    75b8:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    75bf:	00 
    75c0:	48 8d 0c e8          	lea    (%rax,%rbp,8),%rcx
    framebufferInfo.pAttachments = attachments;
    75c4:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
    framebufferInfo.layers = 1;
    75c9:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%rsp)
    75d0:	00 
    VkFramebufferCreateInfo framebufferInfo{};
    75d1:	0f 11 44 24 14       	movups %xmm0,0x14(%rsp)
    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
    75d6:	e8 75 bf ff ff       	call   3550 <vkCreateFramebuffer@plt>
    75db:	85 c0                	test   %eax,%eax
    75dd:	0f 85 3b c9 ff ff    	jne    3f1e <_ZN4rtvc17RenderApplication18createFramebuffersEv.cold>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    75e3:	48 8b 93 a8 00 00 00 	mov    0xa8(%rbx),%rdx
    75ea:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    75f1:	48 83 c5 01          	add    $0x1,%rbp
    75f5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    75f9:	48 29 d0             	sub    %rdx,%rax
    75fc:	48 c1 f8 03          	sar    $0x3,%rax
    7600:	48 39 c5             	cmp    %rax,%rbp
    7603:	0f 82 67 ff ff ff    	jb     7570 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x60>
}
    7609:	48 83 c4 58          	add    $0x58,%rsp
    760d:	5b                   	pop    %rbx
    760e:	5d                   	pop    %rbp
    760f:	41 5c                	pop    %r12
    7611:	41 5d                	pop    %r13
    7613:	c3                   	ret
    7614:	0f 1f 40 00          	nopl   0x0(%rax)
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    7618:	48 01 f7             	add    %rsi,%rdi
	if (size_type __n = this->_M_impl._M_finish - __pos)
    761b:	49 39 f8             	cmp    %rdi,%r8
    761e:	0f 84 33 ff ff ff    	je     7557 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x47>
	    this->_M_impl._M_finish = __pos;
    7624:	48 89 bb e0 00 00 00 	mov    %rdi,0xe0(%rbx)
    762b:	e9 27 ff ff ff       	jmp    7557 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x47>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7630:	48 c1 f8 03          	sar    $0x3,%rax
    7634:	48 c1 fe 03          	sar    $0x3,%rsi
  swapChainFrameBuffers.resize(swapChainImageViews.size());
    7638:	48 8d bb d8 00 00 00 	lea    0xd8(%rbx),%rdi
	  _M_default_append(__new_size - size());
    763f:	48 29 c6             	sub    %rax,%rsi
    7642:	e8 19 1e 00 00       	call   9460 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7647:	48 8b 8b b0 00 00 00 	mov    0xb0(%rbx),%rcx
    764e:	48 8b 93 a8 00 00 00 	mov    0xa8(%rbx),%rdx
    7655:	e9 fd fe ff ff       	jmp    7557 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x47>
    765a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007660 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>:
void rtvc::RenderApplication::recreateSwapChain() {
    7660:	41 54                	push   %r12
    7662:	55                   	push   %rbp
    7663:	53                   	push   %rbx
    7664:	48 89 fb             	mov    %rdi,%rbx
    7667:	48 83 ec 10          	sub    $0x10,%rsp
  glfwGetFramebufferSize(window, &w, &h);
    766b:	48 8b 3f             	mov    (%rdi),%rdi
    766e:	4c 8d 64 24 0c       	lea    0xc(%rsp),%r12
    7673:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  int w = 0, h = 0;
    7678:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
    767f:	00 
  glfwGetFramebufferSize(window, &w, &h);
    7680:	4c 89 e2             	mov    %r12,%rdx
    7683:	48 89 ee             	mov    %rbp,%rsi
  int w = 0, h = 0;
    7686:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    768d:	00 
  glfwGetFramebufferSize(window, &w, &h);
    768e:	e8 dd bf ff ff       	call   3670 <glfwGetFramebufferSize@plt>
    7693:	eb 16                	jmp    76ab <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x4b>
    7695:	0f 1f 00             	nopl   (%rax)
    glfwGetFramebufferSize(window, &w, &h);
    7698:	48 8b 3b             	mov    (%rbx),%rdi
    769b:	4c 89 e2             	mov    %r12,%rdx
    769e:	48 89 ee             	mov    %rbp,%rsi
    76a1:	e8 ca bf ff ff       	call   3670 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
    76a6:	e8 35 bb ff ff       	call   31e0 <glfwWaitEvents@plt>
  while (w == 0 || h == 0) {
    76ab:	8b 54 24 08          	mov    0x8(%rsp),%edx
    76af:	85 d2                	test   %edx,%edx
    76b1:	74 e5                	je     7698 <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x38>
    76b3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    76b7:	85 c0                	test   %eax,%eax
    76b9:	74 dd                	je     7698 <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x38>
  vkDeviceWaitIdle(device);
    76bb:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    76bf:	e8 cc b9 ff ff       	call   3090 <vkDeviceWaitIdle@plt>
  cleanUpSwapChain();
    76c4:	48 89 df             	mov    %rbx,%rdi
    76c7:	e8 a4 e8 ff ff       	call   5f70 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>
  createSwapChain();
    76cc:	48 89 df             	mov    %rbx,%rdi
    76cf:	e8 ac ef ff ff       	call   6680 <_ZN4rtvc17RenderApplication15createSwapChainEv>
  createImageViews();
    76d4:	48 89 df             	mov    %rbx,%rdi
    76d7:	e8 44 f3 ff ff       	call   6a20 <_ZN4rtvc17RenderApplication16createImageViewsEv>
  createRenderPass();
    76dc:	48 89 df             	mov    %rbx,%rdi
    76df:	e8 fc e4 ff ff       	call   5be0 <_ZN4rtvc17RenderApplication16createRenderPassEv>
  createGraphicsPipeline();
    76e4:	48 89 df             	mov    %rbx,%rdi
    76e7:	e8 54 f7 ff ff       	call   6e40 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>
  createFramebuffers();
    76ec:	48 89 df             	mov    %rbx,%rdi
    76ef:	e8 1c fe ff ff       	call   7510 <_ZN4rtvc17RenderApplication18createFramebuffersEv>
}
    76f4:	48 83 c4 10          	add    $0x10,%rsp
    76f8:	5b                   	pop    %rbx
    76f9:	5d                   	pop    %rbp
    76fa:	41 5c                	pop    %r12
    76fc:	c3                   	ret
    76fd:	90                   	nop
    76fe:	66 90                	xchg   %ax,%ax

0000000000007700 <_ZN4rtvc17RenderApplication9drawFrameEv>:
void rtvc::RenderApplication::drawFrame() {
    7700:	55                   	push   %rbp
  vkWaitForFences(device, 1, &inFlightFences[currentFrame], VK_TRUE,
    7701:	b9 01 00 00 00       	mov    $0x1,%ecx
    7706:	be 01 00 00 00       	mov    $0x1,%esi
    770b:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
void rtvc::RenderApplication::drawFrame() {
    7712:	53                   	push   %rbx
    7713:	48 89 fb             	mov    %rdi,%rbx
    7716:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    771d:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
    7722:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
    7727:	66 48 0f 6e c8       	movq   %rax,%xmm1
    772c:	48 8d 44 24 24       	lea    0x24(%rsp),%rax
    7731:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
    7736:	66 48 0f 6e e0       	movq   %rax,%xmm4
    773b:	66 48 0f 6e d2       	movq   %rdx,%xmm2
  vkWaitForFences(device, 1, &inFlightFences[currentFrame], VK_TRUE,
    7740:	8b 97 5c 01 00 00    	mov    0x15c(%rdi),%edx
	return *(this->_M_impl._M_start + __n);
    7746:	48 8b 87 40 01 00 00 	mov    0x140(%rdi),%rax
    774d:	66 48 0f 6e dd       	movq   %rbp,%xmm3
    7752:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
    7756:	66 0f 6c d4          	punpcklqdq %xmm4,%xmm2
    775a:	66 0f 6c cb          	punpcklqdq %xmm3,%xmm1
    775e:	48 8d 14 d0          	lea    (%rax,%rdx,8),%rdx
    7762:	0f 29 54 24 10       	movaps %xmm2,0x10(%rsp)
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    7767:	0f 29 0c 24          	movaps %xmm1,(%rsp)
    776b:	e8 60 ba ff ff       	call   31d0 <vkWaitForFences@plt>
  VkResult result = vkAcquireNextImageKHR(
    7770:	48 8b 73 78          	mov    0x78(%rbx),%rsi
    7774:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    7778:	45 31 c0             	xor    %r8d,%r8d
      device, swapChain, UINT64_MAX, imageAvailableSemaphores[currentFrame],
    777b:	8b 93 5c 01 00 00    	mov    0x15c(%rbx),%edx
  VkResult result = vkAcquireNextImageKHR(
    7781:	48 8b 83 10 01 00 00 	mov    0x110(%rbx),%rax
    7788:	49 89 e9             	mov    %rbp,%r9
    778b:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
    778f:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    7796:	e8 85 b9 ff ff       	call   3120 <vkAcquireNextImageKHR@plt>
  if (result == VK_ERROR_OUT_OF_DATE_KHR) {
    779b:	3d 14 32 65 c4       	cmp    $0xc4653214,%eax
    77a0:	0f 84 fa 01 00 00    	je     79a0 <_ZN4rtvc17RenderApplication9drawFrameEv+0x2a0>
  } else if (result != VK_SUCCESS && result != VK_SUBOPTIMAL_KHR) {
    77a6:	85 c0                	test   %eax,%eax
    77a8:	0f 85 d2 01 00 00    	jne    7980 <_ZN4rtvc17RenderApplication9drawFrameEv+0x280>
  vkResetFences(device, 1, &inFlightFences[currentFrame]);
    77ae:	8b 93 5c 01 00 00    	mov    0x15c(%rbx),%edx
    77b4:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    77b8:	be 01 00 00 00       	mov    $0x1,%esi
  submitInfo.pSignalSemaphores = signalSemaphores;
    77bd:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
	return *(this->_M_impl._M_start + __n);
    77c2:	48 8b 83 40 01 00 00 	mov    0x140(%rbx),%rax
    77c9:	48 8d 14 d0          	lea    (%rax,%rdx,8),%rdx
  vkResetFences(device, 1, &inFlightFences[currentFrame]);
    77cd:	e8 5e be ff ff       	call   3630 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[currentFrame], 0);
    77d2:	8b 93 5c 01 00 00    	mov    0x15c(%rbx),%edx
    77d8:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    77df:	31 f6                	xor    %esi,%esi
    77e1:	48 8b 3c d0          	mov    (%rax,%rdx,8),%rdi
    77e5:	e8 c6 bc ff ff       	call   34b0 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[currentFrame], imageIndex);
    77ea:	8b 93 5c 01 00 00    	mov    0x15c(%rbx),%edx
    77f0:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    77f7:	48 89 df             	mov    %rbx,%rdi
    77fa:	48 8b 34 d0          	mov    (%rax,%rdx,8),%rsi
    77fe:	8b 54 24 20          	mov    0x20(%rsp),%edx
    7802:	e8 19 e6 ff ff       	call   5e20 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj>
  VkSemaphore waitSemaphores[] = {imageAvailableSemaphores[currentFrame]};
    7807:	8b 83 5c 01 00 00    	mov    0x15c(%rbx),%eax
  VkSubmitInfo submitInfo{};
    780d:	66 0f ef c0          	pxor   %xmm0,%xmm0
  VkSemaphore waitSemaphores[] = {imageAvailableSemaphores[currentFrame]};
    7811:	48 8b 93 10 01 00 00 	mov    0x110(%rbx),%rdx
  VkSubmitInfo submitInfo{};
    7818:	0f 11 84 24 a4 00 00 	movups %xmm0,0xa4(%rsp)
    781f:	00 
  submitInfo.pWaitSemaphores = waitSemaphores;
    7820:	66 0f 6f 6c 24 10    	movdqa 0x10(%rsp),%xmm5
  if (vkQueueSubmit(graphicsQueue, 1, &submitInfo,
    7826:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    782a:	be 01 00 00 00       	mov    $0x1,%esi
  VkSubmitInfo submitInfo{};
    782f:	0f 11 84 24 b4 00 00 	movups %xmm0,0xb4(%rsp)
    7836:	00 
    7837:	c7 84 24 c4 00 00 00 	movl   $0x0,0xc4(%rsp)
    783e:	00 00 00 00 
    7842:	0f 11 84 24 84 00 00 	movups %xmm0,0x84(%rsp)
    7849:	00 
    784a:	0f 11 84 24 94 00 00 	movups %xmm0,0x94(%rsp)
    7851:	00 
  VkSemaphore waitSemaphores[] = {imageAvailableSemaphores[currentFrame]};
    7852:	48 8b 14 c2          	mov    (%rdx,%rax,8),%rdx
  submitInfo.pWaitSemaphores = waitSemaphores;
    7856:	0f 11 ac 24 98 00 00 	movups %xmm5,0x98(%rsp)
    785d:	00 
  VkSemaphore waitSemaphores[] = {imageAvailableSemaphores[currentFrame]};
    785e:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    7863:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    786a:	c7 84 24 80 00 00 00 	movl   $0x4,0x80(%rsp)
    7871:	04 00 00 00 
    7875:	48 8d 14 c2          	lea    (%rdx,%rax,8),%rdx
  VkPipelineStageFlags waitStages[] = {
    7879:	c7 44 24 24 00 04 00 	movl   $0x400,0x24(%rsp)
    7880:	00 
  submitInfo.pCommandBuffers = &commandBuffers[currentFrame];
    7881:	48 89 94 24 b0 00 00 	mov    %rdx,0xb0(%rsp)
    7888:	00 
  VkSemaphore signalSemaphores[] = {renderFinishedSemaphores[currentFrame]};
    7889:	48 8b 93 28 01 00 00 	mov    0x128(%rbx),%rdx
  submitInfo.waitSemaphoreCount = 1;
    7890:	c7 84 24 90 00 00 00 	movl   $0x1,0x90(%rsp)
    7897:	01 00 00 00 
  submitInfo.commandBufferCount = 1;
    789b:	c7 84 24 a8 00 00 00 	movl   $0x1,0xa8(%rsp)
    78a2:	01 00 00 00 
  VkSemaphore signalSemaphores[] = {renderFinishedSemaphores[currentFrame]};
    78a6:	48 8b 14 c2          	mov    (%rdx,%rax,8),%rdx
  submitInfo.signalSemaphoreCount = 1;
    78aa:	c7 84 24 b8 00 00 00 	movl   $0x1,0xb8(%rsp)
    78b1:	01 00 00 00 
  VkSemaphore signalSemaphores[] = {renderFinishedSemaphores[currentFrame]};
    78b5:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  if (vkQueueSubmit(graphicsQueue, 1, &submitInfo,
    78ba:	48 8b 93 40 01 00 00 	mov    0x140(%rbx),%rdx
  submitInfo.pSignalSemaphores = signalSemaphores;
    78c1:	48 89 ac 24 c0 00 00 	mov    %rbp,0xc0(%rsp)
    78c8:	00 
  if (vkQueueSubmit(graphicsQueue, 1, &submitInfo,
    78c9:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    78cd:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
    78d4:	00 
    78d5:	e8 46 bc ff ff       	call   3520 <vkQueueSubmit@plt>
    78da:	85 c0                	test   %eax,%eax
    78dc:	0f 85 b4 c6 ff ff    	jne    3f96 <_ZN4rtvc17RenderApplication9drawFrameEv.cold+0x32>
  VkSwapchainKHR swapChains[] = {swapChain};
    78e2:	48 8b 43 78          	mov    0x78(%rbx),%rax
  presentInfo.pSwapchains = swapChains;
    78e6:	66 0f 6f 34 24       	movdqa (%rsp),%xmm6
    78eb:	66 0f ef c0          	pxor   %xmm0,%xmm0
  result = vkQueuePresentKHR(presentQueue, &presentInfo);
    78ef:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    78f4:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
  VkPresentInfoKHR presentInfo{};
    78f8:	0f 11 44 24 54       	movups %xmm0,0x54(%rsp)
    78fd:	0f 11 44 24 64       	movups %xmm0,0x64(%rsp)
    7902:	0f 11 44 24 44       	movups %xmm0,0x44(%rsp)
    7907:	0f 11 44 24 70       	movups %xmm0,0x70(%rsp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
    790c:	c7 44 24 40 e9 cd 9a 	movl   $0x3b9acde9,0x40(%rsp)
    7913:	3b 
  presentInfo.waitSemaphoreCount = 1;
    7914:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
    791b:	00 
  presentInfo.pWaitSemaphores = signalSemaphores;
    791c:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
  VkSwapchainKHR swapChains[] = {swapChain};
    7921:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  presentInfo.swapchainCount = 1;
    7926:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
    792d:	00 
  presentInfo.pSwapchains = swapChains;
    792e:	0f 11 74 24 68       	movups %xmm6,0x68(%rsp)
  result = vkQueuePresentKHR(presentQueue, &presentInfo);
    7933:	e8 28 bd ff ff       	call   3660 <vkQueuePresentKHR@plt>
  if (result == VK_ERROR_OUT_OF_DATE_KHR || result == VK_SUBOPTIMAL_KHR ||
    7938:	3d 14 32 65 c4       	cmp    $0xc4653214,%eax
    793d:	74 10                	je     794f <_ZN4rtvc17RenderApplication9drawFrameEv+0x24f>
    793f:	3d eb cd 9a 3b       	cmp    $0x3b9acdeb,%eax
    7944:	74 09                	je     794f <_ZN4rtvc17RenderApplication9drawFrameEv+0x24f>
    7946:	80 bb 58 01 00 00 00 	cmpb   $0x0,0x158(%rbx)
    794d:	74 41                	je     7990 <_ZN4rtvc17RenderApplication9drawFrameEv+0x290>
    frameBufferResized = false;
    794f:	c6 83 58 01 00 00 00 	movb   $0x0,0x158(%rbx)
    recreateSwapChain();
    7956:	48 89 df             	mov    %rbx,%rdi
    7959:	e8 02 fd ff ff       	call   7660 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>
  currentFrame = (currentFrame + 1) % max_frames_in_flight;
    795e:	8b 83 5c 01 00 00    	mov    0x15c(%rbx),%eax
    7964:	83 c0 01             	add    $0x1,%eax
    7967:	83 e0 01             	and    $0x1,%eax
    796a:	89 83 5c 01 00 00    	mov    %eax,0x15c(%rbx)
}
    7970:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    7977:	5b                   	pop    %rbx
    7978:	5d                   	pop    %rbp
    7979:	c3                   	ret
    797a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  } else if (result != VK_SUCCESS && result != VK_SUBOPTIMAL_KHR) {
    7980:	3d eb cd 9a 3b       	cmp    $0x3b9acdeb,%eax
    7985:	0f 84 23 fe ff ff    	je     77ae <_ZN4rtvc17RenderApplication9drawFrameEv+0xae>
    798b:	e9 38 c6 ff ff       	jmp    3fc8 <_ZN4rtvc17RenderApplication9drawFrameEv.cold+0x64>
  } else if (result != VK_SUCCESS) {
    7990:	85 c0                	test   %eax,%eax
    7992:	74 ca                	je     795e <_ZN4rtvc17RenderApplication9drawFrameEv+0x25e>
    7994:	e9 cb c5 ff ff       	jmp    3f64 <_ZN4rtvc17RenderApplication9drawFrameEv.cold>
    7999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    recreateSwapChain();
    79a0:	48 89 df             	mov    %rbx,%rdi
    79a3:	e8 b8 fc ff ff       	call   7660 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>
}
    79a8:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    79af:	5b                   	pop    %rbx
    79b0:	5d                   	pop    %rbp
    79b1:	c3                   	ret
    79b2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    79b9:	00 00 00 00 
    79bd:	0f 1f 00             	nopl   (%rax)

00000000000079c0 <_ZN4rtvc17RenderApplication8mainLoopEv>:
void rtvc::RenderApplication::mainLoop() {
    79c0:	41 57                	push   %r15
      _GLIBCXX20_CONSTEXPR
      basic_string&
      assign(const _CharT* __s)
      {
	__glibcxx_requires_string(__s);
	return _M_replace(size_type(0), this->size(), __s,
    79c2:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    79c8:	31 d2                	xor    %edx,%edx
    79ca:	31 f6                	xor    %esi,%esi
    79cc:	41 56                	push   %r14
    79ce:	41 55                	push   %r13
    79d0:	4c 8d 2d 0f 28 00 00 	lea    0x280f(%rip),%r13        # a1e6 <_IO_stdin_used+0x1e6>
    79d7:	41 54                	push   %r12
    79d9:	4c 89 e9             	mov    %r13,%rcx
    79dc:	55                   	push   %rbp
    79dd:	48 89 fd             	mov    %rdi,%rbp
    79e0:	53                   	push   %rbx
    79e1:	48 83 ec 78          	sub    $0x78,%rsp
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    79e5:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
	return _M_replace(size_type(0), this->size(), __s,
    79ea:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
	typedef _Clock						clock;
	typedef _Dur						duration;
	typedef typename duration::rep				rep;
	typedef typename duration::period			period;

	constexpr time_point() : __d(duration::zero())
    79ef:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    79f6:	00 00 
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    79f8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    79fd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
      { _M_string_length = __length; }
    7a02:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    7a09:	00 00 
    7a0b:	c6 44 24 28 00       	movb   $0x0,0x28(%rsp)
	return _M_replace(size_type(0), this->size(), __s,
    7a10:	e8 0b bc ff ff       	call   3620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    this->start = std::chrono::high_resolution_clock::now();
    7a15:	e8 26 b6 ff ff       	call   3040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
      { return _M_insert(__f); }
    7a1a:	4c 8d 35 df 69 00 00 	lea    0x69df(%rip),%r14        # e400 <_ZSt4cout@GLIBCXX_3.4>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    7a21:	49 bc cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%r12
    7a28:	9b c4 20 
	__ostream_insert(__out, __s,
    7a2b:	4c 8d 3d b8 27 00 00 	lea    0x27b8(%rip),%r15        # a1ea <_IO_stdin_used+0x1ea>
    7a32:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  while (!glfwWindowShouldClose(window)) {
    7a37:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    7a3b:	e8 10 bd ff ff       	call   3750 <glfwWindowShouldClose@plt>
    7a40:	85 c0                	test   %eax,%eax
    7a42:	0f 85 01 01 00 00    	jne    7b49 <_ZN4rtvc17RenderApplication8mainLoopEv+0x189>
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    7a48:	48 8d 5c 24 58       	lea    0x58(%rsp),%rbx
	return _M_replace(size_type(0), this->size(), __s,
    7a4d:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
    7a52:	4c 89 e9             	mov    %r13,%rcx
    7a55:	31 d2                	xor    %edx,%edx
    7a57:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    7a5d:	31 f6                	xor    %esi,%esi
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    7a5f:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
	constexpr time_point() : __d(duration::zero())
    7a64:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    7a6b:	00 00 
      { _M_string_length = __length; }
    7a6d:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    7a74:	00 00 
    7a76:	c6 44 24 58 00       	movb   $0x0,0x58(%rsp)
	return _M_replace(size_type(0), this->size(), __s,
    7a7b:	e8 a0 bb ff ff       	call   3620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    7a80:	e8 bb b5 ff ff       	call   3040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
    7a85:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    glfwPollEvents();
    7a8a:	e8 a1 b8 ff ff       	call   3330 <glfwPollEvents@plt>
    drawFrame();
    7a8f:	48 89 ef             	mov    %rbp,%rdi
    7a92:	e8 69 fc ff ff       	call   7700 <_ZN4rtvc17RenderApplication9drawFrameEv>
               std::chrono::high_resolution_clock::now() - start)
    7a97:	e8 a4 b5 ff ff       	call   3040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    7a9c:	48 2b 44 24 10       	sub    0x10(%rsp),%rax
        .count();
    7aa1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7aa5:	48 89 c1             	mov    %rax,%rcx
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    7aa8:	49 f7 ec             	imul   %r12
    7aab:	48 c1 f9 3f          	sar    $0x3f,%rcx
    7aaf:	48 c1 fa 07          	sar    $0x7,%rdx
    7ab3:	48 29 ca             	sub    %rcx,%rdx
    7ab6:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    if (time_total.current() >= sec_to_mics) {
    7abb:	66 0f 2f 05 65 2a 00 	comisd 0x2a65(%rip),%xmm0        # a528 <_ZTSSt19bad_optional_access+0x58>
    7ac2:	00 
    7ac3:	72 52                	jb     7b17 <_ZN4rtvc17RenderApplication8mainLoopEv+0x157>
               std::chrono::high_resolution_clock::now() - start)
    7ac5:	e8 76 b5 ff ff       	call   3040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    7aca:	48 2b 44 24 40       	sub    0x40(%rsp),%rax
        .count();
    7acf:	66 0f ef c9          	pxor   %xmm1,%xmm1
      { return _M_insert(__f); }
    7ad3:	4c 89 f7             	mov    %r14,%rdi
    7ad6:	48 89 c1             	mov    %rax,%rcx
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    7ad9:	49 f7 ec             	imul   %r12
      std::cout << sec_to_mics / time_circle.current() << " FPS\n";
    7adc:	f2 0f 10 05 44 2a 00 	movsd  0x2a44(%rip),%xmm0        # a528 <_ZTSSt19bad_optional_access+0x58>
    7ae3:	00 
    7ae4:	48 c1 f9 3f          	sar    $0x3f,%rcx
    7ae8:	48 c1 fa 07          	sar    $0x7,%rdx
    7aec:	48 29 ca             	sub    %rcx,%rdx
    7aef:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    7af4:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    7af8:	e8 83 bb ff ff       	call   3680 <_ZNSo9_M_insertIdEERSoT_@plt>
    7afd:	48 89 c7             	mov    %rax,%rdi
	__ostream_insert(__out, __s,
    7b00:	ba 05 00 00 00       	mov    $0x5,%edx
    7b05:	4c 89 fe             	mov    %r15,%rsi
    7b08:	e8 23 b9 ff ff       	call   3430 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
  void reset() { start = std::chrono::high_resolution_clock::now(); }
    7b0d:	e8 2e b5 ff ff       	call   3040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
    7b12:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    auto stop = std::chrono::high_resolution_clock::now();
    7b17:	e8 24 b5 ff ff       	call   3040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
      { return _M_dataplus._M_p; }
    7b1c:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
	if (!_M_is_local())
    7b21:	48 39 df             	cmp    %rbx,%rdi
    7b24:	0f 84 0d ff ff ff    	je     7a37 <_ZN4rtvc17RenderApplication8mainLoopEv+0x77>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    7b2a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    7b2f:	48 8d 70 01          	lea    0x1(%rax),%rsi
    7b33:	e8 58 b8 ff ff       	call   3390 <_ZdlPvm@plt>
  while (!glfwWindowShouldClose(window)) {
    7b38:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    7b3c:	e8 0f bc ff ff       	call   3750 <glfwWindowShouldClose@plt>
    7b41:	85 c0                	test   %eax,%eax
    7b43:	0f 84 ff fe ff ff    	je     7a48 <_ZN4rtvc17RenderApplication8mainLoopEv+0x88>
  vkDeviceWaitIdle(device);
    7b49:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
    7b4d:	e8 3e b5 ff ff       	call   3090 <vkDeviceWaitIdle@plt>
    7b52:	e8 e9 b4 ff ff       	call   3040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
      { return _M_dataplus._M_p; }
    7b57:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
	if (!_M_is_local())
    7b5c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7b61:	48 39 c7             	cmp    %rax,%rdi
    7b64:	74 0e                	je     7b74 <_ZN4rtvc17RenderApplication8mainLoopEv+0x1b4>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    7b66:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    7b6b:	48 8d 70 01          	lea    0x1(%rax),%rsi
    7b6f:	e8 1c b8 ff ff       	call   3390 <_ZdlPvm@plt>
}
    7b74:	48 83 c4 78          	add    $0x78,%rsp
    7b78:	5b                   	pop    %rbx
    7b79:	5d                   	pop    %rbp
    7b7a:	41 5c                	pop    %r12
    7b7c:	41 5d                	pop    %r13
    7b7e:	41 5e                	pop    %r14
    7b80:	41 5f                	pop    %r15
    7b82:	c3                   	ret
      { return _M_dataplus._M_p; }
    7b83:	48 89 c3             	mov    %rax,%rbx
    7b86:	e9 a9 c4 ff ff       	jmp    4034 <_ZN4rtvc17RenderApplication8mainLoopEv.cold>
  }
    7b8b:	48 89 c3             	mov    %rax,%rbx
    7b8e:	e9 c6 c4 ff ff       	jmp    4059 <_ZN4rtvc17RenderApplication8mainLoopEv.cold+0x25>
    7b93:	48 89 c5             	mov    %rax,%rbp
    7b96:	e9 da c4 ff ff       	jmp    4075 <_ZN4rtvc17RenderApplication8mainLoopEv.cold+0x41>
}
    7b9b:	48 89 c3             	mov    %rax,%rbx
    7b9e:	e9 c0 c4 ff ff       	jmp    4063 <_ZN4rtvc17RenderApplication8mainLoopEv.cold+0x2f>
    7ba3:	90                   	nop
    7ba4:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    7bab:	00 00 00 00 
    7baf:	90                   	nop

0000000000007bb0 <_ZN4rtvc17RenderApplication20createCommandBuffersEv>:
void rtvc::RenderApplication::createCommandBuffers() {
    7bb0:	55                   	push   %rbp
    7bb1:	53                   	push   %rbx
    7bb2:	48 89 fb             	mov    %rdi,%rbx
    7bb5:	48 83 ec 28          	sub    $0x28,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7bb9:	48 8b b7 00 01 00 00 	mov    0x100(%rdi),%rsi
    7bc0:	48 8b 97 f8 00 00 00 	mov    0xf8(%rdi),%rdx
    7bc7:	48 89 f1             	mov    %rsi,%rcx
    7bca:	48 29 d1             	sub    %rdx,%rcx
    7bcd:	48 89 c8             	mov    %rcx,%rax
    7bd0:	48 c1 f8 03          	sar    $0x3,%rax
	if (__new_size > size())
    7bd4:	48 83 f9 08          	cmp    $0x8,%rcx
    7bd8:	76 66                	jbe    7c40 <_ZN4rtvc17RenderApplication20createCommandBuffersEv+0x90>
	else if (__new_size < size())
    7bda:	48 83 f9 10          	cmp    $0x10,%rcx
    7bde:	76 15                	jbe    7bf5 <_ZN4rtvc17RenderApplication20createCommandBuffersEv+0x45>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    7be0:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
	if (size_type __n = this->_M_impl._M_finish - __pos)
    7be4:	48 39 ce             	cmp    %rcx,%rsi
    7be7:	74 0c                	je     7bf5 <_ZN4rtvc17RenderApplication20createCommandBuffersEv+0x45>
	    this->_M_impl._M_finish = __pos;
    7be9:	48 89 8f 00 01 00 00 	mov    %rcx,0x100(%rdi)
    7bf0:	b8 02 00 00 00       	mov    $0x2,%eax
  if (vkAllocateCommandBuffers(device, &allocInfo, commandBuffers.data()) !=
    7bf5:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
  VkCommandBufferAllocateInfo allocInfo{};
    7bf9:	66 0f ef c0          	pxor   %xmm0,%xmm0
  if (vkAllocateCommandBuffers(device, &allocInfo, commandBuffers.data()) !=
    7bfd:	48 89 e6             	mov    %rsp,%rsi
  allocInfo.commandBufferCount = static_cast<uint32_t>(commandBuffers.size());
    7c00:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
  allocInfo.commandPool = commandPool;
    7c04:	48 8b 8b f0 00 00 00 	mov    0xf0(%rbx),%rcx
  VkCommandBufferAllocateInfo allocInfo{};
    7c0b:	0f 11 44 24 04       	movups %xmm0,0x4(%rsp)
    7c10:	48 c7 44 24 14 00 00 	movq   $0x0,0x14(%rsp)
    7c17:	00 00 
  allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    7c19:	c7 04 24 28 00 00 00 	movl   $0x28,(%rsp)
  allocInfo.commandPool = commandPool;
    7c20:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
  if (vkAllocateCommandBuffers(device, &allocInfo, commandBuffers.data()) !=
    7c25:	e8 e6 b6 ff ff       	call   3310 <vkAllocateCommandBuffers@plt>
    7c2a:	85 c0                	test   %eax,%eax
    7c2c:	0f 85 60 c4 ff ff    	jne    4092 <_ZN4rtvc17RenderApplication20createCommandBuffersEv.cold>
}
    7c32:	48 83 c4 28          	add    $0x28,%rsp
    7c36:	5b                   	pop    %rbx
    7c37:	5d                   	pop    %rbp
    7c38:	c3                   	ret
    7c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	  _M_default_append(__new_size - size());
    7c40:	be 02 00 00 00       	mov    $0x2,%esi
  commandBuffers.resize(max_frames_in_flight);
    7c45:	48 8d bf f8 00 00 00 	lea    0xf8(%rdi),%rdi
    7c4c:	48 29 c6             	sub    %rax,%rsi
    7c4f:	e8 ec 19 00 00       	call   9640 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7c54:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    7c5b:	48 8b 83 00 01 00 00 	mov    0x100(%rbx),%rax
    7c62:	48 29 d0             	sub    %rdx,%rax
    7c65:	48 c1 f8 03          	sar    $0x3,%rax
    7c69:	eb 8a                	jmp    7bf5 <_ZN4rtvc17RenderApplication20createCommandBuffersEv+0x45>
    7c6b:	90                   	nop
    7c6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007c70 <_ZN4rtvc17RenderApplication17createSyncObjectsEv>:
void rtvc::RenderApplication::createSyncObjects() {
    7c70:	41 55                	push   %r13
    7c72:	41 54                	push   %r12
    7c74:	55                   	push   %rbp
    7c75:	53                   	push   %rbx
    7c76:	48 89 fb             	mov    %rdi,%rbx
    7c79:	48 83 ec 48          	sub    $0x48,%rsp
    7c7d:	48 8b 8f 18 01 00 00 	mov    0x118(%rdi),%rcx
    7c84:	48 8b 97 10 01 00 00 	mov    0x110(%rdi),%rdx
    7c8b:	48 89 c8             	mov    %rcx,%rax
    7c8e:	48 29 d0             	sub    %rdx,%rax
	if (__new_size > size())
    7c91:	48 83 f8 08          	cmp    $0x8,%rax
    7c95:	0f 86 95 01 00 00    	jbe    7e30 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x1c0>
	else if (__new_size < size())
    7c9b:	48 83 f8 10          	cmp    $0x10,%rax
    7c9f:	76 10                	jbe    7cb1 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x41>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    7ca1:	48 83 c2 10          	add    $0x10,%rdx
	if (size_type __n = this->_M_impl._M_finish - __pos)
    7ca5:	48 39 d1             	cmp    %rdx,%rcx
    7ca8:	74 07                	je     7cb1 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x41>
	    this->_M_impl._M_finish = __pos;
    7caa:	48 89 97 18 01 00 00 	mov    %rdx,0x118(%rdi)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7cb1:	48 8b 8b 30 01 00 00 	mov    0x130(%rbx),%rcx
    7cb8:	48 8b 93 28 01 00 00 	mov    0x128(%rbx),%rdx
    7cbf:	48 89 c8             	mov    %rcx,%rax
    7cc2:	48 29 d0             	sub    %rdx,%rax
	if (__new_size > size())
    7cc5:	48 83 f8 08          	cmp    $0x8,%rax
    7cc9:	0f 86 41 01 00 00    	jbe    7e10 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x1a0>
	else if (__new_size < size())
    7ccf:	48 83 f8 10          	cmp    $0x10,%rax
    7cd3:	76 10                	jbe    7ce5 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x75>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    7cd5:	48 83 c2 10          	add    $0x10,%rdx
	if (size_type __n = this->_M_impl._M_finish - __pos)
    7cd9:	48 39 d1             	cmp    %rdx,%rcx
    7cdc:	74 07                	je     7ce5 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x75>
	    this->_M_impl._M_finish = __pos;
    7cde:	48 89 93 30 01 00 00 	mov    %rdx,0x130(%rbx)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7ce5:	48 8b 8b 48 01 00 00 	mov    0x148(%rbx),%rcx
    7cec:	48 8b 93 40 01 00 00 	mov    0x140(%rbx),%rdx
    7cf3:	48 89 c8             	mov    %rcx,%rax
    7cf6:	48 29 d0             	sub    %rdx,%rax
	if (__new_size > size())
    7cf9:	48 83 f8 08          	cmp    $0x8,%rax
    7cfd:	0f 86 ed 00 00 00    	jbe    7df0 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x180>
	else if (__new_size < size())
    7d03:	48 83 f8 10          	cmp    $0x10,%rax
    7d07:	0f 87 c3 00 00 00    	ja     7dd0 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x160>
  VkSemaphoreCreateInfo semaphoreInfo{};
    7d0d:	66 0f ef c0          	pxor   %xmm0,%xmm0
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
    7d11:	c7 04 24 09 00 00 00 	movl   $0x9,(%rsp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
    7d18:	31 ed                	xor    %ebp,%ebp
    7d1a:	49 89 e4             	mov    %rsp,%r12
  VkFenceCreateInfo fenceInfo{};
    7d1d:	0f 11 44 24 24       	movups %xmm0,0x24(%rsp)
        vkCreateFence(device, &fenceInfo, nullptr, &inFlightFences[i]) !=
    7d22:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
  VkSemaphoreCreateInfo semaphoreInfo{};
    7d27:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
    7d2e:	00 
  VkFenceCreateInfo fenceInfo{};
    7d2f:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%rsp)
    7d36:	00 
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
    7d37:	c7 44 24 20 08 00 00 	movl   $0x8,0x20(%rsp)
    7d3e:	00 
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
    7d3f:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
    7d46:	00 
  VkSemaphoreCreateInfo semaphoreInfo{};
    7d47:	0f 11 44 24 04       	movups %xmm0,0x4(%rsp)
	return *(this->_M_impl._M_start + __n);
    7d4c:	48 8b 8b 10 01 00 00 	mov    0x110(%rbx),%rcx
    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    7d53:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    7d57:	31 d2                	xor    %edx,%edx
    7d59:	4c 89 e6             	mov    %r12,%rsi
    7d5c:	48 01 e9             	add    %rbp,%rcx
    7d5f:	e8 1c b8 ff ff       	call   3580 <vkCreateSemaphore@plt>
                          &renderFinishedSemaphores[i]) != VK_SUCCESS ||
    7d64:	85 c0                	test   %eax,%eax
    7d66:	0f 85 6c c3 ff ff    	jne    40d8 <_ZN4rtvc17RenderApplication17createSyncObjectsEv.cold>
    7d6c:	48 8b 8b 28 01 00 00 	mov    0x128(%rbx),%rcx
        vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    7d73:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    7d77:	31 d2                	xor    %edx,%edx
    7d79:	4c 89 e6             	mov    %r12,%rsi
    7d7c:	48 01 e9             	add    %rbp,%rcx
    7d7f:	e8 fc b7 ff ff       	call   3580 <vkCreateSemaphore@plt>
                          &imageAvailableSemaphores[i]) != VK_SUCCESS ||
    7d84:	85 c0                	test   %eax,%eax
    7d86:	0f 85 4c c3 ff ff    	jne    40d8 <_ZN4rtvc17RenderApplication17createSyncObjectsEv.cold>
    7d8c:	48 8b 8b 40 01 00 00 	mov    0x140(%rbx),%rcx
        vkCreateFence(device, &fenceInfo, nullptr, &inFlightFences[i]) !=
    7d93:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    7d97:	31 d2                	xor    %edx,%edx
    7d99:	4c 89 ee             	mov    %r13,%rsi
    7d9c:	48 01 e9             	add    %rbp,%rcx
    7d9f:	e8 fc b6 ff ff       	call   34a0 <vkCreateFence@plt>
                          &renderFinishedSemaphores[i]) != VK_SUCCESS ||
    7da4:	85 c0                	test   %eax,%eax
    7da6:	0f 85 2c c3 ff ff    	jne    40d8 <_ZN4rtvc17RenderApplication17createSyncObjectsEv.cold>
  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    7dac:	48 83 fd 08          	cmp    $0x8,%rbp
    7db0:	74 0e                	je     7dc0 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x150>
    7db2:	bd 08 00 00 00       	mov    $0x8,%ebp
    7db7:	eb 93                	jmp    7d4c <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0xdc>
    7db9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
}
    7dc0:	48 83 c4 48          	add    $0x48,%rsp
    7dc4:	5b                   	pop    %rbx
    7dc5:	5d                   	pop    %rbp
    7dc6:	41 5c                	pop    %r12
    7dc8:	41 5d                	pop    %r13
    7dca:	c3                   	ret
    7dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    7dd0:	48 83 c2 10          	add    $0x10,%rdx
	if (size_type __n = this->_M_impl._M_finish - __pos)
    7dd4:	48 39 d1             	cmp    %rdx,%rcx
    7dd7:	0f 84 30 ff ff ff    	je     7d0d <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x9d>
	    this->_M_impl._M_finish = __pos;
    7ddd:	48 89 93 48 01 00 00 	mov    %rdx,0x148(%rbx)
    7de4:	e9 24 ff ff ff       	jmp    7d0d <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x9d>
    7de9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7df0:	48 c1 f8 03          	sar    $0x3,%rax
	  _M_default_append(__new_size - size());
    7df4:	be 02 00 00 00       	mov    $0x2,%esi
  inFlightFences.resize(max_frames_in_flight);
    7df9:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    7e00:	48 29 c6             	sub    %rax,%rsi
    7e03:	e8 f8 1b 00 00       	call   9a00 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
    7e08:	e9 00 ff ff ff       	jmp    7d0d <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x9d>
    7e0d:	0f 1f 00             	nopl   (%rax)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7e10:	48 c1 f8 03          	sar    $0x3,%rax
	  _M_default_append(__new_size - size());
    7e14:	be 02 00 00 00       	mov    $0x2,%esi
  renderFinishedSemaphores.resize(max_frames_in_flight);
    7e19:	48 8d bb 28 01 00 00 	lea    0x128(%rbx),%rdi
    7e20:	48 29 c6             	sub    %rax,%rsi
    7e23:	e8 f8 19 00 00       	call   9820 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
    7e28:	e9 b8 fe ff ff       	jmp    7ce5 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x75>
    7e2d:	0f 1f 00             	nopl   (%rax)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7e30:	48 c1 f8 03          	sar    $0x3,%rax
	  _M_default_append(__new_size - size());
    7e34:	be 02 00 00 00       	mov    $0x2,%esi
  imageAvailableSemaphores.resize(max_frames_in_flight);
    7e39:	48 8d bf 10 01 00 00 	lea    0x110(%rdi),%rdi
    7e40:	48 29 c6             	sub    %rax,%rsi
    7e43:	e8 d8 19 00 00       	call   9820 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
    7e48:	e9 64 fe ff ff       	jmp    7cb1 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x41>
    7e4d:	90                   	nop
    7e4e:	66 90                	xchg   %ax,%ax

0000000000007e50 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:
    VkPhysicalDevice device) {
    7e50:	41 57                	push   %r15
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    7e52:	31 c9                	xor    %ecx,%ecx
    VkPhysicalDevice device) {
    7e54:	41 56                	push   %r14
    7e56:	41 55                	push   %r13
    7e58:	41 54                	push   %r12
    7e5a:	55                   	push   %rbp
    7e5b:	48 89 f5             	mov    %rsi,%rbp
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    7e5e:	31 f6                	xor    %esi,%esi
    VkPhysicalDevice device) {
    7e60:	53                   	push   %rbx
    7e61:	48 89 fb             	mov    %rdi,%rbx
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    7e64:	48 89 ef             	mov    %rbp,%rdi
    VkPhysicalDevice device) {
    7e67:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    7e6e:	4c 8d 64 24 54       	lea    0x54(%rsp),%r12
    7e73:	4c 89 e2             	mov    %r12,%rdx
    7e76:	e8 f5 b6 ff ff       	call   3570 <vkEnumerateDeviceExtensionProperties@plt>
  std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    7e7b:	44 8b 7c 24 54       	mov    0x54(%rsp),%r15d
    7e80:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7e85:	4d 85 ff             	test   %r15,%r15
    7e88:	0f 84 72 05 00 00    	je     8400 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x5b0>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7e8e:	4d 89 fd             	mov    %r15,%r13
    7e91:	49 c1 e5 06          	shl    $0x6,%r13
    7e95:	4d 01 fd             	add    %r15,%r13
    7e98:	49 c1 e5 02          	shl    $0x2,%r13
    7e9c:	4c 89 ef             	mov    %r13,%rdi
    7e9f:	e8 cc b4 ff ff       	call   3370 <_Znwm@plt>
    7ea4:	48 8d 78 08          	lea    0x8(%rax),%rdi
    7ea8:	48 89 c1             	mov    %rax,%rcx
    7eab:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    7eb0:	48 89 c6             	mov    %rax,%rsi
    7eb3:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    7eb7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7ebe:	48 8d 90 0c 01 00 00 	lea    0x10c(%rax),%rdx
    7ec5:	31 c0                	xor    %eax,%eax
    7ec7:	48 29 f9             	sub    %rdi,%rcx
    7eca:	48 c7 42 f0 00 00 00 	movq   $0x0,-0x10(%rdx)
    7ed1:	00 
    7ed2:	81 c1 04 01 00 00    	add    $0x104,%ecx
    7ed8:	c1 e9 03             	shr    $0x3,%ecx
    7edb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7ede:	48 8d 8e 04 01 00 00 	lea    0x104(%rsi),%rcx
    7ee5:	48 89 f0             	mov    %rsi,%rax
    7ee8:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
      if (__n <= 0)
    7eed:	49 83 ff 01          	cmp    $0x1,%r15
    7ef1:	0f 84 41 06 00 00    	je     8538 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x6e8>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7ef7:	4c 01 e8             	add    %r13,%rax
      for (; __first != __last; ++__first)
    7efa:	48 39 c1             	cmp    %rax,%rcx
    7efd:	74 4e                	je     7f4d <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0xfd>
    7eff:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    7f04:	49 89 c8             	mov    %rcx,%r8
    7f07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7f0e:	00 00 
	*__first = __value;
    7f10:	49 8b 09             	mov    (%r9),%rcx
    7f13:	49 8d 78 08          	lea    0x8(%r8),%rdi
    7f17:	4c 89 ce             	mov    %r9,%rsi
    7f1a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    7f1e:	49 89 08             	mov    %rcx,(%r8)
    7f21:	48 8b 4a f0          	mov    -0x10(%rdx),%rcx
    7f25:	49 89 88 fc 00 00 00 	mov    %rcx,0xfc(%r8)
    7f2c:	4c 89 c1             	mov    %r8,%rcx
      for (; __first != __last; ++__first)
    7f2f:	49 81 c0 04 01 00 00 	add    $0x104,%r8
	*__first = __value;
    7f36:	48 29 f9             	sub    %rdi,%rcx
    7f39:	48 29 ce             	sub    %rcx,%rsi
    7f3c:	81 c1 04 01 00 00    	add    $0x104,%ecx
    7f42:	c1 e9 03             	shr    $0x3,%ecx
    7f45:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    7f48:	49 39 c0             	cmp    %rax,%r8
    7f4b:	75 c3                	jne    7f10 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0xc0>
    7f4d:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
    7f52:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    7f57:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    7f5c:	4c 89 e2             	mov    %r12,%rdx
    7f5f:	31 f6                	xor    %esi,%esi
    7f61:	48 89 ef             	mov    %rbp,%rdi
    7f64:	e8 07 b6 ff ff       	call   3570 <vkEnumerateDeviceExtensionProperties@plt>
    7f69:	48 8b 53 68          	mov    0x68(%rbx),%rdx
    7f6d:	48 8b 43 60          	mov    0x60(%rbx),%rax
      _M_header._M_left = &_M_header;
    7f71:	48 8d 8c 24 88 00 00 	lea    0x88(%rsp),%rcx
    7f78:	00 
      _M_header._M_color = _S_red;
    7f79:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
    7f80:	00 00 00 00 
      _M_header._M_parent = 0;
    7f84:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    7f8b:	00 00 00 00 00 
    7f90:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
      _M_header._M_left = &_M_header;
    7f95:	48 89 0c 24          	mov    %rcx,(%rsp)
    7f99:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
    7fa0:	00 
      _M_header._M_right = &_M_header;
    7fa1:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
    7fa8:	00 
      _M_node_count = 0;
    7fa9:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
    7fb0:	00 00 00 00 00 
	  for (; __first != __last; ++__first)
    7fb5:	48 39 d0             	cmp    %rdx,%rax
    7fb8:	0f 84 b5 04 00 00    	je     8473 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x623>
    7fbe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
	    _M_data(_M_create(__dnew, size_type(0)));
    7fc3:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    7fc8:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    7fcd:	0f 1f 00             	nopl   (%rax)
    7fd0:	bf 40 00 00 00       	mov    $0x40,%edi
    7fd5:	e8 96 b3 ff ff       	call   3370 <_Znwm@plt>
    7fda:	48 89 c3             	mov    %rax,%rbx
    7fdd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
    7fe2:	4c 8d 7b 20          	lea    0x20(%rbx),%r15
    7fe6:	4c 8b 30             	mov    (%rax),%r14
    7fe9:	48 8d 43 30          	lea    0x30(%rbx),%rax
    7fed:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
	: allocator_type(__a), _M_p(__dat) { }
    7ff2:	48 89 43 20          	mov    %rax,0x20(%rbx)
	if (__s == 0)
    7ff6:	4d 85 f6             	test   %r14,%r14
    7ff9:	0f 84 92 05 00 00    	je     8591 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x741>
	return __builtin_strlen(__s);
    7fff:	4c 89 f7             	mov    %r14,%rdi
    8002:	e8 39 b1 ff ff       	call   3140 <strlen@plt>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    8007:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    800c:	48 89 c5             	mov    %rax,%rbp
	if (__dnew > size_type(_S_local_capacity))
    800f:	48 83 f8 0f          	cmp    $0xf,%rax
    8013:	0f 87 af 03 00 00    	ja     83c8 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x578>
	if (__n == 1)
    8019:	48 83 f8 01          	cmp    $0x1,%rax
    801d:	0f 84 95 03 00 00    	je     83b8 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x568>
	if (__n == 0)
    8023:	48 85 c0             	test   %rax,%rax
    8026:	0f 85 b3 04 00 00    	jne    84df <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x68f>
      { return _M_dataplus._M_p; }
    802c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
      { _M_string_length = __length; }
    8031:	48 89 43 28          	mov    %rax,0x28(%rbx)
	__c1 = __c2;
    8035:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    8039:	4c 8b b4 24 90 00 00 	mov    0x90(%rsp),%r14
    8040:	00 
      while (__x != 0)
    8041:	4d 85 f6             	test   %r14,%r14
    8044:	0f 84 66 04 00 00    	je     84b0 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x660>
    804a:	48 8b 6b 20          	mov    0x20(%rbx),%rbp
    804e:	4c 8b 6b 28          	mov    0x28(%rbx),%r13
    8052:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    8057:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    805c:	eb 13                	jmp    8071 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x221>
    805e:	66 90                	xchg   %ax,%ax
      { return static_cast<_Link_type>(__x->_M_left); }
    8060:	49 8b 46 10          	mov    0x10(%r14),%rax
    8064:	be 01 00 00 00       	mov    $0x1,%esi
      while (__x != 0)
    8069:	48 85 c0             	test   %rax,%rax
    806c:	74 5a                	je     80c8 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x278>
    806e:	49 89 c6             	mov    %rax,%r14
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    8071:	4d 8b 7e 28          	mov    0x28(%r14),%r15
      compare(const basic_string& __str) const
    8075:	49 8b 5e 20          	mov    0x20(%r14),%rbx
    8079:	4d 39 fd             	cmp    %r15,%r13
    807c:	4d 89 fc             	mov    %r15,%r12
    807f:	4d 0f 46 e5          	cmovbe %r13,%r12
	if (__n == 0)
    8083:	4d 85 e4             	test   %r12,%r12
    8086:	74 12                	je     809a <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x24a>
	return __builtin_memcmp(__s1, __s2, __n);
    8088:	4c 89 e2             	mov    %r12,%rdx
    808b:	48 89 de             	mov    %rbx,%rsi
    808e:	48 89 ef             	mov    %rbp,%rdi
    8091:	e8 ba b0 ff ff       	call   3150 <memcmp@plt>
	if (!__r)
    8096:	85 c0                	test   %eax,%eax
    8098:	75 1f                	jne    80b9 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x269>
	const difference_type __d = difference_type(__n1 - __n2);
    809a:	4c 89 e8             	mov    %r13,%rax
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    809d:	b9 00 00 00 80       	mov    $0x80000000,%ecx
	const difference_type __d = difference_type(__n1 - __n2);
    80a2:	4c 29 f8             	sub    %r15,%rax
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    80a5:	48 39 c8             	cmp    %rcx,%rax
    80a8:	7d 13                	jge    80bd <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x26d>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    80aa:	48 b9 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rcx
    80b1:	ff ff ff 
    80b4:	48 39 c8             	cmp    %rcx,%rax
    80b7:	7e a7                	jle    8060 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x210>
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    80b9:	85 c0                	test   %eax,%eax
    80bb:	78 a3                	js     8060 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x210>
      { return static_cast<_Link_type>(__x->_M_right); }
    80bd:	49 8b 46 18          	mov    0x18(%r14),%rax
    80c1:	31 f6                	xor    %esi,%esi
      while (__x != 0)
    80c3:	48 85 c0             	test   %rax,%rax
    80c6:	75 a6                	jne    806e <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x21e>
      if (__comp)
    80c8:	48 89 dd             	mov    %rbx,%rbp
    80cb:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    80d0:	40 84 f6             	test   %sil,%sil
    80d3:	0f 85 57 02 00 00    	jne    8330 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x4e0>
	if (__n == 0)
    80d9:	4d 85 e4             	test   %r12,%r12
    80dc:	74 14                	je     80f2 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2a2>
	return __builtin_memcmp(__s1, __s2, __n);
    80de:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    80e3:	4c 89 e2             	mov    %r12,%rdx
    80e6:	48 89 ef             	mov    %rbp,%rdi
    80e9:	e8 62 b0 ff ff       	call   3150 <memcmp@plt>
	if (!__r)
    80ee:	85 c0                	test   %eax,%eax
    80f0:	75 23                	jne    8115 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2c5>
	const difference_type __d = difference_type(__n1 - __n2);
    80f2:	4d 29 ef             	sub    %r13,%r15
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    80f5:	b8 00 00 00 80       	mov    $0x80000000,%eax
    80fa:	49 39 c7             	cmp    %rax,%r15
    80fd:	7d 1e                	jge    811d <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2cd>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    80ff:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    8106:	ff ff ff 
    8109:	49 39 c7             	cmp    %rax,%r15
    810c:	0f 8e ee 01 00 00    	jle    8300 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x4b0>
	  return int(__d);
    8112:	44 89 f8             	mov    %r15d,%eax
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    8115:	85 c0                	test   %eax,%eax
    8117:	0f 88 e3 01 00 00    	js     8300 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x4b0>
	if (!_M_is_local())
    811d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    8122:	48 39 54 24 10       	cmp    %rdx,0x10(%rsp)
    8127:	74 12                	je     813b <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2eb>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    8129:	48 8b 43 30          	mov    0x30(%rbx),%rax
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    812d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    8132:	48 8d 70 01          	lea    0x1(%rax),%rsi
    8136:	e8 55 b2 ff ff       	call   3390 <_ZdlPvm@plt>
    813b:	be 40 00 00 00       	mov    $0x40,%esi
    8140:	48 89 df             	mov    %rbx,%rdi
    8143:	e8 48 b2 ff ff       	call   3390 <_ZdlPvm@plt>
	  for (; __first != __last; ++__first)
    8148:	48 83 44 24 08 08    	addq   $0x8,0x8(%rsp)
    814e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8153:	48 39 44 24 30       	cmp    %rax,0x30(%rsp)
    8158:	0f 85 72 fe ff ff    	jne    7fd0 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x180>
  for (const auto &extension : availableExtensions)
    815e:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    8163:	48 39 54 24 28       	cmp    %rdx,0x28(%rsp)
    8168:	0f 84 f4 03 00 00    	je     8562 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x712>
	if (__s == 0)
    816e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
	: allocator_type(__a), _M_p(__dat) { }
    8173:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
    8178:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
	if (__s == 0)
    817d:	48 85 c0             	test   %rax,%rax
    8180:	0f 84 ff 03 00 00    	je     8585 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x735>
    8186:	49 89 c5             	mov    %rax,%r13
    8189:	4c 8d 7c 24 60       	lea    0x60(%rsp),%r15
    818e:	66 90                	xchg   %ax,%ax
	return __builtin_strlen(__s);
    8190:	4c 89 ef             	mov    %r13,%rdi
    8193:	e8 a8 af ff ff       	call   3140 <strlen@plt>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    8198:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    819d:	48 89 c3             	mov    %rax,%rbx
	if (__dnew > size_type(_S_local_capacity))
    81a0:	48 83 f8 0f          	cmp    $0xf,%rax
    81a4:	0f 87 ce 01 00 00    	ja     8378 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x528>
	if (__n == 1)
    81aa:	48 83 f8 01          	cmp    $0x1,%rax
    81ae:	0f 84 ac 01 00 00    	je     8360 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x510>
	if (__n == 0)
    81b4:	4c 89 f2             	mov    %r14,%rdx
    81b7:	48 85 c0             	test   %rax,%rax
    81ba:	0f 85 17 03 00 00    	jne    84d7 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x687>
      { _M_string_length = __length; }
    81c0:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
    81c5:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
    81cc:	00 
    81cd:	4c 89 fe             	mov    %r15,%rsi
	__c1 = __c2;
    81d0:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    81d4:	e8 07 1a 00 00       	call   9be0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>
    81d9:	48 89 d5             	mov    %rdx,%rbp
      : _M_node(__it._M_node) { }
    81dc:	49 89 c4             	mov    %rax,%r12
      if (__first == begin() && __last == end())
    81df:	48 39 84 24 98 00 00 	cmp    %rax,0x98(%rsp)
    81e6:	00 
    81e7:	75 0a                	jne    81f3 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x3a3>
    81e9:	48 39 14 24          	cmp    %rdx,(%rsp)
    81ed:	0f 84 07 03 00 00    	je     84fa <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x6aa>
	while (__first != __last)
    81f3:	48 39 c5             	cmp    %rax,%rbp
    81f6:	75 0b                	jne    8203 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x3b3>
    81f8:	eb 58                	jmp    8252 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x402>
    81fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	_M_node = _Rb_tree_increment(_M_node);
    8200:	49 89 dc             	mov    %rbx,%r12
    8203:	4c 89 e7             	mov    %r12,%rdi
    8206:	e8 55 b2 ff ff       	call   3460 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
				(const_cast<_Base_ptr>(__position._M_node),
    820b:	48 8b 34 24          	mov    (%rsp),%rsi
    820f:	4c 89 e7             	mov    %r12,%rdi
	_M_node = _Rb_tree_increment(_M_node);
    8212:	48 89 c3             	mov    %rax,%rbx
				(const_cast<_Base_ptr>(__position._M_node),
    8215:	e8 e6 af ff ff       	call   3200 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>
      { return _M_dataplus._M_p; }
    821a:	48 8b 78 20          	mov    0x20(%rax),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    821e:	48 8d 50 30          	lea    0x30(%rax),%rdx
    8222:	49 89 c4             	mov    %rax,%r12
	if (!_M_is_local())
    8225:	48 39 d7             	cmp    %rdx,%rdi
    8228:	74 0d                	je     8237 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x3e7>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    822a:	48 8b 40 30          	mov    0x30(%rax),%rax
    822e:	48 8d 70 01          	lea    0x1(%rax),%rsi
    8232:	e8 59 b1 ff ff       	call   3390 <_ZdlPvm@plt>
    8237:	be 40 00 00 00       	mov    $0x40,%esi
    823c:	4c 89 e7             	mov    %r12,%rdi
    823f:	e8 4c b1 ff ff       	call   3390 <_ZdlPvm@plt>
      --_M_impl._M_node_count;
    8244:	48 83 ac 24 a8 00 00 	subq   $0x1,0xa8(%rsp)
    824b:	00 01 
	while (__first != __last)
    824d:	48 39 dd             	cmp    %rbx,%rbp
    8250:	75 ae                	jne    8200 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x3b0>
      { return _M_dataplus._M_p; }
    8252:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
	if (!_M_is_local())
    8257:	4c 39 f7             	cmp    %r14,%rdi
    825a:	74 2c                	je     8288 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x438>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    825c:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    8261:	49 81 c5 04 01 00 00 	add    $0x104,%r13
    8268:	48 8d 70 01          	lea    0x1(%rax),%rsi
    826c:	e8 1f b1 ff ff       	call   3390 <_ZdlPvm@plt>
    8271:	4c 39 6c 24 28       	cmp    %r13,0x28(%rsp)
    8276:	74 1e                	je     8296 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x446>
	: allocator_type(__a), _M_p(__dat) { }
    8278:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
    827d:	e9 0e ff ff ff       	jmp    8190 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x340>
    8282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8288:	49 81 c5 04 01 00 00 	add    $0x104,%r13
    828f:	4c 39 6c 24 28       	cmp    %r13,0x28(%rsp)
    8294:	75 e2                	jne    8278 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x428>
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    8296:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
    829d:	00 
      { return _M_impl._M_node_count == 0; }
    829e:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
    82a5:	00 00 
    82a7:	41 0f 94 c4          	sete   %r12b
      while (__x != 0)
    82ab:	48 85 db             	test   %rbx,%rbx
    82ae:	0f 84 35 02 00 00    	je     84e9 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x699>
	  _M_erase(_S_right(__x));
    82b4:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    82b8:	e8 33 ca ff ff       	call   4cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0>
      { return _M_dataplus._M_p; }
    82bd:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    82c1:	48 8d 43 30          	lea    0x30(%rbx),%rax
      { return static_cast<_Link_type>(__x->_M_left); }
    82c5:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
	if (!_M_is_local())
    82c9:	48 39 c7             	cmp    %rax,%rdi
    82cc:	74 0d                	je     82db <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x48b>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    82ce:	48 8b 43 30          	mov    0x30(%rbx),%rax
    82d2:	48 8d 70 01          	lea    0x1(%rax),%rsi
    82d6:	e8 b5 b0 ff ff       	call   3390 <_ZdlPvm@plt>
    82db:	be 40 00 00 00       	mov    $0x40,%esi
    82e0:	48 89 df             	mov    %rbx,%rdi
    82e3:	e8 a8 b0 ff ff       	call   3390 <_ZdlPvm@plt>
      while (__x != 0)
    82e8:	48 85 ed             	test   %rbp,%rbp
    82eb:	0f 84 9f 01 00 00    	je     8490 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x640>
	  __x = __y;
    82f1:	48 89 eb             	mov    %rbp,%rbx
    82f4:	eb be                	jmp    82b4 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x464>
    82f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    82fd:	00 00 00 
      bool __insert_left = (__x != 0 || __p == _M_end()
    8300:	48 8b 04 24          	mov    (%rsp),%rax
    8304:	bf 01 00 00 00       	mov    $0x1,%edi
    8309:	49 39 c6             	cmp    %rax,%r14
    830c:	0f 85 0e 01 00 00    	jne    8420 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x5d0>
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    8312:	48 8b 0c 24          	mov    (%rsp),%rcx
    8316:	4c 89 f2             	mov    %r14,%rdx
    8319:	48 89 de             	mov    %rbx,%rsi
    831c:	e8 3f ad ff ff       	call   3060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    8321:	48 83 84 24 a8 00 00 	addq   $0x1,0xa8(%rsp)
    8328:	00 01 
	~_Auto_node()
    832a:	e9 19 fe ff ff       	jmp    8148 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2f8>
    832f:	90                   	nop
	  if (__j == begin())
    8330:	4c 3b b4 24 98 00 00 	cmp    0x98(%rsp),%r14
    8337:	00 
    8338:	74 c6                	je     8300 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x4b0>
	_M_node = _Rb_tree_decrement(_M_node);
    833a:	4c 89 f7             	mov    %r14,%rdi
    833d:	e8 9e b0 ff ff       	call   33e0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    8342:	4c 8b 78 28          	mov    0x28(%rax),%r15
    8346:	48 8b 68 20          	mov    0x20(%rax),%rbp
    834a:	4d 39 fd             	cmp    %r15,%r13
    834d:	4d 89 fc             	mov    %r15,%r12
    8350:	4d 0f 46 e5          	cmovbe %r13,%r12
	return *this;
    8354:	e9 80 fd ff ff       	jmp    80d9 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x289>
    8359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8360:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
    8365:	88 54 24 70          	mov    %dl,0x70(%rsp)
      { return _M_dataplus._M_p; }
    8369:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
      }
    836e:	e9 4d fe ff ff       	jmp    81c0 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x370>
    8373:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	    _M_data(_M_create(__dnew, size_type(0)));
    8378:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
    837d:	31 d2                	xor    %edx,%edx
    837f:	4c 89 ff             	mov    %r15,%rdi
    8382:	e8 99 b3 ff ff       	call   3720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
    8387:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    838c:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
    838f:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    8394:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    8399:	48 89 da             	mov    %rbx,%rdx
    839c:	4c 89 ee             	mov    %r13,%rsi
    839f:	e8 dc ae ff ff       	call   3280 <memcpy@plt>

	this->_S_copy_chars(_M_data(), __beg, __end);

	__guard._M_guarded = 0;

	_M_set_length(__dnew);
    83a4:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
      { return _M_dataplus._M_p; }
    83a9:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    83ae:	e9 0d fe ff ff       	jmp    81c0 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x370>
    83b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	__c1 = __c2;
    83b8:	41 0f b6 16          	movzbl (%r14),%edx
    83bc:	88 53 30             	mov    %dl,0x30(%rbx)
      }
    83bf:	e9 68 fc ff ff       	jmp    802c <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x1dc>
    83c4:	0f 1f 40 00          	nopl   0x0(%rax)
	    _M_data(_M_create(__dnew, size_type(0)));
    83c8:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    83cd:	31 d2                	xor    %edx,%edx
    83cf:	4c 89 ff             	mov    %r15,%rdi
    83d2:	e8 49 b3 ff ff       	call   3720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
      { _M_dataplus._M_p = __p; }
    83d7:	48 89 43 20          	mov    %rax,0x20(%rbx)
    83db:	48 89 c7             	mov    %rax,%rdi
      { _M_allocated_capacity = __capacity; }
    83de:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    83e3:	48 89 43 30          	mov    %rax,0x30(%rbx)
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    83e7:	48 89 ea             	mov    %rbp,%rdx
    83ea:	4c 89 f6             	mov    %r14,%rsi
    83ed:	e8 8e ae ff ff       	call   3280 <memcpy@plt>
	_M_set_length(__dnew);
    83f2:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
      { return _M_dataplus._M_p; }
    83f7:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    83fb:	e9 31 fc ff ff       	jmp    8031 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x1e1>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8400:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    8407:	00 00 
    8409:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    8410:	00 00 
    8412:	e9 40 fb ff ff       	jmp    7f57 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x107>
    8417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    841e:	00 00 
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    8420:	4d 8b 7e 28          	mov    0x28(%r14),%r15
      compare(const basic_string& __str) const
    8424:	4d 39 fd             	cmp    %r15,%r13
    8427:	4c 89 fa             	mov    %r15,%rdx
    842a:	49 0f 46 d5          	cmovbe %r13,%rdx
	if (__n == 0)
    842e:	48 85 d2             	test   %rdx,%rdx
    8431:	74 14                	je     8447 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x5f7>
	return __builtin_memcmp(__s1, __s2, __n);
    8433:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    8438:	49 8b 76 20          	mov    0x20(%r14),%rsi
    843c:	e8 0f ad ff ff       	call   3150 <memcmp@plt>
    8441:	89 c7                	mov    %eax,%edi
	if (!__r)
    8443:	85 c0                	test   %eax,%eax
    8445:	75 24                	jne    846b <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x61b>
	const difference_type __d = difference_type(__n1 - __n2);
    8447:	4c 89 e9             	mov    %r13,%rcx
    844a:	31 ff                	xor    %edi,%edi
    844c:	4c 29 f9             	sub    %r15,%rcx
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    844f:	48 81 f9 ff ff ff 7f 	cmp    $0x7fffffff,%rcx
    8456:	0f 8f b6 fe ff ff    	jg     8312 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x4c2>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    845c:	48 81 f9 00 00 00 80 	cmp    $0xffffffff80000000,%rcx
    8463:	0f 8c ef 00 00 00    	jl     8558 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x708>
	  return int(__d);
    8469:	89 cf                	mov    %ecx,%edi
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    846b:	c1 ef 1f             	shr    $0x1f,%edi
    846e:	e9 9f fe ff ff       	jmp    8312 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x4c2>
    8473:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
      { return _M_impl._M_node_count == 0; }
    8478:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    847e:	48 39 54 24 28       	cmp    %rdx,0x28(%rsp)
    8483:	0f 85 e5 fc ff ff    	jne    816e <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x31e>
    8489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	if (__p)
    8490:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
    8496:	75 51                	jne    84e9 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x699>
}
    8498:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    849f:	44 89 e0             	mov    %r12d,%eax
    84a2:	5b                   	pop    %rbx
    84a3:	5d                   	pop    %rbp
    84a4:	41 5c                	pop    %r12
    84a6:	41 5d                	pop    %r13
    84a8:	41 5e                	pop    %r14
    84aa:	41 5f                	pop    %r15
    84ac:	c3                   	ret
    84ad:	0f 1f 00             	nopl   (%rax)
	  if (__j == begin())
    84b0:	48 8b 04 24          	mov    (%rsp),%rax
    84b4:	49 89 c6             	mov    %rax,%r14
    84b7:	48 39 84 24 98 00 00 	cmp    %rax,0x98(%rsp)
    84be:	00 
    84bf:	0f 84 93 00 00 00    	je     8558 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x708>
    84c5:	48 8b 43 20          	mov    0x20(%rbx),%rax
    84c9:	4c 8b 6b 28          	mov    0x28(%rbx),%r13
    84cd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    84d2:	e9 63 fe ff ff       	jmp    833a <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x4ea>
      { return _M_dataplus._M_p; }
    84d7:	4c 89 f7             	mov    %r14,%rdi
    84da:	e9 ba fe ff ff       	jmp    8399 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x549>
    84df:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    84e4:	e9 fe fe ff ff       	jmp    83e7 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x597>
    84e9:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    84ee:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    84f3:	e8 98 ae ff ff       	call   3390 <_ZdlPvm@plt>
  return requiredExtensions.empty();
    84f8:	eb 9e                	jmp    8498 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x648>
	_M_erase(_M_begin());
    84fa:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    8501:	00 
    8502:	e8 e9 c7 ff ff       	call   4cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E.isra.0>
      _M_header._M_left = &_M_header;
    8507:	48 8b 04 24          	mov    (%rsp),%rax
      _M_header._M_parent = 0;
    850b:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    8512:	00 00 00 00 00 
      _M_node_count = 0;
    8517:	48 c7 84 24 a8 00 00 	movq   $0x0,0xa8(%rsp)
    851e:	00 00 00 00 00 
      _M_header._M_left = &_M_header;
    8523:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    852a:	00 
      _M_header._M_right = &_M_header;
    852b:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
    8532:	00 
    }
    8533:	e9 1a fd ff ff       	jmp    8252 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x402>
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    8538:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    853d:	4c 89 e2             	mov    %r12,%rdx
    8540:	31 f6                	xor    %esi,%esi
    8542:	48 89 ef             	mov    %rbp,%rdi
    8545:	e8 26 b0 ff ff       	call   3570 <vkEnumerateDeviceExtensionProperties@plt>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    854a:	48 c7 44 24 48 04 01 	movq   $0x104,0x48(%rsp)
    8551:	00 00 
    8553:	e9 11 fa ff ff       	jmp    7f69 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x119>
	  if (__j == begin())
    8558:	bf 01 00 00 00       	mov    $0x1,%edi
    855d:	e9 b0 fd ff ff       	jmp    8312 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x4c2>
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    8562:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
    8569:	00 
      { return _M_impl._M_node_count == 0; }
    856a:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
    8571:	00 00 
    8573:	41 0f 94 c4          	sete   %r12b
      while (__x != 0)
    8577:	48 85 db             	test   %rbx,%rbx
    857a:	0f 85 34 fd ff ff    	jne    82b4 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x464>
    8580:	e9 0b ff ff ff       	jmp    8490 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x640>
	  std::__throw_logic_error(__N("basic_string: "
    8585:	48 8d 3d 84 1e 00 00 	lea    0x1e84(%rip),%rdi        # a410 <_IO_stdin_used+0x410>
    858c:	e8 9f ac ff ff       	call   3230 <_ZSt19__throw_logic_errorPKc@plt>
    8591:	48 8d 3d 78 1e 00 00 	lea    0x1e78(%rip),%rdi        # a410 <_IO_stdin_used+0x410>
    8598:	e8 93 ac ff ff       	call   3230 <_ZSt19__throw_logic_errorPKc@plt>
      { _M_erase(_M_begin()); }
    859d:	48 89 c3             	mov    %rax,%rbx
    85a0:	e9 79 bb ff ff       	jmp    411e <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold>
	  __catch(...)
    85a5:	48 89 c7             	mov    %rax,%rdi
    85a8:	e9 95 bb ff ff       	jmp    4142 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold+0x24>
      { _M_erase(_M_begin()); }
    85ad:	48 89 c3             	mov    %rax,%rbx
    85b0:	e9 ac bb ff ff       	jmp    4161 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold+0x43>
    85b5:	48 89 c3             	mov    %rax,%rbx
    85b8:	e9 b1 bb ff ff       	jmp    416e <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold+0x50>
    85bd:	48 89 c3             	mov    %rax,%rbx
    85c0:	e9 b8 bb ff ff       	jmp    417d <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold+0x5f>
    85c5:	48 89 c3             	mov    %rax,%rbx
    85c8:	e9 b7 bb ff ff       	jmp    4184 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T.cold+0x66>
    85cd:	90                   	nop
    85ce:	66 90                	xchg   %ax,%ax

00000000000085d0 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>:
bool rtvc::RenderApplication::isSuitableDevice(VkPhysicalDevice device) {
    85d0:	41 55                	push   %r13
  bool swapChainAdequate = false;
    85d2:	45 31 ed             	xor    %r13d,%r13d
bool rtvc::RenderApplication::isSuitableDevice(VkPhysicalDevice device) {
    85d5:	41 54                	push   %r12
    85d7:	55                   	push   %rbp
    85d8:	48 89 f5             	mov    %rsi,%rbp
    85db:	53                   	push   %rbx
    85dc:	48 89 fb             	mov    %rdi,%rbx
    85df:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  QueueFamilyIndices indices = findQueueFamilies(device);
    85e6:	e8 55 d2 ff ff       	call   5840 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
  bool extensionsSupported = checkDeviceExtensionSupport(device);
    85eb:	48 89 ee             	mov    %rbp,%rsi
    85ee:	48 89 df             	mov    %rbx,%rdi
  QueueFamilyIndices indices = findQueueFamilies(device);
    85f1:	48 89 04 24          	mov    %rax,(%rsp)
    85f5:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  bool extensionsSupported = checkDeviceExtensionSupport(device);
    85fa:	e8 51 f8 ff ff       	call   7e50 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    85ff:	41 89 c4             	mov    %eax,%r12d
  if (extensionsSupported) {
    8602:	84 c0                	test   %al,%al
    8604:	75 2a                	jne    8630 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0x60>
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    8606:	0f b6 44 24 04       	movzbl 0x4(%rsp),%eax
  struct QueueFamilyIndices {
    std::optional<uint32_t> graphicsFamily;
    std::optional<uint32_t> presentFamily;

    bool isComplete() {
      return graphicsFamily.has_value() && presentFamily.has_value();
    860b:	84 c0                	test   %al,%al
    860d:	74 0e                	je     861d <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0x4d>
    860f:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
  return indices.isComplete() && extensionsSupported && swapChainAdequate;
    8614:	45 21 e5             	and    %r12d,%r13d
    8617:	84 c0                	test   %al,%al
    8619:	41 0f 45 c5          	cmovne %r13d,%eax
}
    861d:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    8624:	5b                   	pop    %rbx
    8625:	5d                   	pop    %rbp
    8626:	41 5c                	pop    %r12
    8628:	41 5d                	pop    %r13
    862a:	c3                   	ret
    862b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    SwapChainSupportDetails swapChainSupport = querySwapChainSupport(device);
    8630:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    8635:	48 89 ea             	mov    %rbp,%rdx
    8638:	48 89 de             	mov    %rbx,%rsi
    863b:	e8 e0 da ff ff       	call   6120 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>
    8640:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    8645:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    swapChainAdequate = !swapChainSupport.formats.empty() &&
    864a:	48 3b 7c 24 50       	cmp    0x50(%rsp),%rdi
    864f:	74 09                	je     865a <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0x8a>
    8651:	48 39 44 24 68       	cmp    %rax,0x68(%rsp)
    8656:	41 0f 95 c5          	setne  %r13b
	if (__p)
    865a:	48 85 c0             	test   %rax,%rax
    865d:	74 15                	je     8674 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xa4>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    865f:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
    8664:	48 89 c7             	mov    %rax,%rdi
    8667:	48 29 c6             	sub    %rax,%rsi
    866a:	e8 21 ad ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    866f:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
	if (__p)
    8674:	48 85 ff             	test   %rdi,%rdi
    8677:	74 8d                	je     8606 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0x36>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8679:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    867e:	48 29 fe             	sub    %rdi,%rsi
    8681:	e8 0a ad ff ff       	call   3390 <_ZdlPvm@plt>
    8686:	e9 7b ff ff ff       	jmp    8606 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0x36>
    868b:	90                   	nop
    868c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008690 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv>:
void rtvc::RenderApplication::selectPhysicalDevice() {
    8690:	41 57                	push   %r15
  vkEnumeratePhysicalDevices(instance, &deviceCount, nullptr);
    8692:	31 d2                	xor    %edx,%edx
void rtvc::RenderApplication::selectPhysicalDevice() {
    8694:	41 56                	push   %r14
    8696:	41 55                	push   %r13
    8698:	49 89 fd             	mov    %rdi,%r13
    869b:	41 54                	push   %r12
    869d:	55                   	push   %rbp
    869e:	53                   	push   %rbx
    869f:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  vkEnumeratePhysicalDevices(instance, &deviceCount, nullptr);
    86a6:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    86aa:	48 8d 6c 24 1c       	lea    0x1c(%rsp),%rbp
  uint32_t deviceCount = 0;
    86af:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    86b6:	00 
  vkEnumeratePhysicalDevices(instance, &deviceCount, nullptr);
    86b7:	48 89 ee             	mov    %rbp,%rsi
    86ba:	e8 f1 aa ff ff       	call   31b0 <vkEnumeratePhysicalDevices@plt>
  if (deviceCount == 0)
    86bf:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    86c3:	85 db                	test   %ebx,%ebx
    86c5:	0f 84 cf ba ff ff    	je     419a <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv.cold>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    86cb:	4c 8d 24 dd 00 00 00 	lea    0x0(,%rbx,8),%r12
    86d2:	00 
    86d3:	4c 89 e7             	mov    %r12,%rdi
    86d6:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    86db:	e8 90 ac ff ff       	call   3370 <_Znwm@plt>
    86e0:	48 8d 78 08          	lea    0x8(%rax),%rdi
    86e4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    86eb:	49 89 c7             	mov    %rax,%r15
	return __first;
    86ee:	49 89 fe             	mov    %rdi,%r14
      if (__n <= 0)
    86f1:	48 83 fb 01          	cmp    $0x1,%rbx
    86f5:	74 15                	je     870c <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x7c>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    86f7:	4e 8d 34 20          	lea    (%rax,%r12,1),%r14
      for (; __first != __last; ++__first)
    86fb:	49 39 fe             	cmp    %rdi,%r14
    86fe:	74 0c                	je     870c <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x7c>
	*__first = __tmp;
    8700:	49 8d 54 24 f8       	lea    -0x8(%r12),%rdx
    8705:	31 f6                	xor    %esi,%esi
    8707:	e8 b4 aa ff ff       	call   31c0 <memset@plt>
  vkEnumeratePhysicalDevices(instance, &deviceCount, devices.data());
    870c:	49 8b 7d 10          	mov    0x10(%r13),%rdi
    8710:	4c 89 fa             	mov    %r15,%rdx
    8713:	48 89 ee             	mov    %rbp,%rsi
    8716:	e8 95 aa ff ff       	call   31b0 <vkEnumeratePhysicalDevices@plt>
  for (const auto &device : devices) {
    871b:	4d 39 f7             	cmp    %r14,%r15
    871e:	0f 84 91 00 00 00    	je     87b5 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x125>
    8724:	4c 89 fd             	mov    %r15,%rbp
    8727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    872e:	00 00 
    if (isSuitableDevice(device)) {
    8730:	4c 8b 65 00          	mov    0x0(%rbp),%r12
  QueueFamilyIndices indices = findQueueFamilies(device);
    8734:	4c 89 ef             	mov    %r13,%rdi
    8737:	4c 89 e6             	mov    %r12,%rsi
    873a:	e8 01 d1 ff ff       	call   5840 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
  bool extensionsSupported = checkDeviceExtensionSupport(device);
    873f:	4c 89 e6             	mov    %r12,%rsi
    8742:	4c 89 ef             	mov    %r13,%rdi
  QueueFamilyIndices indices = findQueueFamilies(device);
    8745:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    874a:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  bool extensionsSupported = checkDeviceExtensionSupport(device);
    874f:	e8 fc f6 ff ff       	call   7e50 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    8754:	89 c3                	mov    %eax,%ebx
  bool swapChainAdequate = false;
    8756:	31 c0                	xor    %eax,%eax
  if (extensionsSupported) {
    8758:	84 db                	test   %bl,%bl
    875a:	75 64                	jne    87c0 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x130>
    875c:	80 7c 24 24 00       	cmpb   $0x0,0x24(%rsp)
    8761:	74 45                	je     87a8 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x118>
  return indices.isComplete() && extensionsSupported && swapChainAdequate;
    8763:	80 7c 24 2c 00       	cmpb   $0x0,0x2c(%rsp)
    8768:	74 3e                	je     87a8 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x118>
    if (isSuitableDevice(device)) {
    876a:	84 db                	test   %bl,%bl
    876c:	74 3a                	je     87a8 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x118>
    876e:	84 c0                	test   %al,%al
    8770:	74 36                	je     87a8 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x118>
      physicalDevice = device;
    8772:	48 8b 45 00          	mov    0x0(%rbp),%rax
    8776:	49 89 45 38          	mov    %rax,0x38(%r13)
  if (physicalDevice == VK_NULL_HANDLE)
    877a:	48 85 c0             	test   %rax,%rax
    877d:	0f 84 49 ba ff ff    	je     41cc <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv.cold+0x32>
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8783:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    8788:	4c 89 ff             	mov    %r15,%rdi
    878b:	e8 00 ac ff ff       	call   3390 <_ZdlPvm@plt>
}
    8790:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    8797:	5b                   	pop    %rbx
    8798:	5d                   	pop    %rbp
    8799:	41 5c                	pop    %r12
    879b:	41 5d                	pop    %r13
    879d:	41 5e                	pop    %r14
    879f:	41 5f                	pop    %r15
    87a1:	c3                   	ret
    87a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  for (const auto &device : devices) {
    87a8:	48 83 c5 08          	add    $0x8,%rbp
    87ac:	49 39 ee             	cmp    %rbp,%r14
    87af:	0f 85 7b ff ff ff    	jne    8730 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0xa0>
  if (physicalDevice == VK_NULL_HANDLE)
    87b5:	49 8b 45 38          	mov    0x38(%r13),%rax
    87b9:	eb bf                	jmp    877a <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0xea>
    87bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    SwapChainSupportDetails swapChainSupport = querySwapChainSupport(device);
    87c0:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    87c5:	4c 89 e2             	mov    %r12,%rdx
    87c8:	4c 89 ee             	mov    %r13,%rsi
    87cb:	e8 50 d9 ff ff       	call   6120 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>
    87d0:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    87d5:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    87dc:	00 
    swapChainAdequate = !swapChainSupport.formats.empty() &&
    87dd:	31 c0                	xor    %eax,%eax
    87df:	48 39 7c 24 70       	cmp    %rdi,0x70(%rsp)
    87e4:	74 0b                	je     87f1 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x161>
    87e6:	48 39 94 24 88 00 00 	cmp    %rdx,0x88(%rsp)
    87ed:	00 
    87ee:	0f 95 c0             	setne  %al
	if (__p)
    87f1:	48 85 d2             	test   %rdx,%rdx
    87f4:	74 21                	je     8817 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x187>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    87f6:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
    87fd:	00 
    87fe:	48 89 d7             	mov    %rdx,%rdi
    8801:	88 44 24 07          	mov    %al,0x7(%rsp)
    8805:	48 29 d6             	sub    %rdx,%rsi
    8808:	e8 83 ab ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    880d:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    8812:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
	if (__p)
    8817:	48 85 ff             	test   %rdi,%rdi
    881a:	0f 84 3c ff ff ff    	je     875c <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0xcc>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8820:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
    8825:	88 44 24 07          	mov    %al,0x7(%rsp)
    8829:	48 29 fe             	sub    %rdi,%rsi
    882c:	e8 5f ab ff ff       	call   3390 <_ZdlPvm@plt>
    8831:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
    8836:	e9 21 ff ff ff       	jmp    875c <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0xcc>
    883b:	e9 be b9 ff ff       	jmp    41fe <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv.cold+0x64>

0000000000008840 <_ZN4rtvc17RenderApplication10initVulkanEv>:
void rtvc::RenderApplication::initVulkan() {
    8840:	55                   	push   %rbp
    8841:	53                   	push   %rbx
    8842:	48 89 fb             	mov    %rdi,%rbx
    8845:	48 83 ec 08          	sub    $0x8,%rsp
  creatInstance();
    8849:	e8 02 cc ff ff       	call   5450 <_ZN4rtvc17RenderApplication13creatInstanceEv>
  if (glfwCreateWindowSurface(instance, window, nullptr, &surface) !=
    884e:	48 8b 33             	mov    (%rbx),%rsi
    8851:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    8855:	31 d2                	xor    %edx,%edx
    8857:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
    885b:	e8 b0 ad ff ff       	call   3610 <glfwCreateWindowSurface@plt>
    8860:	85 c0                	test   %eax,%eax
    8862:	0f 85 ce b9 ff ff    	jne    4236 <_ZN4rtvc17RenderApplication10initVulkanEv.cold>
  selectPhysicalDevice();
    8868:	48 89 df             	mov    %rbx,%rdi
    886b:	e8 20 fe ff ff       	call   8690 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv>
  createLogicalDevice();
    8870:	48 89 df             	mov    %rbx,%rdi
    8873:	e8 18 da ff ff       	call   6290 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv>
  createSwapChain();
    8878:	48 89 df             	mov    %rbx,%rdi
    887b:	e8 00 de ff ff       	call   6680 <_ZN4rtvc17RenderApplication15createSwapChainEv>
  createImageViews();
    8880:	48 89 df             	mov    %rbx,%rdi
    8883:	e8 98 e1 ff ff       	call   6a20 <_ZN4rtvc17RenderApplication16createImageViewsEv>
  createRenderPass();
    8888:	48 89 df             	mov    %rbx,%rdi
    888b:	e8 50 d3 ff ff       	call   5be0 <_ZN4rtvc17RenderApplication16createRenderPassEv>
  createGraphicsPipeline();
    8890:	48 89 df             	mov    %rbx,%rdi
    8893:	e8 a8 e5 ff ff       	call   6e40 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>
  createFramebuffers();
    8898:	48 89 df             	mov    %rbx,%rdi
    889b:	e8 70 ec ff ff       	call   7510 <_ZN4rtvc17RenderApplication18createFramebuffersEv>
  createCommandPool();
    88a0:	48 89 df             	mov    %rbx,%rdi
    88a3:	e8 88 d4 ff ff       	call   5d30 <_ZN4rtvc17RenderApplication17createCommandPoolEv>
  createVertexBuffers();
    88a8:	48 89 df             	mov    %rbx,%rdi
    88ab:	e8 00 d5 ff ff       	call   5db0 <_ZN4rtvc17RenderApplication19createVertexBuffersEv>
  createCommandBuffers();
    88b0:	48 89 df             	mov    %rbx,%rdi
    88b3:	e8 f8 f2 ff ff       	call   7bb0 <_ZN4rtvc17RenderApplication20createCommandBuffersEv>
}
    88b8:	48 83 c4 08          	add    $0x8,%rsp
  createSyncObjects();
    88bc:	48 89 df             	mov    %rbx,%rdi
}
    88bf:	5b                   	pop    %rbx
    88c0:	5d                   	pop    %rbp
  createSyncObjects();
    88c1:	e9 aa f3 ff ff       	jmp    7c70 <_ZN4rtvc17RenderApplication17createSyncObjectsEv>
    88c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    88cd:	00 00 00 

00000000000088d0 <_ZN4rtvc17RenderApplication3runEv>:
void rtvc::RenderApplication::run() {
    88d0:	53                   	push   %rbx
    88d1:	48 89 fb             	mov    %rdi,%rbx
  glfwInit();
    88d4:	e8 77 ab ff ff       	call   3450 <glfwInit@plt>
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    88d9:	31 f6                	xor    %esi,%esi
    88db:	bf 01 20 02 00       	mov    $0x22001,%edi
    88e0:	e8 db a9 ff ff       	call   32c0 <glfwWindowHint@plt>
  window = glfwCreateWindow(width, height, "Vulkan Triangle Application",
    88e5:	8b 73 0c             	mov    0xc(%rbx),%esi
    88e8:	8b 7b 08             	mov    0x8(%rbx),%edi
    88eb:	45 31 c0             	xor    %r8d,%r8d
    88ee:	31 c9                	xor    %ecx,%ecx
    88f0:	48 8d 15 5b 18 00 00 	lea    0x185b(%rip),%rdx        # a152 <_IO_stdin_used+0x152>
    88f7:	e8 44 ad ff ff       	call   3640 <glfwCreateWindow@plt>
  glfwSetWindowUserPointer(window, this);
    88fc:	48 89 de             	mov    %rbx,%rsi
  window = glfwCreateWindow(width, height, "Vulkan Triangle Application",
    88ff:	48 89 03             	mov    %rax,(%rbx)
    8902:	48 89 c7             	mov    %rax,%rdi
  glfwSetWindowUserPointer(window, this);
    8905:	e8 86 a8 ff ff       	call   3190 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    890a:	48 8b 3b             	mov    (%rbx),%rdi
    890d:	48 8d 35 bc c0 ff ff 	lea    -0x3f44(%rip),%rsi        # 49d0 <_ZN4rtvc17RenderApplication25framebufferResizeCallbackEP10GLFWwindowii>
    8914:	e8 d7 ac ff ff       	call   35f0 <glfwSetFramebufferSizeCallback@plt>
  initVulkan();
    8919:	48 89 df             	mov    %rbx,%rdi
    891c:	e8 1f ff ff ff       	call   8840 <_ZN4rtvc17RenderApplication10initVulkanEv>
  mainLoop();
    8921:	48 89 df             	mov    %rbx,%rdi
    8924:	e8 97 f0 ff ff       	call   79c0 <_ZN4rtvc17RenderApplication8mainLoopEv>
  cleanUp();
    8929:	48 89 df             	mov    %rbx,%rdi
    892c:	5b                   	pop    %rbx
  cleanUp();
    892d:	e9 1e d7 ff ff       	jmp    6050 <_ZN4rtvc17RenderApplication7cleanUpEv>
    8932:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8939:	00 00 00 
    893c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008940 <_ZNKSt5ctypeIcE8do_widenEc>:
       *
       *  @param __c  The char to convert.
       *  @return  The converted character.
      */
      virtual char_type
      do_widen(char __c) const
    8940:	89 f0                	mov    %esi,%eax
      { return __c; }
    8942:	c3                   	ret
    8943:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    894a:	00 00 00 
    894d:	0f 1f 00             	nopl   (%rax)

0000000000008950 <_ZNKSt19bad_optional_access4whatEv>:
    { return "bad optional access"; }
    8950:	48 8d 05 69 17 00 00 	lea    0x1769(%rip),%rax        # a0c0 <_IO_stdin_used+0xc0>
    8957:	c3                   	ret
    8958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    895f:	00 

0000000000008960 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
    8960:	48 8d 05 29 52 00 00 	lea    0x5229(%rip),%rax        # db90 <_ZTVSt19bad_optional_access+0x10>
    8967:	48 89 07             	mov    %rax,(%rdi)
    896a:	e9 c1 ad ff ff       	jmp    3730 <_ZNSt9exceptionD2Ev@plt>
    896f:	90                   	nop

0000000000008970 <_ZNSt19bad_optional_accessD0Ev>:
    8970:	48 8d 05 19 52 00 00 	lea    0x5219(%rip),%rax        # db90 <_ZTVSt19bad_optional_access+0x10>
    8977:	53                   	push   %rbx
    8978:	48 89 fb             	mov    %rdi,%rbx
    897b:	48 89 07             	mov    %rax,(%rdi)
    897e:	e8 ad ad ff ff       	call   3730 <_ZNSt9exceptionD2Ev@plt>
    8983:	48 89 df             	mov    %rbx,%rdi
    8986:	be 08 00 00 00       	mov    $0x8,%esi
    898b:	5b                   	pop    %rbx
    898c:	e9 ff a9 ff ff       	jmp    3390 <_ZdlPvm@plt>
    8991:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8998:	00 00 00 
    899b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000089a0 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>:

  VkSurfaceKHR surface;

  VkQueue presentQueue;

  struct SwapChainSupportDetails {
    89a0:	53                   	push   %rbx
    89a1:	48 89 fb             	mov    %rdi,%rbx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    89a4:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
	if (__p)
    89a8:	48 85 ff             	test   %rdi,%rdi
    89ab:	74 0c                	je     89b9 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev+0x19>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    89ad:	48 8b 73 60          	mov    0x60(%rbx),%rsi
    89b1:	48 29 fe             	sub    %rdi,%rsi
    89b4:	e8 d7 a9 ff ff       	call   3390 <_ZdlPvm@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    89b9:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
	if (__p)
    89bd:	48 85 ff             	test   %rdi,%rdi
    89c0:	74 0e                	je     89d0 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev+0x30>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    89c2:	48 8b 73 48          	mov    0x48(%rbx),%rsi
    89c6:	5b                   	pop    %rbx
    89c7:	48 29 fe             	sub    %rdi,%rsi
    89ca:	e9 c1 a9 ff ff       	jmp    3390 <_ZdlPvm@plt>
    89cf:	90                   	nop
    89d0:	5b                   	pop    %rbx
    89d1:	c3                   	ret
    89d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    89d9:	00 00 00 
    89dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000089e0 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
    89e0:	53                   	push   %rbx
    89e1:	48 89 fb             	mov    %rdi,%rbx
    auto stop = std::chrono::high_resolution_clock::now();
    89e4:	e8 57 a6 ff ff       	call   3040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
      { return _M_dataplus._M_p; }
    89e9:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    89ed:	48 8d 43 18          	lea    0x18(%rbx),%rax
	if (!_M_is_local())
    89f1:	48 39 c7             	cmp    %rax,%rdi
    89f4:	74 12                	je     8a08 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev+0x28>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    89f6:	48 8b 73 18          	mov    0x18(%rbx),%rsi
  }
    89fa:	5b                   	pop    %rbx
    89fb:	48 83 c6 01          	add    $0x1,%rsi
    89ff:	e9 8c a9 ff ff       	jmp    3390 <_ZdlPvm@plt>
    8a04:	0f 1f 40 00          	nopl   0x0(%rax)
    8a08:	5b                   	pop    %rbx
    8a09:	c3                   	ret
    8a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008a10 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>:
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    8a10:	48 85 f6             	test   %rsi,%rsi
    8a13:	0f 84 47 01 00 00    	je     8b60 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x150>
	{
	  const size_type __size = size();
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
					 - this->_M_impl._M_finish);

	  if (__size > max_size() || __navail > max_size() - __size)
    8a19:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    8a20:	ff ff 0f 
    vector<_Tp, _Alloc>::
    8a23:	41 57                	push   %r15
    8a25:	41 56                	push   %r14
    8a27:	41 55                	push   %r13
    8a29:	41 54                	push   %r12
    8a2b:	55                   	push   %rbp
    8a2c:	48 89 fd             	mov    %rdi,%rbp
    8a2f:	53                   	push   %rbx
    8a30:	48 89 f3             	mov    %rsi,%rbx
    8a33:	48 83 ec 18          	sub    $0x18,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8a37:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    8a3b:	49 89 d6             	mov    %rdx,%r14
    8a3e:	4c 2b 37             	sub    (%rdi),%r14
    8a41:	4c 89 f1             	mov    %r14,%rcx
    8a44:	48 c1 f9 03          	sar    $0x3,%rcx
	  if (__size > max_size() || __navail > max_size() - __size)
    8a48:	48 29 c8             	sub    %rcx,%rax
    8a4b:	48 89 c6             	mov    %rax,%rsi
					 - this->_M_impl._M_finish);
    8a4e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    8a52:	48 29 d0             	sub    %rdx,%rax
    8a55:	48 c1 f8 03          	sar    $0x3,%rax
	    __builtin_unreachable();

	  if (__navail >= __n)
    8a59:	48 39 d8             	cmp    %rbx,%rax
    8a5c:	0f 83 ae 00 00 00    	jae    8b10 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x100>
	if (max_size() - size() < __n)
    8a62:	48 39 de             	cmp    %rbx,%rsi
    8a65:	0f 82 56 01 00 00    	jb     8bc1 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x1b1>
	const size_type __len = size() + (std::max)(size(), __n);
    8a6b:	4c 8d 2c 0b          	lea    (%rbx,%rcx,1),%r13
      if (__a < __b)
    8a6f:	48 39 d9             	cmp    %rbx,%rcx
    8a72:	0f 82 f0 00 00 00    	jb     8b68 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x158>
    8a78:	49 bc f8 ff ff ff ff 	movabs $0x7ffffffffffffff8,%r12
    8a7f:	ff ff 7f 
    8a82:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    8a86:	48 39 c8             	cmp    %rcx,%rax
    8a89:	0f 83 3e 01 00 00    	jae    8bcd <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x1bd>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8a8f:	4c 89 e7             	mov    %r12,%rdi
    8a92:	e8 d9 a8 ff ff       	call   3370 <_Znwm@plt>
		  __catch(...)
		    {
		      _M_deallocate(__new_start, __len);
		      __throw_exception_again;
		    }
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    8a97:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
    __relocate_a_1(_Tp* __first, _Tp* __last,
		   _Tp* __result,
		   [[__maybe_unused__]] allocator<_Up>& __alloc) noexcept
    {
      ptrdiff_t __count = __last - __first;
    8a9b:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
		      std::__uninitialized_default_n_a(__new_start + __size,
    8a9f:	4a 8d 14 30          	lea    (%rax,%r14,1),%rdx
    8aa3:	49 89 c7             	mov    %rax,%r15
	      _M_deallocate(this->_M_impl._M_start,
			    this->_M_impl._M_end_of_storage
			    - this->_M_impl._M_start);
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    8aa6:	49 01 c4             	add    %rax,%r12
    8aa9:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    8ab0:	4c 29 c7             	sub    %r8,%rdi
      if (__n <= 0)
    8ab3:	48 83 eb 01          	sub    $0x1,%rbx
    8ab7:	74 1f                	je     8ad8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0xc8>
	      ++__first;
    8ab9:	48 8d 42 08          	lea    0x8(%rdx),%rax
      std::__fill_a(__first, __first + __n, __value);
    8abd:	48 8d 34 d8          	lea    (%rax,%rbx,8),%rsi
      for (; __first != __last; ++__first)
    8ac1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	*__first = __value;
    8ac8:	48 8b 0a             	mov    (%rdx),%rcx
      for (; __first != __last; ++__first)
    8acb:	48 83 c0 08          	add    $0x8,%rax
	*__first = __value;
    8acf:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
      for (; __first != __last; ++__first)
    8ad3:	48 39 c6             	cmp    %rax,%rsi
    8ad6:	75 f0                	jne    8ac8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0xb8>
      if (__count > 0)
    8ad8:	48 85 ff             	test   %rdi,%rdi
    8adb:	0f 8f a7 00 00 00    	jg     8b88 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x178>
	if (__p)
    8ae1:	4d 85 c0             	test   %r8,%r8
    8ae4:	0f 85 ce 00 00 00    	jne    8bb8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x1a8>
	      this->_M_impl._M_finish = __new_start + __size + __n;
    8aea:	4b 8d 04 ef          	lea    (%r15,%r13,8),%rax
	      this->_M_impl._M_start = __new_start;
    8aee:	4c 89 7d 00          	mov    %r15,0x0(%rbp)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    8af2:	48 89 45 08          	mov    %rax,0x8(%rbp)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    8af6:	4c 89 65 10          	mov    %r12,0x10(%rbp)
	    }
	}
    }
    8afa:	48 83 c4 18          	add    $0x18,%rsp
    8afe:	5b                   	pop    %rbx
    8aff:	5d                   	pop    %rbp
    8b00:	41 5c                	pop    %r12
    8b02:	41 5d                	pop    %r13
    8b04:	41 5e                	pop    %r14
    8b06:	41 5f                	pop    %r15
    8b08:	c3                   	ret
    8b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8b10:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
	      ++__first;
    8b17:	48 8d 7a 08          	lea    0x8(%rdx),%rdi
      if (__n <= 0)
    8b1b:	48 83 eb 01          	sub    $0x1,%rbx
    8b1f:	74 27                	je     8b48 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x138>
      std::__fill_a(__first, __first + __n, __value);
    8b21:	48 8d 34 df          	lea    (%rdi,%rbx,8),%rsi
    8b25:	48 89 f8             	mov    %rdi,%rax
    8b28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8b2f:	00 
	*__first = __value;
    8b30:	48 8b 0a             	mov    (%rdx),%rcx
      for (; __first != __last; ++__first)
    8b33:	48 83 c0 08          	add    $0x8,%rax
	*__first = __value;
    8b37:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
      for (; __first != __last; ++__first)
    8b3b:	48 39 c6             	cmp    %rax,%rsi
    8b3e:	75 f0                	jne    8b30 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x120>
    8b40:	48 29 d6             	sub    %rdx,%rsi
    8b43:	48 8d 7c 37 f8       	lea    -0x8(%rdi,%rsi,1),%rdi
	      this->_M_impl._M_finish =
    8b48:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    }
    8b4c:	48 83 c4 18          	add    $0x18,%rsp
    8b50:	5b                   	pop    %rbx
    8b51:	5d                   	pop    %rbp
    8b52:	41 5c                	pop    %r12
    8b54:	41 5d                	pop    %r13
    8b56:	41 5e                	pop    %r14
    8b58:	41 5f                	pop    %r15
    8b5a:	c3                   	ret
    8b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8b60:	c3                   	ret
    8b61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    8b68:	49 bc ff ff ff ff ff 	movabs $0xfffffffffffffff,%r12
    8b6f:	ff ff 0f 
    8b72:	4d 39 e5             	cmp    %r12,%r13
    8b75:	4d 0f 46 e5          	cmovbe %r13,%r12
    8b79:	49 c1 e4 03          	shl    $0x3,%r12
    8b7d:	e9 0d ff ff ff       	jmp    8a8f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x7f>
    8b82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	      __gnu_cxx::__normal_iterator<_Tp*, void> __out(__result);
	      __out = std::__relocate_a_1(__first, __last, __out, __alloc);
	      return __out.base();
	    }
#endif
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    8b88:	4c 89 c6             	mov    %r8,%rsi
    8b8b:	48 89 fa             	mov    %rdi,%rdx
    8b8e:	4c 89 ff             	mov    %r15,%rdi
    8b91:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    8b96:	e8 f5 aa ff ff       	call   3690 <memmove@plt>
			    - this->_M_impl._M_start);
    8b9b:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    8b9f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    8ba4:	4c 29 c6             	sub    %r8,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8ba7:	4c 89 c7             	mov    %r8,%rdi
    8baa:	e8 e1 a7 ff ff       	call   3390 <_ZdlPvm@plt>
    8baf:	e9 36 ff ff ff       	jmp    8aea <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0xda>
    8bb4:	0f 1f 40 00          	nopl   0x0(%rax)
    8bb8:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    8bbc:	4c 29 c6             	sub    %r8,%rsi
    8bbf:	eb e6                	jmp    8ba7 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x197>
	  __throw_length_error(__N(__s));
    8bc1:	48 8d 3d cf 18 00 00 	lea    0x18cf(%rip),%rdi        # a497 <_IO_stdin_used+0x497>
    8bc8:	e8 d3 a5 ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    8bcd:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%rdx
    8bd4:	ff ff 0f 
    8bd7:	48 39 d0             	cmp    %rdx,%rax
    8bda:	48 0f 47 c2          	cmova  %rdx,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8bde:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
    8be5:	00 
    8be6:	e9 a4 fe ff ff       	jmp    8a8f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x7f>
    8beb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008bf0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>:
      if (__n != 0)
    8bf0:	48 85 f6             	test   %rsi,%rsi
    8bf3:	0f 84 d7 01 00 00    	je     8dd0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1e0>
	  if (__size > max_size() || __navail > max_size() - __size)
    8bf9:	48 ba ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rdx
    8c00:	ff ff 1f 
    vector<_Tp, _Alloc>::
    8c03:	41 57                	push   %r15
    8c05:	41 56                	push   %r14
    8c07:	41 55                	push   %r13
    8c09:	41 54                	push   %r12
    8c0b:	55                   	push   %rbp
    8c0c:	48 89 fd             	mov    %rdi,%rbp
    8c0f:	53                   	push   %rbx
    8c10:	48 89 f3             	mov    %rsi,%rbx
	  if (__size > max_size() || __navail > max_size() - __size)
    8c13:	48 89 d6             	mov    %rdx,%rsi
    vector<_Tp, _Alloc>::
    8c16:	48 83 ec 18          	sub    $0x18,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8c1a:	48 8b 47 08          	mov    0x8(%rdi),%rax
					 - this->_M_impl._M_finish);
    8c1e:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    8c22:	49 89 c7             	mov    %rax,%r15
    8c25:	4c 2b 3f             	sub    (%rdi),%r15
    8c28:	48 29 c2             	sub    %rax,%rdx
    8c2b:	4c 89 f9             	mov    %r15,%rcx
    8c2e:	48 c1 fa 02          	sar    $0x2,%rdx
    8c32:	48 c1 f9 02          	sar    $0x2,%rcx
	  if (__size > max_size() || __navail > max_size() - __size)
    8c36:	48 29 ce             	sub    %rcx,%rsi
	  if (__navail >= __n)
    8c39:	48 39 da             	cmp    %rbx,%rdx
    8c3c:	0f 83 de 00 00 00    	jae    8d20 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x130>
	if (max_size() - size() < __n)
    8c42:	48 39 de             	cmp    %rbx,%rsi
    8c45:	0f 82 81 02 00 00    	jb     8ecc <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x2dc>
	const size_type __len = size() + (std::max)(size(), __n);
    8c4b:	4c 8d 2c 0b          	lea    (%rbx,%rcx,1),%r13
      if (__a < __b)
    8c4f:	48 39 d9             	cmp    %rbx,%rcx
    8c52:	0f 82 a8 01 00 00    	jb     8e00 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x210>
    8c58:	49 bc fc ff ff ff ff 	movabs $0x7ffffffffffffffc,%r12
    8c5f:	ff ff 7f 
    8c62:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    8c66:	48 39 c8             	cmp    %rcx,%rax
    8c69:	0f 83 69 02 00 00    	jae    8ed8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x2e8>
    8c6f:	4c 89 e7             	mov    %r12,%rdi
    8c72:	e8 f9 a6 ff ff       	call   3370 <_Znwm@plt>
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    8c77:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
      ptrdiff_t __count = __last - __first;
    8c7b:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
		      std::__uninitialized_default_n_a(__new_start + __size,
    8c7f:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    8c83:	49 89 c6             	mov    %rax,%r14
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    8c86:	49 01 c4             	add    %rax,%r12
    8c89:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
    8c8f:	48 29 cf             	sub    %rcx,%rdi
      if (__n <= 0)
    8c92:	48 83 fb 01          	cmp    $0x1,%rbx
    8c96:	74 56                	je     8cee <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xfe>
    8c98:	48 c1 e3 02          	shl    $0x2,%rbx
      for (; __first != __last; ++__first)
    8c9c:	48 8d 46 08          	lea    0x8(%rsi),%rax
	*__first = __value;
    8ca0:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
      std::__fill_a(__first, __first + __n, __value);
    8ca7:	4c 8d 04 1e          	lea    (%rsi,%rbx,1),%r8
      for (; __first != __last; ++__first)
    8cab:	49 39 c0             	cmp    %rax,%r8
    8cae:	74 3e                	je     8cee <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xfe>
    8cb0:	4c 8d 4b f4          	lea    -0xc(%rbx),%r9
    8cb4:	49 83 f9 0c          	cmp    $0xc,%r9
    8cb8:	76 26                	jbe    8ce0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xf0>
    8cba:	49 8d 57 08          	lea    0x8(%r15),%rdx
    8cbe:	4d 8d 57 04          	lea    0x4(%r15),%r10
    8cc2:	49 39 d2             	cmp    %rdx,%r10
    8cc5:	0f 8e 85 01 00 00    	jle    8e50 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x260>
    8ccb:	4c 01 fb             	add    %r15,%rbx
    8cce:	49 39 df             	cmp    %rbx,%r15
    8cd1:	0f 8d 79 01 00 00    	jge    8e50 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x260>
    8cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8cde:	00 00 
	*__first = __value;
    8ce0:	8b 16                	mov    (%rsi),%edx
      for (; __first != __last; ++__first)
    8ce2:	48 83 c0 04          	add    $0x4,%rax
	*__first = __value;
    8ce6:	89 50 fc             	mov    %edx,-0x4(%rax)
      for (; __first != __last; ++__first)
    8ce9:	49 39 c0             	cmp    %rax,%r8
    8cec:	75 f2                	jne    8ce0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xf0>
      if (__count > 0)
    8cee:	48 85 ff             	test   %rdi,%rdi
    8cf1:	0f 8f 29 01 00 00    	jg     8e20 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x230>
	if (__p)
    8cf7:	48 85 c9             	test   %rcx,%rcx
    8cfa:	0f 85 c0 01 00 00    	jne    8ec0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x2d0>
	      this->_M_impl._M_finish = __new_start + __size + __n;
    8d00:	4b 8d 04 ae          	lea    (%r14,%r13,4),%rax
	      this->_M_impl._M_start = __new_start;
    8d04:	4c 89 75 00          	mov    %r14,0x0(%rbp)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    8d08:	48 89 45 08          	mov    %rax,0x8(%rbp)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    8d0c:	4c 89 65 10          	mov    %r12,0x10(%rbp)
    }
    8d10:	48 83 c4 18          	add    $0x18,%rsp
    8d14:	5b                   	pop    %rbx
    8d15:	5d                   	pop    %rbp
    8d16:	41 5c                	pop    %r12
    8d18:	41 5d                	pop    %r13
    8d1a:	41 5e                	pop    %r14
    8d1c:	41 5f                	pop    %r15
    8d1e:	c3                   	ret
    8d1f:	90                   	nop
    8d20:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
	      ++__first;
    8d26:	48 8d 48 04          	lea    0x4(%rax),%rcx
      if (__n <= 0)
    8d2a:	48 83 eb 01          	sub    $0x1,%rbx
    8d2e:	0f 84 7f 00 00 00    	je     8db3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1c3>
      std::__fill_a(__first, __first + __n, __value);
    8d34:	48 8d 0c 99          	lea    (%rcx,%rbx,4),%rcx
      for (; __first != __last; ++__first)
    8d38:	48 8d 50 08          	lea    0x8(%rax),%rdx
	*__first = __value;
    8d3c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
      for (; __first != __last; ++__first)
    8d43:	48 39 d1             	cmp    %rdx,%rcx
    8d46:	74 6b                	je     8db3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1c3>
    8d48:	48 89 cf             	mov    %rcx,%rdi
    8d4b:	48 89 c6             	mov    %rax,%rsi
    8d4e:	48 29 c7             	sub    %rax,%rdi
    8d51:	48 83 ef 0c          	sub    $0xc,%rdi
    8d55:	48 83 ff 0c          	cmp    $0xc,%rdi
    8d59:	76 7d                	jbe    8dd8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1e8>
    8d5b:	48 c1 ef 02          	shr    $0x2,%rdi
	*__first = __value;
    8d5f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8d63:	48 83 c7 01          	add    $0x1,%rdi
    8d67:	49 89 f8             	mov    %rdi,%r8
    8d6a:	49 c1 e8 02          	shr    $0x2,%r8
    8d6e:	49 c1 e0 04          	shl    $0x4,%r8
    8d72:	49 01 c0             	add    %rax,%r8
    8d75:	0f 1f 00             	nopl   (%rax)
    8d78:	0f 11 46 08          	movups %xmm0,0x8(%rsi)
      for (; __first != __last; ++__first)
    8d7c:	48 83 c6 10          	add    $0x10,%rsi
    8d80:	49 39 f0             	cmp    %rsi,%r8
    8d83:	75 f3                	jne    8d78 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x188>
    8d85:	48 89 fe             	mov    %rdi,%rsi
    8d88:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
    8d8c:	83 e7 03             	and    $0x3,%edi
    8d8f:	48 8d 14 b2          	lea    (%rdx,%rsi,4),%rdx
    8d93:	74 1e                	je     8db3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1c3>
	*__first = __value;
    8d95:	8b 30                	mov    (%rax),%esi
      for (; __first != __last; ++__first)
    8d97:	48 8d 7a 04          	lea    0x4(%rdx),%rdi
	*__first = __value;
    8d9b:	89 32                	mov    %esi,(%rdx)
      for (; __first != __last; ++__first)
    8d9d:	48 39 f9             	cmp    %rdi,%rcx
    8da0:	74 11                	je     8db3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1c3>
	*__first = __value;
    8da2:	89 72 04             	mov    %esi,0x4(%rdx)
      for (; __first != __last; ++__first)
    8da5:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    8da9:	48 39 f1             	cmp    %rsi,%rcx
    8dac:	74 05                	je     8db3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1c3>
	*__first = __value;
    8dae:	8b 00                	mov    (%rax),%eax
    8db0:	89 42 08             	mov    %eax,0x8(%rdx)
	      this->_M_impl._M_finish =
    8db3:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    }
    8db7:	48 83 c4 18          	add    $0x18,%rsp
    8dbb:	5b                   	pop    %rbx
    8dbc:	5d                   	pop    %rbp
    8dbd:	41 5c                	pop    %r12
    8dbf:	41 5d                	pop    %r13
    8dc1:	41 5e                	pop    %r14
    8dc3:	41 5f                	pop    %r15
    8dc5:	c3                   	ret
    8dc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8dcd:	00 00 00 
    8dd0:	c3                   	ret
    8dd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8dd8:	8b 30                	mov    (%rax),%esi
      for (; __first != __last; ++__first)
    8dda:	48 83 c2 04          	add    $0x4,%rdx
	*__first = __value;
    8dde:	89 72 fc             	mov    %esi,-0x4(%rdx)
      for (; __first != __last; ++__first)
    8de1:	48 39 d1             	cmp    %rdx,%rcx
    8de4:	74 cd                	je     8db3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1c3>
	*__first = __value;
    8de6:	8b 30                	mov    (%rax),%esi
      for (; __first != __last; ++__first)
    8de8:	48 83 c2 04          	add    $0x4,%rdx
	*__first = __value;
    8dec:	89 72 fc             	mov    %esi,-0x4(%rdx)
      for (; __first != __last; ++__first)
    8def:	48 39 d1             	cmp    %rdx,%rcx
    8df2:	75 e4                	jne    8dd8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1e8>
    8df4:	eb bd                	jmp    8db3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x1c3>
    8df6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8dfd:	00 00 00 
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    8e00:	49 bc ff ff ff ff ff 	movabs $0x1fffffffffffffff,%r12
    8e07:	ff ff 1f 
    8e0a:	4d 39 e5             	cmp    %r12,%r13
    8e0d:	4d 0f 46 e5          	cmovbe %r13,%r12
    8e11:	49 c1 e4 02          	shl    $0x2,%r12
    8e15:	e9 55 fe ff ff       	jmp    8c6f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x7f>
    8e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    8e20:	48 89 ce             	mov    %rcx,%rsi
    8e23:	48 89 fa             	mov    %rdi,%rdx
    8e26:	4c 89 f7             	mov    %r14,%rdi
    8e29:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    8e2e:	e8 5d a8 ff ff       	call   3690 <memmove@plt>
			    - this->_M_impl._M_start);
    8e33:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    8e37:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    8e3c:	48 29 ce             	sub    %rcx,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8e3f:	48 89 cf             	mov    %rcx,%rdi
    8e42:	e8 49 a5 ff ff       	call   3390 <_ZdlPvm@plt>
    8e47:	e9 b4 fe ff ff       	jmp    8d00 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x110>
    8e4c:	0f 1f 40 00          	nopl   0x0(%rax)
    8e50:	49 c1 e9 02          	shr    $0x2,%r9
    8e54:	4c 01 f2             	add    %r14,%rdx
	*__first = __value;
    8e57:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8e5b:	4d 8d 51 01          	lea    0x1(%r9),%r10
    8e5f:	4d 89 d1             	mov    %r10,%r9
    8e62:	49 c1 e9 02          	shr    $0x2,%r9
    8e66:	49 c1 e1 04          	shl    $0x4,%r9
    8e6a:	49 01 d1             	add    %rdx,%r9
    8e6d:	0f 1f 00             	nopl   (%rax)
    8e70:	0f 11 02             	movups %xmm0,(%rdx)
      for (; __first != __last; ++__first)
    8e73:	48 83 c2 10          	add    $0x10,%rdx
    8e77:	4c 39 ca             	cmp    %r9,%rdx
    8e7a:	75 f4                	jne    8e70 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x280>
    8e7c:	4c 89 d2             	mov    %r10,%rdx
    8e7f:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    8e83:	41 83 e2 03          	and    $0x3,%r10d
    8e87:	48 8d 04 90          	lea    (%rax,%rdx,4),%rax
    8e8b:	0f 84 5d fe ff ff    	je     8cee <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xfe>
	*__first = __value;
    8e91:	8b 16                	mov    (%rsi),%edx
      for (; __first != __last; ++__first)
    8e93:	4c 8d 48 04          	lea    0x4(%rax),%r9
	*__first = __value;
    8e97:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    8e99:	4d 39 c8             	cmp    %r9,%r8
    8e9c:	0f 84 4c fe ff ff    	je     8cee <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xfe>
	*__first = __value;
    8ea2:	89 50 04             	mov    %edx,0x4(%rax)
      for (; __first != __last; ++__first)
    8ea5:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8ea9:	49 39 d0             	cmp    %rdx,%r8
    8eac:	0f 84 3c fe ff ff    	je     8cee <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xfe>
	*__first = __value;
    8eb2:	8b 16                	mov    (%rsi),%edx
    8eb4:	89 50 08             	mov    %edx,0x8(%rax)
      for (; __first != __last; ++__first)
    8eb7:	e9 32 fe ff ff       	jmp    8cee <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xfe>
    8ebc:	0f 1f 40 00          	nopl   0x0(%rax)
    8ec0:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    8ec4:	48 29 ce             	sub    %rcx,%rsi
    8ec7:	e9 73 ff ff ff       	jmp    8e3f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x24f>
	  __throw_length_error(__N(__s));
    8ecc:	48 8d 3d c4 15 00 00 	lea    0x15c4(%rip),%rdi        # a497 <_IO_stdin_used+0x497>
    8ed3:	e8 c8 a2 ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    8ed8:	48 ba ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rdx
    8edf:	ff ff 1f 
    8ee2:	48 39 d0             	cmp    %rdx,%rax
    8ee5:	48 0f 47 c2          	cmova  %rdx,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8ee9:	4c 8d 24 85 00 00 00 	lea    0x0(,%rax,4),%r12
    8ef0:	00 
    8ef1:	e9 79 fd ff ff       	jmp    8c6f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x7f>
    8ef6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8efd:	00 00 00 

0000000000008f00 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
    8f00:	41 57                	push   %r15
    8f02:	48 89 d1             	mov    %rdx,%rcx
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8f05:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
    8f0c:	cc cc cc 
    8f0f:	41 56                	push   %r14
    8f11:	41 55                	push   %r13
    8f13:	41 54                	push   %r12
    8f15:	55                   	push   %rbp
    8f16:	53                   	push   %rbx
    8f17:	48 83 ec 18          	sub    $0x18,%rsp
    8f1b:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    8f1f:	4c 8b 2f             	mov    (%rdi),%r13
    8f22:	4c 89 e0             	mov    %r12,%rax
    8f25:	4c 29 e8             	sub    %r13,%rax
    8f28:	48 c1 f8 03          	sar    $0x3,%rax
    8f2c:	48 0f af c2          	imul   %rdx,%rax
	if (max_size() - size() < __n)
    8f30:	48 ba 33 33 33 33 33 	movabs $0x333333333333333,%rdx
    8f37:	33 33 03 
    8f3a:	48 39 d0             	cmp    %rdx,%rax
    8f3d:	0f 84 50 01 00 00    	je     9093 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x193>
      if (__a < __b)
    8f43:	4d 39 e5             	cmp    %r12,%r13
    8f46:	ba 01 00 00 00       	mov    $0x1,%edx
    8f4b:	49 89 f6             	mov    %rsi,%r14
    max(const _Tp& __a, const _Tp& __b)
    8f4e:	48 89 fb             	mov    %rdi,%rbx
      if (__a < __b)
    8f51:	48 0f 45 d0          	cmovne %rax,%rdx
    8f55:	31 f6                	xor    %esi,%esi
    8f57:	48 01 d0             	add    %rdx,%rax
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    8f5a:	4c 89 f2             	mov    %r14,%rdx
    8f5d:	40 0f 92 c6          	setb   %sil
    8f61:	4c 29 ea             	sub    %r13,%rdx
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    8f64:	48 85 f6             	test   %rsi,%rsi
    8f67:	0f 85 ab 00 00 00    	jne    9018 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x118>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8f6d:	48 85 c0             	test   %rax,%rax
    8f70:	0f 85 02 01 00 00    	jne    9078 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x178>
    8f76:	45 31 ff             	xor    %r15d,%r15d
    8f79:	31 ed                	xor    %ebp,%ebp
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    8f7b:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
    8f7f:	f3 0f 6f 49 10       	movdqu 0x10(%rcx),%xmm1
	      ++__new_finish;
    8f84:	4c 8d 44 15 28       	lea    0x28(%rbp,%rdx,1),%r8
    8f89:	48 8b 41 20          	mov    0x20(%rcx),%rax
      ptrdiff_t __count = __last - __first;
    8f8d:	4c 89 e1             	mov    %r12,%rcx
    8f90:	4c 29 f1             	sub    %r14,%rcx
    8f93:	0f 11 44 15 00       	movups %xmm0,0x0(%rbp,%rdx,1)
    8f98:	48 89 44 15 20       	mov    %rax,0x20(%rbp,%rdx,1)
	}
      return __result + __count;
    8f9d:	4d 8d 24 08          	lea    (%r8,%rcx,1),%r12
    8fa1:	0f 11 4c 15 10       	movups %xmm1,0x10(%rbp,%rdx,1)
      if (__count > 0)
    8fa6:	48 85 d2             	test   %rdx,%rdx
    8fa9:	7f 25                	jg     8fd0 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xd0>
    8fab:	48 85 c9             	test   %rcx,%rcx
    8fae:	7f 50                	jg     9000 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x100>
	if (__p)
    8fb0:	4d 85 ed             	test   %r13,%r13
    8fb3:	75 38                	jne    8fed <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xed>
      this->_M_impl._M_start = __new_start;
    8fb5:	48 89 2b             	mov    %rbp,(%rbx)
      this->_M_impl._M_finish = __new_finish;
    8fb8:	4c 89 63 08          	mov    %r12,0x8(%rbx)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    8fbc:	4c 89 7b 10          	mov    %r15,0x10(%rbx)
    }
    8fc0:	48 83 c4 18          	add    $0x18,%rsp
    8fc4:	5b                   	pop    %rbx
    8fc5:	5d                   	pop    %rbp
    8fc6:	41 5c                	pop    %r12
    8fc8:	41 5d                	pop    %r13
    8fca:	41 5e                	pop    %r14
    8fcc:	41 5f                	pop    %r15
    8fce:	c3                   	ret
    8fcf:	90                   	nop
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    8fd0:	4c 89 ee             	mov    %r13,%rsi
    8fd3:	48 89 ef             	mov    %rbp,%rdi
    8fd6:	48 89 0c 24          	mov    %rcx,(%rsp)
    8fda:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    8fdf:	e8 ac a6 ff ff       	call   3690 <memmove@plt>
      if (__count > 0)
    8fe4:	48 8b 0c 24          	mov    (%rsp),%rcx
    8fe8:	48 85 c9             	test   %rcx,%rcx
    8feb:	7f 63                	jg     9050 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x150>
		    this->_M_impl._M_end_of_storage - __old_start);
    8fed:	48 8b 73 10          	mov    0x10(%rbx),%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8ff1:	4c 89 ef             	mov    %r13,%rdi
    8ff4:	4c 29 ee             	sub    %r13,%rsi
    8ff7:	e8 94 a3 ff ff       	call   3390 <_ZdlPvm@plt>
    8ffc:	eb b7                	jmp    8fb5 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xb5>
    8ffe:	66 90                	xchg   %ax,%ax
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    9000:	48 89 ca             	mov    %rcx,%rdx
    9003:	4c 89 f6             	mov    %r14,%rsi
    9006:	4c 89 c7             	mov    %r8,%rdi
    9009:	e8 72 a2 ff ff       	call   3280 <memcpy@plt>
    900e:	4d 85 ed             	test   %r13,%r13
    9011:	74 a2                	je     8fb5 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xb5>
    9013:	eb d8                	jmp    8fed <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xed>
    9015:	0f 1f 00             	nopl   (%rax)
    9018:	49 bf f8 ff ff ff ff 	movabs $0x7ffffffffffffff8,%r15
    901f:	ff ff 7f 
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9022:	4c 89 ff             	mov    %r15,%rdi
    9025:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    902a:	48 89 14 24          	mov    %rdx,(%rsp)
    902e:	e8 3d a3 ff ff       	call   3370 <_Znwm@plt>
    9033:	48 8b 14 24          	mov    (%rsp),%rdx
    9037:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    903c:	48 89 c5             	mov    %rax,%rbp
      this->_M_impl._M_end_of_storage = __new_start + __len;
    903f:	49 01 c7             	add    %rax,%r15
    9042:	e9 34 ff ff ff       	jmp    8f7b <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x7b>
    9047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    904e:	00 00 
    9050:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    9055:	4c 89 f6             	mov    %r14,%rsi
    9058:	48 89 ca             	mov    %rcx,%rdx
    905b:	e8 20 a2 ff ff       	call   3280 <memcpy@plt>
		    this->_M_impl._M_end_of_storage - __old_start);
    9060:	48 8b 73 10          	mov    0x10(%rbx),%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    9064:	4c 89 ef             	mov    %r13,%rdi
    9067:	4c 29 ee             	sub    %r13,%rsi
    906a:	e8 21 a3 ff ff       	call   3390 <_ZdlPvm@plt>
    906f:	e9 41 ff ff ff       	jmp    8fb5 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xb5>
    9074:	0f 1f 40 00          	nopl   0x0(%rax)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9078:	48 be 33 33 33 33 33 	movabs $0x333333333333333,%rsi
    907f:	33 33 03 
    9082:	48 39 f0             	cmp    %rsi,%rax
    9085:	48 0f 47 c6          	cmova  %rsi,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9089:	4c 8d 3c 80          	lea    (%rax,%rax,4),%r15
    908d:	49 c1 e7 03          	shl    $0x3,%r15
    9091:	eb 8f                	jmp    9022 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0x122>
	  __throw_length_error(__N(__s));
    9093:	48 8d 3d 17 14 00 00 	lea    0x1417(%rip),%rdi        # a4b1 <_IO_stdin_used+0x4b1>
    909a:	e8 01 a1 ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
    909f:	90                   	nop

00000000000090a0 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>:
      if (__n != 0)
    90a0:	48 85 f6             	test   %rsi,%rsi
    90a3:	0f 84 3f 01 00 00    	je     91e8 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x148>
	  if (__size > max_size() || __navail > max_size() - __size)
    90a9:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    90b0:	ff ff 0f 
    vector<_Tp, _Alloc>::
    90b3:	41 57                	push   %r15
    90b5:	41 56                	push   %r14
    90b7:	41 55                	push   %r13
    90b9:	41 54                	push   %r12
    90bb:	55                   	push   %rbp
    90bc:	48 89 fd             	mov    %rdi,%rbp
    90bf:	53                   	push   %rbx
    90c0:	48 89 f3             	mov    %rsi,%rbx
    90c3:	48 83 ec 18          	sub    $0x18,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    90c7:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    90cb:	49 89 d4             	mov    %rdx,%r12
    90ce:	4c 2b 27             	sub    (%rdi),%r12
    90d1:	4c 89 e1             	mov    %r12,%rcx
    90d4:	48 c1 f9 03          	sar    $0x3,%rcx
	  if (__size > max_size() || __navail > max_size() - __size)
    90d8:	48 29 c8             	sub    %rcx,%rax
    90db:	48 89 c6             	mov    %rax,%rsi
					 - this->_M_impl._M_finish);
    90de:	48 8b 47 10          	mov    0x10(%rdi),%rax
    90e2:	48 29 d0             	sub    %rdx,%rax
    90e5:	48 c1 f8 03          	sar    $0x3,%rax
	  if (__navail >= __n)
    90e9:	48 39 d8             	cmp    %rbx,%rax
    90ec:	0f 83 ae 00 00 00    	jae    91a0 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x100>
	if (max_size() - size() < __n)
    90f2:	48 39 de             	cmp    %rbx,%rsi
    90f5:	0f 82 4e 01 00 00    	jb     9249 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x1a9>
	const size_type __len = size() + (std::max)(size(), __n);
    90fb:	4c 8d 34 0b          	lea    (%rbx,%rcx,1),%r14
    90ff:	48 39 d9             	cmp    %rbx,%rcx
    9102:	0f 82 e8 00 00 00    	jb     91f0 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x150>
    9108:	49 bd f8 ff ff ff ff 	movabs $0x7ffffffffffffff8,%r13
    910f:	ff ff 7f 
    9112:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9116:	48 39 c8             	cmp    %rcx,%rax
    9119:	0f 83 36 01 00 00    	jae    9255 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x1b5>
    911f:	4c 89 ef             	mov    %r13,%rdi
    9122:	e8 49 a2 ff ff       	call   3370 <_Znwm@plt>
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    9127:	4c 8b 45 00          	mov    0x0(%rbp),%r8
      ptrdiff_t __count = __last - __first;
    912b:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
		      std::__uninitialized_default_n_a(__new_start + __size,
    912f:	49 01 c4             	add    %rax,%r12
    9132:	49 89 c7             	mov    %rax,%r15
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    9135:	49 01 c5             	add    %rax,%r13
    9138:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    913f:	00 
    9140:	4c 29 c1             	sub    %r8,%rcx
      if (__n <= 0)
    9143:	48 83 eb 01          	sub    $0x1,%rbx
    9147:	74 26                	je     916f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0xcf>
      std::__fill_a(__first, __first + __n, __value);
    9149:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
	*__first = __tmp;
    914e:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    9155:	00 
    9156:	31 f6                	xor    %esi,%esi
    9158:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    915d:	4c 89 04 24          	mov    %r8,(%rsp)
    9161:	e8 5a a0 ff ff       	call   31c0 <memset@plt>
    9166:	4c 8b 04 24          	mov    (%rsp),%r8
    916a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      if (__count > 0)
    916f:	48 85 c9             	test   %rcx,%rcx
    9172:	0f 8f 98 00 00 00    	jg     9210 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x170>
	if (__p)
    9178:	4d 85 c0             	test   %r8,%r8
    917b:	0f 85 bf 00 00 00    	jne    9240 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x1a0>
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9181:	4b 8d 04 f7          	lea    (%r15,%r14,8),%rax
	      this->_M_impl._M_start = __new_start;
    9185:	4c 89 7d 00          	mov    %r15,0x0(%rbp)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9189:	48 89 45 08          	mov    %rax,0x8(%rbp)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    918d:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    }
    9191:	48 83 c4 18          	add    $0x18,%rsp
    9195:	5b                   	pop    %rbx
    9196:	5d                   	pop    %rbp
    9197:	41 5c                	pop    %r12
    9199:	41 5d                	pop    %r13
    919b:	41 5e                	pop    %r14
    919d:	41 5f                	pop    %r15
    919f:	c3                   	ret
    91a0:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
	      ++__first;
    91a7:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
      if (__n <= 0)
    91ab:	48 83 eb 01          	sub    $0x1,%rbx
    91af:	74 1e                	je     91cf <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x12f>
      std::__fill_a(__first, __first + __n, __value);
    91b1:	48 8d 04 d9          	lea    (%rcx,%rbx,8),%rax
	*__first = __tmp;
    91b5:	48 89 cf             	mov    %rcx,%rdi
    91b8:	31 f6                	xor    %esi,%esi
    91ba:	48 29 d0             	sub    %rdx,%rax
    91bd:	48 8d 58 f8          	lea    -0x8(%rax),%rbx
    91c1:	48 89 da             	mov    %rbx,%rdx
    91c4:	e8 f7 9f ff ff       	call   31c0 <memset@plt>
    91c9:	48 89 c1             	mov    %rax,%rcx
      for (; __first != __last; ++__first)
    91cc:	48 01 d9             	add    %rbx,%rcx
	      this->_M_impl._M_finish =
    91cf:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    }
    91d3:	48 83 c4 18          	add    $0x18,%rsp
    91d7:	5b                   	pop    %rbx
    91d8:	5d                   	pop    %rbp
    91d9:	41 5c                	pop    %r12
    91db:	41 5d                	pop    %r13
    91dd:	41 5e                	pop    %r14
    91df:	41 5f                	pop    %r15
    91e1:	c3                   	ret
    91e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    91e8:	c3                   	ret
    91e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    91f0:	49 bd ff ff ff ff ff 	movabs $0xfffffffffffffff,%r13
    91f7:	ff ff 0f 
    91fa:	4d 39 ee             	cmp    %r13,%r14
    91fd:	4d 0f 46 ee          	cmovbe %r14,%r13
    9201:	49 c1 e5 03          	shl    $0x3,%r13
    9205:	e9 15 ff ff ff       	jmp    911f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x7f>
    920a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    9210:	4c 89 c6             	mov    %r8,%rsi
    9213:	48 89 ca             	mov    %rcx,%rdx
    9216:	4c 89 ff             	mov    %r15,%rdi
    9219:	4c 89 04 24          	mov    %r8,(%rsp)
    921d:	e8 6e a4 ff ff       	call   3690 <memmove@plt>
			    - this->_M_impl._M_start);
    9222:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    9226:	4c 8b 04 24          	mov    (%rsp),%r8
    922a:	4c 29 c6             	sub    %r8,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    922d:	4c 89 c7             	mov    %r8,%rdi
    9230:	e8 5b a1 ff ff       	call   3390 <_ZdlPvm@plt>
    9235:	e9 47 ff ff ff       	jmp    9181 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0xe1>
    923a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9240:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    9244:	4c 29 c6             	sub    %r8,%rsi
    9247:	eb e4                	jmp    922d <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x18d>
	  __throw_length_error(__N(__s));
    9249:	48 8d 3d 47 12 00 00 	lea    0x1247(%rip),%rdi        # a497 <_IO_stdin_used+0x497>
    9250:	e8 4b 9f ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9255:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%rdx
    925c:	ff ff 0f 
    925f:	48 39 d0             	cmp    %rdx,%rax
    9262:	48 0f 47 c2          	cmova  %rdx,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9266:	4c 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%r13
    926d:	00 
    926e:	e9 ac fe ff ff       	jmp    911f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x7f>
    9273:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    927a:	00 00 00 
    927d:	0f 1f 00             	nopl   (%rax)

0000000000009280 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:
      if (__n != 0)
    9280:	48 85 f6             	test   %rsi,%rsi
    9283:	0f 84 3f 01 00 00    	je     93c8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x148>
	  if (__size > max_size() || __navail > max_size() - __size)
    9289:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9290:	ff ff 0f 
    vector<_Tp, _Alloc>::
    9293:	41 57                	push   %r15
    9295:	41 56                	push   %r14
    9297:	41 55                	push   %r13
    9299:	41 54                	push   %r12
    929b:	55                   	push   %rbp
    929c:	48 89 fd             	mov    %rdi,%rbp
    929f:	53                   	push   %rbx
    92a0:	48 89 f3             	mov    %rsi,%rbx
    92a3:	48 83 ec 18          	sub    $0x18,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    92a7:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    92ab:	49 89 d4             	mov    %rdx,%r12
    92ae:	4c 2b 27             	sub    (%rdi),%r12
    92b1:	4c 89 e1             	mov    %r12,%rcx
    92b4:	48 c1 f9 03          	sar    $0x3,%rcx
	  if (__size > max_size() || __navail > max_size() - __size)
    92b8:	48 29 c8             	sub    %rcx,%rax
    92bb:	48 89 c6             	mov    %rax,%rsi
					 - this->_M_impl._M_finish);
    92be:	48 8b 47 10          	mov    0x10(%rdi),%rax
    92c2:	48 29 d0             	sub    %rdx,%rax
    92c5:	48 c1 f8 03          	sar    $0x3,%rax
	  if (__navail >= __n)
    92c9:	48 39 d8             	cmp    %rbx,%rax
    92cc:	0f 83 ae 00 00 00    	jae    9380 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x100>
	if (max_size() - size() < __n)
    92d2:	48 39 de             	cmp    %rbx,%rsi
    92d5:	0f 82 4e 01 00 00    	jb     9429 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x1a9>
	const size_type __len = size() + (std::max)(size(), __n);
    92db:	4c 8d 34 0b          	lea    (%rbx,%rcx,1),%r14
      if (__a < __b)
    92df:	48 39 d9             	cmp    %rbx,%rcx
    92e2:	0f 82 e8 00 00 00    	jb     93d0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x150>
    92e8:	49 bd f8 ff ff ff ff 	movabs $0x7ffffffffffffff8,%r13
    92ef:	ff ff 7f 
    92f2:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    92f6:	48 39 c8             	cmp    %rcx,%rax
    92f9:	0f 83 36 01 00 00    	jae    9435 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x1b5>
    92ff:	4c 89 ef             	mov    %r13,%rdi
    9302:	e8 69 a0 ff ff       	call   3370 <_Znwm@plt>
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    9307:	4c 8b 45 00          	mov    0x0(%rbp),%r8
      ptrdiff_t __count = __last - __first;
    930b:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
		      std::__uninitialized_default_n_a(__new_start + __size,
    930f:	49 01 c4             	add    %rax,%r12
    9312:	49 89 c7             	mov    %rax,%r15
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    9315:	49 01 c5             	add    %rax,%r13
    9318:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    931f:	00 
    9320:	4c 29 c1             	sub    %r8,%rcx
      if (__n <= 0)
    9323:	48 83 eb 01          	sub    $0x1,%rbx
    9327:	74 26                	je     934f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xcf>
      std::__fill_a(__first, __first + __n, __value);
    9329:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
	*__first = __tmp;
    932e:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    9335:	00 
    9336:	31 f6                	xor    %esi,%esi
    9338:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    933d:	4c 89 04 24          	mov    %r8,(%rsp)
    9341:	e8 7a 9e ff ff       	call   31c0 <memset@plt>
    9346:	4c 8b 04 24          	mov    (%rsp),%r8
    934a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      if (__count > 0)
    934f:	48 85 c9             	test   %rcx,%rcx
    9352:	0f 8f 98 00 00 00    	jg     93f0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x170>
	if (__p)
    9358:	4d 85 c0             	test   %r8,%r8
    935b:	0f 85 bf 00 00 00    	jne    9420 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x1a0>
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9361:	4b 8d 04 f7          	lea    (%r15,%r14,8),%rax
	      this->_M_impl._M_start = __new_start;
    9365:	4c 89 7d 00          	mov    %r15,0x0(%rbp)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9369:	48 89 45 08          	mov    %rax,0x8(%rbp)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    936d:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    }
    9371:	48 83 c4 18          	add    $0x18,%rsp
    9375:	5b                   	pop    %rbx
    9376:	5d                   	pop    %rbp
    9377:	41 5c                	pop    %r12
    9379:	41 5d                	pop    %r13
    937b:	41 5e                	pop    %r14
    937d:	41 5f                	pop    %r15
    937f:	c3                   	ret
    9380:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
	      ++__first;
    9387:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
      if (__n <= 0)
    938b:	48 83 eb 01          	sub    $0x1,%rbx
    938f:	74 1e                	je     93af <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x12f>
      std::__fill_a(__first, __first + __n, __value);
    9391:	48 8d 04 d9          	lea    (%rcx,%rbx,8),%rax
	*__first = __tmp;
    9395:	48 89 cf             	mov    %rcx,%rdi
    9398:	31 f6                	xor    %esi,%esi
    939a:	48 29 d0             	sub    %rdx,%rax
    939d:	48 8d 58 f8          	lea    -0x8(%rax),%rbx
    93a1:	48 89 da             	mov    %rbx,%rdx
    93a4:	e8 17 9e ff ff       	call   31c0 <memset@plt>
    93a9:	48 89 c1             	mov    %rax,%rcx
      for (; __first != __last; ++__first)
    93ac:	48 01 d9             	add    %rbx,%rcx
	      this->_M_impl._M_finish =
    93af:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    }
    93b3:	48 83 c4 18          	add    $0x18,%rsp
    93b7:	5b                   	pop    %rbx
    93b8:	5d                   	pop    %rbp
    93b9:	41 5c                	pop    %r12
    93bb:	41 5d                	pop    %r13
    93bd:	41 5e                	pop    %r14
    93bf:	41 5f                	pop    %r15
    93c1:	c3                   	ret
    93c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    93c8:	c3                   	ret
    93c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    93d0:	49 bd ff ff ff ff ff 	movabs $0xfffffffffffffff,%r13
    93d7:	ff ff 0f 
    93da:	4d 39 ee             	cmp    %r13,%r14
    93dd:	4d 0f 46 ee          	cmovbe %r14,%r13
    93e1:	49 c1 e5 03          	shl    $0x3,%r13
    93e5:	e9 15 ff ff ff       	jmp    92ff <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7f>
    93ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    93f0:	4c 89 c6             	mov    %r8,%rsi
    93f3:	48 89 ca             	mov    %rcx,%rdx
    93f6:	4c 89 ff             	mov    %r15,%rdi
    93f9:	4c 89 04 24          	mov    %r8,(%rsp)
    93fd:	e8 8e a2 ff ff       	call   3690 <memmove@plt>
			    - this->_M_impl._M_start);
    9402:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    9406:	4c 8b 04 24          	mov    (%rsp),%r8
    940a:	4c 29 c6             	sub    %r8,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    940d:	4c 89 c7             	mov    %r8,%rdi
    9410:	e8 7b 9f ff ff       	call   3390 <_ZdlPvm@plt>
    9415:	e9 47 ff ff ff       	jmp    9361 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xe1>
    941a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9420:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    9424:	4c 29 c6             	sub    %r8,%rsi
    9427:	eb e4                	jmp    940d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x18d>
	  __throw_length_error(__N(__s));
    9429:	48 8d 3d 67 10 00 00 	lea    0x1067(%rip),%rdi        # a497 <_IO_stdin_used+0x497>
    9430:	e8 6b 9d ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9435:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%rdx
    943c:	ff ff 0f 
    943f:	48 39 d0             	cmp    %rdx,%rax
    9442:	48 0f 47 c2          	cmova  %rdx,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9446:	4c 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%r13
    944d:	00 
    944e:	e9 ac fe ff ff       	jmp    92ff <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7f>
    9453:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    945a:	00 00 00 
    945d:	0f 1f 00             	nopl   (%rax)

0000000000009460 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
      if (__n != 0)
    9460:	48 85 f6             	test   %rsi,%rsi
    9463:	0f 84 3f 01 00 00    	je     95a8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x148>
	  if (__size > max_size() || __navail > max_size() - __size)
    9469:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9470:	ff ff 0f 
    vector<_Tp, _Alloc>::
    9473:	41 57                	push   %r15
    9475:	41 56                	push   %r14
    9477:	41 55                	push   %r13
    9479:	41 54                	push   %r12
    947b:	55                   	push   %rbp
    947c:	48 89 fd             	mov    %rdi,%rbp
    947f:	53                   	push   %rbx
    9480:	48 89 f3             	mov    %rsi,%rbx
    9483:	48 83 ec 18          	sub    $0x18,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9487:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    948b:	49 89 d4             	mov    %rdx,%r12
    948e:	4c 2b 27             	sub    (%rdi),%r12
    9491:	4c 89 e1             	mov    %r12,%rcx
    9494:	48 c1 f9 03          	sar    $0x3,%rcx
	  if (__size > max_size() || __navail > max_size() - __size)
    9498:	48 29 c8             	sub    %rcx,%rax
    949b:	48 89 c6             	mov    %rax,%rsi
					 - this->_M_impl._M_finish);
    949e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    94a2:	48 29 d0             	sub    %rdx,%rax
    94a5:	48 c1 f8 03          	sar    $0x3,%rax
	  if (__navail >= __n)
    94a9:	48 39 d8             	cmp    %rbx,%rax
    94ac:	0f 83 ae 00 00 00    	jae    9560 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x100>
	if (max_size() - size() < __n)
    94b2:	48 39 de             	cmp    %rbx,%rsi
    94b5:	0f 82 4e 01 00 00    	jb     9609 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x1a9>
	const size_type __len = size() + (std::max)(size(), __n);
    94bb:	4c 8d 34 0b          	lea    (%rbx,%rcx,1),%r14
      if (__a < __b)
    94bf:	48 39 d9             	cmp    %rbx,%rcx
    94c2:	0f 82 e8 00 00 00    	jb     95b0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x150>
    94c8:	49 bd f8 ff ff ff ff 	movabs $0x7ffffffffffffff8,%r13
    94cf:	ff ff 7f 
    94d2:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    94d6:	48 39 c8             	cmp    %rcx,%rax
    94d9:	0f 83 36 01 00 00    	jae    9615 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x1b5>
    94df:	4c 89 ef             	mov    %r13,%rdi
    94e2:	e8 89 9e ff ff       	call   3370 <_Znwm@plt>
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    94e7:	4c 8b 45 00          	mov    0x0(%rbp),%r8
      ptrdiff_t __count = __last - __first;
    94eb:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
		      std::__uninitialized_default_n_a(__new_start + __size,
    94ef:	49 01 c4             	add    %rax,%r12
    94f2:	49 89 c7             	mov    %rax,%r15
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    94f5:	49 01 c5             	add    %rax,%r13
    94f8:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    94ff:	00 
    9500:	4c 29 c1             	sub    %r8,%rcx
      if (__n <= 0)
    9503:	48 83 eb 01          	sub    $0x1,%rbx
    9507:	74 26                	je     952f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xcf>
      std::__fill_a(__first, __first + __n, __value);
    9509:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
	*__first = __tmp;
    950e:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    9515:	00 
    9516:	31 f6                	xor    %esi,%esi
    9518:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    951d:	4c 89 04 24          	mov    %r8,(%rsp)
    9521:	e8 9a 9c ff ff       	call   31c0 <memset@plt>
    9526:	4c 8b 04 24          	mov    (%rsp),%r8
    952a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      if (__count > 0)
    952f:	48 85 c9             	test   %rcx,%rcx
    9532:	0f 8f 98 00 00 00    	jg     95d0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x170>
	if (__p)
    9538:	4d 85 c0             	test   %r8,%r8
    953b:	0f 85 bf 00 00 00    	jne    9600 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x1a0>
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9541:	4b 8d 04 f7          	lea    (%r15,%r14,8),%rax
	      this->_M_impl._M_start = __new_start;
    9545:	4c 89 7d 00          	mov    %r15,0x0(%rbp)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9549:	48 89 45 08          	mov    %rax,0x8(%rbp)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    954d:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    }
    9551:	48 83 c4 18          	add    $0x18,%rsp
    9555:	5b                   	pop    %rbx
    9556:	5d                   	pop    %rbp
    9557:	41 5c                	pop    %r12
    9559:	41 5d                	pop    %r13
    955b:	41 5e                	pop    %r14
    955d:	41 5f                	pop    %r15
    955f:	c3                   	ret
    9560:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
	      ++__first;
    9567:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
      if (__n <= 0)
    956b:	48 83 eb 01          	sub    $0x1,%rbx
    956f:	74 1e                	je     958f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x12f>
      std::__fill_a(__first, __first + __n, __value);
    9571:	48 8d 04 d9          	lea    (%rcx,%rbx,8),%rax
	*__first = __tmp;
    9575:	48 89 cf             	mov    %rcx,%rdi
    9578:	31 f6                	xor    %esi,%esi
    957a:	48 29 d0             	sub    %rdx,%rax
    957d:	48 8d 58 f8          	lea    -0x8(%rax),%rbx
    9581:	48 89 da             	mov    %rbx,%rdx
    9584:	e8 37 9c ff ff       	call   31c0 <memset@plt>
    9589:	48 89 c1             	mov    %rax,%rcx
      for (; __first != __last; ++__first)
    958c:	48 01 d9             	add    %rbx,%rcx
	      this->_M_impl._M_finish =
    958f:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    }
    9593:	48 83 c4 18          	add    $0x18,%rsp
    9597:	5b                   	pop    %rbx
    9598:	5d                   	pop    %rbp
    9599:	41 5c                	pop    %r12
    959b:	41 5d                	pop    %r13
    959d:	41 5e                	pop    %r14
    959f:	41 5f                	pop    %r15
    95a1:	c3                   	ret
    95a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    95a8:	c3                   	ret
    95a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    95b0:	49 bd ff ff ff ff ff 	movabs $0xfffffffffffffff,%r13
    95b7:	ff ff 0f 
    95ba:	4d 39 ee             	cmp    %r13,%r14
    95bd:	4d 0f 46 ee          	cmovbe %r14,%r13
    95c1:	49 c1 e5 03          	shl    $0x3,%r13
    95c5:	e9 15 ff ff ff       	jmp    94df <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7f>
    95ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    95d0:	4c 89 c6             	mov    %r8,%rsi
    95d3:	48 89 ca             	mov    %rcx,%rdx
    95d6:	4c 89 ff             	mov    %r15,%rdi
    95d9:	4c 89 04 24          	mov    %r8,(%rsp)
    95dd:	e8 ae a0 ff ff       	call   3690 <memmove@plt>
			    - this->_M_impl._M_start);
    95e2:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    95e6:	4c 8b 04 24          	mov    (%rsp),%r8
    95ea:	4c 29 c6             	sub    %r8,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    95ed:	4c 89 c7             	mov    %r8,%rdi
    95f0:	e8 9b 9d ff ff       	call   3390 <_ZdlPvm@plt>
    95f5:	e9 47 ff ff ff       	jmp    9541 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xe1>
    95fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9600:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    9604:	4c 29 c6             	sub    %r8,%rsi
    9607:	eb e4                	jmp    95ed <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x18d>
	  __throw_length_error(__N(__s));
    9609:	48 8d 3d 87 0e 00 00 	lea    0xe87(%rip),%rdi        # a497 <_IO_stdin_used+0x497>
    9610:	e8 8b 9b ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9615:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%rdx
    961c:	ff ff 0f 
    961f:	48 39 d0             	cmp    %rdx,%rax
    9622:	48 0f 47 c2          	cmova  %rdx,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9626:	4c 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%r13
    962d:	00 
    962e:	e9 ac fe ff ff       	jmp    94df <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7f>
    9633:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    963a:	00 00 00 
    963d:	0f 1f 00             	nopl   (%rax)

0000000000009640 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm>:
      if (__n != 0)
    9640:	48 85 f6             	test   %rsi,%rsi
    9643:	0f 84 3f 01 00 00    	je     9788 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x148>
	  if (__size > max_size() || __navail > max_size() - __size)
    9649:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9650:	ff ff 0f 
    vector<_Tp, _Alloc>::
    9653:	41 57                	push   %r15
    9655:	41 56                	push   %r14
    9657:	41 55                	push   %r13
    9659:	41 54                	push   %r12
    965b:	55                   	push   %rbp
    965c:	48 89 fd             	mov    %rdi,%rbp
    965f:	53                   	push   %rbx
    9660:	48 89 f3             	mov    %rsi,%rbx
    9663:	48 83 ec 18          	sub    $0x18,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9667:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    966b:	49 89 d4             	mov    %rdx,%r12
    966e:	4c 2b 27             	sub    (%rdi),%r12
    9671:	4c 89 e1             	mov    %r12,%rcx
    9674:	48 c1 f9 03          	sar    $0x3,%rcx
	  if (__size > max_size() || __navail > max_size() - __size)
    9678:	48 29 c8             	sub    %rcx,%rax
    967b:	48 89 c6             	mov    %rax,%rsi
					 - this->_M_impl._M_finish);
    967e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    9682:	48 29 d0             	sub    %rdx,%rax
    9685:	48 c1 f8 03          	sar    $0x3,%rax
	  if (__navail >= __n)
    9689:	48 39 d8             	cmp    %rbx,%rax
    968c:	0f 83 ae 00 00 00    	jae    9740 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x100>
	if (max_size() - size() < __n)
    9692:	48 39 de             	cmp    %rbx,%rsi
    9695:	0f 82 4e 01 00 00    	jb     97e9 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x1a9>
	const size_type __len = size() + (std::max)(size(), __n);
    969b:	4c 8d 34 0b          	lea    (%rbx,%rcx,1),%r14
      if (__a < __b)
    969f:	48 39 d9             	cmp    %rbx,%rcx
    96a2:	0f 82 e8 00 00 00    	jb     9790 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x150>
    96a8:	49 bd f8 ff ff ff ff 	movabs $0x7ffffffffffffff8,%r13
    96af:	ff ff 7f 
    96b2:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    96b6:	48 39 c8             	cmp    %rcx,%rax
    96b9:	0f 83 36 01 00 00    	jae    97f5 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x1b5>
    96bf:	4c 89 ef             	mov    %r13,%rdi
    96c2:	e8 a9 9c ff ff       	call   3370 <_Znwm@plt>
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    96c7:	4c 8b 45 00          	mov    0x0(%rbp),%r8
      ptrdiff_t __count = __last - __first;
    96cb:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
		      std::__uninitialized_default_n_a(__new_start + __size,
    96cf:	49 01 c4             	add    %rax,%r12
    96d2:	49 89 c7             	mov    %rax,%r15
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    96d5:	49 01 c5             	add    %rax,%r13
    96d8:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    96df:	00 
    96e0:	4c 29 c1             	sub    %r8,%rcx
      if (__n <= 0)
    96e3:	48 83 eb 01          	sub    $0x1,%rbx
    96e7:	74 26                	je     970f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0xcf>
      std::__fill_a(__first, __first + __n, __value);
    96e9:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
	*__first = __tmp;
    96ee:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    96f5:	00 
    96f6:	31 f6                	xor    %esi,%esi
    96f8:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    96fd:	4c 89 04 24          	mov    %r8,(%rsp)
    9701:	e8 ba 9a ff ff       	call   31c0 <memset@plt>
    9706:	4c 8b 04 24          	mov    (%rsp),%r8
    970a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      if (__count > 0)
    970f:	48 85 c9             	test   %rcx,%rcx
    9712:	0f 8f 98 00 00 00    	jg     97b0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x170>
	if (__p)
    9718:	4d 85 c0             	test   %r8,%r8
    971b:	0f 85 bf 00 00 00    	jne    97e0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x1a0>
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9721:	4b 8d 04 f7          	lea    (%r15,%r14,8),%rax
	      this->_M_impl._M_start = __new_start;
    9725:	4c 89 7d 00          	mov    %r15,0x0(%rbp)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9729:	48 89 45 08          	mov    %rax,0x8(%rbp)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    972d:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    }
    9731:	48 83 c4 18          	add    $0x18,%rsp
    9735:	5b                   	pop    %rbx
    9736:	5d                   	pop    %rbp
    9737:	41 5c                	pop    %r12
    9739:	41 5d                	pop    %r13
    973b:	41 5e                	pop    %r14
    973d:	41 5f                	pop    %r15
    973f:	c3                   	ret
    9740:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
	      ++__first;
    9747:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
      if (__n <= 0)
    974b:	48 83 eb 01          	sub    $0x1,%rbx
    974f:	74 1e                	je     976f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x12f>
      std::__fill_a(__first, __first + __n, __value);
    9751:	48 8d 04 d9          	lea    (%rcx,%rbx,8),%rax
	*__first = __tmp;
    9755:	48 89 cf             	mov    %rcx,%rdi
    9758:	31 f6                	xor    %esi,%esi
    975a:	48 29 d0             	sub    %rdx,%rax
    975d:	48 8d 58 f8          	lea    -0x8(%rax),%rbx
    9761:	48 89 da             	mov    %rbx,%rdx
    9764:	e8 57 9a ff ff       	call   31c0 <memset@plt>
    9769:	48 89 c1             	mov    %rax,%rcx
      for (; __first != __last; ++__first)
    976c:	48 01 d9             	add    %rbx,%rcx
	      this->_M_impl._M_finish =
    976f:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    }
    9773:	48 83 c4 18          	add    $0x18,%rsp
    9777:	5b                   	pop    %rbx
    9778:	5d                   	pop    %rbp
    9779:	41 5c                	pop    %r12
    977b:	41 5d                	pop    %r13
    977d:	41 5e                	pop    %r14
    977f:	41 5f                	pop    %r15
    9781:	c3                   	ret
    9782:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9788:	c3                   	ret
    9789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9790:	49 bd ff ff ff ff ff 	movabs $0xfffffffffffffff,%r13
    9797:	ff ff 0f 
    979a:	4d 39 ee             	cmp    %r13,%r14
    979d:	4d 0f 46 ee          	cmovbe %r14,%r13
    97a1:	49 c1 e5 03          	shl    $0x3,%r13
    97a5:	e9 15 ff ff ff       	jmp    96bf <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x7f>
    97aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    97b0:	4c 89 c6             	mov    %r8,%rsi
    97b3:	48 89 ca             	mov    %rcx,%rdx
    97b6:	4c 89 ff             	mov    %r15,%rdi
    97b9:	4c 89 04 24          	mov    %r8,(%rsp)
    97bd:	e8 ce 9e ff ff       	call   3690 <memmove@plt>
			    - this->_M_impl._M_start);
    97c2:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    97c6:	4c 8b 04 24          	mov    (%rsp),%r8
    97ca:	4c 29 c6             	sub    %r8,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    97cd:	4c 89 c7             	mov    %r8,%rdi
    97d0:	e8 bb 9b ff ff       	call   3390 <_ZdlPvm@plt>
    97d5:	e9 47 ff ff ff       	jmp    9721 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0xe1>
    97da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    97e0:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    97e4:	4c 29 c6             	sub    %r8,%rsi
    97e7:	eb e4                	jmp    97cd <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x18d>
	  __throw_length_error(__N(__s));
    97e9:	48 8d 3d a7 0c 00 00 	lea    0xca7(%rip),%rdi        # a497 <_IO_stdin_used+0x497>
    97f0:	e8 ab 99 ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    97f5:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%rdx
    97fc:	ff ff 0f 
    97ff:	48 39 d0             	cmp    %rdx,%rax
    9802:	48 0f 47 c2          	cmova  %rdx,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9806:	4c 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%r13
    980d:	00 
    980e:	e9 ac fe ff ff       	jmp    96bf <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x7f>
    9813:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    981a:	00 00 00 
    981d:	0f 1f 00             	nopl   (%rax)

0000000000009820 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
      if (__n != 0)
    9820:	48 85 f6             	test   %rsi,%rsi
    9823:	0f 84 3f 01 00 00    	je     9968 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x148>
	  if (__size > max_size() || __navail > max_size() - __size)
    9829:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9830:	ff ff 0f 
    vector<_Tp, _Alloc>::
    9833:	41 57                	push   %r15
    9835:	41 56                	push   %r14
    9837:	41 55                	push   %r13
    9839:	41 54                	push   %r12
    983b:	55                   	push   %rbp
    983c:	48 89 fd             	mov    %rdi,%rbp
    983f:	53                   	push   %rbx
    9840:	48 89 f3             	mov    %rsi,%rbx
    9843:	48 83 ec 18          	sub    $0x18,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9847:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    984b:	49 89 d4             	mov    %rdx,%r12
    984e:	4c 2b 27             	sub    (%rdi),%r12
    9851:	4c 89 e1             	mov    %r12,%rcx
    9854:	48 c1 f9 03          	sar    $0x3,%rcx
	  if (__size > max_size() || __navail > max_size() - __size)
    9858:	48 29 c8             	sub    %rcx,%rax
    985b:	48 89 c6             	mov    %rax,%rsi
					 - this->_M_impl._M_finish);
    985e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    9862:	48 29 d0             	sub    %rdx,%rax
    9865:	48 c1 f8 03          	sar    $0x3,%rax
	  if (__navail >= __n)
    9869:	48 39 d8             	cmp    %rbx,%rax
    986c:	0f 83 ae 00 00 00    	jae    9920 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x100>
	if (max_size() - size() < __n)
    9872:	48 39 de             	cmp    %rbx,%rsi
    9875:	0f 82 4e 01 00 00    	jb     99c9 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x1a9>
	const size_type __len = size() + (std::max)(size(), __n);
    987b:	4c 8d 34 0b          	lea    (%rbx,%rcx,1),%r14
      if (__a < __b)
    987f:	48 39 d9             	cmp    %rbx,%rcx
    9882:	0f 82 e8 00 00 00    	jb     9970 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x150>
    9888:	49 bd f8 ff ff ff ff 	movabs $0x7ffffffffffffff8,%r13
    988f:	ff ff 7f 
    9892:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9896:	48 39 c8             	cmp    %rcx,%rax
    9899:	0f 83 36 01 00 00    	jae    99d5 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x1b5>
    989f:	4c 89 ef             	mov    %r13,%rdi
    98a2:	e8 c9 9a ff ff       	call   3370 <_Znwm@plt>
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    98a7:	4c 8b 45 00          	mov    0x0(%rbp),%r8
      ptrdiff_t __count = __last - __first;
    98ab:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
		      std::__uninitialized_default_n_a(__new_start + __size,
    98af:	49 01 c4             	add    %rax,%r12
    98b2:	49 89 c7             	mov    %rax,%r15
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    98b5:	49 01 c5             	add    %rax,%r13
    98b8:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    98bf:	00 
    98c0:	4c 29 c1             	sub    %r8,%rcx
      if (__n <= 0)
    98c3:	48 83 eb 01          	sub    $0x1,%rbx
    98c7:	74 26                	je     98ef <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xcf>
      std::__fill_a(__first, __first + __n, __value);
    98c9:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
	*__first = __tmp;
    98ce:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    98d5:	00 
    98d6:	31 f6                	xor    %esi,%esi
    98d8:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    98dd:	4c 89 04 24          	mov    %r8,(%rsp)
    98e1:	e8 da 98 ff ff       	call   31c0 <memset@plt>
    98e6:	4c 8b 04 24          	mov    (%rsp),%r8
    98ea:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      if (__count > 0)
    98ef:	48 85 c9             	test   %rcx,%rcx
    98f2:	0f 8f 98 00 00 00    	jg     9990 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x170>
	if (__p)
    98f8:	4d 85 c0             	test   %r8,%r8
    98fb:	0f 85 bf 00 00 00    	jne    99c0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x1a0>
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9901:	4b 8d 04 f7          	lea    (%r15,%r14,8),%rax
	      this->_M_impl._M_start = __new_start;
    9905:	4c 89 7d 00          	mov    %r15,0x0(%rbp)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9909:	48 89 45 08          	mov    %rax,0x8(%rbp)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    990d:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    }
    9911:	48 83 c4 18          	add    $0x18,%rsp
    9915:	5b                   	pop    %rbx
    9916:	5d                   	pop    %rbp
    9917:	41 5c                	pop    %r12
    9919:	41 5d                	pop    %r13
    991b:	41 5e                	pop    %r14
    991d:	41 5f                	pop    %r15
    991f:	c3                   	ret
    9920:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
	      ++__first;
    9927:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
      if (__n <= 0)
    992b:	48 83 eb 01          	sub    $0x1,%rbx
    992f:	74 1e                	je     994f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x12f>
      std::__fill_a(__first, __first + __n, __value);
    9931:	48 8d 04 d9          	lea    (%rcx,%rbx,8),%rax
	*__first = __tmp;
    9935:	48 89 cf             	mov    %rcx,%rdi
    9938:	31 f6                	xor    %esi,%esi
    993a:	48 29 d0             	sub    %rdx,%rax
    993d:	48 8d 58 f8          	lea    -0x8(%rax),%rbx
    9941:	48 89 da             	mov    %rbx,%rdx
    9944:	e8 77 98 ff ff       	call   31c0 <memset@plt>
    9949:	48 89 c1             	mov    %rax,%rcx
      for (; __first != __last; ++__first)
    994c:	48 01 d9             	add    %rbx,%rcx
	      this->_M_impl._M_finish =
    994f:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    }
    9953:	48 83 c4 18          	add    $0x18,%rsp
    9957:	5b                   	pop    %rbx
    9958:	5d                   	pop    %rbp
    9959:	41 5c                	pop    %r12
    995b:	41 5d                	pop    %r13
    995d:	41 5e                	pop    %r14
    995f:	41 5f                	pop    %r15
    9961:	c3                   	ret
    9962:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9968:	c3                   	ret
    9969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9970:	49 bd ff ff ff ff ff 	movabs $0xfffffffffffffff,%r13
    9977:	ff ff 0f 
    997a:	4d 39 ee             	cmp    %r13,%r14
    997d:	4d 0f 46 ee          	cmovbe %r14,%r13
    9981:	49 c1 e5 03          	shl    $0x3,%r13
    9985:	e9 15 ff ff ff       	jmp    989f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7f>
    998a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    9990:	4c 89 c6             	mov    %r8,%rsi
    9993:	48 89 ca             	mov    %rcx,%rdx
    9996:	4c 89 ff             	mov    %r15,%rdi
    9999:	4c 89 04 24          	mov    %r8,(%rsp)
    999d:	e8 ee 9c ff ff       	call   3690 <memmove@plt>
			    - this->_M_impl._M_start);
    99a2:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    99a6:	4c 8b 04 24          	mov    (%rsp),%r8
    99aa:	4c 29 c6             	sub    %r8,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    99ad:	4c 89 c7             	mov    %r8,%rdi
    99b0:	e8 db 99 ff ff       	call   3390 <_ZdlPvm@plt>
    99b5:	e9 47 ff ff ff       	jmp    9901 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xe1>
    99ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    99c0:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    99c4:	4c 29 c6             	sub    %r8,%rsi
    99c7:	eb e4                	jmp    99ad <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x18d>
	  __throw_length_error(__N(__s));
    99c9:	48 8d 3d c7 0a 00 00 	lea    0xac7(%rip),%rdi        # a497 <_IO_stdin_used+0x497>
    99d0:	e8 cb 97 ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    99d5:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%rdx
    99dc:	ff ff 0f 
    99df:	48 39 d0             	cmp    %rdx,%rax
    99e2:	48 0f 47 c2          	cmova  %rdx,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    99e6:	4c 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%r13
    99ed:	00 
    99ee:	e9 ac fe ff ff       	jmp    989f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7f>
    99f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    99fa:	00 00 00 
    99fd:	0f 1f 00             	nopl   (%rax)

0000000000009a00 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
      if (__n != 0)
    9a00:	48 85 f6             	test   %rsi,%rsi
    9a03:	0f 84 3f 01 00 00    	je     9b48 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x148>
	  if (__size > max_size() || __navail > max_size() - __size)
    9a09:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9a10:	ff ff 0f 
    vector<_Tp, _Alloc>::
    9a13:	41 57                	push   %r15
    9a15:	41 56                	push   %r14
    9a17:	41 55                	push   %r13
    9a19:	41 54                	push   %r12
    9a1b:	55                   	push   %rbp
    9a1c:	48 89 fd             	mov    %rdi,%rbp
    9a1f:	53                   	push   %rbx
    9a20:	48 89 f3             	mov    %rsi,%rbx
    9a23:	48 83 ec 18          	sub    $0x18,%rsp
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9a27:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    9a2b:	49 89 d4             	mov    %rdx,%r12
    9a2e:	4c 2b 27             	sub    (%rdi),%r12
    9a31:	4c 89 e1             	mov    %r12,%rcx
    9a34:	48 c1 f9 03          	sar    $0x3,%rcx
	  if (__size > max_size() || __navail > max_size() - __size)
    9a38:	48 29 c8             	sub    %rcx,%rax
    9a3b:	48 89 c6             	mov    %rax,%rsi
					 - this->_M_impl._M_finish);
    9a3e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    9a42:	48 29 d0             	sub    %rdx,%rax
    9a45:	48 c1 f8 03          	sar    $0x3,%rax
	  if (__navail >= __n)
    9a49:	48 39 d8             	cmp    %rbx,%rax
    9a4c:	0f 83 ae 00 00 00    	jae    9b00 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x100>
	if (max_size() - size() < __n)
    9a52:	48 39 de             	cmp    %rbx,%rsi
    9a55:	0f 82 4e 01 00 00    	jb     9ba9 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x1a9>
	const size_type __len = size() + (std::max)(size(), __n);
    9a5b:	4c 8d 34 0b          	lea    (%rbx,%rcx,1),%r14
      if (__a < __b)
    9a5f:	48 39 d9             	cmp    %rbx,%rcx
    9a62:	0f 82 e8 00 00 00    	jb     9b50 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x150>
    9a68:	49 bd f8 ff ff ff ff 	movabs $0x7ffffffffffffff8,%r13
    9a6f:	ff ff 7f 
    9a72:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9a76:	48 39 c8             	cmp    %rcx,%rax
    9a79:	0f 83 36 01 00 00    	jae    9bb5 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x1b5>
    9a7f:	4c 89 ef             	mov    %r13,%rdi
    9a82:	e8 e9 98 ff ff       	call   3370 <_Znwm@plt>
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    9a87:	4c 8b 45 00          	mov    0x0(%rbp),%r8
      ptrdiff_t __count = __last - __first;
    9a8b:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
		      std::__uninitialized_default_n_a(__new_start + __size,
    9a8f:	49 01 c4             	add    %rax,%r12
    9a92:	49 89 c7             	mov    %rax,%r15
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    9a95:	49 01 c5             	add    %rax,%r13
    9a98:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    9a9f:	00 
    9aa0:	4c 29 c1             	sub    %r8,%rcx
      if (__n <= 0)
    9aa3:	48 83 eb 01          	sub    $0x1,%rbx
    9aa7:	74 26                	je     9acf <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xcf>
      std::__fill_a(__first, __first + __n, __value);
    9aa9:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
	*__first = __tmp;
    9aae:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    9ab5:	00 
    9ab6:	31 f6                	xor    %esi,%esi
    9ab8:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    9abd:	4c 89 04 24          	mov    %r8,(%rsp)
    9ac1:	e8 fa 96 ff ff       	call   31c0 <memset@plt>
    9ac6:	4c 8b 04 24          	mov    (%rsp),%r8
    9aca:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
      if (__count > 0)
    9acf:	48 85 c9             	test   %rcx,%rcx
    9ad2:	0f 8f 98 00 00 00    	jg     9b70 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x170>
	if (__p)
    9ad8:	4d 85 c0             	test   %r8,%r8
    9adb:	0f 85 bf 00 00 00    	jne    9ba0 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x1a0>
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9ae1:	4b 8d 04 f7          	lea    (%r15,%r14,8),%rax
	      this->_M_impl._M_start = __new_start;
    9ae5:	4c 89 7d 00          	mov    %r15,0x0(%rbp)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9ae9:	48 89 45 08          	mov    %rax,0x8(%rbp)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    9aed:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
    }
    9af1:	48 83 c4 18          	add    $0x18,%rsp
    9af5:	5b                   	pop    %rbx
    9af6:	5d                   	pop    %rbp
    9af7:	41 5c                	pop    %r12
    9af9:	41 5d                	pop    %r13
    9afb:	41 5e                	pop    %r14
    9afd:	41 5f                	pop    %r15
    9aff:	c3                   	ret
    9b00:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
	      ++__first;
    9b07:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
      if (__n <= 0)
    9b0b:	48 83 eb 01          	sub    $0x1,%rbx
    9b0f:	74 1e                	je     9b2f <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x12f>
      std::__fill_a(__first, __first + __n, __value);
    9b11:	48 8d 04 d9          	lea    (%rcx,%rbx,8),%rax
	*__first = __tmp;
    9b15:	48 89 cf             	mov    %rcx,%rdi
    9b18:	31 f6                	xor    %esi,%esi
    9b1a:	48 29 d0             	sub    %rdx,%rax
    9b1d:	48 8d 58 f8          	lea    -0x8(%rax),%rbx
    9b21:	48 89 da             	mov    %rbx,%rdx
    9b24:	e8 97 96 ff ff       	call   31c0 <memset@plt>
    9b29:	48 89 c1             	mov    %rax,%rcx
      for (; __first != __last; ++__first)
    9b2c:	48 01 d9             	add    %rbx,%rcx
	      this->_M_impl._M_finish =
    9b2f:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    }
    9b33:	48 83 c4 18          	add    $0x18,%rsp
    9b37:	5b                   	pop    %rbx
    9b38:	5d                   	pop    %rbp
    9b39:	41 5c                	pop    %r12
    9b3b:	41 5d                	pop    %r13
    9b3d:	41 5e                	pop    %r14
    9b3f:	41 5f                	pop    %r15
    9b41:	c3                   	ret
    9b42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9b48:	c3                   	ret
    9b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9b50:	49 bd ff ff ff ff ff 	movabs $0xfffffffffffffff,%r13
    9b57:	ff ff 0f 
    9b5a:	4d 39 ee             	cmp    %r13,%r14
    9b5d:	4d 0f 46 ee          	cmovbe %r14,%r13
    9b61:	49 c1 e5 03          	shl    $0x3,%r13
    9b65:	e9 15 ff ff ff       	jmp    9a7f <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7f>
    9b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    9b70:	4c 89 c6             	mov    %r8,%rsi
    9b73:	48 89 ca             	mov    %rcx,%rdx
    9b76:	4c 89 ff             	mov    %r15,%rdi
    9b79:	4c 89 04 24          	mov    %r8,(%rsp)
    9b7d:	e8 0e 9b ff ff       	call   3690 <memmove@plt>
			    - this->_M_impl._M_start);
    9b82:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    9b86:	4c 8b 04 24          	mov    (%rsp),%r8
    9b8a:	4c 29 c6             	sub    %r8,%rsi
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    9b8d:	4c 89 c7             	mov    %r8,%rdi
    9b90:	e8 fb 97 ff ff       	call   3390 <_ZdlPvm@plt>
    9b95:	e9 47 ff ff ff       	jmp    9ae1 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xe1>
    9b9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9ba0:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    9ba4:	4c 29 c6             	sub    %r8,%rsi
    9ba7:	eb e4                	jmp    9b8d <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x18d>
	  __throw_length_error(__N(__s));
    9ba9:	48 8d 3d e7 08 00 00 	lea    0x8e7(%rip),%rdi        # a497 <_IO_stdin_used+0x497>
    9bb0:	e8 eb 95 ff ff       	call   31a0 <_ZSt20__throw_length_errorPKc@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9bb5:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%rdx
    9bbc:	ff ff 0f 
    9bbf:	48 39 d0             	cmp    %rdx,%rax
    9bc2:	48 0f 47 c2          	cmova  %rdx,%rax
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9bc6:	4c 8d 2c c5 00 00 00 	lea    0x0(,%rax,8),%r13
    9bcd:	00 
    9bce:	e9 ac fe ff ff       	jmp    9a7f <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7f>
    9bd3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9bda:	00 00 00 
    9bdd:	0f 1f 00             	nopl   (%rax)

0000000000009be0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    9be0:	41 57                	push   %r15
      { return &this->_M_impl._M_header; }
    9be2:	48 8d 47 08          	lea    0x8(%rdi),%rax
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    9be6:	41 56                	push   %r14
    9be8:	41 55                	push   %r13
    9bea:	41 54                	push   %r12
    9bec:	55                   	push   %rbp
    9bed:	53                   	push   %rbx
    9bee:	48 83 ec 28          	sub    $0x28,%rsp
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    9bf2:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
      { return &this->_M_impl._M_header; }
    9bf6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
      while (__x != 0)
    9bfb:	48 85 db             	test   %rbx,%rbx
    9bfe:	0f 84 c4 00 00 00    	je     9cc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xe8>
    9c04:	48 8b 06             	mov    (%rsi),%rax
    9c07:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9c0b:	41 be 00 00 00 80    	mov    $0x80000000,%r14d
    9c11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9c16:	eb 53                	jmp    9c6b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x8b>
    9c18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9c1f:	00 
    9c20:	4c 8b 7b 20          	mov    0x20(%rbx),%r15
    9c24:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    9c29:	4c 89 ea             	mov    %r13,%rdx
    9c2c:	4c 89 ff             	mov    %r15,%rdi
    9c2f:	e8 1c 95 ff ff       	call   3150 <memcmp@plt>
	if (!__r)
    9c34:	85 c0                	test   %eax,%eax
    9c36:	0f 85 ac 00 00 00    	jne    9ce8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x108>
	const difference_type __d = difference_type(__n1 - __n2);
    9c3c:	4c 89 e0             	mov    %r12,%rax
    9c3f:	48 29 e8             	sub    %rbp,%rax
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9c42:	4c 39 f0             	cmp    %r14,%rax
    9c45:	0f 8d a3 00 00 00    	jge    9cee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x10e>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    9c4b:	48 b9 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rcx
    9c52:	ff ff ff 
    9c55:	48 39 c8             	cmp    %rcx,%rax
    9c58:	7e 08                	jle    9c62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x82>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
    9c5a:	85 c0                	test   %eax,%eax
    9c5c:	0f 89 8c 00 00 00    	jns    9cee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x10e>
      { return static_cast<_Link_type>(__x->_M_right); }
    9c62:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
      while (__x != 0)
    9c66:	48 85 db             	test   %rbx,%rbx
    9c69:	74 5d                	je     9cc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xe8>
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    9c6b:	4c 8b 63 28          	mov    0x28(%rbx),%r12
      compare(const basic_string& __str) const
    9c6f:	49 89 ed             	mov    %rbp,%r13
    9c72:	49 39 ec             	cmp    %rbp,%r12
    9c75:	4d 0f 46 ec          	cmovbe %r12,%r13
	if (__n == 0)
    9c79:	4d 85 ed             	test   %r13,%r13
    9c7c:	75 a2                	jne    9c20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x40>
	const difference_type __d = difference_type(__n1 - __n2);
    9c7e:	4c 89 e0             	mov    %r12,%rax
    9c81:	48 29 e8             	sub    %rbp,%rax
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9c84:	4c 39 f0             	cmp    %r14,%rax
    9c87:	7d 13                	jge    9c9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xbc>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    9c89:	48 b9 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rcx
    9c90:	ff ff ff 
    9c93:	48 39 c8             	cmp    %rcx,%rax
    9c96:	7e ca                	jle    9c62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x82>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
    9c98:	85 c0                	test   %eax,%eax
    9c9a:	78 c6                	js     9c62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x82>
	const difference_type __d = difference_type(__n1 - __n2);
    9c9c:	48 89 e8             	mov    %rbp,%rax
    9c9f:	4c 29 e0             	sub    %r12,%rax
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9ca2:	4c 39 f0             	cmp    %r14,%rax
    9ca5:	7d 66                	jge    9d0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x12d>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    9ca7:	48 b9 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rcx
    9cae:	ff ff ff 
    9cb1:	48 39 c8             	cmp    %rcx,%rax
    9cb4:	7e 04                	jle    9cba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xda>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
    9cb6:	85 c0                	test   %eax,%eax
    9cb8:	79 53                	jns    9d0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x12d>
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    9cba:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
	    __y = __x, __x = _S_left(__x);
    9cbf:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
      while (__x != 0)
    9cc3:	48 85 db             	test   %rbx,%rbx
    9cc6:	75 a3                	jne    9c6b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x8b>
	    __y = __x, __x = _S_left(__x);
    9cc8:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    }
    9ccd:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    9cd2:	48 83 c4 28          	add    $0x28,%rsp
    9cd6:	48 89 d8             	mov    %rbx,%rax
    9cd9:	5b                   	pop    %rbx
    9cda:	5d                   	pop    %rbp
    9cdb:	41 5c                	pop    %r12
    9cdd:	41 5d                	pop    %r13
    9cdf:	41 5e                	pop    %r14
    9ce1:	41 5f                	pop    %r15
    9ce3:	c3                   	ret
    9ce4:	0f 1f 40 00          	nopl   0x0(%rax)
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
    9ce8:	0f 88 74 ff ff ff    	js     9c62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x82>
	return __builtin_memcmp(__s1, __s2, __n);
    9cee:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    9cf3:	4c 89 ea             	mov    %r13,%rdx
    9cf6:	4c 89 fe             	mov    %r15,%rsi
    9cf9:	e8 52 94 ff ff       	call   3150 <memcmp@plt>
	if (!__r)
    9cfe:	85 c0                	test   %eax,%eax
    9d00:	75 b4                	jne    9cb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xd6>
	const difference_type __d = difference_type(__n1 - __n2);
    9d02:	48 89 e8             	mov    %rbp,%rax
    9d05:	4c 29 e0             	sub    %r12,%rax
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9d08:	4c 39 f0             	cmp    %r14,%rax
    9d0b:	7c 9a                	jl     9ca7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xc7>
      { return static_cast<_Link_type>(__x->_M_right); }
    9d0d:	4c 8b 73 18          	mov    0x18(%rbx),%r14
      { return static_cast<_Link_type>(__x->_M_left); }
    9d11:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
      while (__x != 0)
    9d15:	4d 85 f6             	test   %r14,%r14
    9d18:	74 70                	je     9d8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x1aa>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    9d1a:	49 bc ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%r12
    9d21:	ff ff ff 
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9d24:	41 bd 00 00 00 80    	mov    $0x80000000,%r13d
    9d2a:	eb 12                	jmp    9d3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x15e>
    9d2c:	0f 1f 40 00          	nopl   0x0(%rax)
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    9d30:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
	  __y = __x, __x = _S_left(__x);
    9d35:	4d 8b 76 10          	mov    0x10(%r14),%r14
      while (__x != 0)
    9d39:	4d 85 f6             	test   %r14,%r14
    9d3c:	74 4c                	je     9d8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x1aa>
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    9d3e:	4d 8b 4e 28          	mov    0x28(%r14),%r9
      compare(const basic_string& __str) const
    9d42:	48 89 ea             	mov    %rbp,%rdx
    9d45:	49 39 e9             	cmp    %rbp,%r9
    9d48:	49 0f 46 d1          	cmovbe %r9,%rdx
	if (__n == 0)
    9d4c:	48 85 d2             	test   %rdx,%rdx
    9d4f:	74 1c                	je     9d6d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x18d>
	return __builtin_memcmp(__s1, __s2, __n);
    9d51:	49 8b 76 20          	mov    0x20(%r14),%rsi
    9d55:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    9d5a:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    9d5f:	e8 ec 93 ff ff       	call   3150 <memcmp@plt>
	if (!__r)
    9d64:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    9d69:	85 c0                	test   %eax,%eax
    9d6b:	75 10                	jne    9d7d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x19d>
	const difference_type __d = difference_type(__n1 - __n2);
    9d6d:	48 89 e8             	mov    %rbp,%rax
    9d70:	4c 29 c8             	sub    %r9,%rax
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9d73:	4c 39 e8             	cmp    %r13,%rax
    9d76:	7d 09                	jge    9d81 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x1a1>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    9d78:	4c 39 e0             	cmp    %r12,%rax
    9d7b:	7e b3                	jle    9d30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x150>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
    9d7d:	85 c0                	test   %eax,%eax
    9d7f:	78 af                	js     9d30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x150>
      { return static_cast<_Link_type>(__x->_M_right); }
    9d81:	4d 8b 76 18          	mov    0x18(%r14),%r14
      while (__x != 0)
    9d85:	4d 85 f6             	test   %r14,%r14
    9d88:	75 b4                	jne    9d3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x15e>
      while (__x != 0)
    9d8a:	4d 85 ff             	test   %r15,%r15
    9d8d:	0f 84 3a ff ff ff    	je     9ccd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xed>
    9d93:	49 bc ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%r12
    9d9a:	ff ff ff 
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9d9d:	41 bd 00 00 00 80    	mov    $0x80000000,%r13d
    9da3:	eb 10                	jmp    9db5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x1d5>
    9da5:	0f 1f 00             	nopl   (%rax)
      { return static_cast<_Link_type>(__x->_M_right); }
    9da8:	4d 8b 7f 18          	mov    0x18(%r15),%r15
      while (__x != 0)
    9dac:	4d 85 ff             	test   %r15,%r15
    9daf:	0f 84 18 ff ff ff    	je     9ccd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xed>
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    9db5:	4d 8b 77 28          	mov    0x28(%r15),%r14
      compare(const basic_string& __str) const
    9db9:	48 89 ea             	mov    %rbp,%rdx
    9dbc:	49 39 ee             	cmp    %rbp,%r14
    9dbf:	49 0f 46 d6          	cmovbe %r14,%rdx
	if (__n == 0)
    9dc3:	48 85 d2             	test   %rdx,%rdx
    9dc6:	74 12                	je     9dda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x1fa>
	return __builtin_memcmp(__s1, __s2, __n);
    9dc8:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    9dcc:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    9dd1:	e8 7a 93 ff ff       	call   3150 <memcmp@plt>
	if (!__r)
    9dd6:	85 c0                	test   %eax,%eax
    9dd8:	75 13                	jne    9ded <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x20d>
	const difference_type __d = difference_type(__n1 - __n2);
    9dda:	4d 89 f0             	mov    %r14,%r8
    9ddd:	49 29 e8             	sub    %rbp,%r8
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
    9de0:	4d 39 e8             	cmp    %r13,%r8
    9de3:	7d 0c                	jge    9df1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x211>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
    9de5:	4d 39 e0             	cmp    %r12,%r8
    9de8:	7e be                	jle    9da8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x1c8>
	  return int(__d);
    9dea:	44 89 c0             	mov    %r8d,%eax
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    9ded:	85 c0                	test   %eax,%eax
    9def:	78 b7                	js     9da8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x1c8>
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    9df1:	4c 89 fb             	mov    %r15,%rbx
	  __y = __x, __x = _S_left(__x);
    9df4:	4d 8b 7f 10          	mov    0x10(%r15),%r15
    9df8:	eb b2                	jmp    9dac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x1cc>
    9dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000009e00 <_ZN4rtvc6Vertex21getBindingDescriptionEv>:

  bindingDescription.binding = 0;
  bindingDescription.stride = sizeof(Vertex);
  bindingDescription.inputRate = VK_VERTEX_INPUT_RATE_VERTEX;

  return bindingDescription;
    9e00:	48 b8 00 00 00 00 14 	movabs $0x1400000000,%rax
    9e07:	00 00 00 
}
    9e0a:	31 d2                	xor    %edx,%edx
    9e0c:	c3                   	ret
    9e0d:	90                   	nop
    9e0e:	66 90                	xchg   %ax,%ax

0000000000009e10 <_ZN4rtvc6Vertex24getAttributeDescriptionsEv>:
  attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
  attributeDescriptions[0].offset = offsetof(Vertex, pos);

  attributeDescriptions[1].binding = 0;
  attributeDescriptions[1].location = 1;
  attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
    9e10:	48 8b 15 59 07 00 00 	mov    0x759(%rip),%rdx        # a570 <_ZTSSt19bad_optional_access+0xa0>
  std::array<VkVertexInputAttributeDescription, 2> attributeDescriptions{};
    9e17:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9e1b:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    9e22:	00 
Vertex::getAttributeDescriptions() {
    9e23:	48 89 f8             	mov    %rdi,%rax
  std::array<VkVertexInputAttributeDescription, 2> attributeDescriptions{};
    9e26:	0f 11 07             	movups %xmm0,(%rdi)
  attributeDescriptions[1].location = 1;
    9e29:	c7 47 10 01 00 00 00 	movl   $0x1,0x10(%rdi)
  attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
    9e30:	c7 47 08 67 00 00 00 	movl   $0x67,0x8(%rdi)
  attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
    9e37:	48 89 57 18          	mov    %rdx,0x18(%rdi)
  attributeDescriptions[1].offset = offsetof(Vertex, color);

  return attributeDescriptions;
}
    9e3b:	c3                   	ret

Disassembly of section .fini:

0000000000009e3c <_fini>:
    9e3c:	48 83 ec 08          	sub    $0x8,%rsp
    9e40:	48 83 c4 08          	add    $0x8,%rsp
    9e44:	c3                   	ret
