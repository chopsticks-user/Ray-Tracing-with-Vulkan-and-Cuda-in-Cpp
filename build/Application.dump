
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 9f 02 00 	mov    0x29fad(%rip),%rax        # 2dfb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 9f 02 00    	push   0x29fca(%rip)        # 2dff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 9f 02 00    	jmp    *0x29fcc(%rip)        # 2dff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 9f 02 00    	jmp    *0x29fca(%rip)        # 2e000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 9f 02 00    	jmp    *0x29fc2(%rip)        # 2e008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <vkCmdEndRenderPass@plt>:
    4050:	ff 25 ba 9f 02 00    	jmp    *0x29fba(%rip)        # 2e010 <vkCmdEndRenderPass@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4060:	ff 25 b2 9f 02 00    	jmp    *0x29fb2(%rip)        # 2e018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSaIcED2Ev@plt>:
    4070:	ff 25 aa 9f 02 00    	jmp    *0x29faa(%rip)        # 2e020 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4080:	ff 25 a2 9f 02 00    	jmp    *0x29fa2(%rip)        # 2e028 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4090:	ff 25 9a 9f 02 00    	jmp    *0x29f9a(%rip)        # 2e030 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <_ZNSolsEm@plt>:
    40a0:	ff 25 92 9f 02 00    	jmp    *0x29f92(%rip)        # 2e038 <_ZNSolsEm@GLIBCXX_3.4>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <vkDeviceWaitIdle@plt>:
    40b0:	ff 25 8a 9f 02 00    	jmp    *0x29f8a(%rip)        # 2e040 <vkDeviceWaitIdle@Base>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40c0:	ff 25 82 9f 02 00    	jmp    *0x29f82(%rip)        # 2e048 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <vkDestroySwapchainKHR@plt>:
    40d0:	ff 25 7a 9f 02 00    	jmp    *0x29f7a(%rip)        # 2e050 <vkDestroySwapchainKHR@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <vkDestroySemaphore@plt>:
    40e0:	ff 25 72 9f 02 00    	jmp    *0x29f72(%rip)        # 2e058 <vkDestroySemaphore@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <glfwDestroyWindow@plt>:
    40f0:	ff 25 6a 9f 02 00    	jmp    *0x29f6a(%rip)        # 2e060 <glfwDestroyWindow@Base>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZSt17__throw_bad_allocv@plt>:
    4100:	ff 25 62 9f 02 00    	jmp    *0x29f62(%rip)        # 2e068 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    4110:	ff 25 5a 9f 02 00    	jmp    *0x29f5a(%rip)        # 2e070 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <_ZNSt13runtime_errorC1EPKc@plt>:
    4120:	ff 25 52 9f 02 00    	jmp    *0x29f52(%rip)        # 2e078 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkGetPhysicalDeviceProperties@plt>:
    4130:	ff 25 4a 9f 02 00    	jmp    *0x29f4a(%rip)        # 2e080 <vkGetPhysicalDeviceProperties@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <__cxa_begin_catch@plt>:
    4140:	ff 25 42 9f 02 00    	jmp    *0x29f42(%rip)        # 2e088 <__cxa_begin_catch@CXXABI_1.3>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <vkAcquireNextImageKHR@plt>:
    4150:	ff 25 3a 9f 02 00    	jmp    *0x29f3a(%rip)        # 2e090 <vkAcquireNextImageKHR@Base>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <vkCreateCommandPool@plt>:
    4160:	ff 25 32 9f 02 00    	jmp    *0x29f32(%rip)        # 2e098 <vkCreateCommandPool@Base>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <strlen@plt>:
    4170:	ff 25 2a 9f 02 00    	jmp    *0x29f2a(%rip)        # 2e0a0 <strlen@GLIBC_2.2.5>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <memcmp@plt>:
    4180:	ff 25 22 9f 02 00    	jmp    *0x29f22(%rip)        # 2e0a8 <memcmp@GLIBC_2.2.5>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <vkCreateGraphicsPipelines@plt>:
    4190:	ff 25 1a 9f 02 00    	jmp    *0x29f1a(%rip)        # 2e0b0 <vkCreateGraphicsPipelines@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <__cxa_allocate_exception@plt>:
    41a0:	ff 25 12 9f 02 00    	jmp    *0x29f12(%rip)        # 2e0b8 <__cxa_allocate_exception@CXXABI_1.3>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <vkDestroyBuffer@plt>:
    41b0:	ff 25 0a 9f 02 00    	jmp    *0x29f0a(%rip)        # 2e0c0 <vkDestroyBuffer@Base>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <glfwSetWindowUserPointer@plt>:
    41c0:	ff 25 02 9f 02 00    	jmp    *0x29f02(%rip)        # 2e0c8 <glfwSetWindowUserPointer@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <_ZSt20__throw_length_errorPKc@plt>:
    41d0:	ff 25 fa 9e 02 00    	jmp    *0x29efa(%rip)        # 2e0d0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <vkEnumeratePhysicalDevices@plt>:
    41e0:	ff 25 f2 9e 02 00    	jmp    *0x29ef2(%rip)        # 2e0d8 <vkEnumeratePhysicalDevices@Base>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <memset@plt>:
    41f0:	ff 25 ea 9e 02 00    	jmp    *0x29eea(%rip)        # 2e0e0 <memset@GLIBC_2.2.5>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <_ZNSaIcEC1ERKS_@plt>:
    4200:	ff 25 e2 9e 02 00    	jmp    *0x29ee2(%rip)        # 2e0e8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <vkWaitForFences@plt>:
    4210:	ff 25 da 9e 02 00    	jmp    *0x29eda(%rip)        # 2e0f0 <vkWaitForFences@Base>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <glfwWaitEvents@plt>:
    4220:	ff 25 d2 9e 02 00    	jmp    *0x29ed2(%rip)        # 2e0f8 <glfwWaitEvents@Base>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <vkGetSwapchainImagesKHR@plt>:
    4230:	ff 25 ca 9e 02 00    	jmp    *0x29eca(%rip)        # 2e100 <vkGetSwapchainImagesKHR@Base>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    4240:	ff 25 c2 9e 02 00    	jmp    *0x29ec2(%rip)        # 2e108 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    4250:	ff 25 ba 9e 02 00    	jmp    *0x29eba(%rip)        # 2e110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <vkCreateRenderPass@plt>:
    4260:	ff 25 b2 9e 02 00    	jmp    *0x29eb2(%rip)        # 2e118 <vkCreateRenderPass@Base>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4270:	ff 25 aa 9e 02 00    	jmp    *0x29eaa(%rip)        # 2e120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4280:	ff 25 a2 9e 02 00    	jmp    *0x29ea2(%rip)        # 2e128 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4290:	ff 25 9a 9e 02 00    	jmp    *0x29e9a(%rip)        # 2e130 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <_ZSt19__throw_logic_errorPKc@plt>:
    42a0:	ff 25 92 9e 02 00    	jmp    *0x29e92(%rip)        # 2e138 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <__cxa_free_exception@plt>:
    42b0:	ff 25 8a 9e 02 00    	jmp    *0x29e8a(%rip)        # 2e140 <__cxa_free_exception@CXXABI_1.3>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    42c0:	ff 25 82 9e 02 00    	jmp    *0x29e82(%rip)        # 2e148 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <glfwGetRequiredInstanceExtensions@plt>:
    42d0:	ff 25 7a 9e 02 00    	jmp    *0x29e7a(%rip)        # 2e150 <glfwGetRequiredInstanceExtensions@Base>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    42e0:	ff 25 72 9e 02 00    	jmp    *0x29e72(%rip)        # 2e158 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkCreateShaderModule@plt>:
    42f0:	ff 25 6a 9e 02 00    	jmp    *0x29e6a(%rip)        # 2e160 <vkCreateShaderModule@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4300:	ff 25 62 9e 02 00    	jmp    *0x29e62(%rip)        # 2e168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <vkDestroyDevice@plt>:
    4310:	ff 25 5a 9e 02 00    	jmp    *0x29e5a(%rip)        # 2e170 <vkDestroyDevice@Base>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkCreatePipelineLayout@plt>:
    4320:	ff 25 52 9e 02 00    	jmp    *0x29e52(%rip)        # 2e178 <vkCreatePipelineLayout@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkEnumerateInstanceExtensionProperties@plt>:
    4330:	ff 25 4a 9e 02 00    	jmp    *0x29e4a(%rip)        # 2e180 <vkEnumerateInstanceExtensionProperties@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    4340:	ff 25 42 9e 02 00    	jmp    *0x29e42(%rip)        # 2e188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <glfwWindowHint@plt>:
    4350:	ff 25 3a 9e 02 00    	jmp    *0x29e3a(%rip)        # 2e190 <glfwWindowHint@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    4360:	ff 25 32 9e 02 00    	jmp    *0x29e32(%rip)        # 2e198 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <vkCmdBindPipeline@plt>:
    4370:	ff 25 2a 9e 02 00    	jmp    *0x29e2a(%rip)        # 2e1a0 <vkCmdBindPipeline@Base>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <__cxa_atexit@plt>:
    4380:	ff 25 22 9e 02 00    	jmp    *0x29e22(%rip)        # 2e1a8 <__cxa_atexit@GLIBC_2.2.5>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4390:	ff 25 1a 9e 02 00    	jmp    *0x29e1a(%rip)        # 2e1b0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkAllocateCommandBuffers@plt>:
    43a0:	ff 25 12 9e 02 00    	jmp    *0x29e12(%rip)        # 2e1b8 <vkAllocateCommandBuffers@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkGetPhysicalDeviceProperties2@plt>:
    43b0:	ff 25 0a 9e 02 00    	jmp    *0x29e0a(%rip)        # 2e1c0 <vkGetPhysicalDeviceProperties2@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkGetInstanceProcAddr@plt>:
    43c0:	ff 25 02 9e 02 00    	jmp    *0x29e02(%rip)        # 2e1c8 <vkGetInstanceProcAddr@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <glfwPollEvents@plt>:
    43d0:	ff 25 fa 9d 02 00    	jmp    *0x29dfa(%rip)        # 2e1d0 <glfwPollEvents@Base>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <vkDestroyRenderPass@plt>:
    43e0:	ff 25 f2 9d 02 00    	jmp    *0x29df2(%rip)        # 2e1d8 <vkDestroyRenderPass@Base>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkCreateBuffer@plt>:
    43f0:	ff 25 ea 9d 02 00    	jmp    *0x29dea(%rip)        # 2e1e0 <vkCreateBuffer@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4400:	ff 25 e2 9d 02 00    	jmp    *0x29de2(%rip)        # 2e1e8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_Znwm@plt>:
    4410:	ff 25 da 9d 02 00    	jmp    *0x29dda(%rip)        # 2e1f0 <_Znwm@GLIBCXX_3.4>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <vkBeginCommandBuffer@plt>:
    4420:	ff 25 d2 9d 02 00    	jmp    *0x29dd2(%rip)        # 2e1f8 <vkBeginCommandBuffer@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <_ZdlPvm@plt>:
    4430:	ff 25 ca 9d 02 00    	jmp    *0x29dca(%rip)        # 2e200 <_ZdlPvm@CXXABI_1.3.9>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <vkDestroyInstance@plt>:
    4440:	ff 25 c2 9d 02 00    	jmp    *0x29dc2(%rip)        # 2e208 <vkDestroyInstance@Base>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <glfwTerminate@plt>:
    4450:	ff 25 ba 9d 02 00    	jmp    *0x29dba(%rip)        # 2e210 <glfwTerminate@Base>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkCreateImageView@plt>:
    4460:	ff 25 b2 9d 02 00    	jmp    *0x29db2(%rip)        # 2e218 <vkCreateImageView@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    4470:	ff 25 aa 9d 02 00    	jmp    *0x29daa(%rip)        # 2e220 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZNSolsEPFRSoS_E@plt>:
    4480:	ff 25 a2 9d 02 00    	jmp    *0x29da2(%rip)        # 2e228 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    4490:	ff 25 9a 9d 02 00    	jmp    *0x29d9a(%rip)        # 2e230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    44a0:	ff 25 92 9d 02 00    	jmp    *0x29d92(%rip)        # 2e238 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    44b0:	ff 25 8a 9d 02 00    	jmp    *0x29d8a(%rip)        # 2e240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <_ZNSaIcED1Ev@plt>:
    44c0:	ff 25 82 9d 02 00    	jmp    *0x29d82(%rip)        # 2e248 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <vkDestroyFence@plt>:
    44d0:	ff 25 7a 9d 02 00    	jmp    *0x29d7a(%rip)        # 2e250 <vkDestroyFence@Base>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <vkDestroyPipeline@plt>:
    44e0:	ff 25 72 9d 02 00    	jmp    *0x29d72(%rip)        # 2e258 <vkDestroyPipeline@Base>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    44f0:	ff 25 6a 9d 02 00    	jmp    *0x29d6a(%rip)        # 2e260 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4500:	ff 25 62 9d 02 00    	jmp    *0x29d62(%rip)        # 2e268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkEnumerateInstanceLayerProperties@plt>:
    4510:	ff 25 5a 9d 02 00    	jmp    *0x29d5a(%rip)        # 2e270 <vkEnumerateInstanceLayerProperties@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <glfwInit@plt>:
    4520:	ff 25 52 9d 02 00    	jmp    *0x29d52(%rip)        # 2e278 <glfwInit@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4530:	ff 25 4a 9d 02 00    	jmp    *0x29d4a(%rip)        # 2e280 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkCreateSwapchainKHR@plt>:
    4540:	ff 25 42 9d 02 00    	jmp    *0x29d42(%rip)        # 2e288 <vkCreateSwapchainKHR@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    4550:	ff 25 3a 9d 02 00    	jmp    *0x29d3a(%rip)        # 2e290 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <vkDestroyShaderModule@plt>:
    4560:	ff 25 32 9d 02 00    	jmp    *0x29d32(%rip)        # 2e298 <vkDestroyShaderModule@Base>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <vkCreateInstance@plt>:
    4570:	ff 25 2a 9d 02 00    	jmp    *0x29d2a(%rip)        # 2e2a0 <vkCreateInstance@Base>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4580:	ff 25 22 9d 02 00    	jmp    *0x29d22(%rip)        # 2e2a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <vkCreateFence@plt>:
    4590:	ff 25 1a 9d 02 00    	jmp    *0x29d1a(%rip)        # 2e2b0 <vkCreateFence@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <vkResetCommandBuffer@plt>:
    45a0:	ff 25 12 9d 02 00    	jmp    *0x29d12(%rip)        # 2e2b8 <vkResetCommandBuffer@Base>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkDestroyPipelineLayout@plt>:
    45b0:	ff 25 0a 9d 02 00    	jmp    *0x29d0a(%rip)        # 2e2c0 <vkDestroyPipelineLayout@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <_ZNSi4readEPcl@plt>:
    45c0:	ff 25 02 9d 02 00    	jmp    *0x29d02(%rip)        # 2e2c8 <_ZNSi4readEPcl@GLIBCXX_3.4>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    45d0:	ff 25 fa 9c 02 00    	jmp    *0x29cfa(%rip)        # 2e2d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    45e0:	ff 25 f2 9c 02 00    	jmp    *0x29cf2(%rip)        # 2e2d8 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    45f0:	ff 25 ea 9c 02 00    	jmp    *0x29cea(%rip)        # 2e2e0 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <vkQueueSubmit@plt>:
    4600:	ff 25 e2 9c 02 00    	jmp    *0x29ce2(%rip)        # 2e2e8 <vkQueueSubmit@Base>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <vkGetDeviceQueue@plt>:
    4610:	ff 25 da 9c 02 00    	jmp    *0x29cda(%rip)        # 2e2f0 <vkGetDeviceQueue@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSolsEj@plt>:
    4620:	ff 25 d2 9c 02 00    	jmp    *0x29cd2(%rip)        # 2e2f8 <_ZNSolsEj@GLIBCXX_3.4>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <vkCreateFramebuffer@plt>:
    4630:	ff 25 ca 9c 02 00    	jmp    *0x29cca(%rip)        # 2e300 <vkCreateFramebuffer@Base>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <glfwGetWindowUserPointer@plt>:
    4640:	ff 25 c2 9c 02 00    	jmp    *0x29cc2(%rip)        # 2e308 <glfwGetWindowUserPointer@Base>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4650:	ff 25 ba 9c 02 00    	jmp    *0x29cba(%rip)        # 2e310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4660:	ff 25 b2 9c 02 00    	jmp    *0x29cb2(%rip)        # 2e318 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <vkEnumerateDeviceExtensionProperties@plt>:
    4670:	ff 25 aa 9c 02 00    	jmp    *0x29caa(%rip)        # 2e320 <vkEnumerateDeviceExtensionProperties@Base>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkCreateSemaphore@plt>:
    4680:	ff 25 a2 9c 02 00    	jmp    *0x29ca2(%rip)        # 2e328 <vkCreateSemaphore@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <vkCmdBeginRenderPass@plt>:
    4690:	ff 25 9a 9c 02 00    	jmp    *0x29c9a(%rip)        # 2e330 <vkCmdBeginRenderPass@Base>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <vkDestroyCommandPool@plt>:
    46a0:	ff 25 92 9c 02 00    	jmp    *0x29c92(%rip)        # 2e338 <vkDestroyCommandPool@Base>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <_ZNSaIcEC2ERKS_@plt>:
    46b0:	ff 25 8a 9c 02 00    	jmp    *0x29c8a(%rip)        # 2e340 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <__cxa_rethrow@plt>:
    46c0:	ff 25 82 9c 02 00    	jmp    *0x29c82(%rip)        # 2e348 <__cxa_rethrow@CXXABI_1.3>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <vkCreateDevice@plt>:
    46d0:	ff 25 7a 9c 02 00    	jmp    *0x29c7a(%rip)        # 2e350 <vkCreateDevice@Base>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <glfwSetFramebufferSizeCallback@plt>:
    46e0:	ff 25 72 9c 02 00    	jmp    *0x29c72(%rip)        # 2e358 <glfwSetFramebufferSizeCallback@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <_ZNSt8ios_base4InitC1Ev@plt>:
    46f0:	ff 25 6a 9c 02 00    	jmp    *0x29c6a(%rip)        # 2e360 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <glfwCreateWindowSurface@plt>:
    4700:	ff 25 62 9c 02 00    	jmp    *0x29c62(%rip)        # 2e368 <glfwCreateWindowSurface@Base>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <vkResetFences@plt>:
    4710:	ff 25 5a 9c 02 00    	jmp    *0x29c5a(%rip)        # 2e370 <vkResetFences@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <glfwCreateWindow@plt>:
    4720:	ff 25 52 9c 02 00    	jmp    *0x29c52(%rip)        # 2e378 <glfwCreateWindow@Base>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    4730:	ff 25 4a 9c 02 00    	jmp    *0x29c4a(%rip)        # 2e380 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <vkQueuePresentKHR@plt>:
    4740:	ff 25 42 9c 02 00    	jmp    *0x29c42(%rip)        # 2e388 <vkQueuePresentKHR@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <glfwGetFramebufferSize@plt>:
    4750:	ff 25 3a 9c 02 00    	jmp    *0x29c3a(%rip)        # 2e390 <glfwGetFramebufferSize@Base>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4760:	ff 25 32 9c 02 00    	jmp    *0x29c32(%rip)        # 2e398 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4770:	ff 25 2a 9c 02 00    	jmp    *0x29c2a(%rip)        # 2e3a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4780:	ff 25 22 9c 02 00    	jmp    *0x29c22(%rip)        # 2e3a8 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <memmove@plt>:
    4790:	ff 25 1a 9c 02 00    	jmp    *0x29c1a(%rip)        # 2e3b0 <memmove@GLIBC_2.2.5>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <__cxa_end_catch@plt>:
    47a0:	ff 25 12 9c 02 00    	jmp    *0x29c12(%rip)        # 2e3b8 <__cxa_end_catch@CXXABI_1.3>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <vkDestroyFramebuffer@plt>:
    47b0:	ff 25 0a 9c 02 00    	jmp    *0x29c0a(%rip)        # 2e3c0 <vkDestroyFramebuffer@Base>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <__cxa_throw@plt>:
    47c0:	ff 25 02 9c 02 00    	jmp    *0x29c02(%rip)        # 2e3c8 <__cxa_throw@CXXABI_1.3>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    47d0:	ff 25 fa 9b 02 00    	jmp    *0x29bfa(%rip)        # 2e3d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047e0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    47e0:	ff 25 f2 9b 02 00    	jmp    *0x29bf2(%rip)        # 2e3d8 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    47e6:	68 7b 00 00 00       	push   $0x7b
    47eb:	e9 30 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047f0 <_ZNSolsEi@plt>:
    47f0:	ff 25 ea 9b 02 00    	jmp    *0x29bea(%rip)        # 2e3e0 <_ZNSolsEi@GLIBCXX_3.4>
    47f6:	68 7c 00 00 00       	push   $0x7c
    47fb:	e9 20 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004800 <_ZNSi5tellgEv@plt>:
    4800:	ff 25 e2 9b 02 00    	jmp    *0x29be2(%rip)        # 2e3e8 <_ZNSi5tellgEv@GLIBCXX_3.4>
    4806:	68 7d 00 00 00       	push   $0x7d
    480b:	e9 10 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004810 <vkDestroySurfaceKHR@plt>:
    4810:	ff 25 da 9b 02 00    	jmp    *0x29bda(%rip)        # 2e3f0 <vkDestroySurfaceKHR@Base>
    4816:	68 7e 00 00 00       	push   $0x7e
    481b:	e9 00 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004820 <_Unwind_Resume@plt>:
    4820:	ff 25 d2 9b 02 00    	jmp    *0x29bd2(%rip)        # 2e3f8 <_Unwind_Resume@GCC_3.0>
    4826:	68 7f 00 00 00       	push   $0x7f
    482b:	e9 f0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004830 <_ZNSaIcEC1Ev@plt>:
    4830:	ff 25 ca 9b 02 00    	jmp    *0x29bca(%rip)        # 2e400 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4836:	68 80 00 00 00       	push   $0x80
    483b:	e9 e0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004840 <vkDestroyImageView@plt>:
    4840:	ff 25 c2 9b 02 00    	jmp    *0x29bc2(%rip)        # 2e408 <vkDestroyImageView@Base>
    4846:	68 81 00 00 00       	push   $0x81
    484b:	e9 d0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004850 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4850:	ff 25 ba 9b 02 00    	jmp    *0x29bba(%rip)        # 2e410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4856:	68 82 00 00 00       	push   $0x82
    485b:	e9 c0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004860 <_ZNSt9exceptionD2Ev@plt>:
    4860:	ff 25 b2 9b 02 00    	jmp    *0x29bb2(%rip)        # 2e418 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4866:	68 83 00 00 00       	push   $0x83
    486b:	e9 b0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004870 <glfwWindowShouldClose@plt>:
    4870:	ff 25 aa 9b 02 00    	jmp    *0x29baa(%rip)        # 2e420 <glfwWindowShouldClose@Base>
    4876:	68 84 00 00 00       	push   $0x84
    487b:	e9 a0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004880 <vkEndCommandBuffer@plt>:
    4880:	ff 25 a2 9b 02 00    	jmp    *0x29ba2(%rip)        # 2e428 <vkEndCommandBuffer@Base>
    4886:	68 85 00 00 00       	push   $0x85
    488b:	e9 90 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004890 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4890:	ff 25 9a 9b 02 00    	jmp    *0x29b9a(%rip)        # 2e430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4896:	68 86 00 00 00       	push   $0x86
    489b:	e9 80 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048a0 <vkCmdDraw@plt>:
    48a0:	ff 25 92 9b 02 00    	jmp    *0x29b92(%rip)        # 2e438 <vkCmdDraw@Base>
    48a6:	68 87 00 00 00       	push   $0x87
    48ab:	e9 70 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    48b0:	ff 25 8a 9b 02 00    	jmp    *0x29b8a(%rip)        # 2e440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    48b6:	68 88 00 00 00       	push   $0x88
    48bb:	e9 60 f7 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

00000000000048c0 <__cxa_finalize@plt>:
    48c0:	ff 25 ca 96 02 00    	jmp    *0x296ca(%rip)        # 2df90 <__cxa_finalize@GLIBC_2.2.5>
    48c6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000048d0 <_start>:
    48d0:	31 ed                	xor    %ebp,%ebp
    48d2:	49 89 d1             	mov    %rdx,%r9
    48d5:	5e                   	pop    %rsi
    48d6:	48 89 e2             	mov    %rsp,%rdx
    48d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    48dd:	50                   	push   %rax
    48de:	54                   	push   %rsp
    48df:	45 31 c0             	xor    %r8d,%r8d
    48e2:	31 c9                	xor    %ecx,%ecx
    48e4:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4a94 <main>
    48eb:	ff 15 af 96 02 00    	call   *0x296af(%rip)        # 2dfa0 <__libc_start_main@GLIBC_2.34>
    48f1:	f4                   	hlt
    48f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    48f9:	00 00 00 
    48fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004900 <deregister_tm_clones>:
    4900:	48 8d 3d 61 9b 02 00 	lea    0x29b61(%rip),%rdi        # 2e468 <__TMC_END__>
    4907:	48 8d 05 5a 9b 02 00 	lea    0x29b5a(%rip),%rax        # 2e468 <__TMC_END__>
    490e:	48 39 f8             	cmp    %rdi,%rax
    4911:	74 15                	je     4928 <deregister_tm_clones+0x28>
    4913:	48 8b 05 96 96 02 00 	mov    0x29696(%rip),%rax        # 2dfb0 <_ITM_deregisterTMCloneTable@Base>
    491a:	48 85 c0             	test   %rax,%rax
    491d:	74 09                	je     4928 <deregister_tm_clones+0x28>
    491f:	ff e0                	jmp    *%rax
    4921:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4928:	c3                   	ret
    4929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004930 <register_tm_clones>:
    4930:	48 8d 3d 31 9b 02 00 	lea    0x29b31(%rip),%rdi        # 2e468 <__TMC_END__>
    4937:	48 8d 35 2a 9b 02 00 	lea    0x29b2a(%rip),%rsi        # 2e468 <__TMC_END__>
    493e:	48 29 fe             	sub    %rdi,%rsi
    4941:	48 89 f0             	mov    %rsi,%rax
    4944:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4948:	48 c1 f8 03          	sar    $0x3,%rax
    494c:	48 01 c6             	add    %rax,%rsi
    494f:	48 d1 fe             	sar    %rsi
    4952:	74 14                	je     4968 <register_tm_clones+0x38>
    4954:	48 8b 05 65 96 02 00 	mov    0x29665(%rip),%rax        # 2dfc0 <_ITM_registerTMCloneTable@Base>
    495b:	48 85 c0             	test   %rax,%rax
    495e:	74 08                	je     4968 <register_tm_clones+0x38>
    4960:	ff e0                	jmp    *%rax
    4962:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4968:	c3                   	ret
    4969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004970 <__do_global_dtors_aux>:
    4970:	f3 0f 1e fa          	endbr64
    4974:	80 3d 15 9c 02 00 00 	cmpb   $0x0,0x29c15(%rip)        # 2e590 <completed.0>
    497b:	75 2b                	jne    49a8 <__do_global_dtors_aux+0x38>
    497d:	55                   	push   %rbp
    497e:	48 83 3d 0a 96 02 00 	cmpq   $0x0,0x2960a(%rip)        # 2df90 <__cxa_finalize@GLIBC_2.2.5>
    4985:	00 
    4986:	48 89 e5             	mov    %rsp,%rbp
    4989:	74 0c                	je     4997 <__do_global_dtors_aux+0x27>
    498b:	48 8b 3d be 9a 02 00 	mov    0x29abe(%rip),%rdi        # 2e450 <__dso_handle>
    4992:	e8 29 ff ff ff       	call   48c0 <__cxa_finalize@plt>
    4997:	e8 64 ff ff ff       	call   4900 <deregister_tm_clones>
    499c:	c6 05 ed 9b 02 00 01 	movb   $0x1,0x29bed(%rip)        # 2e590 <completed.0>
    49a3:	5d                   	pop    %rbp
    49a4:	c3                   	ret
    49a5:	0f 1f 00             	nopl   (%rax)
    49a8:	c3                   	ret
    49a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000049b0 <frame_dummy>:
    49b0:	f3 0f 1e fa          	endbr64
    49b4:	e9 77 ff ff ff       	jmp    4930 <register_tm_clones>

00000000000049b9 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

// #include <typeinfo>

int protected_main() {
    49b9:	55                   	push   %rbp
    49ba:	48 89 e5             	mov    %rsp,%rbp
    49bd:	53                   	push   %rbx
    49be:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
  VulkanApp app;
    49c5:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    49cc:	48 89 c7             	mov    %rax,%rdi
    49cf:	e8 a8 c1 00 00       	call   10b7c <_ZN9VulkanAppC1Ev>
  app.run();
    49d4:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    49db:	48 89 c7             	mov    %rax,%rdi
    49de:	e8 17 c7 00 00       	call   110fa <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    49e3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    49e7:	48 89 c7             	mov    %rax,%rdi
    49ea:	e8 41 fe ff ff       	call   4830 <_ZNSaIcEC1Ev@plt>
    49ef:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    49f3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    49f7:	48 8d 0d 3a 6c 01 00 	lea    0x16c3a(%rip),%rcx        # 1b638 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    49fe:	48 89 ce             	mov    %rcx,%rsi
    4a01:	48 89 c7             	mov    %rax,%rdi
    4a04:	e8 7b 04 00 00       	call   4e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4a09:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    4a0d:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    4a14:	48 89 d6             	mov    %rdx,%rsi
    4a17:	48 89 c7             	mov    %rax,%rdi
    4a1a:	e8 25 c7 00 00       	call   11144 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4a1f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4a23:	48 89 c7             	mov    %rax,%rdi
    4a26:	e8 25 f8 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4a2b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4a2f:	48 89 c7             	mov    %rax,%rdi
    4a32:	e8 89 fa ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    4a37:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    4a3c:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    4a43:	48 89 c7             	mov    %rax,%rdi
    4a46:	e8 7d c4 00 00       	call   10ec8 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    4a4b:	89 d8                	mov    %ebx,%eax
    4a4d:	eb 3f                	jmp    4a8e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    4a4f:	48 89 c3             	mov    %rax,%rbx
    4a52:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4a56:	48 89 c7             	mov    %rax,%rdi
    4a59:	e8 f2 f7 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4a5e:	eb 03                	jmp    4a63 <_Z14protected_mainv+0xaa>
    4a60:	48 89 c3             	mov    %rax,%rbx
    4a63:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4a67:	48 89 c7             	mov    %rax,%rdi
    4a6a:	e8 51 fa ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    4a6f:	eb 03                	jmp    4a74 <_Z14protected_mainv+0xbb>
}
    4a71:	48 89 c3             	mov    %rax,%rbx
    4a74:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    4a7b:	48 89 c7             	mov    %rax,%rdi
    4a7e:	e8 45 c4 00 00       	call   10ec8 <_ZN9VulkanAppD1Ev>
    4a83:	48 89 d8             	mov    %rbx,%rax
    4a86:	48 89 c7             	mov    %rax,%rdi
    4a89:	e8 92 fd ff ff       	call   4820 <_Unwind_Resume@plt>
    4a8e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a92:	c9                   	leave
    4a93:	c3                   	ret

0000000000004a94 <main>:

int main() {
    4a94:	55                   	push   %rbp
    4a95:	48 89 e5             	mov    %rsp,%rbp
    4a98:	53                   	push   %rbx
    4a99:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    4a9d:	e8 17 ff ff ff       	call   49b9 <_Z14protected_mainv>
    4aa2:	e9 aa 00 00 00       	jmp    4b51 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4aa7:	b8 01 00 00 00       	mov    $0x1,%eax
    4aac:	e9 a0 00 00 00       	jmp    4b51 <main+0xbd>
  } catch (const std::exception &e) {
    4ab1:	48 83 fa 01          	cmp    $0x1,%rdx
    4ab5:	75 49                	jne    4b00 <main+0x6c>
    4ab7:	48 89 c7             	mov    %rax,%rdi
    4aba:	e8 81 f6 ff ff       	call   4140 <__cxa_begin_catch@plt>
    4abf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4ac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ac7:	48 8b 00             	mov    (%rax),%rax
    4aca:	48 83 c0 10          	add    $0x10,%rax
    4ace:	48 8b 10             	mov    (%rax),%rdx
    4ad1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ad5:	48 89 c7             	mov    %rax,%rdi
    4ad8:	ff d2                	call   *%rdx
    4ada:	48 89 c6             	mov    %rax,%rsi
    4add:	48 8d 05 9c 99 02 00 	lea    0x2999c(%rip),%rax        # 2e480 <_ZSt4cerr@GLIBCXX_3.4>
    4ae4:	48 89 c7             	mov    %rax,%rdi
    4ae7:	e8 14 f9 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4aec:	be 0a 00 00 00       	mov    $0xa,%esi
    4af1:	48 89 c7             	mov    %rax,%rdi
    4af4:	e8 37 fa ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4af9:	e8 a2 fc ff ff       	call   47a0 <__cxa_end_catch@plt>
    4afe:	eb a7                	jmp    4aa7 <main+0x13>
    4b00:	48 89 c7             	mov    %rax,%rdi
    4b03:	e8 38 f6 ff ff       	call   4140 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4b08:	48 8d 05 32 6b 01 00 	lea    0x16b32(%rip),%rax        # 1b641 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x11>
    4b0f:	48 89 c6             	mov    %rax,%rsi
    4b12:	48 8d 05 67 99 02 00 	lea    0x29967(%rip),%rax        # 2e480 <_ZSt4cerr@GLIBCXX_3.4>
    4b19:	48 89 c7             	mov    %rax,%rdi
    4b1c:	e8 df f8 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4b21:	e8 7a fc ff ff       	call   47a0 <__cxa_end_catch@plt>
    4b26:	e9 7c ff ff ff       	jmp    4aa7 <main+0x13>
  } catch (...) {
    4b2b:	48 89 c3             	mov    %rax,%rbx
    4b2e:	e8 6d fc ff ff       	call   47a0 <__cxa_end_catch@plt>
    4b33:	48 89 d8             	mov    %rbx,%rax
    4b36:	48 89 c7             	mov    %rax,%rdi
    4b39:	e8 e2 fc ff ff       	call   4820 <_Unwind_Resume@plt>
  }
    4b3e:	48 89 c3             	mov    %rax,%rbx
    4b41:	e8 5a fc ff ff       	call   47a0 <__cxa_end_catch@plt>
    4b46:	48 89 d8             	mov    %rbx,%rax
    4b49:	48 89 c7             	mov    %rax,%rdi
    4b4c:	e8 cf fc ff ff       	call   4820 <_Unwind_Resume@plt>
    4b51:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b55:	c9                   	leave
    4b56:	c3                   	ret

0000000000004b57 <_Z41__static_initialization_and_destruction_0ii>:
    4b57:	55                   	push   %rbp
    4b58:	48 89 e5             	mov    %rsp,%rbp
    4b5b:	41 55                	push   %r13
    4b5d:	41 54                	push   %r12
    4b5f:	53                   	push   %rbx
    4b60:	48 83 ec 58          	sub    $0x58,%rsp
    4b64:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    4b67:	89 75 98             	mov    %esi,-0x68(%rbp)
    4b6a:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
    4b6e:	0f 85 6f 01 00 00    	jne    4ce3 <_Z41__static_initialization_and_destruction_0ii+0x18c>
    4b74:	81 7d 98 ff ff 00 00 	cmpl   $0xffff,-0x68(%rbp)
    4b7b:	0f 85 62 01 00 00    	jne    4ce3 <_Z41__static_initialization_and_destruction_0ii+0x18c>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4b81:	48 8d 05 18 9a 02 00 	lea    0x29a18(%rip),%rax        # 2e5a0 <_ZStL8__ioinit>
    4b88:	48 89 c7             	mov    %rax,%rdi
    4b8b:	e8 60 fb ff ff       	call   46f0 <_ZNSt8ios_base4InitC1Ev@plt>
    4b90:	48 8d 05 b9 98 02 00 	lea    0x298b9(%rip),%rax        # 2e450 <__dso_handle>
    4b97:	48 89 c2             	mov    %rax,%rdx
    4b9a:	48 8d 05 ff 99 02 00 	lea    0x299ff(%rip),%rax        # 2e5a0 <_ZStL8__ioinit>
    4ba1:	48 89 c6             	mov    %rax,%rsi
    4ba4:	48 8b 05 1d 94 02 00 	mov    0x2941d(%rip),%rax        # 2dfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4bab:	48 89 c7             	mov    %rax,%rdi
    4bae:	e8 cd f7 ff ff       	call   4380 <__cxa_atexit@plt>
namespace shader {

const std::vector<vkh::Vertex2D_RGB> triangle{
    {{0.0f, -0.5f}, {1.0f, 0.0f, 0.0f}},
    {{0.5f, 0.5f}, {0.0f, 1.0f, 0.0f}},
    {{-0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}}};
    4bb3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4bb7:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    4bbc:	f3 0f 10 05 00 6b 01 	movss  0x16b00(%rip),%xmm0        # 1b6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4bc3:	00 
    4bc4:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    4bc9:	f3 0f 10 05 f7 6a 01 	movss  0x16af7(%rip),%xmm0        # 1b6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4bd0:	00 
    4bd1:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    4bd6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4bda:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    4bdf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4be3:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    4be8:	f3 0f 10 05 dc 6a 01 	movss  0x16adc(%rip),%xmm0        # 1b6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4bef:	00 
    4bf0:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    4bf5:	f3 0f 10 05 cf 6a 01 	movss  0x16acf(%rip),%xmm0        # 1b6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4bfc:	00 
    4bfd:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    4c02:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c06:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    4c0b:	f3 0f 10 05 b5 6a 01 	movss  0x16ab5(%rip),%xmm0        # 1b6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4c12:	00 
    4c13:	f3 0f 11 45 c0       	movss  %xmm0,-0x40(%rbp)
    4c18:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c1c:	f3 0f 11 45 c4       	movss  %xmm0,-0x3c(%rbp)
    4c21:	f3 0f 10 05 9b 6a 01 	movss  0x16a9b(%rip),%xmm0        # 1b6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4c28:	00 
    4c29:	f3 0f 11 45 c8       	movss  %xmm0,-0x38(%rbp)
    4c2e:	f3 0f 10 05 96 6a 01 	movss  0x16a96(%rip),%xmm0        # 1b6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4c35:	00 
    4c36:	f3 0f 11 45 cc       	movss  %xmm0,-0x34(%rbp)
    4c3b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c3f:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
    4c44:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c48:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
    4c4d:	f3 0f 10 05 73 6a 01 	movss  0x16a73(%rip),%xmm0        # 1b6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4c54:	00 
    4c55:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
    4c5a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4c5e:	49 89 c4             	mov    %rax,%r12
    4c61:	41 bd 03 00 00 00    	mov    $0x3,%r13d
    4c67:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4c6b:	48 89 c7             	mov    %rax,%rdi
    4c6e:	e8 51 01 00 00       	call   4dc4 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
    4c73:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4c77:	4c 89 e6             	mov    %r12,%rsi
    4c7a:	4c 89 ef             	mov    %r13,%rdi
    4c7d:	4c 89 e1             	mov    %r12,%rcx
    4c80:	4c 89 eb             	mov    %r13,%rbx
    4c83:	48 89 da             	mov    %rbx,%rdx
    4c86:	48 89 c1             	mov    %rax,%rcx
    4c89:	48 8d 05 20 99 02 00 	lea    0x29920(%rip),%rax        # 2e5b0 <_ZN6shaderL8triangleE>
    4c90:	48 89 c7             	mov    %rax,%rdi
    4c93:	e8 64 01 00 00       	call   4dfc <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
    4c98:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4c9c:	48 89 c7             	mov    %rax,%rdi
    4c9f:	e8 3c 01 00 00       	call   4de0 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
const std::vector<vkh::Vertex2D_RGB> triangle{
    4ca4:	48 8d 05 a5 97 02 00 	lea    0x297a5(%rip),%rax        # 2e450 <__dso_handle>
    4cab:	48 89 c2             	mov    %rax,%rdx
    4cae:	48 8d 05 fb 98 02 00 	lea    0x298fb(%rip),%rax        # 2e5b0 <_ZN6shaderL8triangleE>
    4cb5:	48 89 c6             	mov    %rax,%rsi
    4cb8:	48 8d 05 a1 0b 00 00 	lea    0xba1(%rip),%rax        # 5860 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    4cbf:	48 89 c7             	mov    %rax,%rdi
    4cc2:	e8 b9 f6 ff ff       	call   4380 <__cxa_atexit@plt>
    4cc7:	eb 1a                	jmp    4ce3 <_Z41__static_initialization_and_destruction_0ii+0x18c>
    {{-0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}}};
    4cc9:	48 89 c3             	mov    %rax,%rbx
    4ccc:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4cd0:	48 89 c7             	mov    %rax,%rdi
    4cd3:	e8 08 01 00 00       	call   4de0 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    4cd8:	48 89 d8             	mov    %rbx,%rax
    4cdb:	48 89 c7             	mov    %rax,%rdi
    4cde:	e8 3d fb ff ff       	call   4820 <_Unwind_Resume@plt>
    4ce3:	48 83 c4 58          	add    $0x58,%rsp
    4ce7:	5b                   	pop    %rbx
    4ce8:	41 5c                	pop    %r12
    4cea:	41 5d                	pop    %r13
    4cec:	5d                   	pop    %rbp
    4ced:	c3                   	ret

0000000000004cee <_GLOBAL__sub_I__Z14protected_mainv>:
    4cee:	55                   	push   %rbp
    4cef:	48 89 e5             	mov    %rsp,%rbp
    4cf2:	be ff ff 00 00       	mov    $0xffff,%esi
    4cf7:	bf 01 00 00 00       	mov    $0x1,%edi
    4cfc:	e8 56 fe ff ff       	call   4b57 <_Z41__static_initialization_and_destruction_0ii>
    4d01:	5d                   	pop    %rbp
    4d02:	c3                   	ret

0000000000004d03 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4d03:	55                   	push   %rbp
    4d04:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4d07:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4d0c:	5d                   	pop    %rbp
    4d0d:	c3                   	ret

0000000000004d0e <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4d0e:	55                   	push   %rbp
    4d0f:	48 89 e5             	mov    %rsp,%rbp
    4d12:	48 83 ec 10          	sub    $0x10,%rsp
    4d16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4d1a:	e8 e4 ff ff ff       	call   4d03 <_ZSt23__is_constant_evaluatedv>
    4d1f:	84 c0                	test   %al,%al
    4d21:	74 0e                	je     4d31 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d27:	48 89 c7             	mov    %rax,%rdi
    4d2a:	e8 11 00 00 00       	call   4d40 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4d2f:	eb 0d                	jmp    4d3e <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d35:	48 89 c7             	mov    %rax,%rdi
    4d38:	e8 33 f4 ff ff       	call   4170 <strlen@plt>
    4d3d:	90                   	nop
      }
    4d3e:	c9                   	leave
    4d3f:	c3                   	ret

0000000000004d40 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4d40:	55                   	push   %rbp
    4d41:	48 89 e5             	mov    %rsp,%rbp
    4d44:	48 83 ec 20          	sub    $0x20,%rsp
    4d48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4d4c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4d53:	00 
      while (!eq(__p[__i], char_type()))
    4d54:	eb 05                	jmp    4d5b <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4d56:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4d5b:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4d5f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d67:	48 01 c2             	add    %rax,%rdx
    4d6a:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4d6e:	48 89 c6             	mov    %rax,%rsi
    4d71:	48 89 d7             	mov    %rdx,%rdi
    4d74:	e8 0d 00 00 00       	call   4d86 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4d79:	83 f0 01             	xor    $0x1,%eax
    4d7c:	84 c0                	test   %al,%al
    4d7e:	75 d6                	jne    4d56 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4d80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4d84:	c9                   	leave
    4d85:	c3                   	ret

0000000000004d86 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4d86:	55                   	push   %rbp
    4d87:	48 89 e5             	mov    %rsp,%rbp
    4d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d96:	0f b6 10             	movzbl (%rax),%edx
    4d99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d9d:	0f b6 00             	movzbl (%rax),%eax
    4da0:	38 c2                	cmp    %al,%dl
    4da2:	0f 94 c0             	sete   %al
    4da5:	5d                   	pop    %rbp
    4da6:	c3                   	ret
    4da7:	90                   	nop

0000000000004da8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4da8:	55                   	push   %rbp
    4da9:	48 89 e5             	mov    %rsp,%rbp
    4dac:	48 83 ec 10          	sub    $0x10,%rsp
    4db0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4db8:	48 89 c7             	mov    %rax,%rdi
    4dbb:	e8 b0 f2 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    4dc0:	90                   	nop
    4dc1:	c9                   	leave
    4dc2:	c3                   	ret
    4dc3:	90                   	nop

0000000000004dc4 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4dc4:	55                   	push   %rbp
    4dc5:	48 89 e5             	mov    %rsp,%rbp
    4dc8:	48 83 ec 10          	sub    $0x10,%rsp
    4dcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dd4:	48 89 c7             	mov    %rax,%rdi
    4dd7:	e8 74 02 00 00       	call   5050 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>
    4ddc:	90                   	nop
    4ddd:	c9                   	leave
    4dde:	c3                   	ret
    4ddf:	90                   	nop

0000000000004de0 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4de0:	55                   	push   %rbp
    4de1:	48 89 e5             	mov    %rsp,%rbp
    4de4:	48 83 ec 10          	sub    $0x10,%rsp
    4de8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4df0:	48 89 c7             	mov    %rax,%rdi
    4df3:	e8 64 02 00 00       	call   505c <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>
    4df8:	90                   	nop
    4df9:	c9                   	leave
    4dfa:	c3                   	ret
    4dfb:	90                   	nop

0000000000004dfc <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    4dfc:	55                   	push   %rbp
    4dfd:	48 89 e5             	mov    %rsp,%rbp
    4e00:	53                   	push   %rbx
    4e01:	48 83 ec 38          	sub    $0x38,%rsp
    4e05:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e09:	48 89 f0             	mov    %rsi,%rax
    4e0c:	48 89 d6             	mov    %rdx,%rsi
    4e0f:	48 89 f2             	mov    %rsi,%rdx
    4e12:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4e16:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    4e1a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    4e1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e22:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4e26:	48 89 d6             	mov    %rdx,%rsi
    4e29:	48 89 c7             	mov    %rax,%rdi
    4e2c:	e8 53 02 00 00       	call   5084 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    4e31:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4e35:	48 89 c7             	mov    %rax,%rdi
    4e38:	e8 d7 02 00 00       	call   5114 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>
    4e3d:	48 89 c3             	mov    %rax,%rbx
    4e40:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4e44:	48 89 c7             	mov    %rax,%rdi
    4e47:	e8 b6 02 00 00       	call   5102 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    4e4c:	48 89 c1             	mov    %rax,%rcx
    4e4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e53:	48 89 da             	mov    %rbx,%rdx
    4e56:	48 89 ce             	mov    %rcx,%rsi
    4e59:	48 89 c7             	mov    %rax,%rdi
    4e5c:	e8 27 03 00 00       	call   5188 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    4e61:	eb 1a                	jmp    4e7d <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_+0x81>
    4e63:	48 89 c3             	mov    %rax,%rbx
    4e66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e6a:	48 89 c7             	mov    %rax,%rdi
    4e6d:	e8 38 02 00 00       	call   50aa <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    4e72:	48 89 d8             	mov    %rbx,%rax
    4e75:	48 89 c7             	mov    %rax,%rdi
    4e78:	e8 a3 f9 ff ff       	call   4820 <_Unwind_Resume@plt>
    4e7d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4e81:	c9                   	leave
    4e82:	c3                   	ret
    4e83:	90                   	nop

0000000000004e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4e84:	55                   	push   %rbp
    4e85:	48 89 e5             	mov    %rsp,%rbp
    4e88:	53                   	push   %rbx
    4e89:	48 83 ec 38          	sub    $0x38,%rsp
    4e8d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e91:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4e95:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4e99:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4e9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ea1:	48 89 c7             	mov    %rax,%rdi
    4ea4:	e8 57 f4 ff ff       	call   4300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4ea9:	48 89 c1             	mov    %rax,%rcx
    4eac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4eb0:	48 89 c2             	mov    %rax,%rdx
    4eb3:	48 89 ce             	mov    %rcx,%rsi
    4eb6:	48 89 df             	mov    %rbx,%rdi
    4eb9:	e8 d2 f5 ff ff       	call   4490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4ebe:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4ec3:	75 0f                	jne    4ed4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4ec5:	48 8d 05 8c 67 01 00 	lea    0x1678c(%rip),%rax        # 1b658 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    4ecc:	48 89 c7             	mov    %rax,%rdi
    4ecf:	e8 cc f3 ff ff       	call   42a0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4ed4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4ed8:	48 89 c7             	mov    %rax,%rdi
    4edb:	e8 2e fe ff ff       	call   4d0e <_ZNSt11char_traitsIcE6lengthEPKc>
    4ee0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4ee4:	48 01 d0             	add    %rdx,%rax
    4ee7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4eeb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4eef:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4ef3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ef7:	48 89 ce             	mov    %rcx,%rsi
    4efa:	48 89 c7             	mov    %rax,%rdi
    4efd:	e8 66 00 00 00       	call   4f68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4f02:	eb 1a                	jmp    4f1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4f04:	48 89 c3             	mov    %rax,%rbx
    4f07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f0b:	48 89 c7             	mov    %rax,%rdi
    4f0e:	e8 95 fe ff ff       	call   4da8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4f13:	48 89 d8             	mov    %rbx,%rax
    4f16:	48 89 c7             	mov    %rax,%rdi
    4f19:	e8 02 f9 ff ff       	call   4820 <_Unwind_Resume@plt>
    4f1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f22:	c9                   	leave
    4f23:	c3                   	ret

0000000000004f24 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4f24:	55                   	push   %rbp
    4f25:	48 89 e5             	mov    %rsp,%rbp
    4f28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4f38:	48 89 10             	mov    %rdx,(%rax)
    4f3b:	90                   	nop
    4f3c:	5d                   	pop    %rbp
    4f3d:	c3                   	ret

0000000000004f3e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4f3e:	55                   	push   %rbp
    4f3f:	48 89 e5             	mov    %rsp,%rbp
    4f42:	48 83 ec 10          	sub    $0x10,%rsp
    4f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f4e:	48 8b 00             	mov    (%rax),%rax
    4f51:	48 85 c0             	test   %rax,%rax
    4f54:	74 0f                	je     4f65 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5a:	48 8b 00             	mov    (%rax),%rax
    4f5d:	48 89 c7             	mov    %rax,%rdi
    4f60:	e8 1b f6 ff ff       	call   4580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4f65:	90                   	nop
    4f66:	c9                   	leave
    4f67:	c3                   	ret

0000000000004f68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4f68:	55                   	push   %rbp
    4f69:	48 89 e5             	mov    %rsp,%rbp
    4f6c:	48 83 ec 40          	sub    $0x40,%rsp
    4f70:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4f74:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4f78:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4f7c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4f80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4f84:	48 89 d6             	mov    %rdx,%rsi
    4f87:	48 89 c7             	mov    %rax,%rdi
    4f8a:	e8 b3 02 00 00       	call   5242 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4f8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4f93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4f97:	48 83 f8 0f          	cmp    $0xf,%rax
    4f9b:	76 3f                	jbe    4fdc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4f9d:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4fa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fa5:	ba 00 00 00 00       	mov    $0x0,%edx
    4faa:	48 89 ce             	mov    %rcx,%rsi
    4fad:	48 89 c7             	mov    %rax,%rdi
    4fb0:	e8 9b f8 ff ff       	call   4850 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4fb5:	48 89 c2             	mov    %rax,%rdx
    4fb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fbc:	48 89 d6             	mov    %rdx,%rsi
    4fbf:	48 89 c7             	mov    %rax,%rdi
    4fc2:	e8 79 f3 ff ff       	call   4340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4fc7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4fcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fcf:	48 89 d6             	mov    %rdx,%rsi
    4fd2:	48 89 c7             	mov    %rax,%rdi
    4fd5:	e8 d6 f8 ff ff       	call   48b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4fda:	eb 15                	jmp    4ff1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4fdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fe0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4fe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fe8:	48 89 c7             	mov    %rax,%rdi
    4feb:	e8 10 f3 ff ff       	call   4300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4ff0:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4ff1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4ff5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4ff9:	48 89 d6             	mov    %rdx,%rsi
    4ffc:	48 89 c7             	mov    %rax,%rdi
    4fff:	e8 20 ff ff ff       	call   4f24 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    5004:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5008:	48 89 c7             	mov    %rax,%rdi
    500b:	e8 e0 f4 ff ff       	call   44f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    5010:	48 89 c1             	mov    %rax,%rcx
    5013:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5017:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    501b:	48 89 c6             	mov    %rax,%rsi
    501e:	48 89 cf             	mov    %rcx,%rdi
    5021:	e8 da f4 ff ff       	call   4500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    5026:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    502d:	00 

	_M_set_length(__dnew);
    502e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5032:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5036:	48 89 d6             	mov    %rdx,%rsi
    5039:	48 89 c7             	mov    %rax,%rdi
    503c:	e8 2f f2 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    5041:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5045:	48 89 c7             	mov    %rax,%rdi
    5048:	e8 f1 fe ff ff       	call   4f3e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    504d:	c9                   	leave
    504e:	c3                   	ret
    504f:	90                   	nop

0000000000005050 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5050:	55                   	push   %rbp
    5051:	48 89 e5             	mov    %rsp,%rbp
    5054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5058:	90                   	nop
    5059:	5d                   	pop    %rbp
    505a:	c3                   	ret
    505b:	90                   	nop

000000000000505c <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    505c:	55                   	push   %rbp
    505d:	48 89 e5             	mov    %rsp,%rbp
    5060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5064:	90                   	nop
    5065:	5d                   	pop    %rbp
    5066:	c3                   	ret
    5067:	90                   	nop

0000000000005068 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5068:	55                   	push   %rbp
    5069:	48 89 e5             	mov    %rsp,%rbp
    506c:	48 83 ec 10          	sub    $0x10,%rsp
    5070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5078:	48 89 c7             	mov    %rax,%rdi
    507b:	e8 60 fd ff ff       	call   4de0 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    5080:	90                   	nop
    5081:	c9                   	leave
    5082:	c3                   	ret
    5083:	90                   	nop

0000000000005084 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    5084:	55                   	push   %rbp
    5085:	48 89 e5             	mov    %rsp,%rbp
    5088:	48 83 ec 10          	sub    $0x10,%rsp
    508c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5090:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    5094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5098:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    509c:	48 89 d6             	mov    %rdx,%rsi
    509f:	48 89 c7             	mov    %rax,%rdi
    50a2:	e8 cd 01 00 00       	call   5274 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>
    50a7:	90                   	nop
    50a8:	c9                   	leave
    50a9:	c3                   	ret

00000000000050aa <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    50aa:	55                   	push   %rbp
    50ab:	48 89 e5             	mov    %rsp,%rbp
    50ae:	48 83 ec 10          	sub    $0x10,%rsp
    50b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    50b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ba:	48 8b 50 10          	mov    0x10(%rax),%rdx
    50be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50c2:	48 8b 00             	mov    (%rax),%rax
    50c5:	48 29 c2             	sub    %rax,%rdx
    50c8:	48 c1 fa 02          	sar    $0x2,%rdx
    50cc:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    50d3:	cc cc cc 
    50d6:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    50da:	48 89 c2             	mov    %rax,%rdx
    50dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50e1:	48 8b 08             	mov    (%rax),%rcx
    50e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50e8:	48 89 ce             	mov    %rcx,%rsi
    50eb:	48 89 c7             	mov    %rax,%rdi
    50ee:	e8 b3 01 00 00       	call   52a6 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>
      }
    50f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f7:	48 89 c7             	mov    %rax,%rdi
    50fa:	e8 69 ff ff ff       	call   5068 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>
    50ff:	90                   	nop
    5100:	c9                   	leave
    5101:	c3                   	ret

0000000000005102 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    5102:	55                   	push   %rbp
    5103:	48 89 e5             	mov    %rsp,%rbp
    5106:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    510a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    510e:	48 8b 00             	mov    (%rax),%rax
    5111:	5d                   	pop    %rbp
    5112:	c3                   	ret
    5113:	90                   	nop

0000000000005114 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    5114:	55                   	push   %rbp
    5115:	48 89 e5             	mov    %rsp,%rbp
    5118:	53                   	push   %rbx
    5119:	48 83 ec 18          	sub    $0x18,%rsp
    511d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5121:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5125:	48 89 c7             	mov    %rax,%rdi
    5128:	e8 d5 ff ff ff       	call   5102 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    512d:	48 89 c3             	mov    %rax,%rbx
    5130:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5134:	48 89 c7             	mov    %rax,%rdi
    5137:	e8 a0 01 00 00       	call   52dc <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>
    513c:	48 89 c2             	mov    %rax,%rdx
    513f:	48 89 d0             	mov    %rdx,%rax
    5142:	48 c1 e0 02          	shl    $0x2,%rax
    5146:	48 01 d0             	add    %rdx,%rax
    5149:	48 c1 e0 02          	shl    $0x2,%rax
    514d:	48 01 d8             	add    %rbx,%rax
    5150:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5154:	c9                   	leave
    5155:	c3                   	ret

0000000000005156 <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    5156:	55                   	push   %rbp
    5157:	48 89 e5             	mov    %rsp,%rbp
    515a:	48 83 ec 10          	sub    $0x10,%rsp
    515e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5162:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    5166:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    516a:	48 89 c7             	mov    %rax,%rdi
    516d:	e8 7c 01 00 00       	call   52ee <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>
      return std::__distance(__first, __last,
    5172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5176:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    517a:	48 89 d6             	mov    %rdx,%rsi
    517d:	48 89 c7             	mov    %rax,%rdi
    5180:	e8 74 01 00 00       	call   52f9 <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>
    }
    5185:	c9                   	leave
    5186:	c3                   	ret
    5187:	90                   	nop

0000000000005188 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5188:	55                   	push   %rbp
    5189:	48 89 e5             	mov    %rsp,%rbp
    518c:	53                   	push   %rbx
    518d:	48 83 ec 38          	sub    $0x38,%rsp
    5191:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5195:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5199:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    519d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    51a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    51a5:	48 89 d6             	mov    %rdx,%rsi
    51a8:	48 89 c7             	mov    %rax,%rdi
    51ab:	e8 a6 ff ff ff       	call   5156 <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>
    51b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    51b4:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    51b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51bc:	48 89 c7             	mov    %rax,%rdi
    51bf:	e8 c0 01 00 00       	call   5384 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    51c4:	48 89 c2             	mov    %rax,%rdx
    51c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51cb:	48 89 d6             	mov    %rdx,%rsi
    51ce:	48 89 c7             	mov    %rax,%rdi
    51d1:	e8 4e 01 00 00       	call   5324 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>
    51d6:	48 89 c6             	mov    %rax,%rsi
    51d9:	48 89 df             	mov    %rbx,%rdi
    51dc:	e8 b1 01 00 00       	call   5392 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>
    51e1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    51e5:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    51e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51ec:	48 8b 08             	mov    (%rax),%rcx
    51ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    51f3:	48 89 d0             	mov    %rdx,%rax
    51f6:	48 c1 e0 02          	shl    $0x2,%rax
    51fa:	48 01 d0             	add    %rdx,%rax
    51fd:	48 c1 e0 02          	shl    $0x2,%rax
    5201:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    5205:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5209:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    520d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5211:	48 89 c7             	mov    %rax,%rdi
    5214:	e8 6b 01 00 00       	call   5384 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    5219:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    521c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5220:	48 8b 10             	mov    (%rax),%rdx
    5223:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5227:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    522b:	48 89 c7             	mov    %rax,%rdi
    522e:	e8 92 01 00 00       	call   53c5 <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>
	  this->_M_impl._M_finish =
    5233:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5237:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    523b:	90                   	nop
    523c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5240:	c9                   	leave
    5241:	c3                   	ret

0000000000005242 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    5242:	55                   	push   %rbp
    5243:	48 89 e5             	mov    %rsp,%rbp
    5246:	48 83 ec 10          	sub    $0x10,%rsp
    524a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    524e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    5252:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5256:	48 89 c7             	mov    %rax,%rdi
    5259:	e8 98 01 00 00       	call   53f6 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    525e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5262:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5266:	48 89 d6             	mov    %rdx,%rsi
    5269:	48 89 c7             	mov    %rax,%rdi
    526c:	e8 90 01 00 00       	call   5401 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    5271:	c9                   	leave
    5272:	c3                   	ret
    5273:	90                   	nop

0000000000005274 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5274:	55                   	push   %rbp
    5275:	48 89 e5             	mov    %rsp,%rbp
    5278:	48 83 ec 10          	sub    $0x10,%rsp
    527c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5284:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    528c:	48 89 d6             	mov    %rdx,%rsi
    528f:	48 89 c7             	mov    %rax,%rdi
    5292:	e8 81 01 00 00       	call   5418 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    5297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    529b:	48 89 c7             	mov    %rax,%rdi
    529e:	e8 9b 01 00 00       	call   543e <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>
	{ }
    52a3:	90                   	nop
    52a4:	c9                   	leave
    52a5:	c3                   	ret

00000000000052a6 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>:
      _M_deallocate(pointer __p, size_t __n)
    52a6:	55                   	push   %rbp
    52a7:	48 89 e5             	mov    %rsp,%rbp
    52aa:	48 83 ec 20          	sub    $0x20,%rsp
    52ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    52ba:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    52bf:	74 17                	je     52d8 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    52c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    52cd:	48 89 ce             	mov    %rcx,%rsi
    52d0:	48 89 c7             	mov    %rax,%rdi
    52d3:	e8 94 01 00 00       	call   546c <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>
      }
    52d8:	90                   	nop
    52d9:	c9                   	leave
    52da:	c3                   	ret
    52db:	90                   	nop

00000000000052dc <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>:
      size() const noexcept { return _M_len; }
    52dc:	55                   	push   %rbp
    52dd:	48 89 e5             	mov    %rsp,%rbp
    52e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e8:	48 8b 40 08          	mov    0x8(%rax),%rax
    52ec:	5d                   	pop    %rbp
    52ed:	c3                   	ret

00000000000052ee <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    52ee:	55                   	push   %rbp
    52ef:	48 89 e5             	mov    %rsp,%rbp
    52f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    52f6:	90                   	nop
    52f7:	5d                   	pop    %rbp
    52f8:	c3                   	ret

00000000000052f9 <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    52f9:	55                   	push   %rbp
    52fa:	48 89 e5             	mov    %rsp,%rbp
    52fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5301:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    5305:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5309:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    530d:	48 c1 f8 02          	sar    $0x2,%rax
    5311:	48 89 c2             	mov    %rax,%rdx
    5314:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    531b:	cc cc cc 
    531e:	48 0f af c2          	imul   %rdx,%rax
    }
    5322:	5d                   	pop    %rbp
    5323:	c3                   	ret

0000000000005324 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5324:	55                   	push   %rbp
    5325:	48 89 e5             	mov    %rsp,%rbp
    5328:	53                   	push   %rbx
    5329:	48 83 ec 28          	sub    $0x28,%rsp
    532d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5331:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5335:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5339:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    533d:	48 89 d6             	mov    %rdx,%rsi
    5340:	48 89 c7             	mov    %rax,%rdi
    5343:	e8 d0 00 00 00       	call   5418 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    5348:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    534c:	48 89 c7             	mov    %rax,%rdi
    534f:	e8 46 01 00 00       	call   549a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>
    5354:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5358:	0f 92 c3             	setb   %bl
    535b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    535f:	48 89 c7             	mov    %rax,%rdi
    5362:	e8 79 fa ff ff       	call   4de0 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    5367:	84 db                	test   %bl,%bl
    5369:	74 0f                	je     537a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_+0x56>
	  __throw_length_error(
    536b:	48 8d 05 1e 63 01 00 	lea    0x1631e(%rip),%rax        # 1b690 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x60>
    5372:	48 89 c7             	mov    %rax,%rdi
    5375:	e8 56 ee ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    537a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    537e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5382:	c9                   	leave
    5383:	c3                   	ret

0000000000005384 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5384:	55                   	push   %rbp
    5385:	48 89 e5             	mov    %rsp,%rbp
    5388:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    538c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5390:	5d                   	pop    %rbp
    5391:	c3                   	ret

0000000000005392 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5392:	55                   	push   %rbp
    5393:	48 89 e5             	mov    %rsp,%rbp
    5396:	48 83 ec 10          	sub    $0x10,%rsp
    539a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    539e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    53a2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    53a7:	74 15                	je     53be <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x2c>
    53a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53b1:	48 89 d6             	mov    %rdx,%rsi
    53b4:	48 89 c7             	mov    %rax,%rdi
    53b7:	e8 20 01 00 00       	call   54dc <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>
    53bc:	eb 05                	jmp    53c3 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x31>
    53be:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    53c3:	c9                   	leave
    53c4:	c3                   	ret

00000000000053c5 <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    53c5:	55                   	push   %rbp
    53c6:	48 89 e5             	mov    %rsp,%rbp
    53c9:	48 83 ec 20          	sub    $0x20,%rsp
    53cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    53d9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
    53dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    53e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    53e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e9:	48 89 ce             	mov    %rcx,%rsi
    53ec:	48 89 c7             	mov    %rax,%rdi
    53ef:	e8 12 01 00 00       	call   5506 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    }
    53f4:	c9                   	leave
    53f5:	c3                   	ret

00000000000053f6 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    53f6:	55                   	push   %rbp
    53f7:	48 89 e5             	mov    %rsp,%rbp
    53fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    53fe:	90                   	nop
    53ff:	5d                   	pop    %rbp
    5400:	c3                   	ret

0000000000005401 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    5401:	55                   	push   %rbp
    5402:	48 89 e5             	mov    %rsp,%rbp
    5405:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5409:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    540d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5411:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    5415:	5d                   	pop    %rbp
    5416:	c3                   	ret
    5417:	90                   	nop

0000000000005418 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5418:	55                   	push   %rbp
    5419:	48 89 e5             	mov    %rsp,%rbp
    541c:	48 83 ec 10          	sub    $0x10,%rsp
    5420:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5424:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5428:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    542c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5430:	48 89 d6             	mov    %rdx,%rsi
    5433:	48 89 c7             	mov    %rax,%rdi
    5436:	e8 01 01 00 00       	call   553c <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>
    543b:	90                   	nop
    543c:	c9                   	leave
    543d:	c3                   	ret

000000000000543e <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    543e:	55                   	push   %rbp
    543f:	48 89 e5             	mov    %rsp,%rbp
    5442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    544a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5451:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5455:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    545c:	00 
    545d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5461:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5468:	00 
	{ }
    5469:	90                   	nop
    546a:	5d                   	pop    %rbp
    546b:	c3                   	ret

000000000000546c <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>:
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    546c:	55                   	push   %rbp
    546d:	48 89 e5             	mov    %rsp,%rbp
    5470:	48 83 ec 20          	sub    $0x20,%rsp
    5474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5478:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    547c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5480:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5484:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    548c:	48 89 ce             	mov    %rcx,%rsi
    548f:	48 89 c7             	mov    %rax,%rdi
    5492:	e8 b5 00 00 00       	call   554c <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>
    5497:	90                   	nop
    5498:	c9                   	leave
    5499:	c3                   	ret

000000000000549a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    549a:	55                   	push   %rbp
    549b:	48 89 e5             	mov    %rsp,%rbp
    549e:	48 83 ec 20          	sub    $0x20,%rsp
    54a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    54a6:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    54ad:	66 66 06 
    54b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    54b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54b8:	48 89 c7             	mov    %rax,%rdi
    54bb:	e8 c6 00 00 00       	call   5586 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>
    54c0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    54c4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    54c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    54cc:	48 89 d6             	mov    %rdx,%rsi
    54cf:	48 89 c7             	mov    %rax,%rdi
    54d2:	e8 c9 00 00 00       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    54d7:	48 8b 00             	mov    (%rax),%rax
      }
    54da:	c9                   	leave
    54db:	c3                   	ret

00000000000054dc <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>:
      allocate(allocator_type& __a, size_type __n)
    54dc:	55                   	push   %rbp
    54dd:	48 89 e5             	mov    %rsp,%rbp
    54e0:	48 83 ec 10          	sub    $0x10,%rsp
    54e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    54ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    54f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f4:	ba 00 00 00 00       	mov    $0x0,%edx
    54f9:	48 89 ce             	mov    %rcx,%rsi
    54fc:	48 89 c7             	mov    %rax,%rdi
    54ff:	e8 c8 00 00 00       	call   55cc <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>
    5504:	c9                   	leave
    5505:	c3                   	ret

0000000000005506 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    5506:	55                   	push   %rbp
    5507:	48 89 e5             	mov    %rsp,%rbp
    550a:	48 83 ec 30          	sub    $0x30,%rsp
    550e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5512:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5516:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    551a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    551e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    5522:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5526:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    552a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    552e:	48 89 ce             	mov    %rcx,%rsi
    5531:	48 89 c7             	mov    %rax,%rdi
    5534:	e8 fe 00 00 00       	call   5637 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>
    }
    5539:	c9                   	leave
    553a:	c3                   	ret
    553b:	90                   	nop

000000000000553c <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    553c:	55                   	push   %rbp
    553d:	48 89 e5             	mov    %rsp,%rbp
    5540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5544:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5548:	90                   	nop
    5549:	5d                   	pop    %rbp
    554a:	c3                   	ret
    554b:	90                   	nop

000000000000554c <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    554c:	55                   	push   %rbp
    554d:	48 89 e5             	mov    %rsp,%rbp
    5550:	48 83 ec 20          	sub    $0x20,%rsp
    5554:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5558:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    555c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5560:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5564:	48 89 d0             	mov    %rdx,%rax
    5567:	48 c1 e0 02          	shl    $0x2,%rax
    556b:	48 01 d0             	add    %rdx,%rax
    556e:	48 c1 e0 02          	shl    $0x2,%rax
    5572:	48 89 c2             	mov    %rax,%rdx
    5575:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5579:	48 89 d6             	mov    %rdx,%rsi
    557c:	48 89 c7             	mov    %rax,%rdi
    557f:	e8 ac ee ff ff       	call   4430 <_ZdlPvm@plt>
      }
    5584:	c9                   	leave
    5585:	c3                   	ret

0000000000005586 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5586:	55                   	push   %rbp
    5587:	48 89 e5             	mov    %rsp,%rbp
    558a:	48 83 ec 10          	sub    $0x10,%rsp
    558e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus <= 201703L
	return __a.max_size();
    5592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5596:	48 89 c7             	mov    %rax,%rdi
    5599:	e8 c6 00 00 00       	call   5664 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>
#else
	return size_t(-1) / sizeof(value_type);
#endif
      }
    559e:	c9                   	leave
    559f:	c3                   	ret

00000000000055a0 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    55a0:	55                   	push   %rbp
    55a1:	48 89 e5             	mov    %rsp,%rbp
    55a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    55ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55b0:	48 8b 10             	mov    (%rax),%rdx
    55b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55b7:	48 8b 00             	mov    (%rax),%rax
    55ba:	48 39 c2             	cmp    %rax,%rdx
    55bd:	73 06                	jae    55c5 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    55bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55c3:	eb 04                	jmp    55c9 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    55c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    55c9:	5d                   	pop    %rbp
    55ca:	c3                   	ret
    55cb:	90                   	nop

00000000000055cc <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    55cc:	55                   	push   %rbp
    55cd:	48 89 e5             	mov    %rsp,%rbp
    55d0:	48 83 ec 20          	sub    $0x20,%rsp
    55d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    55e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55e4:	48 89 c7             	mov    %rax,%rdi
    55e7:	e8 92 00 00 00       	call   567e <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    55ec:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    55f0:	0f 92 c0             	setb   %al
    55f3:	0f b6 c0             	movzbl %al,%eax
    55f6:	48 85 c0             	test   %rax,%rax
    55f9:	0f 95 c0             	setne  %al
    55fc:	84 c0                	test   %al,%al
    55fe:	74 1a                	je     561a <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5600:	48 b8 cc cc cc cc cc 	movabs $0xccccccccccccccc,%rax
    5607:	cc cc 0c 
    560a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    560e:	73 05                	jae    5615 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5610:	e8 cb ec ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5615:	e8 e6 ea ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    561a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    561e:	48 89 d0             	mov    %rdx,%rax
    5621:	48 c1 e0 02          	shl    $0x2,%rax
    5625:	48 01 d0             	add    %rdx,%rax
    5628:	48 c1 e0 02          	shl    $0x2,%rax
    562c:	48 89 c7             	mov    %rax,%rdi
    562f:	e8 dc ed ff ff       	call   4410 <_Znwm@plt>
    5634:	90                   	nop
      }
    5635:	c9                   	leave
    5636:	c3                   	ret

0000000000005637 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    5637:	55                   	push   %rbp
    5638:	48 89 e5             	mov    %rsp,%rbp
    563b:	48 83 ec 20          	sub    $0x20,%rsp
    563f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5643:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5647:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    564b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    564f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5657:	48 89 ce             	mov    %rcx,%rsi
    565a:	48 89 c7             	mov    %rax,%rdi
    565d:	e8 30 00 00 00       	call   5692 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    5662:	c9                   	leave
    5663:	c3                   	ret

0000000000005664 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5664:	55                   	push   %rbp
    5665:	48 89 e5             	mov    %rsp,%rbp
    5668:	48 83 ec 10          	sub    $0x10,%rsp
    566c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5674:	48 89 c7             	mov    %rax,%rdi
    5677:	e8 02 00 00 00       	call   567e <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    567c:	c9                   	leave
    567d:	c3                   	ret

000000000000567e <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    567e:	55                   	push   %rbp
    567f:	48 89 e5             	mov    %rsp,%rbp
    5682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5686:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    568d:	66 66 06 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    5690:	5d                   	pop    %rbp
    5691:	c3                   	ret

0000000000005692 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    5692:	55                   	push   %rbp
    5693:	48 89 e5             	mov    %rsp,%rbp
    5696:	53                   	push   %rbx
    5697:	48 83 ec 28          	sub    $0x28,%rsp
    569b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    569f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    56a3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    56a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    56ab:	48 89 c7             	mov    %rax,%rdi
    56ae:	e8 2a 00 00 00       	call   56dd <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    56b3:	48 89 c3             	mov    %rax,%rbx
    56b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56ba:	48 89 c7             	mov    %rax,%rdi
    56bd:	e8 1b 00 00 00       	call   56dd <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    56c2:	48 89 c1             	mov    %rax,%rcx
    56c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56c9:	48 89 c2             	mov    %rax,%rdx
    56cc:	48 89 de             	mov    %rbx,%rsi
    56cf:	48 89 cf             	mov    %rcx,%rdi
    56d2:	e8 14 00 00 00       	call   56eb <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    }
    56d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    56db:	c9                   	leave
    56dc:	c3                   	ret

00000000000056dd <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    56dd:	55                   	push   %rbp
    56de:	48 89 e5             	mov    %rsp,%rbp
    56e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    56e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56e9:	5d                   	pop    %rbp
    56ea:	c3                   	ret

00000000000056eb <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    56eb:	55                   	push   %rbp
    56ec:	48 89 e5             	mov    %rsp,%rbp
    56ef:	41 54                	push   %r12
    56f1:	53                   	push   %rbx
    56f2:	48 83 ec 20          	sub    $0x20,%rsp
    56f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    56fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    56fe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    5702:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5706:	48 89 c7             	mov    %rax,%rdi
    5709:	e8 55 00 00 00       	call   5763 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>
    570e:	49 89 c4             	mov    %rax,%r12
    5711:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5715:	48 89 c7             	mov    %rax,%rdi
    5718:	e8 38 00 00 00       	call   5755 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    571d:	48 89 c3             	mov    %rax,%rbx
    5720:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5724:	48 89 c7             	mov    %rax,%rdi
    5727:	e8 29 00 00 00       	call   5755 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    572c:	4c 89 e2             	mov    %r12,%rdx
    572f:	48 89 de             	mov    %rbx,%rsi
    5732:	48 89 c7             	mov    %rax,%rdi
    5735:	e8 37 00 00 00       	call   5771 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    573a:	48 89 c2             	mov    %rax,%rdx
    573d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    5741:	48 89 d6             	mov    %rdx,%rsi
    5744:	48 89 c7             	mov    %rax,%rdi
    5747:	e8 52 00 00 00       	call   579e <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>
    }
    574c:	48 83 c4 20          	add    $0x20,%rsp
    5750:	5b                   	pop    %rbx
    5751:	41 5c                	pop    %r12
    5753:	5d                   	pop    %rbp
    5754:	c3                   	ret

0000000000005755 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
    __niter_base(_Iterator __it)
    5755:	55                   	push   %rbp
    5756:	48 89 e5             	mov    %rsp,%rbp
    5759:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    575d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5761:	5d                   	pop    %rbp
    5762:	c3                   	ret

0000000000005763 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>:
    __niter_base(_Iterator __it)
    5763:	55                   	push   %rbp
    5764:	48 89 e5             	mov    %rsp,%rbp
    5767:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    576b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    576f:	5d                   	pop    %rbp
    5770:	c3                   	ret

0000000000005771 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    5771:	55                   	push   %rbp
    5772:	48 89 e5             	mov    %rsp,%rbp
    5775:	48 83 ec 20          	sub    $0x20,%rsp
    5779:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    577d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5781:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    5785:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5789:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    578d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5791:	48 89 ce             	mov    %rcx,%rsi
    5794:	48 89 c7             	mov    %rax,%rdi
    5797:	e8 14 00 00 00       	call   57b0 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    579c:	c9                   	leave
    579d:	c3                   	ret

000000000000579e <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    579e:	55                   	push   %rbp
    579f:	48 89 e5             	mov    %rsp,%rbp
    57a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    57aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57ae:	5d                   	pop    %rbp
    57af:	c3                   	ret

00000000000057b0 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    57b0:	55                   	push   %rbp
    57b1:	48 89 e5             	mov    %rsp,%rbp
    57b4:	48 83 ec 20          	sub    $0x20,%rsp
    57b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    57c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    57c8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    57cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57d0:	48 89 ce             	mov    %rcx,%rsi
    57d3:	48 89 c7             	mov    %rax,%rdi
    57d6:	e8 02 00 00 00       	call   57dd <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>
    }
    57db:	c9                   	leave
    57dc:	c3                   	ret

00000000000057dd <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    57dd:	55                   	push   %rbp
    57de:	48 89 e5             	mov    %rsp,%rbp
    57e1:	48 83 ec 30          	sub    $0x30,%rsp
    57e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    57e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    57ed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    57f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    57f5:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    57f9:	48 c1 f8 02          	sar    $0x2,%rax
    57fd:	48 89 c2             	mov    %rax,%rdx
    5800:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    5807:	cc cc cc 
    580a:	48 0f af c2          	imul   %rdx,%rax
    580e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    5812:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5817:	74 28                	je     5841 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    5819:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    581d:	48 89 d0             	mov    %rdx,%rax
    5820:	48 c1 e0 02          	shl    $0x2,%rax
    5824:	48 01 d0             	add    %rdx,%rax
    5827:	48 c1 e0 02          	shl    $0x2,%rax
    582b:	48 89 c2             	mov    %rax,%rdx
    582e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5832:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5836:	48 89 ce             	mov    %rcx,%rsi
    5839:	48 89 c7             	mov    %rax,%rdi
    583c:	e8 4f ef ff ff       	call   4790 <memmove@plt>
	  return __result + _Num;
    5841:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5845:	48 89 d0             	mov    %rdx,%rax
    5848:	48 c1 e0 02          	shl    $0x2,%rax
    584c:	48 01 d0             	add    %rdx,%rax
    584f:	48 c1 e0 02          	shl    $0x2,%rax
    5853:	48 89 c2             	mov    %rax,%rdx
    5856:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    585a:	48 01 d0             	add    %rdx,%rax
	}
    585d:	c9                   	leave
    585e:	c3                   	ret
    585f:	90                   	nop

0000000000005860 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5860:	55                   	push   %rbp
    5861:	48 89 e5             	mov    %rsp,%rbp
    5864:	48 83 ec 10          	sub    $0x10,%rsp
    5868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    586c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5870:	48 89 c7             	mov    %rax,%rdi
    5873:	e8 0c fb ff ff       	call   5384 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    5878:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    587b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    587f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5883:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5887:	48 8b 00             	mov    (%rax),%rax
    588a:	48 89 ce             	mov    %rcx,%rsi
    588d:	48 89 c7             	mov    %rax,%rdi
    5890:	e8 0f 00 00 00       	call   58a4 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>
      }
    5895:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5899:	48 89 c7             	mov    %rax,%rdi
    589c:	e8 09 f8 ff ff       	call   50aa <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    58a1:	90                   	nop
    58a2:	c9                   	leave
    58a3:	c3                   	ret

00000000000058a4 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    58a4:	55                   	push   %rbp
    58a5:	48 89 e5             	mov    %rsp,%rbp
    58a8:	48 83 ec 20          	sub    $0x20,%rsp
    58ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    58b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    58b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58c0:	48 89 d6             	mov    %rdx,%rsi
    58c3:	48 89 c7             	mov    %rax,%rdi
    58c6:	e8 03 00 00 00       	call   58ce <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>
    }
    58cb:	90                   	nop
    58cc:	c9                   	leave
    58cd:	c3                   	ret

00000000000058ce <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    58ce:	55                   	push   %rbp
    58cf:	48 89 e5             	mov    %rsp,%rbp
    58d2:	48 83 ec 10          	sub    $0x10,%rsp
    58d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    58de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58e6:	48 89 d6             	mov    %rdx,%rsi
    58e9:	48 89 c7             	mov    %rax,%rdi
    58ec:	e8 03 00 00 00       	call   58f4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>
    }
    58f1:	90                   	nop
    58f2:	c9                   	leave
    58f3:	c3                   	ret

00000000000058f4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    58f4:	55                   	push   %rbp
    58f5:	48 89 e5             	mov    %rsp,%rbp
    58f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5900:	90                   	nop
    5901:	5d                   	pop    %rbp
    5902:	c3                   	ret

0000000000005903 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    5903:	55                   	push   %rbp
    5904:	48 89 e5             	mov    %rsp,%rbp
    5907:	41 54                	push   %r12
    5909:	53                   	push   %rbx
    590a:	48 83 ec 30          	sub    $0x30,%rsp
    590e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5912:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5916:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    591a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    591e:	8b 40 1c             	mov    0x1c(%rax),%eax
    5921:	89 c3                	mov    %eax,%ebx
    5923:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5927:	48 89 c7             	mov    %rax,%rdi
    592a:	e8 1d 02 00 00       	call   5b4c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    592f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    5933:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5937:	48 89 de             	mov    %rbx,%rsi
    593a:	48 89 c7             	mov    %rax,%rdi
    593d:	e8 42 02 00 00       	call   5b84 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    5942:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5946:	48 89 c7             	mov    %rax,%rdi
    5949:	e8 1a 02 00 00       	call   5b68 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    594e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5952:	48 89 c7             	mov    %rax,%rdi
    5955:	e8 e4 02 00 00       	call   5c3e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    595a:	48 89 c2             	mov    %rax,%rdx
    595d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    5961:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5965:	48 89 ce             	mov    %rcx,%rsi
    5968:	48 89 c7             	mov    %rax,%rdi
    596b:	e8 30 ea ff ff       	call   43a0 <vkAllocateCommandBuffers@plt>
    5970:	85 c0                	test   %eax,%eax
    5972:	0f 95 c0             	setne  %al
    5975:	84 c0                	test   %al,%al
    5977:	74 7f                	je     59f8 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    5979:	bf 10 00 00 00       	mov    $0x10,%edi
    597e:	e8 1d e8 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5983:	48 89 c3             	mov    %rax,%rbx
    5986:	48 8d 05 73 63 01 00 	lea    0x16373(%rip),%rax        # 1bd00 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    598d:	48 89 c6             	mov    %rax,%rsi
    5990:	48 89 df             	mov    %rbx,%rdi
    5993:	e8 88 e7 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5998:	48 8b 05 09 86 02 00 	mov    0x28609(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    599f:	48 89 c2             	mov    %rax,%rdx
    59a2:	48 8d 05 97 83 02 00 	lea    0x28397(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    59a9:	48 89 c6             	mov    %rax,%rsi
    59ac:	48 89 df             	mov    %rbx,%rdi
    59af:	e8 0c ee ff ff       	call   47c0 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    59b4:	48 89 c3             	mov    %rax,%rbx
    59b7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    59bb:	48 89 c7             	mov    %rax,%rdi
    59be:	e8 a5 01 00 00       	call   5b68 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    59c3:	48 89 d8             	mov    %rbx,%rax
    59c6:	48 89 c7             	mov    %rax,%rdi
    59c9:	e8 52 ee ff ff       	call   4820 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    59ce:	49 89 c4             	mov    %rax,%r12
    59d1:	48 89 df             	mov    %rbx,%rdi
    59d4:	e8 d7 e8 ff ff       	call   42b0 <__cxa_free_exception@plt>
    59d9:	4c 89 e3             	mov    %r12,%rbx
    59dc:	eb 03                	jmp    59e1 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    59de:	48 89 c3             	mov    %rax,%rbx
    59e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59e5:	48 89 c7             	mov    %rax,%rdi
    59e8:	e8 0d 02 00 00       	call   5bfa <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    59ed:	48 89 d8             	mov    %rbx,%rax
    59f0:	48 89 c7             	mov    %rax,%rdi
    59f3:	e8 28 ee ff ff       	call   4820 <_Unwind_Resume@plt>
  return commandBuffers;
    59f8:	90                   	nop
}
    59f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59fd:	48 83 c4 30          	add    $0x30,%rsp
    5a01:	5b                   	pop    %rbx
    5a02:	41 5c                	pop    %r12
    5a04:	5d                   	pop    %rbp
    5a05:	c3                   	ret

0000000000005a06 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>:

void beginCommandBuffer(VkCommandBuffer commandBuffer,
                        const VkCommandBufferBeginInfo *pBeginInfo) {
    5a06:	55                   	push   %rbp
    5a07:	48 89 e5             	mov    %rsp,%rbp
    5a0a:	41 54                	push   %r12
    5a0c:	53                   	push   %rbx
    5a0d:	48 83 ec 10          	sub    $0x10,%rsp
    5a11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5a15:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  if (vkBeginCommandBuffer(commandBuffer, pBeginInfo) != VK_SUCCESS) {
    5a19:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5a1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a21:	48 89 d6             	mov    %rdx,%rsi
    5a24:	48 89 c7             	mov    %rax,%rdi
    5a27:	e8 f4 e9 ff ff       	call   4420 <vkBeginCommandBuffer@plt>
    5a2c:	85 c0                	test   %eax,%eax
    5a2e:	0f 95 c0             	setne  %al
    5a31:	84 c0                	test   %al,%al
    5a33:	74 51                	je     5a86 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo+0x80>
    throw std::runtime_error("Failed to begin command buffer.");
    5a35:	bf 10 00 00 00       	mov    $0x10,%edi
    5a3a:	e8 61 e7 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5a3f:	48 89 c3             	mov    %rax,%rbx
    5a42:	48 8d 05 df 62 01 00 	lea    0x162df(%rip),%rax        # 1bd28 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    5a49:	48 89 c6             	mov    %rax,%rsi
    5a4c:	48 89 df             	mov    %rbx,%rdi
    5a4f:	e8 cc e6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5a54:	48 8b 05 4d 85 02 00 	mov    0x2854d(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a5b:	48 89 c2             	mov    %rax,%rdx
    5a5e:	48 8d 05 db 82 02 00 	lea    0x282db(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a65:	48 89 c6             	mov    %rax,%rsi
    5a68:	48 89 df             	mov    %rbx,%rdi
    5a6b:	e8 50 ed ff ff       	call   47c0 <__cxa_throw@plt>
    5a70:	49 89 c4             	mov    %rax,%r12
    5a73:	48 89 df             	mov    %rbx,%rdi
    5a76:	e8 35 e8 ff ff       	call   42b0 <__cxa_free_exception@plt>
    5a7b:	4c 89 e0             	mov    %r12,%rax
    5a7e:	48 89 c7             	mov    %rax,%rdi
    5a81:	e8 9a ed ff ff       	call   4820 <_Unwind_Resume@plt>
  }
}
    5a86:	90                   	nop
    5a87:	48 83 c4 10          	add    $0x10,%rsp
    5a8b:	5b                   	pop    %rbx
    5a8c:	41 5c                	pop    %r12
    5a8e:	5d                   	pop    %rbp
    5a8f:	c3                   	ret

0000000000005a90 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>:

void endCommandBuffer(VkCommandBuffer commandBuffer) {
    5a90:	55                   	push   %rbp
    5a91:	48 89 e5             	mov    %rsp,%rbp
    5a94:	41 54                	push   %r12
    5a96:	53                   	push   %rbx
    5a97:	48 83 ec 10          	sub    $0x10,%rsp
    5a9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS) {
    5a9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5aa3:	48 89 c7             	mov    %rax,%rdi
    5aa6:	e8 d5 ed ff ff       	call   4880 <vkEndCommandBuffer@plt>
    5aab:	85 c0                	test   %eax,%eax
    5aad:	0f 95 c0             	setne  %al
    5ab0:	84 c0                	test   %al,%al
    5ab2:	74 51                	je     5b05 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T+0x75>
    throw std::runtime_error("Failed to end command buffer.");
    5ab4:	bf 10 00 00 00       	mov    $0x10,%edi
    5ab9:	e8 e2 e6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5abe:	48 89 c3             	mov    %rax,%rbx
    5ac1:	48 8d 05 80 62 01 00 	lea    0x16280(%rip),%rax        # 1bd48 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    5ac8:	48 89 c6             	mov    %rax,%rsi
    5acb:	48 89 df             	mov    %rbx,%rdi
    5ace:	e8 4d e6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5ad3:	48 8b 05 ce 84 02 00 	mov    0x284ce(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5ada:	48 89 c2             	mov    %rax,%rdx
    5add:	48 8d 05 5c 82 02 00 	lea    0x2825c(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5ae4:	48 89 c6             	mov    %rax,%rsi
    5ae7:	48 89 df             	mov    %rbx,%rdi
    5aea:	e8 d1 ec ff ff       	call   47c0 <__cxa_throw@plt>
    5aef:	49 89 c4             	mov    %rax,%r12
    5af2:	48 89 df             	mov    %rbx,%rdi
    5af5:	e8 b6 e7 ff ff       	call   42b0 <__cxa_free_exception@plt>
    5afa:	4c 89 e0             	mov    %r12,%rax
    5afd:	48 89 c7             	mov    %rax,%rdi
    5b00:	e8 1b ed ff ff       	call   4820 <_Unwind_Resume@plt>
  }
}
    5b05:	90                   	nop
    5b06:	48 83 c4 10          	add    $0x10,%rsp
    5b0a:	5b                   	pop    %rbx
    5b0b:	41 5c                	pop    %r12
    5b0d:	5d                   	pop    %rbp
    5b0e:	c3                   	ret

0000000000005b0f <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    5b0f:	55                   	push   %rbp
    5b10:	48 89 e5             	mov    %rsp,%rbp
    5b13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5b1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b1f:	5d                   	pop    %rbp
    5b20:	c3                   	ret

0000000000005b21 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    5b21:	55                   	push   %rbp
    5b22:	48 89 e5             	mov    %rsp,%rbp
    5b25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b2d:	5d                   	pop    %rbp
    5b2e:	c3                   	ret
    5b2f:	90                   	nop

0000000000005b30 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5b30:	55                   	push   %rbp
    5b31:	48 89 e5             	mov    %rsp,%rbp
    5b34:	48 83 ec 10          	sub    $0x10,%rsp
    5b38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b40:	48 89 c7             	mov    %rax,%rdi
    5b43:	e8 20 00 00 00       	call   5b68 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5b48:	90                   	nop
    5b49:	c9                   	leave
    5b4a:	c3                   	ret
    5b4b:	90                   	nop

0000000000005b4c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5b4c:	55                   	push   %rbp
    5b4d:	48 89 e5             	mov    %rsp,%rbp
    5b50:	48 83 ec 10          	sub    $0x10,%rsp
    5b54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b5c:	48 89 c7             	mov    %rax,%rdi
    5b5f:	e8 4c 01 00 00       	call   5cb0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    5b64:	90                   	nop
    5b65:	c9                   	leave
    5b66:	c3                   	ret
    5b67:	90                   	nop

0000000000005b68 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5b68:	55                   	push   %rbp
    5b69:	48 89 e5             	mov    %rsp,%rbp
    5b6c:	48 83 ec 10          	sub    $0x10,%rsp
    5b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b78:	48 89 c7             	mov    %rax,%rdi
    5b7b:	e8 3c 01 00 00       	call   5cbc <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    5b80:	90                   	nop
    5b81:	c9                   	leave
    5b82:	c3                   	ret
    5b83:	90                   	nop

0000000000005b84 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5b84:	55                   	push   %rbp
    5b85:	48 89 e5             	mov    %rsp,%rbp
    5b88:	53                   	push   %rbx
    5b89:	48 83 ec 28          	sub    $0x28,%rsp
    5b8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5b95:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5b99:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5b9d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5ba1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5ba5:	48 89 d6             	mov    %rdx,%rsi
    5ba8:	48 89 c7             	mov    %rax,%rdi
    5bab:	e8 17 01 00 00       	call   5cc7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    5bb0:	48 89 c1             	mov    %rax,%rcx
    5bb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bb7:	48 89 c2             	mov    %rax,%rdx
    5bba:	48 89 ce             	mov    %rcx,%rsi
    5bbd:	48 89 df             	mov    %rbx,%rdi
    5bc0:	e8 63 01 00 00       	call   5d28 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    5bc5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5bc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5bcd:	48 89 d6             	mov    %rdx,%rsi
    5bd0:	48 89 c7             	mov    %rax,%rdi
    5bd3:	e8 ae 01 00 00       	call   5d86 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    5bd8:	eb 1a                	jmp    5bf4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    5bda:	48 89 c3             	mov    %rax,%rbx
    5bdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5be1:	48 89 c7             	mov    %rax,%rdi
    5be4:	e8 79 00 00 00       	call   5c62 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5be9:	48 89 d8             	mov    %rbx,%rax
    5bec:	48 89 c7             	mov    %rax,%rdi
    5bef:	e8 2c ec ff ff       	call   4820 <_Unwind_Resume@plt>
    5bf4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5bf8:	c9                   	leave
    5bf9:	c3                   	ret

0000000000005bfa <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5bfa:	55                   	push   %rbp
    5bfb:	48 89 e5             	mov    %rsp,%rbp
    5bfe:	48 83 ec 10          	sub    $0x10,%rsp
    5c02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c0a:	48 89 c7             	mov    %rax,%rdi
    5c0d:	e8 b4 01 00 00       	call   5dc6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5c12:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c19:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5c1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c21:	48 8b 00             	mov    (%rax),%rax
    5c24:	48 89 ce             	mov    %rcx,%rsi
    5c27:	48 89 c7             	mov    %rax,%rdi
    5c2a:	e8 a5 01 00 00       	call   5dd4 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
      }
    5c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c33:	48 89 c7             	mov    %rax,%rdi
    5c36:	e8 27 00 00 00       	call   5c62 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5c3b:	90                   	nop
    5c3c:	c9                   	leave
    5c3d:	c3                   	ret

0000000000005c3e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5c3e:	55                   	push   %rbp
    5c3f:	48 89 e5             	mov    %rsp,%rbp
    5c42:	48 83 ec 10          	sub    $0x10,%rsp
    5c46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c4e:	48 8b 10             	mov    (%rax),%rdx
    5c51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c55:	48 89 d6             	mov    %rdx,%rsi
    5c58:	48 89 c7             	mov    %rax,%rdi
    5c5b:	e8 9e 01 00 00       	call   5dfe <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    5c60:	c9                   	leave
    5c61:	c3                   	ret

0000000000005c62 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5c62:	55                   	push   %rbp
    5c63:	48 89 e5             	mov    %rsp,%rbp
    5c66:	48 83 ec 10          	sub    $0x10,%rsp
    5c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c72:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c7a:	48 8b 00             	mov    (%rax),%rax
    5c7d:	48 29 c2             	sub    %rax,%rdx
    5c80:	48 89 d0             	mov    %rdx,%rax
    5c83:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5c87:	48 89 c2             	mov    %rax,%rdx
    5c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c8e:	48 8b 08             	mov    (%rax),%rcx
    5c91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c95:	48 89 ce             	mov    %rcx,%rsi
    5c98:	48 89 c7             	mov    %rax,%rdi
    5c9b:	e8 96 01 00 00       	call   5e36 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    5ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ca4:	48 89 c7             	mov    %rax,%rdi
    5ca7:	e8 84 fe ff ff       	call   5b30 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5cac:	90                   	nop
    5cad:	c9                   	leave
    5cae:	c3                   	ret
    5caf:	90                   	nop

0000000000005cb0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5cb0:	55                   	push   %rbp
    5cb1:	48 89 e5             	mov    %rsp,%rbp
    5cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cb8:	90                   	nop
    5cb9:	5d                   	pop    %rbp
    5cba:	c3                   	ret
    5cbb:	90                   	nop

0000000000005cbc <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5cbc:	55                   	push   %rbp
    5cbd:	48 89 e5             	mov    %rsp,%rbp
    5cc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cc4:	90                   	nop
    5cc5:	5d                   	pop    %rbp
    5cc6:	c3                   	ret

0000000000005cc7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5cc7:	55                   	push   %rbp
    5cc8:	48 89 e5             	mov    %rsp,%rbp
    5ccb:	53                   	push   %rbx
    5ccc:	48 83 ec 28          	sub    $0x28,%rsp
    5cd0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5cd4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5cd8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5cdc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5ce0:	48 89 d6             	mov    %rdx,%rsi
    5ce3:	48 89 c7             	mov    %rax,%rdi
    5ce6:	e8 25 01 00 00       	call   5e10 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5ceb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5cef:	48 89 c7             	mov    %rax,%rdi
    5cf2:	e8 74 01 00 00       	call   5e6b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5cf7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5cfb:	0f 92 c3             	setb   %bl
    5cfe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5d02:	48 89 c7             	mov    %rax,%rdi
    5d05:	e8 5e fe ff ff       	call   5b68 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5d0a:	84 db                	test   %bl,%bl
    5d0c:	74 0f                	je     5d1d <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5d0e:	48 8d 05 53 60 01 00 	lea    0x16053(%rip),%rax        # 1bd68 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    5d15:	48 89 c7             	mov    %rax,%rdi
    5d18:	e8 b3 e4 ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5d1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5d21:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5d25:	c9                   	leave
    5d26:	c3                   	ret
    5d27:	90                   	nop

0000000000005d28 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5d28:	55                   	push   %rbp
    5d29:	48 89 e5             	mov    %rsp,%rbp
    5d2c:	53                   	push   %rbx
    5d2d:	48 83 ec 28          	sub    $0x28,%rsp
    5d31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5d35:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5d39:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5d3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d41:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5d45:	48 89 d6             	mov    %rdx,%rsi
    5d48:	48 89 c7             	mov    %rax,%rdi
    5d4b:	e8 5e 01 00 00       	call   5eae <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5d50:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5d54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d58:	48 89 d6             	mov    %rdx,%rsi
    5d5b:	48 89 c7             	mov    %rax,%rdi
    5d5e:	e8 7d 01 00 00       	call   5ee0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    5d63:	eb 1a                	jmp    5d7f <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    5d65:	48 89 c3             	mov    %rax,%rbx
    5d68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d6c:	48 89 c7             	mov    %rax,%rdi
    5d6f:	e8 bc fd ff ff       	call   5b30 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5d74:	48 89 d8             	mov    %rbx,%rax
    5d77:	48 89 c7             	mov    %rax,%rdi
    5d7a:	e8 a1 ea ff ff       	call   4820 <_Unwind_Resume@plt>
    5d7f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5d83:	c9                   	leave
    5d84:	c3                   	ret
    5d85:	90                   	nop

0000000000005d86 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5d86:	55                   	push   %rbp
    5d87:	48 89 e5             	mov    %rsp,%rbp
    5d8a:	48 83 ec 10          	sub    $0x10,%rsp
    5d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d9a:	48 89 c7             	mov    %rax,%rdi
    5d9d:	e8 24 00 00 00       	call   5dc6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5da2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da9:	48 8b 00             	mov    (%rax),%rax
    5dac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5db0:	48 89 ce             	mov    %rcx,%rsi
    5db3:	48 89 c7             	mov    %rax,%rdi
    5db6:	e8 7b 01 00 00       	call   5f36 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5dbb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5dbf:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5dc3:	90                   	nop
    5dc4:	c9                   	leave
    5dc5:	c3                   	ret

0000000000005dc6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5dc6:	55                   	push   %rbp
    5dc7:	48 89 e5             	mov    %rsp,%rbp
    5dca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dd2:	5d                   	pop    %rbp
    5dd3:	c3                   	ret

0000000000005dd4 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5dd4:	55                   	push   %rbp
    5dd5:	48 89 e5             	mov    %rsp,%rbp
    5dd8:	48 83 ec 20          	sub    $0x20,%rsp
    5ddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5de0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5de4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5de8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5df0:	48 89 d6             	mov    %rdx,%rsi
    5df3:	48 89 c7             	mov    %rax,%rdi
    5df6:	e8 64 01 00 00       	call   5f5f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    5dfb:	90                   	nop
    5dfc:	c9                   	leave
    5dfd:	c3                   	ret

0000000000005dfe <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5dfe:	55                   	push   %rbp
    5dff:	48 89 e5             	mov    %rsp,%rbp
    5e02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5e0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5e0e:	5d                   	pop    %rbp
    5e0f:	c3                   	ret

0000000000005e10 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5e10:	55                   	push   %rbp
    5e11:	48 89 e5             	mov    %rsp,%rbp
    5e14:	48 83 ec 10          	sub    $0x10,%rsp
    5e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5e20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e28:	48 89 d6             	mov    %rdx,%rsi
    5e2b:	48 89 c7             	mov    %rax,%rdi
    5e2e:	e8 53 01 00 00       	call   5f86 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    5e33:	90                   	nop
    5e34:	c9                   	leave
    5e35:	c3                   	ret

0000000000005e36 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5e36:	55                   	push   %rbp
    5e37:	48 89 e5             	mov    %rsp,%rbp
    5e3a:	48 83 ec 20          	sub    $0x20,%rsp
    5e3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5e4a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5e4f:	74 17                	je     5e68 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5e51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e55:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5e59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e5d:	48 89 ce             	mov    %rcx,%rsi
    5e60:	48 89 c7             	mov    %rax,%rdi
    5e63:	e8 2d 01 00 00       	call   5f95 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5e68:	90                   	nop
    5e69:	c9                   	leave
    5e6a:	c3                   	ret

0000000000005e6b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5e6b:	55                   	push   %rbp
    5e6c:	48 89 e5             	mov    %rsp,%rbp
    5e6f:	48 83 ec 20          	sub    $0x20,%rsp
    5e73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5e77:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    5e7e:	ff ff 0f 
    5e81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5e85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e89:	48 89 c7             	mov    %rax,%rdi
    5e8c:	e8 32 01 00 00       	call   5fc3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    5e91:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5e95:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5e99:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5e9d:	48 89 d6             	mov    %rdx,%rsi
    5ea0:	48 89 c7             	mov    %rax,%rdi
    5ea3:	e8 f8 f6 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    5ea8:	48 8b 00             	mov    (%rax),%rax
      }
    5eab:	c9                   	leave
    5eac:	c3                   	ret
    5ead:	90                   	nop

0000000000005eae <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5eae:	55                   	push   %rbp
    5eaf:	48 89 e5             	mov    %rsp,%rbp
    5eb2:	48 83 ec 10          	sub    $0x10,%rsp
    5eb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5eba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5ebe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ec6:	48 89 d6             	mov    %rdx,%rsi
    5ec9:	48 89 c7             	mov    %rax,%rdi
    5ecc:	e8 3f ff ff ff       	call   5e10 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5ed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed5:	48 89 c7             	mov    %rax,%rdi
    5ed8:	e8 01 01 00 00       	call   5fde <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5edd:	90                   	nop
    5ede:	c9                   	leave
    5edf:	c3                   	ret

0000000000005ee0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5ee0:	55                   	push   %rbp
    5ee1:	48 89 e5             	mov    %rsp,%rbp
    5ee4:	48 83 ec 10          	sub    $0x10,%rsp
    5ee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5eec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5ef0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef8:	48 89 d6             	mov    %rdx,%rsi
    5efb:	48 89 c7             	mov    %rax,%rdi
    5efe:	e8 09 01 00 00       	call   600c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    5f03:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5f07:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    5f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f0e:	48 8b 10             	mov    (%rax),%rdx
    5f11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f15:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f1d:	48 8b 00             	mov    (%rax),%rax
    5f20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f24:	48 c1 e2 03          	shl    $0x3,%rdx
    5f28:	48 01 c2             	add    %rax,%rdx
    5f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f2f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5f33:	90                   	nop
    5f34:	c9                   	leave
    5f35:	c3                   	ret

0000000000005f36 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5f36:	55                   	push   %rbp
    5f37:	48 89 e5             	mov    %rsp,%rbp
    5f3a:	48 83 ec 20          	sub    $0x20,%rsp
    5f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    5f4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f52:	48 89 d6             	mov    %rdx,%rsi
    5f55:	48 89 c7             	mov    %rax,%rdi
    5f58:	e8 e2 00 00 00       	call   603f <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    5f5d:	c9                   	leave
    5f5e:	c3                   	ret

0000000000005f5f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5f5f:	55                   	push   %rbp
    5f60:	48 89 e5             	mov    %rsp,%rbp
    5f63:	48 83 ec 10          	sub    $0x10,%rsp
    5f67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f6b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    5f6f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f77:	48 89 d6             	mov    %rdx,%rsi
    5f7a:	48 89 c7             	mov    %rax,%rdi
    5f7d:	e8 e6 00 00 00       	call   6068 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    5f82:	90                   	nop
    5f83:	c9                   	leave
    5f84:	c3                   	ret
    5f85:	90                   	nop

0000000000005f86 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5f86:	55                   	push   %rbp
    5f87:	48 89 e5             	mov    %rsp,%rbp
    5f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f92:	90                   	nop
    5f93:	5d                   	pop    %rbp
    5f94:	c3                   	ret

0000000000005f95 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5f95:	55                   	push   %rbp
    5f96:	48 89 e5             	mov    %rsp,%rbp
    5f99:	48 83 ec 20          	sub    $0x20,%rsp
    5f9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fa1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5fa5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5fa9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5fad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5fb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fb5:	48 89 ce             	mov    %rcx,%rsi
    5fb8:	48 89 c7             	mov    %rax,%rdi
    5fbb:	e8 b8 00 00 00       	call   6078 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    5fc0:	90                   	nop
    5fc1:	c9                   	leave
    5fc2:	c3                   	ret

0000000000005fc3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5fc3:	55                   	push   %rbp
    5fc4:	48 89 e5             	mov    %rsp,%rbp
    5fc7:	48 83 ec 10          	sub    $0x10,%rsp
    5fcb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5fcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fd3:	48 89 c7             	mov    %rax,%rdi
    5fd6:	e8 cf 00 00 00       	call   60aa <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    5fdb:	c9                   	leave
    5fdc:	c3                   	ret
    5fdd:	90                   	nop

0000000000005fde <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5fde:	55                   	push   %rbp
    5fdf:	48 89 e5             	mov    %rsp,%rbp
    5fe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fea:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ff5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5ffc:	00 
    5ffd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6001:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6008:	00 
	{ }
    6009:	90                   	nop
    600a:	5d                   	pop    %rbp
    600b:	c3                   	ret

000000000000600c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    600c:	55                   	push   %rbp
    600d:	48 89 e5             	mov    %rsp,%rbp
    6010:	48 83 ec 10          	sub    $0x10,%rsp
    6014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6018:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    601c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6021:	74 15                	je     6038 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    6023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6027:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    602b:	48 89 d6             	mov    %rdx,%rsi
    602e:	48 89 c7             	mov    %rax,%rdi
    6031:	e8 8e 00 00 00       	call   60c4 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    6036:	eb 05                	jmp    603d <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    6038:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    603d:	c9                   	leave
    603e:	c3                   	ret

000000000000603f <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    603f:	55                   	push   %rbp
    6040:	48 89 e5             	mov    %rsp,%rbp
    6043:	48 83 ec 20          	sub    $0x20,%rsp
    6047:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    604b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    604f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6053:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6057:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    605b:	48 89 d6             	mov    %rdx,%rsi
    605e:	48 89 c7             	mov    %rax,%rdi
    6061:	e8 88 00 00 00       	call   60ee <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    6066:	c9                   	leave
    6067:	c3                   	ret

0000000000006068 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6068:	55                   	push   %rbp
    6069:	48 89 e5             	mov    %rsp,%rbp
    606c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6070:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6074:	90                   	nop
    6075:	5d                   	pop    %rbp
    6076:	c3                   	ret
    6077:	90                   	nop

0000000000006078 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6078:	55                   	push   %rbp
    6079:	48 89 e5             	mov    %rsp,%rbp
    607c:	48 83 ec 20          	sub    $0x20,%rsp
    6080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6084:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6088:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    608c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6090:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6097:	00 
    6098:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    609c:	48 89 d6             	mov    %rdx,%rsi
    609f:	48 89 c7             	mov    %rax,%rdi
    60a2:	e8 89 e3 ff ff       	call   4430 <_ZdlPvm@plt>
      }
    60a7:	c9                   	leave
    60a8:	c3                   	ret
    60a9:	90                   	nop

00000000000060aa <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    60aa:	55                   	push   %rbp
    60ab:	48 89 e5             	mov    %rsp,%rbp
    60ae:	48 83 ec 10          	sub    $0x10,%rsp
    60b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    60b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60ba:	48 89 c7             	mov    %rax,%rdi
    60bd:	e8 8a 00 00 00       	call   614c <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    60c2:	c9                   	leave
    60c3:	c3                   	ret

00000000000060c4 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    60c4:	55                   	push   %rbp
    60c5:	48 89 e5             	mov    %rsp,%rbp
    60c8:	48 83 ec 10          	sub    $0x10,%rsp
    60cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    60d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60dc:	ba 00 00 00 00       	mov    $0x0,%edx
    60e1:	48 89 ce             	mov    %rcx,%rsi
    60e4:	48 89 c7             	mov    %rax,%rdi
    60e7:	e8 74 00 00 00       	call   6160 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    60ec:	c9                   	leave
    60ed:	c3                   	ret

00000000000060ee <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    60ee:	55                   	push   %rbp
    60ef:	48 89 e5             	mov    %rsp,%rbp
    60f2:	48 83 ec 20          	sub    $0x20,%rsp
    60f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    60fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    60fe:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6103:	74 40                	je     6145 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    6105:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6109:	48 89 c7             	mov    %rax,%rdi
    610c:	e8 b0 00 00 00       	call   61c1 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    6111:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    6115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6119:	48 89 c7             	mov    %rax,%rdi
    611c:	e8 ae 00 00 00       	call   61cf <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    6121:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    6126:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    612a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    612e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6132:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6136:	48 89 ce             	mov    %rcx,%rsi
    6139:	48 89 c7             	mov    %rax,%rdi
    613c:	e8 b5 00 00 00       	call   61f6 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    6141:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6145:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6149:	c9                   	leave
    614a:	c3                   	ret
    614b:	90                   	nop

000000000000614c <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    614c:	55                   	push   %rbp
    614d:	48 89 e5             	mov    %rsp,%rbp
    6150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6154:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    615b:	ff ff 0f 
      }
    615e:	5d                   	pop    %rbp
    615f:	c3                   	ret

0000000000006160 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6160:	55                   	push   %rbp
    6161:	48 89 e5             	mov    %rsp,%rbp
    6164:	48 83 ec 20          	sub    $0x20,%rsp
    6168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    616c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6170:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6178:	48 89 c7             	mov    %rax,%rdi
    617b:	e8 cc ff ff ff       	call   614c <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    6180:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6184:	0f 92 c0             	setb   %al
    6187:	0f b6 c0             	movzbl %al,%eax
    618a:	48 85 c0             	test   %rax,%rax
    618d:	0f 95 c0             	setne  %al
    6190:	84 c0                	test   %al,%al
    6192:	74 1a                	je     61ae <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6194:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    619b:	ff ff 1f 
    619e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    61a2:	73 05                	jae    61a9 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    61a4:	e8 37 e1 ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    61a9:	e8 52 df ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    61ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61b2:	48 c1 e0 03          	shl    $0x3,%rax
    61b6:	48 89 c7             	mov    %rax,%rdi
    61b9:	e8 52 e2 ff ff       	call   4410 <_Znwm@plt>
    61be:	90                   	nop
      }
    61bf:	c9                   	leave
    61c0:	c3                   	ret

00000000000061c1 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    61c1:	55                   	push   %rbp
    61c2:	48 89 e5             	mov    %rsp,%rbp
    61c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    61c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61cd:	5d                   	pop    %rbp
    61ce:	c3                   	ret

00000000000061cf <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    61cf:	55                   	push   %rbp
    61d0:	48 89 e5             	mov    %rsp,%rbp
    61d3:	48 83 ec 10          	sub    $0x10,%rsp
    61d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    61db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61df:	48 89 c6             	mov    %rax,%rsi
    61e2:	bf 08 00 00 00       	mov    $0x8,%edi
    61e7:	e8 23 f9 ff ff       	call   5b0f <_ZnwmPv>
    61ec:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    61f3:	90                   	nop
    61f4:	c9                   	leave
    61f5:	c3                   	ret

00000000000061f6 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    61f6:	55                   	push   %rbp
    61f7:	48 89 e5             	mov    %rsp,%rbp
    61fa:	48 83 ec 20          	sub    $0x20,%rsp
    61fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6202:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6206:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    620a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    620e:	48 89 c7             	mov    %rax,%rdi
    6211:	e8 24 00 00 00       	call   623a <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6216:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    621a:	48 89 c7             	mov    %rax,%rdi
    621d:	e8 ff f8 ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    6222:	48 89 c1             	mov    %rax,%rcx
    6225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6229:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    622d:	48 89 ce             	mov    %rcx,%rsi
    6230:	48 89 c7             	mov    %rax,%rdi
    6233:	e8 0d 00 00 00       	call   6245 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    6238:	c9                   	leave
    6239:	c3                   	ret

000000000000623a <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    623a:	55                   	push   %rbp
    623b:	48 89 e5             	mov    %rsp,%rbp
    623e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6242:	90                   	nop
    6243:	5d                   	pop    %rbp
    6244:	c3                   	ret

0000000000006245 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6245:	55                   	push   %rbp
    6246:	48 89 e5             	mov    %rsp,%rbp
    6249:	48 83 ec 20          	sub    $0x20,%rsp
    624d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6251:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6255:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6259:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    625e:	75 06                	jne    6266 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    6260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6264:	eb 3a                	jmp    62a0 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    6266:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    626a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6271:	00 
    6272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6276:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    627a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    627e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6282:	48 89 ce             	mov    %rcx,%rsi
    6285:	48 89 c7             	mov    %rax,%rdi
    6288:	e8 15 00 00 00       	call   62a2 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    628d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6291:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6298:	00 
    6299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    629d:	48 01 d0             	add    %rdx,%rax
    }
    62a0:	c9                   	leave
    62a1:	c3                   	ret

00000000000062a2 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    62a2:	55                   	push   %rbp
    62a3:	48 89 e5             	mov    %rsp,%rbp
    62a6:	48 83 ec 20          	sub    $0x20,%rsp
    62aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    62b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    62be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62c2:	48 89 ce             	mov    %rcx,%rsi
    62c5:	48 89 c7             	mov    %rax,%rdi
    62c8:	e8 03 00 00 00       	call   62d0 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    62cd:	90                   	nop
    62ce:	c9                   	leave
    62cf:	c3                   	ret

00000000000062d0 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    62d0:	55                   	push   %rbp
    62d1:	48 89 e5             	mov    %rsp,%rbp
    62d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    62d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    62dc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    62e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    62e4:	48 8b 00             	mov    (%rax),%rax
    62e7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    62eb:	eb 10                	jmp    62fd <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    62ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    62f5:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    62f8:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    62fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6301:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    6305:	75 e6                	jne    62ed <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    6307:	90                   	nop
    6308:	90                   	nop
    6309:	5d                   	pop    %rbp
    630a:	c3                   	ret

000000000000630b <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    630b:	55                   	push   %rbp
    630c:	48 89 e5             	mov    %rsp,%rbp
    630f:	48 83 ec 20          	sub    $0x20,%rsp
    6313:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6316:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6319:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    631d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    6321:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    6325:	be 00 00 00 00       	mov    $0x0,%esi
    632a:	bf 01 20 02 00       	mov    $0x22001,%edi
    632f:	e8 1c e0 ff ff       	call   4350 <glfwWindowHint@plt>
  // glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
  return glfwCreateWindow(width, height, title, monitor, share);
    6334:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    6338:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    633c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6340:	8b 75 f8             	mov    -0x8(%rbp),%esi
    6343:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6346:	49 89 f8             	mov    %rdi,%r8
    6349:	89 c7                	mov    %eax,%edi
    634b:	e8 d0 e3 ff ff       	call   4720 <glfwCreateWindow@plt>
}
    6350:	c9                   	leave
    6351:	c3                   	ret

0000000000006352 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    6352:	55                   	push   %rbp
    6353:	48 89 e5             	mov    %rsp,%rbp
    6356:	41 54                	push   %r12
    6358:	53                   	push   %rbx
    6359:	48 83 ec 20          	sub    $0x20,%rsp
    635d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6361:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    6365:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6369:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    636d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6371:	48 89 ce             	mov    %rcx,%rsi
    6374:	48 89 c7             	mov    %rax,%rdi
    6377:	e8 f4 e1 ff ff       	call   4570 <vkCreateInstance@plt>
    637c:	85 c0                	test   %eax,%eax
    637e:	0f 95 c0             	setne  %al
    6381:	84 c0                	test   %al,%al
    6383:	74 3b                	je     63c0 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    6385:	bf 10 00 00 00       	mov    $0x10,%edi
    638a:	e8 11 de ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    638f:	48 89 c3             	mov    %rax,%rbx
    6392:	48 8d 05 37 60 01 00 	lea    0x16037(%rip),%rax        # 1c3d0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    6399:	48 89 c6             	mov    %rax,%rsi
    639c:	48 89 df             	mov    %rbx,%rdi
    639f:	e8 7c dd ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    63a4:	48 8b 05 fd 7b 02 00 	mov    0x27bfd(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    63ab:	48 89 c2             	mov    %rax,%rdx
    63ae:	48 8d 05 8b 79 02 00 	lea    0x2798b(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    63b5:	48 89 c6             	mov    %rax,%rsi
    63b8:	48 89 df             	mov    %rbx,%rdi
    63bb:	e8 00 e4 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return instance;
    63c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63c4:	eb 16                	jmp    63dc <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    63c6:	49 89 c4             	mov    %rax,%r12
    63c9:	48 89 df             	mov    %rbx,%rdi
    63cc:	e8 df de ff ff       	call   42b0 <__cxa_free_exception@plt>
    63d1:	4c 89 e0             	mov    %r12,%rax
    63d4:	48 89 c7             	mov    %rax,%rdi
    63d7:	e8 44 e4 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    63dc:	48 83 c4 20          	add    $0x20,%rsp
    63e0:	5b                   	pop    %rbx
    63e1:	41 5c                	pop    %r12
    63e3:	5d                   	pop    %rbp
    63e4:	c3                   	ret

00000000000063e5 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    63e5:	55                   	push   %rbp
    63e6:	48 89 e5             	mov    %rsp,%rbp
    63e9:	41 54                	push   %r12
    63eb:	53                   	push   %rbx
    63ec:	48 83 ec 30          	sub    $0x30,%rsp
    63f0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    63f4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    63f8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    63fc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6400:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6404:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6408:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    640c:	48 89 c7             	mov    %rax,%rdi
    640f:	e8 bc e2 ff ff       	call   46d0 <vkCreateDevice@plt>
    6414:	85 c0                	test   %eax,%eax
    6416:	0f 95 c0             	setne  %al
    6419:	84 c0                	test   %al,%al
    641b:	74 3b                	je     6458 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    641d:	bf 10 00 00 00       	mov    $0x10,%edi
    6422:	e8 79 dd ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6427:	48 89 c3             	mov    %rax,%rbx
    642a:	48 8d 05 bf 5f 01 00 	lea    0x15fbf(%rip),%rax        # 1c3f0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    6431:	48 89 c6             	mov    %rax,%rsi
    6434:	48 89 df             	mov    %rbx,%rdi
    6437:	e8 e4 dc ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    643c:	48 8b 05 65 7b 02 00 	mov    0x27b65(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6443:	48 89 c2             	mov    %rax,%rdx
    6446:	48 8d 05 f3 78 02 00 	lea    0x278f3(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    644d:	48 89 c6             	mov    %rax,%rsi
    6450:	48 89 df             	mov    %rbx,%rdi
    6453:	e8 68 e3 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return device;
    6458:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    645c:	eb 16                	jmp    6474 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    645e:	49 89 c4             	mov    %rax,%r12
    6461:	48 89 df             	mov    %rbx,%rdi
    6464:	e8 47 de ff ff       	call   42b0 <__cxa_free_exception@plt>
    6469:	4c 89 e0             	mov    %r12,%rax
    646c:	48 89 c7             	mov    %rax,%rdi
    646f:	e8 ac e3 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    6474:	48 83 c4 30          	add    $0x30,%rsp
    6478:	5b                   	pop    %rbx
    6479:	41 5c                	pop    %r12
    647b:	5d                   	pop    %rbp
    647c:	c3                   	ret

000000000000647d <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    647d:	55                   	push   %rbp
    647e:	48 89 e5             	mov    %rsp,%rbp
    6481:	41 54                	push   %r12
    6483:	53                   	push   %rbx
    6484:	48 83 ec 30          	sub    $0x30,%rsp
    6488:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    648c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6490:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    6494:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6498:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    649c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    64a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64a4:	48 89 c7             	mov    %rax,%rdi
    64a7:	e8 54 e2 ff ff       	call   4700 <glfwCreateWindowSurface@plt>
    64ac:	85 c0                	test   %eax,%eax
    64ae:	0f 95 c0             	setne  %al
    64b1:	84 c0                	test   %al,%al
    64b3:	74 3b                	je     64f0 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    64b5:	bf 10 00 00 00       	mov    $0x10,%edi
    64ba:	e8 e1 dc ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    64bf:	48 89 c3             	mov    %rax,%rbx
    64c2:	48 8d 05 4f 5f 01 00 	lea    0x15f4f(%rip),%rax        # 1c418 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    64c9:	48 89 c6             	mov    %rax,%rsi
    64cc:	48 89 df             	mov    %rbx,%rdi
    64cf:	e8 4c dc ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    64d4:	48 8b 05 cd 7a 02 00 	mov    0x27acd(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    64db:	48 89 c2             	mov    %rax,%rdx
    64de:	48 8d 05 5b 78 02 00 	lea    0x2785b(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    64e5:	48 89 c6             	mov    %rax,%rsi
    64e8:	48 89 df             	mov    %rbx,%rdi
    64eb:	e8 d0 e2 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return surface;
    64f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64f4:	eb 16                	jmp    650c <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    64f6:	49 89 c4             	mov    %rax,%r12
    64f9:	48 89 df             	mov    %rbx,%rdi
    64fc:	e8 af dd ff ff       	call   42b0 <__cxa_free_exception@plt>
    6501:	4c 89 e0             	mov    %r12,%rax
    6504:	48 89 c7             	mov    %rax,%rdi
    6507:	e8 14 e3 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    650c:	48 83 c4 30          	add    $0x30,%rsp
    6510:	5b                   	pop    %rbx
    6511:	41 5c                	pop    %r12
    6513:	5d                   	pop    %rbp
    6514:	c3                   	ret

0000000000006515 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    6515:	55                   	push   %rbp
    6516:	48 89 e5             	mov    %rsp,%rbp
    6519:	41 54                	push   %r12
    651b:	53                   	push   %rbx
    651c:	48 83 ec 30          	sub    $0x30,%rsp
    6520:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6524:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6528:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    652c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    6533:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    6534:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6538:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    653c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6540:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6544:	48 89 c7             	mov    %rax,%rdi
    6547:	e8 f4 df ff ff       	call   4540 <vkCreateSwapchainKHR@plt>
    654c:	85 c0                	test   %eax,%eax
    654e:	0f 95 c0             	setne  %al
    6551:	84 c0                	test   %al,%al
    6553:	74 3b                	je     6590 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    6555:	bf 10 00 00 00       	mov    $0x10,%edi
    655a:	e8 41 dc ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    655f:	48 89 c3             	mov    %rax,%rbx
    6562:	48 8d 05 d0 5e 01 00 	lea    0x15ed0(%rip),%rax        # 1c439 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x71>
    6569:	48 89 c6             	mov    %rax,%rsi
    656c:	48 89 df             	mov    %rbx,%rdi
    656f:	e8 ac db ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6574:	48 8b 05 2d 7a 02 00 	mov    0x27a2d(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    657b:	48 89 c2             	mov    %rax,%rdx
    657e:	48 8d 05 bb 77 02 00 	lea    0x277bb(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6585:	48 89 c6             	mov    %rax,%rsi
    6588:	48 89 df             	mov    %rbx,%rdi
    658b:	e8 30 e2 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return swapchain;
    6590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6594:	eb 16                	jmp    65ac <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    6596:	49 89 c4             	mov    %rax,%r12
    6599:	48 89 df             	mov    %rbx,%rdi
    659c:	e8 0f dd ff ff       	call   42b0 <__cxa_free_exception@plt>
    65a1:	4c 89 e0             	mov    %r12,%rax
    65a4:	48 89 c7             	mov    %rax,%rdi
    65a7:	e8 74 e2 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    65ac:	48 83 c4 30          	add    $0x30,%rsp
    65b0:	5b                   	pop    %rbx
    65b1:	41 5c                	pop    %r12
    65b3:	5d                   	pop    %rbp
    65b4:	c3                   	ret

00000000000065b5 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    65b5:	55                   	push   %rbp
    65b6:	48 89 e5             	mov    %rsp,%rbp
    65b9:	41 54                	push   %r12
    65bb:	53                   	push   %rbx
    65bc:	48 83 ec 30          	sub    $0x30,%rsp
    65c0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    65c4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    65c8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    65cc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    65d0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    65d4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    65d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65dc:	48 89 c7             	mov    %rax,%rdi
    65df:	e8 7c de ff ff       	call   4460 <vkCreateImageView@plt>
    65e4:	85 c0                	test   %eax,%eax
    65e6:	0f 95 c0             	setne  %al
    65e9:	84 c0                	test   %al,%al
    65eb:	74 3b                	je     6628 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    65ed:	bf 10 00 00 00       	mov    $0x10,%edi
    65f2:	e8 a9 db ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    65f7:	48 89 c3             	mov    %rax,%rbx
    65fa:	48 8d 05 57 5e 01 00 	lea    0x15e57(%rip),%rax        # 1c458 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    6601:	48 89 c6             	mov    %rax,%rsi
    6604:	48 89 df             	mov    %rbx,%rdi
    6607:	e8 14 db ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    660c:	48 8b 05 95 79 02 00 	mov    0x27995(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6613:	48 89 c2             	mov    %rax,%rdx
    6616:	48 8d 05 23 77 02 00 	lea    0x27723(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    661d:	48 89 c6             	mov    %rax,%rsi
    6620:	48 89 df             	mov    %rbx,%rdi
    6623:	e8 98 e1 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return imageView;
    6628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    662c:	eb 16                	jmp    6644 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    662e:	49 89 c4             	mov    %rax,%r12
    6631:	48 89 df             	mov    %rbx,%rdi
    6634:	e8 77 dc ff ff       	call   42b0 <__cxa_free_exception@plt>
    6639:	4c 89 e0             	mov    %r12,%rax
    663c:	48 89 c7             	mov    %rax,%rdi
    663f:	e8 dc e1 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    6644:	48 83 c4 30          	add    $0x30,%rsp
    6648:	5b                   	pop    %rbx
    6649:	41 5c                	pop    %r12
    664b:	5d                   	pop    %rbp
    664c:	c3                   	ret

000000000000664d <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    664d:	55                   	push   %rbp
    664e:	48 89 e5             	mov    %rsp,%rbp
    6651:	41 54                	push   %r12
    6653:	53                   	push   %rbx
    6654:	48 83 ec 60          	sub    $0x60,%rsp
    6658:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    665c:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    6660:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    6664:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6668:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    666c:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    6670:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    6675:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    667c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6680:	48 89 c7             	mov    %rax,%rdi
    6683:	e8 80 06 00 00       	call   6d08 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    6688:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    668c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6690:	48 89 c7             	mov    %rax,%rdi
    6693:	e8 90 06 00 00       	call   6d28 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    6698:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    669c:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    66a3:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    66a4:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    66a8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    66ac:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    66b0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    66b4:	48 89 c7             	mov    %rax,%rdi
    66b7:	e8 34 dc ff ff       	call   42f0 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    66bc:	85 c0                	test   %eax,%eax
    66be:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    66c1:	84 c0                	test   %al,%al
    66c3:	74 3b                	je     6700 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    66c5:	bf 10 00 00 00       	mov    $0x10,%edi
    66ca:	e8 d1 da ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    66cf:	48 89 c3             	mov    %rax,%rbx
    66d2:	48 8d 05 9f 5d 01 00 	lea    0x15d9f(%rip),%rax        # 1c478 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    66d9:	48 89 c6             	mov    %rax,%rsi
    66dc:	48 89 df             	mov    %rbx,%rdi
    66df:	e8 3c da ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    66e4:	48 8b 05 bd 78 02 00 	mov    0x278bd(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    66eb:	48 89 c2             	mov    %rax,%rdx
    66ee:	48 8d 05 4b 76 02 00 	lea    0x2764b(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    66f5:	48 89 c6             	mov    %rax,%rsi
    66f8:	48 89 df             	mov    %rbx,%rdi
    66fb:	e8 c0 e0 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return shaderModule;
    6700:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6704:	eb 16                	jmp    671c <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    6706:	49 89 c4             	mov    %rax,%r12
    6709:	48 89 df             	mov    %rbx,%rdi
    670c:	e8 9f db ff ff       	call   42b0 <__cxa_free_exception@plt>
    6711:	4c 89 e0             	mov    %r12,%rax
    6714:	48 89 c7             	mov    %rax,%rdi
    6717:	e8 04 e1 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    671c:	48 83 c4 60          	add    $0x60,%rsp
    6720:	5b                   	pop    %rbx
    6721:	41 5c                	pop    %r12
    6723:	5d                   	pop    %rbp
    6724:	c3                   	ret

0000000000006725 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    6725:	55                   	push   %rbp
    6726:	48 89 e5             	mov    %rsp,%rbp
    6729:	41 54                	push   %r12
    672b:	53                   	push   %rbx
    672c:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    6733:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    673a:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    6741:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    6748:	be 04 00 00 00       	mov    $0x4,%esi
    674d:	bf 02 00 00 00       	mov    $0x2,%edi
    6752:	e8 9e 05 00 00       	call   6cf5 <_ZStorSt13_Ios_OpenmodeS_>
    6757:	89 c2                	mov    %eax,%edx
    6759:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    6760:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    6767:	48 89 ce             	mov    %rcx,%rsi
    676a:	48 89 c7             	mov    %rax,%rdi
    676d:	e8 fe df ff ff       	call   4770 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    6772:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    6779:	48 89 c7             	mov    %rax,%rdi
    677c:	e8 df df ff ff       	call   4760 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    6781:	83 f0 01             	xor    $0x1,%eax
    6784:	84 c0                	test   %al,%al
    6786:	74 61                	je     67e9 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    6788:	bf 10 00 00 00       	mov    $0x10,%edi
    678d:	e8 0e da ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6792:	48 89 c3             	mov    %rax,%rbx
    6795:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6799:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    67a0:	48 8d 0d f1 5c 01 00 	lea    0x15cf1(%rip),%rcx        # 1c498 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    67a7:	48 89 ce             	mov    %rcx,%rsi
    67aa:	48 89 c7             	mov    %rax,%rdi
    67ad:	e8 9a 05 00 00       	call   6d4c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    67b2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    67b6:	48 89 c6             	mov    %rax,%rsi
    67b9:	48 89 df             	mov    %rbx,%rdi
    67bc:	e8 bf df ff ff       	call   4780 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    67c1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    67c5:	48 89 c7             	mov    %rax,%rdi
    67c8:	e8 83 da ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    67cd:	48 8b 05 d4 77 02 00 	mov    0x277d4(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    67d4:	48 89 c2             	mov    %rax,%rdx
    67d7:	48 8d 05 62 75 02 00 	lea    0x27562(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    67de:	48 89 c6             	mov    %rax,%rsi
    67e1:	48 89 df             	mov    %rbx,%rdi
    67e4:	e8 d7 df ff ff       	call   47c0 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    67e9:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    67f0:	48 89 c7             	mov    %rax,%rdi
    67f3:	e8 08 e0 ff ff       	call   4800 <_ZNSi5tellgEv@plt>
    67f8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    67fc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    6800:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6804:	48 89 c7             	mov    %rax,%rdi
    6807:	e8 42 06 00 00       	call   6e4e <_ZNKSt4fposI11__mbstate_tEcvlEv>
    680c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    6810:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6814:	48 89 c7             	mov    %rax,%rdi
    6817:	e8 14 e0 ff ff       	call   4830 <_ZNSaIcEC1Ev@plt>
    681c:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    6820:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6824:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    682b:	48 89 ce             	mov    %rcx,%rsi
    682e:	48 89 c7             	mov    %rax,%rdi
    6831:	e8 2a 06 00 00       	call   6e60 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    6836:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    683a:	48 89 c7             	mov    %rax,%rdi
    683d:	e8 7e dc ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    6842:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6846:	be 00 00 00 00       	mov    $0x0,%esi
    684b:	48 89 c7             	mov    %rax,%rdi
    684e:	e8 c7 06 00 00       	call   6f1a <_ZNSt4fposI11__mbstate_tEC1El>
    6853:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6857:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    685b:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    6862:	48 89 ce             	mov    %rcx,%rsi
    6865:	48 89 c7             	mov    %rax,%rdi
    6868:	e8 63 dd ff ff       	call   45d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    686d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6871:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    6878:	48 89 c7             	mov    %rax,%rdi
    687b:	e8 ca 06 00 00       	call   6f4a <_ZNSt6vectorIcSaIcEE4dataEv>
    6880:	48 89 c1             	mov    %rax,%rcx
    6883:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    688a:	48 89 da             	mov    %rbx,%rdx
    688d:	48 89 ce             	mov    %rcx,%rsi
    6890:	48 89 c7             	mov    %rax,%rdi
    6893:	e8 28 dd ff ff       	call   45c0 <_ZNSi4readEPcl@plt>
  file.close();
    6898:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    689f:	48 89 c7             	mov    %rax,%rdi
    68a2:	e8 d9 d7 ff ff       	call   4080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    68a7:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    68ae:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    68b5:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    68bc:	48 89 ce             	mov    %rcx,%rsi
    68bf:	48 89 c7             	mov    %rax,%rdi
    68c2:	e8 86 fd ff ff       	call   664d <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    68c7:	48 89 c3             	mov    %rax,%rbx
    68ca:	90                   	nop
}
    68cb:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    68d2:	48 89 c7             	mov    %rax,%rdi
    68d5:	e8 fc 05 00 00       	call   6ed6 <_ZNSt6vectorIcSaIcEED1Ev>
    68da:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    68e1:	48 89 c7             	mov    %rax,%rdi
    68e4:	e8 d7 d7 ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    68e9:	48 89 d8             	mov    %rbx,%rax
    68ec:	eb 63                	jmp    6951 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    68ee:	49 89 c4             	mov    %rax,%r12
    68f1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    68f5:	48 89 c7             	mov    %rax,%rdi
    68f8:	e8 53 d9 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    68fd:	eb 03                	jmp    6902 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    68ff:	49 89 c4             	mov    %rax,%r12
    6902:	48 89 df             	mov    %rbx,%rdi
    6905:	e8 a6 d9 ff ff       	call   42b0 <__cxa_free_exception@plt>
    690a:	4c 89 e3             	mov    %r12,%rbx
    690d:	eb 28                	jmp    6937 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    690f:	48 89 c3             	mov    %rax,%rbx
    6912:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6916:	48 89 c7             	mov    %rax,%rdi
    6919:	e8 a2 db ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    691e:	eb 17                	jmp    6937 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    6920:	48 89 c3             	mov    %rax,%rbx
    6923:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    692a:	48 89 c7             	mov    %rax,%rdi
    692d:	e8 a4 05 00 00       	call   6ed6 <_ZNSt6vectorIcSaIcEED1Ev>
    6932:	eb 03                	jmp    6937 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    6934:	48 89 c3             	mov    %rax,%rbx
    6937:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    693e:	48 89 c7             	mov    %rax,%rdi
    6941:	e8 7a d7 ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    6946:	48 89 d8             	mov    %rbx,%rax
    6949:	48 89 c7             	mov    %rax,%rdi
    694c:	e8 cf de ff ff       	call   4820 <_Unwind_Resume@plt>
    6951:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    6958:	5b                   	pop    %rbx
    6959:	41 5c                	pop    %r12
    695b:	5d                   	pop    %rbp
    695c:	c3                   	ret

000000000000695d <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    695d:	55                   	push   %rbp
    695e:	48 89 e5             	mov    %rsp,%rbp
    6961:	41 54                	push   %r12
    6963:	53                   	push   %rbx
    6964:	48 83 ec 30          	sub    $0x30,%rsp
    6968:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    696c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6970:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    6974:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6978:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    697c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6980:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6984:	48 89 c7             	mov    %rax,%rdi
    6987:	e8 94 d9 ff ff       	call   4320 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    698c:	85 c0                	test   %eax,%eax
    698e:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    6991:	84 c0                	test   %al,%al
    6993:	74 3b                	je     69d0 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    6995:	bf 10 00 00 00       	mov    $0x10,%edi
    699a:	e8 01 d8 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    699f:	48 89 c3             	mov    %rax,%rbx
    69a2:	48 8d 05 ff 5a 01 00 	lea    0x15aff(%rip),%rax        # 1c4a8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    69a9:	48 89 c6             	mov    %rax,%rsi
    69ac:	48 89 df             	mov    %rbx,%rdi
    69af:	e8 6c d7 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    69b4:	48 8b 05 ed 75 02 00 	mov    0x275ed(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    69bb:	48 89 c2             	mov    %rax,%rdx
    69be:	48 8d 05 7b 73 02 00 	lea    0x2737b(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    69c5:	48 89 c6             	mov    %rax,%rsi
    69c8:	48 89 df             	mov    %rbx,%rdi
    69cb:	e8 f0 dd ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return pipelineLayout;
    69d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69d4:	eb 16                	jmp    69ec <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    69d6:	49 89 c4             	mov    %rax,%r12
    69d9:	48 89 df             	mov    %rbx,%rdi
    69dc:	e8 cf d8 ff ff       	call   42b0 <__cxa_free_exception@plt>
    69e1:	4c 89 e0             	mov    %r12,%rax
    69e4:	48 89 c7             	mov    %rax,%rdi
    69e7:	e8 34 de ff ff       	call   4820 <_Unwind_Resume@plt>
}
    69ec:	48 83 c4 30          	add    $0x30,%rsp
    69f0:	5b                   	pop    %rbx
    69f1:	41 5c                	pop    %r12
    69f3:	5d                   	pop    %rbp
    69f4:	c3                   	ret

00000000000069f5 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    69f5:	55                   	push   %rbp
    69f6:	48 89 e5             	mov    %rsp,%rbp
    69f9:	41 54                	push   %r12
    69fb:	53                   	push   %rbx
    69fc:	48 83 ec 30          	sub    $0x30,%rsp
    6a00:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6a04:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6a08:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    6a0c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6a10:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6a14:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6a18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a1c:	48 89 c7             	mov    %rax,%rdi
    6a1f:	e8 3c d8 ff ff       	call   4260 <vkCreateRenderPass@plt>
    6a24:	85 c0                	test   %eax,%eax
    6a26:	0f 95 c0             	setne  %al
    6a29:	84 c0                	test   %al,%al
    6a2b:	74 3b                	je     6a68 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    6a2d:	bf 10 00 00 00       	mov    $0x10,%edi
    6a32:	e8 69 d7 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6a37:	48 89 c3             	mov    %rax,%rbx
    6a3a:	48 8d 05 67 5a 01 00 	lea    0x15a67(%rip),%rax        # 1c4a8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    6a41:	48 89 c6             	mov    %rax,%rsi
    6a44:	48 89 df             	mov    %rbx,%rdi
    6a47:	e8 d4 d6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6a4c:	48 8b 05 55 75 02 00 	mov    0x27555(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6a53:	48 89 c2             	mov    %rax,%rdx
    6a56:	48 8d 05 e3 72 02 00 	lea    0x272e3(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6a5d:	48 89 c6             	mov    %rax,%rsi
    6a60:	48 89 df             	mov    %rbx,%rdi
    6a63:	e8 58 dd ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return renderPass;
    6a68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a6c:	eb 16                	jmp    6a84 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    6a6e:	49 89 c4             	mov    %rax,%r12
    6a71:	48 89 df             	mov    %rbx,%rdi
    6a74:	e8 37 d8 ff ff       	call   42b0 <__cxa_free_exception@plt>
    6a79:	4c 89 e0             	mov    %r12,%rax
    6a7c:	48 89 c7             	mov    %rax,%rdi
    6a7f:	e8 9c dd ff ff       	call   4820 <_Unwind_Resume@plt>
}
    6a84:	48 83 c4 30          	add    $0x30,%rsp
    6a88:	5b                   	pop    %rbx
    6a89:	41 5c                	pop    %r12
    6a8b:	5d                   	pop    %rbp
    6a8c:	c3                   	ret

0000000000006a8d <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    6a8d:	55                   	push   %rbp
    6a8e:	48 89 e5             	mov    %rsp,%rbp
    6a91:	41 54                	push   %r12
    6a93:	53                   	push   %rbx
    6a94:	48 83 ec 30          	sub    $0x30,%rsp
    6a98:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6a9c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6aa0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    6aa4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6aa8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6aac:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6ab0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ab4:	48 89 c7             	mov    %rax,%rdi
    6ab7:	e8 74 db ff ff       	call   4630 <vkCreateFramebuffer@plt>
    6abc:	85 c0                	test   %eax,%eax
    6abe:	0f 95 c0             	setne  %al
    6ac1:	84 c0                	test   %al,%al
    6ac3:	74 3b                	je     6b00 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    6ac5:	bf 10 00 00 00       	mov    $0x10,%edi
    6aca:	e8 d1 d6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6acf:	48 89 c3             	mov    %rax,%rbx
    6ad2:	48 8d 05 f1 59 01 00 	lea    0x159f1(%rip),%rax        # 1c4ca <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x102>
    6ad9:	48 89 c6             	mov    %rax,%rsi
    6adc:	48 89 df             	mov    %rbx,%rdi
    6adf:	e8 3c d6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6ae4:	48 8b 05 bd 74 02 00 	mov    0x274bd(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6aeb:	48 89 c2             	mov    %rax,%rdx
    6aee:	48 8d 05 4b 72 02 00 	lea    0x2724b(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6af5:	48 89 c6             	mov    %rax,%rsi
    6af8:	48 89 df             	mov    %rbx,%rdi
    6afb:	e8 c0 dc ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return framebuffer;
    6b00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b04:	eb 16                	jmp    6b1c <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    6b06:	49 89 c4             	mov    %rax,%r12
    6b09:	48 89 df             	mov    %rbx,%rdi
    6b0c:	e8 9f d7 ff ff       	call   42b0 <__cxa_free_exception@plt>
    6b11:	4c 89 e0             	mov    %r12,%rax
    6b14:	48 89 c7             	mov    %rax,%rdi
    6b17:	e8 04 dd ff ff       	call   4820 <_Unwind_Resume@plt>
}
    6b1c:	48 83 c4 30          	add    $0x30,%rsp
    6b20:	5b                   	pop    %rbx
    6b21:	41 5c                	pop    %r12
    6b23:	5d                   	pop    %rbp
    6b24:	c3                   	ret

0000000000006b25 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    6b25:	55                   	push   %rbp
    6b26:	48 89 e5             	mov    %rsp,%rbp
    6b29:	41 54                	push   %r12
    6b2b:	53                   	push   %rbx
    6b2c:	48 83 ec 30          	sub    $0x30,%rsp
    6b30:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6b34:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6b38:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    6b3c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    6b43:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    6b44:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6b48:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6b4c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6b50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b54:	48 89 c7             	mov    %rax,%rdi
    6b57:	e8 04 d6 ff ff       	call   4160 <vkCreateCommandPool@plt>
    6b5c:	85 c0                	test   %eax,%eax
    6b5e:	0f 95 c0             	setne  %al
    6b61:	84 c0                	test   %al,%al
    6b63:	74 3b                	je     6ba0 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    6b65:	bf 10 00 00 00       	mov    $0x10,%edi
    6b6a:	e8 31 d6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6b6f:	48 89 c3             	mov    %rax,%rbx
    6b72:	48 8d 05 6f 59 01 00 	lea    0x1596f(%rip),%rax        # 1c4e8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    6b79:	48 89 c6             	mov    %rax,%rsi
    6b7c:	48 89 df             	mov    %rbx,%rdi
    6b7f:	e8 9c d5 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6b84:	48 8b 05 1d 74 02 00 	mov    0x2741d(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6b8b:	48 89 c2             	mov    %rax,%rdx
    6b8e:	48 8d 05 ab 71 02 00 	lea    0x271ab(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6b95:	48 89 c6             	mov    %rax,%rsi
    6b98:	48 89 df             	mov    %rbx,%rdi
    6b9b:	e8 20 dc ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return commandPool;
    6ba0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ba4:	eb 16                	jmp    6bbc <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    6ba6:	49 89 c4             	mov    %rax,%r12
    6ba9:	48 89 df             	mov    %rbx,%rdi
    6bac:	e8 ff d6 ff ff       	call   42b0 <__cxa_free_exception@plt>
    6bb1:	4c 89 e0             	mov    %r12,%rax
    6bb4:	48 89 c7             	mov    %rax,%rdi
    6bb7:	e8 64 dc ff ff       	call   4820 <_Unwind_Resume@plt>
}
    6bbc:	48 83 c4 30          	add    $0x30,%rsp
    6bc0:	5b                   	pop    %rbx
    6bc1:	41 5c                	pop    %r12
    6bc3:	5d                   	pop    %rbp
    6bc4:	c3                   	ret

0000000000006bc5 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>:

VkSemaphore createSemaphore(VkDevice device,
                            const VkSemaphoreCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    6bc5:	55                   	push   %rbp
    6bc6:	48 89 e5             	mov    %rsp,%rbp
    6bc9:	41 54                	push   %r12
    6bcb:	53                   	push   %rbx
    6bcc:	48 83 ec 30          	sub    $0x30,%rsp
    6bd0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6bd4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6bd8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSemaphore semaphore;
  if (vkCreateSemaphore(device, pCreateInfo, pAllocator, &semaphore) !=
    6bdc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6be0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6be4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6be8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bec:	48 89 c7             	mov    %rax,%rdi
    6bef:	e8 8c da ff ff       	call   4680 <vkCreateSemaphore@plt>
    6bf4:	85 c0                	test   %eax,%eax
    6bf6:	0f 95 c0             	setne  %al
    6bf9:	84 c0                	test   %al,%al
    6bfb:	74 3b                	je     6c38 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create semaphore.");
    6bfd:	bf 10 00 00 00       	mov    $0x10,%edi
    6c02:	e8 99 d5 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6c07:	48 89 c3             	mov    %rax,%rbx
    6c0a:	48 8d 05 f6 58 01 00 	lea    0x158f6(%rip),%rax        # 1c507 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x13f>
    6c11:	48 89 c6             	mov    %rax,%rsi
    6c14:	48 89 df             	mov    %rbx,%rdi
    6c17:	e8 04 d5 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6c1c:	48 8b 05 85 73 02 00 	mov    0x27385(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6c23:	48 89 c2             	mov    %rax,%rdx
    6c26:	48 8d 05 13 71 02 00 	lea    0x27113(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6c2d:	48 89 c6             	mov    %rax,%rsi
    6c30:	48 89 df             	mov    %rbx,%rdi
    6c33:	e8 88 db ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return semaphore;
    6c38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c3c:	eb 16                	jmp    6c54 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create semaphore.");
    6c3e:	49 89 c4             	mov    %rax,%r12
    6c41:	48 89 df             	mov    %rbx,%rdi
    6c44:	e8 67 d6 ff ff       	call   42b0 <__cxa_free_exception@plt>
    6c49:	4c 89 e0             	mov    %r12,%rax
    6c4c:	48 89 c7             	mov    %rax,%rdi
    6c4f:	e8 cc db ff ff       	call   4820 <_Unwind_Resume@plt>
}
    6c54:	48 83 c4 30          	add    $0x30,%rsp
    6c58:	5b                   	pop    %rbx
    6c59:	41 5c                	pop    %r12
    6c5b:	5d                   	pop    %rbp
    6c5c:	c3                   	ret

0000000000006c5d <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>:

VkFence createFence(VkDevice device, const VkFenceCreateInfo *pCreateInfo,
                    const VkAllocationCallbacks *pAllocator) {
    6c5d:	55                   	push   %rbp
    6c5e:	48 89 e5             	mov    %rsp,%rbp
    6c61:	41 54                	push   %r12
    6c63:	53                   	push   %rbx
    6c64:	48 83 ec 30          	sub    $0x30,%rsp
    6c68:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6c6c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6c70:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFence fence;
  if (vkCreateFence(device, pCreateInfo, pAllocator, &fence) != VK_SUCCESS) {
    6c74:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6c78:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6c7c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6c80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c84:	48 89 c7             	mov    %rax,%rdi
    6c87:	e8 04 d9 ff ff       	call   4590 <vkCreateFence@plt>
    6c8c:	85 c0                	test   %eax,%eax
    6c8e:	0f 95 c0             	setne  %al
    6c91:	84 c0                	test   %al,%al
    6c93:	74 3b                	je     6cd0 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create fence.");
    6c95:	bf 10 00 00 00       	mov    $0x10,%edi
    6c9a:	e8 01 d5 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6c9f:	48 89 c3             	mov    %rax,%rbx
    6ca2:	48 8d 05 7a 58 01 00 	lea    0x1587a(%rip),%rax        # 1c523 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x15b>
    6ca9:	48 89 c6             	mov    %rax,%rsi
    6cac:	48 89 df             	mov    %rbx,%rdi
    6caf:	e8 6c d4 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6cb4:	48 8b 05 ed 72 02 00 	mov    0x272ed(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6cbb:	48 89 c2             	mov    %rax,%rdx
    6cbe:	48 8d 05 7b 70 02 00 	lea    0x2707b(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6cc5:	48 89 c6             	mov    %rax,%rsi
    6cc8:	48 89 df             	mov    %rbx,%rdi
    6ccb:	e8 f0 da ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return fence;
    6cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cd4:	eb 16                	jmp    6cec <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create fence.");
    6cd6:	49 89 c4             	mov    %rax,%r12
    6cd9:	48 89 df             	mov    %rbx,%rdi
    6cdc:	e8 cf d5 ff ff       	call   42b0 <__cxa_free_exception@plt>
    6ce1:	4c 89 e0             	mov    %r12,%rax
    6ce4:	48 89 c7             	mov    %rax,%rdi
    6ce7:	e8 34 db ff ff       	call   4820 <_Unwind_Resume@plt>
}
    6cec:	48 83 c4 30          	add    $0x30,%rsp
    6cf0:	5b                   	pop    %rbx
    6cf1:	41 5c                	pop    %r12
    6cf3:	5d                   	pop    %rbp
    6cf4:	c3                   	ret

0000000000006cf5 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    6cf5:	55                   	push   %rbp
    6cf6:	48 89 e5             	mov    %rsp,%rbp
    6cf9:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6cfc:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6cff:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6d02:	0b 45 f8             	or     -0x8(%rbp),%eax
    6d05:	5d                   	pop    %rbp
    6d06:	c3                   	ret
    6d07:	90                   	nop

0000000000006d08 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    6d08:	55                   	push   %rbp
    6d09:	48 89 e5             	mov    %rsp,%rbp
    6d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d14:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d1c:	48 8b 00             	mov    (%rax),%rax
    6d1f:	48 29 c2             	sub    %rax,%rdx
    6d22:	48 89 d0             	mov    %rdx,%rax
    6d25:	5d                   	pop    %rbp
    6d26:	c3                   	ret
    6d27:	90                   	nop

0000000000006d28 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    6d28:	55                   	push   %rbp
    6d29:	48 89 e5             	mov    %rsp,%rbp
    6d2c:	48 83 ec 10          	sub    $0x10,%rsp
    6d30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6d34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d38:	48 8b 10             	mov    (%rax),%rdx
    6d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d3f:	48 89 d6             	mov    %rdx,%rsi
    6d42:	48 89 c7             	mov    %rax,%rdi
    6d45:	e8 24 02 00 00       	call   6f6e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    6d4a:	c9                   	leave
    6d4b:	c3                   	ret

0000000000006d4c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    6d4c:	55                   	push   %rbp
    6d4d:	48 89 e5             	mov    %rsp,%rbp
    6d50:	53                   	push   %rbx
    6d51:	48 83 ec 38          	sub    $0x38,%rsp
    6d55:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6d59:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6d5d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    6d61:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d65:	48 89 c7             	mov    %rax,%rdi
    6d68:	e8 a1 df ff ff       	call   4d0e <_ZNSt11char_traitsIcE6lengthEPKc>
    6d6d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6d71:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6d75:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6d79:	48 89 d6             	mov    %rdx,%rsi
    6d7c:	48 89 c7             	mov    %rax,%rdi
    6d7f:	e8 8c d3 ff ff       	call   4110 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    6d84:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6d88:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    6d8c:	48 89 d6             	mov    %rdx,%rsi
    6d8f:	48 89 c7             	mov    %rax,%rdi
    6d92:	e8 e9 01 00 00       	call   6f80 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    6d97:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    6d9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d9f:	48 89 d6             	mov    %rdx,%rsi
    6da2:	48 89 c7             	mov    %rax,%rdi
    6da5:	e8 26 da ff ff       	call   47d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    6daa:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6dae:	48 89 c7             	mov    %rax,%rdi
    6db1:	e8 0a d7 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    6db6:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6dba:	48 89 c7             	mov    %rax,%rdi
    6dbd:	e8 fe d6 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    6dc2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6dc6:	48 89 c7             	mov    %rax,%rdi
    6dc9:	e8 c2 d4 ff ff       	call   4290 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    6dce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6dd2:	48 01 c2             	add    %rax,%rdx
    6dd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6dd9:	48 89 d6             	mov    %rdx,%rsi
    6ddc:	48 89 c7             	mov    %rax,%rdi
    6ddf:	e8 4c d9 ff ff       	call   4730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    6de4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6de8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6dec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6df0:	48 89 ce             	mov    %rcx,%rsi
    6df3:	48 89 c7             	mov    %rax,%rdi
    6df6:	e8 45 d2 ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    6dfb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6dff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e03:	48 89 d6             	mov    %rdx,%rsi
    6e06:	48 89 c7             	mov    %rax,%rdi
    6e09:	e8 82 da ff ff       	call   4890 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    6e0e:	eb 34                	jmp    6e44 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6e10:	48 89 c3             	mov    %rax,%rbx
    6e13:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6e17:	48 89 c7             	mov    %rax,%rdi
    6e1a:	e8 a1 d6 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    6e1f:	48 89 d8             	mov    %rbx,%rax
    6e22:	48 89 c7             	mov    %rax,%rdi
    6e25:	e8 f6 d9 ff ff       	call   4820 <_Unwind_Resume@plt>
    }
    6e2a:	48 89 c3             	mov    %rax,%rbx
    6e2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e31:	48 89 c7             	mov    %rax,%rdi
    6e34:	e8 17 d4 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6e39:	48 89 d8             	mov    %rbx,%rax
    6e3c:	48 89 c7             	mov    %rax,%rdi
    6e3f:	e8 dc d9 ff ff       	call   4820 <_Unwind_Resume@plt>
    6e44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e48:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6e4c:	c9                   	leave
    6e4d:	c3                   	ret

0000000000006e4e <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    6e4e:	55                   	push   %rbp
    6e4f:	48 89 e5             	mov    %rsp,%rbp
    6e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e5a:	48 8b 00             	mov    (%rax),%rax
    6e5d:	5d                   	pop    %rbp
    6e5e:	c3                   	ret
    6e5f:	90                   	nop

0000000000006e60 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    6e60:	55                   	push   %rbp
    6e61:	48 89 e5             	mov    %rsp,%rbp
    6e64:	53                   	push   %rbx
    6e65:	48 83 ec 28          	sub    $0x28,%rsp
    6e69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6e71:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6e75:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6e79:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6e7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6e81:	48 89 d6             	mov    %rdx,%rsi
    6e84:	48 89 c7             	mov    %rax,%rdi
    6e87:	e8 1d 01 00 00       	call   6fa9 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    6e8c:	48 89 c1             	mov    %rax,%rcx
    6e8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e93:	48 89 c2             	mov    %rax,%rdx
    6e96:	48 89 ce             	mov    %rcx,%rsi
    6e99:	48 89 df             	mov    %rbx,%rdi
    6e9c:	e8 85 01 00 00       	call   7026 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    6ea1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6ea5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ea9:	48 89 d6             	mov    %rdx,%rsi
    6eac:	48 89 c7             	mov    %rax,%rdi
    6eaf:	e8 14 02 00 00       	call   70c8 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    6eb4:	eb 1a                	jmp    6ed0 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    6eb6:	48 89 c3             	mov    %rax,%rbx
    6eb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ebd:	48 89 c7             	mov    %rax,%rdi
    6ec0:	e8 bf 01 00 00       	call   7084 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6ec5:	48 89 d8             	mov    %rbx,%rax
    6ec8:	48 89 c7             	mov    %rax,%rdi
    6ecb:	e8 50 d9 ff ff       	call   4820 <_Unwind_Resume@plt>
    6ed0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6ed4:	c9                   	leave
    6ed5:	c3                   	ret

0000000000006ed6 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6ed6:	55                   	push   %rbp
    6ed7:	48 89 e5             	mov    %rsp,%rbp
    6eda:	48 83 ec 10          	sub    $0x10,%rsp
    6ede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6ee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ee6:	48 89 c7             	mov    %rax,%rdi
    6ee9:	e8 1a 02 00 00       	call   7108 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6eee:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6ef1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ef5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6efd:	48 8b 00             	mov    (%rax),%rax
    6f00:	48 89 ce             	mov    %rcx,%rsi
    6f03:	48 89 c7             	mov    %rax,%rdi
    6f06:	e8 0b 02 00 00       	call   7116 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    6f0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f0f:	48 89 c7             	mov    %rax,%rdi
    6f12:	e8 6d 01 00 00       	call   7084 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6f17:	90                   	nop
    6f18:	c9                   	leave
    6f19:	c3                   	ret

0000000000006f1a <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    6f1a:	55                   	push   %rbp
    6f1b:	48 89 e5             	mov    %rsp,%rbp
    6f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    6f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f2e:	48 89 10             	mov    %rdx,(%rax)
    6f31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f35:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    6f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f40:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    6f47:	90                   	nop
    6f48:	5d                   	pop    %rbp
    6f49:	c3                   	ret

0000000000006f4a <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    6f4a:	55                   	push   %rbp
    6f4b:	48 89 e5             	mov    %rsp,%rbp
    6f4e:	48 83 ec 10          	sub    $0x10,%rsp
    6f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f5a:	48 8b 10             	mov    (%rax),%rdx
    6f5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f61:	48 89 d6             	mov    %rdx,%rsi
    6f64:	48 89 c7             	mov    %rax,%rdi
    6f67:	e8 02 00 00 00       	call   6f6e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    6f6c:	c9                   	leave
    6f6d:	c3                   	ret

0000000000006f6e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6f6e:	55                   	push   %rbp
    6f6f:	48 89 e5             	mov    %rsp,%rbp
    6f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    6f7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f7e:	5d                   	pop    %rbp
    6f7f:	c3                   	ret

0000000000006f80 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    6f80:	55                   	push   %rbp
    6f81:	48 89 e5             	mov    %rsp,%rbp
    6f84:	48 83 ec 10          	sub    $0x10,%rsp
    6f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    6f90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f98:	48 89 d6             	mov    %rdx,%rsi
    6f9b:	48 89 c7             	mov    %rax,%rdi
    6f9e:	e8 a8 01 00 00       	call   714b <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    6fa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fa7:	c9                   	leave
    6fa8:	c3                   	ret

0000000000006fa9 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6fa9:	55                   	push   %rbp
    6faa:	48 89 e5             	mov    %rsp,%rbp
    6fad:	53                   	push   %rbx
    6fae:	48 83 ec 28          	sub    $0x28,%rsp
    6fb2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6fb6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6fba:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6fbe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fc2:	48 89 d6             	mov    %rdx,%rsi
    6fc5:	48 89 c7             	mov    %rax,%rdi
    6fc8:	e8 33 d2 ff ff       	call   4200 <_ZNSaIcEC1ERKS_@plt>
    6fcd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fd1:	48 89 c7             	mov    %rax,%rdi
    6fd4:	e8 9b 01 00 00       	call   7174 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    6fd9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6fdd:	0f 92 c3             	setb   %bl
    6fe0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fe4:	48 89 c7             	mov    %rax,%rdi
    6fe7:	e8 d4 d4 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    6fec:	84 db                	test   %bl,%bl
    6fee:	74 0f                	je     6fff <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6ff0:	48 8d 05 49 55 01 00 	lea    0x15549(%rip),%rax        # 1c540 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x178>
    6ff7:	48 89 c7             	mov    %rax,%rdi
    6ffa:	e8 d1 d1 ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6fff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    7003:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7007:	c9                   	leave
    7008:	c3                   	ret
    7009:	90                   	nop

000000000000700a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    700a:	55                   	push   %rbp
    700b:	48 89 e5             	mov    %rsp,%rbp
    700e:	48 83 ec 10          	sub    $0x10,%rsp
    7012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    701a:	48 89 c7             	mov    %rax,%rdi
    701d:	e8 4e d0 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    7022:	90                   	nop
    7023:	c9                   	leave
    7024:	c3                   	ret
    7025:	90                   	nop

0000000000007026 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    7026:	55                   	push   %rbp
    7027:	48 89 e5             	mov    %rsp,%rbp
    702a:	53                   	push   %rbx
    702b:	48 83 ec 28          	sub    $0x28,%rsp
    702f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7033:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7037:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    703b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    703f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7043:	48 89 d6             	mov    %rdx,%rsi
    7046:	48 89 c7             	mov    %rax,%rdi
    7049:	e8 68 01 00 00       	call   71b6 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    704e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7052:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7056:	48 89 d6             	mov    %rdx,%rsi
    7059:	48 89 c7             	mov    %rax,%rdi
    705c:	e8 87 01 00 00       	call   71e8 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    7061:	eb 1a                	jmp    707d <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    7063:	48 89 c3             	mov    %rax,%rbx
    7066:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    706a:	48 89 c7             	mov    %rax,%rdi
    706d:	e8 98 ff ff ff       	call   700a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    7072:	48 89 d8             	mov    %rbx,%rax
    7075:	48 89 c7             	mov    %rax,%rdi
    7078:	e8 a3 d7 ff ff       	call   4820 <_Unwind_Resume@plt>
    707d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7081:	c9                   	leave
    7082:	c3                   	ret
    7083:	90                   	nop

0000000000007084 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7084:	55                   	push   %rbp
    7085:	48 89 e5             	mov    %rsp,%rbp
    7088:	48 83 ec 10          	sub    $0x10,%rsp
    708c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7094:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    709c:	48 8b 00             	mov    (%rax),%rax
    709f:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    70a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70a6:	48 8b 08             	mov    (%rax),%rcx
    70a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70ad:	48 89 ce             	mov    %rcx,%rsi
    70b0:	48 89 c7             	mov    %rax,%rdi
    70b3:	e8 82 01 00 00       	call   723a <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    70b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70bc:	48 89 c7             	mov    %rax,%rdi
    70bf:	e8 46 ff ff ff       	call   700a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    70c4:	90                   	nop
    70c5:	c9                   	leave
    70c6:	c3                   	ret
    70c7:	90                   	nop

00000000000070c8 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    70c8:	55                   	push   %rbp
    70c9:	48 89 e5             	mov    %rsp,%rbp
    70cc:	48 83 ec 10          	sub    $0x10,%rsp
    70d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    70d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70dc:	48 89 c7             	mov    %rax,%rdi
    70df:	e8 24 00 00 00       	call   7108 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    70e4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    70e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70eb:	48 8b 00             	mov    (%rax),%rax
    70ee:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    70f2:	48 89 ce             	mov    %rcx,%rsi
    70f5:	48 89 c7             	mov    %rax,%rdi
    70f8:	e8 72 01 00 00       	call   726f <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    70fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7101:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    7105:	90                   	nop
    7106:	c9                   	leave
    7107:	c3                   	ret

0000000000007108 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7108:	55                   	push   %rbp
    7109:	48 89 e5             	mov    %rsp,%rbp
    710c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7114:	5d                   	pop    %rbp
    7115:	c3                   	ret

0000000000007116 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7116:	55                   	push   %rbp
    7117:	48 89 e5             	mov    %rsp,%rbp
    711a:	48 83 ec 20          	sub    $0x20,%rsp
    711e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7122:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7126:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    712a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    712e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7132:	48 89 d6             	mov    %rdx,%rsi
    7135:	48 89 c7             	mov    %rax,%rdi
    7138:	e8 5b 01 00 00       	call   7298 <_ZSt8_DestroyIPcEvT_S1_>
    }
    713d:	90                   	nop
    713e:	c9                   	leave
    713f:	c3                   	ret

0000000000007140 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    7140:	55                   	push   %rbp
    7141:	48 89 e5             	mov    %rsp,%rbp
    7144:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7148:	90                   	nop
    7149:	5d                   	pop    %rbp
    714a:	c3                   	ret

000000000000714b <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    714b:	55                   	push   %rbp
    714c:	48 89 e5             	mov    %rsp,%rbp
    714f:	48 83 ec 10          	sub    $0x10,%rsp
    7153:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7157:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    715b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    715f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7163:	48 89 d6             	mov    %rdx,%rsi
    7166:	48 89 c7             	mov    %rax,%rdi
    7169:	e8 92 d0 ff ff       	call   4200 <_ZNSaIcEC1ERKS_@plt>
    716e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7172:	c9                   	leave
    7173:	c3                   	ret

0000000000007174 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7174:	55                   	push   %rbp
    7175:	48 89 e5             	mov    %rsp,%rbp
    7178:	48 83 ec 20          	sub    $0x20,%rsp
    717c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7180:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    7187:	ff ff 7f 
    718a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    718e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7192:	48 89 c7             	mov    %rax,%rdi
    7195:	e8 52 01 00 00       	call   72ec <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    719a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    719e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    71a2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    71a6:	48 89 d6             	mov    %rdx,%rsi
    71a9:	48 89 c7             	mov    %rax,%rdi
    71ac:	e8 ef e3 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    71b1:	48 8b 00             	mov    (%rax),%rax
      }
    71b4:	c9                   	leave
    71b5:	c3                   	ret

00000000000071b6 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    71b6:	55                   	push   %rbp
    71b7:	48 89 e5             	mov    %rsp,%rbp
    71ba:	48 83 ec 10          	sub    $0x10,%rsp
    71be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    71c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71ce:	48 89 d6             	mov    %rdx,%rsi
    71d1:	48 89 c7             	mov    %rax,%rdi
    71d4:	e8 d7 d4 ff ff       	call   46b0 <_ZNSaIcEC2ERKS_@plt>
    71d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71dd:	48 89 c7             	mov    %rax,%rdi
    71e0:	e8 21 01 00 00       	call   7306 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    71e5:	90                   	nop
    71e6:	c9                   	leave
    71e7:	c3                   	ret

00000000000071e8 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    71e8:	55                   	push   %rbp
    71e9:	48 89 e5             	mov    %rsp,%rbp
    71ec:	48 83 ec 10          	sub    $0x10,%rsp
    71f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    71f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7200:	48 89 d6             	mov    %rdx,%rsi
    7203:	48 89 c7             	mov    %rax,%rdi
    7206:	e8 29 01 00 00       	call   7334 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    720b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    720f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7216:	48 8b 10             	mov    (%rax),%rdx
    7219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    721d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7225:	48 8b 10             	mov    (%rax),%rdx
    7228:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    722c:	48 01 c2             	add    %rax,%rdx
    722f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7233:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7237:	90                   	nop
    7238:	c9                   	leave
    7239:	c3                   	ret

000000000000723a <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    723a:	55                   	push   %rbp
    723b:	48 89 e5             	mov    %rsp,%rbp
    723e:	48 83 ec 20          	sub    $0x20,%rsp
    7242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7246:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    724a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    724e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7253:	74 17                	je     726c <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    7255:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7259:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    725d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7261:	48 89 ce             	mov    %rcx,%rsi
    7264:	48 89 c7             	mov    %rax,%rdi
    7267:	e8 52 00 00 00       	call   72be <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    726c:	90                   	nop
    726d:	c9                   	leave
    726e:	c3                   	ret

000000000000726f <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    726f:	55                   	push   %rbp
    7270:	48 89 e5             	mov    %rsp,%rbp
    7273:	48 83 ec 20          	sub    $0x20,%rsp
    7277:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    727b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    727f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7283:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    728b:	48 89 d6             	mov    %rdx,%rsi
    728e:	48 89 c7             	mov    %rax,%rdi
    7291:	e8 d1 00 00 00       	call   7367 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    7296:	c9                   	leave
    7297:	c3                   	ret

0000000000007298 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7298:	55                   	push   %rbp
    7299:	48 89 e5             	mov    %rsp,%rbp
    729c:	48 83 ec 10          	sub    $0x10,%rsp
    72a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    72a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    72ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72b0:	48 89 d6             	mov    %rdx,%rsi
    72b3:	48 89 c7             	mov    %rax,%rdi
    72b6:	e8 d5 00 00 00       	call   7390 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    72bb:	90                   	nop
    72bc:	c9                   	leave
    72bd:	c3                   	ret

00000000000072be <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    72be:	55                   	push   %rbp
    72bf:	48 89 e5             	mov    %rsp,%rbp
    72c2:	48 83 ec 20          	sub    $0x20,%rsp
    72c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    72d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    72d6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    72da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72de:	48 89 ce             	mov    %rcx,%rsi
    72e1:	48 89 c7             	mov    %rax,%rdi
    72e4:	e8 c5 00 00 00       	call   73ae <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    72e9:	90                   	nop
    72ea:	c9                   	leave
    72eb:	c3                   	ret

00000000000072ec <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    72ec:	55                   	push   %rbp
    72ed:	48 89 e5             	mov    %rsp,%rbp
    72f0:	48 83 ec 10          	sub    $0x10,%rsp
    72f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    72f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72fc:	48 89 c7             	mov    %rax,%rdi
    72ff:	e8 d4 00 00 00       	call   73d8 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    7304:	c9                   	leave
    7305:	c3                   	ret

0000000000007306 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7306:	55                   	push   %rbp
    7307:	48 89 e5             	mov    %rsp,%rbp
    730a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    730e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7312:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    731d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7324:	00 
    7325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7329:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7330:	00 
	{ }
    7331:	90                   	nop
    7332:	5d                   	pop    %rbp
    7333:	c3                   	ret

0000000000007334 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7334:	55                   	push   %rbp
    7335:	48 89 e5             	mov    %rsp,%rbp
    7338:	48 83 ec 10          	sub    $0x10,%rsp
    733c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7340:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7344:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7349:	74 15                	je     7360 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    734b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    734f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7353:	48 89 d6             	mov    %rdx,%rsi
    7356:	48 89 c7             	mov    %rax,%rdi
    7359:	e8 94 00 00 00       	call   73f2 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    735e:	eb 05                	jmp    7365 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    7360:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7365:	c9                   	leave
    7366:	c3                   	ret

0000000000007367 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7367:	55                   	push   %rbp
    7368:	48 89 e5             	mov    %rsp,%rbp
    736b:	48 83 ec 20          	sub    $0x20,%rsp
    736f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7373:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7377:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    737b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    737f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7383:	48 89 d6             	mov    %rdx,%rsi
    7386:	48 89 c7             	mov    %rax,%rdi
    7389:	e8 8e 00 00 00       	call   741c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    738e:	c9                   	leave
    738f:	c3                   	ret

0000000000007390 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    7390:	55                   	push   %rbp
    7391:	48 89 e5             	mov    %rsp,%rbp
    7394:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7398:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    739c:	90                   	nop
    739d:	5d                   	pop    %rbp
    739e:	c3                   	ret

000000000000739f <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    739f:	55                   	push   %rbp
    73a0:	48 89 e5             	mov    %rsp,%rbp
    73a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    73a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73ab:	5d                   	pop    %rbp
    73ac:	c3                   	ret
    73ad:	90                   	nop

00000000000073ae <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    73ae:	55                   	push   %rbp
    73af:	48 89 e5             	mov    %rsp,%rbp
    73b2:	48 83 ec 20          	sub    $0x20,%rsp
    73b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    73be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    73c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    73c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    73ca:	48 89 d6             	mov    %rdx,%rsi
    73cd:	48 89 c7             	mov    %rax,%rdi
    73d0:	e8 5b d0 ff ff       	call   4430 <_ZdlPvm@plt>
      }
    73d5:	c9                   	leave
    73d6:	c3                   	ret
    73d7:	90                   	nop

00000000000073d8 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    73d8:	55                   	push   %rbp
    73d9:	48 89 e5             	mov    %rsp,%rbp
    73dc:	48 83 ec 10          	sub    $0x10,%rsp
    73e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    73e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73e8:	48 89 c7             	mov    %rax,%rdi
    73eb:	e8 8a 00 00 00       	call   747a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    73f0:	c9                   	leave
    73f1:	c3                   	ret

00000000000073f2 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    73f2:	55                   	push   %rbp
    73f3:	48 89 e5             	mov    %rsp,%rbp
    73f6:	48 83 ec 10          	sub    $0x10,%rsp
    73fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7402:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    740a:	ba 00 00 00 00       	mov    $0x0,%edx
    740f:	48 89 ce             	mov    %rcx,%rsi
    7412:	48 89 c7             	mov    %rax,%rdi
    7415:	e8 74 00 00 00       	call   748e <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    741a:	c9                   	leave
    741b:	c3                   	ret

000000000000741c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    741c:	55                   	push   %rbp
    741d:	48 89 e5             	mov    %rsp,%rbp
    7420:	48 83 ec 20          	sub    $0x20,%rsp
    7424:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7428:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    742c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7431:	74 40                	je     7473 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    7433:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7437:	48 89 c7             	mov    %rax,%rdi
    743a:	e8 60 ff ff ff       	call   739f <_ZSt11__addressofIcEPT_RS0_>
    743f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7447:	48 89 c7             	mov    %rax,%rdi
    744a:	e8 87 00 00 00       	call   74d6 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    744f:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7454:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7458:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    745c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7460:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7464:	48 89 ce             	mov    %rcx,%rsi
    7467:	48 89 c7             	mov    %rax,%rdi
    746a:	e8 8a 00 00 00       	call   74f9 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    746f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7473:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7477:	c9                   	leave
    7478:	c3                   	ret
    7479:	90                   	nop

000000000000747a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    747a:	55                   	push   %rbp
    747b:	48 89 e5             	mov    %rsp,%rbp
    747e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7482:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    7489:	ff ff 7f 
      }
    748c:	5d                   	pop    %rbp
    748d:	c3                   	ret

000000000000748e <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    748e:	55                   	push   %rbp
    748f:	48 89 e5             	mov    %rsp,%rbp
    7492:	48 83 ec 20          	sub    $0x20,%rsp
    7496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    749a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    749e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    74a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74a6:	48 89 c7             	mov    %rax,%rdi
    74a9:	e8 cc ff ff ff       	call   747a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    74ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    74b2:	0f 92 c0             	setb   %al
    74b5:	0f b6 c0             	movzbl %al,%eax
    74b8:	48 85 c0             	test   %rax,%rax
    74bb:	0f 95 c0             	setne  %al
    74be:	84 c0                	test   %al,%al
    74c0:	74 05                	je     74c7 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    74c2:	e8 39 cc ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    74c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    74cb:	48 89 c7             	mov    %rax,%rdi
    74ce:	e8 3d cf ff ff       	call   4410 <_Znwm@plt>
    74d3:	90                   	nop
      }
    74d4:	c9                   	leave
    74d5:	c3                   	ret

00000000000074d6 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    74d6:	55                   	push   %rbp
    74d7:	48 89 e5             	mov    %rsp,%rbp
    74da:	48 83 ec 10          	sub    $0x10,%rsp
    74de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    74e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74e6:	48 89 c6             	mov    %rax,%rsi
    74e9:	bf 01 00 00 00       	mov    $0x1,%edi
    74ee:	e8 1c e6 ff ff       	call   5b0f <_ZnwmPv>
    74f3:	c6 00 00             	movb   $0x0,(%rax)
    }
    74f6:	90                   	nop
    74f7:	c9                   	leave
    74f8:	c3                   	ret

00000000000074f9 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    74f9:	55                   	push   %rbp
    74fa:	48 89 e5             	mov    %rsp,%rbp
    74fd:	48 83 ec 20          	sub    $0x20,%rsp
    7501:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7505:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7509:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    750d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7511:	48 89 c7             	mov    %rax,%rdi
    7514:	e8 27 fc ff ff       	call   7140 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7519:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    751d:	48 89 c7             	mov    %rax,%rdi
    7520:	e8 fc e5 ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    7525:	48 89 c1             	mov    %rax,%rcx
    7528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    752c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7530:	48 89 ce             	mov    %rcx,%rsi
    7533:	48 89 c7             	mov    %rax,%rdi
    7536:	e8 02 00 00 00       	call   753d <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    753b:	c9                   	leave
    753c:	c3                   	ret

000000000000753d <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    753d:	55                   	push   %rbp
    753e:	48 89 e5             	mov    %rsp,%rbp
    7541:	48 83 ec 20          	sub    $0x20,%rsp
    7545:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7549:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    754d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    7551:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7556:	75 06                	jne    755e <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    7558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    755c:	eb 2a                	jmp    7588 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    755e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7562:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7566:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    756a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    756e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7572:	48 89 ce             	mov    %rcx,%rsi
    7575:	48 89 c7             	mov    %rax,%rdi
    7578:	e8 0d 00 00 00       	call   758a <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    757d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7581:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7585:	48 01 d0             	add    %rdx,%rax
    }
    7588:	c9                   	leave
    7589:	c3                   	ret

000000000000758a <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    758a:	55                   	push   %rbp
    758b:	48 89 e5             	mov    %rsp,%rbp
    758e:	48 83 ec 20          	sub    $0x20,%rsp
    7592:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7596:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    759a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    759e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    75a2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    75a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75aa:	48 89 ce             	mov    %rcx,%rsi
    75ad:	48 89 c7             	mov    %rax,%rdi
    75b0:	e8 03 00 00 00       	call   75b8 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    75b5:	90                   	nop
    75b6:	c9                   	leave
    75b7:	c3                   	ret

00000000000075b8 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    75b8:	55                   	push   %rbp
    75b9:	48 89 e5             	mov    %rsp,%rbp
    75bc:	48 83 ec 30          	sub    $0x30,%rsp
    75c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75c4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    75c8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    75cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75d0:	0f b6 00             	movzbl (%rax),%eax
    75d3:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    75d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    75da:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    75de:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    75e2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    75e7:	74 19                	je     7602 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    75e9:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    75ed:	0f b6 c8             	movzbl %al,%ecx
    75f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    75f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75f8:	89 ce                	mov    %ecx,%esi
    75fa:	48 89 c7             	mov    %rax,%rdi
    75fd:	e8 ee cb ff ff       	call   41f0 <memset@plt>
    }
    7602:	90                   	nop
    7603:	c9                   	leave
    7604:	c3                   	ret

0000000000007605 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    7605:	55                   	push   %rbp
    7606:	48 89 e5             	mov    %rsp,%rbp
    7609:	48 83 ec 10          	sub    $0x10,%rsp
    760d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7615:	48 89 c7             	mov    %rax,%rdi
    7618:	e8 d3 ca ff ff       	call   40f0 <glfwDestroyWindow@plt>
    761d:	90                   	nop
    761e:	c9                   	leave
    761f:	c3                   	ret

0000000000007620 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    7620:	55                   	push   %rbp
    7621:	48 89 e5             	mov    %rsp,%rbp
    7624:	48 83 ec 10          	sub    $0x10,%rsp
    7628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    762c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    7630:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7638:	48 89 d6             	mov    %rdx,%rsi
    763b:	48 89 c7             	mov    %rax,%rdi
    763e:	e8 fd cd ff ff       	call   4440 <vkDestroyInstance@plt>
}
    7643:	90                   	nop
    7644:	c9                   	leave
    7645:	c3                   	ret

0000000000007646 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    7646:	55                   	push   %rbp
    7647:	48 89 e5             	mov    %rsp,%rbp
    764a:	48 83 ec 10          	sub    $0x10,%rsp
    764e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7652:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    7656:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    765a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    765e:	48 89 d6             	mov    %rdx,%rsi
    7661:	48 89 c7             	mov    %rax,%rdi
    7664:	e8 a7 cc ff ff       	call   4310 <vkDestroyDevice@plt>
}
    7669:	90                   	nop
    766a:	c9                   	leave
    766b:	c3                   	ret

000000000000766c <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    766c:	55                   	push   %rbp
    766d:	48 89 e5             	mov    %rsp,%rbp
    7670:	48 83 ec 20          	sub    $0x20,%rsp
    7674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7678:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    767c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    7680:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7684:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7688:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    768c:	48 89 ce             	mov    %rcx,%rsi
    768f:	48 89 c7             	mov    %rax,%rdi
    7692:	e8 79 d1 ff ff       	call   4810 <vkDestroySurfaceKHR@plt>
}
    7697:	90                   	nop
    7698:	c9                   	leave
    7699:	c3                   	ret

000000000000769a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    769a:	55                   	push   %rbp
    769b:	48 89 e5             	mov    %rsp,%rbp
    769e:	48 83 ec 20          	sub    $0x20,%rsp
    76a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    76aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    76ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    76b2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    76b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76ba:	48 89 ce             	mov    %rcx,%rsi
    76bd:	48 89 c7             	mov    %rax,%rdi
    76c0:	e8 0b ca ff ff       	call   40d0 <vkDestroySwapchainKHR@plt>
}
    76c5:	90                   	nop
    76c6:	c9                   	leave
    76c7:	c3                   	ret

00000000000076c8 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    76c8:	55                   	push   %rbp
    76c9:	48 89 e5             	mov    %rsp,%rbp
    76cc:	48 83 ec 20          	sub    $0x20,%rsp
    76d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    76d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    76dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    76e0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    76e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76e8:	48 89 ce             	mov    %rcx,%rsi
    76eb:	48 89 c7             	mov    %rax,%rdi
    76ee:	e8 4d d1 ff ff       	call   4840 <vkDestroyImageView@plt>
}
    76f3:	90                   	nop
    76f4:	c9                   	leave
    76f5:	c3                   	ret

00000000000076f6 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    76f6:	55                   	push   %rbp
    76f7:	48 89 e5             	mov    %rsp,%rbp
    76fa:	48 83 ec 20          	sub    $0x20,%rsp
    76fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7702:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7706:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    770a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    770e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7716:	48 89 ce             	mov    %rcx,%rsi
    7719:	48 89 c7             	mov    %rax,%rdi
    771c:	e8 3f ce ff ff       	call   4560 <vkDestroyShaderModule@plt>
}
    7721:	90                   	nop
    7722:	c9                   	leave
    7723:	c3                   	ret

0000000000007724 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    7724:	55                   	push   %rbp
    7725:	48 89 e5             	mov    %rsp,%rbp
    7728:	48 83 ec 20          	sub    $0x20,%rsp
    772c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7730:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7734:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    7738:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    773c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7744:	48 89 ce             	mov    %rcx,%rsi
    7747:	48 89 c7             	mov    %rax,%rdi
    774a:	e8 61 ce ff ff       	call   45b0 <vkDestroyPipelineLayout@plt>
}
    774f:	90                   	nop
    7750:	c9                   	leave
    7751:	c3                   	ret

0000000000007752 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    7752:	55                   	push   %rbp
    7753:	48 89 e5             	mov    %rsp,%rbp
    7756:	48 83 ec 20          	sub    $0x20,%rsp
    775a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    775e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7762:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    7766:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    776a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    776e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7772:	48 89 ce             	mov    %rcx,%rsi
    7775:	48 89 c7             	mov    %rax,%rdi
    7778:	e8 63 cc ff ff       	call   43e0 <vkDestroyRenderPass@plt>
}
    777d:	90                   	nop
    777e:	c9                   	leave
    777f:	c3                   	ret

0000000000007780 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    7780:	55                   	push   %rbp
    7781:	48 89 e5             	mov    %rsp,%rbp
    7784:	48 83 ec 20          	sub    $0x20,%rsp
    7788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    778c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7790:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    7794:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7798:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    779c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77a0:	48 89 ce             	mov    %rcx,%rsi
    77a3:	48 89 c7             	mov    %rax,%rdi
    77a6:	e8 35 cd ff ff       	call   44e0 <vkDestroyPipeline@plt>
}
    77ab:	90                   	nop
    77ac:	c9                   	leave
    77ad:	c3                   	ret

00000000000077ae <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    77ae:	55                   	push   %rbp
    77af:	48 89 e5             	mov    %rsp,%rbp
    77b2:	48 83 ec 40          	sub    $0x40,%rsp
    77b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    77ba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    77be:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    77c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    77c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    77ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77ce:	48 89 c7             	mov    %rax,%rdi
    77d1:	e8 20 01 00 00       	call   78f6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    77d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    77da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77de:	48 89 c7             	mov    %rax,%rdi
    77e1:	e8 36 01 00 00       	call   791c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    77e6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    77ea:	eb 36                	jmp    7822 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    77ec:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    77f0:	48 89 c7             	mov    %rax,%rdi
    77f3:	e8 a8 01 00 00       	call   79a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    77f8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    77fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7800:	48 8b 08             	mov    (%rax),%rcx
    7803:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7807:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    780b:	48 89 ce             	mov    %rcx,%rsi
    780e:	48 89 c7             	mov    %rax,%rdi
    7811:	e8 ca cc ff ff       	call   44e0 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    7816:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    781a:	48 89 c7             	mov    %rax,%rdi
    781d:	e8 5e 01 00 00       	call   7980 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    7822:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    7826:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    782a:	48 89 d6             	mov    %rdx,%rsi
    782d:	48 89 c7             	mov    %rax,%rdi
    7830:	e8 10 01 00 00       	call   7945 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    7835:	84 c0                	test   %al,%al
    7837:	75 b3                	jne    77ec <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    7839:	90                   	nop
    783a:	90                   	nop
    783b:	c9                   	leave
    783c:	c3                   	ret

000000000000783d <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    783d:	55                   	push   %rbp
    783e:	48 89 e5             	mov    %rsp,%rbp
    7841:	48 83 ec 20          	sub    $0x20,%rsp
    7845:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7849:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    784d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    7851:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7855:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    785d:	48 89 ce             	mov    %rcx,%rsi
    7860:	48 89 c7             	mov    %rax,%rdi
    7863:	e8 48 cf ff ff       	call   47b0 <vkDestroyFramebuffer@plt>
}
    7868:	90                   	nop
    7869:	c9                   	leave
    786a:	c3                   	ret

000000000000786b <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    786b:	55                   	push   %rbp
    786c:	48 89 e5             	mov    %rsp,%rbp
    786f:	48 83 ec 20          	sub    $0x20,%rsp
    7873:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7877:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    787b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    787f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7883:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    788b:	48 89 ce             	mov    %rcx,%rsi
    788e:	48 89 c7             	mov    %rax,%rdi
    7891:	e8 0a ce ff ff       	call   46a0 <vkDestroyCommandPool@plt>
}
    7896:	90                   	nop
    7897:	c9                   	leave
    7898:	c3                   	ret

0000000000007899 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>:

void destroySemaphore(VkDevice device, VkSemaphore semaphore,
                      const VkAllocationCallbacks *pAllocator) {
    7899:	55                   	push   %rbp
    789a:	48 89 e5             	mov    %rsp,%rbp
    789d:	48 83 ec 20          	sub    $0x20,%rsp
    78a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78a9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySemaphore(device, semaphore, pAllocator);
    78ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    78b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78b9:	48 89 ce             	mov    %rcx,%rsi
    78bc:	48 89 c7             	mov    %rax,%rdi
    78bf:	e8 1c c8 ff ff       	call   40e0 <vkDestroySemaphore@plt>
}
    78c4:	90                   	nop
    78c5:	c9                   	leave
    78c6:	c3                   	ret

00000000000078c7 <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>:

void destroyFence(VkDevice device, VkFence fence,
                  const VkAllocationCallbacks *pAllocator) {
    78c7:	55                   	push   %rbp
    78c8:	48 89 e5             	mov    %rsp,%rbp
    78cb:	48 83 ec 20          	sub    $0x20,%rsp
    78cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFence(device, fence, pAllocator);
    78db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    78e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78e7:	48 89 ce             	mov    %rcx,%rsi
    78ea:	48 89 c7             	mov    %rax,%rdi
    78ed:	e8 de cb ff ff       	call   44d0 <vkDestroyFence@plt>
}
    78f2:	90                   	nop
    78f3:	c9                   	leave
    78f4:	c3                   	ret
    78f5:	90                   	nop

00000000000078f6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    78f6:	55                   	push   %rbp
    78f7:	48 89 e5             	mov    %rsp,%rbp
    78fa:	48 83 ec 20          	sub    $0x20,%rsp
    78fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    7902:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7906:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    790a:	48 89 d6             	mov    %rdx,%rsi
    790d:	48 89 c7             	mov    %rax,%rdi
    7910:	e8 9d 00 00 00       	call   79b2 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    7915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7919:	c9                   	leave
    791a:	c3                   	ret
    791b:	90                   	nop

000000000000791c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    791c:	55                   	push   %rbp
    791d:	48 89 e5             	mov    %rsp,%rbp
    7920:	48 83 ec 20          	sub    $0x20,%rsp
    7924:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    7928:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    792c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7930:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7934:	48 89 d6             	mov    %rdx,%rsi
    7937:	48 89 c7             	mov    %rax,%rdi
    793a:	e8 73 00 00 00       	call   79b2 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    793f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7943:	c9                   	leave
    7944:	c3                   	ret

0000000000007945 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    7945:	55                   	push   %rbp
    7946:	48 89 e5             	mov    %rsp,%rbp
    7949:	53                   	push   %rbx
    794a:	48 83 ec 18          	sub    $0x18,%rsp
    794e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7952:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    7956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    795a:	48 89 c7             	mov    %rax,%rdi
    795d:	e8 6e 00 00 00       	call   79d0 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    7962:	48 8b 18             	mov    (%rax),%rbx
    7965:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7969:	48 89 c7             	mov    %rax,%rdi
    796c:	e8 5f 00 00 00       	call   79d0 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    7971:	48 8b 00             	mov    (%rax),%rax
    7974:	48 39 c3             	cmp    %rax,%rbx
    7977:	0f 95 c0             	setne  %al
    797a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    797e:	c9                   	leave
    797f:	c3                   	ret

0000000000007980 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    7980:	55                   	push   %rbp
    7981:	48 89 e5             	mov    %rsp,%rbp
    7984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    7988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    798c:	48 8b 00             	mov    (%rax),%rax
    798f:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7993:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7997:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    799a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    799e:	5d                   	pop    %rbp
    799f:	c3                   	ret

00000000000079a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    79a0:	55                   	push   %rbp
    79a1:	48 89 e5             	mov    %rsp,%rbp
    79a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    79a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ac:	48 8b 00             	mov    (%rax),%rax
    79af:	5d                   	pop    %rbp
    79b0:	c3                   	ret
    79b1:	90                   	nop

00000000000079b2 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    79b2:	55                   	push   %rbp
    79b3:	48 89 e5             	mov    %rsp,%rbp
    79b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    79be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    79c2:	48 8b 10             	mov    (%rax),%rdx
    79c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79c9:	48 89 10             	mov    %rdx,(%rax)
    79cc:	90                   	nop
    79cd:	5d                   	pop    %rbp
    79ce:	c3                   	ret
    79cf:	90                   	nop

00000000000079d0 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    79d0:	55                   	push   %rbp
    79d1:	48 89 e5             	mov    %rsp,%rbp
    79d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    79d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79dc:	5d                   	pop    %rbp
    79dd:	c3                   	ret

00000000000079de <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    79de:	55                   	push   %rbp
    79df:	48 89 e5             	mov    %rsp,%rbp
    79e2:	53                   	push   %rbx
    79e3:	48 83 ec 28          	sub    $0x28,%rsp
    79e7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    79eb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    79ef:	be 00 00 00 00       	mov    $0x0,%esi
    79f4:	48 89 c7             	mov    %rax,%rdi
    79f7:	e8 14 cb ff ff       	call   4510 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    79fc:	8b 45 e8             	mov    -0x18(%rbp),%eax
    79ff:	89 c3                	mov    %eax,%ebx
    7a01:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a05:	48 89 c7             	mov    %rax,%rdi
    7a08:	e8 47 11 00 00       	call   8b54 <_ZNSaI17VkLayerPropertiesEC1Ev>
    7a0d:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7a11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a15:	48 89 de             	mov    %rbx,%rsi
    7a18:	48 89 c7             	mov    %rax,%rdi
    7a1b:	e8 6c 11 00 00       	call   8b8c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    7a20:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a24:	48 89 c7             	mov    %rax,%rdi
    7a27:	e8 44 11 00 00       	call   8b70 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    7a2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a30:	48 89 c7             	mov    %rax,%rdi
    7a33:	e8 0e 12 00 00       	call   8c46 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    7a38:	48 89 c2             	mov    %rax,%rdx
    7a3b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7a3f:	48 89 d6             	mov    %rdx,%rsi
    7a42:	48 89 c7             	mov    %rax,%rdi
    7a45:	e8 c6 ca ff ff       	call   4510 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    7a4a:	eb 34                	jmp    7a80 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7a4c:	48 89 c3             	mov    %rax,%rbx
    7a4f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a53:	48 89 c7             	mov    %rax,%rdi
    7a56:	e8 15 11 00 00       	call   8b70 <_ZNSaI17VkLayerPropertiesED1Ev>
    7a5b:	48 89 d8             	mov    %rbx,%rax
    7a5e:	48 89 c7             	mov    %rax,%rdi
    7a61:	e8 ba cd ff ff       	call   4820 <_Unwind_Resume@plt>
}
    7a66:	48 89 c3             	mov    %rax,%rbx
    7a69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a6d:	48 89 c7             	mov    %rax,%rdi
    7a70:	e8 8d 11 00 00       	call   8c02 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7a75:	48 89 d8             	mov    %rbx,%rax
    7a78:	48 89 c7             	mov    %rax,%rdi
    7a7b:	e8 a0 cd ff ff       	call   4820 <_Unwind_Resume@plt>
    7a80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a88:	c9                   	leave
    7a89:	c3                   	ret

0000000000007a8a <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    7a8a:	55                   	push   %rbp
    7a8b:	48 89 e5             	mov    %rsp,%rbp
    7a8e:	41 54                	push   %r12
    7a90:	53                   	push   %rbx
    7a91:	48 83 ec 20          	sub    $0x20,%rsp
    7a95:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7a99:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7a9d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7aa1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7aa5:	ba 00 00 00 00       	mov    $0x0,%edx
    7aaa:	48 89 ce             	mov    %rcx,%rsi
    7aad:	48 89 c7             	mov    %rax,%rdi
    7ab0:	e8 7b c8 ff ff       	call   4330 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    7ab5:	85 c0                	test   %eax,%eax
    7ab7:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7aba:	84 c0                	test   %al,%al
    7abc:	74 3b                	je     7af9 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    7abe:	bf 10 00 00 00       	mov    $0x10,%edi
    7ac3:	e8 d8 c6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7ac8:	48 89 c3             	mov    %rax,%rbx
    7acb:	48 8d 05 06 57 01 00 	lea    0x15706(%rip),%rax        # 1d1d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    7ad2:	48 89 c6             	mov    %rax,%rsi
    7ad5:	48 89 df             	mov    %rbx,%rdi
    7ad8:	e8 43 c6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7add:	48 8b 05 c4 64 02 00 	mov    0x264c4(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7ae4:	48 89 c2             	mov    %rax,%rdx
    7ae7:	48 8d 05 52 62 02 00 	lea    0x26252(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7aee:	48 89 c6             	mov    %rax,%rsi
    7af1:	48 89 df             	mov    %rbx,%rdi
    7af4:	e8 c7 cc ff ff       	call   47c0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    7af9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7afc:	89 c3                	mov    %eax,%ebx
    7afe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b02:	48 89 c7             	mov    %rax,%rdi
    7b05:	e8 b8 11 00 00       	call   8cc2 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    7b0a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7b0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b12:	48 89 de             	mov    %rbx,%rsi
    7b15:	48 89 c7             	mov    %rax,%rdi
    7b18:	e8 dd 11 00 00       	call   8cfa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    7b1d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b21:	48 89 c7             	mov    %rax,%rdi
    7b24:	e8 b5 11 00 00       	call   8cde <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7b29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b2d:	48 89 c7             	mov    %rax,%rdi
    7b30:	e8 7f 12 00 00       	call   8db4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    7b35:	48 89 c2             	mov    %rax,%rdx
    7b38:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7b3c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b40:	48 89 ce             	mov    %rcx,%rsi
    7b43:	48 89 c7             	mov    %rax,%rdi
    7b46:	e8 e5 c7 ff ff       	call   4330 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    7b4b:	85 c0                	test   %eax,%eax
    7b4d:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7b50:	84 c0                	test   %al,%al
    7b52:	0f 84 95 00 00 00    	je     7bed <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    7b58:	bf 10 00 00 00       	mov    $0x10,%edi
    7b5d:	e8 3e c6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7b62:	48 89 c3             	mov    %rax,%rbx
    7b65:	48 8d 05 6c 56 01 00 	lea    0x1566c(%rip),%rax        # 1d1d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    7b6c:	48 89 c6             	mov    %rax,%rsi
    7b6f:	48 89 df             	mov    %rbx,%rdi
    7b72:	e8 a9 c5 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7b77:	48 8b 05 2a 64 02 00 	mov    0x2642a(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7b7e:	48 89 c2             	mov    %rax,%rdx
    7b81:	48 8d 05 b8 61 02 00 	lea    0x261b8(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7b88:	48 89 c6             	mov    %rax,%rsi
    7b8b:	48 89 df             	mov    %rbx,%rdi
    7b8e:	e8 2d cc ff ff       	call   47c0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    7b93:	49 89 c4             	mov    %rax,%r12
    7b96:	48 89 df             	mov    %rbx,%rdi
    7b99:	e8 12 c7 ff ff       	call   42b0 <__cxa_free_exception@plt>
    7b9e:	4c 89 e0             	mov    %r12,%rax
    7ba1:	48 89 c7             	mov    %rax,%rdi
    7ba4:	e8 77 cc ff ff       	call   4820 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    7ba9:	48 89 c3             	mov    %rax,%rbx
    7bac:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7bb0:	48 89 c7             	mov    %rax,%rdi
    7bb3:	e8 26 11 00 00       	call   8cde <_ZNSaI21VkExtensionPropertiesED1Ev>
    7bb8:	48 89 d8             	mov    %rbx,%rax
    7bbb:	48 89 c7             	mov    %rax,%rdi
    7bbe:	e8 5d cc ff ff       	call   4820 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    7bc3:	49 89 c4             	mov    %rax,%r12
    7bc6:	48 89 df             	mov    %rbx,%rdi
    7bc9:	e8 e2 c6 ff ff       	call   42b0 <__cxa_free_exception@plt>
    7bce:	4c 89 e3             	mov    %r12,%rbx
    7bd1:	eb 03                	jmp    7bd6 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    7bd3:	48 89 c3             	mov    %rax,%rbx
    7bd6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7bda:	48 89 c7             	mov    %rax,%rdi
    7bdd:	e8 8e 11 00 00       	call   8d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7be2:	48 89 d8             	mov    %rbx,%rax
    7be5:	48 89 c7             	mov    %rax,%rdi
    7be8:	e8 33 cc ff ff       	call   4820 <_Unwind_Resume@plt>
  return instanceExtensions;
    7bed:	90                   	nop
}
    7bee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7bf2:	48 83 c4 20          	add    $0x20,%rsp
    7bf6:	5b                   	pop    %rbx
    7bf7:	41 5c                	pop    %r12
    7bf9:	5d                   	pop    %rbp
    7bfa:	c3                   	ret

0000000000007bfb <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    7bfb:	55                   	push   %rbp
    7bfc:	48 89 e5             	mov    %rsp,%rbp
    7bff:	41 54                	push   %r12
    7c01:	53                   	push   %rbx
    7c02:	48 83 ec 30          	sub    $0x30,%rsp
    7c06:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7c0a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7c0e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    7c12:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7c16:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7c1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c1e:	b9 00 00 00 00       	mov    $0x0,%ecx
    7c23:	48 89 c7             	mov    %rax,%rdi
    7c26:	e8 45 ca ff ff       	call   4670 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    7c2b:	85 c0                	test   %eax,%eax
    7c2d:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    7c30:	84 c0                	test   %al,%al
    7c32:	74 3b                	je     7c6f <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    7c34:	bf 10 00 00 00       	mov    $0x10,%edi
    7c39:	e8 62 c5 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7c3e:	48 89 c3             	mov    %rax,%rbx
    7c41:	48 8d 05 b8 55 01 00 	lea    0x155b8(%rip),%rax        # 1d200 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    7c48:	48 89 c6             	mov    %rax,%rsi
    7c4b:	48 89 df             	mov    %rbx,%rdi
    7c4e:	e8 cd c4 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7c53:	48 8b 05 4e 63 02 00 	mov    0x2634e(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7c5a:	48 89 c2             	mov    %rax,%rdx
    7c5d:	48 8d 05 dc 60 02 00 	lea    0x260dc(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7c64:	48 89 c6             	mov    %rax,%rsi
    7c67:	48 89 df             	mov    %rbx,%rdi
    7c6a:	e8 51 cb ff ff       	call   47c0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    7c6f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7c72:	89 c3                	mov    %eax,%ebx
    7c74:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7c78:	48 89 c7             	mov    %rax,%rdi
    7c7b:	e8 42 10 00 00       	call   8cc2 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    7c80:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7c84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c88:	48 89 de             	mov    %rbx,%rsi
    7c8b:	48 89 c7             	mov    %rax,%rdi
    7c8e:	e8 67 10 00 00       	call   8cfa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    7c93:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7c97:	48 89 c7             	mov    %rax,%rdi
    7c9a:	e8 3f 10 00 00       	call   8cde <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    7c9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ca3:	48 89 c7             	mov    %rax,%rdi
    7ca6:	e8 09 11 00 00       	call   8db4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    7cab:	48 89 c1             	mov    %rax,%rcx
    7cae:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7cb2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7cb6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7cba:	48 89 c7             	mov    %rax,%rdi
    7cbd:	e8 ae c9 ff ff       	call   4670 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    7cc2:	85 c0                	test   %eax,%eax
    7cc4:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    7cc7:	84 c0                	test   %al,%al
    7cc9:	0f 84 95 00 00 00    	je     7d64 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    7ccf:	bf 10 00 00 00       	mov    $0x10,%edi
    7cd4:	e8 c7 c4 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7cd9:	48 89 c3             	mov    %rax,%rbx
    7cdc:	48 8d 05 1d 55 01 00 	lea    0x1551d(%rip),%rax        # 1d200 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    7ce3:	48 89 c6             	mov    %rax,%rsi
    7ce6:	48 89 df             	mov    %rbx,%rdi
    7ce9:	e8 32 c4 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7cee:	48 8b 05 b3 62 02 00 	mov    0x262b3(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7cf5:	48 89 c2             	mov    %rax,%rdx
    7cf8:	48 8d 05 41 60 02 00 	lea    0x26041(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7cff:	48 89 c6             	mov    %rax,%rsi
    7d02:	48 89 df             	mov    %rbx,%rdi
    7d05:	e8 b6 ca ff ff       	call   47c0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    7d0a:	49 89 c4             	mov    %rax,%r12
    7d0d:	48 89 df             	mov    %rbx,%rdi
    7d10:	e8 9b c5 ff ff       	call   42b0 <__cxa_free_exception@plt>
    7d15:	4c 89 e0             	mov    %r12,%rax
    7d18:	48 89 c7             	mov    %rax,%rdi
    7d1b:	e8 00 cb ff ff       	call   4820 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    7d20:	48 89 c3             	mov    %rax,%rbx
    7d23:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7d27:	48 89 c7             	mov    %rax,%rdi
    7d2a:	e8 af 0f 00 00       	call   8cde <_ZNSaI21VkExtensionPropertiesED1Ev>
    7d2f:	48 89 d8             	mov    %rbx,%rax
    7d32:	48 89 c7             	mov    %rax,%rdi
    7d35:	e8 e6 ca ff ff       	call   4820 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    7d3a:	49 89 c4             	mov    %rax,%r12
    7d3d:	48 89 df             	mov    %rbx,%rdi
    7d40:	e8 6b c5 ff ff       	call   42b0 <__cxa_free_exception@plt>
    7d45:	4c 89 e3             	mov    %r12,%rbx
    7d48:	eb 03                	jmp    7d4d <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    7d4a:	48 89 c3             	mov    %rax,%rbx
    7d4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d51:	48 89 c7             	mov    %rax,%rdi
    7d54:	e8 17 10 00 00       	call   8d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7d59:	48 89 d8             	mov    %rbx,%rax
    7d5c:	48 89 c7             	mov    %rax,%rdi
    7d5f:	e8 bc ca ff ff       	call   4820 <_Unwind_Resume@plt>
  return deviceExtensions;
    7d64:	90                   	nop
}
    7d65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d69:	48 83 c4 30          	add    $0x30,%rsp
    7d6d:	5b                   	pop    %rbx
    7d6e:	41 5c                	pop    %r12
    7d70:	5d                   	pop    %rbp
    7d71:	c3                   	ret

0000000000007d72 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    7d72:	55                   	push   %rbp
    7d73:	48 89 e5             	mov    %rsp,%rbp
    7d76:	53                   	push   %rbx
    7d77:	48 83 ec 38          	sub    $0x38,%rsp
    7d7b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    7d7f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    7d83:	48 89 c7             	mov    %rax,%rdi
    7d86:	e8 45 c5 ff ff       	call   42d0 <glfwGetRequiredInstanceExtensions@plt>
    7d8b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    7d8f:	8b 45 d8             	mov    -0x28(%rbp),%eax
    7d92:	89 c3                	mov    %eax,%ebx
    7d94:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7d98:	48 89 c7             	mov    %rax,%rdi
    7d9b:	e8 90 10 00 00       	call   8e30 <_ZNSaIPKcEC1Ev>
    7da0:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    7da4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7da8:	48 89 de             	mov    %rbx,%rsi
    7dab:	48 89 c7             	mov    %rax,%rdi
    7dae:	e8 b5 10 00 00       	call   8e68 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    7db3:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7db7:	48 89 c7             	mov    %rax,%rdi
    7dba:	e8 8d 10 00 00       	call   8e4c <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7dbf:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    7dc6:	eb 2e                	jmp    7df6 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    7dc8:	8b 45 ec             	mov    -0x14(%rbp),%eax
    7dcb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7dd2:	00 
    7dd3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7dd7:	48 01 d0             	add    %rdx,%rax
    7dda:	48 8b 18             	mov    (%rax),%rbx
    7ddd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7de0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7de4:	48 89 d6             	mov    %rdx,%rsi
    7de7:	48 89 c7             	mov    %rax,%rdi
    7dea:	e8 ef 10 00 00       	call   8ede <_ZNSt6vectorIPKcSaIS1_EEixEm>
    7def:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7df2:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    7df6:	8b 45 d8             	mov    -0x28(%rbp),%eax
    7df9:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    7dfc:	72 ca                	jb     7dc8 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    7dfe:	eb 1a                	jmp    7e1a <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    7e00:	48 89 c3             	mov    %rax,%rbx
    7e03:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7e07:	48 89 c7             	mov    %rax,%rdi
    7e0a:	e8 3d 10 00 00       	call   8e4c <_ZNSaIPKcED1Ev>
    7e0f:	48 89 d8             	mov    %rbx,%rax
    7e12:	48 89 c7             	mov    %rax,%rdi
    7e15:	e8 06 ca ff ff       	call   4820 <_Unwind_Resume@plt>
}
    7e1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7e22:	c9                   	leave
    7e23:	c3                   	ret

0000000000007e24 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    7e24:	55                   	push   %rbp
    7e25:	48 89 e5             	mov    %rsp,%rbp
    7e28:	53                   	push   %rbx
    7e29:	48 83 ec 28          	sub    $0x28,%rsp
    7e2d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    7e31:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7e35:	be 00 00 00 00       	mov    $0x0,%esi
    7e3a:	48 89 c7             	mov    %rax,%rdi
    7e3d:	e8 ce c6 ff ff       	call   4510 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7e42:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7e45:	89 c3                	mov    %eax,%ebx
    7e47:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7e4b:	48 89 c7             	mov    %rax,%rdi
    7e4e:	e8 01 0d 00 00       	call   8b54 <_ZNSaI17VkLayerPropertiesEC1Ev>
    7e53:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7e57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e5b:	48 89 de             	mov    %rbx,%rsi
    7e5e:	48 89 c7             	mov    %rax,%rdi
    7e61:	e8 26 0d 00 00       	call   8b8c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    7e66:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7e6a:	48 89 c7             	mov    %rax,%rdi
    7e6d:	e8 fe 0c 00 00       	call   8b70 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    7e72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e76:	48 89 c7             	mov    %rax,%rdi
    7e79:	e8 c8 0d 00 00       	call   8c46 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    7e7e:	48 89 c2             	mov    %rax,%rdx
    7e81:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7e85:	48 89 d6             	mov    %rdx,%rsi
    7e88:	48 89 c7             	mov    %rax,%rdi
    7e8b:	e8 80 c6 ff ff       	call   4510 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    7e90:	eb 34                	jmp    7ec6 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7e92:	48 89 c3             	mov    %rax,%rbx
    7e95:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7e99:	48 89 c7             	mov    %rax,%rdi
    7e9c:	e8 cf 0c 00 00       	call   8b70 <_ZNSaI17VkLayerPropertiesED1Ev>
    7ea1:	48 89 d8             	mov    %rbx,%rax
    7ea4:	48 89 c7             	mov    %rax,%rdi
    7ea7:	e8 74 c9 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    7eac:	48 89 c3             	mov    %rax,%rbx
    7eaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7eb3:	48 89 c7             	mov    %rax,%rdi
    7eb6:	e8 47 0d 00 00       	call   8c02 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7ebb:	48 89 d8             	mov    %rbx,%rax
    7ebe:	48 89 c7             	mov    %rax,%rdi
    7ec1:	e8 5a c9 ff ff       	call   4820 <_Unwind_Resume@plt>
    7ec6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7eca:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ece:	c9                   	leave
    7ecf:	c3                   	ret

0000000000007ed0 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    7ed0:	55                   	push   %rbp
    7ed1:	48 89 e5             	mov    %rsp,%rbp
    7ed4:	41 54                	push   %r12
    7ed6:	53                   	push   %rbx
    7ed7:	48 83 ec 20          	sub    $0x20,%rsp
    7edb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7edf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    7ee3:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7ee7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7eeb:	ba 00 00 00 00       	mov    $0x0,%edx
    7ef0:	48 89 ce             	mov    %rcx,%rsi
    7ef3:	48 89 c7             	mov    %rax,%rdi
    7ef6:	e8 e5 c2 ff ff       	call   41e0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    7efb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7efe:	85 c0                	test   %eax,%eax
    7f00:	75 3b                	jne    7f3d <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    7f02:	bf 10 00 00 00       	mov    $0x10,%edi
    7f07:	e8 94 c2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7f0c:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    7f0f:	48 8d 05 12 53 01 00 	lea    0x15312(%rip),%rax        # 1d228 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x58>
    7f16:	48 89 c6             	mov    %rax,%rsi
    7f19:	48 89 df             	mov    %rbx,%rdi
    7f1c:	e8 ff c1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    7f21:	48 8b 05 80 60 02 00 	mov    0x26080(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7f28:	48 89 c2             	mov    %rax,%rdx
    7f2b:	48 8d 05 0e 5e 02 00 	lea    0x25e0e(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7f32:	48 89 c6             	mov    %rax,%rsi
    7f35:	48 89 df             	mov    %rbx,%rdi
    7f38:	e8 83 c8 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7f3d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7f40:	89 c3                	mov    %eax,%ebx
    7f42:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7f46:	48 89 c7             	mov    %rax,%rdi
    7f49:	e8 fe 0f 00 00       	call   8f4c <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    7f4e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7f52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f56:	48 89 de             	mov    %rbx,%rsi
    7f59:	48 89 c7             	mov    %rax,%rdi
    7f5c:	e8 23 10 00 00       	call   8f84 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    7f61:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7f65:	48 89 c7             	mov    %rax,%rdi
    7f68:	e8 fb 0f 00 00       	call   8f68 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7f6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f71:	48 89 c7             	mov    %rax,%rdi
    7f74:	e8 c5 10 00 00       	call   903e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    7f79:	48 89 c2             	mov    %rax,%rdx
    7f7c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7f80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f84:	48 89 ce             	mov    %rcx,%rsi
    7f87:	48 89 c7             	mov    %rax,%rdi
    7f8a:	e8 51 c2 ff ff       	call   41e0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    7f8f:	85 c0                	test   %eax,%eax
    7f91:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7f94:	84 c0                	test   %al,%al
    7f96:	0f 84 95 00 00 00    	je     8031 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    7f9c:	bf 10 00 00 00       	mov    $0x10,%edi
    7fa1:	e8 fa c1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7fa6:	48 89 c3             	mov    %rax,%rbx
    7fa9:	48 8d 05 b0 52 01 00 	lea    0x152b0(%rip),%rax        # 1d260 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    7fb0:	48 89 c6             	mov    %rax,%rsi
    7fb3:	48 89 df             	mov    %rbx,%rdi
    7fb6:	e8 65 c1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7fbb:	48 8b 05 e6 5f 02 00 	mov    0x25fe6(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7fc2:	48 89 c2             	mov    %rax,%rdx
    7fc5:	48 8d 05 74 5d 02 00 	lea    0x25d74(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7fcc:	48 89 c6             	mov    %rax,%rsi
    7fcf:	48 89 df             	mov    %rbx,%rdi
    7fd2:	e8 e9 c7 ff ff       	call   47c0 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    7fd7:	49 89 c4             	mov    %rax,%r12
    7fda:	48 89 df             	mov    %rbx,%rdi
    7fdd:	e8 ce c2 ff ff       	call   42b0 <__cxa_free_exception@plt>
    7fe2:	4c 89 e0             	mov    %r12,%rax
    7fe5:	48 89 c7             	mov    %rax,%rdi
    7fe8:	e8 33 c8 ff ff       	call   4820 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7fed:	48 89 c3             	mov    %rax,%rbx
    7ff0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7ff4:	48 89 c7             	mov    %rax,%rdi
    7ff7:	e8 6c 0f 00 00       	call   8f68 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7ffc:	48 89 d8             	mov    %rbx,%rax
    7fff:	48 89 c7             	mov    %rax,%rdi
    8002:	e8 19 c8 ff ff       	call   4820 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    8007:	49 89 c4             	mov    %rax,%r12
    800a:	48 89 df             	mov    %rbx,%rdi
    800d:	e8 9e c2 ff ff       	call   42b0 <__cxa_free_exception@plt>
    8012:	4c 89 e3             	mov    %r12,%rbx
    8015:	eb 03                	jmp    801a <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    8017:	48 89 c3             	mov    %rax,%rbx
    801a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    801e:	48 89 c7             	mov    %rax,%rdi
    8021:	e8 d4 0f 00 00       	call   8ffa <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8026:	48 89 d8             	mov    %rbx,%rax
    8029:	48 89 c7             	mov    %rax,%rdi
    802c:	e8 ef c7 ff ff       	call   4820 <_Unwind_Resume@plt>
  return physicalDevices;
    8031:	90                   	nop
}
    8032:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8036:	48 83 c4 20          	add    $0x20,%rsp
    803a:	5b                   	pop    %rbx
    803b:	41 5c                	pop    %r12
    803d:	5d                   	pop    %rbp
    803e:	c3                   	ret

000000000000803f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    803f:	55                   	push   %rbp
    8040:	48 89 e5             	mov    %rsp,%rbp
    8043:	48 83 ec 10          	sub    $0x10,%rsp
    8047:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    804b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    804f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8053:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8057:	48 89 d6             	mov    %rdx,%rsi
    805a:	48 89 c7             	mov    %rax,%rdi
    805d:	e8 ce c0 ff ff       	call   4130 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    8062:	90                   	nop
}
    8063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8067:	c9                   	leave
    8068:	c3                   	ret

0000000000008069 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    8069:	55                   	push   %rbp
    806a:	48 89 e5             	mov    %rsp,%rbp
    806d:	48 83 ec 20          	sub    $0x20,%rsp
    8071:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8075:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8079:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    807d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8081:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    8087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    808b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    808f:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    8093:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8097:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    809b:	48 89 d6             	mov    %rdx,%rsi
    809e:	48 89 c7             	mov    %rax,%rdi
    80a1:	e8 0a c3 ff ff       	call   43b0 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    80a6:	90                   	nop
}
    80a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80ab:	c9                   	leave
    80ac:	c3                   	ret

00000000000080ad <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    80ad:	55                   	push   %rbp
    80ae:	48 89 e5             	mov    %rsp,%rbp
    80b1:	53                   	push   %rbx
    80b2:	48 83 ec 28          	sub    $0x28,%rsp
    80b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    80ba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    80be:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    80c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    80c6:	ba 00 00 00 00       	mov    $0x0,%edx
    80cb:	48 89 ce             	mov    %rcx,%rsi
    80ce:	48 89 c7             	mov    %rax,%rdi
    80d1:	e8 ea c1 ff ff       	call   42c0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    80d6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    80d9:	89 c3                	mov    %eax,%ebx
    80db:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    80df:	48 89 c7             	mov    %rax,%rdi
    80e2:	e8 c9 0f 00 00       	call   90b0 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    80e7:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    80eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    80ef:	48 89 de             	mov    %rbx,%rsi
    80f2:	48 89 c7             	mov    %rax,%rdi
    80f5:	e8 ee 0f 00 00       	call   90e8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    80fa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    80fe:	48 89 c7             	mov    %rax,%rdi
    8101:	e8 c6 0f 00 00       	call   90cc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    8106:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    810a:	48 89 c7             	mov    %rax,%rdi
    810d:	e8 90 10 00 00       	call   91a2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    8112:	48 89 c2             	mov    %rax,%rdx
    8115:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8119:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    811d:	48 89 ce             	mov    %rcx,%rsi
    8120:	48 89 c7             	mov    %rax,%rdi
    8123:	e8 98 c1 ff ff       	call   42c0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    8128:	eb 34                	jmp    815e <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    812a:	48 89 c3             	mov    %rax,%rbx
    812d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8131:	48 89 c7             	mov    %rax,%rdi
    8134:	e8 93 0f 00 00       	call   90cc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8139:	48 89 d8             	mov    %rbx,%rax
    813c:	48 89 c7             	mov    %rax,%rdi
    813f:	e8 dc c6 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    8144:	48 89 c3             	mov    %rax,%rbx
    8147:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    814b:	48 89 c7             	mov    %rax,%rdi
    814e:	e8 0b 10 00 00       	call   915e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8153:	48 89 d8             	mov    %rbx,%rax
    8156:	48 89 c7             	mov    %rax,%rdi
    8159:	e8 c2 c6 ff ff       	call   4820 <_Unwind_Resume@plt>
    815e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8162:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8166:	c9                   	leave
    8167:	c3                   	ret

0000000000008168 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    8168:	55                   	push   %rbp
    8169:	48 89 e5             	mov    %rsp,%rbp
    816c:	53                   	push   %rbx
    816d:	48 83 ec 68          	sub    $0x68,%rsp
    8171:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    8175:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8179:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    817d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    8181:	48 89 d6             	mov    %rdx,%rsi
    8184:	48 89 c7             	mov    %rax,%rdi
    8187:	e8 21 ff ff ff       	call   80ad <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    818c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8190:	48 89 c7             	mov    %rax,%rdi
    8193:	e8 86 10 00 00       	call   921e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    8198:	48 89 c3             	mov    %rax,%rbx
    819b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    819f:	48 89 c7             	mov    %rax,%rdi
    81a2:	e8 a5 10 00 00       	call   924c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    81a7:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    81ab:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    81af:	48 89 de             	mov    %rbx,%rsi
    81b2:	48 89 c7             	mov    %rax,%rdi
    81b5:	e8 ca 10 00 00       	call   9284 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    81ba:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    81be:	48 89 c7             	mov    %rax,%rdi
    81c1:	e8 a2 10 00 00       	call   9268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    81c6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    81cd:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    81ce:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    81d2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    81d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81da:	48 89 c7             	mov    %rax,%rdi
    81dd:	e8 5c 11 00 00       	call   933e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    81e2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    81e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81ea:	48 89 c7             	mov    %rax,%rdi
    81ed:	e8 72 11 00 00       	call   9364 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    81f2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    81f6:	eb 4e                	jmp    8246 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    81f8:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    81fc:	48 89 c7             	mov    %rax,%rdi
    81ff:	e8 e4 11 00 00       	call   93e8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8204:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    8208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    820c:	8b 00                	mov    (%rax),%eax
    820e:	83 e0 01             	and    $0x1,%eax
    8211:	85 c0                	test   %eax,%eax
    8213:	74 25                	je     823a <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    8215:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8219:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    821d:	48 89 d6             	mov    %rdx,%rsi
    8220:	48 89 c7             	mov    %rax,%rdi
    8223:	e8 d2 11 00 00       	call   93fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    8228:	48 89 c2             	mov    %rax,%rdx
    822b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    822f:	48 89 c6             	mov    %rax,%rsi
    8232:	48 89 d7             	mov    %rdx,%rdi
    8235:	e8 ea 11 00 00       	call   9424 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    823a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    823e:	48 89 c7             	mov    %rax,%rdi
    8241:	e8 82 11 00 00       	call   93c8 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    8246:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    824a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    824e:	48 89 d6             	mov    %rdx,%rsi
    8251:	48 89 c7             	mov    %rax,%rdi
    8254:	e8 34 11 00 00       	call   938d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8259:	84 c0                	test   %al,%al
    825b:	75 9b                	jne    81f8 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    825d:	90                   	nop
}
    825e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8262:	48 89 c7             	mov    %rax,%rdi
    8265:	e8 f4 0e 00 00       	call   915e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    826a:	eb 26                	jmp    8292 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    826c:	48 89 c3             	mov    %rax,%rbx
    826f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8273:	48 89 c7             	mov    %rax,%rdi
    8276:	e8 ed 0f 00 00       	call   9268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    827b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    827f:	48 89 c7             	mov    %rax,%rdi
    8282:	e8 d7 0e 00 00       	call   915e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8287:	48 89 d8             	mov    %rbx,%rax
    828a:	48 89 c7             	mov    %rax,%rdi
    828d:	e8 8e c5 ff ff       	call   4820 <_Unwind_Resume@plt>
    8292:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8296:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    829a:	c9                   	leave
    829b:	c3                   	ret

000000000000829c <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    829c:	55                   	push   %rbp
    829d:	48 89 e5             	mov    %rsp,%rbp
    82a0:	53                   	push   %rbx
    82a1:	48 83 ec 68          	sub    $0x68,%rsp
    82a5:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    82a9:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    82ad:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    82b1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    82b5:	48 89 d6             	mov    %rdx,%rsi
    82b8:	48 89 c7             	mov    %rax,%rdi
    82bb:	e8 ed fd ff ff       	call   80ad <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    82c0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    82c4:	48 89 c7             	mov    %rax,%rdi
    82c7:	e8 52 0f 00 00       	call   921e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    82cc:	48 89 c3             	mov    %rax,%rbx
    82cf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    82d3:	48 89 c7             	mov    %rax,%rdi
    82d6:	e8 71 0f 00 00       	call   924c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    82db:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    82df:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    82e3:	48 89 de             	mov    %rbx,%rsi
    82e6:	48 89 c7             	mov    %rax,%rdi
    82e9:	e8 96 0f 00 00       	call   9284 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    82ee:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    82f2:	48 89 c7             	mov    %rax,%rdi
    82f5:	e8 6e 0f 00 00       	call   9268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    82fa:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8301:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8302:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8306:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    830a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    830e:	48 89 c7             	mov    %rax,%rdi
    8311:	e8 28 10 00 00       	call   933e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8316:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    831a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    831e:	48 89 c7             	mov    %rax,%rdi
    8321:	e8 3e 10 00 00       	call   9364 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8326:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    832a:	eb 53                	jmp    837f <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    832c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8330:	48 89 c7             	mov    %rax,%rdi
    8333:	e8 b0 10 00 00       	call   93e8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8338:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    833c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8340:	8b 00                	mov    (%rax),%eax
    8342:	83 e0 02             	and    $0x2,%eax
    8345:	85 c0                	test   %eax,%eax
    8347:	74 25                	je     836e <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    8349:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    834d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8351:	48 89 d6             	mov    %rdx,%rsi
    8354:	48 89 c7             	mov    %rax,%rdi
    8357:	e8 9e 10 00 00       	call   93fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    835c:	48 89 c2             	mov    %rax,%rdx
    835f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8363:	48 89 c6             	mov    %rax,%rsi
    8366:	48 89 d7             	mov    %rdx,%rdi
    8369:	e8 b6 10 00 00       	call   9424 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    836e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8373:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8377:	48 89 c7             	mov    %rax,%rdi
    837a:	e8 49 10 00 00       	call   93c8 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    837f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    8383:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8387:	48 89 d6             	mov    %rdx,%rsi
    838a:	48 89 c7             	mov    %rax,%rdi
    838d:	e8 fb 0f 00 00       	call   938d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8392:	84 c0                	test   %al,%al
    8394:	75 96                	jne    832c <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    8396:	90                   	nop
}
    8397:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    839b:	48 89 c7             	mov    %rax,%rdi
    839e:	e8 bb 0d 00 00       	call   915e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    83a3:	eb 26                	jmp    83cb <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    83a5:	48 89 c3             	mov    %rax,%rbx
    83a8:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    83ac:	48 89 c7             	mov    %rax,%rdi
    83af:	e8 b4 0e 00 00       	call   9268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    83b4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    83b8:	48 89 c7             	mov    %rax,%rdi
    83bb:	e8 9e 0d 00 00       	call   915e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    83c0:	48 89 d8             	mov    %rbx,%rax
    83c3:	48 89 c7             	mov    %rax,%rdi
    83c6:	e8 55 c4 ff ff       	call   4820 <_Unwind_Resume@plt>
    83cb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    83cf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    83d3:	c9                   	leave
    83d4:	c3                   	ret

00000000000083d5 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    83d5:	55                   	push   %rbp
    83d6:	48 89 e5             	mov    %rsp,%rbp
    83d9:	53                   	push   %rbx
    83da:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    83e1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    83e5:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    83e9:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    83f0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    83f4:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    83f8:	48 89 d6             	mov    %rdx,%rsi
    83fb:	48 89 c7             	mov    %rax,%rdi
    83fe:	e8 aa fc ff ff       	call   80ad <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    8403:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8407:	48 89 c7             	mov    %rax,%rdi
    840a:	e8 0f 0e 00 00       	call   921e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    840f:	48 89 c3             	mov    %rax,%rbx
    8412:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8416:	48 89 c7             	mov    %rax,%rdi
    8419:	e8 2e 0e 00 00       	call   924c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    841e:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8422:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8426:	48 89 de             	mov    %rbx,%rsi
    8429:	48 89 c7             	mov    %rax,%rdi
    842c:	e8 53 0e 00 00       	call   9284 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    8431:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8435:	48 89 c7             	mov    %rax,%rdi
    8438:	e8 2b 0e 00 00       	call   9268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    843d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8444:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8448:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    844c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8450:	48 89 c7             	mov    %rax,%rdi
    8453:	e8 e6 0e 00 00       	call   933e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8458:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    845c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8460:	48 89 c7             	mov    %rax,%rdi
    8463:	e8 fc 0e 00 00       	call   9364 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8468:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    846c:	eb 6c                	jmp    84da <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    846e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8472:	48 89 c7             	mov    %rax,%rdi
    8475:	e8 6e 0f 00 00       	call   93e8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    847a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    847e:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    8485:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    8489:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    8490:	8b 75 ec             	mov    -0x14(%rbp),%esi
    8493:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8497:	48 89 c7             	mov    %rax,%rdi
    849a:	e8 01 c0 ff ff       	call   44a0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    849f:	8b 45 9c             	mov    -0x64(%rbp),%eax
    84a2:	85 c0                	test   %eax,%eax
    84a4:	74 24                	je     84ca <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    84a6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    84a9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    84ad:	48 89 d6             	mov    %rdx,%rsi
    84b0:	48 89 c7             	mov    %rax,%rdi
    84b3:	e8 42 0f 00 00       	call   93fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    84b8:	48 89 c2             	mov    %rax,%rdx
    84bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    84bf:	48 89 c6             	mov    %rax,%rsi
    84c2:	48 89 d7             	mov    %rdx,%rdi
    84c5:	e8 5a 0f 00 00       	call   9424 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    84ca:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    84ce:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    84d2:	48 89 c7             	mov    %rax,%rdi
    84d5:	e8 ee 0e 00 00       	call   93c8 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    84da:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    84de:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    84e2:	48 89 d6             	mov    %rdx,%rsi
    84e5:	48 89 c7             	mov    %rax,%rdi
    84e8:	e8 a0 0e 00 00       	call   938d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    84ed:	84 c0                	test   %al,%al
    84ef:	0f 85 79 ff ff ff    	jne    846e <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    84f5:	90                   	nop
}
    84f6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    84fa:	48 89 c7             	mov    %rax,%rdi
    84fd:	e8 5c 0c 00 00       	call   915e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    8502:	eb 37                	jmp    853b <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    8504:	48 89 c3             	mov    %rax,%rbx
    8507:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    850b:	48 89 c7             	mov    %rax,%rdi
    850e:	e8 55 0d 00 00       	call   9268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    8513:	eb 0f                	jmp    8524 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    8515:	48 89 c3             	mov    %rax,%rbx
    8518:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    851c:	48 89 c7             	mov    %rax,%rdi
    851f:	e8 d6 0d 00 00       	call   92fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    8524:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8528:	48 89 c7             	mov    %rax,%rdi
    852b:	e8 2e 0c 00 00       	call   915e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8530:	48 89 d8             	mov    %rbx,%rax
    8533:	48 89 c7             	mov    %rax,%rdi
    8536:	e8 e5 c2 ff ff       	call   4820 <_Unwind_Resume@plt>
    853b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    853f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8543:	c9                   	leave
    8544:	c3                   	ret

0000000000008545 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    8545:	55                   	push   %rbp
    8546:	48 89 e5             	mov    %rsp,%rbp
    8549:	41 54                	push   %r12
    854b:	53                   	push   %rbx
    854c:	48 83 ec 20          	sub    $0x20,%rsp
    8550:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8554:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8558:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    855c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8560:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8564:	0f 11 00             	movups %xmm0,(%rax)
    8567:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    856b:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    856f:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    8574:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8578:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    857c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8580:	48 89 ce             	mov    %rcx,%rsi
    8583:	48 89 c7             	mov    %rax,%rdi
    8586:	e8 d5 bd ff ff       	call   4360 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    858b:	85 c0                	test   %eax,%eax
    858d:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    8590:	84 c0                	test   %al,%al
    8592:	74 51                	je     85e5 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    8594:	bf 10 00 00 00       	mov    $0x10,%edi
    8599:	e8 02 bc ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    859e:	48 89 c3             	mov    %rax,%rbx
    85a1:	48 8d 05 e0 4c 01 00 	lea    0x14ce0(%rip),%rax        # 1d288 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb8>
    85a8:	48 89 c6             	mov    %rax,%rsi
    85ab:	48 89 df             	mov    %rbx,%rdi
    85ae:	e8 6d bb ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    85b3:	48 8b 05 ee 59 02 00 	mov    0x259ee(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    85ba:	48 89 c2             	mov    %rax,%rdx
    85bd:	48 8d 05 7c 57 02 00 	lea    0x2577c(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    85c4:	48 89 c6             	mov    %rax,%rsi
    85c7:	48 89 df             	mov    %rbx,%rdi
    85ca:	e8 f1 c1 ff ff       	call   47c0 <__cxa_throw@plt>
    85cf:	49 89 c4             	mov    %rax,%r12
    85d2:	48 89 df             	mov    %rbx,%rdi
    85d5:	e8 d6 bc ff ff       	call   42b0 <__cxa_free_exception@plt>
    85da:	4c 89 e0             	mov    %r12,%rax
    85dd:	48 89 c7             	mov    %rax,%rdi
    85e0:	e8 3b c2 ff ff       	call   4820 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    85e5:	90                   	nop
}
    85e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85ea:	48 83 c4 20          	add    $0x20,%rsp
    85ee:	5b                   	pop    %rbx
    85ef:	41 5c                	pop    %r12
    85f1:	5d                   	pop    %rbp
    85f2:	c3                   	ret

00000000000085f3 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    85f3:	55                   	push   %rbp
    85f4:	48 89 e5             	mov    %rsp,%rbp
    85f7:	41 54                	push   %r12
    85f9:	53                   	push   %rbx
    85fa:	48 83 ec 30          	sub    $0x30,%rsp
    85fe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8602:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8606:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    860a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    860e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8612:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8616:	b9 00 00 00 00       	mov    $0x0,%ecx
    861b:	48 89 c7             	mov    %rax,%rdi
    861e:	e8 bd bf ff ff       	call   45e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    8623:	85 c0                	test   %eax,%eax
    8625:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    8628:	84 c0                	test   %al,%al
    862a:	74 3b                	je     8667 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    862c:	bf 10 00 00 00       	mov    $0x10,%edi
    8631:	e8 6a bb ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    8636:	48 89 c3             	mov    %rax,%rbx
    8639:	48 8d 05 70 4c 01 00 	lea    0x14c70(%rip),%rax        # 1d2b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    8640:	48 89 c6             	mov    %rax,%rsi
    8643:	48 89 df             	mov    %rbx,%rdi
    8646:	e8 d5 ba ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    864b:	48 8b 05 56 59 02 00 	mov    0x25956(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8652:	48 89 c2             	mov    %rax,%rdx
    8655:	48 8d 05 e4 56 02 00 	lea    0x256e4(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    865c:	48 89 c6             	mov    %rax,%rsi
    865f:	48 89 df             	mov    %rbx,%rdi
    8662:	e8 59 c1 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    8667:	8b 45 e8             	mov    -0x18(%rbp),%eax
    866a:	89 c3                	mov    %eax,%ebx
    866c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8670:	48 89 c7             	mov    %rax,%rdi
    8673:	e8 84 0e 00 00       	call   94fc <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    8678:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    867c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8680:	48 89 de             	mov    %rbx,%rsi
    8683:	48 89 c7             	mov    %rax,%rdi
    8686:	e8 a9 0e 00 00       	call   9534 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    868b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    868f:	48 89 c7             	mov    %rax,%rdi
    8692:	e8 81 0e 00 00       	call   9518 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    8697:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    869b:	48 89 c7             	mov    %rax,%rdi
    869e:	e8 4b 0f 00 00       	call   95ee <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    86a3:	48 89 c1             	mov    %rax,%rcx
    86a6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    86aa:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    86ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    86b2:	48 89 c7             	mov    %rax,%rdi
    86b5:	e8 26 bf ff ff       	call   45e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    86ba:	85 c0                	test   %eax,%eax
    86bc:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    86bf:	84 c0                	test   %al,%al
    86c1:	0f 84 95 00 00 00    	je     875c <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    86c7:	bf 10 00 00 00       	mov    $0x10,%edi
    86cc:	e8 cf ba ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    86d1:	48 89 c3             	mov    %rax,%rbx
    86d4:	48 8d 05 d5 4b 01 00 	lea    0x14bd5(%rip),%rax        # 1d2b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    86db:	48 89 c6             	mov    %rax,%rsi
    86de:	48 89 df             	mov    %rbx,%rdi
    86e1:	e8 3a ba ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    86e6:	48 8b 05 bb 58 02 00 	mov    0x258bb(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    86ed:	48 89 c2             	mov    %rax,%rdx
    86f0:	48 8d 05 49 56 02 00 	lea    0x25649(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    86f7:	48 89 c6             	mov    %rax,%rsi
    86fa:	48 89 df             	mov    %rbx,%rdi
    86fd:	e8 be c0 ff ff       	call   47c0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    8702:	49 89 c4             	mov    %rax,%r12
    8705:	48 89 df             	mov    %rbx,%rdi
    8708:	e8 a3 bb ff ff       	call   42b0 <__cxa_free_exception@plt>
    870d:	4c 89 e0             	mov    %r12,%rax
    8710:	48 89 c7             	mov    %rax,%rdi
    8713:	e8 08 c1 ff ff       	call   4820 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    8718:	48 89 c3             	mov    %rax,%rbx
    871b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    871f:	48 89 c7             	mov    %rax,%rdi
    8722:	e8 f1 0d 00 00       	call   9518 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    8727:	48 89 d8             	mov    %rbx,%rax
    872a:	48 89 c7             	mov    %rax,%rdi
    872d:	e8 ee c0 ff ff       	call   4820 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    8732:	49 89 c4             	mov    %rax,%r12
    8735:	48 89 df             	mov    %rbx,%rdi
    8738:	e8 73 bb ff ff       	call   42b0 <__cxa_free_exception@plt>
    873d:	4c 89 e3             	mov    %r12,%rbx
    8740:	eb 03                	jmp    8745 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    8742:	48 89 c3             	mov    %rax,%rbx
    8745:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8749:	48 89 c7             	mov    %rax,%rdi
    874c:	e8 59 0e 00 00       	call   95aa <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8751:	48 89 d8             	mov    %rbx,%rax
    8754:	48 89 c7             	mov    %rax,%rdi
    8757:	e8 c4 c0 ff ff       	call   4820 <_Unwind_Resume@plt>
  return surfaceFormats;
    875c:	90                   	nop
}
    875d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8761:	48 83 c4 30          	add    $0x30,%rsp
    8765:	5b                   	pop    %rbx
    8766:	41 5c                	pop    %r12
    8768:	5d                   	pop    %rbp
    8769:	c3                   	ret

000000000000876a <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    876a:	55                   	push   %rbp
    876b:	48 89 e5             	mov    %rsp,%rbp
    876e:	41 54                	push   %r12
    8770:	53                   	push   %rbx
    8771:	48 83 ec 30          	sub    $0x30,%rsp
    8775:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8779:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    877d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    8781:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    8785:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8789:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    878d:	b9 00 00 00 00       	mov    $0x0,%ecx
    8792:	48 89 c7             	mov    %rax,%rdi
    8795:	e8 56 be ff ff       	call   45f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    879a:	85 c0                	test   %eax,%eax
    879c:	0f 95 c0             	setne  %al
    879f:	84 c0                	test   %al,%al
    87a1:	74 3b                	je     87de <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    87a3:	bf 10 00 00 00       	mov    $0x10,%edi
    87a8:	e8 f3 b9 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    87ad:	48 89 c3             	mov    %rax,%rbx
    87b0:	48 8d 05 21 4b 01 00 	lea    0x14b21(%rip),%rax        # 1d2d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    87b7:	48 89 c6             	mov    %rax,%rsi
    87ba:	48 89 df             	mov    %rbx,%rdi
    87bd:	e8 5e b9 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    87c2:	48 8b 05 df 57 02 00 	mov    0x257df(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    87c9:	48 89 c2             	mov    %rax,%rdx
    87cc:	48 8d 05 6d 55 02 00 	lea    0x2556d(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    87d3:	48 89 c6             	mov    %rax,%rsi
    87d6:	48 89 df             	mov    %rbx,%rdi
    87d9:	e8 e2 bf ff ff       	call   47c0 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    87de:	8b 45 e8             	mov    -0x18(%rbp),%eax
    87e1:	89 c3                	mov    %eax,%ebx
    87e3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87e7:	48 89 c7             	mov    %rax,%rdi
    87ea:	e8 71 0e 00 00       	call   9660 <_ZNSaI16VkPresentModeKHREC1Ev>
    87ef:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    87f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    87f7:	48 89 de             	mov    %rbx,%rsi
    87fa:	48 89 c7             	mov    %rax,%rdi
    87fd:	e8 96 0e 00 00       	call   9698 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    8802:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8806:	48 89 c7             	mov    %rax,%rdi
    8809:	e8 6e 0e 00 00       	call   967c <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    880e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8812:	48 89 c7             	mov    %rax,%rdi
    8815:	e8 38 0f 00 00       	call   9752 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    881a:	48 89 c1             	mov    %rax,%rcx
    881d:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    8821:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8825:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8829:	48 89 c7             	mov    %rax,%rdi
    882c:	e8 bf bd ff ff       	call   45f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    8831:	85 c0                	test   %eax,%eax
    8833:	0f 95 c0             	setne  %al
    8836:	84 c0                	test   %al,%al
    8838:	0f 84 95 00 00 00    	je     88d3 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    883e:	bf 10 00 00 00       	mov    $0x10,%edi
    8843:	e8 58 b9 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    8848:	48 89 c3             	mov    %rax,%rbx
    884b:	48 8d 05 86 4a 01 00 	lea    0x14a86(%rip),%rax        # 1d2d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    8852:	48 89 c6             	mov    %rax,%rsi
    8855:	48 89 df             	mov    %rbx,%rdi
    8858:	e8 c3 b8 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    885d:	48 8b 05 44 57 02 00 	mov    0x25744(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8864:	48 89 c2             	mov    %rax,%rdx
    8867:	48 8d 05 d2 54 02 00 	lea    0x254d2(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    886e:	48 89 c6             	mov    %rax,%rsi
    8871:	48 89 df             	mov    %rbx,%rdi
    8874:	e8 47 bf ff ff       	call   47c0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    8879:	49 89 c4             	mov    %rax,%r12
    887c:	48 89 df             	mov    %rbx,%rdi
    887f:	e8 2c ba ff ff       	call   42b0 <__cxa_free_exception@plt>
    8884:	4c 89 e0             	mov    %r12,%rax
    8887:	48 89 c7             	mov    %rax,%rdi
    888a:	e8 91 bf ff ff       	call   4820 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    888f:	48 89 c3             	mov    %rax,%rbx
    8892:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8896:	48 89 c7             	mov    %rax,%rdi
    8899:	e8 de 0d 00 00       	call   967c <_ZNSaI16VkPresentModeKHRED1Ev>
    889e:	48 89 d8             	mov    %rbx,%rax
    88a1:	48 89 c7             	mov    %rax,%rdi
    88a4:	e8 77 bf ff ff       	call   4820 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    88a9:	49 89 c4             	mov    %rax,%r12
    88ac:	48 89 df             	mov    %rbx,%rdi
    88af:	e8 fc b9 ff ff       	call   42b0 <__cxa_free_exception@plt>
    88b4:	4c 89 e3             	mov    %r12,%rbx
    88b7:	eb 03                	jmp    88bc <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    88b9:	48 89 c3             	mov    %rax,%rbx
    88bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88c0:	48 89 c7             	mov    %rax,%rdi
    88c3:	e8 46 0e 00 00       	call   970e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    88c8:	48 89 d8             	mov    %rbx,%rax
    88cb:	48 89 c7             	mov    %rax,%rdi
    88ce:	e8 4d bf ff ff       	call   4820 <_Unwind_Resume@plt>
  return presentModes;
    88d3:	90                   	nop
}
    88d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88d8:	48 83 c4 30          	add    $0x30,%rsp
    88dc:	5b                   	pop    %rbx
    88dd:	41 5c                	pop    %r12
    88df:	5d                   	pop    %rbp
    88e0:	c3                   	ret

00000000000088e1 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    88e1:	55                   	push   %rbp
    88e2:	48 89 e5             	mov    %rsp,%rbp
    88e5:	41 54                	push   %r12
    88e7:	53                   	push   %rbx
    88e8:	48 83 ec 30          	sub    $0x30,%rsp
    88ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    88f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    88f4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    88f8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    88fc:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8900:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8904:	b9 00 00 00 00       	mov    $0x0,%ecx
    8909:	48 89 c7             	mov    %rax,%rdi
    890c:	e8 1f b9 ff ff       	call   4230 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    8911:	85 c0                	test   %eax,%eax
    8913:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    8916:	84 c0                	test   %al,%al
    8918:	74 3b                	je     8955 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    891a:	bf 10 00 00 00       	mov    $0x10,%edi
    891f:	e8 7c b8 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    8924:	48 89 c3             	mov    %rax,%rbx
    8927:	48 8d 05 da 49 01 00 	lea    0x149da(%rip),%rax        # 1d308 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    892e:	48 89 c6             	mov    %rax,%rsi
    8931:	48 89 df             	mov    %rbx,%rdi
    8934:	e8 e7 b7 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    8939:	48 8b 05 68 56 02 00 	mov    0x25668(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8940:	48 89 c2             	mov    %rax,%rdx
    8943:	48 8d 05 f6 53 02 00 	lea    0x253f6(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    894a:	48 89 c6             	mov    %rax,%rsi
    894d:	48 89 df             	mov    %rbx,%rdi
    8950:	e8 6b be ff ff       	call   47c0 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    8955:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8958:	89 c3                	mov    %eax,%ebx
    895a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    895e:	48 89 c7             	mov    %rax,%rdi
    8961:	e8 5e 0e 00 00       	call   97c4 <_ZNSaIP9VkImage_TEC1Ev>
    8966:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    896a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    896e:	48 89 de             	mov    %rbx,%rsi
    8971:	48 89 c7             	mov    %rax,%rdi
    8974:	e8 83 0e 00 00       	call   97fc <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    8979:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    897d:	48 89 c7             	mov    %rax,%rdi
    8980:	e8 5b 0e 00 00       	call   97e0 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    8985:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8989:	48 89 c7             	mov    %rax,%rdi
    898c:	e8 25 0f 00 00       	call   98b6 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    8991:	48 89 c1             	mov    %rax,%rcx
    8994:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    8998:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    899c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    89a0:	48 89 c7             	mov    %rax,%rdi
    89a3:	e8 88 b8 ff ff       	call   4230 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    89a8:	85 c0                	test   %eax,%eax
    89aa:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    89ad:	84 c0                	test   %al,%al
    89af:	0f 84 95 00 00 00    	je     8a4a <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    89b5:	bf 10 00 00 00       	mov    $0x10,%edi
    89ba:	e8 e1 b7 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    89bf:	48 89 c3             	mov    %rax,%rbx
    89c2:	48 8d 05 3f 49 01 00 	lea    0x1493f(%rip),%rax        # 1d308 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    89c9:	48 89 c6             	mov    %rax,%rsi
    89cc:	48 89 df             	mov    %rbx,%rdi
    89cf:	e8 4c b7 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    89d4:	48 8b 05 cd 55 02 00 	mov    0x255cd(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    89db:	48 89 c2             	mov    %rax,%rdx
    89de:	48 8d 05 5b 53 02 00 	lea    0x2535b(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    89e5:	48 89 c6             	mov    %rax,%rsi
    89e8:	48 89 df             	mov    %rbx,%rdi
    89eb:	e8 d0 bd ff ff       	call   47c0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    89f0:	49 89 c4             	mov    %rax,%r12
    89f3:	48 89 df             	mov    %rbx,%rdi
    89f6:	e8 b5 b8 ff ff       	call   42b0 <__cxa_free_exception@plt>
    89fb:	4c 89 e0             	mov    %r12,%rax
    89fe:	48 89 c7             	mov    %rax,%rdi
    8a01:	e8 1a be ff ff       	call   4820 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    8a06:	48 89 c3             	mov    %rax,%rbx
    8a09:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a0d:	48 89 c7             	mov    %rax,%rdi
    8a10:	e8 cb 0d 00 00       	call   97e0 <_ZNSaIP9VkImage_TED1Ev>
    8a15:	48 89 d8             	mov    %rbx,%rax
    8a18:	48 89 c7             	mov    %rax,%rdi
    8a1b:	e8 00 be ff ff       	call   4820 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    8a20:	49 89 c4             	mov    %rax,%r12
    8a23:	48 89 df             	mov    %rbx,%rdi
    8a26:	e8 85 b8 ff ff       	call   42b0 <__cxa_free_exception@plt>
    8a2b:	4c 89 e3             	mov    %r12,%rbx
    8a2e:	eb 03                	jmp    8a33 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    8a30:	48 89 c3             	mov    %rax,%rbx
    8a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a37:	48 89 c7             	mov    %rax,%rdi
    8a3a:	e8 33 0e 00 00       	call   9872 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    8a3f:	48 89 d8             	mov    %rbx,%rax
    8a42:	48 89 c7             	mov    %rax,%rdi
    8a45:	e8 d6 bd ff ff       	call   4820 <_Unwind_Resume@plt>
  return swapchainImages;
    8a4a:	90                   	nop
}
    8a4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a4f:	48 83 c4 30          	add    $0x30,%rsp
    8a53:	5b                   	pop    %rbx
    8a54:	41 5c                	pop    %r12
    8a56:	5d                   	pop    %rbp
    8a57:	c3                   	ret

0000000000008a58 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    8a58:	55                   	push   %rbp
    8a59:	48 89 e5             	mov    %rsp,%rbp
    8a5c:	48 83 ec 10          	sub    $0x10,%rsp
    8a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a68:	48 89 c7             	mov    %rax,%rdi
    8a6b:	e8 00 01 00 00       	call   8b70 <_ZNSaI17VkLayerPropertiesED1Ev>
    8a70:	90                   	nop
    8a71:	c9                   	leave
    8a72:	c3                   	ret
    8a73:	90                   	nop

0000000000008a74 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    8a74:	55                   	push   %rbp
    8a75:	48 89 e5             	mov    %rsp,%rbp
    8a78:	48 83 ec 10          	sub    $0x10,%rsp
    8a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a84:	48 89 c7             	mov    %rax,%rdi
    8a87:	e8 52 02 00 00       	call   8cde <_ZNSaI21VkExtensionPropertiesED1Ev>
    8a8c:	90                   	nop
    8a8d:	c9                   	leave
    8a8e:	c3                   	ret
    8a8f:	90                   	nop

0000000000008a90 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    8a90:	55                   	push   %rbp
    8a91:	48 89 e5             	mov    %rsp,%rbp
    8a94:	48 83 ec 10          	sub    $0x10,%rsp
    8a98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aa0:	48 89 c7             	mov    %rax,%rdi
    8aa3:	e8 a4 03 00 00       	call   8e4c <_ZNSaIPKcED1Ev>
    8aa8:	90                   	nop
    8aa9:	c9                   	leave
    8aaa:	c3                   	ret
    8aab:	90                   	nop

0000000000008aac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    8aac:	55                   	push   %rbp
    8aad:	48 89 e5             	mov    %rsp,%rbp
    8ab0:	48 83 ec 10          	sub    $0x10,%rsp
    8ab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8abc:	48 89 c7             	mov    %rax,%rdi
    8abf:	e8 a4 04 00 00       	call   8f68 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8ac4:	90                   	nop
    8ac5:	c9                   	leave
    8ac6:	c3                   	ret
    8ac7:	90                   	nop

0000000000008ac8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    8ac8:	55                   	push   %rbp
    8ac9:	48 89 e5             	mov    %rsp,%rbp
    8acc:	48 83 ec 10          	sub    $0x10,%rsp
    8ad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ad8:	48 89 c7             	mov    %rax,%rdi
    8adb:	e8 ec 05 00 00       	call   90cc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8ae0:	90                   	nop
    8ae1:	c9                   	leave
    8ae2:	c3                   	ret
    8ae3:	90                   	nop

0000000000008ae4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    8ae4:	55                   	push   %rbp
    8ae5:	48 89 e5             	mov    %rsp,%rbp
    8ae8:	48 83 ec 10          	sub    $0x10,%rsp
    8aec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8af4:	48 89 c7             	mov    %rax,%rdi
    8af7:	e8 6c 07 00 00       	call   9268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    8afc:	90                   	nop
    8afd:	c9                   	leave
    8afe:	c3                   	ret
    8aff:	90                   	nop

0000000000008b00 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    8b00:	55                   	push   %rbp
    8b01:	48 89 e5             	mov    %rsp,%rbp
    8b04:	48 83 ec 10          	sub    $0x10,%rsp
    8b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b10:	48 89 c7             	mov    %rax,%rdi
    8b13:	e8 00 0a 00 00       	call   9518 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    8b18:	90                   	nop
    8b19:	c9                   	leave
    8b1a:	c3                   	ret
    8b1b:	90                   	nop

0000000000008b1c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    8b1c:	55                   	push   %rbp
    8b1d:	48 89 e5             	mov    %rsp,%rbp
    8b20:	48 83 ec 10          	sub    $0x10,%rsp
    8b24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b2c:	48 89 c7             	mov    %rax,%rdi
    8b2f:	e8 48 0b 00 00       	call   967c <_ZNSaI16VkPresentModeKHRED1Ev>
    8b34:	90                   	nop
    8b35:	c9                   	leave
    8b36:	c3                   	ret
    8b37:	90                   	nop

0000000000008b38 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    8b38:	55                   	push   %rbp
    8b39:	48 89 e5             	mov    %rsp,%rbp
    8b3c:	48 83 ec 10          	sub    $0x10,%rsp
    8b40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b48:	48 89 c7             	mov    %rax,%rdi
    8b4b:	e8 90 0c 00 00       	call   97e0 <_ZNSaIP9VkImage_TED1Ev>
    8b50:	90                   	nop
    8b51:	c9                   	leave
    8b52:	c3                   	ret
    8b53:	90                   	nop

0000000000008b54 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8b54:	55                   	push   %rbp
    8b55:	48 89 e5             	mov    %rsp,%rbp
    8b58:	48 83 ec 10          	sub    $0x10,%rsp
    8b5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b64:	48 89 c7             	mov    %rax,%rdi
    8b67:	e8 bc 0d 00 00       	call   9928 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    8b6c:	90                   	nop
    8b6d:	c9                   	leave
    8b6e:	c3                   	ret
    8b6f:	90                   	nop

0000000000008b70 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8b70:	55                   	push   %rbp
    8b71:	48 89 e5             	mov    %rsp,%rbp
    8b74:	48 83 ec 10          	sub    $0x10,%rsp
    8b78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b80:	48 89 c7             	mov    %rax,%rdi
    8b83:	e8 ac 0d 00 00       	call   9934 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    8b88:	90                   	nop
    8b89:	c9                   	leave
    8b8a:	c3                   	ret
    8b8b:	90                   	nop

0000000000008b8c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8b8c:	55                   	push   %rbp
    8b8d:	48 89 e5             	mov    %rsp,%rbp
    8b90:	53                   	push   %rbx
    8b91:	48 83 ec 28          	sub    $0x28,%rsp
    8b95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8b99:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8b9d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8ba1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8ba5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8ba9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8bad:	48 89 d6             	mov    %rdx,%rsi
    8bb0:	48 89 c7             	mov    %rax,%rdi
    8bb3:	e8 87 0d 00 00       	call   993f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8bb8:	48 89 c1             	mov    %rax,%rcx
    8bbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8bbf:	48 89 c2             	mov    %rax,%rdx
    8bc2:	48 89 ce             	mov    %rcx,%rsi
    8bc5:	48 89 df             	mov    %rbx,%rdi
    8bc8:	e8 d3 0d 00 00       	call   99a0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8bcd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8bd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bd5:	48 89 d6             	mov    %rdx,%rsi
    8bd8:	48 89 c7             	mov    %rax,%rdi
    8bdb:	e8 1e 0e 00 00       	call   99fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    8be0:	eb 1a                	jmp    8bfc <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8be2:	48 89 c3             	mov    %rax,%rbx
    8be5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8be9:	48 89 c7             	mov    %rax,%rdi
    8bec:	e8 79 00 00 00       	call   8c6a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    8bf1:	48 89 d8             	mov    %rbx,%rax
    8bf4:	48 89 c7             	mov    %rax,%rdi
    8bf7:	e8 24 bc ff ff       	call   4820 <_Unwind_Resume@plt>
    8bfc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c00:	c9                   	leave
    8c01:	c3                   	ret

0000000000008c02 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8c02:	55                   	push   %rbp
    8c03:	48 89 e5             	mov    %rsp,%rbp
    8c06:	48 83 ec 10          	sub    $0x10,%rsp
    8c0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8c0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c12:	48 89 c7             	mov    %rax,%rdi
    8c15:	e8 24 0e 00 00       	call   9a3e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8c1a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8c1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c21:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c29:	48 8b 00             	mov    (%rax),%rax
    8c2c:	48 89 ce             	mov    %rcx,%rsi
    8c2f:	48 89 c7             	mov    %rax,%rdi
    8c32:	e8 15 0e 00 00       	call   9a4c <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c3b:	48 89 c7             	mov    %rax,%rdi
    8c3e:	e8 27 00 00 00       	call   8c6a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    8c43:	90                   	nop
    8c44:	c9                   	leave
    8c45:	c3                   	ret

0000000000008c46 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8c46:	55                   	push   %rbp
    8c47:	48 89 e5             	mov    %rsp,%rbp
    8c4a:	48 83 ec 10          	sub    $0x10,%rsp
    8c4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c56:	48 8b 10             	mov    (%rax),%rdx
    8c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c5d:	48 89 d6             	mov    %rdx,%rsi
    8c60:	48 89 c7             	mov    %rax,%rdi
    8c63:	e8 0e 0e 00 00       	call   9a76 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8c68:	c9                   	leave
    8c69:	c3                   	ret

0000000000008c6a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8c6a:	55                   	push   %rbp
    8c6b:	48 89 e5             	mov    %rsp,%rbp
    8c6e:	48 83 ec 10          	sub    $0x10,%rsp
    8c72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c7a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c82:	48 8b 00             	mov    (%rax),%rax
    8c85:	48 29 c2             	sub    %rax,%rdx
    8c88:	48 c1 fa 03          	sar    $0x3,%rdx
    8c8c:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    8c93:	fc c0 0f 
    8c96:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8c9a:	48 89 c2             	mov    %rax,%rdx
    8c9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ca1:	48 8b 08             	mov    (%rax),%rcx
    8ca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ca8:	48 89 ce             	mov    %rcx,%rsi
    8cab:	48 89 c7             	mov    %rax,%rdi
    8cae:	e8 fb 0d 00 00       	call   9aae <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8cb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cb7:	48 89 c7             	mov    %rax,%rdi
    8cba:	e8 99 fd ff ff       	call   8a58 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8cbf:	90                   	nop
    8cc0:	c9                   	leave
    8cc1:	c3                   	ret

0000000000008cc2 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8cc2:	55                   	push   %rbp
    8cc3:	48 89 e5             	mov    %rsp,%rbp
    8cc6:	48 83 ec 10          	sub    $0x10,%rsp
    8cca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cd2:	48 89 c7             	mov    %rax,%rdi
    8cd5:	e8 0a 0e 00 00       	call   9ae4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    8cda:	90                   	nop
    8cdb:	c9                   	leave
    8cdc:	c3                   	ret
    8cdd:	90                   	nop

0000000000008cde <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8cde:	55                   	push   %rbp
    8cdf:	48 89 e5             	mov    %rsp,%rbp
    8ce2:	48 83 ec 10          	sub    $0x10,%rsp
    8ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cee:	48 89 c7             	mov    %rax,%rdi
    8cf1:	e8 fa 0d 00 00       	call   9af0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    8cf6:	90                   	nop
    8cf7:	c9                   	leave
    8cf8:	c3                   	ret
    8cf9:	90                   	nop

0000000000008cfa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8cfa:	55                   	push   %rbp
    8cfb:	48 89 e5             	mov    %rsp,%rbp
    8cfe:	53                   	push   %rbx
    8cff:	48 83 ec 28          	sub    $0x28,%rsp
    8d03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8d07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8d0b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8d0f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8d13:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8d17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8d1b:	48 89 d6             	mov    %rdx,%rsi
    8d1e:	48 89 c7             	mov    %rax,%rdi
    8d21:	e8 d5 0d 00 00       	call   9afb <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8d26:	48 89 c1             	mov    %rax,%rcx
    8d29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d2d:	48 89 c2             	mov    %rax,%rdx
    8d30:	48 89 ce             	mov    %rcx,%rsi
    8d33:	48 89 df             	mov    %rbx,%rdi
    8d36:	e8 21 0e 00 00       	call   9b5c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8d3b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8d3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d43:	48 89 d6             	mov    %rdx,%rsi
    8d46:	48 89 c7             	mov    %rax,%rdi
    8d49:	e8 6c 0e 00 00       	call   9bba <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    8d4e:	eb 1a                	jmp    8d6a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8d50:	48 89 c3             	mov    %rax,%rbx
    8d53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d57:	48 89 c7             	mov    %rax,%rdi
    8d5a:	e8 79 00 00 00       	call   8dd8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8d5f:	48 89 d8             	mov    %rbx,%rax
    8d62:	48 89 c7             	mov    %rax,%rdi
    8d65:	e8 b6 ba ff ff       	call   4820 <_Unwind_Resume@plt>
    8d6a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d6e:	c9                   	leave
    8d6f:	c3                   	ret

0000000000008d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8d70:	55                   	push   %rbp
    8d71:	48 89 e5             	mov    %rsp,%rbp
    8d74:	48 83 ec 10          	sub    $0x10,%rsp
    8d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d80:	48 89 c7             	mov    %rax,%rdi
    8d83:	e8 72 0e 00 00       	call   9bfa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8d88:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8d8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d8f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d97:	48 8b 00             	mov    (%rax),%rax
    8d9a:	48 89 ce             	mov    %rcx,%rsi
    8d9d:	48 89 c7             	mov    %rax,%rdi
    8da0:	e8 63 0e 00 00       	call   9c08 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8da9:	48 89 c7             	mov    %rax,%rdi
    8dac:	e8 27 00 00 00       	call   8dd8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8db1:	90                   	nop
    8db2:	c9                   	leave
    8db3:	c3                   	ret

0000000000008db4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8db4:	55                   	push   %rbp
    8db5:	48 89 e5             	mov    %rsp,%rbp
    8db8:	48 83 ec 10          	sub    $0x10,%rsp
    8dbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dc4:	48 8b 10             	mov    (%rax),%rdx
    8dc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dcb:	48 89 d6             	mov    %rdx,%rsi
    8dce:	48 89 c7             	mov    %rax,%rdi
    8dd1:	e8 5c 0e 00 00       	call   9c32 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8dd6:	c9                   	leave
    8dd7:	c3                   	ret

0000000000008dd8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8dd8:	55                   	push   %rbp
    8dd9:	48 89 e5             	mov    %rsp,%rbp
    8ddc:	48 83 ec 10          	sub    $0x10,%rsp
    8de0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8de4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8de8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8df0:	48 8b 00             	mov    (%rax),%rax
    8df3:	48 29 c2             	sub    %rax,%rdx
    8df6:	48 c1 fa 02          	sar    $0x2,%rdx
    8dfa:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    8e01:	fc c0 0f 
    8e04:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8e08:	48 89 c2             	mov    %rax,%rdx
    8e0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e0f:	48 8b 08             	mov    (%rax),%rcx
    8e12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e16:	48 89 ce             	mov    %rcx,%rsi
    8e19:	48 89 c7             	mov    %rax,%rdi
    8e1c:	e8 49 0e 00 00       	call   9c6a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e25:	48 89 c7             	mov    %rax,%rdi
    8e28:	e8 47 fc ff ff       	call   8a74 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8e2d:	90                   	nop
    8e2e:	c9                   	leave
    8e2f:	c3                   	ret

0000000000008e30 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8e30:	55                   	push   %rbp
    8e31:	48 89 e5             	mov    %rsp,%rbp
    8e34:	48 83 ec 10          	sub    $0x10,%rsp
    8e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e40:	48 89 c7             	mov    %rax,%rdi
    8e43:	e8 58 0e 00 00       	call   9ca0 <_ZNSt15__new_allocatorIPKcEC1Ev>
    8e48:	90                   	nop
    8e49:	c9                   	leave
    8e4a:	c3                   	ret
    8e4b:	90                   	nop

0000000000008e4c <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8e4c:	55                   	push   %rbp
    8e4d:	48 89 e5             	mov    %rsp,%rbp
    8e50:	48 83 ec 10          	sub    $0x10,%rsp
    8e54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e5c:	48 89 c7             	mov    %rax,%rdi
    8e5f:	e8 48 0e 00 00       	call   9cac <_ZNSt15__new_allocatorIPKcED1Ev>
    8e64:	90                   	nop
    8e65:	c9                   	leave
    8e66:	c3                   	ret
    8e67:	90                   	nop

0000000000008e68 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8e68:	55                   	push   %rbp
    8e69:	48 89 e5             	mov    %rsp,%rbp
    8e6c:	53                   	push   %rbx
    8e6d:	48 83 ec 28          	sub    $0x28,%rsp
    8e71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8e79:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8e7d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8e81:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8e85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e89:	48 89 d6             	mov    %rdx,%rsi
    8e8c:	48 89 c7             	mov    %rax,%rdi
    8e8f:	e8 23 0e 00 00       	call   9cb7 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    8e94:	48 89 c1             	mov    %rax,%rcx
    8e97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e9b:	48 89 c2             	mov    %rax,%rdx
    8e9e:	48 89 ce             	mov    %rcx,%rsi
    8ea1:	48 89 df             	mov    %rbx,%rdi
    8ea4:	e8 6f 0e 00 00       	call   9d18 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8ea9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8ead:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8eb1:	48 89 d6             	mov    %rdx,%rsi
    8eb4:	48 89 c7             	mov    %rax,%rdi
    8eb7:	e8 ba 0e 00 00       	call   9d76 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    8ebc:	eb 1a                	jmp    8ed8 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    8ebe:	48 89 c3             	mov    %rax,%rbx
    8ec1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ec5:	48 89 c7             	mov    %rax,%rdi
    8ec8:	e8 31 00 00 00       	call   8efe <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    8ecd:	48 89 d8             	mov    %rbx,%rax
    8ed0:	48 89 c7             	mov    %rax,%rdi
    8ed3:	e8 48 b9 ff ff       	call   4820 <_Unwind_Resume@plt>
    8ed8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8edc:	c9                   	leave
    8edd:	c3                   	ret

0000000000008ede <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8ede:	55                   	push   %rbp
    8edf:	48 89 e5             	mov    %rsp,%rbp
    8ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ee6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eee:	48 8b 00             	mov    (%rax),%rax
    8ef1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ef5:	48 c1 e2 03          	shl    $0x3,%rdx
    8ef9:	48 01 d0             	add    %rdx,%rax
      }
    8efc:	5d                   	pop    %rbp
    8efd:	c3                   	ret

0000000000008efe <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8efe:	55                   	push   %rbp
    8eff:	48 89 e5             	mov    %rsp,%rbp
    8f02:	48 83 ec 10          	sub    $0x10,%rsp
    8f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f0e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8f12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f16:	48 8b 00             	mov    (%rax),%rax
    8f19:	48 29 c2             	sub    %rax,%rdx
    8f1c:	48 89 d0             	mov    %rdx,%rax
    8f1f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8f23:	48 89 c2             	mov    %rax,%rdx
    8f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f2a:	48 8b 08             	mov    (%rax),%rcx
    8f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f31:	48 89 ce             	mov    %rcx,%rsi
    8f34:	48 89 c7             	mov    %rax,%rdi
    8f37:	e8 ae 0e 00 00       	call   9dea <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    8f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f40:	48 89 c7             	mov    %rax,%rdi
    8f43:	e8 48 fb ff ff       	call   8a90 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8f48:	90                   	nop
    8f49:	c9                   	leave
    8f4a:	c3                   	ret
    8f4b:	90                   	nop

0000000000008f4c <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8f4c:	55                   	push   %rbp
    8f4d:	48 89 e5             	mov    %rsp,%rbp
    8f50:	48 83 ec 10          	sub    $0x10,%rsp
    8f54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f5c:	48 89 c7             	mov    %rax,%rdi
    8f5f:	e8 bc 0e 00 00       	call   9e20 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    8f64:	90                   	nop
    8f65:	c9                   	leave
    8f66:	c3                   	ret
    8f67:	90                   	nop

0000000000008f68 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8f68:	55                   	push   %rbp
    8f69:	48 89 e5             	mov    %rsp,%rbp
    8f6c:	48 83 ec 10          	sub    $0x10,%rsp
    8f70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f78:	48 89 c7             	mov    %rax,%rdi
    8f7b:	e8 ac 0e 00 00       	call   9e2c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    8f80:	90                   	nop
    8f81:	c9                   	leave
    8f82:	c3                   	ret
    8f83:	90                   	nop

0000000000008f84 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8f84:	55                   	push   %rbp
    8f85:	48 89 e5             	mov    %rsp,%rbp
    8f88:	53                   	push   %rbx
    8f89:	48 83 ec 28          	sub    $0x28,%rsp
    8f8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f95:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8f99:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8f9d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8fa1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8fa5:	48 89 d6             	mov    %rdx,%rsi
    8fa8:	48 89 c7             	mov    %rax,%rdi
    8fab:	e8 87 0e 00 00       	call   9e37 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8fb0:	48 89 c1             	mov    %rax,%rcx
    8fb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8fb7:	48 89 c2             	mov    %rax,%rdx
    8fba:	48 89 ce             	mov    %rcx,%rsi
    8fbd:	48 89 df             	mov    %rbx,%rdi
    8fc0:	e8 d3 0e 00 00       	call   9e98 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8fc5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8fc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fcd:	48 89 d6             	mov    %rdx,%rsi
    8fd0:	48 89 c7             	mov    %rax,%rdi
    8fd3:	e8 1e 0f 00 00       	call   9ef6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    8fd8:	eb 1a                	jmp    8ff4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    8fda:	48 89 c3             	mov    %rax,%rbx
    8fdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fe1:	48 89 c7             	mov    %rax,%rdi
    8fe4:	e8 79 00 00 00       	call   9062 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8fe9:	48 89 d8             	mov    %rbx,%rax
    8fec:	48 89 c7             	mov    %rax,%rdi
    8fef:	e8 2c b8 ff ff       	call   4820 <_Unwind_Resume@plt>
    8ff4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ff8:	c9                   	leave
    8ff9:	c3                   	ret

0000000000008ffa <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8ffa:	55                   	push   %rbp
    8ffb:	48 89 e5             	mov    %rsp,%rbp
    8ffe:	48 83 ec 10          	sub    $0x10,%rsp
    9002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9006:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    900a:	48 89 c7             	mov    %rax,%rdi
    900d:	e8 24 0f 00 00       	call   9f36 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9012:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9019:	48 8b 48 08          	mov    0x8(%rax),%rcx
    901d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9021:	48 8b 00             	mov    (%rax),%rax
    9024:	48 89 ce             	mov    %rcx,%rsi
    9027:	48 89 c7             	mov    %rax,%rdi
    902a:	e8 15 0f 00 00       	call   9f44 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    902f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9033:	48 89 c7             	mov    %rax,%rdi
    9036:	e8 27 00 00 00       	call   9062 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    903b:	90                   	nop
    903c:	c9                   	leave
    903d:	c3                   	ret

000000000000903e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    903e:	55                   	push   %rbp
    903f:	48 89 e5             	mov    %rsp,%rbp
    9042:	48 83 ec 10          	sub    $0x10,%rsp
    9046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    904a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    904e:	48 8b 10             	mov    (%rax),%rdx
    9051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9055:	48 89 d6             	mov    %rdx,%rsi
    9058:	48 89 c7             	mov    %rax,%rdi
    905b:	e8 0e 0f 00 00       	call   9f6e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    9060:	c9                   	leave
    9061:	c3                   	ret

0000000000009062 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9062:	55                   	push   %rbp
    9063:	48 89 e5             	mov    %rsp,%rbp
    9066:	48 83 ec 10          	sub    $0x10,%rsp
    906a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    906e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9072:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    907a:	48 8b 00             	mov    (%rax),%rax
    907d:	48 29 c2             	sub    %rax,%rdx
    9080:	48 89 d0             	mov    %rdx,%rax
    9083:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9087:	48 89 c2             	mov    %rax,%rdx
    908a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    908e:	48 8b 08             	mov    (%rax),%rcx
    9091:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9095:	48 89 ce             	mov    %rcx,%rsi
    9098:	48 89 c7             	mov    %rax,%rdi
    909b:	e8 06 0f 00 00       	call   9fa6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    90a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90a4:	48 89 c7             	mov    %rax,%rdi
    90a7:	e8 00 fa ff ff       	call   8aac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    90ac:	90                   	nop
    90ad:	c9                   	leave
    90ae:	c3                   	ret
    90af:	90                   	nop

00000000000090b0 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    90b0:	55                   	push   %rbp
    90b1:	48 89 e5             	mov    %rsp,%rbp
    90b4:	48 83 ec 10          	sub    $0x10,%rsp
    90b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90c0:	48 89 c7             	mov    %rax,%rdi
    90c3:	e8 14 0f 00 00       	call   9fdc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    90c8:	90                   	nop
    90c9:	c9                   	leave
    90ca:	c3                   	ret
    90cb:	90                   	nop

00000000000090cc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    90cc:	55                   	push   %rbp
    90cd:	48 89 e5             	mov    %rsp,%rbp
    90d0:	48 83 ec 10          	sub    $0x10,%rsp
    90d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90dc:	48 89 c7             	mov    %rax,%rdi
    90df:	e8 04 0f 00 00       	call   9fe8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    90e4:	90                   	nop
    90e5:	c9                   	leave
    90e6:	c3                   	ret
    90e7:	90                   	nop

00000000000090e8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    90e8:	55                   	push   %rbp
    90e9:	48 89 e5             	mov    %rsp,%rbp
    90ec:	53                   	push   %rbx
    90ed:	48 83 ec 28          	sub    $0x28,%rsp
    90f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    90f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    90fd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9101:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9105:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9109:	48 89 d6             	mov    %rdx,%rsi
    910c:	48 89 c7             	mov    %rax,%rdi
    910f:	e8 df 0e 00 00       	call   9ff3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    9114:	48 89 c1             	mov    %rax,%rcx
    9117:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    911b:	48 89 c2             	mov    %rax,%rdx
    911e:	48 89 ce             	mov    %rcx,%rsi
    9121:	48 89 df             	mov    %rbx,%rdi
    9124:	e8 2b 0f 00 00       	call   a054 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9129:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    912d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9131:	48 89 d6             	mov    %rdx,%rsi
    9134:	48 89 c7             	mov    %rax,%rdi
    9137:	e8 76 0f 00 00       	call   a0b2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    913c:	eb 1a                	jmp    9158 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    913e:	48 89 c3             	mov    %rax,%rbx
    9141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9145:	48 89 c7             	mov    %rax,%rdi
    9148:	e8 79 00 00 00       	call   91c6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    914d:	48 89 d8             	mov    %rbx,%rax
    9150:	48 89 c7             	mov    %rax,%rdi
    9153:	e8 c8 b6 ff ff       	call   4820 <_Unwind_Resume@plt>
    9158:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    915c:	c9                   	leave
    915d:	c3                   	ret

000000000000915e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    915e:	55                   	push   %rbp
    915f:	48 89 e5             	mov    %rsp,%rbp
    9162:	48 83 ec 10          	sub    $0x10,%rsp
    9166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    916a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    916e:	48 89 c7             	mov    %rax,%rdi
    9171:	e8 7c 0f 00 00       	call   a0f2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9176:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    917d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9181:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9185:	48 8b 00             	mov    (%rax),%rax
    9188:	48 89 ce             	mov    %rcx,%rsi
    918b:	48 89 c7             	mov    %rax,%rdi
    918e:	e8 6d 0f 00 00       	call   a100 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    9193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9197:	48 89 c7             	mov    %rax,%rdi
    919a:	e8 27 00 00 00       	call   91c6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    919f:	90                   	nop
    91a0:	c9                   	leave
    91a1:	c3                   	ret

00000000000091a2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    91a2:	55                   	push   %rbp
    91a3:	48 89 e5             	mov    %rsp,%rbp
    91a6:	48 83 ec 10          	sub    $0x10,%rsp
    91aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    91ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91b2:	48 8b 10             	mov    (%rax),%rdx
    91b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91b9:	48 89 d6             	mov    %rdx,%rsi
    91bc:	48 89 c7             	mov    %rax,%rdi
    91bf:	e8 66 0f 00 00       	call   a12a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    91c4:	c9                   	leave
    91c5:	c3                   	ret

00000000000091c6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    91c6:	55                   	push   %rbp
    91c7:	48 89 e5             	mov    %rsp,%rbp
    91ca:	48 83 ec 10          	sub    $0x10,%rsp
    91ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    91d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91d6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    91da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91de:	48 8b 00             	mov    (%rax),%rax
    91e1:	48 29 c2             	sub    %rax,%rdx
    91e4:	48 c1 fa 03          	sar    $0x3,%rdx
    91e8:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    91ef:	aa aa aa 
    91f2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    91f6:	48 89 c2             	mov    %rax,%rdx
    91f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91fd:	48 8b 08             	mov    (%rax),%rcx
    9200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9204:	48 89 ce             	mov    %rcx,%rsi
    9207:	48 89 c7             	mov    %rax,%rdi
    920a:	e8 53 0f 00 00       	call   a162 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    920f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9213:	48 89 c7             	mov    %rax,%rdi
    9216:	e8 ad f8 ff ff       	call   8ac8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    921b:	90                   	nop
    921c:	c9                   	leave
    921d:	c3                   	ret

000000000000921e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    921e:	55                   	push   %rbp
    921f:	48 89 e5             	mov    %rsp,%rbp
    9222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    922a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    922e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9232:	48 8b 00             	mov    (%rax),%rax
    9235:	48 29 c2             	sub    %rax,%rdx
    9238:	48 c1 fa 03          	sar    $0x3,%rdx
    923c:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    9243:	aa aa aa 
    9246:	48 0f af c2          	imul   %rdx,%rax
    924a:	5d                   	pop    %rbp
    924b:	c3                   	ret

000000000000924c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    924c:	55                   	push   %rbp
    924d:	48 89 e5             	mov    %rsp,%rbp
    9250:	48 83 ec 10          	sub    $0x10,%rsp
    9254:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    925c:	48 89 c7             	mov    %rax,%rdi
    925f:	e8 34 0f 00 00       	call   a198 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    9264:	90                   	nop
    9265:	c9                   	leave
    9266:	c3                   	ret
    9267:	90                   	nop

0000000000009268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9268:	55                   	push   %rbp
    9269:	48 89 e5             	mov    %rsp,%rbp
    926c:	48 83 ec 10          	sub    $0x10,%rsp
    9270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9278:	48 89 c7             	mov    %rax,%rdi
    927b:	e8 24 0f 00 00       	call   a1a4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9280:	90                   	nop
    9281:	c9                   	leave
    9282:	c3                   	ret
    9283:	90                   	nop

0000000000009284 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9284:	55                   	push   %rbp
    9285:	48 89 e5             	mov    %rsp,%rbp
    9288:	53                   	push   %rbx
    9289:	48 83 ec 28          	sub    $0x28,%rsp
    928d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9291:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9295:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9299:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    929d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    92a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    92a5:	48 89 d6             	mov    %rdx,%rsi
    92a8:	48 89 c7             	mov    %rax,%rdi
    92ab:	e8 ff 0e 00 00       	call   a1af <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    92b0:	48 89 c1             	mov    %rax,%rcx
    92b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    92b7:	48 89 c2             	mov    %rax,%rdx
    92ba:	48 89 ce             	mov    %rcx,%rsi
    92bd:	48 89 df             	mov    %rbx,%rdi
    92c0:	e8 4b 0f 00 00       	call   a210 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    92c5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    92c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92cd:	48 89 d6             	mov    %rdx,%rsi
    92d0:	48 89 c7             	mov    %rax,%rdi
    92d3:	e8 96 0f 00 00       	call   a26e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    92d8:	eb 1a                	jmp    92f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    92da:	48 89 c3             	mov    %rax,%rbx
    92dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92e1:	48 89 c7             	mov    %rax,%rdi
    92e4:	e8 bb 01 00 00       	call   94a4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    92e9:	48 89 d8             	mov    %rbx,%rax
    92ec:	48 89 c7             	mov    %rax,%rdi
    92ef:	e8 2c b5 ff ff       	call   4820 <_Unwind_Resume@plt>
    92f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    92f8:	c9                   	leave
    92f9:	c3                   	ret

00000000000092fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    92fa:	55                   	push   %rbp
    92fb:	48 89 e5             	mov    %rsp,%rbp
    92fe:	48 83 ec 10          	sub    $0x10,%rsp
    9302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    930a:	48 89 c7             	mov    %rax,%rdi
    930d:	e8 9c 0f 00 00       	call   a2ae <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    9312:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9319:	48 8b 48 08          	mov    0x8(%rax),%rcx
    931d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9321:	48 8b 00             	mov    (%rax),%rax
    9324:	48 89 ce             	mov    %rcx,%rsi
    9327:	48 89 c7             	mov    %rax,%rdi
    932a:	e8 8d 0f 00 00       	call   a2bc <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    932f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9333:	48 89 c7             	mov    %rax,%rdi
    9336:	e8 69 01 00 00       	call   94a4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    933b:	90                   	nop
    933c:	c9                   	leave
    933d:	c3                   	ret

000000000000933e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    933e:	55                   	push   %rbp
    933f:	48 89 e5             	mov    %rsp,%rbp
    9342:	48 83 ec 20          	sub    $0x20,%rsp
    9346:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    934a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    934e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9352:	48 89 d6             	mov    %rdx,%rsi
    9355:	48 89 c7             	mov    %rax,%rdi
    9358:	e8 89 0f 00 00       	call   a2e6 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    935d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9361:	c9                   	leave
    9362:	c3                   	ret
    9363:	90                   	nop

0000000000009364 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9364:	55                   	push   %rbp
    9365:	48 89 e5             	mov    %rsp,%rbp
    9368:	48 83 ec 20          	sub    $0x20,%rsp
    936c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9374:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9378:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    937c:	48 89 d6             	mov    %rdx,%rsi
    937f:	48 89 c7             	mov    %rax,%rdi
    9382:	e8 5f 0f 00 00       	call   a2e6 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    938b:	c9                   	leave
    938c:	c3                   	ret

000000000000938d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    938d:	55                   	push   %rbp
    938e:	48 89 e5             	mov    %rsp,%rbp
    9391:	53                   	push   %rbx
    9392:	48 83 ec 18          	sub    $0x18,%rsp
    9396:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    939a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    939e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93a2:	48 89 c7             	mov    %rax,%rdi
    93a5:	e8 5a 0f 00 00       	call   a304 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    93aa:	48 8b 18             	mov    (%rax),%rbx
    93ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    93b1:	48 89 c7             	mov    %rax,%rdi
    93b4:	e8 4b 0f 00 00       	call   a304 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    93b9:	48 8b 00             	mov    (%rax),%rax
    93bc:	48 39 c3             	cmp    %rax,%rbx
    93bf:	0f 95 c0             	setne  %al
    93c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    93c6:	c9                   	leave
    93c7:	c3                   	ret

00000000000093c8 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    93c8:	55                   	push   %rbp
    93c9:	48 89 e5             	mov    %rsp,%rbp
    93cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    93d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93d4:	48 8b 00             	mov    (%rax),%rax
    93d7:	48 8d 50 18          	lea    0x18(%rax),%rdx
    93db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93df:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    93e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    93e6:	5d                   	pop    %rbp
    93e7:	c3                   	ret

00000000000093e8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    93e8:	55                   	push   %rbp
    93e9:	48 89 e5             	mov    %rsp,%rbp
    93ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    93f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93f4:	48 8b 00             	mov    (%rax),%rax
    93f7:	5d                   	pop    %rbp
    93f8:	c3                   	ret
    93f9:	90                   	nop

00000000000093fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    93fa:	55                   	push   %rbp
    93fb:	48 89 e5             	mov    %rsp,%rbp
    93fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9402:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    9406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    940a:	48 8b 08             	mov    (%rax),%rcx
    940d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9411:	48 89 d0             	mov    %rdx,%rax
    9414:	48 c1 e0 03          	shl    $0x3,%rax
    9418:	48 29 d0             	sub    %rdx,%rax
    941b:	48 c1 e0 02          	shl    $0x2,%rax
    941f:	48 01 c8             	add    %rcx,%rax
      }
    9422:	5d                   	pop    %rbp
    9423:	c3                   	ret

0000000000009424 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    9424:	55                   	push   %rbp
    9425:	48 89 e5             	mov    %rsp,%rbp
    9428:	53                   	push   %rbx
    9429:	48 83 ec 18          	sub    $0x18,%rsp
    942d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9431:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    9435:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9439:	48 89 c7             	mov    %rax,%rdi
    943c:	e8 d1 0e 00 00       	call   a312 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    9441:	84 c0                	test   %al,%al
    9443:	74 36                	je     947b <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    9445:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9449:	48 89 c7             	mov    %rax,%rdi
    944c:	e8 17 0f 00 00       	call   a368 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9451:	48 89 c3             	mov    %rax,%rbx
    9454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9458:	48 89 c7             	mov    %rax,%rdi
    945b:	e8 c4 0e 00 00       	call   a324 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    9460:	48 89 c1             	mov    %rax,%rcx
    9463:	48 8b 03             	mov    (%rbx),%rax
    9466:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    946a:	48 89 01             	mov    %rax,(%rcx)
    946d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    9471:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9475:	48 89 41 10          	mov    %rax,0x10(%rcx)
    9479:	eb 1e                	jmp    9499 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    947b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    947f:	48 89 c7             	mov    %rax,%rdi
    9482:	e8 e1 0e 00 00       	call   a368 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9487:	48 89 c2             	mov    %rax,%rdx
    948a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    948e:	48 89 d6             	mov    %rdx,%rsi
    9491:	48 89 c7             	mov    %rax,%rdi
    9494:	e8 dd 0e 00 00       	call   a376 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    9499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    949d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    94a1:	c9                   	leave
    94a2:	c3                   	ret
    94a3:	90                   	nop

00000000000094a4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    94a4:	55                   	push   %rbp
    94a5:	48 89 e5             	mov    %rsp,%rbp
    94a8:	48 83 ec 10          	sub    $0x10,%rsp
    94ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    94b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    94b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94bc:	48 8b 00             	mov    (%rax),%rax
    94bf:	48 29 c2             	sub    %rax,%rdx
    94c2:	48 c1 fa 02          	sar    $0x2,%rdx
    94c6:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    94cd:	db b6 6d 
    94d0:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    94d4:	48 89 c2             	mov    %rax,%rdx
    94d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94db:	48 8b 08             	mov    (%rax),%rcx
    94de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e2:	48 89 ce             	mov    %rcx,%rsi
    94e5:	48 89 c7             	mov    %rax,%rdi
    94e8:	e8 e3 0e 00 00       	call   a3d0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    94ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f1:	48 89 c7             	mov    %rax,%rdi
    94f4:	e8 eb f5 ff ff       	call   8ae4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    94f9:	90                   	nop
    94fa:	c9                   	leave
    94fb:	c3                   	ret

00000000000094fc <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    94fc:	55                   	push   %rbp
    94fd:	48 89 e5             	mov    %rsp,%rbp
    9500:	48 83 ec 10          	sub    $0x10,%rsp
    9504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    950c:	48 89 c7             	mov    %rax,%rdi
    950f:	e8 f2 0e 00 00       	call   a406 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    9514:	90                   	nop
    9515:	c9                   	leave
    9516:	c3                   	ret
    9517:	90                   	nop

0000000000009518 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9518:	55                   	push   %rbp
    9519:	48 89 e5             	mov    %rsp,%rbp
    951c:	48 83 ec 10          	sub    $0x10,%rsp
    9520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9528:	48 89 c7             	mov    %rax,%rdi
    952b:	e8 e2 0e 00 00       	call   a412 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    9530:	90                   	nop
    9531:	c9                   	leave
    9532:	c3                   	ret
    9533:	90                   	nop

0000000000009534 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9534:	55                   	push   %rbp
    9535:	48 89 e5             	mov    %rsp,%rbp
    9538:	53                   	push   %rbx
    9539:	48 83 ec 28          	sub    $0x28,%rsp
    953d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9541:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9545:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9549:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    954d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9551:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9555:	48 89 d6             	mov    %rdx,%rsi
    9558:	48 89 c7             	mov    %rax,%rdi
    955b:	e8 bd 0e 00 00       	call   a41d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    9560:	48 89 c1             	mov    %rax,%rcx
    9563:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9567:	48 89 c2             	mov    %rax,%rdx
    956a:	48 89 ce             	mov    %rcx,%rsi
    956d:	48 89 df             	mov    %rbx,%rdi
    9570:	e8 09 0f 00 00       	call   a47e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9575:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9579:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    957d:	48 89 d6             	mov    %rdx,%rsi
    9580:	48 89 c7             	mov    %rax,%rdi
    9583:	e8 54 0f 00 00       	call   a4dc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    9588:	eb 1a                	jmp    95a4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    958a:	48 89 c3             	mov    %rax,%rbx
    958d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9591:	48 89 c7             	mov    %rax,%rdi
    9594:	e8 79 00 00 00       	call   9612 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    9599:	48 89 d8             	mov    %rbx,%rax
    959c:	48 89 c7             	mov    %rax,%rdi
    959f:	e8 7c b2 ff ff       	call   4820 <_Unwind_Resume@plt>
    95a4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95a8:	c9                   	leave
    95a9:	c3                   	ret

00000000000095aa <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    95aa:	55                   	push   %rbp
    95ab:	48 89 e5             	mov    %rsp,%rbp
    95ae:	48 83 ec 10          	sub    $0x10,%rsp
    95b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    95b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95ba:	48 89 c7             	mov    %rax,%rdi
    95bd:	e8 5a 0f 00 00       	call   a51c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    95c2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    95c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95c9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    95cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95d1:	48 8b 00             	mov    (%rax),%rax
    95d4:	48 89 ce             	mov    %rcx,%rsi
    95d7:	48 89 c7             	mov    %rax,%rdi
    95da:	e8 4b 0f 00 00       	call   a52a <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    95df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95e3:	48 89 c7             	mov    %rax,%rdi
    95e6:	e8 27 00 00 00       	call   9612 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    95eb:	90                   	nop
    95ec:	c9                   	leave
    95ed:	c3                   	ret

00000000000095ee <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    95ee:	55                   	push   %rbp
    95ef:	48 89 e5             	mov    %rsp,%rbp
    95f2:	48 83 ec 10          	sub    $0x10,%rsp
    95f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    95fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95fe:	48 8b 10             	mov    (%rax),%rdx
    9601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9605:	48 89 d6             	mov    %rdx,%rsi
    9608:	48 89 c7             	mov    %rax,%rdi
    960b:	e8 44 0f 00 00       	call   a554 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    9610:	c9                   	leave
    9611:	c3                   	ret

0000000000009612 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9612:	55                   	push   %rbp
    9613:	48 89 e5             	mov    %rsp,%rbp
    9616:	48 83 ec 10          	sub    $0x10,%rsp
    961a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    961e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9622:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    962a:	48 8b 00             	mov    (%rax),%rax
    962d:	48 29 c2             	sub    %rax,%rdx
    9630:	48 89 d0             	mov    %rdx,%rax
    9633:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9637:	48 89 c2             	mov    %rax,%rdx
    963a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963e:	48 8b 08             	mov    (%rax),%rcx
    9641:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9645:	48 89 ce             	mov    %rcx,%rsi
    9648:	48 89 c7             	mov    %rax,%rdi
    964b:	e8 3c 0f 00 00       	call   a58c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    9650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9654:	48 89 c7             	mov    %rax,%rdi
    9657:	e8 a4 f4 ff ff       	call   8b00 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    965c:	90                   	nop
    965d:	c9                   	leave
    965e:	c3                   	ret
    965f:	90                   	nop

0000000000009660 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9660:	55                   	push   %rbp
    9661:	48 89 e5             	mov    %rsp,%rbp
    9664:	48 83 ec 10          	sub    $0x10,%rsp
    9668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    966c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9670:	48 89 c7             	mov    %rax,%rdi
    9673:	e8 4a 0f 00 00       	call   a5c2 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    9678:	90                   	nop
    9679:	c9                   	leave
    967a:	c3                   	ret
    967b:	90                   	nop

000000000000967c <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    967c:	55                   	push   %rbp
    967d:	48 89 e5             	mov    %rsp,%rbp
    9680:	48 83 ec 10          	sub    $0x10,%rsp
    9684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9688:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    968c:	48 89 c7             	mov    %rax,%rdi
    968f:	e8 3a 0f 00 00       	call   a5ce <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    9694:	90                   	nop
    9695:	c9                   	leave
    9696:	c3                   	ret
    9697:	90                   	nop

0000000000009698 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9698:	55                   	push   %rbp
    9699:	48 89 e5             	mov    %rsp,%rbp
    969c:	53                   	push   %rbx
    969d:	48 83 ec 28          	sub    $0x28,%rsp
    96a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    96a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    96a9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    96ad:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    96b1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    96b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96b9:	48 89 d6             	mov    %rdx,%rsi
    96bc:	48 89 c7             	mov    %rax,%rdi
    96bf:	e8 15 0f 00 00       	call   a5d9 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    96c4:	48 89 c1             	mov    %rax,%rcx
    96c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96cb:	48 89 c2             	mov    %rax,%rdx
    96ce:	48 89 ce             	mov    %rcx,%rsi
    96d1:	48 89 df             	mov    %rbx,%rdi
    96d4:	e8 61 0f 00 00       	call   a63a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    96d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    96dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96e1:	48 89 d6             	mov    %rdx,%rsi
    96e4:	48 89 c7             	mov    %rax,%rdi
    96e7:	e8 ac 0f 00 00       	call   a698 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    96ec:	eb 1a                	jmp    9708 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    96ee:	48 89 c3             	mov    %rax,%rbx
    96f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96f5:	48 89 c7             	mov    %rax,%rdi
    96f8:	e8 79 00 00 00       	call   9776 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    96fd:	48 89 d8             	mov    %rbx,%rax
    9700:	48 89 c7             	mov    %rax,%rdi
    9703:	e8 18 b1 ff ff       	call   4820 <_Unwind_Resume@plt>
    9708:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    970c:	c9                   	leave
    970d:	c3                   	ret

000000000000970e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    970e:	55                   	push   %rbp
    970f:	48 89 e5             	mov    %rsp,%rbp
    9712:	48 83 ec 10          	sub    $0x10,%rsp
    9716:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    971a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    971e:	48 89 c7             	mov    %rax,%rdi
    9721:	e8 b2 0f 00 00       	call   a6d8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9726:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    972d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9735:	48 8b 00             	mov    (%rax),%rax
    9738:	48 89 ce             	mov    %rcx,%rsi
    973b:	48 89 c7             	mov    %rax,%rdi
    973e:	e8 a3 0f 00 00       	call   a6e6 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    9743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9747:	48 89 c7             	mov    %rax,%rdi
    974a:	e8 27 00 00 00       	call   9776 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    974f:	90                   	nop
    9750:	c9                   	leave
    9751:	c3                   	ret

0000000000009752 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9752:	55                   	push   %rbp
    9753:	48 89 e5             	mov    %rsp,%rbp
    9756:	48 83 ec 10          	sub    $0x10,%rsp
    975a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    975e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9762:	48 8b 10             	mov    (%rax),%rdx
    9765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9769:	48 89 d6             	mov    %rdx,%rsi
    976c:	48 89 c7             	mov    %rax,%rdi
    976f:	e8 9c 0f 00 00       	call   a710 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    9774:	c9                   	leave
    9775:	c3                   	ret

0000000000009776 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9776:	55                   	push   %rbp
    9777:	48 89 e5             	mov    %rsp,%rbp
    977a:	48 83 ec 10          	sub    $0x10,%rsp
    977e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9786:	48 8b 50 10          	mov    0x10(%rax),%rdx
    978a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    978e:	48 8b 00             	mov    (%rax),%rax
    9791:	48 29 c2             	sub    %rax,%rdx
    9794:	48 89 d0             	mov    %rdx,%rax
    9797:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    979b:	48 89 c2             	mov    %rax,%rdx
    979e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a2:	48 8b 08             	mov    (%rax),%rcx
    97a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a9:	48 89 ce             	mov    %rcx,%rsi
    97ac:	48 89 c7             	mov    %rax,%rdi
    97af:	e8 94 0f 00 00       	call   a748 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    97b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97b8:	48 89 c7             	mov    %rax,%rdi
    97bb:	e8 5c f3 ff ff       	call   8b1c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    97c0:	90                   	nop
    97c1:	c9                   	leave
    97c2:	c3                   	ret
    97c3:	90                   	nop

00000000000097c4 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    97c4:	55                   	push   %rbp
    97c5:	48 89 e5             	mov    %rsp,%rbp
    97c8:	48 83 ec 10          	sub    $0x10,%rsp
    97cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97d4:	48 89 c7             	mov    %rax,%rdi
    97d7:	e8 a2 0f 00 00       	call   a77e <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    97dc:	90                   	nop
    97dd:	c9                   	leave
    97de:	c3                   	ret
    97df:	90                   	nop

00000000000097e0 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    97e0:	55                   	push   %rbp
    97e1:	48 89 e5             	mov    %rsp,%rbp
    97e4:	48 83 ec 10          	sub    $0x10,%rsp
    97e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97f0:	48 89 c7             	mov    %rax,%rdi
    97f3:	e8 92 0f 00 00       	call   a78a <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    97f8:	90                   	nop
    97f9:	c9                   	leave
    97fa:	c3                   	ret
    97fb:	90                   	nop

00000000000097fc <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    97fc:	55                   	push   %rbp
    97fd:	48 89 e5             	mov    %rsp,%rbp
    9800:	53                   	push   %rbx
    9801:	48 83 ec 28          	sub    $0x28,%rsp
    9805:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9809:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    980d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9811:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9815:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9819:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    981d:	48 89 d6             	mov    %rdx,%rsi
    9820:	48 89 c7             	mov    %rax,%rdi
    9823:	e8 6d 0f 00 00       	call   a795 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    9828:	48 89 c1             	mov    %rax,%rcx
    982b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    982f:	48 89 c2             	mov    %rax,%rdx
    9832:	48 89 ce             	mov    %rcx,%rsi
    9835:	48 89 df             	mov    %rbx,%rdi
    9838:	e8 b9 0f 00 00       	call   a7f6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    983d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9841:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9845:	48 89 d6             	mov    %rdx,%rsi
    9848:	48 89 c7             	mov    %rax,%rdi
    984b:	e8 04 10 00 00       	call   a854 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    9850:	eb 1a                	jmp    986c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    9852:	48 89 c3             	mov    %rax,%rbx
    9855:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9859:	48 89 c7             	mov    %rax,%rdi
    985c:	e8 79 00 00 00       	call   98da <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    9861:	48 89 d8             	mov    %rbx,%rax
    9864:	48 89 c7             	mov    %rax,%rdi
    9867:	e8 b4 af ff ff       	call   4820 <_Unwind_Resume@plt>
    986c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9870:	c9                   	leave
    9871:	c3                   	ret

0000000000009872 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9872:	55                   	push   %rbp
    9873:	48 89 e5             	mov    %rsp,%rbp
    9876:	48 83 ec 10          	sub    $0x10,%rsp
    987a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    987e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9882:	48 89 c7             	mov    %rax,%rdi
    9885:	e8 0a 10 00 00       	call   a894 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    988a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    988d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9891:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9895:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9899:	48 8b 00             	mov    (%rax),%rax
    989c:	48 89 ce             	mov    %rcx,%rsi
    989f:	48 89 c7             	mov    %rax,%rdi
    98a2:	e8 fb 0f 00 00       	call   a8a2 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    98a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ab:	48 89 c7             	mov    %rax,%rdi
    98ae:	e8 27 00 00 00       	call   98da <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    98b3:	90                   	nop
    98b4:	c9                   	leave
    98b5:	c3                   	ret

00000000000098b6 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    98b6:	55                   	push   %rbp
    98b7:	48 89 e5             	mov    %rsp,%rbp
    98ba:	48 83 ec 10          	sub    $0x10,%rsp
    98be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    98c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98c6:	48 8b 10             	mov    (%rax),%rdx
    98c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98cd:	48 89 d6             	mov    %rdx,%rsi
    98d0:	48 89 c7             	mov    %rax,%rdi
    98d3:	e8 f4 0f 00 00       	call   a8cc <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    98d8:	c9                   	leave
    98d9:	c3                   	ret

00000000000098da <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    98da:	55                   	push   %rbp
    98db:	48 89 e5             	mov    %rsp,%rbp
    98de:	48 83 ec 10          	sub    $0x10,%rsp
    98e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    98e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ea:	48 8b 50 10          	mov    0x10(%rax),%rdx
    98ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f2:	48 8b 00             	mov    (%rax),%rax
    98f5:	48 29 c2             	sub    %rax,%rdx
    98f8:	48 89 d0             	mov    %rdx,%rax
    98fb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    98ff:	48 89 c2             	mov    %rax,%rdx
    9902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9906:	48 8b 08             	mov    (%rax),%rcx
    9909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    990d:	48 89 ce             	mov    %rcx,%rsi
    9910:	48 89 c7             	mov    %rax,%rdi
    9913:	e8 ec 0f 00 00       	call   a904 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    9918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    991c:	48 89 c7             	mov    %rax,%rdi
    991f:	e8 14 f2 ff ff       	call   8b38 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    9924:	90                   	nop
    9925:	c9                   	leave
    9926:	c3                   	ret
    9927:	90                   	nop

0000000000009928 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9928:	55                   	push   %rbp
    9929:	48 89 e5             	mov    %rsp,%rbp
    992c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9930:	90                   	nop
    9931:	5d                   	pop    %rbp
    9932:	c3                   	ret
    9933:	90                   	nop

0000000000009934 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9934:	55                   	push   %rbp
    9935:	48 89 e5             	mov    %rsp,%rbp
    9938:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    993c:	90                   	nop
    993d:	5d                   	pop    %rbp
    993e:	c3                   	ret

000000000000993f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    993f:	55                   	push   %rbp
    9940:	48 89 e5             	mov    %rsp,%rbp
    9943:	53                   	push   %rbx
    9944:	48 83 ec 28          	sub    $0x28,%rsp
    9948:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    994c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9950:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9954:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9958:	48 89 d6             	mov    %rdx,%rsi
    995b:	48 89 c7             	mov    %rax,%rdi
    995e:	e8 25 01 00 00       	call   9a88 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9963:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9967:	48 89 c7             	mov    %rax,%rdi
    996a:	e8 ca 0f 00 00       	call   a939 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    996f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9973:	0f 92 c3             	setb   %bl
    9976:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    997a:	48 89 c7             	mov    %rax,%rdi
    997d:	e8 ee f1 ff ff       	call   8b70 <_ZNSaI17VkLayerPropertiesED1Ev>
    9982:	84 db                	test   %bl,%bl
    9984:	74 0f                	je     9995 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9986:	48 8d 05 9b 39 01 00 	lea    0x1399b(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    998d:	48 89 c7             	mov    %rax,%rdi
    9990:	e8 3b a8 ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9995:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9999:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    999d:	c9                   	leave
    999e:	c3                   	ret
    999f:	90                   	nop

00000000000099a0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    99a0:	55                   	push   %rbp
    99a1:	48 89 e5             	mov    %rsp,%rbp
    99a4:	53                   	push   %rbx
    99a5:	48 83 ec 28          	sub    $0x28,%rsp
    99a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    99b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    99b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99bd:	48 89 d6             	mov    %rdx,%rsi
    99c0:	48 89 c7             	mov    %rax,%rdi
    99c3:	e8 b4 0f 00 00       	call   a97c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    99c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    99cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99d0:	48 89 d6             	mov    %rdx,%rsi
    99d3:	48 89 c7             	mov    %rax,%rdi
    99d6:	e8 d3 0f 00 00       	call   a9ae <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    99db:	eb 1a                	jmp    99f7 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    99dd:	48 89 c3             	mov    %rax,%rbx
    99e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99e4:	48 89 c7             	mov    %rax,%rdi
    99e7:	e8 6c f0 ff ff       	call   8a58 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    99ec:	48 89 d8             	mov    %rbx,%rax
    99ef:	48 89 c7             	mov    %rax,%rdi
    99f2:	e8 29 ae ff ff       	call   4820 <_Unwind_Resume@plt>
    99f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99fb:	c9                   	leave
    99fc:	c3                   	ret
    99fd:	90                   	nop

00000000000099fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    99fe:	55                   	push   %rbp
    99ff:	48 89 e5             	mov    %rsp,%rbp
    9a02:	48 83 ec 10          	sub    $0x10,%rsp
    9a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a12:	48 89 c7             	mov    %rax,%rdi
    9a15:	e8 24 00 00 00       	call   9a3e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9a1a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9a1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a21:	48 8b 00             	mov    (%rax),%rax
    9a24:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9a28:	48 89 ce             	mov    %rcx,%rsi
    9a2b:	48 89 c7             	mov    %rax,%rdi
    9a2e:	e8 dc 0f 00 00       	call   aa0f <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9a33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a37:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9a3b:	90                   	nop
    9a3c:	c9                   	leave
    9a3d:	c3                   	ret

0000000000009a3e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9a3e:	55                   	push   %rbp
    9a3f:	48 89 e5             	mov    %rsp,%rbp
    9a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a4a:	5d                   	pop    %rbp
    9a4b:	c3                   	ret

0000000000009a4c <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9a4c:	55                   	push   %rbp
    9a4d:	48 89 e5             	mov    %rsp,%rbp
    9a50:	48 83 ec 20          	sub    $0x20,%rsp
    9a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9a60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a68:	48 89 d6             	mov    %rdx,%rsi
    9a6b:	48 89 c7             	mov    %rax,%rdi
    9a6e:	e8 c5 0f 00 00       	call   aa38 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    9a73:	90                   	nop
    9a74:	c9                   	leave
    9a75:	c3                   	ret

0000000000009a76 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9a76:	55                   	push   %rbp
    9a77:	48 89 e5             	mov    %rsp,%rbp
    9a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9a82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a86:	5d                   	pop    %rbp
    9a87:	c3                   	ret

0000000000009a88 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9a88:	55                   	push   %rbp
    9a89:	48 89 e5             	mov    %rsp,%rbp
    9a8c:	48 83 ec 10          	sub    $0x10,%rsp
    9a90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9a98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa0:	48 89 d6             	mov    %rdx,%rsi
    9aa3:	48 89 c7             	mov    %rax,%rdi
    9aa6:	e8 b3 0f 00 00       	call   aa5e <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    9aab:	90                   	nop
    9aac:	c9                   	leave
    9aad:	c3                   	ret

0000000000009aae <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9aae:	55                   	push   %rbp
    9aaf:	48 89 e5             	mov    %rsp,%rbp
    9ab2:	48 83 ec 20          	sub    $0x20,%rsp
    9ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9aba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9abe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9ac2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9ac7:	74 17                	je     9ae0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9ac9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9acd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ad1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9ad5:	48 89 ce             	mov    %rcx,%rsi
    9ad8:	48 89 c7             	mov    %rax,%rdi
    9adb:	e8 8d 0f 00 00       	call   aa6d <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    9ae0:	90                   	nop
    9ae1:	c9                   	leave
    9ae2:	c3                   	ret
    9ae3:	90                   	nop

0000000000009ae4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9ae4:	55                   	push   %rbp
    9ae5:	48 89 e5             	mov    %rsp,%rbp
    9ae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9aec:	90                   	nop
    9aed:	5d                   	pop    %rbp
    9aee:	c3                   	ret
    9aef:	90                   	nop

0000000000009af0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9af0:	55                   	push   %rbp
    9af1:	48 89 e5             	mov    %rsp,%rbp
    9af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9af8:	90                   	nop
    9af9:	5d                   	pop    %rbp
    9afa:	c3                   	ret

0000000000009afb <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9afb:	55                   	push   %rbp
    9afc:	48 89 e5             	mov    %rsp,%rbp
    9aff:	53                   	push   %rbx
    9b00:	48 83 ec 28          	sub    $0x28,%rsp
    9b04:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9b08:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9b0c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9b10:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b14:	48 89 d6             	mov    %rdx,%rsi
    9b17:	48 89 c7             	mov    %rax,%rdi
    9b1a:	e8 25 01 00 00       	call   9c44 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9b1f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b23:	48 89 c7             	mov    %rax,%rdi
    9b26:	e8 70 0f 00 00       	call   aa9b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    9b2b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9b2f:	0f 92 c3             	setb   %bl
    9b32:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b36:	48 89 c7             	mov    %rax,%rdi
    9b39:	e8 a0 f1 ff ff       	call   8cde <_ZNSaI21VkExtensionPropertiesED1Ev>
    9b3e:	84 db                	test   %bl,%bl
    9b40:	74 0f                	je     9b51 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9b42:	48 8d 05 df 37 01 00 	lea    0x137df(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    9b49:	48 89 c7             	mov    %rax,%rdi
    9b4c:	e8 7f a6 ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9b51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9b55:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b59:	c9                   	leave
    9b5a:	c3                   	ret
    9b5b:	90                   	nop

0000000000009b5c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9b5c:	55                   	push   %rbp
    9b5d:	48 89 e5             	mov    %rsp,%rbp
    9b60:	53                   	push   %rbx
    9b61:	48 83 ec 28          	sub    $0x28,%rsp
    9b65:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b69:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9b6d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9b71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b75:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9b79:	48 89 d6             	mov    %rdx,%rsi
    9b7c:	48 89 c7             	mov    %rax,%rdi
    9b7f:	e8 5a 0f 00 00       	call   aade <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9b84:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b8c:	48 89 d6             	mov    %rdx,%rsi
    9b8f:	48 89 c7             	mov    %rax,%rdi
    9b92:	e8 79 0f 00 00       	call   ab10 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    9b97:	eb 1a                	jmp    9bb3 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    9b99:	48 89 c3             	mov    %rax,%rbx
    9b9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ba0:	48 89 c7             	mov    %rax,%rdi
    9ba3:	e8 cc ee ff ff       	call   8a74 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    9ba8:	48 89 d8             	mov    %rbx,%rax
    9bab:	48 89 c7             	mov    %rax,%rdi
    9bae:	e8 6d ac ff ff       	call   4820 <_Unwind_Resume@plt>
    9bb3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9bb7:	c9                   	leave
    9bb8:	c3                   	ret
    9bb9:	90                   	nop

0000000000009bba <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9bba:	55                   	push   %rbp
    9bbb:	48 89 e5             	mov    %rsp,%rbp
    9bbe:	48 83 ec 10          	sub    $0x10,%rsp
    9bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bce:	48 89 c7             	mov    %rax,%rdi
    9bd1:	e8 24 00 00 00       	call   9bfa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9bd6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bdd:	48 8b 00             	mov    (%rax),%rax
    9be0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9be4:	48 89 ce             	mov    %rcx,%rsi
    9be7:	48 89 c7             	mov    %rax,%rdi
    9bea:	e8 82 0f 00 00       	call   ab71 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9bef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9bf3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9bf7:	90                   	nop
    9bf8:	c9                   	leave
    9bf9:	c3                   	ret

0000000000009bfa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9bfa:	55                   	push   %rbp
    9bfb:	48 89 e5             	mov    %rsp,%rbp
    9bfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c06:	5d                   	pop    %rbp
    9c07:	c3                   	ret

0000000000009c08 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9c08:	55                   	push   %rbp
    9c09:	48 89 e5             	mov    %rsp,%rbp
    9c0c:	48 83 ec 20          	sub    $0x20,%rsp
    9c10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c18:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9c1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c24:	48 89 d6             	mov    %rdx,%rsi
    9c27:	48 89 c7             	mov    %rax,%rdi
    9c2a:	e8 6b 0f 00 00       	call   ab9a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    9c2f:	90                   	nop
    9c30:	c9                   	leave
    9c31:	c3                   	ret

0000000000009c32 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9c32:	55                   	push   %rbp
    9c33:	48 89 e5             	mov    %rsp,%rbp
    9c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9c3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9c42:	5d                   	pop    %rbp
    9c43:	c3                   	ret

0000000000009c44 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9c44:	55                   	push   %rbp
    9c45:	48 89 e5             	mov    %rsp,%rbp
    9c48:	48 83 ec 10          	sub    $0x10,%rsp
    9c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9c54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c5c:	48 89 d6             	mov    %rdx,%rsi
    9c5f:	48 89 c7             	mov    %rax,%rdi
    9c62:	e8 59 0f 00 00       	call   abc0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    9c67:	90                   	nop
    9c68:	c9                   	leave
    9c69:	c3                   	ret

0000000000009c6a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9c6a:	55                   	push   %rbp
    9c6b:	48 89 e5             	mov    %rsp,%rbp
    9c6e:	48 83 ec 20          	sub    $0x20,%rsp
    9c72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c7a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9c7e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9c83:	74 17                	je     9c9c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c89:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c8d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c91:	48 89 ce             	mov    %rcx,%rsi
    9c94:	48 89 c7             	mov    %rax,%rdi
    9c97:	e8 33 0f 00 00       	call   abcf <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    9c9c:	90                   	nop
    9c9d:	c9                   	leave
    9c9e:	c3                   	ret
    9c9f:	90                   	nop

0000000000009ca0 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9ca0:	55                   	push   %rbp
    9ca1:	48 89 e5             	mov    %rsp,%rbp
    9ca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ca8:	90                   	nop
    9ca9:	5d                   	pop    %rbp
    9caa:	c3                   	ret
    9cab:	90                   	nop

0000000000009cac <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9cac:	55                   	push   %rbp
    9cad:	48 89 e5             	mov    %rsp,%rbp
    9cb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cb4:	90                   	nop
    9cb5:	5d                   	pop    %rbp
    9cb6:	c3                   	ret

0000000000009cb7 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9cb7:	55                   	push   %rbp
    9cb8:	48 89 e5             	mov    %rsp,%rbp
    9cbb:	53                   	push   %rbx
    9cbc:	48 83 ec 28          	sub    $0x28,%rsp
    9cc0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9cc4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9cc8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9ccc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9cd0:	48 89 d6             	mov    %rdx,%rsi
    9cd3:	48 89 c7             	mov    %rax,%rdi
    9cd6:	e8 e9 00 00 00       	call   9dc4 <_ZNSaIPKcEC1ERKS1_>
    9cdb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9cdf:	48 89 c7             	mov    %rax,%rdi
    9ce2:	e8 16 0f 00 00       	call   abfd <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    9ce7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9ceb:	0f 92 c3             	setb   %bl
    9cee:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9cf2:	48 89 c7             	mov    %rax,%rdi
    9cf5:	e8 52 f1 ff ff       	call   8e4c <_ZNSaIPKcED1Ev>
    9cfa:	84 db                	test   %bl,%bl
    9cfc:	74 0f                	je     9d0d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9cfe:	48 8d 05 23 36 01 00 	lea    0x13623(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    9d05:	48 89 c7             	mov    %rax,%rdi
    9d08:	e8 c3 a4 ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9d0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9d11:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9d15:	c9                   	leave
    9d16:	c3                   	ret
    9d17:	90                   	nop

0000000000009d18 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9d18:	55                   	push   %rbp
    9d19:	48 89 e5             	mov    %rsp,%rbp
    9d1c:	53                   	push   %rbx
    9d1d:	48 83 ec 28          	sub    $0x28,%rsp
    9d21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9d25:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9d29:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9d2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d31:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9d35:	48 89 d6             	mov    %rdx,%rsi
    9d38:	48 89 c7             	mov    %rax,%rdi
    9d3b:	e8 00 0f 00 00       	call   ac40 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9d40:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9d44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d48:	48 89 d6             	mov    %rdx,%rsi
    9d4b:	48 89 c7             	mov    %rax,%rdi
    9d4e:	e8 1f 0f 00 00       	call   ac72 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    9d53:	eb 1a                	jmp    9d6f <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    9d55:	48 89 c3             	mov    %rax,%rbx
    9d58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d5c:	48 89 c7             	mov    %rax,%rdi
    9d5f:	e8 2c ed ff ff       	call   8a90 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    9d64:	48 89 d8             	mov    %rbx,%rax
    9d67:	48 89 c7             	mov    %rax,%rdi
    9d6a:	e8 b1 aa ff ff       	call   4820 <_Unwind_Resume@plt>
    9d6f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9d73:	c9                   	leave
    9d74:	c3                   	ret
    9d75:	90                   	nop

0000000000009d76 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9d76:	55                   	push   %rbp
    9d77:	48 89 e5             	mov    %rsp,%rbp
    9d7a:	48 83 ec 10          	sub    $0x10,%rsp
    9d7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9d86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d8a:	48 89 c7             	mov    %rax,%rdi
    9d8d:	e8 24 00 00 00       	call   9db6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9d92:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9d95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d99:	48 8b 00             	mov    (%rax),%rax
    9d9c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9da0:	48 89 ce             	mov    %rcx,%rsi
    9da3:	48 89 c7             	mov    %rax,%rdi
    9da6:	e8 1d 0f 00 00       	call   acc8 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9dab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9daf:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9db3:	90                   	nop
    9db4:	c9                   	leave
    9db5:	c3                   	ret

0000000000009db6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9db6:	55                   	push   %rbp
    9db7:	48 89 e5             	mov    %rsp,%rbp
    9dba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc2:	5d                   	pop    %rbp
    9dc3:	c3                   	ret

0000000000009dc4 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9dc4:	55                   	push   %rbp
    9dc5:	48 89 e5             	mov    %rsp,%rbp
    9dc8:	48 83 ec 10          	sub    $0x10,%rsp
    9dcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9dd4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ddc:	48 89 d6             	mov    %rdx,%rsi
    9ddf:	48 89 c7             	mov    %rax,%rdi
    9de2:	e8 0b 0f 00 00       	call   acf2 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    9de7:	90                   	nop
    9de8:	c9                   	leave
    9de9:	c3                   	ret

0000000000009dea <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9dea:	55                   	push   %rbp
    9deb:	48 89 e5             	mov    %rsp,%rbp
    9dee:	48 83 ec 20          	sub    $0x20,%rsp
    9df2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9df6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dfa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9dfe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9e03:	74 17                	je     9e1c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e11:	48 89 ce             	mov    %rcx,%rsi
    9e14:	48 89 c7             	mov    %rax,%rdi
    9e17:	e8 e5 0e 00 00       	call   ad01 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    9e1c:	90                   	nop
    9e1d:	c9                   	leave
    9e1e:	c3                   	ret
    9e1f:	90                   	nop

0000000000009e20 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9e20:	55                   	push   %rbp
    9e21:	48 89 e5             	mov    %rsp,%rbp
    9e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e28:	90                   	nop
    9e29:	5d                   	pop    %rbp
    9e2a:	c3                   	ret
    9e2b:	90                   	nop

0000000000009e2c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9e2c:	55                   	push   %rbp
    9e2d:	48 89 e5             	mov    %rsp,%rbp
    9e30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e34:	90                   	nop
    9e35:	5d                   	pop    %rbp
    9e36:	c3                   	ret

0000000000009e37 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9e37:	55                   	push   %rbp
    9e38:	48 89 e5             	mov    %rsp,%rbp
    9e3b:	53                   	push   %rbx
    9e3c:	48 83 ec 28          	sub    $0x28,%rsp
    9e40:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9e44:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9e48:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9e4c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9e50:	48 89 d6             	mov    %rdx,%rsi
    9e53:	48 89 c7             	mov    %rax,%rdi
    9e56:	e8 25 01 00 00       	call   9f80 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9e5b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9e5f:	48 89 c7             	mov    %rax,%rdi
    9e62:	e8 c8 0e 00 00       	call   ad2f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    9e67:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9e6b:	0f 92 c3             	setb   %bl
    9e6e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9e72:	48 89 c7             	mov    %rax,%rdi
    9e75:	e8 ee f0 ff ff       	call   8f68 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    9e7a:	84 db                	test   %bl,%bl
    9e7c:	74 0f                	je     9e8d <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9e7e:	48 8d 05 a3 34 01 00 	lea    0x134a3(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    9e85:	48 89 c7             	mov    %rax,%rdi
    9e88:	e8 43 a3 ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9e8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9e91:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9e95:	c9                   	leave
    9e96:	c3                   	ret
    9e97:	90                   	nop

0000000000009e98 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9e98:	55                   	push   %rbp
    9e99:	48 89 e5             	mov    %rsp,%rbp
    9e9c:	53                   	push   %rbx
    9e9d:	48 83 ec 28          	sub    $0x28,%rsp
    9ea1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9ea5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ea9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9ead:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9eb1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9eb5:	48 89 d6             	mov    %rdx,%rsi
    9eb8:	48 89 c7             	mov    %rax,%rdi
    9ebb:	e8 b2 0e 00 00       	call   ad72 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9ec0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9ec4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ec8:	48 89 d6             	mov    %rdx,%rsi
    9ecb:	48 89 c7             	mov    %rax,%rdi
    9ece:	e8 d1 0e 00 00       	call   ada4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    9ed3:	eb 1a                	jmp    9eef <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    9ed5:	48 89 c3             	mov    %rax,%rbx
    9ed8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9edc:	48 89 c7             	mov    %rax,%rdi
    9edf:	e8 c8 eb ff ff       	call   8aac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    9ee4:	48 89 d8             	mov    %rbx,%rax
    9ee7:	48 89 c7             	mov    %rax,%rdi
    9eea:	e8 31 a9 ff ff       	call   4820 <_Unwind_Resume@plt>
    9eef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9ef3:	c9                   	leave
    9ef4:	c3                   	ret
    9ef5:	90                   	nop

0000000000009ef6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9ef6:	55                   	push   %rbp
    9ef7:	48 89 e5             	mov    %rsp,%rbp
    9efa:	48 83 ec 10          	sub    $0x10,%rsp
    9efe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9f06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f0a:	48 89 c7             	mov    %rax,%rdi
    9f0d:	e8 24 00 00 00       	call   9f36 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9f12:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9f15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f19:	48 8b 00             	mov    (%rax),%rax
    9f1c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f20:	48 89 ce             	mov    %rcx,%rsi
    9f23:	48 89 c7             	mov    %rax,%rdi
    9f26:	e8 cf 0e 00 00       	call   adfa <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9f2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9f2f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9f33:	90                   	nop
    9f34:	c9                   	leave
    9f35:	c3                   	ret

0000000000009f36 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9f36:	55                   	push   %rbp
    9f37:	48 89 e5             	mov    %rsp,%rbp
    9f3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f42:	5d                   	pop    %rbp
    9f43:	c3                   	ret

0000000000009f44 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9f44:	55                   	push   %rbp
    9f45:	48 89 e5             	mov    %rsp,%rbp
    9f48:	48 83 ec 20          	sub    $0x20,%rsp
    9f4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9f58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f60:	48 89 d6             	mov    %rdx,%rsi
    9f63:	48 89 c7             	mov    %rax,%rdi
    9f66:	e8 b8 0e 00 00       	call   ae23 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    9f6b:	90                   	nop
    9f6c:	c9                   	leave
    9f6d:	c3                   	ret

0000000000009f6e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9f6e:	55                   	push   %rbp
    9f6f:	48 89 e5             	mov    %rsp,%rbp
    9f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9f7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9f7e:	5d                   	pop    %rbp
    9f7f:	c3                   	ret

0000000000009f80 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9f80:	55                   	push   %rbp
    9f81:	48 89 e5             	mov    %rsp,%rbp
    9f84:	48 83 ec 10          	sub    $0x10,%rsp
    9f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9f90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f98:	48 89 d6             	mov    %rdx,%rsi
    9f9b:	48 89 c7             	mov    %rax,%rdi
    9f9e:	e8 a7 0e 00 00       	call   ae4a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    9fa3:	90                   	nop
    9fa4:	c9                   	leave
    9fa5:	c3                   	ret

0000000000009fa6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9fa6:	55                   	push   %rbp
    9fa7:	48 89 e5             	mov    %rsp,%rbp
    9faa:	48 83 ec 20          	sub    $0x20,%rsp
    9fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9fb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9fba:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9fbf:	74 17                	je     9fd8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fc5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9fc9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9fcd:	48 89 ce             	mov    %rcx,%rsi
    9fd0:	48 89 c7             	mov    %rax,%rdi
    9fd3:	e8 81 0e 00 00       	call   ae59 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    9fd8:	90                   	nop
    9fd9:	c9                   	leave
    9fda:	c3                   	ret
    9fdb:	90                   	nop

0000000000009fdc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9fdc:	55                   	push   %rbp
    9fdd:	48 89 e5             	mov    %rsp,%rbp
    9fe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fe4:	90                   	nop
    9fe5:	5d                   	pop    %rbp
    9fe6:	c3                   	ret
    9fe7:	90                   	nop

0000000000009fe8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9fe8:	55                   	push   %rbp
    9fe9:	48 89 e5             	mov    %rsp,%rbp
    9fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ff0:	90                   	nop
    9ff1:	5d                   	pop    %rbp
    9ff2:	c3                   	ret

0000000000009ff3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9ff3:	55                   	push   %rbp
    9ff4:	48 89 e5             	mov    %rsp,%rbp
    9ff7:	53                   	push   %rbx
    9ff8:	48 83 ec 28          	sub    $0x28,%rsp
    9ffc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a000:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a004:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a008:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a00c:	48 89 d6             	mov    %rdx,%rsi
    a00f:	48 89 c7             	mov    %rax,%rdi
    a012:	e8 25 01 00 00       	call   a13c <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    a017:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a01b:	48 89 c7             	mov    %rax,%rdi
    a01e:	e8 64 0e 00 00       	call   ae87 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    a023:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a027:	0f 92 c3             	setb   %bl
    a02a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a02e:	48 89 c7             	mov    %rax,%rdi
    a031:	e8 96 f0 ff ff       	call   90cc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    a036:	84 db                	test   %bl,%bl
    a038:	74 0f                	je     a049 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a03a:	48 8d 05 e7 32 01 00 	lea    0x132e7(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a041:	48 89 c7             	mov    %rax,%rdi
    a044:	e8 87 a1 ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a049:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a04d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a051:	c9                   	leave
    a052:	c3                   	ret
    a053:	90                   	nop

000000000000a054 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a054:	55                   	push   %rbp
    a055:	48 89 e5             	mov    %rsp,%rbp
    a058:	53                   	push   %rbx
    a059:	48 83 ec 28          	sub    $0x28,%rsp
    a05d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a061:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a065:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a069:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a06d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a071:	48 89 d6             	mov    %rdx,%rsi
    a074:	48 89 c7             	mov    %rax,%rdi
    a077:	e8 4e 0e 00 00       	call   aeca <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a07c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a080:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a084:	48 89 d6             	mov    %rdx,%rsi
    a087:	48 89 c7             	mov    %rax,%rdi
    a08a:	e8 6d 0e 00 00       	call   aefc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    a08f:	eb 1a                	jmp    a0ab <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    a091:	48 89 c3             	mov    %rax,%rbx
    a094:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a098:	48 89 c7             	mov    %rax,%rdi
    a09b:	e8 28 ea ff ff       	call   8ac8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    a0a0:	48 89 d8             	mov    %rbx,%rax
    a0a3:	48 89 c7             	mov    %rax,%rdi
    a0a6:	e8 75 a7 ff ff       	call   4820 <_Unwind_Resume@plt>
    a0ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a0af:	c9                   	leave
    a0b0:	c3                   	ret
    a0b1:	90                   	nop

000000000000a0b2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a0b2:	55                   	push   %rbp
    a0b3:	48 89 e5             	mov    %rsp,%rbp
    a0b6:	48 83 ec 10          	sub    $0x10,%rsp
    a0ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a0c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0c6:	48 89 c7             	mov    %rax,%rdi
    a0c9:	e8 24 00 00 00       	call   a0f2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    a0ce:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a0d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0d5:	48 8b 00             	mov    (%rax),%rax
    a0d8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a0dc:	48 89 ce             	mov    %rcx,%rsi
    a0df:	48 89 c7             	mov    %rax,%rdi
    a0e2:	e8 75 0e 00 00       	call   af5c <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a0e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a0eb:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a0ef:	90                   	nop
    a0f0:	c9                   	leave
    a0f1:	c3                   	ret

000000000000a0f2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a0f2:	55                   	push   %rbp
    a0f3:	48 89 e5             	mov    %rsp,%rbp
    a0f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a0fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0fe:	5d                   	pop    %rbp
    a0ff:	c3                   	ret

000000000000a100 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a100:	55                   	push   %rbp
    a101:	48 89 e5             	mov    %rsp,%rbp
    a104:	48 83 ec 20          	sub    $0x20,%rsp
    a108:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a10c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a110:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a114:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a11c:	48 89 d6             	mov    %rdx,%rsi
    a11f:	48 89 c7             	mov    %rax,%rdi
    a122:	e8 5e 0e 00 00       	call   af85 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    a127:	90                   	nop
    a128:	c9                   	leave
    a129:	c3                   	ret

000000000000a12a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a12a:	55                   	push   %rbp
    a12b:	48 89 e5             	mov    %rsp,%rbp
    a12e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a132:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a136:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a13a:	5d                   	pop    %rbp
    a13b:	c3                   	ret

000000000000a13c <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a13c:	55                   	push   %rbp
    a13d:	48 89 e5             	mov    %rsp,%rbp
    a140:	48 83 ec 10          	sub    $0x10,%rsp
    a144:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a148:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a14c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a154:	48 89 d6             	mov    %rdx,%rsi
    a157:	48 89 c7             	mov    %rax,%rdi
    a15a:	e8 4d 0e 00 00       	call   afac <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    a15f:	90                   	nop
    a160:	c9                   	leave
    a161:	c3                   	ret

000000000000a162 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a162:	55                   	push   %rbp
    a163:	48 89 e5             	mov    %rsp,%rbp
    a166:	48 83 ec 20          	sub    $0x20,%rsp
    a16a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a16e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a172:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a176:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a17b:	74 17                	je     a194 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a181:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a185:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a189:	48 89 ce             	mov    %rcx,%rsi
    a18c:	48 89 c7             	mov    %rax,%rdi
    a18f:	e8 27 0e 00 00       	call   afbb <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    a194:	90                   	nop
    a195:	c9                   	leave
    a196:	c3                   	ret
    a197:	90                   	nop

000000000000a198 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a198:	55                   	push   %rbp
    a199:	48 89 e5             	mov    %rsp,%rbp
    a19c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1a0:	90                   	nop
    a1a1:	5d                   	pop    %rbp
    a1a2:	c3                   	ret
    a1a3:	90                   	nop

000000000000a1a4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a1a4:	55                   	push   %rbp
    a1a5:	48 89 e5             	mov    %rsp,%rbp
    a1a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1ac:	90                   	nop
    a1ad:	5d                   	pop    %rbp
    a1ae:	c3                   	ret

000000000000a1af <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a1af:	55                   	push   %rbp
    a1b0:	48 89 e5             	mov    %rsp,%rbp
    a1b3:	53                   	push   %rbx
    a1b4:	48 83 ec 28          	sub    $0x28,%rsp
    a1b8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a1bc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a1c0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a1c4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a1c8:	48 89 d6             	mov    %rdx,%rsi
    a1cb:	48 89 c7             	mov    %rax,%rdi
    a1ce:	e8 d7 01 00 00       	call   a3aa <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a1d3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a1d7:	48 89 c7             	mov    %rax,%rdi
    a1da:	e8 0a 0e 00 00       	call   afe9 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    a1df:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a1e3:	0f 92 c3             	setb   %bl
    a1e6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a1ea:	48 89 c7             	mov    %rax,%rdi
    a1ed:	e8 76 f0 ff ff       	call   9268 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    a1f2:	84 db                	test   %bl,%bl
    a1f4:	74 0f                	je     a205 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    a1f6:	48 8d 05 2b 31 01 00 	lea    0x1312b(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a1fd:	48 89 c7             	mov    %rax,%rdi
    a200:	e8 cb 9f ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a205:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a209:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a20d:	c9                   	leave
    a20e:	c3                   	ret
    a20f:	90                   	nop

000000000000a210 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a210:	55                   	push   %rbp
    a211:	48 89 e5             	mov    %rsp,%rbp
    a214:	53                   	push   %rbx
    a215:	48 83 ec 28          	sub    $0x28,%rsp
    a219:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a21d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a221:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a225:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a229:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a22d:	48 89 d6             	mov    %rdx,%rsi
    a230:	48 89 c7             	mov    %rax,%rdi
    a233:	e8 f4 0d 00 00       	call   b02c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    a238:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a23c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a240:	48 89 d6             	mov    %rdx,%rsi
    a243:	48 89 c7             	mov    %rax,%rdi
    a246:	e8 13 0e 00 00       	call   b05e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    a24b:	eb 1a                	jmp    a267 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    a24d:	48 89 c3             	mov    %rax,%rbx
    a250:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a254:	48 89 c7             	mov    %rax,%rdi
    a257:	e8 88 e8 ff ff       	call   8ae4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    a25c:	48 89 d8             	mov    %rbx,%rax
    a25f:	48 89 c7             	mov    %rax,%rdi
    a262:	e8 b9 a5 ff ff       	call   4820 <_Unwind_Resume@plt>
    a267:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a26b:	c9                   	leave
    a26c:	c3                   	ret
    a26d:	90                   	nop

000000000000a26e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a26e:	55                   	push   %rbp
    a26f:	48 89 e5             	mov    %rsp,%rbp
    a272:	48 83 ec 10          	sub    $0x10,%rsp
    a276:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a27a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a27e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a282:	48 89 c7             	mov    %rax,%rdi
    a285:	e8 24 00 00 00       	call   a2ae <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    a28a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a28d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a291:	48 8b 00             	mov    (%rax),%rax
    a294:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a298:	48 89 ce             	mov    %rcx,%rsi
    a29b:	48 89 c7             	mov    %rax,%rdi
    a29e:	e8 1c 0e 00 00       	call   b0bf <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a2a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a2a7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a2ab:	90                   	nop
    a2ac:	c9                   	leave
    a2ad:	c3                   	ret

000000000000a2ae <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a2ae:	55                   	push   %rbp
    a2af:	48 89 e5             	mov    %rsp,%rbp
    a2b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ba:	5d                   	pop    %rbp
    a2bb:	c3                   	ret

000000000000a2bc <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a2bc:	55                   	push   %rbp
    a2bd:	48 89 e5             	mov    %rsp,%rbp
    a2c0:	48 83 ec 20          	sub    $0x20,%rsp
    a2c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a2d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d8:	48 89 d6             	mov    %rdx,%rsi
    a2db:	48 89 c7             	mov    %rax,%rdi
    a2de:	e8 05 0e 00 00       	call   b0e8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a2e3:	90                   	nop
    a2e4:	c9                   	leave
    a2e5:	c3                   	ret

000000000000a2e6 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    a2e6:	55                   	push   %rbp
    a2e7:	48 89 e5             	mov    %rsp,%rbp
    a2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    a2f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a2f6:	48 8b 10             	mov    (%rax),%rdx
    a2f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2fd:	48 89 10             	mov    %rdx,(%rax)
    a300:	90                   	nop
    a301:	5d                   	pop    %rbp
    a302:	c3                   	ret
    a303:	90                   	nop

000000000000a304 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    a304:	55                   	push   %rbp
    a305:	48 89 e5             	mov    %rsp,%rbp
    a308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    a30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a310:	5d                   	pop    %rbp
    a311:	c3                   	ret

000000000000a312 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    a312:	55                   	push   %rbp
    a313:	48 89 e5             	mov    %rsp,%rbp
    a316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    a31a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a31e:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    a322:	5d                   	pop    %rbp
    a323:	c3                   	ret

000000000000a324 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    a324:	55                   	push   %rbp
    a325:	48 89 e5             	mov    %rsp,%rbp
    a328:	48 83 ec 10          	sub    $0x10,%rsp
    a32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    a330:	e8 ce a9 ff ff       	call   4d03 <_ZSt23__is_constant_evaluatedv>
    a335:	84 c0                	test   %al,%al
    a337:	74 1a                	je     a353 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    a339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33d:	48 89 c7             	mov    %rax,%rdi
    a340:	e8 cd ff ff ff       	call   a312 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    a345:	83 f0 01             	xor    $0x1,%eax
    a348:	84 c0                	test   %al,%al
    a34a:	74 07                	je     a353 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    a34c:	b8 01 00 00 00       	mov    $0x1,%eax
    a351:	eb 05                	jmp    a358 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    a353:	b8 00 00 00 00       	mov    $0x0,%eax
    a358:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    a35a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a35e:	48 89 c7             	mov    %rax,%rdi
    a361:	e8 a8 0d 00 00       	call   b10e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    a366:	c9                   	leave
    a367:	c3                   	ret

000000000000a368 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a368:	55                   	push   %rbp
    a369:	48 89 e5             	mov    %rsp,%rbp
    a36c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a374:	5d                   	pop    %rbp
    a375:	c3                   	ret

000000000000a376 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a376:	55                   	push   %rbp
    a377:	48 89 e5             	mov    %rsp,%rbp
    a37a:	53                   	push   %rbx
    a37b:	48 83 ec 18          	sub    $0x18,%rsp
    a37f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a383:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    a387:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a38b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a38f:	48 89 c7             	mov    %rax,%rdi
    a392:	e8 d1 ff ff ff       	call   a368 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a397:	48 89 c6             	mov    %rax,%rsi
    a39a:	48 89 df             	mov    %rbx,%rdi
    a39d:	e8 7a 0d 00 00       	call   b11c <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    a3a2:	90                   	nop
    a3a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a3a7:	c9                   	leave
    a3a8:	c3                   	ret
    a3a9:	90                   	nop

000000000000a3aa <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a3aa:	55                   	push   %rbp
    a3ab:	48 89 e5             	mov    %rsp,%rbp
    a3ae:	48 83 ec 10          	sub    $0x10,%rsp
    a3b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a3ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3c2:	48 89 d6             	mov    %rdx,%rsi
    a3c5:	48 89 c7             	mov    %rax,%rdi
    a3c8:	e8 95 0d 00 00       	call   b162 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    a3cd:	90                   	nop
    a3ce:	c9                   	leave
    a3cf:	c3                   	ret

000000000000a3d0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    a3d0:	55                   	push   %rbp
    a3d1:	48 89 e5             	mov    %rsp,%rbp
    a3d4:	48 83 ec 20          	sub    $0x20,%rsp
    a3d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a3e4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a3e9:	74 17                	je     a402 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a3eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a3f3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a3f7:	48 89 ce             	mov    %rcx,%rsi
    a3fa:	48 89 c7             	mov    %rax,%rdi
    a3fd:	e8 6f 0d 00 00       	call   b171 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    a402:	90                   	nop
    a403:	c9                   	leave
    a404:	c3                   	ret
    a405:	90                   	nop

000000000000a406 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a406:	55                   	push   %rbp
    a407:	48 89 e5             	mov    %rsp,%rbp
    a40a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a40e:	90                   	nop
    a40f:	5d                   	pop    %rbp
    a410:	c3                   	ret
    a411:	90                   	nop

000000000000a412 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a412:	55                   	push   %rbp
    a413:	48 89 e5             	mov    %rsp,%rbp
    a416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a41a:	90                   	nop
    a41b:	5d                   	pop    %rbp
    a41c:	c3                   	ret

000000000000a41d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a41d:	55                   	push   %rbp
    a41e:	48 89 e5             	mov    %rsp,%rbp
    a421:	53                   	push   %rbx
    a422:	48 83 ec 28          	sub    $0x28,%rsp
    a426:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a42a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a42e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a432:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a436:	48 89 d6             	mov    %rdx,%rsi
    a439:	48 89 c7             	mov    %rax,%rdi
    a43c:	e8 25 01 00 00       	call   a566 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a441:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a445:	48 89 c7             	mov    %rax,%rdi
    a448:	e8 52 0d 00 00       	call   b19f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    a44d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a451:	0f 92 c3             	setb   %bl
    a454:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a458:	48 89 c7             	mov    %rax,%rdi
    a45b:	e8 b8 f0 ff ff       	call   9518 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    a460:	84 db                	test   %bl,%bl
    a462:	74 0f                	je     a473 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a464:	48 8d 05 bd 2e 01 00 	lea    0x12ebd(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a46b:	48 89 c7             	mov    %rax,%rdi
    a46e:	e8 5d 9d ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a473:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a477:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a47b:	c9                   	leave
    a47c:	c3                   	ret
    a47d:	90                   	nop

000000000000a47e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a47e:	55                   	push   %rbp
    a47f:	48 89 e5             	mov    %rsp,%rbp
    a482:	53                   	push   %rbx
    a483:	48 83 ec 28          	sub    $0x28,%rsp
    a487:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a48b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a48f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a493:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a497:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a49b:	48 89 d6             	mov    %rdx,%rsi
    a49e:	48 89 c7             	mov    %rax,%rdi
    a4a1:	e8 3c 0d 00 00       	call   b1e2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a4a6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a4aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4ae:	48 89 d6             	mov    %rdx,%rsi
    a4b1:	48 89 c7             	mov    %rax,%rdi
    a4b4:	e8 5b 0d 00 00       	call   b214 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    a4b9:	eb 1a                	jmp    a4d5 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    a4bb:	48 89 c3             	mov    %rax,%rbx
    a4be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4c2:	48 89 c7             	mov    %rax,%rdi
    a4c5:	e8 36 e6 ff ff       	call   8b00 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    a4ca:	48 89 d8             	mov    %rbx,%rax
    a4cd:	48 89 c7             	mov    %rax,%rdi
    a4d0:	e8 4b a3 ff ff       	call   4820 <_Unwind_Resume@plt>
    a4d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a4d9:	c9                   	leave
    a4da:	c3                   	ret
    a4db:	90                   	nop

000000000000a4dc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a4dc:	55                   	push   %rbp
    a4dd:	48 89 e5             	mov    %rsp,%rbp
    a4e0:	48 83 ec 10          	sub    $0x10,%rsp
    a4e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a4ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f0:	48 89 c7             	mov    %rax,%rdi
    a4f3:	e8 24 00 00 00       	call   a51c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    a4f8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a4fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4ff:	48 8b 00             	mov    (%rax),%rax
    a502:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a506:	48 89 ce             	mov    %rcx,%rsi
    a509:	48 89 c7             	mov    %rax,%rdi
    a50c:	e8 59 0d 00 00       	call   b26a <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a511:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a515:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a519:	90                   	nop
    a51a:	c9                   	leave
    a51b:	c3                   	ret

000000000000a51c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a51c:	55                   	push   %rbp
    a51d:	48 89 e5             	mov    %rsp,%rbp
    a520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a528:	5d                   	pop    %rbp
    a529:	c3                   	ret

000000000000a52a <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a52a:	55                   	push   %rbp
    a52b:	48 89 e5             	mov    %rsp,%rbp
    a52e:	48 83 ec 20          	sub    $0x20,%rsp
    a532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a536:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a53a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a53e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a546:	48 89 d6             	mov    %rdx,%rsi
    a549:	48 89 c7             	mov    %rax,%rdi
    a54c:	e8 42 0d 00 00       	call   b293 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    a551:	90                   	nop
    a552:	c9                   	leave
    a553:	c3                   	ret

000000000000a554 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a554:	55                   	push   %rbp
    a555:	48 89 e5             	mov    %rsp,%rbp
    a558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a55c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a560:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a564:	5d                   	pop    %rbp
    a565:	c3                   	ret

000000000000a566 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a566:	55                   	push   %rbp
    a567:	48 89 e5             	mov    %rsp,%rbp
    a56a:	48 83 ec 10          	sub    $0x10,%rsp
    a56e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a572:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a576:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a57a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a57e:	48 89 d6             	mov    %rdx,%rsi
    a581:	48 89 c7             	mov    %rax,%rdi
    a584:	e8 31 0d 00 00       	call   b2ba <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    a589:	90                   	nop
    a58a:	c9                   	leave
    a58b:	c3                   	ret

000000000000a58c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a58c:	55                   	push   %rbp
    a58d:	48 89 e5             	mov    %rsp,%rbp
    a590:	48 83 ec 20          	sub    $0x20,%rsp
    a594:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a598:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a59c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a5a0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a5a5:	74 17                	je     a5be <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a5a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a5af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a5b3:	48 89 ce             	mov    %rcx,%rsi
    a5b6:	48 89 c7             	mov    %rax,%rdi
    a5b9:	e8 0b 0d 00 00       	call   b2c9 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    a5be:	90                   	nop
    a5bf:	c9                   	leave
    a5c0:	c3                   	ret
    a5c1:	90                   	nop

000000000000a5c2 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a5c2:	55                   	push   %rbp
    a5c3:	48 89 e5             	mov    %rsp,%rbp
    a5c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5ca:	90                   	nop
    a5cb:	5d                   	pop    %rbp
    a5cc:	c3                   	ret
    a5cd:	90                   	nop

000000000000a5ce <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a5ce:	55                   	push   %rbp
    a5cf:	48 89 e5             	mov    %rsp,%rbp
    a5d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5d6:	90                   	nop
    a5d7:	5d                   	pop    %rbp
    a5d8:	c3                   	ret

000000000000a5d9 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a5d9:	55                   	push   %rbp
    a5da:	48 89 e5             	mov    %rsp,%rbp
    a5dd:	53                   	push   %rbx
    a5de:	48 83 ec 28          	sub    $0x28,%rsp
    a5e2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a5e6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a5ea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a5ee:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a5f2:	48 89 d6             	mov    %rdx,%rsi
    a5f5:	48 89 c7             	mov    %rax,%rdi
    a5f8:	e8 25 01 00 00       	call   a722 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a5fd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a601:	48 89 c7             	mov    %rax,%rdi
    a604:	e8 ee 0c 00 00       	call   b2f7 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    a609:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a60d:	0f 92 c3             	setb   %bl
    a610:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a614:	48 89 c7             	mov    %rax,%rdi
    a617:	e8 60 f0 ff ff       	call   967c <_ZNSaI16VkPresentModeKHRED1Ev>
    a61c:	84 db                	test   %bl,%bl
    a61e:	74 0f                	je     a62f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a620:	48 8d 05 01 2d 01 00 	lea    0x12d01(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a627:	48 89 c7             	mov    %rax,%rdi
    a62a:	e8 a1 9b ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a62f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a633:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a637:	c9                   	leave
    a638:	c3                   	ret
    a639:	90                   	nop

000000000000a63a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a63a:	55                   	push   %rbp
    a63b:	48 89 e5             	mov    %rsp,%rbp
    a63e:	53                   	push   %rbx
    a63f:	48 83 ec 28          	sub    $0x28,%rsp
    a643:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a647:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a64b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a64f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a653:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a657:	48 89 d6             	mov    %rdx,%rsi
    a65a:	48 89 c7             	mov    %rax,%rdi
    a65d:	e8 d8 0c 00 00       	call   b33a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a662:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a666:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a66a:	48 89 d6             	mov    %rdx,%rsi
    a66d:	48 89 c7             	mov    %rax,%rdi
    a670:	e8 f7 0c 00 00       	call   b36c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    a675:	eb 1a                	jmp    a691 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    a677:	48 89 c3             	mov    %rax,%rbx
    a67a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a67e:	48 89 c7             	mov    %rax,%rdi
    a681:	e8 96 e4 ff ff       	call   8b1c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    a686:	48 89 d8             	mov    %rbx,%rax
    a689:	48 89 c7             	mov    %rax,%rdi
    a68c:	e8 8f a1 ff ff       	call   4820 <_Unwind_Resume@plt>
    a691:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a695:	c9                   	leave
    a696:	c3                   	ret
    a697:	90                   	nop

000000000000a698 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a698:	55                   	push   %rbp
    a699:	48 89 e5             	mov    %rsp,%rbp
    a69c:	48 83 ec 10          	sub    $0x10,%rsp
    a6a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a6a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ac:	48 89 c7             	mov    %rax,%rdi
    a6af:	e8 24 00 00 00       	call   a6d8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    a6b4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a6b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6bb:	48 8b 00             	mov    (%rax),%rax
    a6be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a6c2:	48 89 ce             	mov    %rcx,%rsi
    a6c5:	48 89 c7             	mov    %rax,%rdi
    a6c8:	e8 f5 0c 00 00       	call   b3c2 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a6cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a6d1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a6d5:	90                   	nop
    a6d6:	c9                   	leave
    a6d7:	c3                   	ret

000000000000a6d8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a6d8:	55                   	push   %rbp
    a6d9:	48 89 e5             	mov    %rsp,%rbp
    a6dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a6e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6e4:	5d                   	pop    %rbp
    a6e5:	c3                   	ret

000000000000a6e6 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a6e6:	55                   	push   %rbp
    a6e7:	48 89 e5             	mov    %rsp,%rbp
    a6ea:	48 83 ec 20          	sub    $0x20,%rsp
    a6ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a6f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a6fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a702:	48 89 d6             	mov    %rdx,%rsi
    a705:	48 89 c7             	mov    %rax,%rdi
    a708:	e8 de 0c 00 00       	call   b3eb <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    a70d:	90                   	nop
    a70e:	c9                   	leave
    a70f:	c3                   	ret

000000000000a710 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a710:	55                   	push   %rbp
    a711:	48 89 e5             	mov    %rsp,%rbp
    a714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a718:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a71c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a720:	5d                   	pop    %rbp
    a721:	c3                   	ret

000000000000a722 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a722:	55                   	push   %rbp
    a723:	48 89 e5             	mov    %rsp,%rbp
    a726:	48 83 ec 10          	sub    $0x10,%rsp
    a72a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a72e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a732:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a73a:	48 89 d6             	mov    %rdx,%rsi
    a73d:	48 89 c7             	mov    %rax,%rdi
    a740:	e8 cd 0c 00 00       	call   b412 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    a745:	90                   	nop
    a746:	c9                   	leave
    a747:	c3                   	ret

000000000000a748 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a748:	55                   	push   %rbp
    a749:	48 89 e5             	mov    %rsp,%rbp
    a74c:	48 83 ec 20          	sub    $0x20,%rsp
    a750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a754:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a758:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a75c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a761:	74 17                	je     a77a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a767:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a76b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a76f:	48 89 ce             	mov    %rcx,%rsi
    a772:	48 89 c7             	mov    %rax,%rdi
    a775:	e8 a7 0c 00 00       	call   b421 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    a77a:	90                   	nop
    a77b:	c9                   	leave
    a77c:	c3                   	ret
    a77d:	90                   	nop

000000000000a77e <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a77e:	55                   	push   %rbp
    a77f:	48 89 e5             	mov    %rsp,%rbp
    a782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a786:	90                   	nop
    a787:	5d                   	pop    %rbp
    a788:	c3                   	ret
    a789:	90                   	nop

000000000000a78a <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a78a:	55                   	push   %rbp
    a78b:	48 89 e5             	mov    %rsp,%rbp
    a78e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a792:	90                   	nop
    a793:	5d                   	pop    %rbp
    a794:	c3                   	ret

000000000000a795 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a795:	55                   	push   %rbp
    a796:	48 89 e5             	mov    %rsp,%rbp
    a799:	53                   	push   %rbx
    a79a:	48 83 ec 28          	sub    $0x28,%rsp
    a79e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a7a2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a7a6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a7aa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a7ae:	48 89 d6             	mov    %rdx,%rsi
    a7b1:	48 89 c7             	mov    %rax,%rdi
    a7b4:	e8 25 01 00 00       	call   a8de <_ZNSaIP9VkImage_TEC1ERKS1_>
    a7b9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a7bd:	48 89 c7             	mov    %rax,%rdi
    a7c0:	e8 8a 0c 00 00       	call   b44f <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    a7c5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a7c9:	0f 92 c3             	setb   %bl
    a7cc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a7d0:	48 89 c7             	mov    %rax,%rdi
    a7d3:	e8 08 f0 ff ff       	call   97e0 <_ZNSaIP9VkImage_TED1Ev>
    a7d8:	84 db                	test   %bl,%bl
    a7da:	74 0f                	je     a7eb <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    a7dc:	48 8d 05 45 2b 01 00 	lea    0x12b45(%rip),%rax        # 1d328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a7e3:	48 89 c7             	mov    %rax,%rdi
    a7e6:	e8 e5 99 ff ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a7eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a7ef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a7f3:	c9                   	leave
    a7f4:	c3                   	ret
    a7f5:	90                   	nop

000000000000a7f6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a7f6:	55                   	push   %rbp
    a7f7:	48 89 e5             	mov    %rsp,%rbp
    a7fa:	53                   	push   %rbx
    a7fb:	48 83 ec 28          	sub    $0x28,%rsp
    a7ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a803:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a807:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a80b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a80f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a813:	48 89 d6             	mov    %rdx,%rsi
    a816:	48 89 c7             	mov    %rax,%rdi
    a819:	e8 74 0c 00 00       	call   b492 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    a81e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a822:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a826:	48 89 d6             	mov    %rdx,%rsi
    a829:	48 89 c7             	mov    %rax,%rdi
    a82c:	e8 93 0c 00 00       	call   b4c4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    a831:	eb 1a                	jmp    a84d <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    a833:	48 89 c3             	mov    %rax,%rbx
    a836:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a83a:	48 89 c7             	mov    %rax,%rdi
    a83d:	e8 f6 e2 ff ff       	call   8b38 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    a842:	48 89 d8             	mov    %rbx,%rax
    a845:	48 89 c7             	mov    %rax,%rdi
    a848:	e8 d3 9f ff ff       	call   4820 <_Unwind_Resume@plt>
    a84d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a851:	c9                   	leave
    a852:	c3                   	ret
    a853:	90                   	nop

000000000000a854 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a854:	55                   	push   %rbp
    a855:	48 89 e5             	mov    %rsp,%rbp
    a858:	48 83 ec 10          	sub    $0x10,%rsp
    a85c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a860:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a868:	48 89 c7             	mov    %rax,%rdi
    a86b:	e8 24 00 00 00       	call   a894 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a870:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a877:	48 8b 00             	mov    (%rax),%rax
    a87a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a87e:	48 89 ce             	mov    %rcx,%rsi
    a881:	48 89 c7             	mov    %rax,%rdi
    a884:	e8 91 0c 00 00       	call   b51a <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a889:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a88d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a891:	90                   	nop
    a892:	c9                   	leave
    a893:	c3                   	ret

000000000000a894 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a894:	55                   	push   %rbp
    a895:	48 89 e5             	mov    %rsp,%rbp
    a898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a89c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a0:	5d                   	pop    %rbp
    a8a1:	c3                   	ret

000000000000a8a2 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a8a2:	55                   	push   %rbp
    a8a3:	48 89 e5             	mov    %rsp,%rbp
    a8a6:	48 83 ec 20          	sub    $0x20,%rsp
    a8aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a8b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a8b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8be:	48 89 d6             	mov    %rdx,%rsi
    a8c1:	48 89 c7             	mov    %rax,%rdi
    a8c4:	e8 7a 0c 00 00       	call   b543 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    a8c9:	90                   	nop
    a8ca:	c9                   	leave
    a8cb:	c3                   	ret

000000000000a8cc <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a8cc:	55                   	push   %rbp
    a8cd:	48 89 e5             	mov    %rsp,%rbp
    a8d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a8d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8dc:	5d                   	pop    %rbp
    a8dd:	c3                   	ret

000000000000a8de <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a8de:	55                   	push   %rbp
    a8df:	48 89 e5             	mov    %rsp,%rbp
    a8e2:	48 83 ec 10          	sub    $0x10,%rsp
    a8e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a8ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f6:	48 89 d6             	mov    %rdx,%rsi
    a8f9:	48 89 c7             	mov    %rax,%rdi
    a8fc:	e8 69 0c 00 00       	call   b56a <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    a901:	90                   	nop
    a902:	c9                   	leave
    a903:	c3                   	ret

000000000000a904 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    a904:	55                   	push   %rbp
    a905:	48 89 e5             	mov    %rsp,%rbp
    a908:	48 83 ec 20          	sub    $0x20,%rsp
    a90c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a910:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a914:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a918:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a91d:	74 17                	je     a936 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a91f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a923:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a927:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a92b:	48 89 ce             	mov    %rcx,%rsi
    a92e:	48 89 c7             	mov    %rax,%rdi
    a931:	e8 43 0c 00 00       	call   b579 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    a936:	90                   	nop
    a937:	c9                   	leave
    a938:	c3                   	ret

000000000000a939 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a939:	55                   	push   %rbp
    a93a:	48 89 e5             	mov    %rsp,%rbp
    a93d:	48 83 ec 20          	sub    $0x20,%rsp
    a941:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a945:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    a94c:	03 3f 00 
    a94f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a953:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a957:	48 89 c7             	mov    %rax,%rdi
    a95a:	e8 48 0c 00 00       	call   b5a7 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    a95f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a963:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a967:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a96b:	48 89 d6             	mov    %rdx,%rsi
    a96e:	48 89 c7             	mov    %rax,%rdi
    a971:	e8 2a ac ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    a976:	48 8b 00             	mov    (%rax),%rax
      }
    a979:	c9                   	leave
    a97a:	c3                   	ret
    a97b:	90                   	nop

000000000000a97c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a97c:	55                   	push   %rbp
    a97d:	48 89 e5             	mov    %rsp,%rbp
    a980:	48 83 ec 10          	sub    $0x10,%rsp
    a984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a988:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a98c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a990:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a994:	48 89 d6             	mov    %rdx,%rsi
    a997:	48 89 c7             	mov    %rax,%rdi
    a99a:	e8 e9 f0 ff ff       	call   9a88 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    a99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a3:	48 89 c7             	mov    %rax,%rdi
    a9a6:	e8 17 0c 00 00       	call   b5c2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a9ab:	90                   	nop
    a9ac:	c9                   	leave
    a9ad:	c3                   	ret

000000000000a9ae <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a9ae:	55                   	push   %rbp
    a9af:	48 89 e5             	mov    %rsp,%rbp
    a9b2:	48 83 ec 10          	sub    $0x10,%rsp
    a9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a9be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9c6:	48 89 d6             	mov    %rdx,%rsi
    a9c9:	48 89 c7             	mov    %rax,%rdi
    a9cc:	e8 1f 0c 00 00       	call   b5f0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    a9d1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a9d5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a9d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9dc:	48 8b 10             	mov    (%rax),%rdx
    a9df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9e3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a9e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9eb:	48 8b 08             	mov    (%rax),%rcx
    a9ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9f2:	48 89 d0             	mov    %rdx,%rax
    a9f5:	48 c1 e0 06          	shl    $0x6,%rax
    a9f9:	48 01 d0             	add    %rdx,%rax
    a9fc:	48 c1 e0 03          	shl    $0x3,%rax
    aa00:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    aa04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa08:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    aa0c:	90                   	nop
    aa0d:	c9                   	leave
    aa0e:	c3                   	ret

000000000000aa0f <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    aa0f:	55                   	push   %rbp
    aa10:	48 89 e5             	mov    %rsp,%rbp
    aa13:	48 83 ec 20          	sub    $0x20,%rsp
    aa17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa1b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa1f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    aa23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa2b:	48 89 d6             	mov    %rdx,%rsi
    aa2e:	48 89 c7             	mov    %rax,%rdi
    aa31:	e8 ed 0b 00 00       	call   b623 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    aa36:	c9                   	leave
    aa37:	c3                   	ret

000000000000aa38 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    aa38:	55                   	push   %rbp
    aa39:	48 89 e5             	mov    %rsp,%rbp
    aa3c:	48 83 ec 10          	sub    $0x10,%rsp
    aa40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    aa48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa50:	48 89 d6             	mov    %rdx,%rsi
    aa53:	48 89 c7             	mov    %rax,%rdi
    aa56:	e8 f1 0b 00 00       	call   b64c <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    aa5b:	90                   	nop
    aa5c:	c9                   	leave
    aa5d:	c3                   	ret

000000000000aa5e <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    aa5e:	55                   	push   %rbp
    aa5f:	48 89 e5             	mov    %rsp,%rbp
    aa62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa6a:	90                   	nop
    aa6b:	5d                   	pop    %rbp
    aa6c:	c3                   	ret

000000000000aa6d <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    aa6d:	55                   	push   %rbp
    aa6e:	48 89 e5             	mov    %rsp,%rbp
    aa71:	48 83 ec 20          	sub    $0x20,%rsp
    aa75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    aa81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aa85:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aa89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa8d:	48 89 ce             	mov    %rcx,%rsi
    aa90:	48 89 c7             	mov    %rax,%rdi
    aa93:	e8 c4 0b 00 00       	call   b65c <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    aa98:	90                   	nop
    aa99:	c9                   	leave
    aa9a:	c3                   	ret

000000000000aa9b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    aa9b:	55                   	push   %rbp
    aa9c:	48 89 e5             	mov    %rsp,%rbp
    aa9f:	48 83 ec 20          	sub    $0x20,%rsp
    aaa3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    aaa7:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    aaae:	07 7e 00 
    aab1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    aab5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aab9:	48 89 c7             	mov    %rax,%rdi
    aabc:	e8 d5 0b 00 00       	call   b696 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    aac1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    aac5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    aac9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    aacd:	48 89 d6             	mov    %rdx,%rsi
    aad0:	48 89 c7             	mov    %rax,%rdi
    aad3:	e8 c8 aa ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    aad8:	48 8b 00             	mov    (%rax),%rax
      }
    aadb:	c9                   	leave
    aadc:	c3                   	ret
    aadd:	90                   	nop

000000000000aade <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    aade:	55                   	push   %rbp
    aadf:	48 89 e5             	mov    %rsp,%rbp
    aae2:	48 83 ec 10          	sub    $0x10,%rsp
    aae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    aaee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aaf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaf6:	48 89 d6             	mov    %rdx,%rsi
    aaf9:	48 89 c7             	mov    %rax,%rdi
    aafc:	e8 43 f1 ff ff       	call   9c44 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    ab01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab05:	48 89 c7             	mov    %rax,%rdi
    ab08:	e8 a3 0b 00 00       	call   b6b0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    ab0d:	90                   	nop
    ab0e:	c9                   	leave
    ab0f:	c3                   	ret

000000000000ab10 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ab10:	55                   	push   %rbp
    ab11:	48 89 e5             	mov    %rsp,%rbp
    ab14:	48 83 ec 10          	sub    $0x10,%rsp
    ab18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ab20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab28:	48 89 d6             	mov    %rdx,%rsi
    ab2b:	48 89 c7             	mov    %rax,%rdi
    ab2e:	e8 ab 0b 00 00       	call   b6de <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    ab33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ab37:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ab3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab3e:	48 8b 10             	mov    (%rax),%rdx
    ab41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab45:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ab49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab4d:	48 8b 08             	mov    (%rax),%rcx
    ab50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab54:	48 89 d0             	mov    %rdx,%rax
    ab57:	48 c1 e0 06          	shl    $0x6,%rax
    ab5b:	48 01 d0             	add    %rdx,%rax
    ab5e:	48 c1 e0 02          	shl    $0x2,%rax
    ab62:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    ab66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab6a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    ab6e:	90                   	nop
    ab6f:	c9                   	leave
    ab70:	c3                   	ret

000000000000ab71 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    ab71:	55                   	push   %rbp
    ab72:	48 89 e5             	mov    %rsp,%rbp
    ab75:	48 83 ec 20          	sub    $0x20,%rsp
    ab79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab81:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    ab85:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab8d:	48 89 d6             	mov    %rdx,%rsi
    ab90:	48 89 c7             	mov    %rax,%rdi
    ab93:	e8 79 0b 00 00       	call   b711 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    ab98:	c9                   	leave
    ab99:	c3                   	ret

000000000000ab9a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    ab9a:	55                   	push   %rbp
    ab9b:	48 89 e5             	mov    %rsp,%rbp
    ab9e:	48 83 ec 10          	sub    $0x10,%rsp
    aba2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aba6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    abaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    abae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abb2:	48 89 d6             	mov    %rdx,%rsi
    abb5:	48 89 c7             	mov    %rax,%rdi
    abb8:	e8 7d 0b 00 00       	call   b73a <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    abbd:	90                   	nop
    abbe:	c9                   	leave
    abbf:	c3                   	ret

000000000000abc0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    abc0:	55                   	push   %rbp
    abc1:	48 89 e5             	mov    %rsp,%rbp
    abc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abcc:	90                   	nop
    abcd:	5d                   	pop    %rbp
    abce:	c3                   	ret

000000000000abcf <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    abcf:	55                   	push   %rbp
    abd0:	48 89 e5             	mov    %rsp,%rbp
    abd3:	48 83 ec 20          	sub    $0x20,%rsp
    abd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abdb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abdf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    abe3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    abe7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    abeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abef:	48 89 ce             	mov    %rcx,%rsi
    abf2:	48 89 c7             	mov    %rax,%rdi
    abf5:	e8 50 0b 00 00       	call   b74a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    abfa:	90                   	nop
    abfb:	c9                   	leave
    abfc:	c3                   	ret

000000000000abfd <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    abfd:	55                   	push   %rbp
    abfe:	48 89 e5             	mov    %rsp,%rbp
    ac01:	48 83 ec 20          	sub    $0x20,%rsp
    ac05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ac09:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ac10:	ff ff 0f 
    ac13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ac17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac1b:	48 89 c7             	mov    %rax,%rdi
    ac1e:	e8 61 0b 00 00       	call   b784 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    ac23:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ac27:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ac2b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ac2f:	48 89 d6             	mov    %rdx,%rsi
    ac32:	48 89 c7             	mov    %rax,%rdi
    ac35:	e8 66 a9 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    ac3a:	48 8b 00             	mov    (%rax),%rax
      }
    ac3d:	c9                   	leave
    ac3e:	c3                   	ret
    ac3f:	90                   	nop

000000000000ac40 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ac40:	55                   	push   %rbp
    ac41:	48 89 e5             	mov    %rsp,%rbp
    ac44:	48 83 ec 10          	sub    $0x10,%rsp
    ac48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ac50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac58:	48 89 d6             	mov    %rdx,%rsi
    ac5b:	48 89 c7             	mov    %rax,%rdi
    ac5e:	e8 61 f1 ff ff       	call   9dc4 <_ZNSaIPKcEC1ERKS1_>
    ac63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac67:	48 89 c7             	mov    %rax,%rdi
    ac6a:	e8 2f 0b 00 00       	call   b79e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    ac6f:	90                   	nop
    ac70:	c9                   	leave
    ac71:	c3                   	ret

000000000000ac72 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ac72:	55                   	push   %rbp
    ac73:	48 89 e5             	mov    %rsp,%rbp
    ac76:	48 83 ec 10          	sub    $0x10,%rsp
    ac7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ac82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac8a:	48 89 d6             	mov    %rdx,%rsi
    ac8d:	48 89 c7             	mov    %rax,%rdi
    ac90:	e8 37 0b 00 00       	call   b7cc <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    ac95:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ac99:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ac9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aca0:	48 8b 10             	mov    (%rax),%rdx
    aca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aca7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    acab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acaf:	48 8b 00             	mov    (%rax),%rax
    acb2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    acb6:	48 c1 e2 03          	shl    $0x3,%rdx
    acba:	48 01 c2             	add    %rax,%rdx
    acbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acc1:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    acc5:	90                   	nop
    acc6:	c9                   	leave
    acc7:	c3                   	ret

000000000000acc8 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    acc8:	55                   	push   %rbp
    acc9:	48 89 e5             	mov    %rsp,%rbp
    accc:	48 83 ec 20          	sub    $0x20,%rsp
    acd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    acdc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ace0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace4:	48 89 d6             	mov    %rdx,%rsi
    ace7:	48 89 c7             	mov    %rax,%rdi
    acea:	e8 10 0b 00 00       	call   b7ff <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    acef:	c9                   	leave
    acf0:	c3                   	ret
    acf1:	90                   	nop

000000000000acf2 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    acf2:	55                   	push   %rbp
    acf3:	48 89 e5             	mov    %rsp,%rbp
    acf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acfe:	90                   	nop
    acff:	5d                   	pop    %rbp
    ad00:	c3                   	ret

000000000000ad01 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    ad01:	55                   	push   %rbp
    ad02:	48 89 e5             	mov    %rsp,%rbp
    ad05:	48 83 ec 20          	sub    $0x20,%rsp
    ad09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad11:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ad15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ad19:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ad1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad21:	48 89 ce             	mov    %rcx,%rsi
    ad24:	48 89 c7             	mov    %rax,%rdi
    ad27:	e8 fc 0a 00 00       	call   b828 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    ad2c:	90                   	nop
    ad2d:	c9                   	leave
    ad2e:	c3                   	ret

000000000000ad2f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ad2f:	55                   	push   %rbp
    ad30:	48 89 e5             	mov    %rsp,%rbp
    ad33:	48 83 ec 20          	sub    $0x20,%rsp
    ad37:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ad3b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ad42:	ff ff 0f 
    ad45:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ad49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad4d:	48 89 c7             	mov    %rax,%rdi
    ad50:	e8 04 0b 00 00       	call   b859 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    ad55:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ad59:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ad5d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ad61:	48 89 d6             	mov    %rdx,%rsi
    ad64:	48 89 c7             	mov    %rax,%rdi
    ad67:	e8 34 a8 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    ad6c:	48 8b 00             	mov    (%rax),%rax
      }
    ad6f:	c9                   	leave
    ad70:	c3                   	ret
    ad71:	90                   	nop

000000000000ad72 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ad72:	55                   	push   %rbp
    ad73:	48 89 e5             	mov    %rsp,%rbp
    ad76:	48 83 ec 10          	sub    $0x10,%rsp
    ad7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ad82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad8a:	48 89 d6             	mov    %rdx,%rsi
    ad8d:	48 89 c7             	mov    %rax,%rdi
    ad90:	e8 eb f1 ff ff       	call   9f80 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    ad95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad99:	48 89 c7             	mov    %rax,%rdi
    ad9c:	e8 d3 0a 00 00       	call   b874 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    ada1:	90                   	nop
    ada2:	c9                   	leave
    ada3:	c3                   	ret

000000000000ada4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ada4:	55                   	push   %rbp
    ada5:	48 89 e5             	mov    %rsp,%rbp
    ada8:	48 83 ec 10          	sub    $0x10,%rsp
    adac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    adb4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    adb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adbc:	48 89 d6             	mov    %rdx,%rsi
    adbf:	48 89 c7             	mov    %rax,%rdi
    adc2:	e8 db 0a 00 00       	call   b8a2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    adc7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    adcb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    adce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add2:	48 8b 10             	mov    (%rax),%rdx
    add5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    addd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ade1:	48 8b 00             	mov    (%rax),%rax
    ade4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ade8:	48 c1 e2 03          	shl    $0x3,%rdx
    adec:	48 01 c2             	add    %rax,%rdx
    adef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    adf7:	90                   	nop
    adf8:	c9                   	leave
    adf9:	c3                   	ret

000000000000adfa <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    adfa:	55                   	push   %rbp
    adfb:	48 89 e5             	mov    %rsp,%rbp
    adfe:	48 83 ec 20          	sub    $0x20,%rsp
    ae02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    ae0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae16:	48 89 d6             	mov    %rdx,%rsi
    ae19:	48 89 c7             	mov    %rax,%rdi
    ae1c:	e8 b4 0a 00 00       	call   b8d5 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    ae21:	c9                   	leave
    ae22:	c3                   	ret

000000000000ae23 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    ae23:	55                   	push   %rbp
    ae24:	48 89 e5             	mov    %rsp,%rbp
    ae27:	48 83 ec 10          	sub    $0x10,%rsp
    ae2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    ae33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3b:	48 89 d6             	mov    %rdx,%rsi
    ae3e:	48 89 c7             	mov    %rax,%rdi
    ae41:	e8 b8 0a 00 00       	call   b8fe <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    ae46:	90                   	nop
    ae47:	c9                   	leave
    ae48:	c3                   	ret
    ae49:	90                   	nop

000000000000ae4a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    ae4a:	55                   	push   %rbp
    ae4b:	48 89 e5             	mov    %rsp,%rbp
    ae4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae56:	90                   	nop
    ae57:	5d                   	pop    %rbp
    ae58:	c3                   	ret

000000000000ae59 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    ae59:	55                   	push   %rbp
    ae5a:	48 89 e5             	mov    %rsp,%rbp
    ae5d:	48 83 ec 20          	sub    $0x20,%rsp
    ae61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae65:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae69:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ae6d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ae71:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ae75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae79:	48 89 ce             	mov    %rcx,%rsi
    ae7c:	48 89 c7             	mov    %rax,%rdi
    ae7f:	e8 8a 0a 00 00       	call   b90e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    ae84:	90                   	nop
    ae85:	c9                   	leave
    ae86:	c3                   	ret

000000000000ae87 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ae87:	55                   	push   %rbp
    ae88:	48 89 e5             	mov    %rsp,%rbp
    ae8b:	48 83 ec 20          	sub    $0x20,%rsp
    ae8f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ae93:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    ae9a:	55 55 05 
    ae9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    aea1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aea5:	48 89 c7             	mov    %rax,%rdi
    aea8:	e8 92 0a 00 00       	call   b93f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    aead:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    aeb1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    aeb5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    aeb9:	48 89 d6             	mov    %rdx,%rsi
    aebc:	48 89 c7             	mov    %rax,%rdi
    aebf:	e8 dc a6 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    aec4:	48 8b 00             	mov    (%rax),%rax
      }
    aec7:	c9                   	leave
    aec8:	c3                   	ret
    aec9:	90                   	nop

000000000000aeca <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    aeca:	55                   	push   %rbp
    aecb:	48 89 e5             	mov    %rsp,%rbp
    aece:	48 83 ec 10          	sub    $0x10,%rsp
    aed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aed6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    aeda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aee2:	48 89 d6             	mov    %rdx,%rsi
    aee5:	48 89 c7             	mov    %rax,%rdi
    aee8:	e8 4f f2 ff ff       	call   a13c <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    aeed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef1:	48 89 c7             	mov    %rax,%rdi
    aef4:	e8 61 0a 00 00       	call   b95a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    aef9:	90                   	nop
    aefa:	c9                   	leave
    aefb:	c3                   	ret

000000000000aefc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    aefc:	55                   	push   %rbp
    aefd:	48 89 e5             	mov    %rsp,%rbp
    af00:	48 83 ec 10          	sub    $0x10,%rsp
    af04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    af0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af14:	48 89 d6             	mov    %rdx,%rsi
    af17:	48 89 c7             	mov    %rax,%rdi
    af1a:	e8 69 0a 00 00       	call   b988 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    af1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    af23:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    af26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af2a:	48 8b 10             	mov    (%rax),%rdx
    af2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af31:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    af35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af39:	48 8b 08             	mov    (%rax),%rcx
    af3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af40:	48 89 d0             	mov    %rdx,%rax
    af43:	48 01 c0             	add    %rax,%rax
    af46:	48 01 d0             	add    %rdx,%rax
    af49:	48 c1 e0 03          	shl    $0x3,%rax
    af4d:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    af51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af55:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    af59:	90                   	nop
    af5a:	c9                   	leave
    af5b:	c3                   	ret

000000000000af5c <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    af5c:	55                   	push   %rbp
    af5d:	48 89 e5             	mov    %rsp,%rbp
    af60:	48 83 ec 20          	sub    $0x20,%rsp
    af64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    af70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af78:	48 89 d6             	mov    %rdx,%rsi
    af7b:	48 89 c7             	mov    %rax,%rdi
    af7e:	e8 38 0a 00 00       	call   b9bb <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    af83:	c9                   	leave
    af84:	c3                   	ret

000000000000af85 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    af85:	55                   	push   %rbp
    af86:	48 89 e5             	mov    %rsp,%rbp
    af89:	48 83 ec 10          	sub    $0x10,%rsp
    af8d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af91:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    af95:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af9d:	48 89 d6             	mov    %rdx,%rsi
    afa0:	48 89 c7             	mov    %rax,%rdi
    afa3:	e8 3c 0a 00 00       	call   b9e4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    afa8:	90                   	nop
    afa9:	c9                   	leave
    afaa:	c3                   	ret
    afab:	90                   	nop

000000000000afac <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    afac:	55                   	push   %rbp
    afad:	48 89 e5             	mov    %rsp,%rbp
    afb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afb8:	90                   	nop
    afb9:	5d                   	pop    %rbp
    afba:	c3                   	ret

000000000000afbb <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    afbb:	55                   	push   %rbp
    afbc:	48 89 e5             	mov    %rsp,%rbp
    afbf:	48 83 ec 20          	sub    $0x20,%rsp
    afc3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afc7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afcb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    afcf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    afd3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    afd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afdb:	48 89 ce             	mov    %rcx,%rsi
    afde:	48 89 c7             	mov    %rax,%rdi
    afe1:	e8 0e 0a 00 00       	call   b9f4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    afe6:	90                   	nop
    afe7:	c9                   	leave
    afe8:	c3                   	ret

000000000000afe9 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    afe9:	55                   	push   %rbp
    afea:	48 89 e5             	mov    %rsp,%rbp
    afed:	48 83 ec 20          	sub    $0x20,%rsp
    aff1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    aff5:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    affc:	49 92 04 
    afff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b003:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b007:	48 89 c7             	mov    %rax,%rdi
    b00a:	e8 1e 0a 00 00       	call   ba2d <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    b00f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b013:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b017:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b01b:	48 89 d6             	mov    %rdx,%rsi
    b01e:	48 89 c7             	mov    %rax,%rdi
    b021:	e8 7a a5 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    b026:	48 8b 00             	mov    (%rax),%rax
      }
    b029:	c9                   	leave
    b02a:	c3                   	ret
    b02b:	90                   	nop

000000000000b02c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b02c:	55                   	push   %rbp
    b02d:	48 89 e5             	mov    %rsp,%rbp
    b030:	48 83 ec 10          	sub    $0x10,%rsp
    b034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b038:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b03c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b044:	48 89 d6             	mov    %rdx,%rsi
    b047:	48 89 c7             	mov    %rax,%rdi
    b04a:	e8 5b f3 ff ff       	call   a3aa <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    b04f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b053:	48 89 c7             	mov    %rax,%rdi
    b056:	e8 ed 09 00 00       	call   ba48 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    b05b:	90                   	nop
    b05c:	c9                   	leave
    b05d:	c3                   	ret

000000000000b05e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b05e:	55                   	push   %rbp
    b05f:	48 89 e5             	mov    %rsp,%rbp
    b062:	48 83 ec 10          	sub    $0x10,%rsp
    b066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b06a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b06e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b076:	48 89 d6             	mov    %rdx,%rsi
    b079:	48 89 c7             	mov    %rax,%rdi
    b07c:	e8 f5 09 00 00       	call   ba76 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    b081:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b085:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b08c:	48 8b 10             	mov    (%rax),%rdx
    b08f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b093:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b09b:	48 8b 08             	mov    (%rax),%rcx
    b09e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0a2:	48 89 d0             	mov    %rdx,%rax
    b0a5:	48 c1 e0 03          	shl    $0x3,%rax
    b0a9:	48 29 d0             	sub    %rdx,%rax
    b0ac:	48 c1 e0 02          	shl    $0x2,%rax
    b0b0:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    b0b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0b8:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b0bc:	90                   	nop
    b0bd:	c9                   	leave
    b0be:	c3                   	ret

000000000000b0bf <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b0bf:	55                   	push   %rbp
    b0c0:	48 89 e5             	mov    %rsp,%rbp
    b0c3:	48 83 ec 20          	sub    $0x20,%rsp
    b0c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b0cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b0d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0db:	48 89 d6             	mov    %rdx,%rsi
    b0de:	48 89 c7             	mov    %rax,%rdi
    b0e1:	e8 c3 09 00 00       	call   baa9 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    b0e6:	c9                   	leave
    b0e7:	c3                   	ret

000000000000b0e8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b0e8:	55                   	push   %rbp
    b0e9:	48 89 e5             	mov    %rsp,%rbp
    b0ec:	48 83 ec 10          	sub    $0x10,%rsp
    b0f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b0f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b100:	48 89 d6             	mov    %rdx,%rsi
    b103:	48 89 c7             	mov    %rax,%rdi
    b106:	e8 c7 09 00 00       	call   bad2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    b10b:	90                   	nop
    b10c:	c9                   	leave
    b10d:	c3                   	ret

000000000000b10e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    b10e:	55                   	push   %rbp
    b10f:	48 89 e5             	mov    %rsp,%rbp
    b112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    b116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b11a:	5d                   	pop    %rbp
    b11b:	c3                   	ret

000000000000b11c <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    b11c:	55                   	push   %rbp
    b11d:	48 89 e5             	mov    %rsp,%rbp
    b120:	53                   	push   %rbx
    b121:	48 83 ec 18          	sub    $0x18,%rsp
    b125:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b129:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    b12d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b131:	48 89 c7             	mov    %rax,%rdi
    b134:	e8 2f f2 ff ff       	call   a368 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    b139:	48 89 c3             	mov    %rax,%rbx
    b13c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b140:	48 89 c7             	mov    %rax,%rdi
    b143:	e8 99 09 00 00       	call   bae1 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b148:	48 89 de             	mov    %rbx,%rsi
    b14b:	48 89 c7             	mov    %rax,%rdi
    b14e:	e8 9c 09 00 00       	call   baef <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    b153:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b157:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    b15b:	90                   	nop
    b15c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b160:	c9                   	leave
    b161:	c3                   	ret

000000000000b162 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    b162:	55                   	push   %rbp
    b163:	48 89 e5             	mov    %rsp,%rbp
    b166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b16a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b16e:	90                   	nop
    b16f:	5d                   	pop    %rbp
    b170:	c3                   	ret

000000000000b171 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b171:	55                   	push   %rbp
    b172:	48 89 e5             	mov    %rsp,%rbp
    b175:	48 83 ec 20          	sub    $0x20,%rsp
    b179:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b17d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b181:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b185:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b189:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b18d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b191:	48 89 ce             	mov    %rcx,%rsi
    b194:	48 89 c7             	mov    %rax,%rdi
    b197:	e8 a4 09 00 00       	call   bb40 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    b19c:	90                   	nop
    b19d:	c9                   	leave
    b19e:	c3                   	ret

000000000000b19f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b19f:	55                   	push   %rbp
    b1a0:	48 89 e5             	mov    %rsp,%rbp
    b1a3:	48 83 ec 20          	sub    $0x20,%rsp
    b1a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b1ab:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b1b2:	ff ff 0f 
    b1b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b1b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1bd:	48 89 c7             	mov    %rax,%rdi
    b1c0:	e8 b5 09 00 00       	call   bb7a <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    b1c5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b1c9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b1cd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b1d1:	48 89 d6             	mov    %rdx,%rsi
    b1d4:	48 89 c7             	mov    %rax,%rdi
    b1d7:	e8 c4 a3 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    b1dc:	48 8b 00             	mov    (%rax),%rax
      }
    b1df:	c9                   	leave
    b1e0:	c3                   	ret
    b1e1:	90                   	nop

000000000000b1e2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b1e2:	55                   	push   %rbp
    b1e3:	48 89 e5             	mov    %rsp,%rbp
    b1e6:	48 83 ec 10          	sub    $0x10,%rsp
    b1ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b1f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b1f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1fa:	48 89 d6             	mov    %rdx,%rsi
    b1fd:	48 89 c7             	mov    %rax,%rdi
    b200:	e8 61 f3 ff ff       	call   a566 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    b205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b209:	48 89 c7             	mov    %rax,%rdi
    b20c:	e8 83 09 00 00       	call   bb94 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b211:	90                   	nop
    b212:	c9                   	leave
    b213:	c3                   	ret

000000000000b214 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b214:	55                   	push   %rbp
    b215:	48 89 e5             	mov    %rsp,%rbp
    b218:	48 83 ec 10          	sub    $0x10,%rsp
    b21c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b220:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b224:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b22c:	48 89 d6             	mov    %rdx,%rsi
    b22f:	48 89 c7             	mov    %rax,%rdi
    b232:	e8 8b 09 00 00       	call   bbc2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    b237:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b23b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b23e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b242:	48 8b 10             	mov    (%rax),%rdx
    b245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b249:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b24d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b251:	48 8b 00             	mov    (%rax),%rax
    b254:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b258:	48 c1 e2 03          	shl    $0x3,%rdx
    b25c:	48 01 c2             	add    %rax,%rdx
    b25f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b263:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b267:	90                   	nop
    b268:	c9                   	leave
    b269:	c3                   	ret

000000000000b26a <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b26a:	55                   	push   %rbp
    b26b:	48 89 e5             	mov    %rsp,%rbp
    b26e:	48 83 ec 20          	sub    $0x20,%rsp
    b272:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b276:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b27a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b27e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b286:	48 89 d6             	mov    %rdx,%rsi
    b289:	48 89 c7             	mov    %rax,%rdi
    b28c:	e8 64 09 00 00       	call   bbf5 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    b291:	c9                   	leave
    b292:	c3                   	ret

000000000000b293 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b293:	55                   	push   %rbp
    b294:	48 89 e5             	mov    %rsp,%rbp
    b297:	48 83 ec 10          	sub    $0x10,%rsp
    b29b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b29f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b2a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b2a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ab:	48 89 d6             	mov    %rdx,%rsi
    b2ae:	48 89 c7             	mov    %rax,%rdi
    b2b1:	e8 68 09 00 00       	call   bc1e <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    b2b6:	90                   	nop
    b2b7:	c9                   	leave
    b2b8:	c3                   	ret
    b2b9:	90                   	nop

000000000000b2ba <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    b2ba:	55                   	push   %rbp
    b2bb:	48 89 e5             	mov    %rsp,%rbp
    b2be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2c6:	90                   	nop
    b2c7:	5d                   	pop    %rbp
    b2c8:	c3                   	ret

000000000000b2c9 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b2c9:	55                   	push   %rbp
    b2ca:	48 89 e5             	mov    %rsp,%rbp
    b2cd:	48 83 ec 20          	sub    $0x20,%rsp
    b2d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b2dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b2e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b2e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2e9:	48 89 ce             	mov    %rcx,%rsi
    b2ec:	48 89 c7             	mov    %rax,%rdi
    b2ef:	e8 3a 09 00 00       	call   bc2e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    b2f4:	90                   	nop
    b2f5:	c9                   	leave
    b2f6:	c3                   	ret

000000000000b2f7 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b2f7:	55                   	push   %rbp
    b2f8:	48 89 e5             	mov    %rsp,%rbp
    b2fb:	48 83 ec 20          	sub    $0x20,%rsp
    b2ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b303:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b30a:	ff ff 1f 
    b30d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b311:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b315:	48 89 c7             	mov    %rax,%rdi
    b318:	e8 42 09 00 00       	call   bc5f <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    b31d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b321:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b325:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b329:	48 89 d6             	mov    %rdx,%rsi
    b32c:	48 89 c7             	mov    %rax,%rdi
    b32f:	e8 6c a2 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    b334:	48 8b 00             	mov    (%rax),%rax
      }
    b337:	c9                   	leave
    b338:	c3                   	ret
    b339:	90                   	nop

000000000000b33a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b33a:	55                   	push   %rbp
    b33b:	48 89 e5             	mov    %rsp,%rbp
    b33e:	48 83 ec 10          	sub    $0x10,%rsp
    b342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b346:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b34a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b34e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b352:	48 89 d6             	mov    %rdx,%rsi
    b355:	48 89 c7             	mov    %rax,%rdi
    b358:	e8 c5 f3 ff ff       	call   a722 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    b35d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b361:	48 89 c7             	mov    %rax,%rdi
    b364:	e8 11 09 00 00       	call   bc7a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b369:	90                   	nop
    b36a:	c9                   	leave
    b36b:	c3                   	ret

000000000000b36c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b36c:	55                   	push   %rbp
    b36d:	48 89 e5             	mov    %rsp,%rbp
    b370:	48 83 ec 10          	sub    $0x10,%rsp
    b374:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b378:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b37c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b384:	48 89 d6             	mov    %rdx,%rsi
    b387:	48 89 c7             	mov    %rax,%rdi
    b38a:	e8 19 09 00 00       	call   bca8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    b38f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b393:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b39a:	48 8b 10             	mov    (%rax),%rdx
    b39d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3a1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b3a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3a9:	48 8b 00             	mov    (%rax),%rax
    b3ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3b0:	48 c1 e2 02          	shl    $0x2,%rdx
    b3b4:	48 01 c2             	add    %rax,%rdx
    b3b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b3bf:	90                   	nop
    b3c0:	c9                   	leave
    b3c1:	c3                   	ret

000000000000b3c2 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b3c2:	55                   	push   %rbp
    b3c3:	48 89 e5             	mov    %rsp,%rbp
    b3c6:	48 83 ec 20          	sub    $0x20,%rsp
    b3ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b3d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b3d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3de:	48 89 d6             	mov    %rdx,%rsi
    b3e1:	48 89 c7             	mov    %rax,%rdi
    b3e4:	e8 f2 08 00 00       	call   bcdb <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    b3e9:	c9                   	leave
    b3ea:	c3                   	ret

000000000000b3eb <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b3eb:	55                   	push   %rbp
    b3ec:	48 89 e5             	mov    %rsp,%rbp
    b3ef:	48 83 ec 10          	sub    $0x10,%rsp
    b3f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b3fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b403:	48 89 d6             	mov    %rdx,%rsi
    b406:	48 89 c7             	mov    %rax,%rdi
    b409:	e8 f6 08 00 00       	call   bd04 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    b40e:	90                   	nop
    b40f:	c9                   	leave
    b410:	c3                   	ret
    b411:	90                   	nop

000000000000b412 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    b412:	55                   	push   %rbp
    b413:	48 89 e5             	mov    %rsp,%rbp
    b416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b41a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b41e:	90                   	nop
    b41f:	5d                   	pop    %rbp
    b420:	c3                   	ret

000000000000b421 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b421:	55                   	push   %rbp
    b422:	48 89 e5             	mov    %rsp,%rbp
    b425:	48 83 ec 20          	sub    $0x20,%rsp
    b429:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b42d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b431:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b435:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b439:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b43d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b441:	48 89 ce             	mov    %rcx,%rsi
    b444:	48 89 c7             	mov    %rax,%rdi
    b447:	e8 c8 08 00 00       	call   bd14 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    b44c:	90                   	nop
    b44d:	c9                   	leave
    b44e:	c3                   	ret

000000000000b44f <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b44f:	55                   	push   %rbp
    b450:	48 89 e5             	mov    %rsp,%rbp
    b453:	48 83 ec 20          	sub    $0x20,%rsp
    b457:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b45b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b462:	ff ff 0f 
    b465:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b46d:	48 89 c7             	mov    %rax,%rdi
    b470:	e8 d0 08 00 00       	call   bd45 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    b475:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b479:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b47d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b481:	48 89 d6             	mov    %rdx,%rsi
    b484:	48 89 c7             	mov    %rax,%rdi
    b487:	e8 14 a1 ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    b48c:	48 8b 00             	mov    (%rax),%rax
      }
    b48f:	c9                   	leave
    b490:	c3                   	ret
    b491:	90                   	nop

000000000000b492 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b492:	55                   	push   %rbp
    b493:	48 89 e5             	mov    %rsp,%rbp
    b496:	48 83 ec 10          	sub    $0x10,%rsp
    b49a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b49e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b4a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b4a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4aa:	48 89 d6             	mov    %rdx,%rsi
    b4ad:	48 89 c7             	mov    %rax,%rdi
    b4b0:	e8 29 f4 ff ff       	call   a8de <_ZNSaIP9VkImage_TEC1ERKS1_>
    b4b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4b9:	48 89 c7             	mov    %rax,%rdi
    b4bc:	e8 9f 08 00 00       	call   bd60 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    b4c1:	90                   	nop
    b4c2:	c9                   	leave
    b4c3:	c3                   	ret

000000000000b4c4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b4c4:	55                   	push   %rbp
    b4c5:	48 89 e5             	mov    %rsp,%rbp
    b4c8:	48 83 ec 10          	sub    $0x10,%rsp
    b4cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b4d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b4d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4dc:	48 89 d6             	mov    %rdx,%rsi
    b4df:	48 89 c7             	mov    %rax,%rdi
    b4e2:	e8 a7 08 00 00       	call   bd8e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    b4e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b4eb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b4ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f2:	48 8b 10             	mov    (%rax),%rdx
    b4f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b4fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b501:	48 8b 00             	mov    (%rax),%rax
    b504:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b508:	48 c1 e2 03          	shl    $0x3,%rdx
    b50c:	48 01 c2             	add    %rax,%rdx
    b50f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b513:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b517:	90                   	nop
    b518:	c9                   	leave
    b519:	c3                   	ret

000000000000b51a <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b51a:	55                   	push   %rbp
    b51b:	48 89 e5             	mov    %rsp,%rbp
    b51e:	48 83 ec 20          	sub    $0x20,%rsp
    b522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b52a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b52e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b536:	48 89 d6             	mov    %rdx,%rsi
    b539:	48 89 c7             	mov    %rax,%rdi
    b53c:	e8 80 08 00 00       	call   bdc1 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    b541:	c9                   	leave
    b542:	c3                   	ret

000000000000b543 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b543:	55                   	push   %rbp
    b544:	48 89 e5             	mov    %rsp,%rbp
    b547:	48 83 ec 10          	sub    $0x10,%rsp
    b54b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b54f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b553:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b557:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b55b:	48 89 d6             	mov    %rdx,%rsi
    b55e:	48 89 c7             	mov    %rax,%rdi
    b561:	e8 84 08 00 00       	call   bdea <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    b566:	90                   	nop
    b567:	c9                   	leave
    b568:	c3                   	ret
    b569:	90                   	nop

000000000000b56a <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    b56a:	55                   	push   %rbp
    b56b:	48 89 e5             	mov    %rsp,%rbp
    b56e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b572:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b576:	90                   	nop
    b577:	5d                   	pop    %rbp
    b578:	c3                   	ret

000000000000b579 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b579:	55                   	push   %rbp
    b57a:	48 89 e5             	mov    %rsp,%rbp
    b57d:	48 83 ec 20          	sub    $0x20,%rsp
    b581:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b585:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b589:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b58d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b591:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b599:	48 89 ce             	mov    %rcx,%rsi
    b59c:	48 89 c7             	mov    %rax,%rdi
    b59f:	e8 56 08 00 00       	call   bdfa <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    b5a4:	90                   	nop
    b5a5:	c9                   	leave
    b5a6:	c3                   	ret

000000000000b5a7 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b5a7:	55                   	push   %rbp
    b5a8:	48 89 e5             	mov    %rsp,%rbp
    b5ab:	48 83 ec 10          	sub    $0x10,%rsp
    b5af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b5b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5b7:	48 89 c7             	mov    %rax,%rdi
    b5ba:	e8 6d 08 00 00       	call   be2c <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    b5bf:	c9                   	leave
    b5c0:	c3                   	ret
    b5c1:	90                   	nop

000000000000b5c2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b5c2:	55                   	push   %rbp
    b5c3:	48 89 e5             	mov    %rsp,%rbp
    b5c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b5ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ce:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b5d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5d9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b5e0:	00 
    b5e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5e5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b5ec:	00 
	{ }
    b5ed:	90                   	nop
    b5ee:	5d                   	pop    %rbp
    b5ef:	c3                   	ret

000000000000b5f0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b5f0:	55                   	push   %rbp
    b5f1:	48 89 e5             	mov    %rsp,%rbp
    b5f4:	48 83 ec 10          	sub    $0x10,%rsp
    b5f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b600:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b605:	74 15                	je     b61c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    b607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b60b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b60f:	48 89 d6             	mov    %rdx,%rsi
    b612:	48 89 c7             	mov    %rax,%rdi
    b615:	e8 2c 08 00 00       	call   be46 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    b61a:	eb 05                	jmp    b621 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    b61c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b621:	c9                   	leave
    b622:	c3                   	ret

000000000000b623 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b623:	55                   	push   %rbp
    b624:	48 89 e5             	mov    %rsp,%rbp
    b627:	48 83 ec 20          	sub    $0x20,%rsp
    b62b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b62f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b633:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b637:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b63b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b63f:	48 89 d6             	mov    %rdx,%rsi
    b642:	48 89 c7             	mov    %rax,%rdi
    b645:	e8 26 08 00 00       	call   be70 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    b64a:	c9                   	leave
    b64b:	c3                   	ret

000000000000b64c <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    b64c:	55                   	push   %rbp
    b64d:	48 89 e5             	mov    %rsp,%rbp
    b650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b654:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b658:	90                   	nop
    b659:	5d                   	pop    %rbp
    b65a:	c3                   	ret
    b65b:	90                   	nop

000000000000b65c <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b65c:	55                   	push   %rbp
    b65d:	48 89 e5             	mov    %rsp,%rbp
    b660:	48 83 ec 20          	sub    $0x20,%rsp
    b664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b668:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b66c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b670:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b674:	48 89 d0             	mov    %rdx,%rax
    b677:	48 c1 e0 06          	shl    $0x6,%rax
    b67b:	48 01 d0             	add    %rdx,%rax
    b67e:	48 c1 e0 03          	shl    $0x3,%rax
    b682:	48 89 c2             	mov    %rax,%rdx
    b685:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b689:	48 89 d6             	mov    %rdx,%rsi
    b68c:	48 89 c7             	mov    %rax,%rdi
    b68f:	e8 9c 8d ff ff       	call   4430 <_ZdlPvm@plt>
      }
    b694:	c9                   	leave
    b695:	c3                   	ret

000000000000b696 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b696:	55                   	push   %rbp
    b697:	48 89 e5             	mov    %rsp,%rbp
    b69a:	48 83 ec 10          	sub    $0x10,%rsp
    b69e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b6a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6a6:	48 89 c7             	mov    %rax,%rdi
    b6a9:	e8 22 08 00 00       	call   bed0 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    b6ae:	c9                   	leave
    b6af:	c3                   	ret

000000000000b6b0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b6b0:	55                   	push   %rbp
    b6b1:	48 89 e5             	mov    %rsp,%rbp
    b6b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b6b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6bc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b6c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6c7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b6ce:	00 
    b6cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6d3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b6da:	00 
	{ }
    b6db:	90                   	nop
    b6dc:	5d                   	pop    %rbp
    b6dd:	c3                   	ret

000000000000b6de <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b6de:	55                   	push   %rbp
    b6df:	48 89 e5             	mov    %rsp,%rbp
    b6e2:	48 83 ec 10          	sub    $0x10,%rsp
    b6e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b6ee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b6f3:	74 15                	je     b70a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    b6f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b6fd:	48 89 d6             	mov    %rdx,%rsi
    b700:	48 89 c7             	mov    %rax,%rdi
    b703:	e8 e2 07 00 00       	call   beea <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    b708:	eb 05                	jmp    b70f <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    b70a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b70f:	c9                   	leave
    b710:	c3                   	ret

000000000000b711 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b711:	55                   	push   %rbp
    b712:	48 89 e5             	mov    %rsp,%rbp
    b715:	48 83 ec 20          	sub    $0x20,%rsp
    b719:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b71d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b721:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b725:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b729:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b72d:	48 89 d6             	mov    %rdx,%rsi
    b730:	48 89 c7             	mov    %rax,%rdi
    b733:	e8 dc 07 00 00       	call   bf14 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    b738:	c9                   	leave
    b739:	c3                   	ret

000000000000b73a <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    b73a:	55                   	push   %rbp
    b73b:	48 89 e5             	mov    %rsp,%rbp
    b73e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b742:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b746:	90                   	nop
    b747:	5d                   	pop    %rbp
    b748:	c3                   	ret
    b749:	90                   	nop

000000000000b74a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b74a:	55                   	push   %rbp
    b74b:	48 89 e5             	mov    %rsp,%rbp
    b74e:	48 83 ec 20          	sub    $0x20,%rsp
    b752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b756:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b75a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b75e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b762:	48 89 d0             	mov    %rdx,%rax
    b765:	48 c1 e0 06          	shl    $0x6,%rax
    b769:	48 01 d0             	add    %rdx,%rax
    b76c:	48 c1 e0 02          	shl    $0x2,%rax
    b770:	48 89 c2             	mov    %rax,%rdx
    b773:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b777:	48 89 d6             	mov    %rdx,%rsi
    b77a:	48 89 c7             	mov    %rax,%rdi
    b77d:	e8 ae 8c ff ff       	call   4430 <_ZdlPvm@plt>
      }
    b782:	c9                   	leave
    b783:	c3                   	ret

000000000000b784 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b784:	55                   	push   %rbp
    b785:	48 89 e5             	mov    %rsp,%rbp
    b788:	48 83 ec 10          	sub    $0x10,%rsp
    b78c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b794:	48 89 c7             	mov    %rax,%rdi
    b797:	e8 d8 07 00 00       	call   bf74 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    b79c:	c9                   	leave
    b79d:	c3                   	ret

000000000000b79e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b79e:	55                   	push   %rbp
    b79f:	48 89 e5             	mov    %rsp,%rbp
    b7a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b7a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7aa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b7b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7b5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b7bc:	00 
    b7bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7c1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b7c8:	00 
	{ }
    b7c9:	90                   	nop
    b7ca:	5d                   	pop    %rbp
    b7cb:	c3                   	ret

000000000000b7cc <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b7cc:	55                   	push   %rbp
    b7cd:	48 89 e5             	mov    %rsp,%rbp
    b7d0:	48 83 ec 10          	sub    $0x10,%rsp
    b7d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b7dc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b7e1:	74 15                	je     b7f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    b7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7e7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b7eb:	48 89 d6             	mov    %rdx,%rsi
    b7ee:	48 89 c7             	mov    %rax,%rdi
    b7f1:	e8 98 07 00 00       	call   bf8e <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    b7f6:	eb 05                	jmp    b7fd <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    b7f8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b7fd:	c9                   	leave
    b7fe:	c3                   	ret

000000000000b7ff <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b7ff:	55                   	push   %rbp
    b800:	48 89 e5             	mov    %rsp,%rbp
    b803:	48 83 ec 20          	sub    $0x20,%rsp
    b807:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b80b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b80f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b813:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b817:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b81b:	48 89 d6             	mov    %rdx,%rsi
    b81e:	48 89 c7             	mov    %rax,%rdi
    b821:	e8 92 07 00 00       	call   bfb8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    b826:	c9                   	leave
    b827:	c3                   	ret

000000000000b828 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b828:	55                   	push   %rbp
    b829:	48 89 e5             	mov    %rsp,%rbp
    b82c:	48 83 ec 20          	sub    $0x20,%rsp
    b830:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b834:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b838:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b83c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b840:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b847:	00 
    b848:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b84c:	48 89 d6             	mov    %rdx,%rsi
    b84f:	48 89 c7             	mov    %rax,%rdi
    b852:	e8 d9 8b ff ff       	call   4430 <_ZdlPvm@plt>
      }
    b857:	c9                   	leave
    b858:	c3                   	ret

000000000000b859 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b859:	55                   	push   %rbp
    b85a:	48 89 e5             	mov    %rsp,%rbp
    b85d:	48 83 ec 10          	sub    $0x10,%rsp
    b861:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b869:	48 89 c7             	mov    %rax,%rdi
    b86c:	e8 a5 07 00 00       	call   c016 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    b871:	c9                   	leave
    b872:	c3                   	ret
    b873:	90                   	nop

000000000000b874 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b874:	55                   	push   %rbp
    b875:	48 89 e5             	mov    %rsp,%rbp
    b878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b87c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b880:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b88b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b892:	00 
    b893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b897:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b89e:	00 
	{ }
    b89f:	90                   	nop
    b8a0:	5d                   	pop    %rbp
    b8a1:	c3                   	ret

000000000000b8a2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b8a2:	55                   	push   %rbp
    b8a3:	48 89 e5             	mov    %rsp,%rbp
    b8a6:	48 83 ec 10          	sub    $0x10,%rsp
    b8aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b8b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b8b7:	74 15                	je     b8ce <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    b8b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8bd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b8c1:	48 89 d6             	mov    %rdx,%rsi
    b8c4:	48 89 c7             	mov    %rax,%rdi
    b8c7:	e8 64 07 00 00       	call   c030 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    b8cc:	eb 05                	jmp    b8d3 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    b8ce:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b8d3:	c9                   	leave
    b8d4:	c3                   	ret

000000000000b8d5 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b8d5:	55                   	push   %rbp
    b8d6:	48 89 e5             	mov    %rsp,%rbp
    b8d9:	48 83 ec 20          	sub    $0x20,%rsp
    b8dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b8e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b8e5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b8e9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b8ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8f1:	48 89 d6             	mov    %rdx,%rsi
    b8f4:	48 89 c7             	mov    %rax,%rdi
    b8f7:	e8 5e 07 00 00       	call   c05a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    b8fc:	c9                   	leave
    b8fd:	c3                   	ret

000000000000b8fe <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    b8fe:	55                   	push   %rbp
    b8ff:	48 89 e5             	mov    %rsp,%rbp
    b902:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b906:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b90a:	90                   	nop
    b90b:	5d                   	pop    %rbp
    b90c:	c3                   	ret
    b90d:	90                   	nop

000000000000b90e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b90e:	55                   	push   %rbp
    b90f:	48 89 e5             	mov    %rsp,%rbp
    b912:	48 83 ec 20          	sub    $0x20,%rsp
    b916:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b91a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b91e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b922:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b926:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b92d:	00 
    b92e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b932:	48 89 d6             	mov    %rdx,%rsi
    b935:	48 89 c7             	mov    %rax,%rdi
    b938:	e8 f3 8a ff ff       	call   4430 <_ZdlPvm@plt>
      }
    b93d:	c9                   	leave
    b93e:	c3                   	ret

000000000000b93f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b93f:	55                   	push   %rbp
    b940:	48 89 e5             	mov    %rsp,%rbp
    b943:	48 83 ec 10          	sub    $0x10,%rsp
    b947:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b94b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b94f:	48 89 c7             	mov    %rax,%rdi
    b952:	e8 61 07 00 00       	call   c0b8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    b957:	c9                   	leave
    b958:	c3                   	ret
    b959:	90                   	nop

000000000000b95a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b95a:	55                   	push   %rbp
    b95b:	48 89 e5             	mov    %rsp,%rbp
    b95e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b966:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b96d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b971:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b978:	00 
    b979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b97d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b984:	00 
	{ }
    b985:	90                   	nop
    b986:	5d                   	pop    %rbp
    b987:	c3                   	ret

000000000000b988 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b988:	55                   	push   %rbp
    b989:	48 89 e5             	mov    %rsp,%rbp
    b98c:	48 83 ec 10          	sub    $0x10,%rsp
    b990:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b994:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b998:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b99d:	74 15                	je     b9b4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    b99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b9a7:	48 89 d6             	mov    %rdx,%rsi
    b9aa:	48 89 c7             	mov    %rax,%rdi
    b9ad:	e8 20 07 00 00       	call   c0d2 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    b9b2:	eb 05                	jmp    b9b9 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    b9b4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b9b9:	c9                   	leave
    b9ba:	c3                   	ret

000000000000b9bb <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b9bb:	55                   	push   %rbp
    b9bc:	48 89 e5             	mov    %rsp,%rbp
    b9bf:	48 83 ec 20          	sub    $0x20,%rsp
    b9c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b9c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b9cb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b9cf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b9d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b9d7:	48 89 d6             	mov    %rdx,%rsi
    b9da:	48 89 c7             	mov    %rax,%rdi
    b9dd:	e8 1a 07 00 00       	call   c0fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    b9e2:	c9                   	leave
    b9e3:	c3                   	ret

000000000000b9e4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    b9e4:	55                   	push   %rbp
    b9e5:	48 89 e5             	mov    %rsp,%rbp
    b9e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9f0:	90                   	nop
    b9f1:	5d                   	pop    %rbp
    b9f2:	c3                   	ret
    b9f3:	90                   	nop

000000000000b9f4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b9f4:	55                   	push   %rbp
    b9f5:	48 89 e5             	mov    %rsp,%rbp
    b9f8:	48 83 ec 20          	sub    $0x20,%rsp
    b9fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba04:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ba08:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba0c:	48 89 d0             	mov    %rdx,%rax
    ba0f:	48 01 c0             	add    %rax,%rax
    ba12:	48 01 d0             	add    %rdx,%rax
    ba15:	48 c1 e0 03          	shl    $0x3,%rax
    ba19:	48 89 c2             	mov    %rax,%rdx
    ba1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba20:	48 89 d6             	mov    %rdx,%rsi
    ba23:	48 89 c7             	mov    %rax,%rdi
    ba26:	e8 05 8a ff ff       	call   4430 <_ZdlPvm@plt>
      }
    ba2b:	c9                   	leave
    ba2c:	c3                   	ret

000000000000ba2d <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ba2d:	55                   	push   %rbp
    ba2e:	48 89 e5             	mov    %rsp,%rbp
    ba31:	48 83 ec 10          	sub    $0x10,%rsp
    ba35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ba39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba3d:	48 89 c7             	mov    %rax,%rdi
    ba40:	e8 15 07 00 00       	call   c15a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    ba45:	c9                   	leave
    ba46:	c3                   	ret
    ba47:	90                   	nop

000000000000ba48 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ba48:	55                   	push   %rbp
    ba49:	48 89 e5             	mov    %rsp,%rbp
    ba4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ba50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ba5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba5f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ba66:	00 
    ba67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba6b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ba72:	00 
	{ }
    ba73:	90                   	nop
    ba74:	5d                   	pop    %rbp
    ba75:	c3                   	ret

000000000000ba76 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ba76:	55                   	push   %rbp
    ba77:	48 89 e5             	mov    %rsp,%rbp
    ba7a:	48 83 ec 10          	sub    $0x10,%rsp
    ba7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ba86:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ba8b:	74 15                	je     baa2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    ba8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba95:	48 89 d6             	mov    %rdx,%rsi
    ba98:	48 89 c7             	mov    %rax,%rdi
    ba9b:	e8 d4 06 00 00       	call   c174 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    baa0:	eb 05                	jmp    baa7 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    baa2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    baa7:	c9                   	leave
    baa8:	c3                   	ret

000000000000baa9 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    baa9:	55                   	push   %rbp
    baaa:	48 89 e5             	mov    %rsp,%rbp
    baad:	48 83 ec 20          	sub    $0x20,%rsp
    bab1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bab5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    bab9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    babd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bac1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bac5:	48 89 d6             	mov    %rdx,%rsi
    bac8:	48 89 c7             	mov    %rax,%rdi
    bacb:	e8 ce 06 00 00       	call   c19e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    bad0:	c9                   	leave
    bad1:	c3                   	ret

000000000000bad2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    bad2:	55                   	push   %rbp
    bad3:	48 89 e5             	mov    %rsp,%rbp
    bad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bada:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bade:	90                   	nop
    badf:	5d                   	pop    %rbp
    bae0:	c3                   	ret

000000000000bae1 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bae1:	55                   	push   %rbp
    bae2:	48 89 e5             	mov    %rsp,%rbp
    bae5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baed:	5d                   	pop    %rbp
    baee:	c3                   	ret

000000000000baef <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    baef:	55                   	push   %rbp
    baf0:	48 89 e5             	mov    %rsp,%rbp
    baf3:	53                   	push   %rbx
    baf4:	48 83 ec 18          	sub    $0x18,%rsp
    baf8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bafc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb04:	48 89 c6             	mov    %rax,%rsi
    bb07:	bf 18 00 00 00       	mov    $0x18,%edi
    bb0c:	e8 fe 9f ff ff       	call   5b0f <_ZnwmPv>
    bb11:	48 89 c3             	mov    %rax,%rbx
    bb14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bb18:	48 89 c7             	mov    %rax,%rdi
    bb1b:	e8 48 e8 ff ff       	call   a368 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    bb20:	48 89 c1             	mov    %rax,%rcx
    bb23:	48 8b 01             	mov    (%rcx),%rax
    bb26:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    bb2a:	48 89 03             	mov    %rax,(%rbx)
    bb2d:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    bb31:	48 8b 41 10          	mov    0x10(%rcx),%rax
    bb35:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    bb39:	90                   	nop
    bb3a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bb3e:	c9                   	leave
    bb3f:	c3                   	ret

000000000000bb40 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bb40:	55                   	push   %rbp
    bb41:	48 89 e5             	mov    %rsp,%rbp
    bb44:	48 83 ec 20          	sub    $0x20,%rsp
    bb48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bb54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb58:	48 89 d0             	mov    %rdx,%rax
    bb5b:	48 c1 e0 03          	shl    $0x3,%rax
    bb5f:	48 29 d0             	sub    %rdx,%rax
    bb62:	48 c1 e0 02          	shl    $0x2,%rax
    bb66:	48 89 c2             	mov    %rax,%rdx
    bb69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb6d:	48 89 d6             	mov    %rdx,%rsi
    bb70:	48 89 c7             	mov    %rax,%rdi
    bb73:	e8 b8 88 ff ff       	call   4430 <_ZdlPvm@plt>
      }
    bb78:	c9                   	leave
    bb79:	c3                   	ret

000000000000bb7a <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bb7a:	55                   	push   %rbp
    bb7b:	48 89 e5             	mov    %rsp,%rbp
    bb7e:	48 83 ec 10          	sub    $0x10,%rsp
    bb82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bb86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb8a:	48 89 c7             	mov    %rax,%rdi
    bb8d:	e8 52 06 00 00       	call   c1e4 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    bb92:	c9                   	leave
    bb93:	c3                   	ret

000000000000bb94 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    bb94:	55                   	push   %rbp
    bb95:	48 89 e5             	mov    %rsp,%rbp
    bb98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    bb9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bba0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    bba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbab:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bbb2:	00 
    bbb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbb7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    bbbe:	00 
	{ }
    bbbf:	90                   	nop
    bbc0:	5d                   	pop    %rbp
    bbc1:	c3                   	ret

000000000000bbc2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    bbc2:	55                   	push   %rbp
    bbc3:	48 89 e5             	mov    %rsp,%rbp
    bbc6:	48 83 ec 10          	sub    $0x10,%rsp
    bbca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    bbd2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bbd7:	74 15                	je     bbee <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    bbd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbdd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bbe1:	48 89 d6             	mov    %rdx,%rsi
    bbe4:	48 89 c7             	mov    %rax,%rdi
    bbe7:	e8 12 06 00 00       	call   c1fe <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    bbec:	eb 05                	jmp    bbf3 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    bbee:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    bbf3:	c9                   	leave
    bbf4:	c3                   	ret

000000000000bbf5 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    bbf5:	55                   	push   %rbp
    bbf6:	48 89 e5             	mov    %rsp,%rbp
    bbf9:	48 83 ec 20          	sub    $0x20,%rsp
    bbfd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc01:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    bc05:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    bc09:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bc0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc11:	48 89 d6             	mov    %rdx,%rsi
    bc14:	48 89 c7             	mov    %rax,%rdi
    bc17:	e8 0c 06 00 00       	call   c228 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    bc1c:	c9                   	leave
    bc1d:	c3                   	ret

000000000000bc1e <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    bc1e:	55                   	push   %rbp
    bc1f:	48 89 e5             	mov    %rsp,%rbp
    bc22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc2a:	90                   	nop
    bc2b:	5d                   	pop    %rbp
    bc2c:	c3                   	ret
    bc2d:	90                   	nop

000000000000bc2e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bc2e:	55                   	push   %rbp
    bc2f:	48 89 e5             	mov    %rsp,%rbp
    bc32:	48 83 ec 20          	sub    $0x20,%rsp
    bc36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bc42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc46:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bc4d:	00 
    bc4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc52:	48 89 d6             	mov    %rdx,%rsi
    bc55:	48 89 c7             	mov    %rax,%rdi
    bc58:	e8 d3 87 ff ff       	call   4430 <_ZdlPvm@plt>
      }
    bc5d:	c9                   	leave
    bc5e:	c3                   	ret

000000000000bc5f <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bc5f:	55                   	push   %rbp
    bc60:	48 89 e5             	mov    %rsp,%rbp
    bc63:	48 83 ec 10          	sub    $0x10,%rsp
    bc67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bc6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc6f:	48 89 c7             	mov    %rax,%rdi
    bc72:	e8 0f 06 00 00       	call   c286 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    bc77:	c9                   	leave
    bc78:	c3                   	ret
    bc79:	90                   	nop

000000000000bc7a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    bc7a:	55                   	push   %rbp
    bc7b:	48 89 e5             	mov    %rsp,%rbp
    bc7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    bc82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc86:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    bc8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc91:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bc98:	00 
    bc99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    bca4:	00 
	{ }
    bca5:	90                   	nop
    bca6:	5d                   	pop    %rbp
    bca7:	c3                   	ret

000000000000bca8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    bca8:	55                   	push   %rbp
    bca9:	48 89 e5             	mov    %rsp,%rbp
    bcac:	48 83 ec 10          	sub    $0x10,%rsp
    bcb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    bcb8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bcbd:	74 15                	je     bcd4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    bcbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcc3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bcc7:	48 89 d6             	mov    %rdx,%rsi
    bcca:	48 89 c7             	mov    %rax,%rdi
    bccd:	e8 ce 05 00 00       	call   c2a0 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    bcd2:	eb 05                	jmp    bcd9 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    bcd4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    bcd9:	c9                   	leave
    bcda:	c3                   	ret

000000000000bcdb <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    bcdb:	55                   	push   %rbp
    bcdc:	48 89 e5             	mov    %rsp,%rbp
    bcdf:	48 83 ec 20          	sub    $0x20,%rsp
    bce3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bce7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    bceb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    bcef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bcf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcf7:	48 89 d6             	mov    %rdx,%rsi
    bcfa:	48 89 c7             	mov    %rax,%rdi
    bcfd:	e8 c8 05 00 00       	call   c2ca <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    bd02:	c9                   	leave
    bd03:	c3                   	ret

000000000000bd04 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    bd04:	55                   	push   %rbp
    bd05:	48 89 e5             	mov    %rsp,%rbp
    bd08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd10:	90                   	nop
    bd11:	5d                   	pop    %rbp
    bd12:	c3                   	ret
    bd13:	90                   	nop

000000000000bd14 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bd14:	55                   	push   %rbp
    bd15:	48 89 e5             	mov    %rsp,%rbp
    bd18:	48 83 ec 20          	sub    $0x20,%rsp
    bd1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bd28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd2c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    bd33:	00 
    bd34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd38:	48 89 d6             	mov    %rdx,%rsi
    bd3b:	48 89 c7             	mov    %rax,%rdi
    bd3e:	e8 ed 86 ff ff       	call   4430 <_ZdlPvm@plt>
      }
    bd43:	c9                   	leave
    bd44:	c3                   	ret

000000000000bd45 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bd45:	55                   	push   %rbp
    bd46:	48 89 e5             	mov    %rsp,%rbp
    bd49:	48 83 ec 10          	sub    $0x10,%rsp
    bd4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bd51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd55:	48 89 c7             	mov    %rax,%rdi
    bd58:	e8 cb 05 00 00       	call   c328 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    bd5d:	c9                   	leave
    bd5e:	c3                   	ret
    bd5f:	90                   	nop

000000000000bd60 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    bd60:	55                   	push   %rbp
    bd61:	48 89 e5             	mov    %rsp,%rbp
    bd64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    bd68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd6c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    bd73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd77:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bd7e:	00 
    bd7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd83:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    bd8a:	00 
	{ }
    bd8b:	90                   	nop
    bd8c:	5d                   	pop    %rbp
    bd8d:	c3                   	ret

000000000000bd8e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    bd8e:	55                   	push   %rbp
    bd8f:	48 89 e5             	mov    %rsp,%rbp
    bd92:	48 83 ec 10          	sub    $0x10,%rsp
    bd96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    bd9e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bda3:	74 15                	je     bdba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    bda5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bda9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdad:	48 89 d6             	mov    %rdx,%rsi
    bdb0:	48 89 c7             	mov    %rax,%rdi
    bdb3:	e8 8a 05 00 00       	call   c342 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    bdb8:	eb 05                	jmp    bdbf <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    bdba:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    bdbf:	c9                   	leave
    bdc0:	c3                   	ret

000000000000bdc1 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    bdc1:	55                   	push   %rbp
    bdc2:	48 89 e5             	mov    %rsp,%rbp
    bdc5:	48 83 ec 20          	sub    $0x20,%rsp
    bdc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bdcd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    bdd1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    bdd5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bdd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bddd:	48 89 d6             	mov    %rdx,%rsi
    bde0:	48 89 c7             	mov    %rax,%rdi
    bde3:	e8 84 05 00 00       	call   c36c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    bde8:	c9                   	leave
    bde9:	c3                   	ret

000000000000bdea <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    bdea:	55                   	push   %rbp
    bdeb:	48 89 e5             	mov    %rsp,%rbp
    bdee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdf6:	90                   	nop
    bdf7:	5d                   	pop    %rbp
    bdf8:	c3                   	ret
    bdf9:	90                   	nop

000000000000bdfa <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bdfa:	55                   	push   %rbp
    bdfb:	48 89 e5             	mov    %rsp,%rbp
    bdfe:	48 83 ec 20          	sub    $0x20,%rsp
    be02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    be0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be12:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    be19:	00 
    be1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be1e:	48 89 d6             	mov    %rdx,%rsi
    be21:	48 89 c7             	mov    %rax,%rdi
    be24:	e8 07 86 ff ff       	call   4430 <_ZdlPvm@plt>
      }
    be29:	c9                   	leave
    be2a:	c3                   	ret
    be2b:	90                   	nop

000000000000be2c <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    be2c:	55                   	push   %rbp
    be2d:	48 89 e5             	mov    %rsp,%rbp
    be30:	48 83 ec 10          	sub    $0x10,%rsp
    be34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    be38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be3c:	48 89 c7             	mov    %rax,%rdi
    be3f:	e8 86 05 00 00       	call   c3ca <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    be44:	c9                   	leave
    be45:	c3                   	ret

000000000000be46 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    be46:	55                   	push   %rbp
    be47:	48 89 e5             	mov    %rsp,%rbp
    be4a:	48 83 ec 10          	sub    $0x10,%rsp
    be4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    be56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    be5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be5e:	ba 00 00 00 00       	mov    $0x0,%edx
    be63:	48 89 ce             	mov    %rcx,%rsi
    be66:	48 89 c7             	mov    %rax,%rdi
    be69:	e8 70 05 00 00       	call   c3de <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    be6e:	c9                   	leave
    be6f:	c3                   	ret

000000000000be70 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    be70:	55                   	push   %rbp
    be71:	48 89 e5             	mov    %rsp,%rbp
    be74:	48 83 ec 20          	sub    $0x20,%rsp
    be78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be7c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    be80:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    be85:	74 43                	je     beca <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    be87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be8b:	48 89 c7             	mov    %rax,%rdi
    be8e:	e8 b6 05 00 00       	call   c449 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    be93:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    be97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be9b:	48 89 c7             	mov    %rax,%rdi
    be9e:	e8 b4 05 00 00       	call   c457 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    bea3:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    beaa:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    beab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    beaf:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    beb3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    beb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bebb:	48 89 ce             	mov    %rcx,%rsi
    bebe:	48 89 c7             	mov    %rax,%rdi
    bec1:	e8 eb 05 00 00       	call   c4b1 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    bec6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    beca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    bece:	c9                   	leave
    becf:	c3                   	ret

000000000000bed0 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    bed0:	55                   	push   %rbp
    bed1:	48 89 e5             	mov    %rsp,%rbp
    bed4:	48 83 ec 10          	sub    $0x10,%rsp
    bed8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    bedc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee0:	48 89 c7             	mov    %rax,%rdi
    bee3:	e8 0e 06 00 00       	call   c4f6 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    bee8:	c9                   	leave
    bee9:	c3                   	ret

000000000000beea <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    beea:	55                   	push   %rbp
    beeb:	48 89 e5             	mov    %rsp,%rbp
    beee:	48 83 ec 10          	sub    $0x10,%rsp
    bef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bef6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    befa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    befe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf02:	ba 00 00 00 00       	mov    $0x0,%edx
    bf07:	48 89 ce             	mov    %rcx,%rsi
    bf0a:	48 89 c7             	mov    %rax,%rdi
    bf0d:	e8 f8 05 00 00       	call   c50a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    bf12:	c9                   	leave
    bf13:	c3                   	ret

000000000000bf14 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    bf14:	55                   	push   %rbp
    bf15:	48 89 e5             	mov    %rsp,%rbp
    bf18:	48 83 ec 20          	sub    $0x20,%rsp
    bf1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bf20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    bf24:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    bf29:	74 43                	je     bf6e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    bf2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf2f:	48 89 c7             	mov    %rax,%rdi
    bf32:	e8 3e 06 00 00       	call   c575 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    bf37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    bf3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf3f:	48 89 c7             	mov    %rax,%rdi
    bf42:	e8 3c 06 00 00       	call   c583 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    bf47:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    bf4e:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    bf4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bf53:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    bf57:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bf5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf5f:	48 89 ce             	mov    %rcx,%rsi
    bf62:	48 89 c7             	mov    %rax,%rdi
    bf65:	e8 73 06 00 00       	call   c5dd <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    bf6a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    bf6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    bf72:	c9                   	leave
    bf73:	c3                   	ret

000000000000bf74 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    bf74:	55                   	push   %rbp
    bf75:	48 89 e5             	mov    %rsp,%rbp
    bf78:	48 83 ec 10          	sub    $0x10,%rsp
    bf7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    bf80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf84:	48 89 c7             	mov    %rax,%rdi
    bf87:	e8 96 06 00 00       	call   c622 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    bf8c:	c9                   	leave
    bf8d:	c3                   	ret

000000000000bf8e <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    bf8e:	55                   	push   %rbp
    bf8f:	48 89 e5             	mov    %rsp,%rbp
    bf92:	48 83 ec 10          	sub    $0x10,%rsp
    bf96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    bf9e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bfa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfa6:	ba 00 00 00 00       	mov    $0x0,%edx
    bfab:	48 89 ce             	mov    %rcx,%rsi
    bfae:	48 89 c7             	mov    %rax,%rdi
    bfb1:	e8 80 06 00 00       	call   c636 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    bfb6:	c9                   	leave
    bfb7:	c3                   	ret

000000000000bfb8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    bfb8:	55                   	push   %rbp
    bfb9:	48 89 e5             	mov    %rsp,%rbp
    bfbc:	48 83 ec 20          	sub    $0x20,%rsp
    bfc0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bfc4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    bfc8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    bfcd:	74 40                	je     c00f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    bfcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfd3:	48 89 c7             	mov    %rax,%rdi
    bfd6:	e8 bc 06 00 00       	call   c697 <_ZSt11__addressofIPKcEPT_RS2_>
    bfdb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    bfdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe3:	48 89 c7             	mov    %rax,%rdi
    bfe6:	e8 ba 06 00 00       	call   c6a5 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    bfeb:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    bff0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bff4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    bff8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bffc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c000:	48 89 ce             	mov    %rcx,%rsi
    c003:	48 89 c7             	mov    %rax,%rdi
    c006:	e8 c1 06 00 00       	call   c6cc <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    c00b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c00f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c013:	c9                   	leave
    c014:	c3                   	ret
    c015:	90                   	nop

000000000000c016 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c016:	55                   	push   %rbp
    c017:	48 89 e5             	mov    %rsp,%rbp
    c01a:	48 83 ec 10          	sub    $0x10,%rsp
    c01e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c026:	48 89 c7             	mov    %rax,%rdi
    c029:	e8 e2 06 00 00       	call   c710 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    c02e:	c9                   	leave
    c02f:	c3                   	ret

000000000000c030 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    c030:	55                   	push   %rbp
    c031:	48 89 e5             	mov    %rsp,%rbp
    c034:	48 83 ec 10          	sub    $0x10,%rsp
    c038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c03c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c040:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c048:	ba 00 00 00 00       	mov    $0x0,%edx
    c04d:	48 89 ce             	mov    %rcx,%rsi
    c050:	48 89 c7             	mov    %rax,%rdi
    c053:	e8 cc 06 00 00       	call   c724 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    c058:	c9                   	leave
    c059:	c3                   	ret

000000000000c05a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c05a:	55                   	push   %rbp
    c05b:	48 89 e5             	mov    %rsp,%rbp
    c05e:	48 83 ec 20          	sub    $0x20,%rsp
    c062:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c066:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c06a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c06f:	74 40                	je     c0b1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    c071:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c075:	48 89 c7             	mov    %rax,%rdi
    c078:	e8 08 07 00 00       	call   c785 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    c07d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c085:	48 89 c7             	mov    %rax,%rdi
    c088:	e8 06 07 00 00       	call   c793 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    c08d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c092:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c096:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c09a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c09e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0a2:	48 89 ce             	mov    %rcx,%rsi
    c0a5:	48 89 c7             	mov    %rax,%rdi
    c0a8:	e8 0d 07 00 00       	call   c7ba <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    c0ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c0b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c0b5:	c9                   	leave
    c0b6:	c3                   	ret
    c0b7:	90                   	nop

000000000000c0b8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c0b8:	55                   	push   %rbp
    c0b9:	48 89 e5             	mov    %rsp,%rbp
    c0bc:	48 83 ec 10          	sub    $0x10,%rsp
    c0c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c0c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0c8:	48 89 c7             	mov    %rax,%rdi
    c0cb:	e8 2e 07 00 00       	call   c7fe <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    c0d0:	c9                   	leave
    c0d1:	c3                   	ret

000000000000c0d2 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    c0d2:	55                   	push   %rbp
    c0d3:	48 89 e5             	mov    %rsp,%rbp
    c0d6:	48 83 ec 10          	sub    $0x10,%rsp
    c0da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c0e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c0e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0ea:	ba 00 00 00 00       	mov    $0x0,%edx
    c0ef:	48 89 ce             	mov    %rcx,%rsi
    c0f2:	48 89 c7             	mov    %rax,%rdi
    c0f5:	e8 18 07 00 00       	call   c812 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    c0fa:	c9                   	leave
    c0fb:	c3                   	ret

000000000000c0fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c0fc:	55                   	push   %rbp
    c0fd:	48 89 e5             	mov    %rsp,%rbp
    c100:	48 83 ec 20          	sub    $0x20,%rsp
    c104:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c108:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c10c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c111:	74 40                	je     c153 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    c113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c117:	48 89 c7             	mov    %rax,%rdi
    c11a:	e8 c2 f9 ff ff       	call   bae1 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    c11f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c127:	48 89 c7             	mov    %rax,%rdi
    c12a:	e8 4d 07 00 00       	call   c87c <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    c12f:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c134:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c138:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c13c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c140:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c144:	48 89 ce             	mov    %rcx,%rsi
    c147:	48 89 c7             	mov    %rax,%rdi
    c14a:	e8 76 07 00 00       	call   c8c5 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    c14f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c153:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c157:	c9                   	leave
    c158:	c3                   	ret
    c159:	90                   	nop

000000000000c15a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c15a:	55                   	push   %rbp
    c15b:	48 89 e5             	mov    %rsp,%rbp
    c15e:	48 83 ec 10          	sub    $0x10,%rsp
    c162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c16a:	48 89 c7             	mov    %rax,%rdi
    c16d:	e8 98 07 00 00       	call   c90a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    c172:	c9                   	leave
    c173:	c3                   	ret

000000000000c174 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    c174:	55                   	push   %rbp
    c175:	48 89 e5             	mov    %rsp,%rbp
    c178:	48 83 ec 10          	sub    $0x10,%rsp
    c17c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c180:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c184:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c18c:	ba 00 00 00 00       	mov    $0x0,%edx
    c191:	48 89 ce             	mov    %rcx,%rsi
    c194:	48 89 c7             	mov    %rax,%rdi
    c197:	e8 82 07 00 00       	call   c91e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    c19c:	c9                   	leave
    c19d:	c3                   	ret

000000000000c19e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c19e:	55                   	push   %rbp
    c19f:	48 89 e5             	mov    %rsp,%rbp
    c1a2:	48 83 ec 20          	sub    $0x20,%rsp
    c1a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c1aa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    c1ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    c1b6:	eb 1e                	jmp    c1d6 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    c1b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1bc:	48 89 c7             	mov    %rax,%rdi
    c1bf:	e8 c5 07 00 00       	call   c989 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    c1c4:	48 89 c7             	mov    %rax,%rdi
    c1c7:	e8 cb 07 00 00       	call   c997 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    c1cc:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    c1d1:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    c1d6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c1db:	75 db                	jne    c1b8 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    c1dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    c1e1:	c9                   	leave
    c1e2:	c3                   	ret
    c1e3:	90                   	nop

000000000000c1e4 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c1e4:	55                   	push   %rbp
    c1e5:	48 89 e5             	mov    %rsp,%rbp
    c1e8:	48 83 ec 10          	sub    $0x10,%rsp
    c1ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c1f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1f4:	48 89 c7             	mov    %rax,%rdi
    c1f7:	e8 c4 07 00 00       	call   c9c0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    c1fc:	c9                   	leave
    c1fd:	c3                   	ret

000000000000c1fe <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    c1fe:	55                   	push   %rbp
    c1ff:	48 89 e5             	mov    %rsp,%rbp
    c202:	48 83 ec 10          	sub    $0x10,%rsp
    c206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c20a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c20e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c216:	ba 00 00 00 00       	mov    $0x0,%edx
    c21b:	48 89 ce             	mov    %rcx,%rsi
    c21e:	48 89 c7             	mov    %rax,%rdi
    c221:	e8 ae 07 00 00       	call   c9d4 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    c226:	c9                   	leave
    c227:	c3                   	ret

000000000000c228 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c228:	55                   	push   %rbp
    c229:	48 89 e5             	mov    %rsp,%rbp
    c22c:	48 83 ec 20          	sub    $0x20,%rsp
    c230:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c234:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c238:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c23d:	74 40                	je     c27f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    c23f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c243:	48 89 c7             	mov    %rax,%rdi
    c246:	e8 ea 07 00 00       	call   ca35 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    c24b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c24f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c253:	48 89 c7             	mov    %rax,%rdi
    c256:	e8 e8 07 00 00       	call   ca43 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    c25b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c260:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c264:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c268:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c26c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c270:	48 89 ce             	mov    %rcx,%rsi
    c273:	48 89 c7             	mov    %rax,%rdi
    c276:	e8 f5 07 00 00       	call   ca70 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    c27b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c27f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c283:	c9                   	leave
    c284:	c3                   	ret
    c285:	90                   	nop

000000000000c286 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c286:	55                   	push   %rbp
    c287:	48 89 e5             	mov    %rsp,%rbp
    c28a:	48 83 ec 10          	sub    $0x10,%rsp
    c28e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c296:	48 89 c7             	mov    %rax,%rdi
    c299:	e8 16 08 00 00       	call   cab4 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    c29e:	c9                   	leave
    c29f:	c3                   	ret

000000000000c2a0 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    c2a0:	55                   	push   %rbp
    c2a1:	48 89 e5             	mov    %rsp,%rbp
    c2a4:	48 83 ec 10          	sub    $0x10,%rsp
    c2a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c2b0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2b8:	ba 00 00 00 00       	mov    $0x0,%edx
    c2bd:	48 89 ce             	mov    %rcx,%rsi
    c2c0:	48 89 c7             	mov    %rax,%rdi
    c2c3:	e8 00 08 00 00       	call   cac8 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    c2c8:	c9                   	leave
    c2c9:	c3                   	ret

000000000000c2ca <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c2ca:	55                   	push   %rbp
    c2cb:	48 89 e5             	mov    %rsp,%rbp
    c2ce:	48 83 ec 20          	sub    $0x20,%rsp
    c2d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c2d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c2da:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c2df:	74 40                	je     c321 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    c2e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2e5:	48 89 c7             	mov    %rax,%rdi
    c2e8:	e8 3c 08 00 00       	call   cb29 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    c2ed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c2f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2f5:	48 89 c7             	mov    %rax,%rdi
    c2f8:	e8 3a 08 00 00       	call   cb37 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    c2fd:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c302:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c306:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c30a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c30e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c312:	48 89 ce             	mov    %rcx,%rsi
    c315:	48 89 c7             	mov    %rax,%rdi
    c318:	e8 40 08 00 00       	call   cb5d <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    c31d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c321:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c325:	c9                   	leave
    c326:	c3                   	ret
    c327:	90                   	nop

000000000000c328 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c328:	55                   	push   %rbp
    c329:	48 89 e5             	mov    %rsp,%rbp
    c32c:	48 83 ec 10          	sub    $0x10,%rsp
    c330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c338:	48 89 c7             	mov    %rax,%rdi
    c33b:	e8 62 08 00 00       	call   cba2 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    c340:	c9                   	leave
    c341:	c3                   	ret

000000000000c342 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    c342:	55                   	push   %rbp
    c343:	48 89 e5             	mov    %rsp,%rbp
    c346:	48 83 ec 10          	sub    $0x10,%rsp
    c34a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c34e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c352:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c35a:	ba 00 00 00 00       	mov    $0x0,%edx
    c35f:	48 89 ce             	mov    %rcx,%rsi
    c362:	48 89 c7             	mov    %rax,%rdi
    c365:	e8 4c 08 00 00       	call   cbb6 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    c36a:	c9                   	leave
    c36b:	c3                   	ret

000000000000c36c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c36c:	55                   	push   %rbp
    c36d:	48 89 e5             	mov    %rsp,%rbp
    c370:	48 83 ec 20          	sub    $0x20,%rsp
    c374:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c378:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c37c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c381:	74 40                	je     c3c3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    c383:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c387:	48 89 c7             	mov    %rax,%rdi
    c38a:	e8 88 08 00 00       	call   cc17 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    c38f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c397:	48 89 c7             	mov    %rax,%rdi
    c39a:	e8 86 08 00 00       	call   cc25 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    c39f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c3a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c3a8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c3ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c3b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3b4:	48 89 ce             	mov    %rcx,%rsi
    c3b7:	48 89 c7             	mov    %rax,%rdi
    c3ba:	e8 8d 08 00 00       	call   cc4c <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    c3bf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c3c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c3c7:	c9                   	leave
    c3c8:	c3                   	ret
    c3c9:	90                   	nop

000000000000c3ca <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c3ca:	55                   	push   %rbp
    c3cb:	48 89 e5             	mov    %rsp,%rbp
    c3ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c3d2:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    c3d9:	03 3f 00 
      }
    c3dc:	5d                   	pop    %rbp
    c3dd:	c3                   	ret

000000000000c3de <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c3de:	55                   	push   %rbp
    c3df:	48 89 e5             	mov    %rsp,%rbp
    c3e2:	48 83 ec 20          	sub    $0x20,%rsp
    c3e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c3f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f6:	48 89 c7             	mov    %rax,%rdi
    c3f9:	e8 cc ff ff ff       	call   c3ca <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    c3fe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c402:	0f 92 c0             	setb   %al
    c405:	0f b6 c0             	movzbl %al,%eax
    c408:	48 85 c0             	test   %rax,%rax
    c40b:	0f 95 c0             	setne  %al
    c40e:	84 c0                	test   %al,%al
    c410:	74 1a                	je     c42c <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c412:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    c419:	07 7e 00 
    c41c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c420:	73 05                	jae    c427 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c422:	e8 b9 7e ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c427:	e8 d4 7c ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c42c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c430:	48 89 d0             	mov    %rdx,%rax
    c433:	48 c1 e0 06          	shl    $0x6,%rax
    c437:	48 01 d0             	add    %rdx,%rax
    c43a:	48 c1 e0 03          	shl    $0x3,%rax
    c43e:	48 89 c7             	mov    %rax,%rdi
    c441:	e8 ca 7f ff ff       	call   4410 <_Znwm@plt>
    c446:	90                   	nop
      }
    c447:	c9                   	leave
    c448:	c3                   	ret

000000000000c449 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c449:	55                   	push   %rbp
    c44a:	48 89 e5             	mov    %rsp,%rbp
    c44d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c451:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c455:	5d                   	pop    %rbp
    c456:	c3                   	ret

000000000000c457 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c457:	55                   	push   %rbp
    c458:	48 89 e5             	mov    %rsp,%rbp
    c45b:	48 83 ec 10          	sub    $0x10,%rsp
    c45f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c467:	48 89 c6             	mov    %rax,%rsi
    c46a:	bf 08 02 00 00       	mov    $0x208,%edi
    c46f:	e8 9b 96 ff ff       	call   5b0f <_ZnwmPv>
    c474:	b9 08 02 00 00       	mov    $0x208,%ecx
    c479:	be 00 00 00 00       	mov    $0x0,%esi
    c47e:	48 89 30             	mov    %rsi,(%rax)
    c481:	89 ca                	mov    %ecx,%edx
    c483:	48 01 c2             	add    %rax,%rdx
    c486:	48 83 c2 08          	add    $0x8,%rdx
    c48a:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    c48e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c492:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    c496:	48 29 d0             	sub    %rdx,%rax
    c499:	01 c1                	add    %eax,%ecx
    c49b:	83 e1 f8             	and    $0xfffffff8,%ecx
    c49e:	89 c8                	mov    %ecx,%eax
    c4a0:	c1 e8 03             	shr    $0x3,%eax
    c4a3:	89 c1                	mov    %eax,%ecx
    c4a5:	48 89 d7             	mov    %rdx,%rdi
    c4a8:	48 89 f0             	mov    %rsi,%rax
    c4ab:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    c4ae:	90                   	nop
    c4af:	c9                   	leave
    c4b0:	c3                   	ret

000000000000c4b1 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c4b1:	55                   	push   %rbp
    c4b2:	48 89 e5             	mov    %rsp,%rbp
    c4b5:	48 83 ec 20          	sub    $0x20,%rsp
    c4b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c4c5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c4c9:	48 89 c7             	mov    %rax,%rdi
    c4cc:	e8 bf 07 00 00       	call   cc90 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c4d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c4d5:	48 89 c7             	mov    %rax,%rdi
    c4d8:	e8 44 96 ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    c4dd:	48 89 c1             	mov    %rax,%rcx
    c4e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c4e8:	48 89 ce             	mov    %rcx,%rsi
    c4eb:	48 89 c7             	mov    %rax,%rdi
    c4ee:	e8 a8 07 00 00       	call   cc9b <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c4f3:	c9                   	leave
    c4f4:	c3                   	ret
    c4f5:	90                   	nop

000000000000c4f6 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c4f6:	55                   	push   %rbp
    c4f7:	48 89 e5             	mov    %rsp,%rbp
    c4fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c4fe:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    c505:	07 7e 00 
      }
    c508:	5d                   	pop    %rbp
    c509:	c3                   	ret

000000000000c50a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c50a:	55                   	push   %rbp
    c50b:	48 89 e5             	mov    %rsp,%rbp
    c50e:	48 83 ec 20          	sub    $0x20,%rsp
    c512:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c516:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c51a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c51e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c522:	48 89 c7             	mov    %rax,%rdi
    c525:	e8 cc ff ff ff       	call   c4f6 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    c52a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c52e:	0f 92 c0             	setb   %al
    c531:	0f b6 c0             	movzbl %al,%eax
    c534:	48 85 c0             	test   %rax,%rax
    c537:	0f 95 c0             	setne  %al
    c53a:	84 c0                	test   %al,%al
    c53c:	74 1a                	je     c558 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c53e:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    c545:	0f fc 00 
    c548:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c54c:	73 05                	jae    c553 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c54e:	e8 8d 7d ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c553:	e8 a8 7b ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c558:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c55c:	48 89 d0             	mov    %rdx,%rax
    c55f:	48 c1 e0 06          	shl    $0x6,%rax
    c563:	48 01 d0             	add    %rdx,%rax
    c566:	48 c1 e0 02          	shl    $0x2,%rax
    c56a:	48 89 c7             	mov    %rax,%rdi
    c56d:	e8 9e 7e ff ff       	call   4410 <_Znwm@plt>
    c572:	90                   	nop
      }
    c573:	c9                   	leave
    c574:	c3                   	ret

000000000000c575 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c575:	55                   	push   %rbp
    c576:	48 89 e5             	mov    %rsp,%rbp
    c579:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c57d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c581:	5d                   	pop    %rbp
    c582:	c3                   	ret

000000000000c583 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c583:	55                   	push   %rbp
    c584:	48 89 e5             	mov    %rsp,%rbp
    c587:	48 83 ec 10          	sub    $0x10,%rsp
    c58b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c593:	48 89 c6             	mov    %rax,%rsi
    c596:	bf 04 01 00 00       	mov    $0x104,%edi
    c59b:	e8 6f 95 ff ff       	call   5b0f <_ZnwmPv>
    c5a0:	b9 04 01 00 00       	mov    $0x104,%ecx
    c5a5:	be 00 00 00 00       	mov    $0x0,%esi
    c5aa:	48 89 30             	mov    %rsi,(%rax)
    c5ad:	89 ca                	mov    %ecx,%edx
    c5af:	48 01 c2             	add    %rax,%rdx
    c5b2:	48 83 c2 08          	add    $0x8,%rdx
    c5b6:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    c5ba:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c5be:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    c5c2:	48 29 d0             	sub    %rdx,%rax
    c5c5:	01 c1                	add    %eax,%ecx
    c5c7:	83 e1 f8             	and    $0xfffffff8,%ecx
    c5ca:	89 c8                	mov    %ecx,%eax
    c5cc:	c1 e8 03             	shr    $0x3,%eax
    c5cf:	89 c1                	mov    %eax,%ecx
    c5d1:	48 89 d7             	mov    %rdx,%rdi
    c5d4:	48 89 f0             	mov    %rsi,%rax
    c5d7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    c5da:	90                   	nop
    c5db:	c9                   	leave
    c5dc:	c3                   	ret

000000000000c5dd <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c5dd:	55                   	push   %rbp
    c5de:	48 89 e5             	mov    %rsp,%rbp
    c5e1:	48 83 ec 20          	sub    $0x20,%rsp
    c5e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c5f1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c5f5:	48 89 c7             	mov    %rax,%rdi
    c5f8:	e8 0d 07 00 00       	call   cd0a <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c5fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c601:	48 89 c7             	mov    %rax,%rdi
    c604:	e8 18 95 ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    c609:	48 89 c1             	mov    %rax,%rcx
    c60c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c610:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c614:	48 89 ce             	mov    %rcx,%rsi
    c617:	48 89 c7             	mov    %rax,%rdi
    c61a:	e8 f6 06 00 00       	call   cd15 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c61f:	c9                   	leave
    c620:	c3                   	ret
    c621:	90                   	nop

000000000000c622 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c622:	55                   	push   %rbp
    c623:	48 89 e5             	mov    %rsp,%rbp
    c626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c62a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c631:	ff ff 0f 
      }
    c634:	5d                   	pop    %rbp
    c635:	c3                   	ret

000000000000c636 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c636:	55                   	push   %rbp
    c637:	48 89 e5             	mov    %rsp,%rbp
    c63a:	48 83 ec 20          	sub    $0x20,%rsp
    c63e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c642:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c646:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c64a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c64e:	48 89 c7             	mov    %rax,%rdi
    c651:	e8 cc ff ff ff       	call   c622 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    c656:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c65a:	0f 92 c0             	setb   %al
    c65d:	0f b6 c0             	movzbl %al,%eax
    c660:	48 85 c0             	test   %rax,%rax
    c663:	0f 95 c0             	setne  %al
    c666:	84 c0                	test   %al,%al
    c668:	74 1a                	je     c684 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c66a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    c671:	ff ff 1f 
    c674:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c678:	73 05                	jae    c67f <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c67a:	e8 61 7c ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c67f:	e8 7c 7a ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c684:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c688:	48 c1 e0 03          	shl    $0x3,%rax
    c68c:	48 89 c7             	mov    %rax,%rdi
    c68f:	e8 7c 7d ff ff       	call   4410 <_Znwm@plt>
    c694:	90                   	nop
      }
    c695:	c9                   	leave
    c696:	c3                   	ret

000000000000c697 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c697:	55                   	push   %rbp
    c698:	48 89 e5             	mov    %rsp,%rbp
    c69b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c69f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6a3:	5d                   	pop    %rbp
    c6a4:	c3                   	ret

000000000000c6a5 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c6a5:	55                   	push   %rbp
    c6a6:	48 89 e5             	mov    %rsp,%rbp
    c6a9:	48 83 ec 10          	sub    $0x10,%rsp
    c6ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c6b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6b5:	48 89 c6             	mov    %rax,%rsi
    c6b8:	bf 08 00 00 00       	mov    $0x8,%edi
    c6bd:	e8 4d 94 ff ff       	call   5b0f <_ZnwmPv>
    c6c2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    c6c9:	90                   	nop
    c6ca:	c9                   	leave
    c6cb:	c3                   	ret

000000000000c6cc <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c6cc:	55                   	push   %rbp
    c6cd:	48 89 e5             	mov    %rsp,%rbp
    c6d0:	48 83 ec 20          	sub    $0x20,%rsp
    c6d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c6e0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c6e4:	48 89 c7             	mov    %rax,%rdi
    c6e7:	e8 98 06 00 00       	call   cd84 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c6ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c6f0:	48 89 c7             	mov    %rax,%rdi
    c6f3:	e8 29 94 ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    c6f8:	48 89 c1             	mov    %rax,%rcx
    c6fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c703:	48 89 ce             	mov    %rcx,%rsi
    c706:	48 89 c7             	mov    %rax,%rdi
    c709:	e8 81 06 00 00       	call   cd8f <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    c70e:	c9                   	leave
    c70f:	c3                   	ret

000000000000c710 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c710:	55                   	push   %rbp
    c711:	48 89 e5             	mov    %rsp,%rbp
    c714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c718:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c71f:	ff ff 0f 
      }
    c722:	5d                   	pop    %rbp
    c723:	c3                   	ret

000000000000c724 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c724:	55                   	push   %rbp
    c725:	48 89 e5             	mov    %rsp,%rbp
    c728:	48 83 ec 20          	sub    $0x20,%rsp
    c72c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c730:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c734:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c73c:	48 89 c7             	mov    %rax,%rdi
    c73f:	e8 cc ff ff ff       	call   c710 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    c744:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c748:	0f 92 c0             	setb   %al
    c74b:	0f b6 c0             	movzbl %al,%eax
    c74e:	48 85 c0             	test   %rax,%rax
    c751:	0f 95 c0             	setne  %al
    c754:	84 c0                	test   %al,%al
    c756:	74 1a                	je     c772 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c758:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    c75f:	ff ff 1f 
    c762:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c766:	73 05                	jae    c76d <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c768:	e8 73 7b ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c76d:	e8 8e 79 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c772:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c776:	48 c1 e0 03          	shl    $0x3,%rax
    c77a:	48 89 c7             	mov    %rax,%rdi
    c77d:	e8 8e 7c ff ff       	call   4410 <_Znwm@plt>
    c782:	90                   	nop
      }
    c783:	c9                   	leave
    c784:	c3                   	ret

000000000000c785 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c785:	55                   	push   %rbp
    c786:	48 89 e5             	mov    %rsp,%rbp
    c789:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c78d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c791:	5d                   	pop    %rbp
    c792:	c3                   	ret

000000000000c793 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c793:	55                   	push   %rbp
    c794:	48 89 e5             	mov    %rsp,%rbp
    c797:	48 83 ec 10          	sub    $0x10,%rsp
    c79b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c79f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7a3:	48 89 c6             	mov    %rax,%rsi
    c7a6:	bf 08 00 00 00       	mov    $0x8,%edi
    c7ab:	e8 5f 93 ff ff       	call   5b0f <_ZnwmPv>
    c7b0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    c7b7:	90                   	nop
    c7b8:	c9                   	leave
    c7b9:	c3                   	ret

000000000000c7ba <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c7ba:	55                   	push   %rbp
    c7bb:	48 89 e5             	mov    %rsp,%rbp
    c7be:	48 83 ec 20          	sub    $0x20,%rsp
    c7c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c7ce:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c7d2:	48 89 c7             	mov    %rax,%rdi
    c7d5:	e8 12 06 00 00       	call   cdec <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c7da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7de:	48 89 c7             	mov    %rax,%rdi
    c7e1:	e8 3b 93 ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    c7e6:	48 89 c1             	mov    %rax,%rcx
    c7e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c7f1:	48 89 ce             	mov    %rcx,%rsi
    c7f4:	48 89 c7             	mov    %rax,%rdi
    c7f7:	e8 fb 05 00 00       	call   cdf7 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    c7fc:	c9                   	leave
    c7fd:	c3                   	ret

000000000000c7fe <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c7fe:	55                   	push   %rbp
    c7ff:	48 89 e5             	mov    %rsp,%rbp
    c802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c806:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    c80d:	55 55 05 
      }
    c810:	5d                   	pop    %rbp
    c811:	c3                   	ret

000000000000c812 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c812:	55                   	push   %rbp
    c813:	48 89 e5             	mov    %rsp,%rbp
    c816:	48 83 ec 20          	sub    $0x20,%rsp
    c81a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c81e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c822:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82a:	48 89 c7             	mov    %rax,%rdi
    c82d:	e8 cc ff ff ff       	call   c7fe <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    c832:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c836:	0f 92 c0             	setb   %al
    c839:	0f b6 c0             	movzbl %al,%eax
    c83c:	48 85 c0             	test   %rax,%rax
    c83f:	0f 95 c0             	setne  %al
    c842:	84 c0                	test   %al,%al
    c844:	74 1a                	je     c860 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c846:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    c84d:	aa aa 0a 
    c850:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c854:	73 05                	jae    c85b <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c856:	e8 85 7a ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c85b:	e8 a0 78 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c860:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c864:	48 89 d0             	mov    %rdx,%rax
    c867:	48 01 c0             	add    %rax,%rax
    c86a:	48 01 d0             	add    %rdx,%rax
    c86d:	48 c1 e0 03          	shl    $0x3,%rax
    c871:	48 89 c7             	mov    %rax,%rdi
    c874:	e8 97 7b ff ff       	call   4410 <_Znwm@plt>
    c879:	90                   	nop
      }
    c87a:	c9                   	leave
    c87b:	c3                   	ret

000000000000c87c <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c87c:	55                   	push   %rbp
    c87d:	48 89 e5             	mov    %rsp,%rbp
    c880:	48 83 ec 10          	sub    $0x10,%rsp
    c884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c88c:	48 89 c6             	mov    %rax,%rsi
    c88f:	bf 18 00 00 00       	mov    $0x18,%edi
    c894:	e8 76 92 ff ff       	call   5b0f <_ZnwmPv>
    c899:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    c89f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    c8a6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    c8ad:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    c8b4:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    c8bb:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    c8c2:	90                   	nop
    c8c3:	c9                   	leave
    c8c4:	c3                   	ret

000000000000c8c5 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c8c5:	55                   	push   %rbp
    c8c6:	48 89 e5             	mov    %rsp,%rbp
    c8c9:	48 83 ec 20          	sub    $0x20,%rsp
    c8cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c8d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c8d9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c8dd:	48 89 c7             	mov    %rax,%rdi
    c8e0:	e8 6f 05 00 00       	call   ce54 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c8e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c8e9:	48 89 c7             	mov    %rax,%rdi
    c8ec:	e8 30 92 ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    c8f1:	48 89 c1             	mov    %rax,%rcx
    c8f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c8fc:	48 89 ce             	mov    %rcx,%rsi
    c8ff:	48 89 c7             	mov    %rax,%rdi
    c902:	e8 58 05 00 00       	call   ce5f <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c907:	c9                   	leave
    c908:	c3                   	ret
    c909:	90                   	nop

000000000000c90a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c90a:	55                   	push   %rbp
    c90b:	48 89 e5             	mov    %rsp,%rbp
    c90e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c912:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    c919:	49 92 04 
      }
    c91c:	5d                   	pop    %rbp
    c91d:	c3                   	ret

000000000000c91e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c91e:	55                   	push   %rbp
    c91f:	48 89 e5             	mov    %rsp,%rbp
    c922:	48 83 ec 20          	sub    $0x20,%rsp
    c926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c92a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c92e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c936:	48 89 c7             	mov    %rax,%rdi
    c939:	e8 cc ff ff ff       	call   c90a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    c93e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c942:	0f 92 c0             	setb   %al
    c945:	0f b6 c0             	movzbl %al,%eax
    c948:	48 85 c0             	test   %rax,%rax
    c94b:	0f 95 c0             	setne  %al
    c94e:	84 c0                	test   %al,%al
    c950:	74 1a                	je     c96c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c952:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    c959:	92 24 09 
    c95c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c960:	73 05                	jae    c967 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c962:	e8 79 79 ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c967:	e8 94 77 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c96c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c970:	48 89 d0             	mov    %rdx,%rax
    c973:	48 c1 e0 03          	shl    $0x3,%rax
    c977:	48 29 d0             	sub    %rdx,%rax
    c97a:	48 c1 e0 02          	shl    $0x2,%rax
    c97e:	48 89 c7             	mov    %rax,%rdi
    c981:	e8 8a 7a ff ff       	call   4410 <_Znwm@plt>
    c986:	90                   	nop
      }
    c987:	c9                   	leave
    c988:	c3                   	ret

000000000000c989 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c989:	55                   	push   %rbp
    c98a:	48 89 e5             	mov    %rsp,%rbp
    c98d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c995:	5d                   	pop    %rbp
    c996:	c3                   	ret

000000000000c997 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c997:	55                   	push   %rbp
    c998:	48 89 e5             	mov    %rsp,%rbp
    c99b:	48 83 ec 10          	sub    $0x10,%rsp
    c99f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9a7:	48 89 c6             	mov    %rax,%rsi
    c9aa:	bf 1c 00 00 00       	mov    $0x1c,%edi
    c9af:	e8 5b 91 ff ff       	call   5b0f <_ZnwmPv>
    c9b4:	48 89 c7             	mov    %rax,%rdi
    c9b7:	e8 6c 05 00 00       	call   cf28 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    c9bc:	90                   	nop
    c9bd:	c9                   	leave
    c9be:	c3                   	ret
    c9bf:	90                   	nop

000000000000c9c0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c9c0:	55                   	push   %rbp
    c9c1:	48 89 e5             	mov    %rsp,%rbp
    c9c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c9c8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c9cf:	ff ff 0f 
      }
    c9d2:	5d                   	pop    %rbp
    c9d3:	c3                   	ret

000000000000c9d4 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c9d4:	55                   	push   %rbp
    c9d5:	48 89 e5             	mov    %rsp,%rbp
    c9d8:	48 83 ec 20          	sub    $0x20,%rsp
    c9dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c9e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c9e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ec:	48 89 c7             	mov    %rax,%rdi
    c9ef:	e8 cc ff ff ff       	call   c9c0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    c9f4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c9f8:	0f 92 c0             	setb   %al
    c9fb:	0f b6 c0             	movzbl %al,%eax
    c9fe:	48 85 c0             	test   %rax,%rax
    ca01:	0f 95 c0             	setne  %al
    ca04:	84 c0                	test   %al,%al
    ca06:	74 1a                	je     ca22 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ca08:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    ca0f:	ff ff 1f 
    ca12:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ca16:	73 05                	jae    ca1d <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ca18:	e8 c3 78 ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ca1d:	e8 de 76 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ca22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca26:	48 c1 e0 03          	shl    $0x3,%rax
    ca2a:	48 89 c7             	mov    %rax,%rdi
    ca2d:	e8 de 79 ff ff       	call   4410 <_Znwm@plt>
    ca32:	90                   	nop
      }
    ca33:	c9                   	leave
    ca34:	c3                   	ret

000000000000ca35 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ca35:	55                   	push   %rbp
    ca36:	48 89 e5             	mov    %rsp,%rbp
    ca39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ca3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca41:	5d                   	pop    %rbp
    ca42:	c3                   	ret

000000000000ca43 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ca43:	55                   	push   %rbp
    ca44:	48 89 e5             	mov    %rsp,%rbp
    ca47:	48 83 ec 10          	sub    $0x10,%rsp
    ca4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ca4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca53:	48 89 c6             	mov    %rax,%rsi
    ca56:	bf 08 00 00 00       	mov    $0x8,%edi
    ca5b:	e8 af 90 ff ff       	call   5b0f <_ZnwmPv>
    ca60:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ca66:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    ca6d:	90                   	nop
    ca6e:	c9                   	leave
    ca6f:	c3                   	ret

000000000000ca70 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ca70:	55                   	push   %rbp
    ca71:	48 89 e5             	mov    %rsp,%rbp
    ca74:	48 83 ec 20          	sub    $0x20,%rsp
    ca78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ca80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ca84:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ca88:	48 89 c7             	mov    %rax,%rdi
    ca8b:	e8 b3 04 00 00       	call   cf43 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ca90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca94:	48 89 c7             	mov    %rax,%rdi
    ca97:	e8 85 90 ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    ca9c:	48 89 c1             	mov    %rax,%rcx
    ca9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    caa7:	48 89 ce             	mov    %rcx,%rsi
    caaa:	48 89 c7             	mov    %rax,%rdi
    caad:	e8 9c 04 00 00       	call   cf4e <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    cab2:	c9                   	leave
    cab3:	c3                   	ret

000000000000cab4 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    cab4:	55                   	push   %rbp
    cab5:	48 89 e5             	mov    %rsp,%rbp
    cab8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    cabc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    cac3:	ff ff 1f 
      }
    cac6:	5d                   	pop    %rbp
    cac7:	c3                   	ret

000000000000cac8 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    cac8:	55                   	push   %rbp
    cac9:	48 89 e5             	mov    %rsp,%rbp
    cacc:	48 83 ec 20          	sub    $0x20,%rsp
    cad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cad4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cad8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    cadc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cae0:	48 89 c7             	mov    %rax,%rdi
    cae3:	e8 cc ff ff ff       	call   cab4 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    cae8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    caec:	0f 92 c0             	setb   %al
    caef:	0f b6 c0             	movzbl %al,%eax
    caf2:	48 85 c0             	test   %rax,%rax
    caf5:	0f 95 c0             	setne  %al
    caf8:	84 c0                	test   %al,%al
    cafa:	74 1a                	je     cb16 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    cafc:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    cb03:	ff ff 3f 
    cb06:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cb0a:	73 05                	jae    cb11 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    cb0c:	e8 cf 77 ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    cb11:	e8 ea 75 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    cb16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb1a:	48 c1 e0 02          	shl    $0x2,%rax
    cb1e:	48 89 c7             	mov    %rax,%rdi
    cb21:	e8 ea 78 ff ff       	call   4410 <_Znwm@plt>
    cb26:	90                   	nop
      }
    cb27:	c9                   	leave
    cb28:	c3                   	ret

000000000000cb29 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    cb29:	55                   	push   %rbp
    cb2a:	48 89 e5             	mov    %rsp,%rbp
    cb2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    cb31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb35:	5d                   	pop    %rbp
    cb36:	c3                   	ret

000000000000cb37 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    cb37:	55                   	push   %rbp
    cb38:	48 89 e5             	mov    %rsp,%rbp
    cb3b:	48 83 ec 10          	sub    $0x10,%rsp
    cb3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    cb43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb47:	48 89 c6             	mov    %rax,%rsi
    cb4a:	bf 04 00 00 00       	mov    $0x4,%edi
    cb4f:	e8 bb 8f ff ff       	call   5b0f <_ZnwmPv>
    cb54:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    cb5a:	90                   	nop
    cb5b:	c9                   	leave
    cb5c:	c3                   	ret

000000000000cb5d <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    cb5d:	55                   	push   %rbp
    cb5e:	48 89 e5             	mov    %rsp,%rbp
    cb61:	48 83 ec 20          	sub    $0x20,%rsp
    cb65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cb6d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    cb71:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb75:	48 89 c7             	mov    %rax,%rdi
    cb78:	e8 2e 04 00 00       	call   cfab <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    cb7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb81:	48 89 c7             	mov    %rax,%rdi
    cb84:	e8 98 8f ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    cb89:	48 89 c1             	mov    %rax,%rcx
    cb8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb94:	48 89 ce             	mov    %rcx,%rsi
    cb97:	48 89 c7             	mov    %rax,%rdi
    cb9a:	e8 17 04 00 00       	call   cfb6 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    cb9f:	c9                   	leave
    cba0:	c3                   	ret
    cba1:	90                   	nop

000000000000cba2 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    cba2:	55                   	push   %rbp
    cba3:	48 89 e5             	mov    %rsp,%rbp
    cba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    cbaa:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    cbb1:	ff ff 0f 
      }
    cbb4:	5d                   	pop    %rbp
    cbb5:	c3                   	ret

000000000000cbb6 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    cbb6:	55                   	push   %rbp
    cbb7:	48 89 e5             	mov    %rsp,%rbp
    cbba:	48 83 ec 20          	sub    $0x20,%rsp
    cbbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cbc6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    cbca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbce:	48 89 c7             	mov    %rax,%rdi
    cbd1:	e8 cc ff ff ff       	call   cba2 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    cbd6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cbda:	0f 92 c0             	setb   %al
    cbdd:	0f b6 c0             	movzbl %al,%eax
    cbe0:	48 85 c0             	test   %rax,%rax
    cbe3:	0f 95 c0             	setne  %al
    cbe6:	84 c0                	test   %al,%al
    cbe8:	74 1a                	je     cc04 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    cbea:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    cbf1:	ff ff 1f 
    cbf4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cbf8:	73 05                	jae    cbff <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    cbfa:	e8 e1 76 ff ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    cbff:	e8 fc 74 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    cc04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc08:	48 c1 e0 03          	shl    $0x3,%rax
    cc0c:	48 89 c7             	mov    %rax,%rdi
    cc0f:	e8 fc 77 ff ff       	call   4410 <_Znwm@plt>
    cc14:	90                   	nop
      }
    cc15:	c9                   	leave
    cc16:	c3                   	ret

000000000000cc17 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    cc17:	55                   	push   %rbp
    cc18:	48 89 e5             	mov    %rsp,%rbp
    cc1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    cc1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc23:	5d                   	pop    %rbp
    cc24:	c3                   	ret

000000000000cc25 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    cc25:	55                   	push   %rbp
    cc26:	48 89 e5             	mov    %rsp,%rbp
    cc29:	48 83 ec 10          	sub    $0x10,%rsp
    cc2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    cc31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc35:	48 89 c6             	mov    %rax,%rsi
    cc38:	bf 08 00 00 00       	mov    $0x8,%edi
    cc3d:	e8 cd 8e ff ff       	call   5b0f <_ZnwmPv>
    cc42:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    cc49:	90                   	nop
    cc4a:	c9                   	leave
    cc4b:	c3                   	ret

000000000000cc4c <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    cc4c:	55                   	push   %rbp
    cc4d:	48 89 e5             	mov    %rsp,%rbp
    cc50:	48 83 ec 20          	sub    $0x20,%rsp
    cc54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cc5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    cc60:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cc64:	48 89 c7             	mov    %rax,%rdi
    cc67:	e8 a7 03 00 00       	call   d013 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    cc6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc70:	48 89 c7             	mov    %rax,%rdi
    cc73:	e8 a9 8e ff ff       	call   5b21 <_ZSt17__size_to_integerm>
    cc78:	48 89 c1             	mov    %rax,%rcx
    cc7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cc83:	48 89 ce             	mov    %rcx,%rsi
    cc86:	48 89 c7             	mov    %rax,%rdi
    cc89:	e8 90 03 00 00       	call   d01e <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    cc8e:	c9                   	leave
    cc8f:	c3                   	ret

000000000000cc90 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    cc90:	55                   	push   %rbp
    cc91:	48 89 e5             	mov    %rsp,%rbp
    cc94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cc98:	90                   	nop
    cc99:	5d                   	pop    %rbp
    cc9a:	c3                   	ret

000000000000cc9b <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cc9b:	55                   	push   %rbp
    cc9c:	48 89 e5             	mov    %rsp,%rbp
    cc9f:	48 83 ec 20          	sub    $0x20,%rsp
    cca3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cca7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ccab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ccaf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ccb4:	75 06                	jne    ccbc <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ccb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccba:	eb 4c                	jmp    cd08 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    ccbc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ccc0:	48 89 d0             	mov    %rdx,%rax
    ccc3:	48 c1 e0 06          	shl    $0x6,%rax
    ccc7:	48 01 d0             	add    %rdx,%rax
    ccca:	48 c1 e0 03          	shl    $0x3,%rax
    ccce:	48 89 c2             	mov    %rax,%rdx
    ccd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccd5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ccd9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ccdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cce1:	48 89 ce             	mov    %rcx,%rsi
    cce4:	48 89 c7             	mov    %rax,%rdi
    cce7:	e8 8f 03 00 00       	call   d07b <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    ccec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ccf0:	48 89 d0             	mov    %rdx,%rax
    ccf3:	48 c1 e0 06          	shl    $0x6,%rax
    ccf7:	48 01 d0             	add    %rdx,%rax
    ccfa:	48 c1 e0 03          	shl    $0x3,%rax
    ccfe:	48 89 c2             	mov    %rax,%rdx
    cd01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd05:	48 01 d0             	add    %rdx,%rax
    }
    cd08:	c9                   	leave
    cd09:	c3                   	ret

000000000000cd0a <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    cd0a:	55                   	push   %rbp
    cd0b:	48 89 e5             	mov    %rsp,%rbp
    cd0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cd12:	90                   	nop
    cd13:	5d                   	pop    %rbp
    cd14:	c3                   	ret

000000000000cd15 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cd15:	55                   	push   %rbp
    cd16:	48 89 e5             	mov    %rsp,%rbp
    cd19:	48 83 ec 20          	sub    $0x20,%rsp
    cd1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cd25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    cd29:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cd2e:	75 06                	jne    cd36 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cd30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd34:	eb 4c                	jmp    cd82 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    cd36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd3a:	48 89 d0             	mov    %rdx,%rax
    cd3d:	48 c1 e0 06          	shl    $0x6,%rax
    cd41:	48 01 d0             	add    %rdx,%rax
    cd44:	48 c1 e0 02          	shl    $0x2,%rax
    cd48:	48 89 c2             	mov    %rax,%rdx
    cd4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd4f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cd53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cd57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd5b:	48 89 ce             	mov    %rcx,%rsi
    cd5e:	48 89 c7             	mov    %rax,%rdi
    cd61:	e8 43 03 00 00       	call   d0a9 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    cd66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd6a:	48 89 d0             	mov    %rdx,%rax
    cd6d:	48 c1 e0 06          	shl    $0x6,%rax
    cd71:	48 01 d0             	add    %rdx,%rax
    cd74:	48 c1 e0 02          	shl    $0x2,%rax
    cd78:	48 89 c2             	mov    %rax,%rdx
    cd7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd7f:	48 01 d0             	add    %rdx,%rax
    }
    cd82:	c9                   	leave
    cd83:	c3                   	ret

000000000000cd84 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    cd84:	55                   	push   %rbp
    cd85:	48 89 e5             	mov    %rsp,%rbp
    cd88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cd8c:	90                   	nop
    cd8d:	5d                   	pop    %rbp
    cd8e:	c3                   	ret

000000000000cd8f <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cd8f:	55                   	push   %rbp
    cd90:	48 89 e5             	mov    %rsp,%rbp
    cd93:	48 83 ec 20          	sub    $0x20,%rsp
    cd97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cd9f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    cda3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cda8:	75 06                	jne    cdb0 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cdaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdae:	eb 3a                	jmp    cdea <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    cdb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cdb4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cdbb:	00 
    cdbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdc0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cdc4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cdc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdcc:	48 89 ce             	mov    %rcx,%rsi
    cdcf:	48 89 c7             	mov    %rax,%rdi
    cdd2:	e8 00 03 00 00       	call   d0d7 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    cdd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cddb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cde2:	00 
    cde3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cde7:	48 01 d0             	add    %rdx,%rax
    }
    cdea:	c9                   	leave
    cdeb:	c3                   	ret

000000000000cdec <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    cdec:	55                   	push   %rbp
    cded:	48 89 e5             	mov    %rsp,%rbp
    cdf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cdf4:	90                   	nop
    cdf5:	5d                   	pop    %rbp
    cdf6:	c3                   	ret

000000000000cdf7 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cdf7:	55                   	push   %rbp
    cdf8:	48 89 e5             	mov    %rsp,%rbp
    cdfb:	48 83 ec 20          	sub    $0x20,%rsp
    cdff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce03:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ce07:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ce0b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ce10:	75 06                	jne    ce18 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ce12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce16:	eb 3a                	jmp    ce52 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    ce18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce1c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ce23:	00 
    ce24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce28:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ce2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ce30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce34:	48 89 ce             	mov    %rcx,%rsi
    ce37:	48 89 c7             	mov    %rax,%rdi
    ce3a:	e8 c6 02 00 00       	call   d105 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    ce3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce43:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ce4a:	00 
    ce4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce4f:	48 01 d0             	add    %rdx,%rax
    }
    ce52:	c9                   	leave
    ce53:	c3                   	ret

000000000000ce54 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    ce54:	55                   	push   %rbp
    ce55:	48 89 e5             	mov    %rsp,%rbp
    ce58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ce5c:	90                   	nop
    ce5d:	5d                   	pop    %rbp
    ce5e:	c3                   	ret

000000000000ce5f <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ce5f:	55                   	push   %rbp
    ce60:	48 89 e5             	mov    %rsp,%rbp
    ce63:	48 83 ec 20          	sub    $0x20,%rsp
    ce67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce6b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ce6f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ce73:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ce78:	75 06                	jne    ce80 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ce7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce7e:	eb 4a                	jmp    ceca <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    ce80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce84:	48 89 d0             	mov    %rdx,%rax
    ce87:	48 01 c0             	add    %rax,%rax
    ce8a:	48 01 d0             	add    %rdx,%rax
    ce8d:	48 c1 e0 03          	shl    $0x3,%rax
    ce91:	48 89 c2             	mov    %rax,%rdx
    ce94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce98:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ce9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cea4:	48 89 ce             	mov    %rcx,%rsi
    cea7:	48 89 c7             	mov    %rax,%rdi
    ceaa:	e8 84 02 00 00       	call   d133 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    ceaf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ceb3:	48 89 d0             	mov    %rdx,%rax
    ceb6:	48 01 c0             	add    %rax,%rax
    ceb9:	48 01 d0             	add    %rdx,%rax
    cebc:	48 c1 e0 03          	shl    $0x3,%rax
    cec0:	48 89 c2             	mov    %rax,%rdx
    cec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cec7:	48 01 d0             	add    %rdx,%rax
    }
    ceca:	c9                   	leave
    cecb:	c3                   	ret

000000000000cecc <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    cecc:	55                   	push   %rbp
    cecd:	48 89 e5             	mov    %rsp,%rbp
    ced0:	48 83 ec 10          	sub    $0x10,%rsp
    ced4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ced8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cedc:	48 89 c7             	mov    %rax,%rdi
    cedf:	e8 7e 02 00 00       	call   d162 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    cee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cee8:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    ceec:	90                   	nop
    ceed:	c9                   	leave
    ceee:	c3                   	ret
    ceef:	90                   	nop

000000000000cef0 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    cef0:	55                   	push   %rbp
    cef1:	48 89 e5             	mov    %rsp,%rbp
    cef4:	48 83 ec 10          	sub    $0x10,%rsp
    cef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cefc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf00:	48 89 c7             	mov    %rax,%rdi
    cf03:	e8 c4 ff ff ff       	call   cecc <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    cf08:	90                   	nop
    cf09:	c9                   	leave
    cf0a:	c3                   	ret
    cf0b:	90                   	nop

000000000000cf0c <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    cf0c:	55                   	push   %rbp
    cf0d:	48 89 e5             	mov    %rsp,%rbp
    cf10:	48 83 ec 10          	sub    $0x10,%rsp
    cf14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf1c:	48 89 c7             	mov    %rax,%rdi
    cf1f:	e8 cc ff ff ff       	call   cef0 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    cf24:	90                   	nop
    cf25:	c9                   	leave
    cf26:	c3                   	ret
    cf27:	90                   	nop

000000000000cf28 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    cf28:	55                   	push   %rbp
    cf29:	48 89 e5             	mov    %rsp,%rbp
    cf2c:	48 83 ec 10          	sub    $0x10,%rsp
    cf30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf38:	48 89 c7             	mov    %rax,%rdi
    cf3b:	e8 cc ff ff ff       	call   cf0c <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    cf40:	90                   	nop
    cf41:	c9                   	leave
    cf42:	c3                   	ret

000000000000cf43 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    cf43:	55                   	push   %rbp
    cf44:	48 89 e5             	mov    %rsp,%rbp
    cf47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cf4b:	90                   	nop
    cf4c:	5d                   	pop    %rbp
    cf4d:	c3                   	ret

000000000000cf4e <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cf4e:	55                   	push   %rbp
    cf4f:	48 89 e5             	mov    %rsp,%rbp
    cf52:	48 83 ec 20          	sub    $0x20,%rsp
    cf56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    cf62:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cf67:	75 06                	jne    cf6f <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cf69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf6d:	eb 3a                	jmp    cfa9 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    cf6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cf73:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cf7a:	00 
    cf7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf7f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cf83:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf8b:	48 89 ce             	mov    %rcx,%rsi
    cf8e:	48 89 c7             	mov    %rax,%rdi
    cf91:	e8 d7 01 00 00       	call   d16d <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    cf96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cf9a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cfa1:	00 
    cfa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfa6:	48 01 d0             	add    %rdx,%rax
    }
    cfa9:	c9                   	leave
    cfaa:	c3                   	ret

000000000000cfab <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    cfab:	55                   	push   %rbp
    cfac:	48 89 e5             	mov    %rsp,%rbp
    cfaf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cfb3:	90                   	nop
    cfb4:	5d                   	pop    %rbp
    cfb5:	c3                   	ret

000000000000cfb6 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cfb6:	55                   	push   %rbp
    cfb7:	48 89 e5             	mov    %rsp,%rbp
    cfba:	48 83 ec 20          	sub    $0x20,%rsp
    cfbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cfc6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    cfca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cfcf:	75 06                	jne    cfd7 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cfd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfd5:	eb 3a                	jmp    d011 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    cfd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cfdb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    cfe2:	00 
    cfe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfe7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cfeb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cfef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cff3:	48 89 ce             	mov    %rcx,%rsi
    cff6:	48 89 c7             	mov    %rax,%rdi
    cff9:	e8 9d 01 00 00       	call   d19b <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    cffe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d002:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    d009:	00 
    d00a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d00e:	48 01 d0             	add    %rdx,%rax
    }
    d011:	c9                   	leave
    d012:	c3                   	ret

000000000000d013 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    d013:	55                   	push   %rbp
    d014:	48 89 e5             	mov    %rsp,%rbp
    d017:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d01b:	90                   	nop
    d01c:	5d                   	pop    %rbp
    d01d:	c3                   	ret

000000000000d01e <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d01e:	55                   	push   %rbp
    d01f:	48 89 e5             	mov    %rsp,%rbp
    d022:	48 83 ec 20          	sub    $0x20,%rsp
    d026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d02a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d02e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d032:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d037:	75 06                	jne    d03f <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d03d:	eb 3a                	jmp    d079 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    d03f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d043:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d04a:	00 
    d04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d04f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d053:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d05b:	48 89 ce             	mov    %rcx,%rsi
    d05e:	48 89 c7             	mov    %rax,%rdi
    d061:	e8 63 01 00 00       	call   d1c9 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    d066:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d06a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d071:	00 
    d072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d076:	48 01 d0             	add    %rdx,%rax
    }
    d079:	c9                   	leave
    d07a:	c3                   	ret

000000000000d07b <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d07b:	55                   	push   %rbp
    d07c:	48 89 e5             	mov    %rsp,%rbp
    d07f:	48 83 ec 20          	sub    $0x20,%rsp
    d083:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d087:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d08b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d08f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d093:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d09b:	48 89 ce             	mov    %rcx,%rsi
    d09e:	48 89 c7             	mov    %rax,%rdi
    d0a1:	e8 51 01 00 00       	call   d1f7 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d0a6:	90                   	nop
    d0a7:	c9                   	leave
    d0a8:	c3                   	ret

000000000000d0a9 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d0a9:	55                   	push   %rbp
    d0aa:	48 89 e5             	mov    %rsp,%rbp
    d0ad:	48 83 ec 20          	sub    $0x20,%rsp
    d0b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d0b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d0bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d0c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0c9:	48 89 ce             	mov    %rcx,%rsi
    d0cc:	48 89 c7             	mov    %rax,%rdi
    d0cf:	e8 9b 01 00 00       	call   d26f <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d0d4:	90                   	nop
    d0d5:	c9                   	leave
    d0d6:	c3                   	ret

000000000000d0d7 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d0d7:	55                   	push   %rbp
    d0d8:	48 89 e5             	mov    %rsp,%rbp
    d0db:	48 83 ec 20          	sub    $0x20,%rsp
    d0df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d0e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d0eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d0f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0f7:	48 89 ce             	mov    %rcx,%rsi
    d0fa:	48 89 c7             	mov    %rax,%rdi
    d0fd:	e8 e5 01 00 00       	call   d2e7 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    d102:	90                   	nop
    d103:	c9                   	leave
    d104:	c3                   	ret

000000000000d105 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d105:	55                   	push   %rbp
    d106:	48 89 e5             	mov    %rsp,%rbp
    d109:	48 83 ec 20          	sub    $0x20,%rsp
    d10d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d111:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d115:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d119:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d11d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d121:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d125:	48 89 ce             	mov    %rcx,%rsi
    d128:	48 89 c7             	mov    %rax,%rdi
    d12b:	e8 f2 01 00 00       	call   d322 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    d130:	90                   	nop
    d131:	c9                   	leave
    d132:	c3                   	ret

000000000000d133 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d133:	55                   	push   %rbp
    d134:	48 89 e5             	mov    %rsp,%rbp
    d137:	48 83 ec 20          	sub    $0x20,%rsp
    d13b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d13f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d143:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d147:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d14b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d14f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d153:	48 89 ce             	mov    %rcx,%rsi
    d156:	48 89 c7             	mov    %rax,%rdi
    d159:	e8 ff 01 00 00       	call   d35d <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d15e:	90                   	nop
    d15f:	c9                   	leave
    d160:	c3                   	ret
    d161:	90                   	nop

000000000000d162 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    d162:	55                   	push   %rbp
    d163:	48 89 e5             	mov    %rsp,%rbp
    d166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d16a:	90                   	nop
    d16b:	5d                   	pop    %rbp
    d16c:	c3                   	ret

000000000000d16d <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d16d:	55                   	push   %rbp
    d16e:	48 89 e5             	mov    %rsp,%rbp
    d171:	48 83 ec 20          	sub    $0x20,%rsp
    d175:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d179:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d17d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d181:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d185:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d189:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d18d:	48 89 ce             	mov    %rcx,%rsi
    d190:	48 89 c7             	mov    %rax,%rdi
    d193:	e8 08 02 00 00       	call   d3a0 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d198:	90                   	nop
    d199:	c9                   	leave
    d19a:	c3                   	ret

000000000000d19b <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d19b:	55                   	push   %rbp
    d19c:	48 89 e5             	mov    %rsp,%rbp
    d19f:	48 83 ec 20          	sub    $0x20,%rsp
    d1a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1ab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d1af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1b3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d1b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1bb:	48 89 ce             	mov    %rcx,%rsi
    d1be:	48 89 c7             	mov    %rax,%rdi
    d1c1:	e8 0d 02 00 00       	call   d3d3 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d1c6:	90                   	nop
    d1c7:	c9                   	leave
    d1c8:	c3                   	ret

000000000000d1c9 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d1c9:	55                   	push   %rbp
    d1ca:	48 89 e5             	mov    %rsp,%rbp
    d1cd:	48 83 ec 20          	sub    $0x20,%rsp
    d1d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d1dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d1e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e9:	48 89 ce             	mov    %rcx,%rsi
    d1ec:	48 89 c7             	mov    %rax,%rdi
    d1ef:	e8 10 02 00 00       	call   d404 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    d1f4:	90                   	nop
    d1f5:	c9                   	leave
    d1f6:	c3                   	ret

000000000000d1f7 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d1f7:	55                   	push   %rbp
    d1f8:	48 89 e5             	mov    %rsp,%rbp
    d1fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d203:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d207:	eb 58                	jmp    d261 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    d209:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d20d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d211:	b9 08 02 00 00       	mov    $0x208,%ecx
    d216:	48 8b 32             	mov    (%rdx),%rsi
    d219:	48 89 30             	mov    %rsi,(%rax)
    d21c:	89 ce                	mov    %ecx,%esi
    d21e:	48 01 c6             	add    %rax,%rsi
    d221:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    d225:	89 ce                	mov    %ecx,%esi
    d227:	48 01 d6             	add    %rdx,%rsi
    d22a:	48 83 c6 08          	add    $0x8,%rsi
    d22e:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    d232:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    d236:	48 8d 78 08          	lea    0x8(%rax),%rdi
    d23a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d23e:	48 29 f8             	sub    %rdi,%rax
    d241:	48 29 c2             	sub    %rax,%rdx
    d244:	01 c1                	add    %eax,%ecx
    d246:	83 e1 f8             	and    $0xfffffff8,%ecx
    d249:	89 c8                	mov    %ecx,%eax
    d24b:	c1 e8 03             	shr    $0x3,%eax
    d24e:	89 c0                	mov    %eax,%eax
    d250:	48 89 d6             	mov    %rdx,%rsi
    d253:	48 89 c1             	mov    %rax,%rcx
    d256:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    d259:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    d260:	00 
    d261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d265:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d269:	75 9e                	jne    d209 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d26b:	90                   	nop
    d26c:	90                   	nop
    d26d:	5d                   	pop    %rbp
    d26e:	c3                   	ret

000000000000d26f <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d26f:	55                   	push   %rbp
    d270:	48 89 e5             	mov    %rsp,%rbp
    d273:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d277:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d27b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d27f:	eb 58                	jmp    d2d9 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    d281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d285:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d289:	b9 04 01 00 00       	mov    $0x104,%ecx
    d28e:	48 8b 32             	mov    (%rdx),%rsi
    d291:	48 89 30             	mov    %rsi,(%rax)
    d294:	89 ce                	mov    %ecx,%esi
    d296:	48 01 c6             	add    %rax,%rsi
    d299:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    d29d:	89 ce                	mov    %ecx,%esi
    d29f:	48 01 d6             	add    %rdx,%rsi
    d2a2:	48 83 c6 08          	add    $0x8,%rsi
    d2a6:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    d2aa:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    d2ae:	48 8d 78 08          	lea    0x8(%rax),%rdi
    d2b2:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d2b6:	48 29 f8             	sub    %rdi,%rax
    d2b9:	48 29 c2             	sub    %rax,%rdx
    d2bc:	01 c1                	add    %eax,%ecx
    d2be:	83 e1 f8             	and    $0xfffffff8,%ecx
    d2c1:	89 c8                	mov    %ecx,%eax
    d2c3:	c1 e8 03             	shr    $0x3,%eax
    d2c6:	89 c0                	mov    %eax,%eax
    d2c8:	48 89 d6             	mov    %rdx,%rsi
    d2cb:	48 89 c1             	mov    %rax,%rcx
    d2ce:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    d2d1:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    d2d8:	00 
    d2d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2dd:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d2e1:	75 9e                	jne    d281 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d2e3:	90                   	nop
    d2e4:	90                   	nop
    d2e5:	5d                   	pop    %rbp
    d2e6:	c3                   	ret

000000000000d2e7 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d2e7:	55                   	push   %rbp
    d2e8:	48 89 e5             	mov    %rsp,%rbp
    d2eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d2ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d2f3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    d2f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d2fb:	48 8b 00             	mov    (%rax),%rax
    d2fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    d302:	eb 10                	jmp    d314 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    d304:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d308:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d30c:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    d30f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    d314:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d318:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d31c:	75 e6                	jne    d304 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    d31e:	90                   	nop
    d31f:	90                   	nop
    d320:	5d                   	pop    %rbp
    d321:	c3                   	ret

000000000000d322 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d322:	55                   	push   %rbp
    d323:	48 89 e5             	mov    %rsp,%rbp
    d326:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d32a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d32e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    d332:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d336:	48 8b 00             	mov    (%rax),%rax
    d339:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    d33d:	eb 10                	jmp    d34f <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    d33f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d343:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d347:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    d34a:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    d34f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d353:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d357:	75 e6                	jne    d33f <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    d359:	90                   	nop
    d35a:	90                   	nop
    d35b:	5d                   	pop    %rbp
    d35c:	c3                   	ret

000000000000d35d <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d35d:	55                   	push   %rbp
    d35e:	48 89 e5             	mov    %rsp,%rbp
    d361:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d365:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d369:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d36d:	eb 23                	jmp    d392 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    d36f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d373:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    d377:	48 8b 06             	mov    (%rsi),%rax
    d37a:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    d37e:	48 89 01             	mov    %rax,(%rcx)
    d381:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    d385:	48 8b 46 10          	mov    0x10(%rsi),%rax
    d389:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    d38d:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    d392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d396:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d39a:	75 d3                	jne    d36f <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d39c:	90                   	nop
    d39d:	90                   	nop
    d39e:	5d                   	pop    %rbp
    d39f:	c3                   	ret

000000000000d3a0 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d3a0:	55                   	push   %rbp
    d3a1:	48 89 e5             	mov    %rsp,%rbp
    d3a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d3ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d3b0:	eb 13                	jmp    d3c5 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    d3b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d3ba:	48 8b 12             	mov    (%rdx),%rdx
    d3bd:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    d3c0:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    d3c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3c9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d3cd:	75 e3                	jne    d3b2 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d3cf:	90                   	nop
    d3d0:	90                   	nop
    d3d1:	5d                   	pop    %rbp
    d3d2:	c3                   	ret

000000000000d3d3 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d3d3:	55                   	push   %rbp
    d3d4:	48 89 e5             	mov    %rsp,%rbp
    d3d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d3df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d3e3:	eb 11                	jmp    d3f6 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    d3e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3e9:	8b 10                	mov    (%rax),%edx
    d3eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ef:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    d3f1:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    d3f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3fa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d3fe:	75 e5                	jne    d3e5 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d400:	90                   	nop
    d401:	90                   	nop
    d402:	5d                   	pop    %rbp
    d403:	c3                   	ret

000000000000d404 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d404:	55                   	push   %rbp
    d405:	48 89 e5             	mov    %rsp,%rbp
    d408:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d40c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d410:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    d414:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d418:	48 8b 00             	mov    (%rax),%rax
    d41b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    d41f:	eb 10                	jmp    d431 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    d421:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d425:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d429:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    d42c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    d431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d435:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d439:	75 e6                	jne    d421 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    d43b:	90                   	nop
    d43c:	90                   	nop
    d43d:	5d                   	pop    %rbp
    d43e:	c3                   	ret

000000000000d43f <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    d43f:	55                   	push   %rbp
    d440:	48 89 e5             	mov    %rsp,%rbp
    d443:	53                   	push   %rbx
    d444:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    d448:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d44c:	be 00 00 00 00       	mov    $0x0,%esi
    d451:	48 89 c7             	mov    %rax,%rdi
    d454:	e8 b7 70 ff ff       	call   4510 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    d459:	8b 45 c8             	mov    -0x38(%rbp),%eax
    d45c:	89 c3                	mov    %eax,%ebx
    d45e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d462:	48 89 c7             	mov    %rax,%rdi
    d465:	e8 ea b6 ff ff       	call   8b54 <_ZNSaI17VkLayerPropertiesEC1Ev>
    d46a:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d46e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d472:	48 89 de             	mov    %rbx,%rsi
    d475:	48 89 c7             	mov    %rax,%rdi
    d478:	e8 0f b7 ff ff       	call   8b8c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    d47d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d481:	48 89 c7             	mov    %rax,%rdi
    d484:	e8 e7 b6 ff ff       	call   8b70 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    d489:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d48d:	48 89 c7             	mov    %rax,%rdi
    d490:	e8 b1 b7 ff ff       	call   8c46 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    d495:	48 89 c2             	mov    %rax,%rdx
    d498:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d49c:	48 89 d6             	mov    %rdx,%rsi
    d49f:	48 89 c7             	mov    %rax,%rdi
    d4a2:	e8 69 70 ff ff       	call   4510 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    d4a7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d4ab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d4af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4b3:	48 89 c7             	mov    %rax,%rdi
    d4b6:	e8 63 04 00 00       	call   d91e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    d4bb:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d4bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4c3:	48 89 c7             	mov    %rax,%rdi
    d4c6:	e8 79 04 00 00       	call   d944 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    d4cb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d4cf:	eb 5b                	jmp    d52c <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    d4d1:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    d4d5:	48 89 c7             	mov    %rax,%rdi
    d4d8:	e8 ef 04 00 00       	call   d9cc <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d4dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    d4e1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d4e5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d4e9:	48 89 d6             	mov    %rdx,%rsi
    d4ec:	48 89 c7             	mov    %rax,%rdi
    d4ef:	e8 f8 03 00 00       	call   d8ec <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    d4f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d4f8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d4fc:	48 8b 3d 9d 07 02 00 	mov    0x2079d(%rip),%rdi        # 2dca0 <_ZN3vkh19validationLayerNameE>
    d503:	48 8b 35 9e 07 02 00 	mov    0x2079e(%rip),%rsi        # 2dca8 <_ZN3vkh19validationLayerNameE+0x8>
    d50a:	48 89 d1             	mov    %rdx,%rcx
    d50d:	48 89 c2             	mov    %rax,%rdx
    d510:	e8 da 04 00 00       	call   d9ef <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    d515:	84 c0                	test   %al,%al
    d517:	74 07                	je     d520 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    d519:	bb 01 00 00 00       	mov    $0x1,%ebx
    d51e:	eb 28                	jmp    d548 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    d520:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    d524:	48 89 c7             	mov    %rax,%rdi
    d527:	e8 7c 04 00 00       	call   d9a8 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d52c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d530:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    d534:	48 89 d6             	mov    %rdx,%rsi
    d537:	48 89 c7             	mov    %rax,%rdi
    d53a:	e8 2e 04 00 00       	call   d96d <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d53f:	84 c0                	test   %al,%al
    d541:	75 8e                	jne    d4d1 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    d543:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    d548:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d54c:	48 89 c7             	mov    %rax,%rdi
    d54f:	e8 ae b6 ff ff       	call   8c02 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    d554:	89 d8                	mov    %ebx,%eax
    d556:	eb 34                	jmp    d58c <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    d558:	48 89 c3             	mov    %rax,%rbx
    d55b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d55f:	48 89 c7             	mov    %rax,%rdi
    d562:	e8 09 b6 ff ff       	call   8b70 <_ZNSaI17VkLayerPropertiesED1Ev>
    d567:	48 89 d8             	mov    %rbx,%rax
    d56a:	48 89 c7             	mov    %rax,%rdi
    d56d:	e8 ae 72 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    d572:	48 89 c3             	mov    %rax,%rbx
    d575:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d579:	48 89 c7             	mov    %rax,%rdi
    d57c:	e8 81 b6 ff ff       	call   8c02 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    d581:	48 89 d8             	mov    %rbx,%rax
    d584:	48 89 c7             	mov    %rax,%rdi
    d587:	e8 94 72 ff ff       	call   4820 <_Unwind_Resume@plt>
    d58c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d590:	c9                   	leave
    d591:	c3                   	ret

000000000000d592 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    d592:	55                   	push   %rbp
    d593:	48 89 e5             	mov    %rsp,%rbp
    d596:	48 83 ec 20          	sub    $0x20,%rsp
    d59a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d59d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    d5a0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    d5a4:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    d5a8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d5ab:	83 f8 01             	cmp    $0x1,%eax
    d5ae:	7e 3c                	jle    d5ec <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    d5b0:	be 0a 00 00 00       	mov    $0xa,%esi
    d5b5:	48 8d 05 c4 0e 02 00 	lea    0x20ec4(%rip),%rax        # 2e480 <_ZSt4cerr@GLIBCXX_3.4>
    d5bc:	48 89 c7             	mov    %rax,%rdi
    d5bf:	e8 6c 6f ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    d5c4:	48 89 c2             	mov    %rax,%rdx
    d5c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d5cb:	48 8b 40 28          	mov    0x28(%rax),%rax
    d5cf:	48 89 c6             	mov    %rax,%rsi
    d5d2:	48 89 d7             	mov    %rdx,%rdi
    d5d5:	e8 26 6e ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d5da:	48 8b 15 b7 09 02 00 	mov    0x209b7(%rip),%rdx        # 2df98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    d5e1:	48 89 d6             	mov    %rdx,%rsi
    d5e4:	48 89 c7             	mov    %rax,%rdi
    d5e7:	e8 94 6e ff ff       	call   4480 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    d5ec:	b8 00 00 00 00       	mov    $0x0,%eax
}
    d5f1:	c9                   	leave
    d5f2:	c3                   	ret

000000000000d5f3 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    d5f3:	55                   	push   %rbp
    d5f4:	48 89 e5             	mov    %rsp,%rbp
    d5f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    d5fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5ff:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d603:	0f 11 00             	movups %xmm0,(%rax)
    d606:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    d60a:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    d60e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d612:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    d618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d61c:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    d623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d627:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    d62e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d632:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # d592 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    d639:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    d63d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d641:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    d648:	00 
}
    d649:	90                   	nop
    d64a:	5d                   	pop    %rbp
    d64b:	c3                   	ret

000000000000d64c <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    d64c:	55                   	push   %rbp
    d64d:	48 89 e5             	mov    %rsp,%rbp
    d650:	48 83 ec 30          	sub    $0x30,%rsp
    d654:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d658:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d65c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d660:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    d664:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d668:	48 8d 15 41 03 01 00 	lea    0x10341(%rip),%rdx        # 1d9b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    d66f:	48 89 d6             	mov    %rdx,%rsi
    d672:	48 89 c7             	mov    %rax,%rdi
    d675:	e8 46 6d ff ff       	call   43c0 <vkGetInstanceProcAddr@plt>
    d67a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    d67e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d683:	75 07                	jne    d68c <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    d685:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    d68a:	eb 1b                	jmp    d6a7 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    d68c:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    d690:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d694:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d698:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d69c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6a0:	48 89 c7             	mov    %rax,%rdi
    d6a3:	41 ff d0             	call   *%r8
    d6a6:	90                   	nop
}
    d6a7:	c9                   	leave
    d6a8:	c3                   	ret

000000000000d6a9 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    d6a9:	55                   	push   %rbp
    d6aa:	48 89 e5             	mov    %rsp,%rbp
    d6ad:	41 54                	push   %r12
    d6af:	53                   	push   %rbx
    d6b0:	48 83 ec 50          	sub    $0x50,%rsp
    d6b4:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    d6b8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d6bc:	48 89 c7             	mov    %rax,%rdi
    d6bf:	e8 2f ff ff ff       	call   d5f3 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    d6c4:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    d6cb:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    d6cc:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    d6d0:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    d6d4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d6d8:	48 89 d1             	mov    %rdx,%rcx
    d6db:	ba 00 00 00 00       	mov    $0x0,%edx
    d6e0:	48 89 c7             	mov    %rax,%rdi
    d6e3:	e8 64 ff ff ff       	call   d64c <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    d6e8:	85 c0                	test   %eax,%eax
    d6ea:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    d6ed:	84 c0                	test   %al,%al
    d6ef:	74 3b                	je     d72c <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    d6f1:	bf 10 00 00 00       	mov    $0x10,%edi
    d6f6:	e8 a5 6a ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    d6fb:	48 89 c3             	mov    %rax,%rbx
    d6fe:	48 8d 05 cb 02 01 00 	lea    0x102cb(%rip),%rax        # 1d9d0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    d705:	48 89 c6             	mov    %rax,%rsi
    d708:	48 89 df             	mov    %rbx,%rdi
    d70b:	e8 10 6a ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    d710:	48 8b 05 91 08 02 00 	mov    0x20891(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d717:	48 89 c2             	mov    %rax,%rdx
    d71a:	48 8d 05 1f 06 02 00 	lea    0x2061f(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d721:	48 89 c6             	mov    %rax,%rsi
    d724:	48 89 df             	mov    %rbx,%rdi
    d727:	e8 94 70 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  return debugMessenger;
    d72c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d730:	eb 16                	jmp    d748 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    d732:	49 89 c4             	mov    %rax,%r12
    d735:	48 89 df             	mov    %rbx,%rdi
    d738:	e8 73 6b ff ff       	call   42b0 <__cxa_free_exception@plt>
    d73d:	4c 89 e0             	mov    %r12,%rax
    d740:	48 89 c7             	mov    %rax,%rdi
    d743:	e8 d8 70 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    d748:	48 83 c4 50          	add    $0x50,%rsp
    d74c:	5b                   	pop    %rbx
    d74d:	41 5c                	pop    %r12
    d74f:	5d                   	pop    %rbp
    d750:	c3                   	ret

000000000000d751 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    d751:	55                   	push   %rbp
    d752:	48 89 e5             	mov    %rsp,%rbp
    d755:	48 83 ec 30          	sub    $0x30,%rsp
    d759:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d75d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d761:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    d765:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d769:	48 8d 15 80 02 01 00 	lea    0x10280(%rip),%rdx        # 1d9f0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    d770:	48 89 d6             	mov    %rdx,%rsi
    d773:	48 89 c7             	mov    %rax,%rdi
    d776:	e8 45 6c ff ff       	call   43c0 <vkGetInstanceProcAddr@plt>
    d77b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    d77f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d784:	74 19                	je     d79f <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    d786:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    d78a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d78e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d792:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d796:	48 89 ce             	mov    %rcx,%rsi
    d799:	48 89 c7             	mov    %rax,%rdi
    d79c:	41 ff d0             	call   *%r8
  }
}
    d79f:	90                   	nop
    d7a0:	c9                   	leave
    d7a1:	c3                   	ret

000000000000d7a2 <_Z41__static_initialization_and_destruction_0ii>:

    d7a2:	55                   	push   %rbp
    d7a3:	48 89 e5             	mov    %rsp,%rbp
    d7a6:	48 83 ec 10          	sub    $0x10,%rsp
    d7aa:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d7ad:	89 75 f8             	mov    %esi,-0x8(%rbp)
    d7b0:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    d7b4:	75 3b                	jne    d7f1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d7b6:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    d7bd:	75 32                	jne    d7f1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d7bf:	48 8d 05 02 0e 02 00 	lea    0x20e02(%rip),%rax        # 2e5c8 <_ZStL8__ioinit>
    d7c6:	48 89 c7             	mov    %rax,%rdi
    d7c9:	e8 22 6f ff ff       	call   46f0 <_ZNSt8ios_base4InitC1Ev@plt>
    d7ce:	48 8d 05 7b 0c 02 00 	lea    0x20c7b(%rip),%rax        # 2e450 <__dso_handle>
    d7d5:	48 89 c2             	mov    %rax,%rdx
    d7d8:	48 8d 05 e9 0d 02 00 	lea    0x20de9(%rip),%rax        # 2e5c8 <_ZStL8__ioinit>
    d7df:	48 89 c6             	mov    %rax,%rsi
    d7e2:	48 8b 05 df 07 02 00 	mov    0x207df(%rip),%rax        # 2dfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    d7e9:	48 89 c7             	mov    %rax,%rdi
    d7ec:	e8 8f 6b ff ff       	call   4380 <__cxa_atexit@plt>
    d7f1:	90                   	nop
    d7f2:	c9                   	leave
    d7f3:	c3                   	ret

000000000000d7f4 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    d7f4:	55                   	push   %rbp
    d7f5:	48 89 e5             	mov    %rsp,%rbp
    d7f8:	be ff ff 00 00       	mov    $0xffff,%esi
    d7fd:	bf 01 00 00 00       	mov    $0x1,%edi
    d802:	e8 9b ff ff ff       	call   d7a2 <_Z41__static_initialization_and_destruction_0ii>
    d807:	5d                   	pop    %rbp
    d808:	c3                   	ret

000000000000d809 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    d809:	55                   	push   %rbp
    d80a:	48 89 e5             	mov    %rsp,%rbp
    d80d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d811:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    d815:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d819:	0f b6 00             	movzbl (%rax),%eax
    d81c:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    d81e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d822:	0f b6 00             	movzbl (%rax),%eax
    d825:	38 c2                	cmp    %al,%dl
    d827:	0f 92 c0             	setb   %al
      }
    d82a:	5d                   	pop    %rbp
    d82b:	c3                   	ret

000000000000d82c <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    d82c:	55                   	push   %rbp
    d82d:	48 89 e5             	mov    %rsp,%rbp
    d830:	48 83 ec 30          	sub    $0x30,%rsp
    d834:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d838:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d83c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    d840:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d845:	75 0a                	jne    d851 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    d847:	b8 00 00 00 00       	mov    $0x0,%eax
    d84c:	e9 99 00 00 00       	jmp    d8ea <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    d851:	e8 ad 74 ff ff       	call   4d03 <_ZSt23__is_constant_evaluatedv>
    d856:	84 c0                	test   %al,%al
    d858:	74 78                	je     d8d2 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    d85a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    d861:	00 
    d862:	eb 5d                	jmp    d8c1 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    d864:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d86c:	48 01 c2             	add    %rax,%rdx
    d86f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    d873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d877:	48 01 c8             	add    %rcx,%rax
    d87a:	48 89 d6             	mov    %rdx,%rsi
    d87d:	48 89 c7             	mov    %rax,%rdi
    d880:	e8 84 ff ff ff       	call   d809 <_ZNSt11char_traitsIcE2ltERKcS2_>
    d885:	84 c0                	test   %al,%al
    d887:	74 07                	je     d890 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    d889:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d88e:	eb 5a                	jmp    d8ea <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    d890:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d894:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d898:	48 01 c2             	add    %rax,%rdx
    d89b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d89f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8a3:	48 01 c8             	add    %rcx,%rax
    d8a6:	48 89 d6             	mov    %rdx,%rsi
    d8a9:	48 89 c7             	mov    %rax,%rdi
    d8ac:	e8 58 ff ff ff       	call   d809 <_ZNSt11char_traitsIcE2ltERKcS2_>
    d8b1:	84 c0                	test   %al,%al
    d8b3:	74 07                	je     d8bc <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    d8b5:	b8 01 00 00 00       	mov    $0x1,%eax
    d8ba:	eb 2e                	jmp    d8ea <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    d8bc:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    d8c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8c5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    d8c9:	72 99                	jb     d864 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    d8cb:	b8 00 00 00 00       	mov    $0x0,%eax
    d8d0:	eb 18                	jmp    d8ea <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    d8d2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d8d6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d8da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d8de:	48 89 ce             	mov    %rcx,%rsi
    d8e1:	48 89 c7             	mov    %rax,%rdi
    d8e4:	e8 97 68 ff ff       	call   4180 <memcmp@plt>
    d8e9:	90                   	nop
      }
    d8ea:	c9                   	leave
    d8eb:	c3                   	ret

000000000000d8ec <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    d8ec:	55                   	push   %rbp
    d8ed:	48 89 e5             	mov    %rsp,%rbp
    d8f0:	48 83 ec 10          	sub    $0x10,%rsp
    d8f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    d8fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d900:	48 89 c7             	mov    %rax,%rdi
    d903:	e8 06 74 ff ff       	call   4d0e <_ZNSt11char_traitsIcE6lengthEPKc>
    d908:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d90c:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    d90f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d913:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d917:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    d91b:	90                   	nop
    d91c:	c9                   	leave
    d91d:	c3                   	ret

000000000000d91e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    d91e:	55                   	push   %rbp
    d91f:	48 89 e5             	mov    %rsp,%rbp
    d922:	48 83 ec 20          	sub    $0x20,%rsp
    d926:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    d92a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d92e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d932:	48 89 d6             	mov    %rdx,%rsi
    d935:	48 89 c7             	mov    %rax,%rdi
    d938:	e8 27 01 00 00       	call   da64 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    d93d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d941:	c9                   	leave
    d942:	c3                   	ret
    d943:	90                   	nop

000000000000d944 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d944:	55                   	push   %rbp
    d945:	48 89 e5             	mov    %rsp,%rbp
    d948:	48 83 ec 20          	sub    $0x20,%rsp
    d94c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    d950:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d954:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d958:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d95c:	48 89 d6             	mov    %rdx,%rsi
    d95f:	48 89 c7             	mov    %rax,%rdi
    d962:	e8 fd 00 00 00       	call   da64 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    d967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d96b:	c9                   	leave
    d96c:	c3                   	ret

000000000000d96d <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    d96d:	55                   	push   %rbp
    d96e:	48 89 e5             	mov    %rsp,%rbp
    d971:	53                   	push   %rbx
    d972:	48 83 ec 18          	sub    $0x18,%rsp
    d976:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d97a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    d97e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d982:	48 89 c7             	mov    %rax,%rdi
    d985:	e8 f8 00 00 00       	call   da82 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    d98a:	48 8b 18             	mov    (%rax),%rbx
    d98d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d991:	48 89 c7             	mov    %rax,%rdi
    d994:	e8 e9 00 00 00       	call   da82 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    d999:	48 8b 00             	mov    (%rax),%rax
    d99c:	48 39 c3             	cmp    %rax,%rbx
    d99f:	0f 95 c0             	setne  %al
    d9a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d9a6:	c9                   	leave
    d9a7:	c3                   	ret

000000000000d9a8 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d9a8:	55                   	push   %rbp
    d9a9:	48 89 e5             	mov    %rsp,%rbp
    d9ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    d9b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b4:	48 8b 00             	mov    (%rax),%rax
    d9b7:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    d9be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9c2:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    d9c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d9c9:	5d                   	pop    %rbp
    d9ca:	c3                   	ret
    d9cb:	90                   	nop

000000000000d9cc <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d9cc:	55                   	push   %rbp
    d9cd:	48 89 e5             	mov    %rsp,%rbp
    d9d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    d9d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9d8:	48 8b 00             	mov    (%rax),%rax
    d9db:	5d                   	pop    %rbp
    d9dc:	c3                   	ret
    d9dd:	90                   	nop

000000000000d9de <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    d9de:	55                   	push   %rbp
    d9df:	48 89 e5             	mov    %rsp,%rbp
    d9e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    d9e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9ea:	48 8b 00             	mov    (%rax),%rax
    d9ed:	5d                   	pop    %rbp
    d9ee:	c3                   	ret

000000000000d9ef <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    d9ef:	55                   	push   %rbp
    d9f0:	48 89 e5             	mov    %rsp,%rbp
    d9f3:	53                   	push   %rbx
    d9f4:	48 83 ec 28          	sub    $0x28,%rsp
    d9f8:	48 89 f0             	mov    %rsi,%rax
    d9fb:	49 89 f8             	mov    %rdi,%r8
    d9fe:	4c 89 c6             	mov    %r8,%rsi
    da01:	4c 89 cf             	mov    %r9,%rdi
    da04:	48 89 c7             	mov    %rax,%rdi
    da07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    da0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    da0f:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    da13:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    da17:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    da1b:	48 89 c7             	mov    %rax,%rdi
    da1e:	e8 bb ff ff ff       	call   d9de <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    da23:	48 89 c3             	mov    %rax,%rbx
    da26:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    da2a:	48 89 c7             	mov    %rax,%rdi
    da2d:	e8 ac ff ff ff       	call   d9de <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    da32:	48 39 c3             	cmp    %rax,%rbx
    da35:	75 22                	jne    da59 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    da37:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    da3b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    da3f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    da43:	48 89 ce             	mov    %rcx,%rsi
    da46:	48 89 c7             	mov    %rax,%rdi
    da49:	e8 42 00 00 00       	call   da90 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    da4e:	85 c0                	test   %eax,%eax
    da50:	75 07                	jne    da59 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    da52:	b8 01 00 00 00       	mov    $0x1,%eax
    da57:	eb 05                	jmp    da5e <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    da59:	b8 00 00 00 00       	mov    $0x0,%eax
    da5e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    da62:	c9                   	leave
    da63:	c3                   	ret

000000000000da64 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    da64:	55                   	push   %rbp
    da65:	48 89 e5             	mov    %rsp,%rbp
    da68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    da70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    da74:	48 8b 10             	mov    (%rax),%rdx
    da77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da7b:	48 89 10             	mov    %rdx,(%rax)
    da7e:	90                   	nop
    da7f:	5d                   	pop    %rbp
    da80:	c3                   	ret
    da81:	90                   	nop

000000000000da82 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    da82:	55                   	push   %rbp
    da83:	48 89 e5             	mov    %rsp,%rbp
    da86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    da8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da8e:	5d                   	pop    %rbp
    da8f:	c3                   	ret

000000000000da90 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    da90:	55                   	push   %rbp
    da91:	48 89 e5             	mov    %rsp,%rbp
    da94:	48 83 ec 30          	sub    $0x30,%rsp
    da98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    da9c:	48 89 d1             	mov    %rdx,%rcx
    da9f:	48 89 f0             	mov    %rsi,%rax
    daa2:	48 89 fa             	mov    %rdi,%rdx
    daa5:	48 89 ca             	mov    %rcx,%rdx
    daa8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    daac:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    dab0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dab4:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    dab8:	48 89 d6             	mov    %rdx,%rsi
    dabb:	48 89 c7             	mov    %rax,%rdi
    dabe:	e8 dd 7a ff ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
    dac3:	48 8b 00             	mov    (%rax),%rax
    dac6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    daca:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    dace:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dad2:	48 8b 40 08          	mov    0x8(%rax),%rax
    dad6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dada:	48 89 ce             	mov    %rcx,%rsi
    dadd:	48 89 c7             	mov    %rax,%rdi
    dae0:	e8 47 fd ff ff       	call   d82c <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    dae5:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    dae8:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    daec:	75 19                	jne    db07 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    daee:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    daf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    daf6:	48 8b 00             	mov    (%rax),%rax
    daf9:	48 89 d6             	mov    %rdx,%rsi
    dafc:	48 89 c7             	mov    %rax,%rdi
    daff:	e8 08 00 00 00       	call   db0c <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    db04:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    db07:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    db0a:	c9                   	leave
    db0b:	c3                   	ret

000000000000db0c <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    db0c:	55                   	push   %rbp
    db0d:	48 89 e5             	mov    %rsp,%rbp
    db10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    db14:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    db18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db1c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    db20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    db24:	b8 00 00 00 80       	mov    $0x80000000,%eax
    db29:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    db2d:	7c 07                	jl     db36 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    db2f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    db34:	eb 1b                	jmp    db51 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    db36:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    db3d:	ff ff ff 
    db40:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    db44:	7f 07                	jg     db4d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    db46:	b8 00 00 00 80       	mov    $0x80000000,%eax
    db4b:	eb 04                	jmp    db51 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    db4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    db51:	5d                   	pop    %rbp
    db52:	c3                   	ret

000000000000db53 <_Z41__static_initialization_and_destruction_0ii>:
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};

} /* namespace vkh */
    db53:	55                   	push   %rbp
    db54:	48 89 e5             	mov    %rsp,%rbp
    db57:	48 83 ec 10          	sub    $0x10,%rsp
    db5b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    db5e:	89 75 f8             	mov    %esi,-0x8(%rbp)
    db61:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    db65:	75 3b                	jne    dba2 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    db67:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    db6e:	75 32                	jne    dba2 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    db70:	48 8d 05 52 0a 02 00 	lea    0x20a52(%rip),%rax        # 2e5c9 <_ZStL8__ioinit>
    db77:	48 89 c7             	mov    %rax,%rdi
    db7a:	e8 71 6b ff ff       	call   46f0 <_ZNSt8ios_base4InitC1Ev@plt>
    db7f:	48 8d 05 ca 08 02 00 	lea    0x208ca(%rip),%rax        # 2e450 <__dso_handle>
    db86:	48 89 c2             	mov    %rax,%rdx
    db89:	48 8d 05 39 0a 02 00 	lea    0x20a39(%rip),%rax        # 2e5c9 <_ZStL8__ioinit>
    db90:	48 89 c6             	mov    %rax,%rsi
    db93:	48 8b 05 2e 04 02 00 	mov    0x2042e(%rip),%rax        # 2dfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    db9a:	48 89 c7             	mov    %rax,%rdi
    db9d:	e8 de 67 ff ff       	call   4380 <__cxa_atexit@plt>
    dba2:	90                   	nop
    dba3:	c9                   	leave
    dba4:	c3                   	ret

000000000000dba5 <_GLOBAL__sub_I_vkh.cpp>:
    dba5:	55                   	push   %rbp
    dba6:	48 89 e5             	mov    %rsp,%rbp
    dba9:	be ff ff 00 00       	mov    $0xffff,%esi
    dbae:	bf 01 00 00 00       	mov    $0x1,%edi
    dbb3:	e8 9b ff ff ff       	call   db53 <_Z41__static_initialization_and_destruction_0ii>
    dbb8:	5d                   	pop    %rbp
    dbb9:	c3                   	ret

000000000000dbba <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    dbba:	55                   	push   %rbp
    dbbb:	48 89 e5             	mov    %rsp,%rbp
    dbbe:	48 83 ec 10          	sub    $0x10,%rsp
    dbc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    dbc6:	e8 55 69 ff ff       	call   4520 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    dbcb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    dbd1:	b9 00 00 00 00       	mov    $0x0,%ecx
    dbd6:	48 8d 05 17 11 01 00 	lea    0x11117(%rip),%rax        # 1ecf4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c>
    dbdd:	48 89 c2             	mov    %rax,%rdx
    dbe0:	be 58 02 00 00       	mov    $0x258,%esi
    dbe5:	bf 20 03 00 00       	mov    $0x320,%edi
    dbea:	e8 1c 87 ff ff       	call   630b <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    dbef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dbf3:	48 89 02             	mov    %rax,(%rdx)
  glfwSetWindowUserPointer(window, this);
    dbf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbfa:	48 8b 00             	mov    (%rax),%rax
    dbfd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc01:	48 89 d6             	mov    %rdx,%rsi
    dc04:	48 89 c7             	mov    %rax,%rdi
    dc07:	e8 b4 65 ff ff       	call   41c0 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    dc0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc10:	48 8b 00             	mov    (%rax),%rax
    dc13:	48 8d 15 86 23 00 00 	lea    0x2386(%rip),%rdx        # ffa0 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>
    dc1a:	48 89 d6             	mov    %rdx,%rsi
    dc1d:	48 89 c7             	mov    %rax,%rdi
    dc20:	e8 bb 6a ff ff       	call   46e0 <glfwSetFramebufferSizeCallback@plt>
}
    dc25:	90                   	nop
    dc26:	c9                   	leave
    dc27:	c3                   	ret

000000000000dc28 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    dc28:	55                   	push   %rbp
    dc29:	48 89 e5             	mov    %rsp,%rbp
    dc2c:	53                   	push   %rbx
    dc2d:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    dc34:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    dc3b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dc3f:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    dc43:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    dc47:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    dc4b:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    dc52:	48 8d 05 9b 10 01 00 	lea    0x1109b(%rip),%rax        # 1ecf4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c>
    dc59:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    dc5d:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    dc64:	48 8d 05 9c 10 01 00 	lea    0x1109c(%rip),%rax        # 1ed07 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f>
    dc6b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    dc6f:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    dc76:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    dc7d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dc81:	48 89 c7             	mov    %rax,%rdi
    dc84:	e8 e9 a0 ff ff       	call   7d72 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    dc89:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dc8d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    dc91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc95:	48 89 c7             	mov    %rax,%rdi
    dc98:	e8 ef 49 00 00       	call   1268c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    dc9d:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    dca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dca8:	48 89 c7             	mov    %rax,%rdi
    dcab:	e8 02 4a 00 00       	call   126b2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    dcb0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    dcb7:	eb 3c                	jmp    dcf5 <_ZN9VulkanApp14createInstanceEv+0xcd>
    dcb9:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    dcc0:	48 89 c7             	mov    %rax,%rdi
    dcc3:	e8 6e 4a 00 00       	call   12736 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    dcc8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    dccc:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    dcd3:	48 8d 50 10          	lea    0x10(%rax),%rdx
    dcd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dcdb:	48 89 c6             	mov    %rax,%rsi
    dcde:	48 89 d7             	mov    %rdx,%rdi
    dce1:	e8 62 4a 00 00       	call   12748 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    dce6:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    dced:	48 89 c7             	mov    %rax,%rdi
    dcf0:	e8 21 4a 00 00       	call   12716 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    dcf5:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    dcfc:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    dd03:	48 89 d6             	mov    %rdx,%rsi
    dd06:	48 89 c7             	mov    %rax,%rdi
    dd09:	e8 cd 49 00 00       	call   126db <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    dd0e:	84 c0                	test   %al,%al
    dd10:	75 a7                	jne    dcb9 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    dd12:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dd16:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    dd1d:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    dd24:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    dd28:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dd2f:	48 89 c7             	mov    %rax,%rdi
    dd32:	e8 bc f8 ff ff       	call   d5f3 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    dd37:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    dd3e:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    dd41:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dd48:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    dd4f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    dd53:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    dd5a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    dd61:	48 83 c0 28          	add    $0x28,%rax
    dd65:	48 89 c7             	mov    %rax,%rdi
    dd68:	e8 7f 4a 00 00       	call   127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    dd6d:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    dd73:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    dd7a:	48 83 c0 28          	add    $0x28,%rax
    dd7e:	48 89 c7             	mov    %rax,%rdi
    dd81:	e8 8a 4a 00 00       	call   12810 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    dd86:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    dd8d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    dd94:	48 83 c0 10          	add    $0x10,%rax
    dd98:	48 89 c7             	mov    %rax,%rdi
    dd9b:	e8 4c 4a 00 00       	call   127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    dda0:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    dda6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ddad:	48 83 c0 10          	add    $0x10,%rax
    ddb1:	48 89 c7             	mov    %rax,%rdi
    ddb4:	e8 7b 4a 00 00       	call   12834 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    ddb9:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    ddc0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ddc7:	be 00 00 00 00       	mov    $0x0,%esi
    ddcc:	48 89 c7             	mov    %rax,%rdi
    ddcf:	e8 7e 85 ff ff       	call   6352 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    ddd4:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    dddb:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    dddf:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dde3:	48 89 c7             	mov    %rax,%rdi
    dde6:	e8 5d 48 00 00       	call   12648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ddeb:	eb 1a                	jmp    de07 <_ZN9VulkanApp14createInstanceEv+0x1df>
    dded:	48 89 c3             	mov    %rax,%rbx
    ddf0:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ddf4:	48 89 c7             	mov    %rax,%rdi
    ddf7:	e8 4c 48 00 00       	call   12648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ddfc:	48 89 d8             	mov    %rbx,%rax
    ddff:	48 89 c7             	mov    %rax,%rdi
    de02:	e8 19 6a ff ff       	call   4820 <_Unwind_Resume@plt>
    de07:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    de0b:	c9                   	leave
    de0c:	c3                   	ret
    de0d:	90                   	nop

000000000000de0e <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    de0e:	55                   	push   %rbp
    de0f:	48 89 e5             	mov    %rsp,%rbp
    de12:	41 54                	push   %r12
    de14:	53                   	push   %rbx
    de15:	48 83 ec 10          	sub    $0x10,%rsp
    de19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    de1d:	e8 1d f6 ff ff       	call   d43f <_ZN3vkh27checkValidationLayerSupportEv>
    de22:	0f b6 c0             	movzbl %al,%eax
    de25:	85 c0                	test   %eax,%eax
    de27:	0f 94 c0             	sete   %al
    de2a:	84 c0                	test   %al,%al
    de2c:	74 3b                	je     de69 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    de2e:	bf 10 00 00 00       	mov    $0x10,%edi
    de33:	e8 68 63 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    de38:	48 89 c3             	mov    %rax,%rbx
    de3b:	48 8d 05 d6 0e 01 00 	lea    0x10ed6(%rip),%rax        # 1ed18 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x40>
    de42:	48 89 c6             	mov    %rax,%rsi
    de45:	48 89 df             	mov    %rbx,%rdi
    de48:	e8 d3 62 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    de4d:	48 8b 05 54 01 02 00 	mov    0x20154(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    de54:	48 89 c2             	mov    %rax,%rdx
    de57:	48 8d 05 e2 fe 01 00 	lea    0x1fee2(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    de5e:	48 89 c6             	mov    %rax,%rsi
    de61:	48 89 df             	mov    %rbx,%rdi
    de64:	e8 57 69 ff ff       	call   47c0 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    de69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de6d:	48 8b 40 08          	mov    0x8(%rax),%rax
    de71:	48 89 c7             	mov    %rax,%rdi
    de74:	e8 30 f8 ff ff       	call   d6a9 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    de79:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    de7d:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    de81:	eb 16                	jmp    de99 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    de83:	49 89 c4             	mov    %rax,%r12
    de86:	48 89 df             	mov    %rbx,%rdi
    de89:	e8 22 64 ff ff       	call   42b0 <__cxa_free_exception@plt>
    de8e:	4c 89 e0             	mov    %r12,%rax
    de91:	48 89 c7             	mov    %rax,%rdi
    de94:	e8 87 69 ff ff       	call   4820 <_Unwind_Resume@plt>
}
    de99:	48 83 c4 10          	add    $0x10,%rsp
    de9d:	5b                   	pop    %rbx
    de9e:	41 5c                	pop    %r12
    dea0:	5d                   	pop    %rbp
    dea1:	c3                   	ret

000000000000dea2 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    dea2:	55                   	push   %rbp
    dea3:	48 89 e5             	mov    %rsp,%rbp
    dea6:	48 83 ec 10          	sub    $0x10,%rsp
    deaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    deae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deb2:	48 8b 08             	mov    (%rax),%rcx
    deb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deb9:	48 8b 40 08          	mov    0x8(%rax),%rax
    debd:	ba 00 00 00 00       	mov    $0x0,%edx
    dec2:	48 89 ce             	mov    %rcx,%rsi
    dec5:	48 89 c7             	mov    %rax,%rdi
    dec8:	e8 b0 85 ff ff       	call   647d <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    decd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ded1:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    ded5:	90                   	nop
    ded6:	c9                   	leave
    ded7:	c3                   	ret

000000000000ded8 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    ded8:	55                   	push   %rbp
    ded9:	48 89 e5             	mov    %rsp,%rbp
    dedc:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    dee3:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    deea:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    def1:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    def8:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    deff:	48 89 d6             	mov    %rdx,%rsi
    df02:	48 89 c7             	mov    %rax,%rdi
    df05:	e8 35 a1 ff ff       	call   803f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    df0a:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    df10:	83 f8 02             	cmp    $0x2,%eax
    df13:	0f 94 c0             	sete   %al
}
    df16:	c9                   	leave
    df17:	c3                   	ret

000000000000df18 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    df18:	55                   	push   %rbp
    df19:	48 89 e5             	mov    %rsp,%rbp
    df1c:	53                   	push   %rbx
    df1d:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    df24:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    df2b:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    df32:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    df39:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    df3d:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    df44:	48 89 d6             	mov    %rdx,%rsi
    df47:	48 89 c7             	mov    %rax,%rdi
    df4a:	e8 19 a2 ff ff       	call   8168 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    df4f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    df53:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    df5a:	48 89 d6             	mov    %rdx,%rsi
    df5d:	48 89 c7             	mov    %rax,%rdi
    df60:	e8 37 a3 ff ff       	call   829c <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    df65:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    df6c:	48 8b 50 48          	mov    0x48(%rax),%rdx
    df70:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    df77:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    df7e:	48 89 ce             	mov    %rcx,%rsi
    df81:	48 89 c7             	mov    %rax,%rdi
    df84:	e8 4c a4 ff ff       	call   83d5 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    df89:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    df90:	00 
    df91:	e9 c5 00 00 00       	jmp    e05b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    df96:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    df9a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    df9e:	48 89 d6             	mov    %rdx,%rsi
    dfa1:	48 89 c7             	mov    %rax,%rdi
    dfa4:	e8 51 b4 ff ff       	call   93fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    dfa9:	48 89 c7             	mov    %rax,%rdi
    dfac:	e8 d5 48 00 00       	call   12886 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    dfb1:	84 c0                	test   %al,%al
    dfb3:	74 48                	je     dffd <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    dfb5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dfb9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    dfbd:	48 89 d6             	mov    %rdx,%rsi
    dfc0:	48 89 c7             	mov    %rax,%rdi
    dfc3:	e8 32 b4 ff ff       	call   93fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    dfc8:	48 89 c7             	mov    %rax,%rdi
    dfcb:	e8 b6 48 00 00       	call   12886 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    dfd0:	84 c0                	test   %al,%al
    dfd2:	74 29                	je     dffd <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    dfd4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dfd8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dfdf:	48 89 d6             	mov    %rdx,%rsi
    dfe2:	48 89 c7             	mov    %rax,%rdi
    dfe5:	e8 10 b4 ff ff       	call   93fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    dfea:	48 89 c7             	mov    %rax,%rdi
    dfed:	e8 94 48 00 00       	call   12886 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    dff2:	84 c0                	test   %al,%al
    dff4:	74 07                	je     dffd <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    dff6:	b8 01 00 00 00       	mov    $0x1,%eax
    dffb:	eb 05                	jmp    e002 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    dffd:	b8 00 00 00 00       	mov    $0x0,%eax
    e002:	84 c0                	test   %al,%al
    e004:	74 50                	je     e056 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    e006:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e00a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    e00d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e011:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e015:	48 89 d6             	mov    %rdx,%rsi
    e018:	48 89 c7             	mov    %rax,%rdi
    e01b:	e8 da b3 ff ff       	call   93fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    e020:	48 89 c7             	mov    %rax,%rdi
    e023:	e8 78 48 00 00       	call   128a0 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    e028:	48 89 c2             	mov    %rax,%rdx
    e02b:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    e02f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e033:	48 89 ce             	mov    %rcx,%rsi
    e036:	48 89 c7             	mov    %rax,%rdi
    e039:	e8 94 48 00 00       	call   128d2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    e03e:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    e042:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e049:	48 89 d6             	mov    %rdx,%rsi
    e04c:	48 89 c7             	mov    %rax,%rdi
    e04f:	e8 d4 48 00 00       	call   12928 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    e054:	eb 2f                	jmp    e085 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    e056:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    e05b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e05f:	48 89 c7             	mov    %rax,%rdi
    e062:	e8 f1 47 00 00       	call   12858 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    e067:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    e06b:	0f 92 c0             	setb   %al
    e06e:	84 c0                	test   %al,%al
    e070:	0f 85 20 ff ff ff    	jne    df96 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    e076:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e07d:	48 89 c7             	mov    %rax,%rdi
    e080:	e8 65 41 00 00       	call   121ea <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    e085:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e08c:	48 89 c7             	mov    %rax,%rdi
    e08f:	e8 66 b2 ff ff       	call   92fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e094:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e098:	48 89 c7             	mov    %rax,%rdi
    e09b:	e8 5a b2 ff ff       	call   92fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e0a0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e0a4:	48 89 c7             	mov    %rax,%rdi
    e0a7:	e8 4e b2 ff ff       	call   92fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e0ac:	eb 3f                	jmp    e0ed <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    e0ae:	48 89 c3             	mov    %rax,%rbx
    e0b1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e0b8:	48 89 c7             	mov    %rax,%rdi
    e0bb:	e8 3a b2 ff ff       	call   92fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e0c0:	eb 03                	jmp    e0c5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    e0c2:	48 89 c3             	mov    %rax,%rbx
    e0c5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e0c9:	48 89 c7             	mov    %rax,%rdi
    e0cc:	e8 29 b2 ff ff       	call   92fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e0d1:	eb 03                	jmp    e0d6 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    e0d3:	48 89 c3             	mov    %rax,%rbx
    e0d6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e0da:	48 89 c7             	mov    %rax,%rdi
    e0dd:	e8 18 b2 ff ff       	call   92fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e0e2:	48 89 d8             	mov    %rbx,%rax
    e0e5:	48 89 c7             	mov    %rax,%rdi
    e0e8:	e8 33 67 ff ff       	call   4820 <_Unwind_Resume@plt>
    e0ed:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e0f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e0f8:	c9                   	leave
    e0f9:	c3                   	ret

000000000000e0fa <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    e0fa:	55                   	push   %rbp
    e0fb:	48 89 e5             	mov    %rsp,%rbp
    e0fe:	41 54                	push   %r12
    e100:	53                   	push   %rbx
    e101:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    e108:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    e10f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e116:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e11a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e11e:	48 89 d6             	mov    %rdx,%rsi
    e121:	48 89 c7             	mov    %rax,%rdi
    e124:	e8 a7 9d ff ff       	call   7ed0 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    e129:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e130:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    e131:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e135:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    e139:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    e13d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e141:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e145:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e149:	48 89 c7             	mov    %rax,%rdi
    e14c:	e8 0b 48 00 00       	call   1295c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    e151:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    e158:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e15c:	48 89 c7             	mov    %rax,%rdi
    e15f:	e8 1e 48 00 00       	call   12982 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    e164:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e16b:	e9 dd 00 00 00       	jmp    e24d <_ZN9VulkanApp12createDeviceEv+0x153>
    e170:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    e177:	48 89 c7             	mov    %rax,%rdi
    e17a:	e8 87 48 00 00       	call   12a06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    e17f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    e183:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e187:	48 8b 10             	mov    (%rax),%rdx
    e18a:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e191:	48 89 d6             	mov    %rdx,%rsi
    e194:	48 89 c7             	mov    %rax,%rdi
    e197:	e8 3c fd ff ff       	call   ded8 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    e19c:	84 c0                	test   %al,%al
    e19e:	74 41                	je     e1e1 <_ZN9VulkanApp12createDeviceEv+0xe7>
    e1a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e1a4:	48 8b 10             	mov    (%rax),%rdx
    e1a7:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e1ae:	48 89 d6             	mov    %rdx,%rsi
    e1b1:	48 89 c7             	mov    %rax,%rdi
    e1b4:	e8 f9 02 00 00       	call   e4b2 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    e1b9:	84 c0                	test   %al,%al
    e1bb:	74 24                	je     e1e1 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    e1bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e1c1:	48 8b 10             	mov    (%rax),%rdx
    e1c4:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e1cb:	48 89 d6             	mov    %rdx,%rsi
    e1ce:	48 89 c7             	mov    %rax,%rdi
    e1d1:	e8 16 06 00 00       	call   e7ec <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    e1d6:	84 c0                	test   %al,%al
    e1d8:	74 07                	je     e1e1 <_ZN9VulkanApp12createDeviceEv+0xe7>
    e1da:	b8 01 00 00 00       	mov    $0x1,%eax
    e1df:	eb 05                	jmp    e1e6 <_ZN9VulkanApp12createDeviceEv+0xec>
    e1e1:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    e1e6:	84 c0                	test   %al,%al
    e1e8:	74 54                	je     e23e <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    e1ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e1ee:	48 8b 10             	mov    (%rax),%rdx
    e1f1:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    e1f8:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    e1ff:	48 89 ce             	mov    %rcx,%rsi
    e202:	48 89 c7             	mov    %rax,%rdi
    e205:	e8 0e fd ff ff       	call   df18 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    e20a:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    e211:	48 89 c7             	mov    %rax,%rdi
    e214:	e8 ff 47 00 00       	call   12a18 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    e219:	84 c0                	test   %al,%al
    e21b:	74 21                	je     e23e <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    e21d:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    e224:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e228:	48 89 d6             	mov    %rdx,%rsi
    e22b:	48 89 c7             	mov    %rax,%rdi
    e22e:	e8 09 40 00 00       	call   1223c <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    e233:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e237:	48 8b 00             	mov    (%rax),%rax
    e23a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    e23e:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    e245:	48 89 c7             	mov    %rax,%rdi
    e248:	e8 99 47 00 00       	call   129e6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    e24d:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    e254:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    e25b:	48 89 d6             	mov    %rdx,%rsi
    e25e:	48 89 c7             	mov    %rax,%rdi
    e261:	e8 45 47 00 00       	call   129ab <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e266:	84 c0                	test   %al,%al
    e268:	0f 85 02 ff ff ff    	jne    e170 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    e26e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    e273:	75 3b                	jne    e2b0 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    e275:	bf 10 00 00 00       	mov    $0x10,%edi
    e27a:	e8 21 5f ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    e27f:	48 89 c3             	mov    %rax,%rbx
    e282:	48 8d 05 b7 0a 01 00 	lea    0x10ab7(%rip),%rax        # 1ed40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    e289:	48 89 c6             	mov    %rax,%rsi
    e28c:	48 89 df             	mov    %rbx,%rdi
    e28f:	e8 8c 5e ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    e294:	48 8b 05 0d fd 01 00 	mov    0x1fd0d(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e29b:	48 89 c2             	mov    %rax,%rdx
    e29e:	48 8d 05 9b fa 01 00 	lea    0x1fa9b(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e2a5:	48 89 c6             	mov    %rax,%rsi
    e2a8:	48 89 df             	mov    %rbx,%rdi
    e2ab:	e8 10 65 ff ff       	call   47c0 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    e2b0:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e2b4:	48 89 c7             	mov    %rax,%rdi
    e2b7:	e8 aa 3f 00 00       	call   12266 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    e2bc:	8b 00                	mov    (%rax),%eax
    e2be:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    e2c1:	f3 0f 10 05 3f 0f 01 	movss  0x10f3f(%rip),%xmm0        # 1f208 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    e2c8:	00 
    e2c9:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    e2ce:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2d2:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    e2d9:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    e2e0:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    e2e5:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    e2ec:	00 00 00 
  queueInfo.pNext = nullptr;
    e2ef:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    e2f6:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    e2fa:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e2fd:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    e303:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    e30a:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    e30d:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    e311:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    e315:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    e31c:	b8 00 00 00 00       	mov    $0x0,%eax
    e321:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    e326:	48 89 d7             	mov    %rdx,%rdi
    e329:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    e32c:	48 89 fa             	mov    %rdi,%rdx
    e32f:	89 02                	mov    %eax,(%rdx)
    e331:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    e335:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e339:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    e340:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    e347:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    e34e:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    e355:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    e35c:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    e35d:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    e364:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    e367:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    e36e:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    e372:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    e379:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    e37c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e383:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    e38a:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e391:	48 05 90 00 00 00    	add    $0x90,%rax
    e397:	48 89 c7             	mov    %rax,%rdi
    e39a:	e8 4d 44 00 00       	call   127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    e39f:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    e3a5:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e3ac:	48 05 90 00 00 00    	add    $0x90,%rax
    e3b2:	48 89 c7             	mov    %rax,%rdi
    e3b5:	e8 7a 44 00 00       	call   12834 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    e3ba:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    e3c1:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    e3c8:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    e3cf:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e3d6:	48 83 c0 28          	add    $0x28,%rax
    e3da:	48 89 c7             	mov    %rax,%rdi
    e3dd:	e8 0a 44 00 00       	call   127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    e3e2:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    e3e8:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e3ef:	48 83 c0 28          	add    $0x28,%rax
    e3f3:	48 89 c7             	mov    %rax,%rdi
    e3f6:	e8 15 44 00 00       	call   12810 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    e3fb:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    e402:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    e409:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e40d:	ba 00 00 00 00       	mov    $0x0,%edx
    e412:	48 89 ce             	mov    %rcx,%rsi
    e415:	48 89 c7             	mov    %rax,%rdi
    e418:	e8 c8 7f ff ff       	call   63e5 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    e41d:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    e424:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    e428:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e42f:	48 8d 50 60          	lea    0x60(%rax),%rdx
    e433:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e43a:	48 8b 40 50          	mov    0x50(%rax),%rax
    e43e:	8b 75 dc             	mov    -0x24(%rbp),%esi
    e441:	48 89 d1             	mov    %rdx,%rcx
    e444:	ba 00 00 00 00       	mov    $0x0,%edx
    e449:	48 89 c7             	mov    %rax,%rdi
    e44c:	e8 bf 61 ff ff       	call   4610 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    e451:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e458:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e45c:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    e460:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e467:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e46a:	89 50 68             	mov    %edx,0x68(%rax)
}
    e46d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e471:	48 89 c7             	mov    %rax,%rdi
    e474:	e8 81 ab ff ff       	call   8ffa <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    e479:	eb 2a                	jmp    e4a5 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    e47b:	49 89 c4             	mov    %rax,%r12
    e47e:	48 89 df             	mov    %rbx,%rdi
    e481:	e8 2a 5e ff ff       	call   42b0 <__cxa_free_exception@plt>
    e486:	4c 89 e3             	mov    %r12,%rbx
    e489:	eb 03                	jmp    e48e <_ZN9VulkanApp12createDeviceEv+0x394>
}
    e48b:	48 89 c3             	mov    %rax,%rbx
    e48e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e492:	48 89 c7             	mov    %rax,%rdi
    e495:	e8 60 ab ff ff       	call   8ffa <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    e49a:	48 89 d8             	mov    %rbx,%rax
    e49d:	48 89 c7             	mov    %rax,%rdi
    e4a0:	e8 7b 63 ff ff       	call   4820 <_Unwind_Resume@plt>
    e4a5:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    e4ac:	5b                   	pop    %rbx
    e4ad:	41 5c                	pop    %r12
    e4af:	5d                   	pop    %rbp
    e4b0:	c3                   	ret
    e4b1:	90                   	nop

000000000000e4b2 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    e4b2:	55                   	push   %rbp
    e4b3:	48 89 e5             	mov    %rsp,%rbp
    e4b6:	53                   	push   %rbx
    e4b7:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    e4be:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    e4c5:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    e4cc:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e4d3:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    e4da:	ba 00 00 00 00       	mov    $0x0,%edx
    e4df:	48 89 ce             	mov    %rcx,%rsi
    e4e2:	48 89 c7             	mov    %rax,%rdi
    e4e5:	e8 11 97 ff ff       	call   7bfb <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    e4ea:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e4f1:	48 89 c7             	mov    %rax,%rdi
    e4f4:	e8 e9 3d 00 00       	call   122e2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    e4f9:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e500:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e504:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e508:	48 89 c7             	mov    %rax,%rdi
    e50b:	e8 1e 46 00 00       	call   12b2e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    e510:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    e517:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e51b:	48 89 c7             	mov    %rax,%rdi
    e51e:	e8 31 46 00 00       	call   12b54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    e523:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    e52a:	e9 8c 00 00 00       	jmp    e5bb <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    e52f:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e536:	48 89 c7             	mov    %rax,%rdi
    e539:	e8 9e 46 00 00       	call   12bdc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    e53e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    e542:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    e549:	48 89 c7             	mov    %rax,%rdi
    e54c:	e8 df 62 ff ff       	call   4830 <_ZNSaIcEC1Ev@plt>
    e551:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e555:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    e55c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e563:	48 89 ce             	mov    %rcx,%rsi
    e566:	48 89 c7             	mov    %rax,%rdi
    e569:	e8 16 69 ff ff       	call   4e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e56e:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    e575:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e57c:	48 89 d6             	mov    %rdx,%rsi
    e57f:	48 89 c7             	mov    %rax,%rdi
    e582:	e8 67 46 00 00       	call   12bee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    e587:	8b 10                	mov    (%rax),%edx
    e589:	83 c2 01             	add    $0x1,%edx
    e58c:	89 10                	mov    %edx,(%rax)
    e58e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e595:	48 89 c7             	mov    %rax,%rdi
    e598:	e8 b3 5c ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e59d:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    e5a4:	48 89 c7             	mov    %rax,%rdi
    e5a7:	e8 14 5f ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    e5ac:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e5b3:	48 89 c7             	mov    %rax,%rdi
    e5b6:	e8 fd 45 00 00       	call   12bb8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    e5bb:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    e5c2:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e5c9:	48 89 d6             	mov    %rdx,%rsi
    e5cc:	48 89 c7             	mov    %rax,%rdi
    e5cf:	e8 a9 45 00 00       	call   12b7d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e5d4:	84 c0                	test   %al,%al
    e5d6:	0f 85 53 ff ff ff    	jne    e52f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    e5dc:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    e5e3:	48 05 90 00 00 00    	add    $0x90,%rax
    e5e9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e5ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e5f1:	48 89 c7             	mov    %rax,%rdi
    e5f4:	e8 93 40 00 00       	call   1268c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    e5f9:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    e600:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e604:	48 89 c7             	mov    %rax,%rdi
    e607:	e8 a6 40 00 00       	call   126b2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    e60c:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    e613:	e9 ed 00 00 00       	jmp    e705 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    e618:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    e61f:	48 89 c7             	mov    %rax,%rdi
    e622:	e8 0f 41 00 00       	call   12736 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    e627:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    e62b:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    e62f:	48 89 c7             	mov    %rax,%rdi
    e632:	e8 f9 61 ff ff       	call   4830 <_ZNSaIcEC1Ev@plt>
    e637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e63b:	48 8b 08             	mov    (%rax),%rcx
    e63e:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    e642:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    e649:	48 89 ce             	mov    %rcx,%rsi
    e64c:	48 89 c7             	mov    %rax,%rdi
    e64f:	e8 30 68 ff ff       	call   4e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e654:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    e65b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e662:	48 89 d6             	mov    %rdx,%rsi
    e665:	48 89 c7             	mov    %rax,%rdi
    e668:	e8 81 45 00 00       	call   12bee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    e66d:	8b 10                	mov    (%rax),%edx
    e66f:	83 c2 01             	add    $0x1,%edx
    e672:	89 10                	mov    %edx,(%rax)
    e674:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    e67b:	48 89 c7             	mov    %rax,%rdi
    e67e:	e8 cd 5b ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e683:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    e687:	48 89 c7             	mov    %rax,%rdi
    e68a:	e8 31 5e ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    e68f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e693:	48 89 c7             	mov    %rax,%rdi
    e696:	e8 95 61 ff ff       	call   4830 <_ZNSaIcEC1Ev@plt>
    e69b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e69f:	48 8b 08             	mov    (%rax),%rcx
    e6a2:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    e6a6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e6aa:	48 89 ce             	mov    %rcx,%rsi
    e6ad:	48 89 c7             	mov    %rax,%rdi
    e6b0:	e8 cf 67 ff ff       	call   4e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e6b5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    e6b9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e6c0:	48 89 d6             	mov    %rdx,%rsi
    e6c3:	48 89 c7             	mov    %rax,%rdi
    e6c6:	e8 23 45 00 00       	call   12bee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    e6cb:	8b 00                	mov    (%rax),%eax
    e6cd:	83 f8 01             	cmp    $0x1,%eax
    e6d0:	0f 96 c3             	setbe  %bl
    e6d3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e6d7:	48 89 c7             	mov    %rax,%rdi
    e6da:	e8 71 5b ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e6df:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e6e3:	48 89 c7             	mov    %rax,%rdi
    e6e6:	e8 d5 5d ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    e6eb:	84 db                	test   %bl,%bl
    e6ed:	74 07                	je     e6f6 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    e6ef:	bb 00 00 00 00       	mov    $0x0,%ebx
    e6f4:	eb 35                	jmp    e72b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    e6f6:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    e6fd:	48 89 c7             	mov    %rax,%rdi
    e700:	e8 11 40 00 00       	call   12716 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    e705:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    e70c:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    e713:	48 89 d6             	mov    %rdx,%rsi
    e716:	48 89 c7             	mov    %rax,%rdi
    e719:	e8 bd 3f 00 00       	call   126db <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e71e:	84 c0                	test   %al,%al
    e720:	0f 85 f2 fe ff ff    	jne    e618 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    e726:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    e72b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e732:	48 89 c7             	mov    %rax,%rdi
    e735:	e8 c4 3b 00 00       	call   122fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    e73a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e741:	48 89 c7             	mov    %rax,%rdi
    e744:	e8 27 a6 ff ff       	call   8d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    e749:	89 d8                	mov    %ebx,%eax
    e74b:	e9 96 00 00 00       	jmp    e7e6 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    e750:	48 89 c3             	mov    %rax,%rbx
    e753:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e75a:	48 89 c7             	mov    %rax,%rdi
    e75d:	e8 ee 5a ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e762:	eb 03                	jmp    e767 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    e764:	48 89 c3             	mov    %rax,%rbx
    e767:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    e76e:	48 89 c7             	mov    %rax,%rdi
    e771:	e8 4a 5d ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    e776:	eb 45                	jmp    e7bd <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    e778:	48 89 c3             	mov    %rax,%rbx
    e77b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    e782:	48 89 c7             	mov    %rax,%rdi
    e785:	e8 c6 5a ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e78a:	eb 03                	jmp    e78f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    e78c:	48 89 c3             	mov    %rax,%rbx
    e78f:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    e793:	48 89 c7             	mov    %rax,%rdi
    e796:	e8 25 5d ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    e79b:	eb 20                	jmp    e7bd <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    e79d:	48 89 c3             	mov    %rax,%rbx
    e7a0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e7a4:	48 89 c7             	mov    %rax,%rdi
    e7a7:	e8 a4 5a ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e7ac:	eb 03                	jmp    e7b1 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    e7ae:	48 89 c3             	mov    %rax,%rbx
    e7b1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e7b5:	48 89 c7             	mov    %rax,%rdi
    e7b8:	e8 03 5d ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
}
    e7bd:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e7c4:	48 89 c7             	mov    %rax,%rdi
    e7c7:	e8 32 3b 00 00       	call   122fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    e7cc:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e7d3:	48 89 c7             	mov    %rax,%rdi
    e7d6:	e8 95 a5 ff ff       	call   8d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    e7db:	48 89 d8             	mov    %rbx,%rax
    e7de:	48 89 c7             	mov    %rax,%rdi
    e7e1:	e8 3a 60 ff ff       	call   4820 <_Unwind_Resume@plt>
    e7e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e7ea:	c9                   	leave
    e7eb:	c3                   	ret

000000000000e7ec <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    e7ec:	55                   	push   %rbp
    e7ed:	48 89 e5             	mov    %rsp,%rbp
    e7f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    e7f8:	b8 01 00 00 00       	mov    $0x1,%eax
}
    e7fd:	5d                   	pop    %rbp
    e7fe:	c3                   	ret
    e7ff:	90                   	nop

000000000000e800 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    e800:	55                   	push   %rbp
    e801:	48 89 e5             	mov    %rsp,%rbp
    e804:	41 54                	push   %r12
    e806:	53                   	push   %rbx
    e807:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    e80e:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    e815:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    e81c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e823:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e827:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e82e:	48 8b 48 58          	mov    0x58(%rax),%rcx
    e832:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e836:	48 89 ce             	mov    %rcx,%rsi
    e839:	48 89 c7             	mov    %rax,%rdi
    e83c:	e8 04 9d ff ff       	call   8545 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    e841:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e848:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e84c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e853:	48 8b 48 58          	mov    0x58(%rax),%rcx
    e857:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e85e:	48 89 ce             	mov    %rcx,%rsi
    e861:	48 89 c7             	mov    %rax,%rdi
    e864:	e8 8a 9d ff ff       	call   85f3 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    e869:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e870:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e874:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e87b:	48 8b 48 58          	mov    0x58(%rax),%rcx
    e87f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e886:	48 89 ce             	mov    %rcx,%rsi
    e889:	48 89 c7             	mov    %rax,%rdi
    e88c:	e8 d9 9e ff ff       	call   876a <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    e891:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e898:	48 89 c6             	mov    %rax,%rsi
    e89b:	b8 00 00 00 00       	mov    $0x0,%eax
    e8a0:	ba 0d 00 00 00       	mov    $0xd,%edx
    e8a5:	48 89 f7             	mov    %rsi,%rdi
    e8a8:	48 89 d1             	mov    %rdx,%rcx
    e8ab:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    e8ae:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e8b5:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    e8bb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e8c2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e8c9:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    e8ca:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e8d1:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e8d5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e8dc:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    e8e0:	8b 45 80             	mov    -0x80(%rbp),%eax
    e8e3:	83 c0 01             	add    $0x1,%eax
    e8e6:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    e8e9:	8b 45 84             	mov    -0x7c(%rbp),%eax
    e8ec:	85 c0                	test   %eax,%eax
    e8ee:	74 0e                	je     e8fe <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    e8f0:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    e8f3:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    e8f6:	73 06                	jae    e8fe <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    e8f8:	8b 45 84             	mov    -0x7c(%rbp),%eax
    e8fb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    e8fe:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e905:	8b 55 ec             	mov    -0x14(%rbp),%edx
    e908:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    e90b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e912:	48 89 c7             	mov    %rax,%rdi
    e915:	e8 d8 43 00 00       	call   12cf2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    e91a:	84 c0                	test   %al,%al
    e91c:	74 3b                	je     e959 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    e91e:	bf 10 00 00 00       	mov    $0x10,%edi
    e923:	e8 78 58 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    e928:	48 89 c3             	mov    %rax,%rbx
    e92b:	48 8d 05 32 04 01 00 	lea    0x10432(%rip),%rax        # 1ed64 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8c>
    e932:	48 89 c6             	mov    %rax,%rsi
    e935:	48 89 df             	mov    %rbx,%rdi
    e938:	e8 e3 57 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    e93d:	48 8b 05 64 f6 01 00 	mov    0x1f664(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e944:	48 89 c2             	mov    %rax,%rdx
    e947:	48 8d 05 f2 f3 01 00 	lea    0x1f3f2(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e94e:	48 89 c6             	mov    %rax,%rsi
    e951:	48 89 df             	mov    %rbx,%rdi
    e954:	e8 67 5e ff ff       	call   47c0 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    e959:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e960:	be 00 00 00 00       	mov    $0x0,%esi
    e965:	48 89 c7             	mov    %rax,%rdi
    e968:	e8 c7 43 00 00       	call   12d34 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    e96d:	8b 10                	mov    (%rax),%edx
    e96f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e976:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    e979:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e980:	be 00 00 00 00       	mov    $0x0,%esi
    e985:	48 89 c7             	mov    %rax,%rdi
    e988:	e8 a7 43 00 00       	call   12d34 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    e98d:	8b 50 04             	mov    0x4(%rax),%edx
    e990:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e997:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    e99a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e9a1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e9a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9a9:	48 89 c7             	mov    %rax,%rdi
    e9ac:	e8 a3 43 00 00       	call   12d54 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    e9b1:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    e9b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9bc:	48 89 c7             	mov    %rax,%rdi
    e9bf:	e8 b6 43 00 00       	call   12d7a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    e9c4:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    e9cb:	eb 5b                	jmp    ea28 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    e9cd:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    e9d4:	48 89 c7             	mov    %rax,%rdi
    e9d7:	e8 22 44 00 00       	call   12dfe <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    e9dc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    e9e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e9e4:	8b 00                	mov    (%rax),%eax
    e9e6:	83 f8 2b             	cmp    $0x2b,%eax
    e9e9:	75 2e                	jne    ea19 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    e9eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e9ef:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    e9f2:	85 c0                	test   %eax,%eax
    e9f4:	75 23                	jne    ea19 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    e9f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e9fa:	8b 10                	mov    (%rax),%edx
    e9fc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ea03:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    ea06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ea0a:	8b 50 04             	mov    0x4(%rax),%edx
    ea0d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ea14:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    ea17:	eb 2c                	jmp    ea45 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    ea19:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    ea20:	48 89 c7             	mov    %rax,%rdi
    ea23:	e8 b6 43 00 00       	call   12dde <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    ea28:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    ea2f:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    ea36:	48 89 d6             	mov    %rdx,%rsi
    ea39:	48 89 c7             	mov    %rax,%rdi
    ea3c:	e8 62 43 00 00       	call   12da3 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    ea41:	84 c0                	test   %al,%al
    ea43:	75 88                	jne    e9cd <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    ea45:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ea4c:	8b 50 24             	mov    0x24(%rax),%edx
    ea4f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ea56:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    ea59:	8b 45 88             	mov    -0x78(%rbp),%eax
    ea5c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    ea5f:	8b 45 8c             	mov    -0x74(%rbp),%eax
    ea62:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    ea65:	8b 45 98             	mov    -0x68(%rbp),%eax
    ea68:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    ea6b:	73 06                	jae    ea73 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    ea6d:	8b 45 98             	mov    -0x68(%rbp),%eax
    ea70:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    ea73:	8b 45 9c             	mov    -0x64(%rbp),%eax
    ea76:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    ea79:	73 06                	jae    ea81 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    ea7b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    ea7e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    ea81:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ea88:	8b 55 e8             	mov    -0x18(%rbp),%edx
    ea8b:	89 50 2c             	mov    %edx,0x2c(%rax)
    ea8e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ea95:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    ea98:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    ea9b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    eaa2:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    eaa9:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    eaad:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    eab1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eab8:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    eabf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eac6:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  // auto  = VK_PRESENT_MODE_IMMEDIATE_KHR;
  for (const auto &presentMode : surfacePresentModes) {
    eacd:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ead4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ead8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eadc:	48 89 c7             	mov    %rax,%rdi
    eadf:	e8 2c 43 00 00       	call   12e10 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    eae4:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    eaeb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eaef:	48 89 c7             	mov    %rax,%rdi
    eaf2:	e8 3f 43 00 00       	call   12e36 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    eaf7:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    eafe:	eb 52                	jmp    eb52 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x352>
    eb00:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    eb07:	48 89 c7             	mov    %rax,%rdi
    eb0a:	e8 ab 43 00 00       	call   12eba <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    eb0f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    if (presentMode == preferredPresentMode) {
    eb13:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    eb17:	8b 10                	mov    (%rax),%edx
    eb19:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    eb20:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
    eb26:	39 c2                	cmp    %eax,%edx
    eb28:	75 19                	jne    eb43 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    eb2a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    eb31:	8b 90 88 00 00 00    	mov    0x88(%rax),%edx
    eb37:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eb3e:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    eb41:	eb 2c                	jmp    eb6f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x36f>
  for (const auto &presentMode : surfacePresentModes) {
    eb43:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    eb4a:	48 89 c7             	mov    %rax,%rdi
    eb4d:	e8 48 43 00 00       	call   12e9a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    eb52:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    eb59:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    eb60:	48 89 d6             	mov    %rdx,%rsi
    eb63:	48 89 c7             	mov    %rax,%rdi
    eb66:	e8 f4 42 00 00       	call   12e5f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    eb6b:	84 c0                	test   %al,%al
    eb6d:	75 91                	jne    eb00 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x300>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    eb6f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eb76:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    eb7d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eb84:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    eb8b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eb92:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    eb99:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eba0:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    eba7:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    eba8:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    ebab:	83 e0 01             	and    $0x1,%eax
    ebae:	85 c0                	test   %eax,%eax
    ebb0:	74 1e                	je     ebd0 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3d0>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    ebb2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ebb9:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    ebc0:	8b 45 ac             	mov    -0x54(%rbp),%eax
    ebc3:	83 e0 01             	and    $0x1,%eax
    ebc6:	85 c0                	test   %eax,%eax
    ebc8:	0f 84 9b 00 00 00    	je     ec69 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x469>
    ebce:	eb 3b                	jmp    ec0b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x40b>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ebd0:	bf 10 00 00 00       	mov    $0x10,%edi
    ebd5:	e8 c6 55 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    ebda:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    ebdd:	48 8d 05 a4 01 01 00 	lea    0x101a4(%rip),%rax        # 1ed88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    ebe4:	48 89 c6             	mov    %rax,%rsi
    ebe7:	48 89 df             	mov    %rbx,%rdi
    ebea:	e8 31 55 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ebef:	48 8b 05 b2 f3 01 00 	mov    0x1f3b2(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ebf6:	48 89 c2             	mov    %rax,%rdx
    ebf9:	48 8d 05 40 f1 01 00 	lea    0x1f140(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ec00:	48 89 c6             	mov    %rax,%rsi
    ec03:	48 89 df             	mov    %rbx,%rdi
    ec06:	e8 b5 5b ff ff       	call   47c0 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    ec0b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec12:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    ec19:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec20:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    ec27:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec2e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ec35:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    ec36:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec3d:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    ec44:	00 

  return swapchainCreateInfo;
    ec45:	90                   	nop
}
    ec46:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ec4d:	48 89 c7             	mov    %rax,%rdi
    ec50:	e8 b9 aa ff ff       	call   970e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    ec55:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ec5c:	48 89 c7             	mov    %rax,%rdi
    ec5f:	e8 46 a9 ff ff       	call   95aa <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    ec64:	e9 9c 00 00 00       	jmp    ed05 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x505>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    ec69:	bf 10 00 00 00       	mov    $0x10,%edi
    ec6e:	e8 2d 55 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    ec73:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    ec76:	48 8d 05 43 01 01 00 	lea    0x10143(%rip),%rax        # 1edc0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe8>
    ec7d:	48 89 c6             	mov    %rax,%rsi
    ec80:	48 89 df             	mov    %rbx,%rdi
    ec83:	e8 98 54 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    ec88:	48 8b 05 19 f3 01 00 	mov    0x1f319(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ec8f:	48 89 c2             	mov    %rax,%rdx
    ec92:	48 8d 05 a7 f0 01 00 	lea    0x1f0a7(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ec99:	48 89 c6             	mov    %rax,%rsi
    ec9c:	48 89 df             	mov    %rbx,%rdi
    ec9f:	e8 1c 5b ff ff       	call   47c0 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    eca4:	49 89 c4             	mov    %rax,%r12
    eca7:	48 89 df             	mov    %rbx,%rdi
    ecaa:	e8 01 56 ff ff       	call   42b0 <__cxa_free_exception@plt>
    ecaf:	4c 89 e3             	mov    %r12,%rbx
    ecb2:	eb 23                	jmp    ecd7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ecb4:	49 89 c4             	mov    %rax,%r12
    ecb7:	48 89 df             	mov    %rbx,%rdi
    ecba:	e8 f1 55 ff ff       	call   42b0 <__cxa_free_exception@plt>
    ecbf:	4c 89 e3             	mov    %r12,%rbx
    ecc2:	eb 13                	jmp    ecd7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    ecc4:	49 89 c4             	mov    %rax,%r12
    ecc7:	48 89 df             	mov    %rbx,%rdi
    ecca:	e8 e1 55 ff ff       	call   42b0 <__cxa_free_exception@plt>
    eccf:	4c 89 e3             	mov    %r12,%rbx
    ecd2:	eb 03                	jmp    ecd7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
}
    ecd4:	48 89 c3             	mov    %rax,%rbx
    ecd7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ecde:	48 89 c7             	mov    %rax,%rdi
    ece1:	e8 28 aa ff ff       	call   970e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    ece6:	eb 03                	jmp    eceb <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4eb>
    ece8:	48 89 c3             	mov    %rax,%rbx
    eceb:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ecf2:	48 89 c7             	mov    %rax,%rdi
    ecf5:	e8 b0 a8 ff ff       	call   95aa <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    ecfa:	48 89 d8             	mov    %rbx,%rax
    ecfd:	48 89 c7             	mov    %rax,%rdi
    ed00:	e8 1b 5b ff ff       	call   4820 <_Unwind_Resume@plt>
    ed05:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ed0c:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    ed13:	5b                   	pop    %rbx
    ed14:	41 5c                	pop    %r12
    ed16:	5d                   	pop    %rbp
    ed17:	c3                   	ret

000000000000ed18 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    ed18:	55                   	push   %rbp
    ed19:	48 89 e5             	mov    %rsp,%rbp
    ed1c:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    ed20:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    ed24:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ed28:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ed2c:	48 89 d6             	mov    %rdx,%rsi
    ed2f:	48 89 c7             	mov    %rax,%rdi
    ed32:	e8 c9 fa ff ff       	call   e800 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    ed37:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ed3b:	48 8b 40 50          	mov    0x50(%rax),%rax
    ed3f:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    ed43:	ba 00 00 00 00       	mov    $0x0,%edx
    ed48:	48 89 ce             	mov    %rcx,%rsi
    ed4b:	48 89 c7             	mov    %rax,%rdi
    ed4e:	e8 c2 77 ff ff       	call   6515 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    ed53:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ed57:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    ed5b:	90                   	nop
    ed5c:	c9                   	leave
    ed5d:	c3                   	ret

000000000000ed5e <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    ed5e:	55                   	push   %rbp
    ed5f:	48 89 e5             	mov    %rsp,%rbp
    ed62:	53                   	push   %rbx
    ed63:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    ed6a:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    ed71:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ed78:	48 8b 50 70          	mov    0x70(%rax),%rdx
    ed7c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ed83:	48 8b 48 50          	mov    0x50(%rax),%rcx
    ed87:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ed8b:	48 89 ce             	mov    %rcx,%rsi
    ed8e:	48 89 c7             	mov    %rax,%rdi
    ed91:	e8 4b 9b ff ff       	call   88e1 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    ed96:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ed9d:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    eda4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eda8:	48 89 c6             	mov    %rax,%rsi
    edab:	48 89 d7             	mov    %rdx,%rdi
    edae:	e8 19 41 00 00       	call   12ecc <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    edb3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    edb7:	48 89 c7             	mov    %rax,%rdi
    edba:	e8 b3 aa ff ff       	call   9872 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    edbf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    edc6:	48 05 c0 00 00 00    	add    $0xc0,%rax
    edcc:	48 89 c7             	mov    %rax,%rdi
    edcf:	e8 30 41 00 00       	call   12f04 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    edd4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    edd8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    eddf:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    ede6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    edea:	48 89 c6             	mov    %rax,%rsi
    eded:	48 89 d7             	mov    %rdx,%rdi
    edf0:	e8 33 41 00 00       	call   12f28 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    edf5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    edfc:	00 
    edfd:	e9 f1 00 00 00       	jmp    eef3 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    ee02:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee06:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    ee0d:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    ee11:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    ee15:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    ee19:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    ee1d:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    ee24:	00 00 00 
    imageViewInfo.pNext = nullptr;
    ee27:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    ee2e:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    ee32:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee39:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    ee40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee44:	48 89 c6             	mov    %rax,%rsi
    ee47:	48 89 d7             	mov    %rdx,%rdi
    ee4a:	e8 5f 41 00 00       	call   12fae <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    ee4f:	48 8b 00             	mov    (%rax),%rax
    ee52:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    ee56:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    ee5d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee64:	8b 40 78             	mov    0x78(%rax),%eax
    ee67:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    ee6a:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    ee71:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    ee78:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    ee7f:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    ee86:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    ee8d:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    ee94:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    ee9b:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    eea2:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    eea9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    eeb0:	48 8b 40 50          	mov    0x50(%rax),%rax
    eeb4:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    eebb:	ba 00 00 00 00       	mov    $0x0,%edx
    eec0:	48 89 ce             	mov    %rcx,%rsi
    eec3:	48 89 c7             	mov    %rax,%rdi
    eec6:	e8 ea 76 ff ff       	call   65b5 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    eecb:	48 89 c3             	mov    %rax,%rbx
    eece:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    eed5:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    eedc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eee0:	48 89 c6             	mov    %rax,%rsi
    eee3:	48 89 d7             	mov    %rdx,%rdi
    eee6:	e8 e3 40 00 00       	call   12fce <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    eeeb:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    eeee:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    eef3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eef7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    eefb:	0f 82 01 ff ff ff    	jb     ee02 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    ef01:	90                   	nop
    ef02:	90                   	nop
    ef03:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ef07:	c9                   	leave
    ef08:	c3                   	ret
    ef09:	90                   	nop

000000000000ef0a <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    ef0a:	55                   	push   %rbp
    ef0b:	48 89 e5             	mov    %rsp,%rbp
    ef0e:	41 55                	push   %r13
    ef10:	41 54                	push   %r12
    ef12:	53                   	push   %rbx
    ef13:	48 81 ec 78 05 00 00 	sub    $0x578,%rsp
    ef1a:	48 89 bd 78 fa ff ff 	mov    %rdi,-0x588(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    ef21:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    ef28:	00 00 00 00 
    ef2c:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    ef33:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    ef37:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    ef3e:	48 89 c7             	mov    %rax,%rdi
    ef41:	e8 ea 58 ff ff       	call   4830 <_ZNSaIcEC1Ev@plt>
    ef46:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    ef4d:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    ef54:	48 8d 0d 9d fe 00 00 	lea    0xfe9d(%rip),%rcx        # 1edf8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    ef5b:	48 89 ce             	mov    %rcx,%rsi
    ef5e:	48 89 c7             	mov    %rax,%rdi
    ef61:	e8 1e 5f ff ff       	call   4e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    ef66:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    ef6d:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef71:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    ef78:	ba 00 00 00 00       	mov    $0x0,%edx
    ef7d:	48 89 ce             	mov    %rcx,%rsi
    ef80:	48 89 c7             	mov    %rax,%rdi
    ef83:	e8 9d 77 ff ff       	call   6725 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    ef88:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    ef8f:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    ef96:	48 89 c7             	mov    %rax,%rdi
    ef99:	e8 b2 52 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ef9e:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    efa5:	48 89 c7             	mov    %rax,%rdi
    efa8:	e8 13 55 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
                                                        "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    efad:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    efb4:	48 89 c7             	mov    %rax,%rdi
    efb7:	e8 74 58 ff ff       	call   4830 <_ZNSaIcEC1Ev@plt>
    efbc:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    efc3:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    efca:	48 8d 0d 47 fe 00 00 	lea    0xfe47(%rip),%rcx        # 1ee18 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x140>
    efd1:	48 89 ce             	mov    %rcx,%rsi
    efd4:	48 89 c7             	mov    %rax,%rdi
    efd7:	e8 a8 5e ff ff       	call   4e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    efdc:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    efe3:	48 8b 40 50          	mov    0x50(%rax),%rax
    efe7:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    efee:	ba 00 00 00 00       	mov    $0x0,%edx
    eff3:	48 89 ce             	mov    %rcx,%rsi
    eff6:	48 89 c7             	mov    %rax,%rdi
    eff9:	e8 27 77 ff ff       	call   6725 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    effe:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    f005:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f00c:	48 89 c7             	mov    %rax,%rdi
    f00f:	e8 3c 52 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f014:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    f01b:	48 89 c7             	mov    %rax,%rdi
    f01e:	e8 9d 54 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    f023:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f027:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    f02e:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    f035:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    f03c:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    f043:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    f046:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    f04d:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    f050:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    f057:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    f05e:	48 8d 05 d3 fd 00 00 	lea    0xfdd3(%rip),%rax        # 1ee38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x160>
    f065:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    f06c:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    f073:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    f077:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f07b:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    f082:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    f089:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    f090:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    f097:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    f09a:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    f0a1:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    f0a4:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    f0ab:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    f0b2:	48 8d 05 7f fd 00 00 	lea    0xfd7f(%rip),%rax        # 1ee38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x160>
    f0b9:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    f0c0:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    f0c7:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    f0cb:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    f0d2:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    f0d9:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    f0e0:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    f0e7:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    f0ee:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    f0f5:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    f0fc:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    f103:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    f10a:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    f111:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    f118:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    f11f:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    f126:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    f12d:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    f134:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    f13b:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    f142:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    f149:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    f150:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    f157:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    f15e:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    f165:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    f16c:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  auto bindingDescription = vkh::Vertex2D_RGB::getBindingDescription();
    f173:	e8 76 3e 00 00       	call   12fee <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>
    f178:	48 89 85 e4 fd ff ff 	mov    %rax,-0x21c(%rbp)
    f17f:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
    f185:	83 e0 00             	and    $0x0,%eax
    f188:	09 d0                	or     %edx,%eax
    f18a:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  auto attributeDescriptions = vkh::Vertex2D_RGB::getAttributeDescriptions();
    f190:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    f197:	48 89 c7             	mov    %rax,%rdi
    f19a:	e8 91 3e 00 00       	call   13030 <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>

  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    f19f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f1a3:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    f1aa:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    f1b1:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  vertInputInfo.sType =
    f1b8:	c7 85 90 fd ff ff 13 	movl   $0x13,-0x270(%rbp)
    f1bf:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 1;
    f1c2:	c7 85 a4 fd ff ff 01 	movl   $0x1,-0x25c(%rbp)
    f1c9:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = &bindingDescription;
    f1cc:	48 8d 85 e4 fd ff ff 	lea    -0x21c(%rbp),%rax
    f1d3:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  vertInputInfo.vertexAttributeDescriptionCount =
      static_cast<uint32_t>(attributeDescriptions.size());
    f1da:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    f1e1:	48 89 c7             	mov    %rax,%rdi
    f1e4:	e8 27 3f 00 00       	call   13110 <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>
  vertInputInfo.vertexAttributeDescriptionCount =
    f1e9:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%rbp)
  vertInputInfo.pVertexAttributeDescriptions = attributeDescriptions.data();
    f1ef:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    f1f6:	48 89 c7             	mov    %rax,%rdi
    f1f9:	e8 1c 31 00 00       	call   1231a <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>
    f1fe:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    f205:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f209:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    f210:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
  inputAssemblyInfo.sType =
    f217:	c7 85 70 fd ff ff 14 	movl   $0x14,-0x290(%rbp)
    f21e:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    f221:	c7 85 84 fd ff ff 03 	movl   $0x3,-0x27c(%rbp)
    f228:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    f22b:	c7 85 88 fd ff ff 00 	movl   $0x0,-0x278(%rbp)
    f232:	00 00 00 

  /*  */
  VkViewport viewport{};
    f235:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f239:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    f240:	66 0f d6 85 60 fd ff 	movq   %xmm0,-0x2a0(%rbp)
    f247:	ff 
  viewport.x = 0.0f;
    f248:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f24c:	f3 0f 11 85 50 fd ff 	movss  %xmm0,-0x2b0(%rbp)
    f253:	ff 
  viewport.y = 0.0f;
    f254:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f258:	f3 0f 11 85 54 fd ff 	movss  %xmm0,-0x2ac(%rbp)
    f25f:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    f260:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f267:	8b 40 7c             	mov    0x7c(%rax),%eax
    f26a:	89 c0                	mov    %eax,%eax
    f26c:	48 85 c0             	test   %rax,%rax
    f26f:	78 0b                	js     f27c <_ZN9VulkanApp22createGraphicsPipelineEv+0x372>
    f271:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f275:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    f27a:	eb 19                	jmp    f295 <_ZN9VulkanApp22createGraphicsPipelineEv+0x38b>
    f27c:	48 89 c2             	mov    %rax,%rdx
    f27f:	48 d1 ea             	shr    %rdx
    f282:	83 e0 01             	and    $0x1,%eax
    f285:	48 09 c2             	or     %rax,%rdx
    f288:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f28c:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    f291:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    f295:	f3 0f 11 85 58 fd ff 	movss  %xmm0,-0x2a8(%rbp)
    f29c:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    f29d:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f2a4:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    f2aa:	89 c0                	mov    %eax,%eax
    f2ac:	48 85 c0             	test   %rax,%rax
    f2af:	78 0b                	js     f2bc <_ZN9VulkanApp22createGraphicsPipelineEv+0x3b2>
    f2b1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2b5:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    f2ba:	eb 19                	jmp    f2d5 <_ZN9VulkanApp22createGraphicsPipelineEv+0x3cb>
    f2bc:	48 89 c2             	mov    %rax,%rdx
    f2bf:	48 d1 ea             	shr    %rdx
    f2c2:	83 e0 01             	and    $0x1,%eax
    f2c5:	48 09 c2             	or     %rax,%rdx
    f2c8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2cc:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    f2d1:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    f2d5:	f3 0f 11 85 5c fd ff 	movss  %xmm0,-0x2a4(%rbp)
    f2dc:	ff 
  viewport.minDepth = 0.0f;
    f2dd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2e1:	f3 0f 11 85 60 fd ff 	movss  %xmm0,-0x2a0(%rbp)
    f2e8:	ff 
  viewport.maxDepth = 1.0f;
    f2e9:	f3 0f 10 05 17 ff 00 	movss  0xff17(%rip),%xmm0        # 1f208 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    f2f0:	00 
    f2f1:	f3 0f 11 85 64 fd ff 	movss  %xmm0,-0x29c(%rbp)
    f2f8:	ff 

  VkRect2D scissor{};
    f2f9:	48 c7 85 40 fd ff ff 	movq   $0x0,-0x2c0(%rbp)
    f300:	00 00 00 00 
    f304:	48 c7 85 48 fd ff ff 	movq   $0x0,-0x2b8(%rbp)
    f30b:	00 00 00 00 
  scissor.offset = {0, 0};
    f30f:	c7 85 40 fd ff ff 00 	movl   $0x0,-0x2c0(%rbp)
    f316:	00 00 00 
    f319:	c7 85 44 fd ff ff 00 	movl   $0x0,-0x2bc(%rbp)
    f320:	00 00 00 
  scissor.extent = swapchain.extent;
    f323:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f32a:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    f32e:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    f335:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f339:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    f340:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    f347:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  viewportStateInfo.sType =
    f34e:	c7 85 10 fd ff ff 16 	movl   $0x16,-0x2f0(%rbp)
    f355:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    f358:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    f35f:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    f362:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    f369:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  viewportStateInfo.scissorCount = 1;
    f370:	c7 85 30 fd ff ff 01 	movl   $0x1,-0x2d0(%rbp)
    f377:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    f37a:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    f381:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    f388:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f38c:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    f393:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    f39a:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
    f3a1:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
  rastStateInfo.sType =
    f3a8:	c7 85 d0 fc ff ff 17 	movl   $0x17,-0x330(%rbp)
    f3af:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    f3b2:	48 c7 85 d8 fc ff ff 	movq   $0x0,-0x328(%rbp)
    f3b9:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    f3bd:	c7 85 e4 fc ff ff 00 	movl   $0x0,-0x31c(%rbp)
    f3c4:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    f3c7:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    f3ce:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    f3d1:	c7 85 ec fc ff ff 00 	movl   $0x0,-0x314(%rbp)
    f3d8:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    f3db:	f3 0f 10 05 25 fe 00 	movss  0xfe25(%rip),%xmm0        # 1f208 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    f3e2:	00 
    f3e3:	f3 0f 11 85 08 fd ff 	movss  %xmm0,-0x2f8(%rbp)
    f3ea:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    f3eb:	c7 85 f0 fc ff ff 02 	movl   $0x2,-0x310(%rbp)
    f3f2:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    f3f5:	c7 85 f4 fc ff ff 01 	movl   $0x1,-0x30c(%rbp)
    f3fc:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    f3ff:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    f406:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    f409:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f40d:	f3 0f 11 85 fc fc ff 	movss  %xmm0,-0x304(%rbp)
    f414:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    f415:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f419:	f3 0f 11 85 00 fd ff 	movss  %xmm0,-0x300(%rbp)
    f420:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    f421:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f425:	f3 0f 11 85 04 fd ff 	movss  %xmm0,-0x2fc(%rbp)
    f42c:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    f42d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f431:	0f 29 85 a0 fc ff ff 	movaps %xmm0,-0x360(%rbp)
    f438:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    f43f:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  multisampleStateInfo.sType =
    f446:	c7 85 a0 fc ff ff 18 	movl   $0x18,-0x360(%rbp)
    f44d:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    f450:	c7 85 b8 fc ff ff 00 	movl   $0x0,-0x348(%rbp)
    f457:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    f45a:	c7 85 b4 fc ff ff 01 	movl   $0x1,-0x34c(%rbp)
    f461:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    f464:	f3 0f 10 05 9c fd 00 	movss  0xfd9c(%rip),%xmm0        # 1f208 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    f46b:	00 
    f46c:	f3 0f 11 85 bc fc ff 	movss  %xmm0,-0x344(%rbp)
    f473:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    f474:	48 c7 85 c0 fc ff ff 	movq   $0x0,-0x340(%rbp)
    f47b:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    f47f:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    f486:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    f489:	c7 85 cc fc ff ff 00 	movl   $0x0,-0x334(%rbp)
    f490:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    f493:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f497:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    f49e:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
  colorBlendAttachment.colorWriteMask =
    f4a5:	c7 85 9c fc ff ff 0f 	movl   $0xf,-0x364(%rbp)
    f4ac:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    f4af:	c7 85 80 fc ff ff 01 	movl   $0x1,-0x380(%rbp)
    f4b6:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    f4b9:	c7 85 84 fc ff ff 06 	movl   $0x6,-0x37c(%rbp)
    f4c0:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    f4c3:	c7 85 88 fc ff ff 07 	movl   $0x7,-0x378(%rbp)
    f4ca:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    f4cd:	c7 85 8c fc ff ff 00 	movl   $0x0,-0x374(%rbp)
    f4d4:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    f4d7:	c7 85 90 fc ff ff 01 	movl   $0x1,-0x370(%rbp)
    f4de:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    f4e1:	c7 85 94 fc ff ff 00 	movl   $0x0,-0x36c(%rbp)
    f4e8:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    f4eb:	c7 85 98 fc ff ff 00 	movl   $0x0,-0x368(%rbp)
    f4f2:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    f4f5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f4f9:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    f500:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    f507:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
    f50e:	66 0f d6 85 70 fc ff 	movq   %xmm0,-0x390(%rbp)
    f515:	ff 
  colorBlendState.sType =
    f516:	c7 85 40 fc ff ff 1a 	movl   $0x1a,-0x3c0(%rbp)
    f51d:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
    f520:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
    f527:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    f52a:	c7 85 58 fc ff ff 03 	movl   $0x3,-0x3a8(%rbp)
    f531:	00 00 00 
  colorBlendState.attachmentCount = 1;
    f534:	c7 85 5c fc ff ff 01 	movl   $0x1,-0x3a4(%rbp)
    f53b:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
    f53e:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
    f545:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
    f54c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f550:	f3 0f 11 85 68 fc ff 	movss  %xmm0,-0x398(%rbp)
    f557:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
    f558:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f55c:	f3 0f 11 85 6c fc ff 	movss  %xmm0,-0x394(%rbp)
    f563:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
    f564:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f568:	f3 0f 11 85 70 fc ff 	movss  %xmm0,-0x390(%rbp)
    f56f:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
    f570:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f574:	f3 0f 11 85 74 fc ff 	movss  %xmm0,-0x38c(%rbp)
    f57b:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    f57c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f580:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    f587:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    f58e:	0f 29 85 30 fc ff ff 	movaps %xmm0,-0x3d0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    f595:	c7 85 10 fc ff ff 1e 	movl   $0x1e,-0x3f0(%rbp)
    f59c:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    f59f:	c7 85 24 fc ff ff 00 	movl   $0x0,-0x3dc(%rbp)
    f5a6:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    f5a9:	48 c7 85 28 fc ff ff 	movq   $0x0,-0x3d8(%rbp)
    f5b0:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    f5b4:	c7 85 30 fc ff ff 00 	movl   $0x0,-0x3d0(%rbp)
    f5bb:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    f5be:	48 c7 85 38 fc ff ff 	movq   $0x0,-0x3c8(%rbp)
    f5c5:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
    f5c9:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f5d0:	48 8b 40 50          	mov    0x50(%rax),%rax
    f5d4:	48 8d 8d 10 fc ff ff 	lea    -0x3f0(%rbp),%rcx
    f5db:	ba 00 00 00 00       	mov    $0x0,%edx
    f5e0:	48 89 ce             	mov    %rcx,%rsi
    f5e3:	48 89 c7             	mov    %rax,%rdi
    f5e6:	e8 72 73 ff ff       	call   695d <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
    f5eb:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
    f5f2:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
    f5f9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f5fd:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
    f604:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    f60b:	66 0f 7e 85 00 fc ff 	movd   %xmm0,-0x400(%rbp)
    f612:	ff 
  colorAttachment.format = swapchain.format;
    f613:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f61a:	8b 40 78             	mov    0x78(%rax),%eax
    f61d:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    f623:	c7 85 e8 fb ff ff 01 	movl   $0x1,-0x418(%rbp)
    f62a:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    f62d:	c7 85 ec fb ff ff 01 	movl   $0x1,-0x414(%rbp)
    f634:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    f637:	c7 85 f0 fb ff ff 00 	movl   $0x0,-0x410(%rbp)
    f63e:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    f641:	c7 85 f4 fb ff ff 02 	movl   $0x2,-0x40c(%rbp)
    f648:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    f64b:	c7 85 f8 fb ff ff 01 	movl   $0x1,-0x408(%rbp)
    f652:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    f655:	c7 85 fc fb ff ff 00 	movl   $0x0,-0x404(%rbp)
    f65c:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    f65f:	c7 85 00 fc ff ff ea 	movl   $0x3b9acdea,-0x400(%rbp)
    f666:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
    f669:	48 c7 85 d8 fb ff ff 	movq   $0x0,-0x428(%rbp)
    f670:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
    f674:	c7 85 d8 fb ff ff 00 	movl   $0x0,-0x428(%rbp)
    f67b:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    f67e:	c7 85 dc fb ff ff 02 	movl   $0x2,-0x424(%rbp)
    f685:	00 00 00 

  VkSubpassDescription subpass{};
    f688:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f68c:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
    f693:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
    f69a:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
    f6a1:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
    f6a8:	66 0f d6 85 d0 fb ff 	movq   %xmm0,-0x430(%rbp)
    f6af:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    f6b0:	c7 85 94 fb ff ff 00 	movl   $0x0,-0x46c(%rbp)
    f6b7:	00 00 00 
  subpass.colorAttachmentCount = 1;
    f6ba:	c7 85 a8 fb ff ff 01 	movl   $0x1,-0x458(%rbp)
    f6c1:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
    f6c4:	48 8d 85 d8 fb ff ff 	lea    -0x428(%rbp),%rax
    f6cb:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)

  VkSubpassDependency subPassDep{}; /* Needed when rendering */
    f6d2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f6d6:	0f 29 85 70 fb ff ff 	movaps %xmm0,-0x490(%rbp)
    f6dd:	0f 11 85 7c fb ff ff 	movups %xmm0,-0x484(%rbp)
  subPassDep.srcSubpass = VK_SUBPASS_EXTERNAL;
    f6e4:	c7 85 70 fb ff ff ff 	movl   $0xffffffff,-0x490(%rbp)
    f6eb:	ff ff ff 
  subPassDep.dstSubpass = 0;
    f6ee:	c7 85 74 fb ff ff 00 	movl   $0x0,-0x48c(%rbp)
    f6f5:	00 00 00 
  subPassDep.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    f6f8:	c7 85 78 fb ff ff 00 	movl   $0x400,-0x488(%rbp)
    f6ff:	04 00 00 
  subPassDep.srcAccessMask = 0;
    f702:	c7 85 80 fb ff ff 00 	movl   $0x0,-0x480(%rbp)
    f709:	00 00 00 
  subPassDep.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    f70c:	c7 85 7c fb ff ff 00 	movl   $0x400,-0x484(%rbp)
    f713:	04 00 00 
  subPassDep.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
    f716:	c7 85 84 fb ff ff 00 	movl   $0x100,-0x47c(%rbp)
    f71d:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
    f720:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f724:	0f 29 85 30 fb ff ff 	movaps %xmm0,-0x4d0(%rbp)
    f72b:	0f 29 85 40 fb ff ff 	movaps %xmm0,-0x4c0(%rbp)
    f732:	0f 29 85 50 fb ff ff 	movaps %xmm0,-0x4b0(%rbp)
    f739:	0f 29 85 60 fb ff ff 	movaps %xmm0,-0x4a0(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    f740:	c7 85 30 fb ff ff 26 	movl   $0x26,-0x4d0(%rbp)
    f747:	00 00 00 
  renderPassInfo.pNext = nullptr;
    f74a:	48 c7 85 38 fb ff ff 	movq   $0x0,-0x4c8(%rbp)
    f751:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
    f755:	c7 85 44 fb ff ff 01 	movl   $0x1,-0x4bc(%rbp)
    f75c:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    f75f:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
    f766:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  renderPassInfo.subpassCount = 1;
    f76d:	c7 85 50 fb ff ff 01 	movl   $0x1,-0x4b0(%rbp)
    f774:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    f777:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
    f77e:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  renderPassInfo.dependencyCount = 1;
    f785:	c7 85 60 fb ff ff 01 	movl   $0x1,-0x4a0(%rbp)
    f78c:	00 00 00 
  renderPassInfo.pDependencies = &subPassDep;
    f78f:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
    f796:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
    f79d:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f7a4:	48 8b 40 50          	mov    0x50(%rax),%rax
    f7a8:	48 8d 8d 30 fb ff ff 	lea    -0x4d0(%rbp),%rcx
    f7af:	ba 00 00 00 00       	mov    $0x0,%edx
    f7b4:	48 89 ce             	mov    %rcx,%rsi
    f7b7:	48 89 c7             	mov    %rax,%rdi
    f7ba:	e8 36 72 ff ff       	call   69f5 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
    f7bf:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
    f7c6:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    f7cd:	48 8d 95 a0 fa ff ff 	lea    -0x560(%rbp),%rdx
    f7d4:	b8 00 00 00 00       	mov    $0x0,%eax
    f7d9:	b9 12 00 00 00       	mov    $0x12,%ecx
    f7de:	48 89 d7             	mov    %rdx,%rdi
    f7e1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    f7e4:	c7 85 a0 fa ff ff 1c 	movl   $0x1c,-0x560(%rbp)
    f7eb:	00 00 00 
  pipelineInfo.pNext = nullptr;
    f7ee:	48 c7 85 a8 fa ff ff 	movq   $0x0,-0x558(%rbp)
    f7f5:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
    f7f9:	c7 85 b4 fa ff ff 02 	movl   $0x2,-0x54c(%rbp)
    f800:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    f803:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    f80a:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
    f811:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
    f818:	48 89 85 c0 fa ff ff 	mov    %rax,-0x540(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
    f81f:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
    f826:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
    f82d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f834:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
    f83b:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f842:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
    f849:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    f850:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    f857:	48 c7 85 f0 fa ff ff 	movq   $0x0,-0x510(%rbp)
    f85e:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
    f862:	48 8d 85 40 fc ff ff 	lea    -0x3c0(%rbp),%rax
    f869:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    f870:	48 c7 85 00 fb ff ff 	movq   $0x0,-0x500(%rbp)
    f877:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
    f87b:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f882:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
    f889:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
    f890:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f897:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    f89e:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.subpass = 0;
    f8a5:	c7 85 18 fb ff ff 00 	movl   $0x0,-0x4e8(%rbp)
    f8ac:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    f8af:	48 c7 85 20 fb ff ff 	movq   $0x0,-0x4e0(%rbp)
    f8b6:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    f8ba:	c7 85 28 fb ff ff ff 	movl   $0xffffffff,-0x4d8(%rbp)
    f8c1:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    f8c4:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
    f8cb:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
    f8d2:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    f8d9:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    f8e0:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
    f8e7:	48 8b 95 b8 fa ff ff 	mov    -0x548(%rbp),%rdx
    f8ee:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    f8f5:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    f8fc:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
    f903:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    f90a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    f911:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    f918:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
    f91f:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
    f926:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    f92d:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    f934:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
    f93b:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
    f942:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f949:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    f950:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
    f957:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
    f95e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    f965:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    f96c:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
    f973:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
    f97a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    f97e:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    f982:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
    f989:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
    f990:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    f994:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    f998:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
    f99f:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
    f9a6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    f9aa:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    f9ae:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f9b5:	49 89 c4             	mov    %rax,%r12
    f9b8:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    f9be:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    f9c2:	48 89 c7             	mov    %rax,%rdi
    f9c5:	e8 56 37 00 00       	call   13120 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
    f9ca:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    f9ce:	4c 89 e6             	mov    %r12,%rsi
    f9d1:	4c 89 ef             	mov    %r13,%rdi
    f9d4:	4c 89 e1             	mov    %r12,%rcx
    f9d7:	4c 89 eb             	mov    %r13,%rbx
    f9da:	48 89 df             	mov    %rbx,%rdi
    f9dd:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
    f9e4:	48 89 d1             	mov    %rdx,%rcx
    f9e7:	48 89 fa             	mov    %rdi,%rdx
    f9ea:	48 89 c7             	mov    %rax,%rdi
    f9ed:	e8 66 37 00 00       	call   13158 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    f9f2:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    f9f6:	48 89 c7             	mov    %rax,%rdi
    f9f9:	e8 3e 37 00 00       	call   1313c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    f9fe:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fa05:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
    fa0c:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fa13:	48 8b 70 50          	mov    0x50(%rax),%rsi
    fa17:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fa1b:	48 8d 8d 80 fa ff ff 	lea    -0x580(%rbp),%rcx
    fa22:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    fa28:	48 89 c7             	mov    %rax,%rdi
    fa2b:	e8 0f 38 00 00       	call   1323f <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
    fa30:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fa34:	be 00 00 00 00       	mov    $0x0,%esi
    fa39:	48 89 c7             	mov    %rax,%rdi
    fa3c:	e8 6f 39 00 00       	call   133b0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    fa41:	48 8b 10             	mov    (%rax),%rdx
    fa44:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fa4b:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
    fa52:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fa56:	48 89 c7             	mov    %rax,%rdi
    fa59:	e8 0e 39 00 00       	call   1336c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
    fa5e:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    fa65:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fa6c:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa70:	ba 00 00 00 00       	mov    $0x0,%edx
    fa75:	48 89 ce             	mov    %rcx,%rsi
    fa78:	48 89 c7             	mov    %rax,%rdi
    fa7b:	e8 76 7c ff ff       	call   76f6 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
    fa80:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
    fa87:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fa8e:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa92:	ba 00 00 00 00       	mov    $0x0,%edx
    fa97:	48 89 ce             	mov    %rcx,%rsi
    fa9a:	48 89 c7             	mov    %rax,%rdi
    fa9d:	e8 54 7c ff ff       	call   76f6 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
    faa2:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
    faa9:	48 89 c7             	mov    %rax,%rdi
    faac:	e8 2f 37 00 00       	call   131e0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    fab1:	e9 99 00 00 00       	jmp    fb4f <_ZN9VulkanApp22createGraphicsPipelineEv+0xc45>
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    fab6:	48 89 c3             	mov    %rax,%rbx
    fab9:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    fac0:	48 89 c7             	mov    %rax,%rdi
    fac3:	e8 88 47 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fac8:	eb 03                	jmp    facd <_ZN9VulkanApp22createGraphicsPipelineEv+0xbc3>
    faca:	48 89 c3             	mov    %rax,%rbx
    facd:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    fad4:	48 89 c7             	mov    %rax,%rdi
    fad7:	e8 e4 49 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    fadc:	48 89 d8             	mov    %rbx,%rax
    fadf:	48 89 c7             	mov    %rax,%rdi
    fae2:	e8 39 4d ff ff       	call   4820 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    fae7:	48 89 c3             	mov    %rax,%rbx
    faea:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    faf1:	48 89 c7             	mov    %rax,%rdi
    faf4:	e8 57 47 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    faf9:	eb 03                	jmp    fafe <_ZN9VulkanApp22createGraphicsPipelineEv+0xbf4>
    fafb:	48 89 c3             	mov    %rax,%rbx
    fafe:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    fb05:	48 89 c7             	mov    %rax,%rdi
    fb08:	e8 b3 49 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    fb0d:	48 89 d8             	mov    %rbx,%rax
    fb10:	48 89 c7             	mov    %rax,%rdi
    fb13:	e8 08 4d ff ff       	call   4820 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    fb18:	48 89 c3             	mov    %rax,%rbx
    fb1b:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    fb1f:	48 89 c7             	mov    %rax,%rdi
    fb22:	e8 15 36 00 00       	call   1313c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
    fb27:	48 89 d8             	mov    %rbx,%rax
    fb2a:	48 89 c7             	mov    %rax,%rdi
    fb2d:	e8 ee 4c ff ff       	call   4820 <_Unwind_Resume@plt>
}
    fb32:	48 89 c3             	mov    %rax,%rbx
    fb35:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
    fb3c:	48 89 c7             	mov    %rax,%rdi
    fb3f:	e8 9c 36 00 00       	call   131e0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    fb44:	48 89 d8             	mov    %rbx,%rax
    fb47:	48 89 c7             	mov    %rax,%rdi
    fb4a:	e8 d1 4c ff ff       	call   4820 <_Unwind_Resume@plt>
    fb4f:	48 81 c4 78 05 00 00 	add    $0x578,%rsp
    fb56:	5b                   	pop    %rbx
    fb57:	41 5c                	pop    %r12
    fb59:	41 5d                	pop    %r13
    fb5b:	5d                   	pop    %rbp
    fb5c:	c3                   	ret
    fb5d:	90                   	nop

000000000000fb5e <_ZN9VulkanApp18createFramebuffersEv>:

void VulkanApp::createFramebuffers() {
    fb5e:	55                   	push   %rbp
    fb5f:	48 89 e5             	mov    %rsp,%rbp
    fb62:	41 55                	push   %r13
    fb64:	41 54                	push   %r12
    fb66:	53                   	push   %rbx
    fb67:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    fb6e:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
    fb75:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fb7c:	48 8d 98 00 01 00 00 	lea    0x100(%rax),%rbx
    fb83:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fb8a:	48 05 a8 00 00 00    	add    $0xa8,%rax
    fb90:	48 89 c7             	mov    %rax,%rdi
    fb93:	e8 38 38 00 00       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    fb98:	48 89 c6             	mov    %rax,%rsi
    fb9b:	48 89 df             	mov    %rbx,%rdi
    fb9e:	e8 51 38 00 00       	call   133f4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    fba3:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    fbaa:	00 
    fbab:	e9 3a 01 00 00       	jmp    fcea <_ZN9VulkanApp18createFramebuffersEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
    fbb0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fbb7:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    fbbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fbc2:	48 89 c6             	mov    %rax,%rsi
    fbc5:	48 89 d7             	mov    %rdx,%rdi
    fbc8:	e8 01 34 00 00       	call   12fce <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    fbcd:	48 8b 00             	mov    (%rax),%rax
    fbd0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    fbd4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fbd8:	49 89 c4             	mov    %rax,%r12
    fbdb:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    fbe1:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fbe5:	48 89 c7             	mov    %rax,%rdi
    fbe8:	e8 8d 38 00 00       	call   1347a <_ZNSaIP13VkImageView_TEC1Ev>
    fbed:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    fbf1:	4c 89 e6             	mov    %r12,%rsi
    fbf4:	4c 89 ef             	mov    %r13,%rdi
    fbf7:	4c 89 e1             	mov    %r12,%rcx
    fbfa:	4c 89 eb             	mov    %r13,%rbx
    fbfd:	48 89 df             	mov    %rbx,%rdi
    fc00:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fc04:	48 89 d1             	mov    %rdx,%rcx
    fc07:	48 89 fa             	mov    %rdi,%rdx
    fc0a:	48 89 c7             	mov    %rax,%rdi
    fc0d:	e8 a0 38 00 00       	call   134b2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fc12:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fc16:	48 89 c7             	mov    %rax,%rdi
    fc19:	e8 78 38 00 00       	call   13496 <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
    fc1e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fc22:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    fc29:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    fc2d:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    fc31:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    fc35:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
    fc3c:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
    fc3f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fc46:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    fc4d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
    fc51:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fc55:	48 89 c7             	mov    %rax,%rdi
    fc58:	e8 73 37 00 00       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    fc5d:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
    fc60:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fc64:	48 89 c7             	mov    %rax,%rdi
    fc67:	e8 12 39 00 00       	call   1357e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
    fc6c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
    fc70:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fc77:	8b 40 7c             	mov    0x7c(%rax),%eax
    fc7a:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
    fc7d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fc84:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    fc8a:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
    fc8d:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
    fc94:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fc9b:	48 8b 40 50          	mov    0x50(%rax),%rax
    fc9f:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    fca6:	ba 00 00 00 00       	mov    $0x0,%edx
    fcab:	48 89 ce             	mov    %rcx,%rsi
    fcae:	48 89 c7             	mov    %rax,%rdi
    fcb1:	e8 d7 6d ff ff       	call   6a8d <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
    fcb6:	48 89 c3             	mov    %rax,%rbx
    fcb9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fcc0:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    fcc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fccb:	48 89 c6             	mov    %rax,%rsi
    fcce:	48 89 d7             	mov    %rdx,%rdi
    fcd1:	e8 cc 38 00 00       	call   135a2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    fcd6:	48 89 18             	mov    %rbx,(%rax)
  }
    fcd9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fcdd:	48 89 c7             	mov    %rax,%rdi
    fce0:	e8 55 38 00 00       	call   1353a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    fce5:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    fcea:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fcf1:	48 05 a8 00 00 00    	add    $0xa8,%rax
    fcf7:	48 89 c7             	mov    %rax,%rdi
    fcfa:	e8 d1 36 00 00       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    fcff:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    fd03:	0f 92 c0             	setb   %al
    fd06:	84 c0                	test   %al,%al
    fd08:	0f 85 a2 fe ff ff    	jne    fbb0 <_ZN9VulkanApp18createFramebuffersEv+0x52>
}
    fd0e:	eb 34                	jmp    fd44 <_ZN9VulkanApp18createFramebuffersEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
    fd10:	48 89 c3             	mov    %rax,%rbx
    fd13:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fd17:	48 89 c7             	mov    %rax,%rdi
    fd1a:	e8 77 37 00 00       	call   13496 <_ZNSaIP13VkImageView_TED1Ev>
    fd1f:	48 89 d8             	mov    %rbx,%rax
    fd22:	48 89 c7             	mov    %rax,%rdi
    fd25:	e8 f6 4a ff ff       	call   4820 <_Unwind_Resume@plt>
  }
    fd2a:	48 89 c3             	mov    %rax,%rbx
    fd2d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fd31:	48 89 c7             	mov    %rax,%rdi
    fd34:	e8 01 38 00 00       	call   1353a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    fd39:	48 89 d8             	mov    %rbx,%rax
    fd3c:	48 89 c7             	mov    %rax,%rdi
    fd3f:	e8 dc 4a ff ff       	call   4820 <_Unwind_Resume@plt>
}
    fd44:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    fd4b:	5b                   	pop    %rbx
    fd4c:	41 5c                	pop    %r12
    fd4e:	41 5d                	pop    %r13
    fd50:	5d                   	pop    %rbp
    fd51:	c3                   	ret

000000000000fd52 <_ZN9VulkanApp17recreateSwapchainEv>:

void VulkanApp::recreateSwapchain() {
    fd52:	55                   	push   %rbp
    fd53:	48 89 e5             	mov    %rsp,%rbp
    fd56:	48 83 ec 20          	sub    $0x20,%rsp
    fd5a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  /* Handle minimization */
  int width = 0, heigth = 0;
    fd5e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    fd65:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  glfwGetFramebufferSize(window, &width, &heigth);
    fd6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd70:	48 8b 00             	mov    (%rax),%rax
    fd73:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    fd77:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    fd7b:	48 89 ce             	mov    %rcx,%rsi
    fd7e:	48 89 c7             	mov    %rax,%rdi
    fd81:	e8 ca 49 ff ff       	call   4750 <glfwGetFramebufferSize@plt>
  while (width == 0 || heigth == 0) {
    fd86:	eb 1f                	jmp    fda7 <_ZN9VulkanApp17recreateSwapchainEv+0x55>
    glfwGetFramebufferSize(window, &width, &heigth);
    fd88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd8c:	48 8b 00             	mov    (%rax),%rax
    fd8f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    fd93:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    fd97:	48 89 ce             	mov    %rcx,%rsi
    fd9a:	48 89 c7             	mov    %rax,%rdi
    fd9d:	e8 ae 49 ff ff       	call   4750 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
    fda2:	e8 79 44 ff ff       	call   4220 <glfwWaitEvents@plt>
  while (width == 0 || heigth == 0) {
    fda7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    fdaa:	85 c0                	test   %eax,%eax
    fdac:	74 da                	je     fd88 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
    fdae:	8b 45 f8             	mov    -0x8(%rbp),%eax
    fdb1:	85 c0                	test   %eax,%eax
    fdb3:	74 d3                	je     fd88 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
  }

  /* Recreate the swapchain */
  vkDeviceWaitIdle(device);
    fdb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdb9:	48 8b 40 50          	mov    0x50(%rax),%rax
    fdbd:	48 89 c7             	mov    %rax,%rdi
    fdc0:	e8 eb 42 ff ff       	call   40b0 <vkDeviceWaitIdle@plt>
  cleanupSwapchain();
    fdc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdc9:	48 89 c7             	mov    %rax,%rdi
    fdcc:	e8 33 00 00 00       	call   fe04 <_ZN9VulkanApp16cleanupSwapchainEv>
  createSwapchain();
    fdd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdd5:	48 89 c7             	mov    %rax,%rdi
    fdd8:	e8 3b ef ff ff       	call   ed18 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    fddd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fde1:	48 89 c7             	mov    %rax,%rdi
    fde4:	e8 75 ef ff ff       	call   ed5e <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    fde9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fded:	48 89 c7             	mov    %rax,%rdi
    fdf0:	e8 15 f1 ff ff       	call   ef0a <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
    fdf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdf9:	48 89 c7             	mov    %rax,%rdi
    fdfc:	e8 5d fd ff ff       	call   fb5e <_ZN9VulkanApp18createFramebuffersEv>
}
    fe01:	90                   	nop
    fe02:	c9                   	leave
    fe03:	c3                   	ret

000000000000fe04 <_ZN9VulkanApp16cleanupSwapchainEv>:

void VulkanApp::cleanupSwapchain() {
    fe04:	55                   	push   %rbp
    fe05:	48 89 e5             	mov    %rsp,%rbp
    fe08:	48 83 ec 50          	sub    $0x50,%rsp
    fe0c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  for (auto &framebuffer : framebuffers) {
    fe10:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe14:	48 05 00 01 00 00    	add    $0x100,%rax
    fe1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fe1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe22:	48 89 c7             	mov    %rax,%rdi
    fe25:	e8 98 37 00 00       	call   135c2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
    fe2a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    fe2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe32:	48 89 c7             	mov    %rax,%rdi
    fe35:	e8 ae 37 00 00       	call   135e8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
    fe3a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    fe3e:	eb 3b                	jmp    fe7b <_ZN9VulkanApp16cleanupSwapchainEv+0x77>
    fe40:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    fe44:	48 89 c7             	mov    %rax,%rdi
    fe47:	e8 20 38 00 00       	call   1366c <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
    fe4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
    fe50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fe54:	48 8b 08             	mov    (%rax),%rcx
    fe57:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe5b:	48 8b 40 50          	mov    0x50(%rax),%rax
    fe5f:	ba 00 00 00 00       	mov    $0x0,%edx
    fe64:	48 89 ce             	mov    %rcx,%rsi
    fe67:	48 89 c7             	mov    %rax,%rdi
    fe6a:	e8 ce 79 ff ff       	call   783d <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    fe6f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    fe73:	48 89 c7             	mov    %rax,%rdi
    fe76:	e8 d1 37 00 00       	call   1364c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
    fe7b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    fe7f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    fe83:	48 89 d6             	mov    %rdx,%rsi
    fe86:	48 89 c7             	mov    %rax,%rdi
    fe89:	e8 83 37 00 00       	call   13611 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fe8e:	84 c0                	test   %al,%al
    fe90:	75 ae                	jne    fe40 <_ZN9VulkanApp16cleanupSwapchainEv+0x3c>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
    fe92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe96:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    fe9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fea1:	48 8b 40 50          	mov    0x50(%rax),%rax
    fea5:	ba 00 00 00 00       	mov    $0x0,%edx
    feaa:	48 89 ce             	mov    %rcx,%rsi
    fead:	48 89 c7             	mov    %rax,%rdi
    feb0:	e8 cb 78 ff ff       	call   7780 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
    feb5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    feb9:	48 8b 88 e0 00 00 00 	mov    0xe0(%rax),%rcx
    fec0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fec4:	48 8b 40 50          	mov    0x50(%rax),%rax
    fec8:	ba 00 00 00 00       	mov    $0x0,%edx
    fecd:	48 89 ce             	mov    %rcx,%rsi
    fed0:	48 89 c7             	mov    %rax,%rdi
    fed3:	e8 4c 78 ff ff       	call   7724 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
    fed8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fedc:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    fee3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fee7:	48 8b 40 50          	mov    0x50(%rax),%rax
    feeb:	ba 00 00 00 00       	mov    $0x0,%edx
    fef0:	48 89 ce             	mov    %rcx,%rsi
    fef3:	48 89 c7             	mov    %rax,%rdi
    fef6:	e8 57 78 ff ff       	call   7752 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    fefb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    feff:	48 05 a8 00 00 00    	add    $0xa8,%rax
    ff05:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ff09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ff0d:	48 89 c7             	mov    %rax,%rdi
    ff10:	e8 69 37 00 00       	call   1367e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    ff15:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ff19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ff1d:	48 89 c7             	mov    %rax,%rdi
    ff20:	e8 7f 37 00 00       	call   136a4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    ff25:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ff29:	eb 3b                	jmp    ff66 <_ZN9VulkanApp16cleanupSwapchainEv+0x162>
    ff2b:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ff2f:	48 89 c7             	mov    %rax,%rdi
    ff32:	e8 f1 37 00 00       	call   13728 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    ff37:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
    ff3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff3f:	48 8b 08             	mov    (%rax),%rcx
    ff42:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff46:	48 8b 40 50          	mov    0x50(%rax),%rax
    ff4a:	ba 00 00 00 00       	mov    $0x0,%edx
    ff4f:	48 89 ce             	mov    %rcx,%rsi
    ff52:	48 89 c7             	mov    %rax,%rdi
    ff55:	e8 6e 77 ff ff       	call   76c8 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    ff5a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ff5e:	48 89 c7             	mov    %rax,%rdi
    ff61:	e8 a2 37 00 00       	call   13708 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    ff66:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    ff6a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ff6e:	48 89 d6             	mov    %rdx,%rsi
    ff71:	48 89 c7             	mov    %rax,%rdi
    ff74:	e8 54 37 00 00       	call   136cd <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    ff79:	84 c0                	test   %al,%al
    ff7b:	75 ae                	jne    ff2b <_ZN9VulkanApp16cleanupSwapchainEv+0x127>
  }
  vkh::destroySwapchain(device, swapchain.self);
    ff7d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff81:	48 8b 48 70          	mov    0x70(%rax),%rcx
    ff85:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff89:	48 8b 40 50          	mov    0x50(%rax),%rax
    ff8d:	ba 00 00 00 00       	mov    $0x0,%edx
    ff92:	48 89 ce             	mov    %rcx,%rsi
    ff95:	48 89 c7             	mov    %rax,%rdi
    ff98:	e8 fd 76 ff ff       	call   769a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
}
    ff9d:	90                   	nop
    ff9e:	c9                   	leave
    ff9f:	c3                   	ret

000000000000ffa0 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>:

void VulkanApp::framebufferResizeCallback(GLFWwindow *windowInstance,
                                          [[maybe_unused]] int width,
                                          [[maybe_unused]] int height) {
    ffa0:	55                   	push   %rbp
    ffa1:	48 89 e5             	mov    %rsp,%rbp
    ffa4:	48 83 ec 20          	sub    $0x20,%rsp
    ffa8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ffac:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    ffaf:	89 55 e0             	mov    %edx,-0x20(%rbp)
  auto app =
      reinterpret_cast<VulkanApp *>(glfwGetWindowUserPointer(windowInstance));
    ffb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffb6:	48 89 c7             	mov    %rax,%rdi
    ffb9:	e8 82 46 ff ff       	call   4640 <glfwGetWindowUserPointer@plt>
    ffbe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  app->framebufferResized = true;
    ffc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffc6:	c6 80 18 01 00 00 01 	movb   $0x1,0x118(%rax)
}
    ffcd:	90                   	nop
    ffce:	c9                   	leave
    ffcf:	c3                   	ret

000000000000ffd0 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    ffd0:	55                   	push   %rbp
    ffd1:	48 89 e5             	mov    %rsp,%rbp
    ffd4:	48 83 ec 30          	sub    $0x30,%rsp
    ffd8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    ffdc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ffe0:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    ffe4:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    ffe9:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    fff0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    fff7:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    fff8:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    ffff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10003:	8b 40 68             	mov    0x68(%rax),%eax
   10006:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
   10009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1000d:	48 8b 40 50          	mov    0x50(%rax),%rax
   10011:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   10015:	ba 00 00 00 00       	mov    $0x0,%edx
   1001a:	48 89 ce             	mov    %rcx,%rsi
   1001d:	48 89 c7             	mov    %rax,%rdi
   10020:	e8 00 6b ff ff       	call   6b25 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
   10025:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10029:	48 89 82 40 01 00 00 	mov    %rax,0x140(%rdx)
}
   10030:	90                   	nop
   10031:	c9                   	leave
   10032:	c3                   	ret
   10033:	90                   	nop

0000000000010034 <_ZN9VulkanApp19createVertexBuffersEv>:

void VulkanApp::createVertexBuffers() {
   10034:	55                   	push   %rbp
   10035:	48 89 e5             	mov    %rsp,%rbp
   10038:	41 54                	push   %r12
   1003a:	53                   	push   %rbx
   1003b:	48 83 ec 50          	sub    $0x50,%rsp
   1003f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  static constexpr uint32_t vertexBufferCount = 1;
  VkBufferCreateInfo bufferInfo{};
   10043:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10047:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   1004b:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   1004f:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   10053:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  bufferInfo.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
   10058:	c7 45 b0 0c 00 00 00 	movl   $0xc,-0x50(%rbp)
  bufferInfo.size =
      vertexBufferCount * sizeof(shader::triangle[0]) * shader::triangle.size();
   1005f:	48 8d 05 7a e5 01 00 	lea    0x1e57a(%rip),%rax        # 2e5e0 <_ZN6shaderL8triangleE>
   10066:	48 89 c7             	mov    %rax,%rdi
   10069:	e8 cc 36 00 00       	call   1373a <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>
   1006e:	48 89 c2             	mov    %rax,%rdx
   10071:	48 89 d0             	mov    %rdx,%rax
   10074:	48 c1 e0 02          	shl    $0x2,%rax
   10078:	48 01 d0             	add    %rdx,%rax
   1007b:	48 c1 e0 02          	shl    $0x2,%rax
  bufferInfo.size =
   1007f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  bufferInfo.usage = VK_BUFFER_USAGE_VERTEX_BUFFER_BIT;
   10083:	c7 45 d0 80 00 00 00 	movl   $0x80,-0x30(%rbp)
  bufferInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
   1008a:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)

  if (vkCreateBuffer(device, &bufferInfo, nullptr, &vertexBuffer) !=
   10091:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10095:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
   1009c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   100a0:	48 8b 40 50          	mov    0x50(%rax),%rax
   100a4:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
   100a8:	48 89 d1             	mov    %rdx,%rcx
   100ab:	ba 00 00 00 00       	mov    $0x0,%edx
   100b0:	48 89 c7             	mov    %rax,%rdi
   100b3:	e8 38 43 ff ff       	call   43f0 <vkCreateBuffer@plt>
   100b8:	85 c0                	test   %eax,%eax
   100ba:	0f 95 c0             	setne  %al
   100bd:	84 c0                	test   %al,%al
   100bf:	74 51                	je     10112 <_ZN9VulkanApp19createVertexBuffersEv+0xde>
      VK_SUCCESS) {
    throw std::runtime_error("Failed creating vertex buffer.");
   100c1:	bf 10 00 00 00       	mov    $0x10,%edi
   100c6:	e8 d5 40 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   100cb:	48 89 c3             	mov    %rax,%rbx
   100ce:	48 8d 05 73 ed 00 00 	lea    0xed73(%rip),%rax        # 1ee48 <_ZZN9VulkanApp19createVertexBuffersEvE17vertexBufferCount+0x8>
   100d5:	48 89 c6             	mov    %rax,%rsi
   100d8:	48 89 df             	mov    %rbx,%rdi
   100db:	e8 40 40 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
   100e0:	48 8b 05 c1 de 01 00 	mov    0x1dec1(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   100e7:	48 89 c2             	mov    %rax,%rdx
   100ea:	48 8d 05 4f dc 01 00 	lea    0x1dc4f(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   100f1:	48 89 c6             	mov    %rax,%rsi
   100f4:	48 89 df             	mov    %rbx,%rdi
   100f7:	e8 c4 46 ff ff       	call   47c0 <__cxa_throw@plt>
   100fc:	49 89 c4             	mov    %rax,%r12
   100ff:	48 89 df             	mov    %rbx,%rdi
   10102:	e8 a9 41 ff ff       	call   42b0 <__cxa_free_exception@plt>
   10107:	4c 89 e0             	mov    %r12,%rax
   1010a:	48 89 c7             	mov    %rax,%rdi
   1010d:	e8 0e 47 ff ff       	call   4820 <_Unwind_Resume@plt>
  }
}
   10112:	90                   	nop
   10113:	48 83 c4 50          	add    $0x50,%rsp
   10117:	5b                   	pop    %rbx
   10118:	41 5c                	pop    %r12
   1011a:	5d                   	pop    %rbp
   1011b:	c3                   	ret

000000000001011c <_ZN9VulkanApp20createCommandBuffersEv>:

void VulkanApp::createCommandBuffers() {
   1011c:	55                   	push   %rbp
   1011d:	48 89 e5             	mov    %rsp,%rbp
   10120:	48 83 ec 50          	sub    $0x50,%rsp
   10124:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
   10128:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1012c:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   10130:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
   10134:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
   1013b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1013f:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   10146:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
   1014a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount =
      static_cast<uint32_t>(maxFramesInFlight);
   10151:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10155:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  cmdBufferAllocInfo.commandBufferCount =
   1015c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  commandBuffers = vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo);
   1015f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10163:	48 8b 48 50          	mov    0x50(%rax),%rcx
   10167:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1016b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   1016f:	48 89 ce             	mov    %rcx,%rsi
   10172:	48 89 c7             	mov    %rax,%rdi
   10175:	e8 89 57 ff ff       	call   5903 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
   1017a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1017e:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   10185:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10189:	48 89 c6             	mov    %rax,%rsi
   1018c:	48 89 d7             	mov    %rdx,%rdi
   1018f:	e8 d4 35 00 00       	call   13768 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>
   10194:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10198:	48 89 c7             	mov    %rax,%rdi
   1019b:	e8 5a 5a ff ff       	call   5bfa <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
   101a0:	90                   	nop
   101a1:	c9                   	leave
   101a2:	c3                   	ret
   101a3:	90                   	nop

00000000000101a4 <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>:

void VulkanApp::recordCommandBuffer(VkCommandBuffer cmdBuffer,
                                    uint32_t imageIndex) {
   101a4:	55                   	push   %rbp
   101a5:	48 89 e5             	mov    %rsp,%rbp
   101a8:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   101af:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   101b3:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   101b7:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
  /* Begin recording a command buffer */
  VkCommandBufferBeginInfo cmdBufferBeginInfo{};
   101bd:	66 0f ef c0          	pxor   %xmm0,%xmm0
   101c1:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   101c5:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  cmdBufferBeginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
   101c9:	c7 45 e0 2a 00 00 00 	movl   $0x2a,-0x20(%rbp)
  cmdBufferBeginInfo.flags = 0;
   101d0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  cmdBufferBeginInfo.pInheritanceInfo = nullptr;
   101d7:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   101de:	00 
  vkh::beginCommandBuffer(cmdBuffer, &cmdBufferBeginInfo);
   101df:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   101e3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   101e7:	48 89 d6             	mov    %rdx,%rsi
   101ea:	48 89 c7             	mov    %rax,%rdi
   101ed:	e8 14 58 ff ff       	call   5a06 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  /* Start a render pass */
  VkClearValue clearColor = {{{0.0f, 0.0f, 0.0f, 1.0f}}};
   101f2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   101f6:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
   101fb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   101ff:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   10204:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10208:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
   1020d:	f3 0f 10 05 f3 ef 00 	movss  0xeff3(%rip),%xmm0        # 1f208 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   10214:	00 
   10215:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)

  VkRenderPassBeginInfo renderPassBeginInfo{};
   1021a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1021e:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   10222:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
   10226:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   1022a:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassBeginInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
   1022e:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassBeginInfo.renderPass = graphicsPipeline.renderPass;
   10235:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10239:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   10240:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassBeginInfo.framebuffer = framebuffers[imageIndex];
   10244:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10248:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
   1024f:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   10255:	48 89 c6             	mov    %rax,%rsi
   10258:	48 89 d7             	mov    %rdx,%rdi
   1025b:	e8 42 33 00 00       	call   135a2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
   10260:	48 8b 00             	mov    (%rax),%rax
   10263:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassBeginInfo.renderArea.offset = {0, 0};
   10267:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   1026e:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassBeginInfo.renderArea.extent = swapchain.extent;
   10275:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10279:	48 8b 40 7c          	mov    0x7c(%rax),%rax
   1027d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  renderPassBeginInfo.clearValueCount = 1;
   10281:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassBeginInfo.pClearValues = &clearColor;
   10288:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1028c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(cmdBuffer, &renderPassBeginInfo,
   10290:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   10294:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10298:	ba 00 00 00 00       	mov    $0x0,%edx
   1029d:	48 89 ce             	mov    %rcx,%rsi
   102a0:	48 89 c7             	mov    %rax,%rdi
   102a3:	e8 e8 43 ff ff       	call   4690 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  /* Drawing commands */
  vkCmdBindPipeline(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
   102a8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   102ac:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
   102b3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   102b7:	be 00 00 00 00       	mov    $0x0,%esi
   102bc:	48 89 c7             	mov    %rax,%rdi
   102bf:	e8 ac 40 ff ff       	call   4370 <vkCmdBindPipeline@plt>

  static const uint32_t vertexCount = 3;
  static const uint32_t instanceCount = 1;
  static const uint32_t firstVertex = 0;
  static const uint32_t firstInstance = 0;
  vkCmdDraw(cmdBuffer, vertexCount, instanceCount, firstVertex, firstInstance);
   102c4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   102c8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   102ce:	b9 00 00 00 00       	mov    $0x0,%ecx
   102d3:	ba 01 00 00 00       	mov    $0x1,%edx
   102d8:	be 03 00 00 00       	mov    $0x3,%esi
   102dd:	48 89 c7             	mov    %rax,%rdi
   102e0:	e8 bb 45 ff ff       	call   48a0 <vkCmdDraw@plt>

  /* End recording the command buffer */
  vkCmdEndRenderPass(cmdBuffer);
   102e5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   102e9:	48 89 c7             	mov    %rax,%rdi
   102ec:	e8 5f 3d ff ff       	call   4050 <vkCmdEndRenderPass@plt>
  vkh::endCommandBuffer(cmdBuffer);
   102f1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   102f5:	48 89 c7             	mov    %rax,%rdi
   102f8:	e8 93 57 ff ff       	call   5a90 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>
}
   102fd:	90                   	nop
   102fe:	c9                   	leave
   102ff:	c3                   	ret

0000000000010300 <_ZN9VulkanApp28createSynchronizationObjectsEv>:

void VulkanApp::createSynchronizationObjects() {
   10300:	55                   	push   %rbp
   10301:	48 89 e5             	mov    %rsp,%rbp
   10304:	53                   	push   %rbx
   10305:	48 83 ec 58          	sub    $0x58,%rsp
   10309:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkSemaphoreCreateInfo semaphoreInfo{};
   1030d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10311:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   10315:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
   1031a:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

  VkFenceCreateInfo fenceInfo{};
   10321:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10325:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   10329:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
   1032e:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
   10335:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

  sync.imageAvailableSemaphore.resize(maxFramesInFlight);
   1033c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10340:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   10347:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1034b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   10352:	48 89 c6             	mov    %rax,%rsi
   10355:	48 89 d7             	mov    %rdx,%rdi
   10358:	e8 43 34 00 00       	call   137a0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.renderFinisedSemaphore.resize(maxFramesInFlight);
   1035d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10361:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   10368:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1036c:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   10373:	48 89 c6             	mov    %rax,%rsi
   10376:	48 89 d7             	mov    %rdx,%rdi
   10379:	e8 22 34 00 00       	call   137a0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.inFlightFence.resize(maxFramesInFlight);
   1037e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10382:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   10389:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1038d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   10394:	48 89 c6             	mov    %rax,%rsi
   10397:	48 89 d7             	mov    %rdx,%rdi
   1039a:	e8 87 34 00 00       	call   13826 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   1039f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   103a6:	00 
   103a7:	e9 b9 00 00 00       	jmp    10465 <_ZN9VulkanApp28createSynchronizationObjectsEv+0x165>
    sync.imageAvailableSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   103ac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   103b0:	48 8b 40 50          	mov    0x50(%rax),%rax
   103b4:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   103b8:	ba 00 00 00 00       	mov    $0x0,%edx
   103bd:	48 89 ce             	mov    %rcx,%rsi
   103c0:	48 89 c7             	mov    %rax,%rdi
   103c3:	e8 fd 67 ff ff       	call   6bc5 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   103c8:	48 89 c3             	mov    %rax,%rbx
    sync.imageAvailableSemaphore[i] =
   103cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   103cf:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   103d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103da:	48 89 c6             	mov    %rax,%rsi
   103dd:	48 89 d7             	mov    %rdx,%rdi
   103e0:	e8 c7 34 00 00       	call   138ac <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   103e5:	48 89 18             	mov    %rbx,(%rax)
    sync.renderFinisedSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   103e8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   103ec:	48 8b 40 50          	mov    0x50(%rax),%rax
   103f0:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   103f4:	ba 00 00 00 00       	mov    $0x0,%edx
   103f9:	48 89 ce             	mov    %rcx,%rsi
   103fc:	48 89 c7             	mov    %rax,%rdi
   103ff:	e8 c1 67 ff ff       	call   6bc5 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   10404:	48 89 c3             	mov    %rax,%rbx
    sync.renderFinisedSemaphore[i] =
   10407:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1040b:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   10412:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10416:	48 89 c6             	mov    %rax,%rsi
   10419:	48 89 d7             	mov    %rdx,%rdi
   1041c:	e8 8b 34 00 00       	call   138ac <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   10421:	48 89 18             	mov    %rbx,(%rax)
    sync.inFlightFence[i] = vkh::createFence(device, &fenceInfo);
   10424:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10428:	48 8b 40 50          	mov    0x50(%rax),%rax
   1042c:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   10430:	ba 00 00 00 00       	mov    $0x0,%edx
   10435:	48 89 ce             	mov    %rcx,%rsi
   10438:	48 89 c7             	mov    %rax,%rdi
   1043b:	e8 1d 68 ff ff       	call   6c5d <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>
   10440:	48 89 c3             	mov    %rax,%rbx
   10443:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10447:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   1044e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10452:	48 89 c6             	mov    %rax,%rsi
   10455:	48 89 d7             	mov    %rdx,%rdi
   10458:	e8 6f 34 00 00       	call   138cc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   1045d:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   10460:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   10465:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10469:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   10470:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   10474:	0f 82 32 ff ff ff    	jb     103ac <_ZN9VulkanApp28createSynchronizationObjectsEv+0xac>
  }
}
   1047a:	90                   	nop
   1047b:	90                   	nop
   1047c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10480:	c9                   	leave
   10481:	c3                   	ret

0000000000010482 <_ZN9VulkanApp6renderEv>:

void VulkanApp::render() {
   10482:	55                   	push   %rbp
   10483:	48 89 e5             	mov    %rsp,%rbp
   10486:	41 57                	push   %r15
   10488:	41 56                	push   %r14
   1048a:	41 55                	push   %r13
   1048c:	41 54                	push   %r12
   1048e:	53                   	push   %rbx
   1048f:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   10496:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  /* 1. Wait for the previous frame to finish */
  vkWaitForFences(device, 1, &sync.inFlightFence[sync.currentFrame], VK_TRUE,
   1049d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   104a4:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   104ab:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   104b2:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   104b9:	48 89 c6             	mov    %rax,%rsi
   104bc:	48 89 d7             	mov    %rdx,%rdi
   104bf:	e8 08 34 00 00       	call   138cc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   104c4:	48 89 c2             	mov    %rax,%rdx
   104c7:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   104ce:	48 8b 40 50          	mov    0x50(%rax),%rax
   104d2:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   104d9:	b9 01 00 00 00       	mov    $0x1,%ecx
   104de:	be 01 00 00 00       	mov    $0x1,%esi
   104e3:	48 89 c7             	mov    %rax,%rdi
   104e6:	e8 25 3d ff ff       	call   4210 <vkWaitForFences@plt>

  /* 2. Acquire an image frome the swapchain */
  uint32_t imageIndex;
  VkResult result =
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
                            sync.imageAvailableSemaphore[sync.currentFrame],
   104eb:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   104f2:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   104f9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10500:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10507:	48 89 c6             	mov    %rax,%rsi
   1050a:	48 89 d7             	mov    %rdx,%rdi
   1050d:	e8 9a 33 00 00       	call   138ac <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
   10512:	48 8b 10             	mov    (%rax),%rdx
   10515:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1051c:	48 8b 70 70          	mov    0x70(%rax),%rsi
   10520:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10527:	48 8b 40 50          	mov    0x50(%rax),%rax
   1052b:	48 8d 4d a4          	lea    -0x5c(%rbp),%rcx
   1052f:	49 89 c9             	mov    %rcx,%r9
   10532:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10538:	48 89 d1             	mov    %rdx,%rcx
   1053b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   10542:	48 89 c7             	mov    %rax,%rdi
   10545:	e8 06 3c ff ff       	call   4150 <vkAcquireNextImageKHR@plt>
   1054a:	89 45 cc             	mov    %eax,-0x34(%rbp)
                            VK_NULL_HANDLE, &imageIndex);
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR) {
   1054d:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   10554:	74 09                	je     1055f <_ZN9VulkanApp6renderEv+0xdd>
   10556:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   1055d:	75 14                	jne    10573 <_ZN9VulkanApp6renderEv+0xf1>
    recreateSwapchain();
   1055f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10566:	48 89 c7             	mov    %rax,%rdi
   10569:	e8 e4 f7 ff ff       	call   fd52 <_ZN9VulkanApp17recreateSwapchainEv>
    throw std::runtime_error("Failed to present swapchain image.");
  }

  /* 6. Set up the next frame */
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
}
   1056e:	e9 f6 05 00 00       	jmp    10b69 <_ZN9VulkanApp6renderEv+0x6e7>
  } else if (result != VK_SUCCESS) {
   10573:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   10577:	74 3b                	je     105b4 <_ZN9VulkanApp6renderEv+0x132>
    throw std::runtime_error("Failed to acquire swapchain image.");
   10579:	bf 10 00 00 00       	mov    $0x10,%edi
   1057e:	e8 1d 3c ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   10583:	48 89 c3             	mov    %rax,%rbx
   10586:	48 8d 05 f3 e8 00 00 	lea    0xe8f3(%rip),%rax        # 1ee80 <_ZZN9VulkanApp6renderEvE11submitCount+0x8>
   1058d:	48 89 c6             	mov    %rax,%rsi
   10590:	48 89 df             	mov    %rbx,%rdi
   10593:	e8 88 3b ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
   10598:	48 8b 05 09 da 01 00 	mov    0x1da09(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1059f:	48 89 c2             	mov    %rax,%rdx
   105a2:	48 8d 05 97 d7 01 00 	lea    0x1d797(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   105a9:	48 89 c6             	mov    %rax,%rsi
   105ac:	48 89 df             	mov    %rbx,%rdi
   105af:	e8 0c 42 ff ff       	call   47c0 <__cxa_throw@plt>
  vkResetFences(device, 1, &sync.inFlightFence[sync.currentFrame]);
   105b4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   105bb:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   105c2:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   105c9:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   105d0:	48 89 c6             	mov    %rax,%rsi
   105d3:	48 89 d7             	mov    %rdx,%rdi
   105d6:	e8 f1 32 00 00       	call   138cc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   105db:	48 89 c2             	mov    %rax,%rdx
   105de:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   105e5:	48 8b 40 50          	mov    0x50(%rax),%rax
   105e9:	be 01 00 00 00       	mov    $0x1,%esi
   105ee:	48 89 c7             	mov    %rax,%rdi
   105f1:	e8 1a 41 ff ff       	call   4710 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[sync.currentFrame], 0);
   105f6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   105fd:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   10604:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1060b:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10612:	48 89 c6             	mov    %rax,%rsi
   10615:	48 89 d7             	mov    %rdx,%rdi
   10618:	e8 cf 32 00 00       	call   138ec <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   1061d:	48 8b 00             	mov    (%rax),%rax
   10620:	be 00 00 00 00       	mov    $0x0,%esi
   10625:	48 89 c7             	mov    %rax,%rdi
   10628:	e8 73 3f ff ff       	call   45a0 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[sync.currentFrame], imageIndex);
   1062d:	8b 5d a4             	mov    -0x5c(%rbp),%ebx
   10630:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10637:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   1063e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10645:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   1064c:	48 89 c6             	mov    %rax,%rsi
   1064f:	48 89 d7             	mov    %rdx,%rdi
   10652:	e8 95 32 00 00       	call   138ec <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   10657:	48 8b 08             	mov    (%rax),%rcx
   1065a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10661:	89 da                	mov    %ebx,%edx
   10663:	48 89 ce             	mov    %rcx,%rsi
   10666:	48 89 c7             	mov    %rax,%rdi
   10669:	e8 36 fb ff ff       	call   101a4 <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   1066e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10675:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   1067c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10683:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   1068a:	48 89 c6             	mov    %rax,%rsi
   1068d:	48 89 d7             	mov    %rdx,%rdi
   10690:	e8 17 32 00 00       	call   138ac <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   10695:	48 8b 00             	mov    (%rax),%rax
   10698:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1069c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
   106a0:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   106a7:	48 c7 85 98 fe ff ff 	movq   $0x1,-0x168(%rbp)
   106ae:	01 00 00 00 
   106b2:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   106b6:	48 89 c7             	mov    %rax,%rdi
   106b9:	e8 4e 32 00 00       	call   1390c <_ZNSaIP13VkSemaphore_TEC1Ev>
   106be:	48 8d 55 b7          	lea    -0x49(%rbp),%rdx
   106c2:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
   106c9:	48 8b 9d 98 fe ff ff 	mov    -0x168(%rbp),%rbx
   106d0:	48 89 ce             	mov    %rcx,%rsi
   106d3:	48 89 df             	mov    %rbx,%rdi
   106d6:	48 89 df             	mov    %rbx,%rdi
   106d9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   106dd:	48 89 d1             	mov    %rdx,%rcx
   106e0:	48 89 fa             	mov    %rdi,%rdx
   106e3:	48 89 c7             	mov    %rax,%rdi
   106e6:	e8 59 32 00 00       	call   13944 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   106eb:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   106ef:	48 89 c7             	mov    %rax,%rdi
   106f2:	e8 31 32 00 00       	call   13928 <_ZNSaIP13VkSemaphore_TED1Ev>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   106f7:	c7 45 b8 00 04 00 00 	movl   $0x400,-0x48(%rbp)
   106fe:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   10702:	49 89 c6             	mov    %rax,%r14
   10705:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1070b:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1070f:	48 89 c7             	mov    %rax,%rdi
   10712:	e8 f9 32 00 00       	call   13a10 <_ZNSaIjEC1Ev>
   10717:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   1071b:	4c 89 f6             	mov    %r14,%rsi
   1071e:	4c 89 ff             	mov    %r15,%rdi
   10721:	4c 89 f1             	mov    %r14,%rcx
   10724:	4c 89 fb             	mov    %r15,%rbx
   10727:	48 89 df             	mov    %rbx,%rdi
   1072a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10731:	48 89 d1             	mov    %rdx,%rcx
   10734:	48 89 fa             	mov    %rdi,%rdx
   10737:	48 89 c7             	mov    %rax,%rdi
   1073a:	e8 09 33 00 00       	call   13a48 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>
   1073f:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   10743:	48 89 c7             	mov    %rax,%rdi
   10746:	e8 e1 32 00 00       	call   13a2c <_ZNSaIjED1Ev>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   1074b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10752:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   10759:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10760:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10767:	48 89 c6             	mov    %rax,%rsi
   1076a:	48 89 d7             	mov    %rdx,%rdi
   1076d:	e8 3a 31 00 00       	call   138ac <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   10772:	48 8b 00             	mov    (%rax),%rax
   10775:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10779:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1077d:	49 89 c4             	mov    %rax,%r12
   10780:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   10786:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   1078a:	48 89 c7             	mov    %rax,%rdi
   1078d:	e8 7a 31 00 00       	call   1390c <_ZNSaIP13VkSemaphore_TEC1Ev>
   10792:	48 8d 55 cb          	lea    -0x35(%rbp),%rdx
   10796:	4c 89 e6             	mov    %r12,%rsi
   10799:	4c 89 ef             	mov    %r13,%rdi
   1079c:	4c 89 e1             	mov    %r12,%rcx
   1079f:	4c 89 eb             	mov    %r13,%rbx
   107a2:	48 89 df             	mov    %rbx,%rdi
   107a5:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   107ac:	48 89 d1             	mov    %rdx,%rcx
   107af:	48 89 fa             	mov    %rdi,%rdx
   107b2:	48 89 c7             	mov    %rax,%rdi
   107b5:	e8 8a 31 00 00       	call   13944 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   107ba:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   107be:	48 89 c7             	mov    %rax,%rdi
   107c1:	e8 62 31 00 00       	call   13928 <_ZNSaIP13VkSemaphore_TED1Ev>
  VkSubmitInfo submitInfo{};
   107c6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   107ca:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
   107d1:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
   107d8:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
   107df:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
   107e6:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
   107ed:	ff 
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
   107ee:	c7 85 f0 fe ff ff 04 	movl   $0x4,-0x110(%rbp)
   107f5:	00 00 00 
  submitInfo.waitSemaphoreCount = static_cast<uint32_t>(waitSemaphores.size());
   107f8:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   107fc:	48 89 c7             	mov    %rax,%rdi
   107ff:	e8 10 33 00 00       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   10804:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores.data();
   1080a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1080e:	48 89 c7             	mov    %rax,%rdi
   10811:	e8 22 33 00 00       	call   13b38 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   10816:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  submitInfo.pWaitDstStageMask = waitStages.data();
   1081d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10824:	48 89 c7             	mov    %rax,%rdi
   10827:	e8 30 33 00 00       	call   13b5c <_ZNSt6vectorIjSaIjEE4dataEv>
   1082c:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  submitInfo.commandBufferCount = 1;
   10833:	c7 85 18 ff ff ff 01 	movl   $0x1,-0xe8(%rbp)
   1083a:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffers[sync.currentFrame];
   1083d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10844:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   1084b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10852:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10859:	48 89 c6             	mov    %rax,%rsi
   1085c:	48 89 d7             	mov    %rdx,%rdi
   1085f:	e8 88 30 00 00       	call   138ec <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   10864:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
      static_cast<uint32_t>(signalSemaphores.size());
   1086b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10872:	48 89 c7             	mov    %rax,%rdi
   10875:	e8 9a 32 00 00       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  submitInfo.signalSemaphoreCount =
   1087a:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores.data();
   10880:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10887:	48 89 c7             	mov    %rax,%rdi
   1088a:	e8 a9 32 00 00       	call   13b38 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   1088f:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   10896:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1089d:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   108a4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   108ab:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   108b2:	48 89 c6             	mov    %rax,%rsi
   108b5:	48 89 d7             	mov    %rdx,%rdi
   108b8:	e8 0f 30 00 00       	call   138cc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   108bd:	48 8b 08             	mov    (%rax),%rcx
   108c0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   108c7:	48 8b 40 60          	mov    0x60(%rax),%rax
   108cb:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   108d2:	be 01 00 00 00       	mov    $0x1,%esi
   108d7:	48 89 c7             	mov    %rax,%rdi
   108da:	e8 21 3d ff ff       	call   4600 <vkQueueSubmit@plt>
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   108df:	85 c0                	test   %eax,%eax
   108e1:	0f 95 c0             	setne  %al
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   108e4:	84 c0                	test   %al,%al
   108e6:	74 3b                	je     10923 <_ZN9VulkanApp6renderEv+0x4a1>
    throw std::runtime_error("Failed to submit draw command buffer.");
   108e8:	bf 10 00 00 00       	mov    $0x10,%edi
   108ed:	e8 ae 38 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   108f2:	48 89 c3             	mov    %rax,%rbx
   108f5:	48 8d 05 ac e5 00 00 	lea    0xe5ac(%rip),%rax        # 1eea8 <_ZZN9VulkanApp6renderEvE11submitCount+0x30>
   108fc:	48 89 c6             	mov    %rax,%rsi
   108ff:	48 89 df             	mov    %rbx,%rdi
   10902:	e8 19 38 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
   10907:	48 8b 05 9a d6 01 00 	mov    0x1d69a(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1090e:	48 89 c2             	mov    %rax,%rdx
   10911:	48 8d 05 28 d4 01 00 	lea    0x1d428(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10918:	48 89 c6             	mov    %rax,%rsi
   1091b:	48 89 df             	mov    %rbx,%rdi
   1091e:	e8 9d 3e ff ff       	call   47c0 <__cxa_throw@plt>
  VkPresentInfoKHR presentInfo{};
   10923:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10927:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
   1092e:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
   10935:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
   1093c:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
   10943:	c7 85 b0 fe ff ff e9 	movl   $0x3b9acde9,-0x150(%rbp)
   1094a:	cd 9a 3b 
      static_cast<uint32_t>(signalSemaphores.size());
   1094d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10954:	48 89 c7             	mov    %rax,%rdi
   10957:	e8 b8 31 00 00       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  presentInfo.waitSemaphoreCount =
   1095c:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  presentInfo.pWaitSemaphores = signalSemaphores.data();
   10962:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10969:	48 89 c7             	mov    %rax,%rdi
   1096c:	e8 c7 31 00 00       	call   13b38 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   10971:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  presentInfo.swapchainCount = swapchainCount;
   10978:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1097f:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
   10985:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  presentInfo.pSwapchains = &swapchain.self;
   1098b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10992:	48 83 c0 70          	add    $0x70,%rax
   10996:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  presentInfo.pImageIndices = &imageIndex;
   1099d:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
   109a1:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  presentInfo.pResults = nullptr;
   109a8:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
   109af:	00 00 00 00 
  result = vkQueuePresentKHR(queue, &presentInfo);
   109b3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   109ba:	48 8b 40 60          	mov    0x60(%rax),%rax
   109be:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
   109c5:	48 89 d6             	mov    %rdx,%rsi
   109c8:	48 89 c7             	mov    %rax,%rdi
   109cb:	e8 70 3d ff ff       	call   4740 <vkQueuePresentKHR@plt>
   109d0:	89 45 cc             	mov    %eax,-0x34(%rbp)
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   109d3:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   109da:	74 1b                	je     109f7 <_ZN9VulkanApp6renderEv+0x575>
   109dc:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   109e3:	74 12                	je     109f7 <_ZN9VulkanApp6renderEv+0x575>
      framebufferResized) {
   109e5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   109ec:	0f b6 80 18 01 00 00 	movzbl 0x118(%rax),%eax
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   109f3:	84 c0                	test   %al,%al
   109f5:	74 1f                	je     10a16 <_ZN9VulkanApp6renderEv+0x594>
    framebufferResized = false;
   109f7:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   109fe:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
    recreateSwapchain();
   10a05:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10a0c:	48 89 c7             	mov    %rax,%rdi
   10a0f:	e8 3e f3 ff ff       	call   fd52 <_ZN9VulkanApp17recreateSwapchainEv>
   10a14:	eb 41                	jmp    10a57 <_ZN9VulkanApp6renderEv+0x5d5>
  } else if (result != VK_SUCCESS) {
   10a16:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   10a1a:	74 3b                	je     10a57 <_ZN9VulkanApp6renderEv+0x5d5>
    throw std::runtime_error("Failed to present swapchain image.");
   10a1c:	bf 10 00 00 00       	mov    $0x10,%edi
   10a21:	e8 7a 37 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   10a26:	48 89 c3             	mov    %rax,%rbx
   10a29:	48 8d 05 a0 e4 00 00 	lea    0xe4a0(%rip),%rax        # 1eed0 <_ZZN9VulkanApp6renderEvE11submitCount+0x58>
   10a30:	48 89 c6             	mov    %rax,%rsi
   10a33:	48 89 df             	mov    %rbx,%rdi
   10a36:	e8 e5 36 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
   10a3b:	48 8b 05 66 d5 01 00 	mov    0x1d566(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10a42:	48 89 c2             	mov    %rax,%rdx
   10a45:	48 8d 05 f4 d2 01 00 	lea    0x1d2f4(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10a4c:	48 89 c6             	mov    %rax,%rsi
   10a4f:	48 89 df             	mov    %rbx,%rdi
   10a52:	e8 69 3d ff ff       	call   47c0 <__cxa_throw@plt>
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
   10a57:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10a5e:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10a65:	48 8d 50 01          	lea    0x1(%rax),%rdx
   10a69:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10a70:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
   10a77:	48 89 d0             	mov    %rdx,%rax
   10a7a:	ba 00 00 00 00       	mov    $0x0,%edx
   10a7f:	48 f7 f1             	div    %rcx
   10a82:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10a89:	48 89 90 90 01 00 00 	mov    %rdx,0x190(%rax)
}
   10a90:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10a97:	48 89 c7             	mov    %rax,%rdi
   10a9a:	e8 2d 2f 00 00       	call   139cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   10a9f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10aa6:	48 89 c7             	mov    %rax,%rdi
   10aa9:	e8 22 30 00 00       	call   13ad0 <_ZNSt6vectorIjSaIjEED1Ev>
   10aae:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10ab2:	48 89 c7             	mov    %rax,%rdi
   10ab5:	e8 12 2f 00 00       	call   139cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   10aba:	e9 aa 00 00 00       	jmp    10b69 <_ZN9VulkanApp6renderEv+0x6e7>
    throw std::runtime_error("Failed to acquire swapchain image.");
   10abf:	49 89 c4             	mov    %rax,%r12
   10ac2:	48 89 df             	mov    %rbx,%rdi
   10ac5:	e8 e6 37 ff ff       	call   42b0 <__cxa_free_exception@plt>
   10aca:	4c 89 e0             	mov    %r12,%rax
   10acd:	48 89 c7             	mov    %rax,%rdi
   10ad0:	e8 4b 3d ff ff       	call   4820 <_Unwind_Resume@plt>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   10ad5:	48 89 c3             	mov    %rax,%rbx
   10ad8:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   10adc:	48 89 c7             	mov    %rax,%rdi
   10adf:	e8 44 2e 00 00       	call   13928 <_ZNSaIP13VkSemaphore_TED1Ev>
   10ae4:	48 89 d8             	mov    %rbx,%rax
   10ae7:	48 89 c7             	mov    %rax,%rdi
   10aea:	e8 31 3d ff ff       	call   4820 <_Unwind_Resume@plt>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   10aef:	48 89 c3             	mov    %rax,%rbx
   10af2:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   10af6:	48 89 c7             	mov    %rax,%rdi
   10af9:	e8 2e 2f 00 00       	call   13a2c <_ZNSaIjED1Ev>
   10afe:	eb 52                	jmp    10b52 <_ZN9VulkanApp6renderEv+0x6d0>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   10b00:	48 89 c3             	mov    %rax,%rbx
   10b03:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   10b07:	48 89 c7             	mov    %rax,%rdi
   10b0a:	e8 19 2e 00 00       	call   13928 <_ZNSaIP13VkSemaphore_TED1Ev>
   10b0f:	eb 32                	jmp    10b43 <_ZN9VulkanApp6renderEv+0x6c1>
    throw std::runtime_error("Failed to submit draw command buffer.");
   10b11:	49 89 c4             	mov    %rax,%r12
   10b14:	48 89 df             	mov    %rbx,%rdi
   10b17:	e8 94 37 ff ff       	call   42b0 <__cxa_free_exception@plt>
   10b1c:	4c 89 e3             	mov    %r12,%rbx
   10b1f:	eb 13                	jmp    10b34 <_ZN9VulkanApp6renderEv+0x6b2>
    throw std::runtime_error("Failed to present swapchain image.");
   10b21:	49 89 c4             	mov    %rax,%r12
   10b24:	48 89 df             	mov    %rbx,%rdi
   10b27:	e8 84 37 ff ff       	call   42b0 <__cxa_free_exception@plt>
   10b2c:	4c 89 e3             	mov    %r12,%rbx
   10b2f:	eb 03                	jmp    10b34 <_ZN9VulkanApp6renderEv+0x6b2>
}
   10b31:	48 89 c3             	mov    %rax,%rbx
   10b34:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10b3b:	48 89 c7             	mov    %rax,%rdi
   10b3e:	e8 89 2e 00 00       	call   139cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   10b43:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10b4a:	48 89 c7             	mov    %rax,%rdi
   10b4d:	e8 7e 2f 00 00       	call   13ad0 <_ZNSt6vectorIjSaIjEED1Ev>
   10b52:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10b56:	48 89 c7             	mov    %rax,%rdi
   10b59:	e8 6e 2e 00 00       	call   139cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   10b5e:	48 89 d8             	mov    %rbx,%rax
   10b61:	48 89 c7             	mov    %rax,%rdi
   10b64:	e8 b7 3c ff ff       	call   4820 <_Unwind_Resume@plt>
   10b69:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   10b70:	5b                   	pop    %rbx
   10b71:	41 5c                	pop    %r12
   10b73:	41 5d                	pop    %r13
   10b75:	41 5e                	pop    %r14
   10b77:	41 5f                	pop    %r15
   10b79:	5d                   	pop    %rbp
   10b7a:	c3                   	ret
   10b7b:	90                   	nop

0000000000010b7c <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
   10b7c:	55                   	push   %rbp
   10b7d:	48 89 e5             	mov    %rsp,%rbp
   10b80:	41 57                	push   %r15
   10b82:	41 56                	push   %r14
   10b84:	41 55                	push   %r13
   10b86:	41 54                	push   %r12
   10b88:	53                   	push   %rbx
   10b89:	48 83 ec 38          	sub    $0x38,%rsp
   10b8d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10b91:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10b95:	48 8d 58 10          	lea    0x10(%rax),%rbx
   10b99:	48 8d 05 53 e3 00 00 	lea    0xe353(%rip),%rax        # 1eef3 <_ZZN9VulkanApp6renderEvE11submitCount+0x7b>
   10ba0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10ba4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10ba8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10bac:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
   10bb3:	00 
   10bb4:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   10bb8:	48 89 c7             	mov    %rax,%rdi
   10bbb:	e8 70 82 ff ff       	call   8e30 <_ZNSaIPKcEC1Ev>
   10bc0:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   10bc4:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   10bc8:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   10bcc:	49 89 f0             	mov    %rsi,%r8
   10bcf:	49 89 f9             	mov    %rdi,%r9
   10bd2:	48 89 fa             	mov    %rdi,%rdx
   10bd5:	48 89 c1             	mov    %rax,%rcx
   10bd8:	4c 89 c6             	mov    %r8,%rsi
   10bdb:	48 89 df             	mov    %rbx,%rdi
   10bde:	e8 dd 19 00 00       	call   125c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10be3:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   10be7:	48 89 c7             	mov    %rax,%rdi
   10bea:	e8 5d 82 ff ff       	call   8e4c <_ZNSaIPKcED1Ev>
   10bef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10bf3:	48 8d 58 28          	lea    0x28(%rax),%rbx
   10bf7:	4c 8d 35 e2 d0 01 00 	lea    0x1d0e2(%rip),%r14        # 2dce0 <C.145.0>
   10bfe:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   10c04:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   10c08:	48 89 c7             	mov    %rax,%rdi
   10c0b:	e8 20 82 ff ff       	call   8e30 <_ZNSaIPKcEC1Ev>
   10c10:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   10c14:	4d 89 f0             	mov    %r14,%r8
   10c17:	4d 89 f9             	mov    %r15,%r9
   10c1a:	4c 89 f6             	mov    %r14,%rsi
   10c1d:	4c 89 ff             	mov    %r15,%rdi
   10c20:	48 89 fa             	mov    %rdi,%rdx
   10c23:	48 89 c1             	mov    %rax,%rcx
   10c26:	4c 89 c6             	mov    %r8,%rsi
   10c29:	48 89 df             	mov    %rbx,%rdi
   10c2c:	e8 8f 19 00 00       	call   125c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10c31:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   10c35:	48 89 c7             	mov    %rax,%rdi
   10c38:	e8 0f 82 ff ff       	call   8e4c <_ZNSaIPKcED1Ev>
   10c3d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c41:	c7 80 88 00 00 00 00 	movl   $0x0,0x88(%rax)
   10c48:	00 00 00 
   10c4b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c4f:	c7 80 8c 00 00 00 01 	movl   $0x1,0x8c(%rax)
   10c56:	00 00 00 
   10c59:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10c5d:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
   10c64:	4c 8d 25 85 d0 01 00 	lea    0x1d085(%rip),%r12        # 2dcf0 <C.146.1>
   10c6b:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   10c71:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   10c75:	48 89 c7             	mov    %rax,%rdi
   10c78:	e8 b3 81 ff ff       	call   8e30 <_ZNSaIPKcEC1Ev>
   10c7d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   10c81:	4d 89 e0             	mov    %r12,%r8
   10c84:	4d 89 e9             	mov    %r13,%r9
   10c87:	4c 89 e6             	mov    %r12,%rsi
   10c8a:	4c 89 ef             	mov    %r13,%rdi
   10c8d:	48 89 fa             	mov    %rdi,%rdx
   10c90:	48 89 c1             	mov    %rax,%rcx
   10c93:	4c 89 c6             	mov    %r8,%rsi
   10c96:	48 89 df             	mov    %rbx,%rdi
   10c99:	e8 22 19 00 00       	call   125c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10c9e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   10ca2:	48 89 c7             	mov    %rax,%rdi
   10ca5:	e8 a2 81 ff ff       	call   8e4c <_ZNSaIPKcED1Ev>
   10caa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10cae:	48 05 a8 00 00 00    	add    $0xa8,%rax
   10cb4:	48 89 c7             	mov    %rax,%rdi
   10cb7:	e8 be 16 00 00       	call   1237a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
   10cbc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10cc0:	48 05 c0 00 00 00    	add    $0xc0,%rax
   10cc6:	48 89 c7             	mov    %rax,%rdi
   10cc9:	e8 e4 16 00 00       	call   123b2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
   10cce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10cd2:	48 05 d8 00 00 00    	add    $0xd8,%rax
   10cd8:	48 89 c7             	mov    %rax,%rdi
   10cdb:	e8 ee 16 00 00       	call   123ce <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
   10ce0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10ce4:	c7 80 f8 00 00 00 01 	movl   $0x1,0xf8(%rax)
   10ceb:	00 00 00 
   10cee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10cf2:	48 05 00 01 00 00    	add    $0x100,%rax
   10cf8:	48 89 c7             	mov    %rax,%rdi
   10cfb:	e8 40 17 00 00       	call   12440 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
   10d00:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d04:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
   10d0b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d0f:	48 c7 80 20 01 00 00 	movq   $0x2,0x120(%rax)
   10d16:	02 00 00 00 
   10d1a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d1e:	48 05 28 01 00 00    	add    $0x128,%rax
   10d24:	48 89 c7             	mov    %rax,%rdi
   10d27:	e8 4c 17 00 00       	call   12478 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   10d2c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d30:	48 05 48 01 00 00    	add    $0x148,%rax
   10d36:	48 89 c7             	mov    %rax,%rdi
   10d39:	e8 fe 17 00 00       	call   1253c <_ZN9VulkanApp11SyncWrapperC1Ev>
  createWindow();
   10d3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d42:	48 89 c7             	mov    %rax,%rdi
   10d45:	e8 70 ce ff ff       	call   dbba <_ZN9VulkanApp12createWindowEv>
  createInstance();
   10d4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d4e:	48 89 c7             	mov    %rax,%rdi
   10d51:	e8 d2 ce ff ff       	call   dc28 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
   10d56:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d5a:	48 89 c7             	mov    %rax,%rdi
   10d5d:	e8 ac d0 ff ff       	call   de0e <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
   10d62:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d66:	48 89 c7             	mov    %rax,%rdi
   10d69:	e8 34 d1 ff ff       	call   dea2 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
   10d6e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d72:	48 89 c7             	mov    %rax,%rdi
   10d75:	e8 80 d3 ff ff       	call   e0fa <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
   10d7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d7e:	48 89 c7             	mov    %rax,%rdi
   10d81:	e8 92 df ff ff       	call   ed18 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   10d86:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d8a:	48 89 c7             	mov    %rax,%rdi
   10d8d:	e8 cc df ff ff       	call   ed5e <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
   10d92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10d96:	48 89 c7             	mov    %rax,%rdi
   10d99:	e8 6c e1 ff ff       	call   ef0a <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   10d9e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10da2:	48 89 c7             	mov    %rax,%rdi
   10da5:	e8 b4 ed ff ff       	call   fb5e <_ZN9VulkanApp18createFramebuffersEv>
  createCommandPool();
   10daa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10dae:	48 89 c7             	mov    %rax,%rdi
   10db1:	e8 1a f2 ff ff       	call   ffd0 <_ZN9VulkanApp17createCommandPoolEv>
  createVertexBuffers();
   10db6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10dba:	48 89 c7             	mov    %rax,%rdi
   10dbd:	e8 72 f2 ff ff       	call   10034 <_ZN9VulkanApp19createVertexBuffersEv>
  createCommandBuffers();
   10dc2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10dc6:	48 89 c7             	mov    %rax,%rdi
   10dc9:	e8 4e f3 ff ff       	call   1011c <_ZN9VulkanApp20createCommandBuffersEv>
  createSynchronizationObjects();
   10dce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10dd2:	48 89 c7             	mov    %rax,%rdi
   10dd5:	e8 26 f5 ff ff       	call   10300 <_ZN9VulkanApp28createSynchronizationObjectsEv>
}
   10dda:	e9 d9 00 00 00       	jmp    10eb8 <_ZN9VulkanAppC1Ev+0x33c>
VulkanApp::VulkanApp() {
   10ddf:	48 89 c3             	mov    %rax,%rbx
   10de2:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   10de6:	48 89 c7             	mov    %rax,%rdi
   10de9:	e8 5e 80 ff ff       	call   8e4c <_ZNSaIPKcED1Ev>
   10dee:	48 89 d8             	mov    %rbx,%rax
   10df1:	48 89 c7             	mov    %rax,%rdi
   10df4:	e8 27 3a ff ff       	call   4820 <_Unwind_Resume@plt>
   10df9:	48 89 c3             	mov    %rax,%rbx
   10dfc:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   10e00:	48 89 c7             	mov    %rax,%rdi
   10e03:	e8 44 80 ff ff       	call   8e4c <_ZNSaIPKcED1Ev>
   10e08:	e9 90 00 00 00       	jmp    10e9d <_ZN9VulkanAppC1Ev+0x321>
   10e0d:	48 89 c3             	mov    %rax,%rbx
   10e10:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   10e14:	48 89 c7             	mov    %rax,%rdi
   10e17:	e8 30 80 ff ff       	call   8e4c <_ZNSaIPKcED1Ev>
   10e1c:	eb 6f                	jmp    10e8d <_ZN9VulkanAppC1Ev+0x311>
}
   10e1e:	48 89 c3             	mov    %rax,%rbx
   10e21:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e25:	48 05 48 01 00 00    	add    $0x148,%rax
   10e2b:	48 89 c7             	mov    %rax,%rdi
   10e2e:	e8 51 17 00 00       	call   12584 <_ZN9VulkanApp11SyncWrapperD1Ev>
   10e33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e37:	48 05 28 01 00 00    	add    $0x128,%rax
   10e3d:	48 89 c7             	mov    %rax,%rdi
   10e40:	e8 b5 4d ff ff       	call   5bfa <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   10e45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e49:	48 05 00 01 00 00    	add    $0x100,%rax
   10e4f:	48 89 c7             	mov    %rax,%rdi
   10e52:	e8 59 2e 00 00       	call   13cb0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   10e57:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e5b:	48 05 c0 00 00 00    	add    $0xc0,%rax
   10e61:	48 89 c7             	mov    %rax,%rdi
   10e64:	e8 09 8a ff ff       	call   9872 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   10e69:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e6d:	48 05 a8 00 00 00    	add    $0xa8,%rax
   10e73:	48 89 c7             	mov    %rax,%rdi
   10e76:	e8 bf 26 00 00       	call   1353a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   10e7b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e7f:	48 05 90 00 00 00    	add    $0x90,%rax
   10e85:	48 89 c7             	mov    %rax,%rdi
   10e88:	e8 bb 17 00 00       	call   12648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
   10e8d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e91:	48 83 c0 28          	add    $0x28,%rax
}
   10e95:	48 89 c7             	mov    %rax,%rdi
   10e98:	e8 ab 17 00 00       	call   12648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   10e9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10ea1:	48 83 c0 10          	add    $0x10,%rax
   10ea5:	48 89 c7             	mov    %rax,%rdi
   10ea8:	e8 9b 17 00 00       	call   12648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   10ead:	48 89 d8             	mov    %rbx,%rax
   10eb0:	48 89 c7             	mov    %rax,%rdi
   10eb3:	e8 68 39 ff ff       	call   4820 <_Unwind_Resume@plt>
   10eb8:	48 83 c4 38          	add    $0x38,%rsp
   10ebc:	5b                   	pop    %rbx
   10ebd:	41 5c                	pop    %r12
   10ebf:	41 5d                	pop    %r13
   10ec1:	41 5e                	pop    %r14
   10ec3:	41 5f                	pop    %r15
   10ec5:	5d                   	pop    %rbp
   10ec6:	c3                   	ret
   10ec7:	90                   	nop

0000000000010ec8 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
   10ec8:	55                   	push   %rbp
   10ec9:	48 89 e5             	mov    %rsp,%rbp
   10ecc:	48 83 ec 20          	sub    $0x20,%rsp
   10ed0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  cleanupSwapchain();
   10ed4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ed8:	48 89 c7             	mov    %rax,%rdi
   10edb:	e8 24 ef ff ff       	call   fe04 <_ZN9VulkanApp16cleanupSwapchainEv>
  vkDestroyBuffer(device, vertexBuffer, nullptr);
   10ee0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ee4:	48 8b 88 98 01 00 00 	mov    0x198(%rax),%rcx
   10eeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10eef:	48 8b 40 50          	mov    0x50(%rax),%rax
   10ef3:	ba 00 00 00 00       	mov    $0x0,%edx
   10ef8:	48 89 ce             	mov    %rcx,%rsi
   10efb:	48 89 c7             	mov    %rax,%rdi
   10efe:	e8 ad 32 ff ff       	call   41b0 <vkDestroyBuffer@plt>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   10f03:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   10f0a:	00 
   10f0b:	e9 a4 00 00 00       	jmp    10fb4 <_ZN9VulkanAppD1Ev+0xec>
    vkh::destroySemaphore(device, sync.imageAvailableSemaphore[i]);
   10f10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f14:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   10f1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f1f:	48 89 c6             	mov    %rax,%rsi
   10f22:	48 89 d7             	mov    %rdx,%rdi
   10f25:	e8 82 29 00 00       	call   138ac <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   10f2a:	48 8b 08             	mov    (%rax),%rcx
   10f2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f31:	48 8b 40 50          	mov    0x50(%rax),%rax
   10f35:	ba 00 00 00 00       	mov    $0x0,%edx
   10f3a:	48 89 ce             	mov    %rcx,%rsi
   10f3d:	48 89 c7             	mov    %rax,%rdi
   10f40:	e8 54 69 ff ff       	call   7899 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroySemaphore(device, sync.renderFinisedSemaphore[i]);
   10f45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f49:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   10f50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f54:	48 89 c6             	mov    %rax,%rsi
   10f57:	48 89 d7             	mov    %rdx,%rdi
   10f5a:	e8 4d 29 00 00       	call   138ac <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   10f5f:	48 8b 08             	mov    (%rax),%rcx
   10f62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f66:	48 8b 40 50          	mov    0x50(%rax),%rax
   10f6a:	ba 00 00 00 00       	mov    $0x0,%edx
   10f6f:	48 89 ce             	mov    %rcx,%rsi
   10f72:	48 89 c7             	mov    %rax,%rdi
   10f75:	e8 1f 69 ff ff       	call   7899 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroyFence(device, sync.inFlightFence[i]);
   10f7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f7e:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   10f85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f89:	48 89 c6             	mov    %rax,%rsi
   10f8c:	48 89 d7             	mov    %rdx,%rdi
   10f8f:	e8 38 29 00 00       	call   138cc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   10f94:	48 8b 08             	mov    (%rax),%rcx
   10f97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f9b:	48 8b 40 50          	mov    0x50(%rax),%rax
   10f9f:	ba 00 00 00 00       	mov    $0x0,%edx
   10fa4:	48 89 ce             	mov    %rcx,%rsi
   10fa7:	48 89 c7             	mov    %rax,%rdi
   10faa:	e8 18 69 ff ff       	call   78c7 <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   10faf:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   10fb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fb8:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   10fbf:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   10fc3:	0f 82 47 ff ff ff    	jb     10f10 <_ZN9VulkanAppD1Ev+0x48>
  }
  vkh::destroyCommandPool(device, commandPool);
   10fc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fcd:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
   10fd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fd8:	48 8b 40 50          	mov    0x50(%rax),%rax
   10fdc:	ba 00 00 00 00       	mov    $0x0,%edx
   10fe1:	48 89 ce             	mov    %rcx,%rsi
   10fe4:	48 89 c7             	mov    %rax,%rdi
   10fe7:	e8 7f 68 ff ff       	call   786b <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
   10fec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ff0:	48 8b 40 50          	mov    0x50(%rax),%rax
   10ff4:	be 00 00 00 00       	mov    $0x0,%esi
   10ff9:	48 89 c7             	mov    %rax,%rdi
   10ffc:	e8 45 66 ff ff       	call   7646 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
   11001:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11005:	48 8b 48 40          	mov    0x40(%rax),%rcx
   11009:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1100d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11011:	ba 00 00 00 00       	mov    $0x0,%edx
   11016:	48 89 ce             	mov    %rcx,%rsi
   11019:	48 89 c7             	mov    %rax,%rdi
   1101c:	e8 30 c7 ff ff       	call   d751 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
   11021:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11025:	48 8b 48 48          	mov    0x48(%rax),%rcx
   11029:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1102d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11031:	ba 00 00 00 00       	mov    $0x0,%edx
   11036:	48 89 ce             	mov    %rcx,%rsi
   11039:	48 89 c7             	mov    %rax,%rdi
   1103c:	e8 2b 66 ff ff       	call   766c <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
   11041:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11045:	48 8b 40 08          	mov    0x8(%rax),%rax
   11049:	be 00 00 00 00       	mov    $0x0,%esi
   1104e:	48 89 c7             	mov    %rax,%rdi
   11051:	e8 ca 65 ff ff       	call   7620 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
   11056:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1105a:	48 8b 00             	mov    (%rax),%rax
   1105d:	48 89 c7             	mov    %rax,%rdi
   11060:	e8 a0 65 ff ff       	call   7605 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
   11065:	e8 e6 33 ff ff       	call   4450 <glfwTerminate@plt>
}
   1106a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1106e:	48 05 48 01 00 00    	add    $0x148,%rax
   11074:	48 89 c7             	mov    %rax,%rdi
   11077:	e8 08 15 00 00       	call   12584 <_ZN9VulkanApp11SyncWrapperD1Ev>
   1107c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11080:	48 05 28 01 00 00    	add    $0x128,%rax
   11086:	48 89 c7             	mov    %rax,%rdi
   11089:	e8 6c 4b ff ff       	call   5bfa <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   1108e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11092:	48 05 00 01 00 00    	add    $0x100,%rax
   11098:	48 89 c7             	mov    %rax,%rdi
   1109b:	e8 10 2c 00 00       	call   13cb0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   110a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110a4:	48 05 c0 00 00 00    	add    $0xc0,%rax
   110aa:	48 89 c7             	mov    %rax,%rdi
   110ad:	e8 c0 87 ff ff       	call   9872 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   110b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110b6:	48 05 a8 00 00 00    	add    $0xa8,%rax
   110bc:	48 89 c7             	mov    %rax,%rdi
   110bf:	e8 76 24 00 00       	call   1353a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   110c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110c8:	48 05 90 00 00 00    	add    $0x90,%rax
   110ce:	48 89 c7             	mov    %rax,%rdi
   110d1:	e8 72 15 00 00       	call   12648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
   110d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110da:	48 83 c0 28          	add    $0x28,%rax
}
   110de:	48 89 c7             	mov    %rax,%rdi
   110e1:	e8 62 15 00 00       	call   12648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   110e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110ea:	48 83 c0 10          	add    $0x10,%rax
   110ee:	48 89 c7             	mov    %rax,%rdi
   110f1:	e8 52 15 00 00       	call   12648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   110f6:	90                   	nop
   110f7:	c9                   	leave
   110f8:	c3                   	ret
   110f9:	90                   	nop

00000000000110fa <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
   110fa:	55                   	push   %rbp
   110fb:	48 89 e5             	mov    %rsp,%rbp
   110fe:	48 83 ec 10          	sub    $0x10,%rsp
   11102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(window)) {
   11106:	eb 11                	jmp    11119 <_ZN9VulkanApp3runEv+0x1f>
    glfwPollEvents();
   11108:	e8 c3 32 ff ff       	call   43d0 <glfwPollEvents@plt>
    render();
   1110d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11111:	48 89 c7             	mov    %rax,%rdi
   11114:	e8 69 f3 ff ff       	call   10482 <_ZN9VulkanApp6renderEv>
  while (!glfwWindowShouldClose(window)) {
   11119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1111d:	48 8b 00             	mov    (%rax),%rax
   11120:	48 89 c7             	mov    %rax,%rdi
   11123:	e8 48 37 ff ff       	call   4870 <glfwWindowShouldClose@plt>
   11128:	85 c0                	test   %eax,%eax
   1112a:	0f 94 c0             	sete   %al
   1112d:	84 c0                	test   %al,%al
   1112f:	75 d7                	jne    11108 <_ZN9VulkanApp3runEv+0xe>
  }
  vkDeviceWaitIdle(device);
   11131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11135:	48 8b 40 50          	mov    0x50(%rax),%rax
   11139:	48 89 c7             	mov    %rax,%rdi
   1113c:	e8 6f 2f ff ff       	call   40b0 <vkDeviceWaitIdle@plt>
}
   11141:	90                   	nop
   11142:	c9                   	leave
   11143:	c3                   	ret

0000000000011144 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
   11144:	55                   	push   %rbp
   11145:	48 89 e5             	mov    %rsp,%rbp
   11148:	41 54                	push   %r12
   1114a:	53                   	push   %rbx
   1114b:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
   11152:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
   11159:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
   11160:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11167:	48 89 c7             	mov    %rax,%rdi
   1116a:	e8 e1 33 ff ff       	call   4550 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
   1116f:	be 10 00 00 00       	mov    $0x10,%esi
   11174:	bf 08 00 00 00       	mov    $0x8,%edi
   11179:	e8 77 5b ff ff       	call   6cf5 <_ZStorSt13_Ios_OpenmodeS_>
   1117e:	89 c2                	mov    %eax,%edx
   11180:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
   11187:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1118e:	48 89 ce             	mov    %rcx,%rsi
   11191:	48 89 c7             	mov    %rax,%rdi
   11194:	e8 c7 34 ff ff       	call   4660 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
   11199:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   111a0:	48 89 c7             	mov    %rax,%rdi
   111a3:	e8 38 36 ff ff       	call   47e0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
   111a8:	83 f0 01             	xor    $0x1,%eax
   111ab:	84 c0                	test   %al,%al
   111ad:	0f 84 97 00 00 00    	je     1124a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   111b3:	bf 10 00 00 00       	mov    $0x10,%edi
   111b8:	e8 e3 2f ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   111bd:	48 89 c3             	mov    %rax,%rbx
   111c0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   111c7:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
   111ce:	48 8d 0d 31 dd 00 00 	lea    0xdd31(%rip),%rcx        # 1ef06 <_ZZN9VulkanApp6renderEvE11submitCount+0x8e>
   111d5:	48 89 ce             	mov    %rcx,%rsi
   111d8:	48 89 c7             	mov    %rax,%rdi
   111db:	e8 6c 5b ff ff       	call   6d4c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
   111e0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   111e7:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
   111ee:	ba 0a 00 00 00       	mov    $0xa,%edx
   111f3:	48 89 ce             	mov    %rcx,%rsi
   111f6:	48 89 c7             	mov    %rax,%rdi
   111f9:	e8 6a 2c 00 00       	call   13e68 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
   111fe:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   11205:	48 89 c6             	mov    %rax,%rsi
   11208:	48 89 df             	mov    %rbx,%rdi
   1120b:	e8 70 35 ff ff       	call   4780 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
   11210:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   11217:	48 89 c7             	mov    %rax,%rdi
   1121a:	e8 31 30 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1121f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11226:	48 89 c7             	mov    %rax,%rdi
   11229:	e8 22 30 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1122e:	48 8b 05 73 cd 01 00 	mov    0x1cd73(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11235:	48 89 c2             	mov    %rax,%rdx
   11238:	48 8d 05 01 cb 01 00 	lea    0x1cb01(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1123f:	48 89 c6             	mov    %rax,%rsi
   11242:	48 89 df             	mov    %rbx,%rdi
   11245:	e8 76 35 ff ff       	call   47c0 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
   1124a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11251:	48 83 c0 10          	add    $0x10,%rax
   11255:	48 8d 15 ba dc 00 00 	lea    0xdcba(%rip),%rdx        # 1ef16 <_ZZN9VulkanApp6renderEvE11submitCount+0x9e>
   1125c:	48 89 d6             	mov    %rdx,%rsi
   1125f:	48 89 c7             	mov    %rax,%rdi
   11262:	e8 99 31 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
   11267:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1126e:	48 83 c0 10          	add    $0x10,%rax
   11272:	48 8d 15 b6 dc 00 00 	lea    0xdcb6(%rip),%rdx        # 1ef2f <_ZZN9VulkanApp6renderEvE11submitCount+0xb7>
   11279:	48 89 d6             	mov    %rdx,%rsi
   1127c:	48 89 c7             	mov    %rax,%rdi
   1127f:	e8 7c 31 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
   11284:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   1128b:	be 00 00 00 00       	mov    $0x0,%esi
   11290:	48 89 c7             	mov    %rax,%rdi
   11293:	e8 f2 67 ff ff       	call   7a8a <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
   11298:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   1129f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   112a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112a7:	48 89 c7             	mov    %rax,%rdi
   112aa:	e8 7f 18 00 00       	call   12b2e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   112af:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
   112b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112ba:	48 89 c7             	mov    %rax,%rdi
   112bd:	e8 92 18 00 00       	call   12b54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   112c2:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
   112c9:	eb 64                	jmp    1132f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
   112cb:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   112d2:	48 89 c7             	mov    %rax,%rdi
   112d5:	e8 02 19 00 00       	call   12bdc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   112da:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
   112e1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   112e8:	48 83 c0 10          	add    $0x10,%rax
   112ec:	48 8d 15 4d dc 00 00 	lea    0xdc4d(%rip),%rdx        # 1ef40 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   112f3:	48 89 d6             	mov    %rdx,%rsi
   112f6:	48 89 c7             	mov    %rax,%rdi
   112f9:	e8 02 31 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   112fe:	48 89 c2             	mov    %rax,%rdx
   11301:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11308:	48 89 c6             	mov    %rax,%rsi
   1130b:	48 89 d7             	mov    %rdx,%rdi
   1130e:	e8 ed 30 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11313:	be 0a 00 00 00       	mov    $0xa,%esi
   11318:	48 89 c7             	mov    %rax,%rdi
   1131b:	e8 10 32 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
   11320:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   11327:	48 89 c7             	mov    %rax,%rdi
   1132a:	e8 89 18 00 00       	call   12bb8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   1132f:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
   11336:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   1133d:	48 89 d6             	mov    %rdx,%rsi
   11340:	48 89 c7             	mov    %rax,%rdi
   11343:	e8 35 18 00 00       	call   12b7d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   11348:	84 c0                	test   %al,%al
   1134a:	0f 85 7b ff ff ff    	jne    112cb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
   11350:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11357:	48 83 c0 10          	add    $0x10,%rax
   1135b:	48 8d 15 e1 db 00 00 	lea    0xdbe1(%rip),%rdx        # 1ef43 <_ZZN9VulkanApp6renderEvE11submitCount+0xcb>
   11362:	48 89 d6             	mov    %rdx,%rsi
   11365:	48 89 c7             	mov    %rax,%rdi
   11368:	e8 93 30 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
   1136d:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   11374:	48 83 c0 10          	add    $0x10,%rax
   11378:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1137c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11380:	48 89 c7             	mov    %rax,%rdi
   11383:	e8 04 13 00 00       	call   1268c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   11388:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
   1138f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11393:	48 89 c7             	mov    %rax,%rdi
   11396:	e8 17 13 00 00       	call   126b2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1139b:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
   113a2:	eb 67                	jmp    1140b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
   113a4:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   113ab:	48 89 c7             	mov    %rax,%rdi
   113ae:	e8 83 13 00 00       	call   12736 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   113b3:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
   113ba:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   113c1:	48 83 c0 10          	add    $0x10,%rax
   113c5:	48 8d 15 74 db 00 00 	lea    0xdb74(%rip),%rdx        # 1ef40 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   113cc:	48 89 d6             	mov    %rdx,%rsi
   113cf:	48 89 c7             	mov    %rax,%rdi
   113d2:	e8 29 30 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   113d7:	48 89 c2             	mov    %rax,%rdx
   113da:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   113e1:	48 8b 00             	mov    (%rax),%rax
   113e4:	48 89 c6             	mov    %rax,%rsi
   113e7:	48 89 d7             	mov    %rdx,%rdi
   113ea:	e8 11 30 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   113ef:	be 0a 00 00 00       	mov    $0xa,%esi
   113f4:	48 89 c7             	mov    %rax,%rdi
   113f7:	e8 34 31 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
   113fc:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   11403:	48 89 c7             	mov    %rax,%rdi
   11406:	e8 0b 13 00 00       	call   12716 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   1140b:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
   11412:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   11419:	48 89 d6             	mov    %rdx,%rsi
   1141c:	48 89 c7             	mov    %rax,%rdi
   1141f:	e8 b7 12 00 00       	call   126db <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   11424:	84 c0                	test   %al,%al
   11426:	0f 85 78 ff ff ff    	jne    113a4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
   1142c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11433:	48 83 c0 10          	add    $0x10,%rax
   11437:	be 0a 00 00 00       	mov    $0xa,%esi
   1143c:	48 89 c7             	mov    %rax,%rdi
   1143f:	e8 ec 30 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
   11444:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1144b:	48 83 c0 10          	add    $0x10,%rax
   1144f:	48 8d 15 fd da 00 00 	lea    0xdafd(%rip),%rdx        # 1ef53 <_ZZN9VulkanApp6renderEvE11submitCount+0xdb>
   11456:	48 89 d6             	mov    %rdx,%rsi
   11459:	48 89 c7             	mov    %rax,%rdi
   1145c:	e8 9f 2f ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
   11461:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11468:	48 83 c0 10          	add    $0x10,%rax
   1146c:	48 8d 15 f5 da 00 00 	lea    0xdaf5(%rip),%rdx        # 1ef68 <_ZZN9VulkanApp6renderEvE11submitCount+0xf0>
   11473:	48 89 d6             	mov    %rdx,%rsi
   11476:	48 89 c7             	mov    %rax,%rdi
   11479:	e8 82 2f ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
   1147e:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   11485:	48 89 c7             	mov    %rax,%rdi
   11488:	e8 97 69 ff ff       	call   7e24 <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
   1148d:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   11494:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11498:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1149c:	48 89 c7             	mov    %rax,%rdi
   1149f:	e8 7a c4 ff ff       	call   d91e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
   114a4:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
   114ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   114af:	48 89 c7             	mov    %rax,%rdi
   114b2:	e8 8d c4 ff ff       	call   d944 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
   114b7:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
   114be:	eb 5e                	jmp    1151e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
   114c0:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   114c7:	48 89 c7             	mov    %rax,%rdi
   114ca:	e8 fd c4 ff ff       	call   d9cc <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   114cf:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
   114d3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   114da:	48 83 c0 10          	add    $0x10,%rax
   114de:	48 8d 15 5b da 00 00 	lea    0xda5b(%rip),%rdx        # 1ef40 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   114e5:	48 89 d6             	mov    %rdx,%rsi
   114e8:	48 89 c7             	mov    %rax,%rdi
   114eb:	e8 10 2f ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   114f0:	48 89 c2             	mov    %rax,%rdx
   114f3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   114f7:	48 89 c6             	mov    %rax,%rsi
   114fa:	48 89 d7             	mov    %rdx,%rdi
   114fd:	e8 fe 2e ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11502:	be 0a 00 00 00       	mov    $0xa,%esi
   11507:	48 89 c7             	mov    %rax,%rdi
   1150a:	e8 21 30 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
   1150f:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   11516:	48 89 c7             	mov    %rax,%rdi
   11519:	e8 8a c4 ff ff       	call   d9a8 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   1151e:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
   11525:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   1152c:	48 89 d6             	mov    %rdx,%rsi
   1152f:	48 89 c7             	mov    %rax,%rdi
   11532:	e8 36 c4 ff ff       	call   d96d <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   11537:	84 c0                	test   %al,%al
   11539:	75 85                	jne    114c0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
   1153b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11542:	48 83 c0 10          	add    $0x10,%rax
   11546:	48 8d 15 2c da 00 00 	lea    0xda2c(%rip),%rdx        # 1ef79 <_ZZN9VulkanApp6renderEvE11submitCount+0x101>
   1154d:	48 89 d6             	mov    %rdx,%rsi
   11550:	48 89 c7             	mov    %rax,%rdi
   11553:	e8 a8 2e ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
   11558:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1155f:	48 83 c0 28          	add    $0x28,%rax
   11563:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11567:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1156b:	48 89 c7             	mov    %rax,%rdi
   1156e:	e8 3f 29 00 00       	call   13eb2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
   11573:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
   1157a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1157e:	48 89 c7             	mov    %rax,%rdi
   11581:	e8 52 29 00 00       	call   13ed8 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
   11586:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
   1158d:	eb 61                	jmp    115f0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
   1158f:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   11596:	48 89 c7             	mov    %rax,%rdi
   11599:	e8 be 29 00 00       	call   13f5c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
   1159e:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
   115a2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   115a9:	48 83 c0 10          	add    $0x10,%rax
   115ad:	48 8d 15 8c d9 00 00 	lea    0xd98c(%rip),%rdx        # 1ef40 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   115b4:	48 89 d6             	mov    %rdx,%rsi
   115b7:	48 89 c7             	mov    %rax,%rdi
   115ba:	e8 41 2e ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   115bf:	48 89 c2             	mov    %rax,%rdx
   115c2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   115c6:	48 8b 00             	mov    (%rax),%rax
   115c9:	48 89 c6             	mov    %rax,%rsi
   115cc:	48 89 d7             	mov    %rdx,%rdi
   115cf:	e8 2c 2e ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   115d4:	be 0a 00 00 00       	mov    $0xa,%esi
   115d9:	48 89 c7             	mov    %rax,%rdi
   115dc:	e8 4f 2f ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
   115e1:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   115e8:	48 89 c7             	mov    %rax,%rdi
   115eb:	e8 4c 29 00 00       	call   13f3c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
   115f0:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
   115f7:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   115fe:	48 89 d6             	mov    %rdx,%rsi
   11601:	48 89 c7             	mov    %rax,%rdi
   11604:	e8 f8 28 00 00       	call   13f01 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   11609:	84 c0                	test   %al,%al
   1160b:	75 82                	jne    1158f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
   1160d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11614:	48 83 c0 10          	add    $0x10,%rax
   11618:	be 0a 00 00 00       	mov    $0xa,%esi
   1161d:	48 89 c7             	mov    %rax,%rdi
   11620:	e8 0b 2f ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
   11625:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1162c:	48 83 c0 10          	add    $0x10,%rax
   11630:	48 8d 15 52 d9 00 00 	lea    0xd952(%rip),%rdx        # 1ef89 <_ZZN9VulkanApp6renderEvE11submitCount+0x111>
   11637:	48 89 d6             	mov    %rdx,%rsi
   1163a:	48 89 c7             	mov    %rax,%rdi
   1163d:	e8 be 2d ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
   11642:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   11649:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1164d:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   11654:	48 89 d6             	mov    %rdx,%rsi
   11657:	48 89 c7             	mov    %rax,%rdi
   1165a:	e8 71 68 ff ff       	call   7ed0 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
   1165f:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   11666:	48 8b 50 58          	mov    0x58(%rax),%rdx
   1166a:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
   11671:	48 89 d6             	mov    %rdx,%rsi
   11674:	48 89 c7             	mov    %rax,%rdi
   11677:	e8 c3 69 ff ff       	call   803f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
   1167c:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   11683:	00 
  size_t selectedDeviceIndex = 0;
   11684:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1168b:	00 
  for (const auto &physDev : physicalDeviceList) {
   1168c:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   11693:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11697:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1169b:	48 89 c7             	mov    %rax,%rdi
   1169e:	e8 b9 12 00 00       	call   1295c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
   116a3:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
   116aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   116ae:	48 89 c7             	mov    %rax,%rdi
   116b1:	e8 cc 12 00 00       	call   12982 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
   116b6:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
   116bd:	e9 c7 06 00 00       	jmp    11d89 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
   116c2:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   116c9:	48 89 c7             	mov    %rax,%rdi
   116cc:	e8 35 13 00 00       	call   12a06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
   116d1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
   116d5:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   116dc:	48 89 c7             	mov    %rax,%rdi
   116df:	e8 4c 31 ff ff       	call   4830 <_ZNSaIcEC1Ev@plt>
   116e4:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   116eb:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   116f2:	48 8d 0d a6 d8 00 00 	lea    0xd8a6(%rip),%rcx        # 1ef9f <_ZZN9VulkanApp6renderEvE11submitCount+0x127>
   116f9:	48 89 ce             	mov    %rcx,%rsi
   116fc:	48 89 c7             	mov    %rax,%rdi
   116ff:	e8 80 37 ff ff       	call   4e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   11704:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1170b:	48 89 c7             	mov    %rax,%rdi
   1170e:	e8 ad 2d ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
   11713:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
   1171a:	b8 00 00 00 00       	mov    $0x0,%eax
   1171f:	b9 0e 00 00 00       	mov    $0xe,%ecx
   11724:	48 89 d7             	mov    %rdx,%rdi
   11727:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
   1172a:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
   11731:	00 00 00 
    vk11Props.pNext = nullptr;
   11734:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
   1173b:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
   1173f:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
   11746:	b8 00 00 00 00       	mov    $0x0,%eax
   1174b:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   11750:	48 89 d7             	mov    %rdx,%rdi
   11753:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
   11756:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
   1175d:	00 00 00 
    vk12Props.pNext = &vk11Props;
   11760:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
   11767:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
   1176e:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   11775:	b8 00 00 00 00       	mov    $0x0,%eax
   1177a:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   1177f:	48 89 d7             	mov    %rdx,%rdi
   11782:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
   11785:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
   1178c:	00 00 00 
    vk13Props.pNext = &vk12Props;
   1178f:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   11796:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
   1179d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   117a1:	48 8b 08             	mov    (%rax),%rcx
   117a4:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   117ab:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   117b2:	48 89 ce             	mov    %rcx,%rsi
   117b5:	48 89 c7             	mov    %rax,%rdi
   117b8:	e8 ac 68 ff ff       	call   8069 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
   117bd:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
   117c3:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
   117c9:	39 c2                	cmp    %eax,%edx
   117cb:	75 08                	jne    117d5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
   117cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   117d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
   117d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   117d9:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   117dd:	75 19                	jne    117f8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
   117df:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   117e6:	48 8d 15 b3 d7 00 00 	lea    0xd7b3(%rip),%rdx        # 1efa0 <_ZZN9VulkanApp6renderEvE11submitCount+0x128>
   117ed:	48 89 d6             	mov    %rdx,%rsi
   117f0:	48 89 c7             	mov    %rax,%rdi
   117f3:	e8 58 2e ff ff       	call   4650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
   117f8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   117ff:	48 83 c0 10          	add    $0x10,%rax
   11803:	48 8d 15 a2 d7 00 00 	lea    0xd7a2(%rip),%rdx        # 1efac <_ZZN9VulkanApp6renderEvE11submitCount+0x134>
   1180a:	48 89 d6             	mov    %rdx,%rsi
   1180d:	48 89 c7             	mov    %rax,%rdi
   11810:	e8 eb 2b ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11815:	48 89 c2             	mov    %rax,%rdx
   11818:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1181c:	48 89 c6             	mov    %rax,%rsi
   1181f:	48 89 d7             	mov    %rdx,%rdi
   11822:	e8 79 28 ff ff       	call   40a0 <_ZNSolsEm@plt>
   11827:	48 89 c2             	mov    %rax,%rdx
   1182a:	48 8d 05 7f d7 00 00 	lea    0xd77f(%rip),%rax        # 1efb0 <_ZZN9VulkanApp6renderEvE11submitCount+0x138>
   11831:	48 89 c6             	mov    %rax,%rsi
   11834:	48 89 d7             	mov    %rdx,%rdi
   11837:	e8 c4 2b ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1183c:	48 89 c2             	mov    %rax,%rdx
   1183f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11843:	48 89 c6             	mov    %rax,%rsi
   11846:	48 89 d7             	mov    %rdx,%rdi
   11849:	e8 52 28 ff ff       	call   40a0 <_ZNSolsEm@plt>
   1184e:	48 89 c2             	mov    %rax,%rdx
   11851:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   11858:	48 89 c6             	mov    %rax,%rsi
   1185b:	48 89 d7             	mov    %rdx,%rdi
   1185e:	e8 2d 2b ff ff       	call   4390 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   11863:	48 89 c2             	mov    %rax,%rdx
   11866:	48 8d 05 4c d7 00 00 	lea    0xd74c(%rip),%rax        # 1efb9 <_ZZN9VulkanApp6renderEvE11submitCount+0x141>
   1186d:	48 89 c6             	mov    %rax,%rsi
   11870:	48 89 d7             	mov    %rdx,%rdi
   11873:	e8 88 2b ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
   11878:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1187f:	48 83 c0 10          	add    $0x10,%rax
   11883:	48 8d 15 32 d7 00 00 	lea    0xd732(%rip),%rdx        # 1efbc <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   1188a:	48 89 d6             	mov    %rdx,%rsi
   1188d:	48 89 c7             	mov    %rax,%rdi
   11890:	e8 6b 2b ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11895:	48 89 c2             	mov    %rax,%rdx
   11898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1189c:	48 89 c6             	mov    %rax,%rsi
   1189f:	48 89 d7             	mov    %rdx,%rdi
   118a2:	e8 f9 27 ff ff       	call   40a0 <_ZNSolsEm@plt>
   118a7:	48 89 c2             	mov    %rax,%rdx
   118aa:	48 8d 05 10 d7 00 00 	lea    0xd710(%rip),%rax        # 1efc1 <_ZZN9VulkanApp6renderEvE11submitCount+0x149>
   118b1:	48 89 c6             	mov    %rax,%rsi
   118b4:	48 89 d7             	mov    %rdx,%rdi
   118b7:	e8 44 2b ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
   118bc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   118c3:	48 83 c0 10          	add    $0x10,%rax
   118c7:	48 8d 15 0a d7 00 00 	lea    0xd70a(%rip),%rdx        # 1efd8 <_ZZN9VulkanApp6renderEvE11submitCount+0x160>
   118ce:	48 89 d6             	mov    %rdx,%rsi
   118d1:	48 89 c7             	mov    %rax,%rdi
   118d4:	e8 27 2b ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   118d9:	48 89 c2             	mov    %rax,%rdx
   118dc:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
   118e2:	89 c6                	mov    %eax,%esi
   118e4:	48 89 d7             	mov    %rdx,%rdi
   118e7:	e8 34 2d ff ff       	call   4620 <_ZNSolsEj@plt>
   118ec:	be 0a 00 00 00       	mov    $0xa,%esi
   118f1:	48 89 c7             	mov    %rax,%rdi
   118f4:	e8 37 2c ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
   118f9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11900:	48 83 c0 10          	add    $0x10,%rax
   11904:	48 8d 15 dc d6 00 00 	lea    0xd6dc(%rip),%rdx        # 1efe7 <_ZZN9VulkanApp6renderEvE11submitCount+0x16f>
   1190b:	48 89 d6             	mov    %rdx,%rsi
   1190e:	48 89 c7             	mov    %rax,%rdi
   11911:	e8 ea 2a ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11916:	48 89 c2             	mov    %rax,%rdx
   11919:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   11920:	48 83 c0 24          	add    $0x24,%rax
   11924:	48 89 c6             	mov    %rax,%rsi
   11927:	48 89 d7             	mov    %rdx,%rdi
   1192a:	e8 d1 2a ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1192f:	be 0a 00 00 00       	mov    $0xa,%esi
   11934:	48 89 c7             	mov    %rax,%rdi
   11937:	e8 f4 2b ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
   1193c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11943:	48 83 c0 10          	add    $0x10,%rax
   11947:	48 8d 15 aa d6 00 00 	lea    0xd6aa(%rip),%rdx        # 1eff8 <_ZZN9VulkanApp6renderEvE11submitCount+0x180>
   1194e:	48 89 d6             	mov    %rdx,%rsi
   11951:	48 89 c7             	mov    %rax,%rdi
   11954:	e8 a7 2a ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
   11959:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
   1195f:	83 f8 04             	cmp    $0x4,%eax
   11962:	0f 84 80 00 00 00    	je     119e8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
   11968:	83 f8 04             	cmp    $0x4,%eax
   1196b:	0f 8f 96 00 00 00    	jg     11a07 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   11971:	83 f8 03             	cmp    $0x3,%eax
   11974:	74 53                	je     119c9 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
   11976:	83 f8 03             	cmp    $0x3,%eax
   11979:	0f 8f 88 00 00 00    	jg     11a07 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   1197f:	83 f8 01             	cmp    $0x1,%eax
   11982:	74 07                	je     1198b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
   11984:	83 f8 02             	cmp    $0x2,%eax
   11987:	74 21                	je     119aa <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
   11989:	eb 7c                	jmp    11a07 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
   1198b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11992:	48 83 c0 10          	add    $0x10,%rax
   11996:	48 8d 15 6c d6 00 00 	lea    0xd66c(%rip),%rdx        # 1f009 <_ZZN9VulkanApp6renderEvE11submitCount+0x191>
   1199d:	48 89 d6             	mov    %rdx,%rsi
   119a0:	48 89 c7             	mov    %rax,%rdi
   119a3:	e8 58 2a ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   119a8:	eb 7b                	jmp    11a25 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
   119aa:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   119b1:	48 83 c0 10          	add    $0x10,%rax
   119b5:	48 8d 15 5d d6 00 00 	lea    0xd65d(%rip),%rdx        # 1f019 <_ZZN9VulkanApp6renderEvE11submitCount+0x1a1>
   119bc:	48 89 d6             	mov    %rdx,%rsi
   119bf:	48 89 c7             	mov    %rax,%rdi
   119c2:	e8 39 2a ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   119c7:	eb 5c                	jmp    11a25 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
   119c9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   119d0:	48 83 c0 10          	add    $0x10,%rax
   119d4:	48 8d 15 4c d6 00 00 	lea    0xd64c(%rip),%rdx        # 1f027 <_ZZN9VulkanApp6renderEvE11submitCount+0x1af>
   119db:	48 89 d6             	mov    %rdx,%rsi
   119de:	48 89 c7             	mov    %rax,%rdi
   119e1:	e8 1a 2a ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   119e6:	eb 3d                	jmp    11a25 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
   119e8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   119ef:	48 83 c0 10          	add    $0x10,%rax
   119f3:	48 8d 15 3a d6 00 00 	lea    0xd63a(%rip),%rdx        # 1f034 <_ZZN9VulkanApp6renderEvE11submitCount+0x1bc>
   119fa:	48 89 d6             	mov    %rdx,%rsi
   119fd:	48 89 c7             	mov    %rax,%rdi
   11a00:	e8 fb 29 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   11a05:	eb 1e                	jmp    11a25 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
   11a07:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11a0e:	48 83 c0 10          	add    $0x10,%rax
   11a12:	48 8d 15 20 d6 00 00 	lea    0xd620(%rip),%rdx        # 1f039 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c1>
   11a19:	48 89 d6             	mov    %rdx,%rsi
   11a1c:	48 89 c7             	mov    %rax,%rdi
   11a1f:	e8 dc 29 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   11a24:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
   11a25:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11a2c:	48 83 c0 10          	add    $0x10,%rax
   11a30:	48 8d 15 09 d6 00 00 	lea    0xd609(%rip),%rdx        # 1f040 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c8>
   11a37:	48 89 d6             	mov    %rdx,%rsi
   11a3a:	48 89 c7             	mov    %rax,%rdi
   11a3d:	e8 be 29 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11a42:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
   11a48:	89 d6                	mov    %edx,%esi
   11a4a:	48 89 c7             	mov    %rax,%rdi
   11a4d:	e8 9e 2d ff ff       	call   47f0 <_ZNSolsEi@plt>
   11a52:	be 0a 00 00 00       	mov    $0xa,%esi
   11a57:	48 89 c7             	mov    %rax,%rdi
   11a5a:	e8 d1 2a ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
   11a5f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11a66:	48 83 c0 10          	add    $0x10,%rax
   11a6a:	48 8d 15 de d5 00 00 	lea    0xd5de(%rip),%rdx        # 1f04f <_ZZN9VulkanApp6renderEvE11submitCount+0x1d7>
   11a71:	48 89 d6             	mov    %rdx,%rsi
   11a74:	48 89 c7             	mov    %rax,%rdi
   11a77:	e8 84 29 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11a7c:	48 89 c2             	mov    %rax,%rdx
   11a7f:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   11a86:	48 83 c0 14          	add    $0x14,%rax
   11a8a:	48 89 c6             	mov    %rax,%rsi
   11a8d:	48 89 d7             	mov    %rdx,%rdi
   11a90:	e8 6b 29 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11a95:	be 0a 00 00 00       	mov    $0xa,%esi
   11a9a:	48 89 c7             	mov    %rax,%rdi
   11a9d:	e8 8e 2a ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
   11aa2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11aa9:	48 83 c0 10          	add    $0x10,%rax
   11aad:	48 8d 15 ac d5 00 00 	lea    0xd5ac(%rip),%rdx        # 1f060 <_ZZN9VulkanApp6renderEvE11submitCount+0x1e8>
   11ab4:	48 89 d6             	mov    %rdx,%rsi
   11ab7:	48 89 c7             	mov    %rax,%rdi
   11aba:	e8 41 29 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11abf:	48 89 c2             	mov    %rax,%rdx
   11ac2:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   11ac9:	48 05 14 01 00 00    	add    $0x114,%rax
   11acf:	48 89 c6             	mov    %rax,%rsi
   11ad2:	48 89 d7             	mov    %rdx,%rdi
   11ad5:	e8 26 29 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11ada:	be 0a 00 00 00       	mov    $0xa,%esi
   11adf:	48 89 c7             	mov    %rax,%rdi
   11ae2:	e8 49 2a ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
   11ae7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11aee:	48 83 c0 10          	add    $0x10,%rax
   11af2:	48 8d 15 7f d5 00 00 	lea    0xd57f(%rip),%rdx        # 1f078 <_ZZN9VulkanApp6renderEvE11submitCount+0x200>
   11af9:	48 89 d6             	mov    %rdx,%rsi
   11afc:	48 89 c7             	mov    %rax,%rdi
   11aff:	e8 fc 28 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11b04:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
   11b07:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
   11b0e:	48 89 c6             	mov    %rax,%rsi
   11b11:	48 89 d7             	mov    %rdx,%rdi
   11b14:	e8 87 25 ff ff       	call   40a0 <_ZNSolsEm@plt>
   11b19:	be 0a 00 00 00       	mov    $0xa,%esi
   11b1e:	48 89 c7             	mov    %rax,%rdi
   11b21:	e8 0a 2a ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
   11b26:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11b2d:	48 83 c0 10          	add    $0x10,%rax
   11b31:	48 8d 15 84 d4 00 00 	lea    0xd484(%rip),%rdx        # 1efbc <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   11b38:	48 89 d6             	mov    %rdx,%rsi
   11b3b:	48 89 c7             	mov    %rax,%rdi
   11b3e:	e8 bd 28 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11b43:	48 89 c2             	mov    %rax,%rdx
   11b46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b4a:	48 89 c6             	mov    %rax,%rsi
   11b4d:	48 89 d7             	mov    %rdx,%rdi
   11b50:	e8 4b 25 ff ff       	call   40a0 <_ZNSolsEm@plt>
   11b55:	48 89 c2             	mov    %rax,%rdx
   11b58:	48 8d 05 41 d5 00 00 	lea    0xd541(%rip),%rax        # 1f0a0 <_ZZN9VulkanApp6renderEvE11submitCount+0x228>
   11b5f:	48 89 c6             	mov    %rax,%rsi
   11b62:	48 89 d7             	mov    %rdx,%rdi
   11b65:	e8 96 28 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
   11b6a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11b6e:	48 8b 08             	mov    (%rax),%rcx
   11b71:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   11b78:	ba 00 00 00 00       	mov    $0x0,%edx
   11b7d:	48 89 ce             	mov    %rcx,%rsi
   11b80:	48 89 c7             	mov    %rax,%rdi
   11b83:	e8 73 60 ff ff       	call   7bfb <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
   11b88:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   11b8f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   11b93:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11b97:	48 89 c7             	mov    %rax,%rdi
   11b9a:	e8 8f 0f 00 00       	call   12b2e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   11b9f:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   11ba6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11baa:	48 89 c7             	mov    %rax,%rdi
   11bad:	e8 a2 0f 00 00       	call   12b54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   11bb2:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   11bb9:	eb 5e                	jmp    11c19 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   11bbb:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   11bc2:	48 89 c7             	mov    %rax,%rdi
   11bc5:	e8 12 10 00 00       	call   12bdc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   11bca:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   11bce:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11bd5:	48 83 c0 10          	add    $0x10,%rax
   11bd9:	48 8d 15 e1 d4 00 00 	lea    0xd4e1(%rip),%rdx        # 1f0c1 <_ZZN9VulkanApp6renderEvE11submitCount+0x249>
   11be0:	48 89 d6             	mov    %rdx,%rsi
   11be3:	48 89 c7             	mov    %rax,%rdi
   11be6:	e8 15 28 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11beb:	48 89 c2             	mov    %rax,%rdx
   11bee:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11bf2:	48 89 c6             	mov    %rax,%rsi
   11bf5:	48 89 d7             	mov    %rdx,%rdi
   11bf8:	e8 03 28 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11bfd:	be 0a 00 00 00       	mov    $0xa,%esi
   11c02:	48 89 c7             	mov    %rax,%rdi
   11c05:	e8 26 29 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   11c0a:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   11c11:	48 89 c7             	mov    %rax,%rdi
   11c14:	e8 9f 0f 00 00       	call   12bb8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   11c19:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   11c20:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   11c27:	48 89 d6             	mov    %rdx,%rsi
   11c2a:	48 89 c7             	mov    %rax,%rdi
   11c2d:	e8 4b 0f 00 00       	call   12b7d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   11c32:	84 c0                	test   %al,%al
   11c34:	75 85                	jne    11bbb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   11c36:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11c3a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11c3e:	0f 85 fb 00 00 00    	jne    11d3f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   11c44:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11c4b:	48 83 c0 10          	add    $0x10,%rax
   11c4f:	48 8d 15 66 d3 00 00 	lea    0xd366(%rip),%rdx        # 1efbc <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   11c56:	48 89 d6             	mov    %rdx,%rsi
   11c59:	48 89 c7             	mov    %rax,%rdi
   11c5c:	e8 9f 27 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11c61:	48 89 c2             	mov    %rax,%rdx
   11c64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c68:	48 89 c6             	mov    %rax,%rsi
   11c6b:	48 89 d7             	mov    %rdx,%rdi
   11c6e:	e8 2d 24 ff ff       	call   40a0 <_ZNSolsEm@plt>
   11c73:	48 89 c2             	mov    %rax,%rdx
   11c76:	48 8d 05 4b d4 00 00 	lea    0xd44b(%rip),%rax        # 1f0c8 <_ZZN9VulkanApp6renderEvE11submitCount+0x250>
   11c7d:	48 89 c6             	mov    %rax,%rsi
   11c80:	48 89 d7             	mov    %rdx,%rdi
   11c83:	e8 78 27 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   11c88:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   11c8f:	48 05 90 00 00 00    	add    $0x90,%rax
   11c95:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   11c99:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11c9d:	48 89 c7             	mov    %rax,%rdi
   11ca0:	e8 e7 09 00 00       	call   1268c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   11ca5:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   11cac:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11cb0:	48 89 c7             	mov    %rax,%rdi
   11cb3:	e8 fa 09 00 00       	call   126b2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   11cb8:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   11cbf:	eb 61                	jmp    11d22 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   11cc1:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   11cc8:	48 89 c7             	mov    %rax,%rdi
   11ccb:	e8 66 0a 00 00       	call   12736 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   11cd0:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   11cd4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11cdb:	48 83 c0 10          	add    $0x10,%rax
   11cdf:	48 8d 15 db d3 00 00 	lea    0xd3db(%rip),%rdx        # 1f0c1 <_ZZN9VulkanApp6renderEvE11submitCount+0x249>
   11ce6:	48 89 d6             	mov    %rdx,%rsi
   11ce9:	48 89 c7             	mov    %rax,%rdi
   11cec:	e8 0f 27 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11cf1:	48 89 c2             	mov    %rax,%rdx
   11cf4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11cf8:	48 8b 00             	mov    (%rax),%rax
   11cfb:	48 89 c6             	mov    %rax,%rsi
   11cfe:	48 89 d7             	mov    %rdx,%rdi
   11d01:	e8 fa 26 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11d06:	be 0a 00 00 00       	mov    $0xa,%esi
   11d0b:	48 89 c7             	mov    %rax,%rdi
   11d0e:	e8 1d 28 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   11d13:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   11d1a:	48 89 c7             	mov    %rax,%rdi
   11d1d:	e8 f4 09 00 00       	call   12716 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   11d22:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   11d29:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   11d30:	48 89 d6             	mov    %rdx,%rsi
   11d33:	48 89 c7             	mov    %rax,%rdi
   11d36:	e8 a0 09 00 00       	call   126db <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   11d3b:	84 c0                	test   %al,%al
   11d3d:	75 82                	jne    11cc1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   11d3f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11d46:	48 83 c0 10          	add    $0x10,%rax
   11d4a:	be 0a 00 00 00       	mov    $0xa,%esi
   11d4f:	48 89 c7             	mov    %rax,%rdi
   11d52:	e8 d9 27 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   11d57:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   11d5c:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   11d63:	48 89 c7             	mov    %rax,%rdi
   11d66:	e8 05 70 ff ff       	call   8d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   11d6b:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   11d72:	48 89 c7             	mov    %rax,%rdi
   11d75:	e8 d6 24 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   11d7a:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   11d81:	48 89 c7             	mov    %rax,%rdi
   11d84:	e8 5d 0c 00 00       	call   129e6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   11d89:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   11d90:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   11d97:	48 89 d6             	mov    %rdx,%rsi
   11d9a:	48 89 c7             	mov    %rax,%rdi
   11d9d:	e8 09 0c 00 00       	call   129ab <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   11da2:	84 c0                	test   %al,%al
   11da4:	0f 85 18 f9 ff ff    	jne    116c2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   11daa:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11db1:	48 83 c0 10          	add    $0x10,%rax
   11db5:	be 0a 00 00 00       	mov    $0xa,%esi
   11dba:	48 89 c7             	mov    %rax,%rdi
   11dbd:	e8 6e 27 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   11dc2:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   11dc9:	48 89 c7             	mov    %rax,%rdi
   11dcc:	e8 29 72 ff ff       	call   8ffa <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   11dd1:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   11dd8:	48 89 c7             	mov    %rax,%rdi
   11ddb:	e8 22 6e ff ff       	call   8c02 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   11de0:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   11de7:	48 89 c7             	mov    %rax,%rdi
   11dea:	e8 81 6f ff ff       	call   8d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   11def:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11df6:	48 89 c7             	mov    %rax,%rdi
   11df9:	e8 92 22 ff ff       	call   4090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   11dfe:	e9 cd 00 00 00       	jmp    11ed0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   11e03:	49 89 c4             	mov    %rax,%r12
   11e06:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   11e0d:	48 89 c7             	mov    %rax,%rdi
   11e10:	e8 3b 24 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11e15:	eb 03                	jmp    11e1a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   11e17:	49 89 c4             	mov    %rax,%r12
   11e1a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11e21:	48 89 c7             	mov    %rax,%rdi
   11e24:	e8 27 24 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11e29:	eb 03                	jmp    11e2e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   11e2b:	49 89 c4             	mov    %rax,%r12
   11e2e:	48 89 df             	mov    %rbx,%rdi
   11e31:	e8 7a 24 ff ff       	call   42b0 <__cxa_free_exception@plt>
   11e36:	4c 89 e3             	mov    %r12,%rbx
   11e39:	eb 7b                	jmp    11eb6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   11e3b:	48 89 c3             	mov    %rax,%rbx
   11e3e:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   11e45:	48 89 c7             	mov    %rax,%rdi
   11e48:	e8 73 26 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
   11e4d:	eb 2b                	jmp    11e7a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   11e4f:	48 89 c3             	mov    %rax,%rbx
   11e52:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   11e59:	48 89 c7             	mov    %rax,%rdi
   11e5c:	e8 0f 6f ff ff       	call   8d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   11e61:	eb 03                	jmp    11e66 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   11e63:	48 89 c3             	mov    %rax,%rbx
   11e66:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   11e6d:	48 89 c7             	mov    %rax,%rdi
   11e70:	e8 db 23 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11e75:	eb 03                	jmp    11e7a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   11e77:	48 89 c3             	mov    %rax,%rbx
   11e7a:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   11e81:	48 89 c7             	mov    %rax,%rdi
   11e84:	e8 71 71 ff ff       	call   8ffa <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   11e89:	eb 03                	jmp    11e8e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   11e8b:	48 89 c3             	mov    %rax,%rbx
   11e8e:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   11e95:	48 89 c7             	mov    %rax,%rdi
   11e98:	e8 65 6d ff ff       	call   8c02 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   11e9d:	eb 03                	jmp    11ea2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   11e9f:	48 89 c3             	mov    %rax,%rbx
   11ea2:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   11ea9:	48 89 c7             	mov    %rax,%rdi
   11eac:	e8 bf 6e ff ff       	call   8d70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   11eb1:	eb 03                	jmp    11eb6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   11eb3:	48 89 c3             	mov    %rax,%rbx
   11eb6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11ebd:	48 89 c7             	mov    %rax,%rdi
   11ec0:	e8 cb 21 ff ff       	call   4090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   11ec5:	48 89 d8             	mov    %rbx,%rax
   11ec8:	48 89 c7             	mov    %rax,%rdi
   11ecb:	e8 50 29 ff ff       	call   4820 <_Unwind_Resume@plt>
   11ed0:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   11ed7:	5b                   	pop    %rbx
   11ed8:	41 5c                	pop    %r12
   11eda:	5d                   	pop    %rbp
   11edb:	c3                   	ret

0000000000011edc <_Z41__static_initialization_and_destruction_0ii>:
   11edc:	55                   	push   %rbp
   11edd:	48 89 e5             	mov    %rsp,%rbp
   11ee0:	41 55                	push   %r13
   11ee2:	41 54                	push   %r12
   11ee4:	53                   	push   %rbx
   11ee5:	48 83 ec 58          	sub    $0x58,%rsp
   11ee9:	89 7d 9c             	mov    %edi,-0x64(%rbp)
   11eec:	89 75 98             	mov    %esi,-0x68(%rbp)
   11eef:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
   11ef3:	0f 85 6f 01 00 00    	jne    12068 <_Z41__static_initialization_and_destruction_0ii+0x18c>
   11ef9:	81 7d 98 ff ff 00 00 	cmpl   $0xffff,-0x68(%rbp)
   11f00:	0f 85 62 01 00 00    	jne    12068 <_Z41__static_initialization_and_destruction_0ii+0x18c>
   11f06:	48 8d 05 c3 c6 01 00 	lea    0x1c6c3(%rip),%rax        # 2e5d0 <_ZStL8__ioinit>
   11f0d:	48 89 c7             	mov    %rax,%rdi
   11f10:	e8 db 27 ff ff       	call   46f0 <_ZNSt8ios_base4InitC1Ev@plt>
   11f15:	48 8d 05 34 c5 01 00 	lea    0x1c534(%rip),%rax        # 2e450 <__dso_handle>
   11f1c:	48 89 c2             	mov    %rax,%rdx
   11f1f:	48 8d 05 aa c6 01 00 	lea    0x1c6aa(%rip),%rax        # 2e5d0 <_ZStL8__ioinit>
   11f26:	48 89 c6             	mov    %rax,%rsi
   11f29:	48 8b 05 98 c0 01 00 	mov    0x1c098(%rip),%rax        # 2dfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   11f30:	48 89 c7             	mov    %rax,%rdi
   11f33:	e8 48 24 ff ff       	call   4380 <__cxa_atexit@plt>
   11f38:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11f3c:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
   11f41:	f3 0f 10 05 c3 d2 00 	movss  0xd2c3(%rip),%xmm0        # 1f20c <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   11f48:	00 
   11f49:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
   11f4e:	f3 0f 10 05 b2 d2 00 	movss  0xd2b2(%rip),%xmm0        # 1f208 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   11f55:	00 
   11f56:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
   11f5b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11f5f:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
   11f64:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11f68:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
   11f6d:	f3 0f 10 05 9b d2 00 	movss  0xd29b(%rip),%xmm0        # 1f210 <_ZZN9VulkanApp6renderEvE11submitCount+0x398>
   11f74:	00 
   11f75:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
   11f7a:	f3 0f 10 05 8e d2 00 	movss  0xd28e(%rip),%xmm0        # 1f210 <_ZZN9VulkanApp6renderEvE11submitCount+0x398>
   11f81:	00 
   11f82:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
   11f87:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11f8b:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
   11f90:	f3 0f 10 05 70 d2 00 	movss  0xd270(%rip),%xmm0        # 1f208 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   11f97:	00 
   11f98:	f3 0f 11 45 c0       	movss  %xmm0,-0x40(%rbp)
   11f9d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11fa1:	f3 0f 11 45 c4       	movss  %xmm0,-0x3c(%rbp)
   11fa6:	f3 0f 10 05 5e d2 00 	movss  0xd25e(%rip),%xmm0        # 1f20c <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   11fad:	00 
   11fae:	f3 0f 11 45 c8       	movss  %xmm0,-0x38(%rbp)
   11fb3:	f3 0f 10 05 55 d2 00 	movss  0xd255(%rip),%xmm0        # 1f210 <_ZZN9VulkanApp6renderEvE11submitCount+0x398>
   11fba:	00 
   11fbb:	f3 0f 11 45 cc       	movss  %xmm0,-0x34(%rbp)
   11fc0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11fc4:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
   11fc9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11fcd:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   11fd2:	f3 0f 10 05 2e d2 00 	movss  0xd22e(%rip),%xmm0        # 1f208 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   11fd9:	00 
   11fda:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
   11fdf:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11fe3:	49 89 c4             	mov    %rax,%r12
   11fe6:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   11fec:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   11ff0:	48 89 c7             	mov    %rax,%rdi
   11ff3:	e8 cc 2d ff ff       	call   4dc4 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
   11ff8:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   11ffc:	4c 89 e6             	mov    %r12,%rsi
   11fff:	4c 89 ef             	mov    %r13,%rdi
   12002:	4c 89 e1             	mov    %r12,%rcx
   12005:	4c 89 eb             	mov    %r13,%rbx
   12008:	48 89 da             	mov    %rbx,%rdx
   1200b:	48 89 c1             	mov    %rax,%rcx
   1200e:	48 8d 05 cb c5 01 00 	lea    0x1c5cb(%rip),%rax        # 2e5e0 <_ZN6shaderL8triangleE>
   12015:	48 89 c7             	mov    %rax,%rdi
   12018:	e8 df 2d ff ff       	call   4dfc <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
   1201d:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   12021:	48 89 c7             	mov    %rax,%rdi
   12024:	e8 b7 2d ff ff       	call   4de0 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
const std::vector<vkh::Vertex2D_RGB> triangle{
   12029:	48 8d 05 20 c4 01 00 	lea    0x1c420(%rip),%rax        # 2e450 <__dso_handle>
   12030:	48 89 c2             	mov    %rax,%rdx
   12033:	48 8d 05 a6 c5 01 00 	lea    0x1c5a6(%rip),%rax        # 2e5e0 <_ZN6shaderL8triangleE>
   1203a:	48 89 c6             	mov    %rax,%rsi
   1203d:	48 8d 05 1c 38 ff ff 	lea    -0xc7e4(%rip),%rax        # 5860 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
   12044:	48 89 c7             	mov    %rax,%rdi
   12047:	e8 34 23 ff ff       	call   4380 <__cxa_atexit@plt>
   1204c:	eb 1a                	jmp    12068 <_Z41__static_initialization_and_destruction_0ii+0x18c>
    {{-0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}}};
   1204e:	48 89 c3             	mov    %rax,%rbx
   12051:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   12055:	48 89 c7             	mov    %rax,%rdi
   12058:	e8 83 2d ff ff       	call   4de0 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
   1205d:	48 89 d8             	mov    %rbx,%rax
   12060:	48 89 c7             	mov    %rax,%rdi
   12063:	e8 b8 27 ff ff       	call   4820 <_Unwind_Resume@plt>
   12068:	48 83 c4 58          	add    $0x58,%rsp
   1206c:	5b                   	pop    %rbx
   1206d:	41 5c                	pop    %r12
   1206f:	41 5d                	pop    %r13
   12071:	5d                   	pop    %rbp
   12072:	c3                   	ret

0000000000012073 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   12073:	55                   	push   %rbp
   12074:	48 89 e5             	mov    %rsp,%rbp
   12077:	be ff ff 00 00       	mov    $0xffff,%esi
   1207c:	bf 01 00 00 00       	mov    $0x1,%edi
   12081:	e8 56 fe ff ff       	call   11edc <_Z41__static_initialization_and_destruction_0ii>
   12086:	5d                   	pop    %rbp
   12087:	c3                   	ret

0000000000012088 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   12088:	55                   	push   %rbp
   12089:	48 89 e5             	mov    %rsp,%rbp
   1208c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12090:	48 8d 15 79 bc 01 00 	lea    0x1bc79(%rip),%rdx        # 2dd10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   12097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1209b:	48 89 10             	mov    %rdx,(%rax)
   1209e:	90                   	nop
   1209f:	5d                   	pop    %rbp
   120a0:	c3                   	ret

00000000000120a1 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   120a1:	55                   	push   %rbp
   120a2:	48 89 e5             	mov    %rsp,%rbp
   120a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   120ad:	90                   	nop
   120ae:	5d                   	pop    %rbp
   120af:	c3                   	ret

00000000000120b0 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   120b0:	55                   	push   %rbp
   120b1:	48 89 e5             	mov    %rsp,%rbp
   120b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   120b8:	48 8d 05 21 cc 00 00 	lea    0xcc21(%rip),%rax        # 1ece0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   120bf:	5d                   	pop    %rbp
   120c0:	c3                   	ret
   120c1:	90                   	nop

00000000000120c2 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   120c2:	55                   	push   %rbp
   120c3:	48 89 e5             	mov    %rsp,%rbp
   120c6:	48 83 ec 10          	sub    $0x10,%rsp
   120ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120d2:	48 89 c7             	mov    %rax,%rdi
   120d5:	e8 ae ff ff ff       	call   12088 <_ZNSt9exceptionC1Ev>
   120da:	48 8d 15 df bb 01 00 	lea    0x1bbdf(%rip),%rdx        # 2dcc0 <_ZTVSt19bad_optional_access+0x10>
   120e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120e5:	48 89 10             	mov    %rdx,(%rax)
   120e8:	90                   	nop
   120e9:	c9                   	leave
   120ea:	c3                   	ret

00000000000120eb <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   120eb:	55                   	push   %rbp
   120ec:	48 89 e5             	mov    %rsp,%rbp
   120ef:	53                   	push   %rbx
   120f0:	48 83 ec 08          	sub    $0x8,%rsp
   120f4:	bf 08 00 00 00       	mov    $0x8,%edi
   120f9:	e8 a2 20 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   120fe:	48 89 c3             	mov    %rax,%rbx
   12101:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   12108:	48 89 df             	mov    %rbx,%rdi
   1210b:	e8 b2 ff ff ff       	call   120c2 <_ZNSt19bad_optional_accessC1Ev>
   12110:	48 8d 05 15 8b 00 00 	lea    0x8b15(%rip),%rax        # 1ac2c <_ZNSt19bad_optional_accessD1Ev>
   12117:	48 89 c2             	mov    %rax,%rdx
   1211a:	48 8d 05 37 bc 01 00 	lea    0x1bc37(%rip),%rax        # 2dd58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   12121:	48 89 c6             	mov    %rax,%rsi
   12124:	48 89 df             	mov    %rbx,%rdi
   12127:	e8 94 26 ff ff       	call   47c0 <__cxa_throw@plt>

000000000001212c <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   1212c:	55                   	push   %rbp
   1212d:	48 89 e5             	mov    %rsp,%rbp
   12130:	48 83 ec 10          	sub    $0x10,%rsp
   12134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   12138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1213c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   12142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12146:	48 89 c7             	mov    %rax,%rdi
   12149:	e8 04 00 00 00       	call   12152 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   1214e:	90                   	nop
   1214f:	c9                   	leave
   12150:	c3                   	ret
   12151:	90                   	nop

0000000000012152 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   12152:	55                   	push   %rbp
   12153:	48 89 e5             	mov    %rsp,%rbp
   12156:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   1215a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1215e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12165:	00 
      _M_header._M_left = &_M_header;
   12166:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1216a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1216e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   12172:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1217a:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   1217e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12182:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   12189:	00 
    }
   1218a:	90                   	nop
   1218b:	5d                   	pop    %rbp
   1218c:	c3                   	ret
   1218d:	90                   	nop

000000000001218e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   1218e:	55                   	push   %rbp
   1218f:	48 89 e5             	mov    %rsp,%rbp
   12192:	48 83 ec 10          	sub    $0x10,%rsp
   12196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1219a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1219e:	48 89 c7             	mov    %rax,%rdi
   121a1:	e8 60 00 00 00       	call   12206 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   121a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121aa:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   121ae:	90                   	nop
   121af:	c9                   	leave
   121b0:	c3                   	ret
   121b1:	90                   	nop

00000000000121b2 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   121b2:	55                   	push   %rbp
   121b3:	48 89 e5             	mov    %rsp,%rbp
   121b6:	48 83 ec 10          	sub    $0x10,%rsp
   121ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121c2:	48 89 c7             	mov    %rax,%rdi
   121c5:	e8 c4 ff ff ff       	call   1218e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   121ca:	90                   	nop
   121cb:	c9                   	leave
   121cc:	c3                   	ret
   121cd:	90                   	nop

00000000000121ce <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   121ce:	55                   	push   %rbp
   121cf:	48 89 e5             	mov    %rsp,%rbp
   121d2:	48 83 ec 10          	sub    $0x10,%rsp
   121d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121de:	48 89 c7             	mov    %rax,%rdi
   121e1:	e8 cc ff ff ff       	call   121b2 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   121e6:	90                   	nop
   121e7:	c9                   	leave
   121e8:	c3                   	ret
   121e9:	90                   	nop

00000000000121ea <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   121ea:	55                   	push   %rbp
   121eb:	48 89 e5             	mov    %rsp,%rbp
   121ee:	48 83 ec 10          	sub    $0x10,%rsp
   121f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121fa:	48 89 c7             	mov    %rax,%rdi
   121fd:	e8 cc ff ff ff       	call   121ce <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   12202:	90                   	nop
   12203:	c9                   	leave
   12204:	c3                   	ret
   12205:	90                   	nop

0000000000012206 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   12206:	55                   	push   %rbp
   12207:	48 89 e5             	mov    %rsp,%rbp
   1220a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1220e:	90                   	nop
   1220f:	5d                   	pop    %rbp
   12210:	c3                   	ret
   12211:	90                   	nop

0000000000012212 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   12212:	55                   	push   %rbp
   12213:	48 89 e5             	mov    %rsp,%rbp
   12216:	48 83 ec 10          	sub    $0x10,%rsp
   1221a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1221e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12222:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1222a:	48 89 d6             	mov    %rdx,%rsi
   1222d:	48 89 c7             	mov    %rax,%rdi
   12230:	e8 fd 07 00 00       	call   12a32 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   12235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12239:	c9                   	leave
   1223a:	c3                   	ret
   1223b:	90                   	nop

000000000001223c <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   1223c:	55                   	push   %rbp
   1223d:	48 89 e5             	mov    %rsp,%rbp
   12240:	48 83 ec 10          	sub    $0x10,%rsp
   12244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12248:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1224c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12250:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12254:	48 89 d6             	mov    %rdx,%rsi
   12257:	48 89 c7             	mov    %rax,%rdi
   1225a:	e8 b3 ff ff ff       	call   12212 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   1225f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12263:	c9                   	leave
   12264:	c3                   	ret
   12265:	90                   	nop

0000000000012266 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   12266:	55                   	push   %rbp
   12267:	48 89 e5             	mov    %rsp,%rbp
   1226a:	48 83 ec 10          	sub    $0x10,%rsp
   1226e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   12272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12276:	48 89 c7             	mov    %rax,%rdi
   12279:	e8 1a 00 00 00       	call   12298 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1227e:	84 c0                	test   %al,%al
   12280:	74 0e                	je     12290 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   12282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12286:	48 89 c7             	mov    %rax,%rdi
   12289:	e8 ce 07 00 00       	call   12a5c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   1228e:	eb 05                	jmp    12295 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   12290:	e8 56 fe ff ff       	call   120eb <_ZSt27__throw_bad_optional_accessv>
      }
   12295:	c9                   	leave
   12296:	c3                   	ret
   12297:	90                   	nop

0000000000012298 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   12298:	55                   	push   %rbp
   12299:	48 89 e5             	mov    %rsp,%rbp
   1229c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   122a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122a4:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   122a8:	5d                   	pop    %rbp
   122a9:	c3                   	ret

00000000000122aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   122aa:	55                   	push   %rbp
   122ab:	48 89 e5             	mov    %rsp,%rbp
   122ae:	48 83 ec 10          	sub    $0x10,%rsp
   122b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122ba:	48 89 c7             	mov    %rax,%rdi
   122bd:	e8 16 08 00 00       	call   12ad8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   122c2:	90                   	nop
   122c3:	c9                   	leave
   122c4:	c3                   	ret
   122c5:	90                   	nop

00000000000122c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   122c6:	55                   	push   %rbp
   122c7:	48 89 e5             	mov    %rsp,%rbp
   122ca:	48 83 ec 10          	sub    $0x10,%rsp
   122ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122d6:	48 89 c7             	mov    %rax,%rdi
   122d9:	e8 c2 07 00 00       	call   12aa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   122de:	90                   	nop
   122df:	c9                   	leave
   122e0:	c3                   	ret
   122e1:	90                   	nop

00000000000122e2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   122e2:	55                   	push   %rbp
   122e3:	48 89 e5             	mov    %rsp,%rbp
   122e6:	48 83 ec 10          	sub    $0x10,%rsp
   122ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122f2:	48 89 c7             	mov    %rax,%rdi
   122f5:	e8 cc ff ff ff       	call   122c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   122fa:	90                   	nop
   122fb:	c9                   	leave
   122fc:	c3                   	ret
   122fd:	90                   	nop

00000000000122fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   122fe:	55                   	push   %rbp
   122ff:	48 89 e5             	mov    %rsp,%rbp
   12302:	48 83 ec 10          	sub    $0x10,%rsp
   12306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1230a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1230e:	48 89 c7             	mov    %rax,%rdi
   12311:	e8 de 07 00 00       	call   12af4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   12316:	90                   	nop
   12317:	c9                   	leave
   12318:	c3                   	ret
   12319:	90                   	nop

000000000001231a <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>:
 	           : _AT_Type::_S_ref(_M_elems, 0);
      }

      [[__gnu__::__const__, __nodiscard__]]
      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
   1231a:	55                   	push   %rbp
   1231b:	48 89 e5             	mov    %rsp,%rbp
   1231e:	48 83 ec 10          	sub    $0x10,%rsp
   12322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _AT_Type::_S_ptr(_M_elems); }
   12326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1232a:	48 89 c7             	mov    %rax,%rdi
   1232d:	e8 02 00 00 00       	call   12334 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>
   12332:	c9                   	leave
   12333:	c3                   	ret

0000000000012334 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>:
      _S_ptr(const _Type& __t) noexcept
   12334:	55                   	push   %rbp
   12335:	48 89 e5             	mov    %rsp,%rbp
   12338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return const_cast<_Tp*>(__t); }
   1233c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12340:	5d                   	pop    %rbp
   12341:	c3                   	ret

0000000000012342 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   12342:	55                   	push   %rbp
   12343:	48 89 e5             	mov    %rsp,%rbp
   12346:	48 83 ec 10          	sub    $0x10,%rsp
   1234a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1234e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12352:	48 89 c7             	mov    %rax,%rdi
   12355:	e8 3c 11 00 00       	call   13496 <_ZNSaIP13VkImageView_TED1Ev>
   1235a:	90                   	nop
   1235b:	c9                   	leave
   1235c:	c3                   	ret
   1235d:	90                   	nop

000000000001235e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1235e:	55                   	push   %rbp
   1235f:	48 89 e5             	mov    %rsp,%rbp
   12362:	48 83 ec 10          	sub    $0x10,%rsp
   12366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1236a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1236e:	48 89 c7             	mov    %rax,%rdi
   12371:	e8 0a 18 00 00       	call   13b80 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   12376:	90                   	nop
   12377:	c9                   	leave
   12378:	c3                   	ret
   12379:	90                   	nop

000000000001237a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   1237a:	55                   	push   %rbp
   1237b:	48 89 e5             	mov    %rsp,%rbp
   1237e:	48 83 ec 10          	sub    $0x10,%rsp
   12382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1238a:	48 89 c7             	mov    %rax,%rdi
   1238d:	e8 cc ff ff ff       	call   1235e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   12392:	90                   	nop
   12393:	c9                   	leave
   12394:	c3                   	ret
   12395:	90                   	nop

0000000000012396 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   12396:	55                   	push   %rbp
   12397:	48 89 e5             	mov    %rsp,%rbp
   1239a:	48 83 ec 10          	sub    $0x10,%rsp
   1239e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123a6:	48 89 c7             	mov    %rax,%rdi
   123a9:	e8 48 18 00 00       	call   13bf6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   123ae:	90                   	nop
   123af:	c9                   	leave
   123b0:	c3                   	ret
   123b1:	90                   	nop

00000000000123b2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   123b2:	55                   	push   %rbp
   123b3:	48 89 e5             	mov    %rsp,%rbp
   123b6:	48 83 ec 10          	sub    $0x10,%rsp
   123ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123c2:	48 89 c7             	mov    %rax,%rdi
   123c5:	e8 cc ff ff ff       	call   12396 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   123ca:	90                   	nop
   123cb:	c9                   	leave
   123cc:	c3                   	ret
   123cd:	90                   	nop

00000000000123ce <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   123ce:	55                   	push   %rbp
   123cf:	48 89 e5             	mov    %rsp,%rbp
   123d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123da:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   123e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123e5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   123ec:	00 
   123ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123f1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   123f8:	00 
   123f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123fd:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   12404:	00 
   12405:	90                   	nop
   12406:	5d                   	pop    %rbp
   12407:	c3                   	ret

0000000000012408 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   12408:	55                   	push   %rbp
   12409:	48 89 e5             	mov    %rsp,%rbp
   1240c:	48 83 ec 10          	sub    $0x10,%rsp
   12410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12418:	48 89 c7             	mov    %rax,%rdi
   1241b:	e8 26 18 00 00       	call   13c46 <_ZNSaIP15VkFramebuffer_TED1Ev>
   12420:	90                   	nop
   12421:	c9                   	leave
   12422:	c3                   	ret
   12423:	90                   	nop

0000000000012424 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   12424:	55                   	push   %rbp
   12425:	48 89 e5             	mov    %rsp,%rbp
   12428:	48 83 ec 10          	sub    $0x10,%rsp
   1242c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12434:	48 89 c7             	mov    %rax,%rdi
   12437:	e8 e2 17 00 00       	call   13c1e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   1243c:	90                   	nop
   1243d:	c9                   	leave
   1243e:	c3                   	ret
   1243f:	90                   	nop

0000000000012440 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   12440:	55                   	push   %rbp
   12441:	48 89 e5             	mov    %rsp,%rbp
   12444:	48 83 ec 10          	sub    $0x10,%rsp
   12448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1244c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12450:	48 89 c7             	mov    %rax,%rdi
   12453:	e8 cc ff ff ff       	call   12424 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   12458:	90                   	nop
   12459:	c9                   	leave
   1245a:	c3                   	ret
   1245b:	90                   	nop

000000000001245c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1245c:	55                   	push   %rbp
   1245d:	48 89 e5             	mov    %rsp,%rbp
   12460:	48 83 ec 10          	sub    $0x10,%rsp
   12464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1246c:	48 89 c7             	mov    %rax,%rdi
   1246f:	e8 80 18 00 00       	call   13cf4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>
   12474:	90                   	nop
   12475:	c9                   	leave
   12476:	c3                   	ret
   12477:	90                   	nop

0000000000012478 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   12478:	55                   	push   %rbp
   12479:	48 89 e5             	mov    %rsp,%rbp
   1247c:	48 83 ec 10          	sub    $0x10,%rsp
   12480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12488:	48 89 c7             	mov    %rax,%rdi
   1248b:	e8 cc ff ff ff       	call   1245c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   12490:	90                   	nop
   12491:	c9                   	leave
   12492:	c3                   	ret
   12493:	90                   	nop

0000000000012494 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   12494:	55                   	push   %rbp
   12495:	48 89 e5             	mov    %rsp,%rbp
   12498:	48 83 ec 10          	sub    $0x10,%rsp
   1249c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124a4:	48 89 c7             	mov    %rax,%rdi
   124a7:	e8 7c 14 00 00       	call   13928 <_ZNSaIP13VkSemaphore_TED1Ev>
   124ac:	90                   	nop
   124ad:	c9                   	leave
   124ae:	c3                   	ret
   124af:	90                   	nop

00000000000124b0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   124b0:	55                   	push   %rbp
   124b1:	48 89 e5             	mov    %rsp,%rbp
   124b4:	48 83 ec 10          	sub    $0x10,%rsp
   124b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124c0:	48 89 c7             	mov    %rax,%rdi
   124c3:	e8 54 18 00 00       	call   13d1c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>
   124c8:	90                   	nop
   124c9:	c9                   	leave
   124ca:	c3                   	ret
   124cb:	90                   	nop

00000000000124cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>:
      vector() = default;
   124cc:	55                   	push   %rbp
   124cd:	48 89 e5             	mov    %rsp,%rbp
   124d0:	48 83 ec 10          	sub    $0x10,%rsp
   124d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124dc:	48 89 c7             	mov    %rax,%rdi
   124df:	e8 cc ff ff ff       	call   124b0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>
   124e4:	90                   	nop
   124e5:	c9                   	leave
   124e6:	c3                   	ret
   124e7:	90                   	nop

00000000000124e8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   124e8:	55                   	push   %rbp
   124e9:	48 89 e5             	mov    %rsp,%rbp
   124ec:	48 83 ec 10          	sub    $0x10,%rsp
   124f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124f8:	48 89 c7             	mov    %rax,%rdi
   124fb:	e8 ba 18 00 00       	call   13dba <_ZNSaIP9VkFence_TED1Ev>
   12500:	90                   	nop
   12501:	c9                   	leave
   12502:	c3                   	ret
   12503:	90                   	nop

0000000000012504 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   12504:	55                   	push   %rbp
   12505:	48 89 e5             	mov    %rsp,%rbp
   12508:	48 83 ec 10          	sub    $0x10,%rsp
   1250c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12514:	48 89 c7             	mov    %rax,%rdi
   12517:	e8 76 18 00 00       	call   13d92 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>
   1251c:	90                   	nop
   1251d:	c9                   	leave
   1251e:	c3                   	ret
   1251f:	90                   	nop

0000000000012520 <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>:
      vector() = default;
   12520:	55                   	push   %rbp
   12521:	48 89 e5             	mov    %rsp,%rbp
   12524:	48 83 ec 10          	sub    $0x10,%rsp
   12528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1252c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12530:	48 89 c7             	mov    %rax,%rdi
   12533:	e8 cc ff ff ff       	call   12504 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>
   12538:	90                   	nop
   12539:	c9                   	leave
   1253a:	c3                   	ret
   1253b:	90                   	nop

000000000001253c <_ZN9VulkanApp11SyncWrapperC1Ev>:
  void createCommandBuffers();

  void recordCommandBuffer(VkCommandBuffer commandBuffer, uint32_t imageIndex);

  /* Step 11: Synchronization and cache control */
  struct SyncWrapper {
   1253c:	55                   	push   %rbp
   1253d:	48 89 e5             	mov    %rsp,%rbp
   12540:	48 83 ec 10          	sub    $0x10,%rsp
   12544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1254c:	48 89 c7             	mov    %rax,%rdi
   1254f:	e8 78 ff ff ff       	call   124cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   12554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12558:	48 83 c0 18          	add    $0x18,%rax
   1255c:	48 89 c7             	mov    %rax,%rdi
   1255f:	e8 68 ff ff ff       	call   124cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   12564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12568:	48 83 c0 30          	add    $0x30,%rax
   1256c:	48 89 c7             	mov    %rax,%rdi
   1256f:	e8 ac ff ff ff       	call   12520 <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>
   12574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12578:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   1257f:	00 
   12580:	90                   	nop
   12581:	c9                   	leave
   12582:	c3                   	ret
   12583:	90                   	nop

0000000000012584 <_ZN9VulkanApp11SyncWrapperD1Ev>:
   12584:	55                   	push   %rbp
   12585:	48 89 e5             	mov    %rsp,%rbp
   12588:	48 83 ec 10          	sub    $0x10,%rsp
   1258c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12590:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12594:	48 83 c0 30          	add    $0x30,%rax
   12598:	48 89 c7             	mov    %rax,%rdi
   1259b:	e8 84 18 00 00       	call   13e24 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>
   125a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125a4:	48 83 c0 18          	add    $0x18,%rax
   125a8:	48 89 c7             	mov    %rax,%rdi
   125ab:	e8 1c 14 00 00       	call   139cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   125b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125b4:	48 89 c7             	mov    %rax,%rdi
   125b7:	e8 10 14 00 00       	call   139cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   125bc:	90                   	nop
   125bd:	c9                   	leave
   125be:	c3                   	ret
   125bf:	90                   	nop

00000000000125c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   125c0:	55                   	push   %rbp
   125c1:	48 89 e5             	mov    %rsp,%rbp
   125c4:	53                   	push   %rbx
   125c5:	48 83 ec 38          	sub    $0x38,%rsp
   125c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   125cd:	48 89 f0             	mov    %rsi,%rax
   125d0:	48 89 d6             	mov    %rdx,%rsi
   125d3:	48 89 f2             	mov    %rsi,%rdx
   125d6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   125da:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   125de:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   125e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125e6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   125ea:	48 89 d6             	mov    %rdx,%rsi
   125ed:	48 89 c7             	mov    %rax,%rdi
   125f0:	e8 87 19 00 00       	call   13f7c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   125f5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   125f9:	48 89 c7             	mov    %rax,%rdi
   125fc:	e8 b3 19 00 00       	call   13fb4 <_ZNKSt16initializer_listIPKcE3endEv>
   12601:	48 89 c3             	mov    %rax,%rbx
   12604:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12608:	48 89 c7             	mov    %rax,%rdi
   1260b:	e8 92 19 00 00       	call   13fa2 <_ZNKSt16initializer_listIPKcE5beginEv>
   12610:	48 89 c1             	mov    %rax,%rcx
   12613:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12617:	48 89 da             	mov    %rbx,%rdx
   1261a:	48 89 ce             	mov    %rcx,%rsi
   1261d:	48 89 c7             	mov    %rax,%rdi
   12620:	e8 f5 19 00 00       	call   1401a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   12625:	eb 1a                	jmp    12641 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   12627:	48 89 c3             	mov    %rax,%rbx
   1262a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1262e:	48 89 c7             	mov    %rax,%rdi
   12631:	e8 c8 68 ff ff       	call   8efe <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   12636:	48 89 d8             	mov    %rbx,%rax
   12639:	48 89 c7             	mov    %rax,%rdi
   1263c:	e8 df 21 ff ff       	call   4820 <_Unwind_Resume@plt>
   12641:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12645:	c9                   	leave
   12646:	c3                   	ret
   12647:	90                   	nop

0000000000012648 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   12648:	55                   	push   %rbp
   12649:	48 89 e5             	mov    %rsp,%rbp
   1264c:	48 83 ec 10          	sub    $0x10,%rsp
   12650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   12654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12658:	48 89 c7             	mov    %rax,%rdi
   1265b:	e8 56 77 ff ff       	call   9db6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12660:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   12663:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12667:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1266b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1266f:	48 8b 00             	mov    (%rax),%rax
   12672:	48 89 ce             	mov    %rcx,%rsi
   12675:	48 89 c7             	mov    %rax,%rdi
   12678:	e8 4c 1a 00 00       	call   140c9 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   1267d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12681:	48 89 c7             	mov    %rax,%rdi
   12684:	e8 75 68 ff ff       	call   8efe <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   12689:	90                   	nop
   1268a:	c9                   	leave
   1268b:	c3                   	ret

000000000001268c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1268c:	55                   	push   %rbp
   1268d:	48 89 e5             	mov    %rsp,%rbp
   12690:	48 83 ec 20          	sub    $0x20,%rsp
   12694:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12698:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1269c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   126a0:	48 89 d6             	mov    %rdx,%rsi
   126a3:	48 89 c7             	mov    %rax,%rdi
   126a6:	e8 49 1a 00 00       	call   140f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   126ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126af:	c9                   	leave
   126b0:	c3                   	ret
   126b1:	90                   	nop

00000000000126b2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   126b2:	55                   	push   %rbp
   126b3:	48 89 e5             	mov    %rsp,%rbp
   126b6:	48 83 ec 20          	sub    $0x20,%rsp
   126ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   126be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126c2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   126c6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   126ca:	48 89 d6             	mov    %rdx,%rsi
   126cd:	48 89 c7             	mov    %rax,%rdi
   126d0:	e8 1f 1a 00 00       	call   140f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   126d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126d9:	c9                   	leave
   126da:	c3                   	ret

00000000000126db <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   126db:	55                   	push   %rbp
   126dc:	48 89 e5             	mov    %rsp,%rbp
   126df:	53                   	push   %rbx
   126e0:	48 83 ec 18          	sub    $0x18,%rsp
   126e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   126e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   126ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126f0:	48 89 c7             	mov    %rax,%rdi
   126f3:	e8 1a 1a 00 00       	call   14112 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   126f8:	48 8b 18             	mov    (%rax),%rbx
   126fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   126ff:	48 89 c7             	mov    %rax,%rdi
   12702:	e8 0b 1a 00 00       	call   14112 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12707:	48 8b 00             	mov    (%rax),%rax
   1270a:	48 39 c3             	cmp    %rax,%rbx
   1270d:	0f 95 c0             	setne  %al
   12710:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12714:	c9                   	leave
   12715:	c3                   	ret

0000000000012716 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12716:	55                   	push   %rbp
   12717:	48 89 e5             	mov    %rsp,%rbp
   1271a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1271e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12722:	48 8b 00             	mov    (%rax),%rax
   12725:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1272d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12734:	5d                   	pop    %rbp
   12735:	c3                   	ret

0000000000012736 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12736:	55                   	push   %rbp
   12737:	48 89 e5             	mov    %rsp,%rbp
   1273a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1273e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12742:	48 8b 00             	mov    (%rax),%rax
   12745:	5d                   	pop    %rbp
   12746:	c3                   	ret
   12747:	90                   	nop

0000000000012748 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   12748:	55                   	push   %rbp
   12749:	48 89 e5             	mov    %rsp,%rbp
   1274c:	53                   	push   %rbx
   1274d:	48 83 ec 18          	sub    $0x18,%rsp
   12751:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12755:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   12759:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1275d:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12761:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12765:	48 8b 40 10          	mov    0x10(%rax),%rax
   12769:	48 39 c2             	cmp    %rax,%rdx
   1276c:	74 3c                	je     127aa <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   1276e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12772:	48 89 c7             	mov    %rax,%rdi
   12775:	e8 a6 19 00 00       	call   14120 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1277a:	48 89 c2             	mov    %rax,%rdx
   1277d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12781:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12785:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12789:	48 89 ce             	mov    %rcx,%rsi
   1278c:	48 89 c7             	mov    %rax,%rdi
   1278f:	e8 9a 19 00 00       	call   1412e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   12794:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12798:	48 8b 40 08          	mov    0x8(%rax),%rax
   1279c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   127a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127a4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   127a8:	eb 30                	jmp    127da <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   127aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   127ae:	48 89 c7             	mov    %rax,%rdi
   127b1:	e8 6a 19 00 00       	call   14120 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   127b6:	48 89 c3             	mov    %rax,%rbx
   127b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127bd:	48 89 c7             	mov    %rax,%rdi
   127c0:	e8 ed fe ff ff       	call   126b2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   127c5:	48 89 c1             	mov    %rax,%rcx
   127c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127cc:	48 89 da             	mov    %rbx,%rdx
   127cf:	48 89 ce             	mov    %rcx,%rsi
   127d2:	48 89 c7             	mov    %rax,%rdi
   127d5:	e8 8e 19 00 00       	call   14168 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   127da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127de:	48 89 c7             	mov    %rax,%rdi
   127e1:	e8 14 1b 00 00       	call   142fa <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   127e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   127ea:	c9                   	leave
   127eb:	c3                   	ret

00000000000127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   127ec:	55                   	push   %rbp
   127ed:	48 89 e5             	mov    %rsp,%rbp
   127f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   127f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127f8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   127fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12800:	48 8b 00             	mov    (%rax),%rax
   12803:	48 29 c2             	sub    %rax,%rdx
   12806:	48 89 d0             	mov    %rdx,%rax
   12809:	48 c1 f8 03          	sar    $0x3,%rax
   1280d:	5d                   	pop    %rbp
   1280e:	c3                   	ret
   1280f:	90                   	nop

0000000000012810 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   12810:	55                   	push   %rbp
   12811:	48 89 e5             	mov    %rsp,%rbp
   12814:	48 83 ec 10          	sub    $0x10,%rsp
   12818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1281c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12820:	48 8b 10             	mov    (%rax),%rdx
   12823:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12827:	48 89 d6             	mov    %rdx,%rsi
   1282a:	48 89 c7             	mov    %rax,%rdi
   1282d:	e8 08 1b 00 00       	call   1433a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12832:	c9                   	leave
   12833:	c3                   	ret

0000000000012834 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   12834:	55                   	push   %rbp
   12835:	48 89 e5             	mov    %rsp,%rbp
   12838:	48 83 ec 10          	sub    $0x10,%rsp
   1283c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12840:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12844:	48 8b 10             	mov    (%rax),%rdx
   12847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1284b:	48 89 d6             	mov    %rdx,%rsi
   1284e:	48 89 c7             	mov    %rax,%rdi
   12851:	e8 e4 1a 00 00       	call   1433a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12856:	c9                   	leave
   12857:	c3                   	ret

0000000000012858 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12858:	55                   	push   %rbp
   12859:	48 89 e5             	mov    %rsp,%rbp
   1285c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12864:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1286c:	48 8b 00             	mov    (%rax),%rax
   1286f:	48 29 c2             	sub    %rax,%rdx
   12872:	48 c1 fa 02          	sar    $0x2,%rdx
   12876:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   1287d:	db b6 6d 
   12880:	48 0f af c2          	imul   %rdx,%rax
   12884:	5d                   	pop    %rbp
   12885:	c3                   	ret

0000000000012886 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   12886:	55                   	push   %rbp
   12887:	48 89 e5             	mov    %rsp,%rbp
   1288a:	48 83 ec 10          	sub    $0x10,%rsp
   1288e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   12892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12896:	48 89 c7             	mov    %rax,%rdi
   12899:	e8 74 7a ff ff       	call   a312 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   1289e:	c9                   	leave
   1289f:	c3                   	ret

00000000000128a0 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   128a0:	55                   	push   %rbp
   128a1:	48 89 e5             	mov    %rsp,%rbp
   128a4:	48 83 ec 10          	sub    $0x10,%rsp
   128a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   128ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128b0:	48 89 c7             	mov    %rax,%rdi
   128b3:	e8 5a 7a ff ff       	call   a312 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   128b8:	84 c0                	test   %al,%al
   128ba:	74 0e                	je     128ca <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   128bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128c0:	48 89 c7             	mov    %rax,%rdi
   128c3:	e8 5c 7a ff ff       	call   a324 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   128c8:	eb 05                	jmp    128cf <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   128ca:	e8 1c f8 ff ff       	call   120eb <_ZSt27__throw_bad_optional_accessv>
      }
   128cf:	c9                   	leave
   128d0:	c3                   	ret
   128d1:	90                   	nop

00000000000128d2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   128d2:	55                   	push   %rbp
   128d3:	48 89 e5             	mov    %rsp,%rbp
   128d6:	48 83 ec 20          	sub    $0x20,%rsp
   128da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   128e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   128e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128ea:	48 89 c7             	mov    %rax,%rdi
   128ed:	e8 5a 1a 00 00       	call   1434c <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   128f2:	8b 10                	mov    (%rax),%edx
   128f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128f8:	89 10                	mov    %edx,(%rax)
   128fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128fe:	48 89 c7             	mov    %rax,%rdi
   12901:	e8 54 1a 00 00       	call   1435a <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   12906:	48 89 c1             	mov    %rax,%rcx
   12909:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1290d:	48 8b 01             	mov    (%rcx),%rax
   12910:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   12914:	48 89 46 04          	mov    %rax,0x4(%rsi)
   12918:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   1291c:	48 8b 41 10          	mov    0x10(%rcx),%rax
   12920:	48 89 46 14          	mov    %rax,0x14(%rsi)
   12924:	90                   	nop
   12925:	c9                   	leave
   12926:	c3                   	ret
   12927:	90                   	nop

0000000000012928 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   12928:	55                   	push   %rbp
   12929:	48 89 e5             	mov    %rsp,%rbp
   1292c:	53                   	push   %rbx
   1292d:	48 83 ec 18          	sub    $0x18,%rsp
   12931:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12935:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   12939:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1293d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12941:	48 89 c7             	mov    %rax,%rdi
   12944:	e8 1f 1a 00 00       	call   14368 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12949:	48 89 c6             	mov    %rax,%rsi
   1294c:	48 89 df             	mov    %rbx,%rdi
   1294f:	e8 48 1a 00 00       	call   1439c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   12954:	90                   	nop
   12955:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12959:	c9                   	leave
   1295a:	c3                   	ret
   1295b:	90                   	nop

000000000001295c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1295c:	55                   	push   %rbp
   1295d:	48 89 e5             	mov    %rsp,%rbp
   12960:	48 83 ec 20          	sub    $0x20,%rsp
   12964:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12968:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1296c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12970:	48 89 d6             	mov    %rdx,%rsi
   12973:	48 89 c7             	mov    %rax,%rdi
   12976:	e8 55 1a 00 00       	call   143d0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1297b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1297f:	c9                   	leave
   12980:	c3                   	ret
   12981:	90                   	nop

0000000000012982 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12982:	55                   	push   %rbp
   12983:	48 89 e5             	mov    %rsp,%rbp
   12986:	48 83 ec 20          	sub    $0x20,%rsp
   1298a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1298e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12992:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12996:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1299a:	48 89 d6             	mov    %rdx,%rsi
   1299d:	48 89 c7             	mov    %rax,%rdi
   129a0:	e8 2b 1a 00 00       	call   143d0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   129a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129a9:	c9                   	leave
   129aa:	c3                   	ret

00000000000129ab <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   129ab:	55                   	push   %rbp
   129ac:	48 89 e5             	mov    %rsp,%rbp
   129af:	53                   	push   %rbx
   129b0:	48 83 ec 18          	sub    $0x18,%rsp
   129b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   129bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129c0:	48 89 c7             	mov    %rax,%rdi
   129c3:	e8 26 1a 00 00       	call   143ee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   129c8:	48 8b 18             	mov    (%rax),%rbx
   129cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   129cf:	48 89 c7             	mov    %rax,%rdi
   129d2:	e8 17 1a 00 00       	call   143ee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   129d7:	48 8b 00             	mov    (%rax),%rax
   129da:	48 39 c3             	cmp    %rax,%rbx
   129dd:	0f 95 c0             	setne  %al
   129e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   129e4:	c9                   	leave
   129e5:	c3                   	ret

00000000000129e6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   129e6:	55                   	push   %rbp
   129e7:	48 89 e5             	mov    %rsp,%rbp
   129ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   129ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129f2:	48 8b 00             	mov    (%rax),%rax
   129f5:	48 8d 50 08          	lea    0x8(%rax),%rdx
   129f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129fd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12a04:	5d                   	pop    %rbp
   12a05:	c3                   	ret

0000000000012a06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12a06:	55                   	push   %rbp
   12a07:	48 89 e5             	mov    %rsp,%rbp
   12a0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   12a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a12:	48 8b 00             	mov    (%rax),%rax
   12a15:	5d                   	pop    %rbp
   12a16:	c3                   	ret
   12a17:	90                   	nop

0000000000012a18 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   12a18:	55                   	push   %rbp
   12a19:	48 89 e5             	mov    %rsp,%rbp
   12a1c:	48 83 ec 10          	sub    $0x10,%rsp
   12a20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   12a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a28:	48 89 c7             	mov    %rax,%rdi
   12a2b:	e8 68 f8 ff ff       	call   12298 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   12a30:	c9                   	leave
   12a31:	c3                   	ret

0000000000012a32 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   12a32:	55                   	push   %rbp
   12a33:	48 89 e5             	mov    %rsp,%rbp
   12a36:	48 83 ec 10          	sub    $0x10,%rsp
   12a3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   12a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a4a:	48 89 d6             	mov    %rdx,%rsi
   12a4d:	48 89 c7             	mov    %rax,%rdi
   12a50:	e8 a7 19 00 00       	call   143fc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   12a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12a59:	c9                   	leave
   12a5a:	c3                   	ret
   12a5b:	90                   	nop

0000000000012a5c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   12a5c:	55                   	push   %rbp
   12a5d:	48 89 e5             	mov    %rsp,%rbp
   12a60:	48 83 ec 10          	sub    $0x10,%rsp
   12a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   12a68:	e8 96 22 ff ff       	call   4d03 <_ZSt23__is_constant_evaluatedv>
   12a6d:	84 c0                	test   %al,%al
   12a6f:	74 1a                	je     12a8b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   12a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a75:	48 89 c7             	mov    %rax,%rdi
   12a78:	e8 1b f8 ff ff       	call   12298 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   12a7d:	83 f0 01             	xor    $0x1,%eax
   12a80:	84 c0                	test   %al,%al
   12a82:	74 07                	je     12a8b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   12a84:	b8 01 00 00 00       	mov    $0x1,%eax
   12a89:	eb 05                	jmp    12a90 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   12a8b:	b8 00 00 00 00       	mov    $0x0,%eax
   12a90:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   12a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a96:	48 89 c7             	mov    %rax,%rdi
   12a99:	e8 f0 19 00 00       	call   1448e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   12a9e:	c9                   	leave
   12a9f:	c3                   	ret

0000000000012aa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   12aa0:	55                   	push   %rbp
   12aa1:	48 89 e5             	mov    %rsp,%rbp
   12aa4:	48 83 ec 10          	sub    $0x10,%rsp
   12aa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   12aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ab0:	48 89 c7             	mov    %rax,%rdi
   12ab3:	e8 e4 19 00 00       	call   1449c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   12ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12abc:	48 89 c7             	mov    %rax,%rdi
   12abf:	e8 f4 19 00 00       	call   144b8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   12ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ac8:	48 83 c0 08          	add    $0x8,%rax
   12acc:	48 89 c7             	mov    %rax,%rdi
   12acf:	e8 58 f6 ff ff       	call   1212c <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   12ad4:	90                   	nop
   12ad5:	c9                   	leave
   12ad6:	c3                   	ret
   12ad7:	90                   	nop

0000000000012ad8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12ad8:	55                   	push   %rbp
   12ad9:	48 89 e5             	mov    %rsp,%rbp
   12adc:	48 83 ec 10          	sub    $0x10,%rsp
   12ae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ae8:	48 89 c7             	mov    %rax,%rdi
   12aeb:	e8 d4 19 00 00       	call   144c4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   12af0:	90                   	nop
   12af1:	c9                   	leave
   12af2:	c3                   	ret
   12af3:	90                   	nop

0000000000012af4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   12af4:	55                   	push   %rbp
   12af5:	48 89 e5             	mov    %rsp,%rbp
   12af8:	48 83 ec 10          	sub    $0x10,%rsp
   12afc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   12b00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b04:	48 89 c7             	mov    %rax,%rdi
   12b07:	e8 2a 1a 00 00       	call   14536 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   12b0c:	48 89 c2             	mov    %rax,%rdx
   12b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b13:	48 89 d6             	mov    %rdx,%rsi
   12b16:	48 89 c7             	mov    %rax,%rdi
   12b19:	e8 b2 19 00 00       	call   144d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   12b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b22:	48 89 c7             	mov    %rax,%rdi
   12b25:	e8 80 f7 ff ff       	call   122aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   12b2a:	90                   	nop
   12b2b:	c9                   	leave
   12b2c:	c3                   	ret
   12b2d:	90                   	nop

0000000000012b2e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12b2e:	55                   	push   %rbp
   12b2f:	48 89 e5             	mov    %rsp,%rbp
   12b32:	48 83 ec 20          	sub    $0x20,%rsp
   12b36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12b3a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12b3e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12b42:	48 89 d6             	mov    %rdx,%rsi
   12b45:	48 89 c7             	mov    %rax,%rdi
   12b48:	e8 03 1a 00 00       	call   14550 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b51:	c9                   	leave
   12b52:	c3                   	ret
   12b53:	90                   	nop

0000000000012b54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12b54:	55                   	push   %rbp
   12b55:	48 89 e5             	mov    %rsp,%rbp
   12b58:	48 83 ec 20          	sub    $0x20,%rsp
   12b5c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12b60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b64:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12b68:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12b6c:	48 89 d6             	mov    %rdx,%rsi
   12b6f:	48 89 c7             	mov    %rax,%rdi
   12b72:	e8 d9 19 00 00       	call   14550 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b7b:	c9                   	leave
   12b7c:	c3                   	ret

0000000000012b7d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12b7d:	55                   	push   %rbp
   12b7e:	48 89 e5             	mov    %rsp,%rbp
   12b81:	53                   	push   %rbx
   12b82:	48 83 ec 18          	sub    $0x18,%rsp
   12b86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b8a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12b8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b92:	48 89 c7             	mov    %rax,%rdi
   12b95:	e8 d4 19 00 00       	call   1456e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   12b9a:	48 8b 18             	mov    (%rax),%rbx
   12b9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12ba1:	48 89 c7             	mov    %rax,%rdi
   12ba4:	e8 c5 19 00 00       	call   1456e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   12ba9:	48 8b 00             	mov    (%rax),%rax
   12bac:	48 39 c3             	cmp    %rax,%rbx
   12baf:	0f 95 c0             	setne  %al
   12bb2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12bb6:	c9                   	leave
   12bb7:	c3                   	ret

0000000000012bb8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12bb8:	55                   	push   %rbp
   12bb9:	48 89 e5             	mov    %rsp,%rbp
   12bbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12bc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bc4:	48 8b 00             	mov    (%rax),%rax
   12bc7:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   12bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bd2:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12bd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12bd9:	5d                   	pop    %rbp
   12bda:	c3                   	ret
   12bdb:	90                   	nop

0000000000012bdc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12bdc:	55                   	push   %rbp
   12bdd:	48 89 e5             	mov    %rsp,%rbp
   12be0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   12be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12be8:	48 8b 00             	mov    (%rax),%rax
   12beb:	5d                   	pop    %rbp
   12bec:	c3                   	ret
   12bed:	90                   	nop

0000000000012bee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   12bee:	55                   	push   %rbp
   12bef:	48 89 e5             	mov    %rsp,%rbp
   12bf2:	53                   	push   %rbx
   12bf3:	48 83 ec 48          	sub    $0x48,%rsp
   12bf7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   12bfb:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   12bff:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   12c03:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12c07:	48 89 d6             	mov    %rdx,%rsi
   12c0a:	48 89 c7             	mov    %rax,%rdi
   12c0d:	e8 6a 19 00 00       	call   1457c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   12c12:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   12c16:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12c1a:	48 89 c7             	mov    %rax,%rdi
   12c1d:	e8 80 19 00 00       	call   145a2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   12c22:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   12c26:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12c2a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   12c2e:	48 89 d6             	mov    %rdx,%rsi
   12c31:	48 89 c7             	mov    %rax,%rdi
   12c34:	e8 83 19 00 00       	call   145bc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   12c39:	84 c0                	test   %al,%al
   12c3b:	75 32                	jne    12c6f <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   12c3d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12c41:	48 89 c7             	mov    %rax,%rdi
   12c44:	e8 95 19 00 00       	call   145de <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   12c49:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   12c4d:	48 89 c7             	mov    %rax,%rdi
   12c50:	e8 a5 19 00 00       	call   145fa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   12c55:	48 89 c2             	mov    %rax,%rdx
   12c58:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   12c5c:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   12c60:	48 89 ce             	mov    %rcx,%rsi
   12c63:	48 89 c7             	mov    %rax,%rdi
   12c66:	e8 ad 19 00 00       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12c6b:	84 c0                	test   %al,%al
   12c6d:	74 07                	je     12c76 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   12c6f:	b8 01 00 00 00       	mov    $0x1,%eax
   12c74:	eb 05                	jmp    12c7b <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   12c76:	b8 00 00 00 00       	mov    $0x0,%eax
   12c7b:	84 c0                	test   %al,%al
   12c7d:	74 5d                	je     12cdc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   12c7f:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   12c83:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12c87:	48 89 c7             	mov    %rax,%rdi
   12c8a:	e8 de 12 00 00       	call   13f6d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   12c8f:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   12c92:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12c96:	48 89 d6             	mov    %rdx,%rsi
   12c99:	48 89 c7             	mov    %rax,%rdi
   12c9c:	e8 a0 19 00 00       	call   14641 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   12ca1:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   12ca5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   12ca9:	48 89 d6             	mov    %rdx,%rsi
   12cac:	48 89 c7             	mov    %rax,%rdi
   12caf:	e8 c2 19 00 00       	call   14676 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   12cb4:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   12cb8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   12cbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cc0:	49 89 c8             	mov    %rcx,%r8
   12cc3:	48 89 d1             	mov    %rdx,%rcx
   12cc6:	48 8d 15 db b9 00 00 	lea    0xb9db(%rip),%rdx        # 1e6a8 <_ZSt19piecewise_construct>
   12ccd:	48 89 c6             	mov    %rax,%rsi
   12cd0:	48 89 df             	mov    %rbx,%rdi
   12cd3:	e8 bc 19 00 00       	call   14694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   12cd8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   12cdc:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   12ce0:	48 89 c7             	mov    %rax,%rdi
   12ce3:	e8 12 19 00 00       	call   145fa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   12ce8:	48 83 c0 20          	add    $0x20,%rax
      }
   12cec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12cf0:	c9                   	leave
   12cf1:	c3                   	ret

0000000000012cf2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   12cf2:	55                   	push   %rbp
   12cf3:	48 89 e5             	mov    %rsp,%rbp
   12cf6:	48 83 ec 20          	sub    $0x20,%rsp
   12cfa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   12cfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d02:	48 89 c7             	mov    %rax,%rdi
   12d05:	e8 ac 1a 00 00       	call   147b6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   12d0a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12d0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d12:	48 89 c7             	mov    %rax,%rdi
   12d15:	e8 76 1a 00 00       	call   14790 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   12d1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12d1e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   12d22:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12d26:	48 89 d6             	mov    %rdx,%rsi
   12d29:	48 89 c7             	mov    %rax,%rdi
   12d2c:	e8 ae 1a 00 00       	call   147df <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   12d31:	c9                   	leave
   12d32:	c3                   	ret
   12d33:	90                   	nop

0000000000012d34 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12d34:	55                   	push   %rbp
   12d35:	48 89 e5             	mov    %rsp,%rbp
   12d38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   12d40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d44:	48 8b 00             	mov    (%rax),%rax
   12d47:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12d4b:	48 c1 e2 03          	shl    $0x3,%rdx
   12d4f:	48 01 d0             	add    %rdx,%rax
      }
   12d52:	5d                   	pop    %rbp
   12d53:	c3                   	ret

0000000000012d54 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12d54:	55                   	push   %rbp
   12d55:	48 89 e5             	mov    %rsp,%rbp
   12d58:	48 83 ec 20          	sub    $0x20,%rsp
   12d5c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12d60:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d64:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12d68:	48 89 d6             	mov    %rdx,%rsi
   12d6b:	48 89 c7             	mov    %rax,%rdi
   12d6e:	e8 a7 1a 00 00       	call   1481a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12d73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d77:	c9                   	leave
   12d78:	c3                   	ret
   12d79:	90                   	nop

0000000000012d7a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12d7a:	55                   	push   %rbp
   12d7b:	48 89 e5             	mov    %rsp,%rbp
   12d7e:	48 83 ec 20          	sub    $0x20,%rsp
   12d82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12d86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d8a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12d8e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12d92:	48 89 d6             	mov    %rdx,%rsi
   12d95:	48 89 c7             	mov    %rax,%rdi
   12d98:	e8 7d 1a 00 00       	call   1481a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12da1:	c9                   	leave
   12da2:	c3                   	ret

0000000000012da3 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12da3:	55                   	push   %rbp
   12da4:	48 89 e5             	mov    %rsp,%rbp
   12da7:	53                   	push   %rbx
   12da8:	48 83 ec 18          	sub    $0x18,%rsp
   12dac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12db0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12db4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12db8:	48 89 c7             	mov    %rax,%rdi
   12dbb:	e8 78 1a 00 00       	call   14838 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   12dc0:	48 8b 18             	mov    (%rax),%rbx
   12dc3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12dc7:	48 89 c7             	mov    %rax,%rdi
   12dca:	e8 69 1a 00 00       	call   14838 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   12dcf:	48 8b 00             	mov    (%rax),%rax
   12dd2:	48 39 c3             	cmp    %rax,%rbx
   12dd5:	0f 95 c0             	setne  %al
   12dd8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12ddc:	c9                   	leave
   12ddd:	c3                   	ret

0000000000012dde <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12dde:	55                   	push   %rbp
   12ddf:	48 89 e5             	mov    %rsp,%rbp
   12de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dea:	48 8b 00             	mov    (%rax),%rax
   12ded:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12df5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12df8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12dfc:	5d                   	pop    %rbp
   12dfd:	c3                   	ret

0000000000012dfe <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12dfe:	55                   	push   %rbp
   12dff:	48 89 e5             	mov    %rsp,%rbp
   12e02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   12e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e0a:	48 8b 00             	mov    (%rax),%rax
   12e0d:	5d                   	pop    %rbp
   12e0e:	c3                   	ret
   12e0f:	90                   	nop

0000000000012e10 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12e10:	55                   	push   %rbp
   12e11:	48 89 e5             	mov    %rsp,%rbp
   12e14:	48 83 ec 20          	sub    $0x20,%rsp
   12e18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12e1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12e20:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12e24:	48 89 d6             	mov    %rdx,%rsi
   12e27:	48 89 c7             	mov    %rax,%rdi
   12e2a:	e8 17 1a 00 00       	call   14846 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e33:	c9                   	leave
   12e34:	c3                   	ret
   12e35:	90                   	nop

0000000000012e36 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12e36:	55                   	push   %rbp
   12e37:	48 89 e5             	mov    %rsp,%rbp
   12e3a:	48 83 ec 20          	sub    $0x20,%rsp
   12e3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12e42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e46:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12e4a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12e4e:	48 89 d6             	mov    %rdx,%rsi
   12e51:	48 89 c7             	mov    %rax,%rdi
   12e54:	e8 ed 19 00 00       	call   14846 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e5d:	c9                   	leave
   12e5e:	c3                   	ret

0000000000012e5f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12e5f:	55                   	push   %rbp
   12e60:	48 89 e5             	mov    %rsp,%rbp
   12e63:	53                   	push   %rbx
   12e64:	48 83 ec 18          	sub    $0x18,%rsp
   12e68:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12e6c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12e70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e74:	48 89 c7             	mov    %rax,%rdi
   12e77:	e8 e8 19 00 00       	call   14864 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   12e7c:	48 8b 18             	mov    (%rax),%rbx
   12e7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e83:	48 89 c7             	mov    %rax,%rdi
   12e86:	e8 d9 19 00 00       	call   14864 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   12e8b:	48 8b 00             	mov    (%rax),%rax
   12e8e:	48 39 c3             	cmp    %rax,%rbx
   12e91:	0f 95 c0             	setne  %al
   12e94:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12e98:	c9                   	leave
   12e99:	c3                   	ret

0000000000012e9a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12e9a:	55                   	push   %rbp
   12e9b:	48 89 e5             	mov    %rsp,%rbp
   12e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12ea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ea6:	48 8b 00             	mov    (%rax),%rax
   12ea9:	48 8d 50 04          	lea    0x4(%rax),%rdx
   12ead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eb1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12eb8:	5d                   	pop    %rbp
   12eb9:	c3                   	ret

0000000000012eba <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12eba:	55                   	push   %rbp
   12ebb:	48 89 e5             	mov    %rsp,%rbp
   12ebe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   12ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ec6:	48 8b 00             	mov    (%rax),%rax
   12ec9:	5d                   	pop    %rbp
   12eca:	c3                   	ret
   12ecb:	90                   	nop

0000000000012ecc <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   12ecc:	55                   	push   %rbp
   12ecd:	48 89 e5             	mov    %rsp,%rbp
   12ed0:	48 83 ec 20          	sub    $0x20,%rsp
   12ed4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12ed8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   12edc:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   12ee0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12ee4:	48 89 c7             	mov    %rax,%rdi
   12ee7:	e8 86 19 00 00       	call   14872 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   12eec:	48 89 c2             	mov    %rax,%rdx
   12eef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ef3:	48 89 d6             	mov    %rdx,%rsi
   12ef6:	48 89 c7             	mov    %rax,%rdi
   12ef9:	e8 82 19 00 00       	call   14880 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   12efe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12f02:	c9                   	leave
   12f03:	c3                   	ret

0000000000012f04 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12f04:	55                   	push   %rbp
   12f05:	48 89 e5             	mov    %rsp,%rbp
   12f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f10:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12f14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f18:	48 8b 00             	mov    (%rax),%rax
   12f1b:	48 29 c2             	sub    %rax,%rdx
   12f1e:	48 89 d0             	mov    %rdx,%rax
   12f21:	48 c1 f8 03          	sar    $0x3,%rax
   12f25:	5d                   	pop    %rbp
   12f26:	c3                   	ret
   12f27:	90                   	nop

0000000000012f28 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   12f28:	55                   	push   %rbp
   12f29:	48 89 e5             	mov    %rsp,%rbp
   12f2c:	48 83 ec 10          	sub    $0x10,%rsp
   12f30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   12f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f3c:	48 89 c7             	mov    %rax,%rdi
   12f3f:	e8 8c 04 00 00       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12f44:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12f48:	0f 92 c0             	setb   %al
   12f4b:	84 c0                	test   %al,%al
   12f4d:	74 24                	je     12f73 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   12f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f53:	48 89 c7             	mov    %rax,%rdi
   12f56:	e8 75 04 00 00       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12f5b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12f5f:	48 29 c2             	sub    %rax,%rdx
   12f62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f66:	48 89 d6             	mov    %rdx,%rsi
   12f69:	48 89 c7             	mov    %rax,%rdi
   12f6c:	e8 b1 19 00 00       	call   14922 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   12f71:	eb 38                	jmp    12fab <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   12f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f77:	48 89 c7             	mov    %rax,%rdi
   12f7a:	e8 51 04 00 00       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12f7f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   12f83:	0f 92 c0             	setb   %al
   12f86:	84 c0                	test   %al,%al
   12f88:	74 21                	je     12fab <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   12f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f8e:	48 8b 00             	mov    (%rax),%rax
   12f91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12f95:	48 c1 e2 03          	shl    $0x3,%rdx
   12f99:	48 01 c2             	add    %rax,%rdx
   12f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fa0:	48 89 d6             	mov    %rdx,%rsi
   12fa3:	48 89 c7             	mov    %rax,%rdi
   12fa6:	e8 81 1b 00 00       	call   14b2c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   12fab:	90                   	nop
   12fac:	c9                   	leave
   12fad:	c3                   	ret

0000000000012fae <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12fae:	55                   	push   %rbp
   12faf:	48 89 e5             	mov    %rsp,%rbp
   12fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12fb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   12fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fbe:	48 8b 00             	mov    (%rax),%rax
   12fc1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12fc5:	48 c1 e2 03          	shl    $0x3,%rdx
   12fc9:	48 01 d0             	add    %rdx,%rax
      }
   12fcc:	5d                   	pop    %rbp
   12fcd:	c3                   	ret

0000000000012fce <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12fce:	55                   	push   %rbp
   12fcf:	48 89 e5             	mov    %rsp,%rbp
   12fd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12fd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   12fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fde:	48 8b 00             	mov    (%rax),%rax
   12fe1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12fe5:	48 c1 e2 03          	shl    $0x3,%rdx
   12fe9:	48 01 d0             	add    %rdx,%rax
      }
   12fec:	5d                   	pop    %rbp
   12fed:	c3                   	ret

0000000000012fee <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>:
  PosVecType position;
  ColorVecType color;

  static constexpr size_t attributeCount = 2;

  static VkVertexInputBindingDescription getBindingDescription() {
   12fee:	55                   	push   %rbp
   12fef:	48 89 e5             	mov    %rsp,%rbp
    VkVertexInputBindingDescription bindingDescription{};
   12ff2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   12ff9:	00 
   12ffa:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    bindingDescription.binding = 0;
   13001:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    bindingDescription.stride = sizeof(Vertex);
   13008:	c7 45 ec 14 00 00 00 	movl   $0x14,-0x14(%rbp)
    bindingDescription.inputRate = VK_VERTEX_INPUT_RATE_VERTEX;
   1300f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    return bindingDescription;
   13016:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1301a:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   1301e:	8b 45 f0             	mov    -0x10(%rbp),%eax
   13021:	89 45 fc             	mov    %eax,-0x4(%rbp)
   13024:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   13028:	8b 4d fc             	mov    -0x4(%rbp),%ecx
   1302b:	48 89 ca             	mov    %rcx,%rdx
  }
   1302e:	5d                   	pop    %rbp
   1302f:	c3                   	ret

0000000000013030 <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>:

  static std::array<VkVertexInputAttributeDescription, attributeCount>
  getAttributeDescriptions() {
   13030:	55                   	push   %rbp
   13031:	48 89 e5             	mov    %rsp,%rbp
   13034:	48 83 ec 10          	sub    $0x10,%rsp
   13038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    std::array<VkVertexInputAttributeDescription, attributeCount>
        attributeDescriptions{};
   1303c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13040:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13044:	0f 11 00             	movups %xmm0,(%rax)
   13047:	0f 11 40 10          	movups %xmm0,0x10(%rax)

    attributeDescriptions[0].binding = 0;
   1304b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1304f:	be 00 00 00 00       	mov    $0x0,%esi
   13054:	48 89 c7             	mov    %rax,%rdi
   13057:	e8 30 1b 00 00       	call   14b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1305c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[0].location = 0;
   13063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13067:	be 00 00 00 00       	mov    $0x0,%esi
   1306c:	48 89 c7             	mov    %rax,%rdi
   1306f:	e8 18 1b 00 00       	call   14b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   13074:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
   1307a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1307e:	be 00 00 00 00       	mov    $0x0,%esi
   13083:	48 89 c7             	mov    %rax,%rdi
   13086:	e8 01 1b 00 00       	call   14b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1308b:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
    attributeDescriptions[0].offset = offsetof(Vertex, position);
   13092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13096:	be 00 00 00 00       	mov    $0x0,%esi
   1309b:	48 89 c7             	mov    %rax,%rdi
   1309e:	e8 e9 1a 00 00       	call   14b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   130a3:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)

    attributeDescriptions[1].binding = 0;
   130aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130ae:	be 01 00 00 00       	mov    $0x1,%esi
   130b3:	48 89 c7             	mov    %rax,%rdi
   130b6:	e8 d1 1a 00 00       	call   14b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   130bb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[1].location = 1;
   130c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130c6:	be 01 00 00 00       	mov    $0x1,%esi
   130cb:	48 89 c7             	mov    %rax,%rdi
   130ce:	e8 b9 1a 00 00       	call   14b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   130d3:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
   130d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130dd:	be 01 00 00 00       	mov    $0x1,%esi
   130e2:	48 89 c7             	mov    %rax,%rdi
   130e5:	e8 a2 1a 00 00       	call   14b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   130ea:	c7 40 08 6a 00 00 00 	movl   $0x6a,0x8(%rax)
    attributeDescriptions[1].offset = offsetof(Vertex, color);
   130f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130f5:	be 01 00 00 00       	mov    $0x1,%esi
   130fa:	48 89 c7             	mov    %rax,%rdi
   130fd:	e8 8a 1a 00 00       	call   14b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   13102:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)

    return attributeDescriptions;
   13109:	90                   	nop
  }
   1310a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1310e:	c9                   	leave
   1310f:	c3                   	ret

0000000000013110 <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>:
      size() const noexcept { return _Nm; }
   13110:	55                   	push   %rbp
   13111:	48 89 e5             	mov    %rsp,%rbp
   13114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13118:	b8 02 00 00 00       	mov    $0x2,%eax
   1311d:	5d                   	pop    %rbp
   1311e:	c3                   	ret
   1311f:	90                   	nop

0000000000013120 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   13120:	55                   	push   %rbp
   13121:	48 89 e5             	mov    %rsp,%rbp
   13124:	48 83 ec 10          	sub    $0x10,%rsp
   13128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1312c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13130:	48 89 c7             	mov    %rax,%rdi
   13133:	e8 7a 1a 00 00       	call   14bb2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   13138:	90                   	nop
   13139:	c9                   	leave
   1313a:	c3                   	ret
   1313b:	90                   	nop

000000000001313c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   1313c:	55                   	push   %rbp
   1313d:	48 89 e5             	mov    %rsp,%rbp
   13140:	48 83 ec 10          	sub    $0x10,%rsp
   13144:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1314c:	48 89 c7             	mov    %rax,%rdi
   1314f:	e8 6a 1a 00 00       	call   14bbe <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   13154:	90                   	nop
   13155:	c9                   	leave
   13156:	c3                   	ret
   13157:	90                   	nop

0000000000013158 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   13158:	55                   	push   %rbp
   13159:	48 89 e5             	mov    %rsp,%rbp
   1315c:	53                   	push   %rbx
   1315d:	48 83 ec 38          	sub    $0x38,%rsp
   13161:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13165:	48 89 f0             	mov    %rsi,%rax
   13168:	48 89 d6             	mov    %rdx,%rsi
   1316b:	48 89 f2             	mov    %rsi,%rdx
   1316e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   13172:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13176:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   1317a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1317e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13182:	48 89 d6             	mov    %rdx,%rsi
   13185:	48 89 c7             	mov    %rax,%rdi
   13188:	e8 59 1a 00 00       	call   14be6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   1318d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13191:	48 89 c7             	mov    %rax,%rdi
   13194:	e8 dd 1a 00 00       	call   14c76 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   13199:	48 89 c3             	mov    %rax,%rbx
   1319c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   131a0:	48 89 c7             	mov    %rax,%rdi
   131a3:	e8 bc 1a 00 00       	call   14c64 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   131a8:	48 89 c1             	mov    %rax,%rcx
   131ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   131af:	48 89 da             	mov    %rbx,%rdx
   131b2:	48 89 ce             	mov    %rcx,%rsi
   131b5:	48 89 c7             	mov    %rax,%rdi
   131b8:	e8 2d 1b 00 00       	call   14cea <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   131bd:	eb 1a                	jmp    131d9 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   131bf:	48 89 c3             	mov    %rax,%rbx
   131c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   131c6:	48 89 c7             	mov    %rax,%rdi
   131c9:	e8 3e 1a 00 00       	call   14c0c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   131ce:	48 89 d8             	mov    %rbx,%rax
   131d1:	48 89 c7             	mov    %rax,%rdi
   131d4:	e8 47 16 ff ff       	call   4820 <_Unwind_Resume@plt>
   131d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   131dd:	c9                   	leave
   131de:	c3                   	ret
   131df:	90                   	nop

00000000000131e0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   131e0:	55                   	push   %rbp
   131e1:	48 89 e5             	mov    %rsp,%rbp
   131e4:	48 83 ec 10          	sub    $0x10,%rsp
   131e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   131ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131f0:	48 89 c7             	mov    %rax,%rdi
   131f3:	e8 ac 1b 00 00       	call   14da4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   131f8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   131fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131ff:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13207:	48 8b 00             	mov    (%rax),%rax
   1320a:	48 89 ce             	mov    %rcx,%rsi
   1320d:	48 89 c7             	mov    %rax,%rdi
   13210:	e8 9d 1b 00 00       	call   14db2 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   13215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13219:	48 89 c7             	mov    %rax,%rdi
   1321c:	e8 eb 19 00 00       	call   14c0c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   13221:	90                   	nop
   13222:	c9                   	leave
   13223:	c3                   	ret

0000000000013224 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   13224:	55                   	push   %rbp
   13225:	48 89 e5             	mov    %rsp,%rbp
   13228:	48 83 ec 10          	sub    $0x10,%rsp
   1322c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13234:	48 89 c7             	mov    %rax,%rdi
   13237:	e8 ea 1b 00 00       	call   14e26 <_ZNSaIP12VkPipeline_TED1Ev>
   1323c:	90                   	nop
   1323d:	c9                   	leave
   1323e:	c3                   	ret

000000000001323f <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   1323f:	55                   	push   %rbp
   13240:	48 89 e5             	mov    %rsp,%rbp
   13243:	41 54                	push   %r12
   13245:	53                   	push   %rbx
   13246:	48 83 ec 40          	sub    $0x40,%rsp
   1324a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1324e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13252:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13256:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1325a:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   1325e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13262:	48 89 c7             	mov    %rax,%rdi
   13265:	e8 72 1b 00 00       	call   14ddc <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   1326a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   1326d:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   13270:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   13274:	48 89 c7             	mov    %rax,%rdi
   13277:	e8 8e 1b 00 00       	call   14e0a <_ZNSaIP12VkPipeline_TEC1Ev>
   1327c:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   13280:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13284:	48 89 de             	mov    %rbx,%rsi
   13287:	48 89 c7             	mov    %rax,%rdi
   1328a:	e8 b3 1b 00 00       	call   14e42 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   1328f:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   13293:	48 89 c7             	mov    %rax,%rdi
   13296:	e8 8b 1b 00 00       	call   14e26 <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   1329b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1329f:	48 89 c7             	mov    %rax,%rdi
   132a2:	e8 35 1c 00 00       	call   14edc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   132a7:	48 89 c3             	mov    %rax,%rbx
   132aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   132ae:	48 89 c7             	mov    %rax,%rdi
   132b1:	e8 02 1c 00 00       	call   14eb8 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   132b6:	48 89 c1             	mov    %rax,%rcx
   132b9:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   132bd:	8b 55 ec             	mov    -0x14(%rbp),%edx
   132c0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   132c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   132c8:	49 89 d9             	mov    %rbx,%r9
   132cb:	49 89 f8             	mov    %rdi,%r8
   132ce:	48 89 c7             	mov    %rax,%rdi
   132d1:	e8 ba 0e ff ff       	call   4190 <vkCreateGraphicsPipelines@plt>
   132d6:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   132d9:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   132dd:	74 7f                	je     1335e <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   132df:	bf 10 00 00 00       	mov    $0x10,%edi
   132e4:	e8 b7 0e ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   132e9:	48 89 c3             	mov    %rax,%rbx
   132ec:	48 8d 05 27 be 00 00 	lea    0xbe27(%rip),%rax        # 1f11a <_ZZN9VulkanApp6renderEvE11submitCount+0x2a2>
   132f3:	48 89 c6             	mov    %rax,%rsi
   132f6:	48 89 df             	mov    %rbx,%rdi
   132f9:	e8 22 0e ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
   132fe:	48 8b 05 a3 ac 01 00 	mov    0x1aca3(%rip),%rax        # 2dfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   13305:	48 89 c2             	mov    %rax,%rdx
   13308:	48 8d 05 31 aa 01 00 	lea    0x1aa31(%rip),%rax        # 2dd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1330f:	48 89 c6             	mov    %rax,%rsi
   13312:	48 89 df             	mov    %rbx,%rdi
   13315:	e8 a6 14 ff ff       	call   47c0 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   1331a:	48 89 c3             	mov    %rax,%rbx
   1331d:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   13321:	48 89 c7             	mov    %rax,%rdi
   13324:	e8 fd 1a 00 00       	call   14e26 <_ZNSaIP12VkPipeline_TED1Ev>
   13329:	48 89 d8             	mov    %rbx,%rax
   1332c:	48 89 c7             	mov    %rax,%rdi
   1332f:	e8 ec 14 ff ff       	call   4820 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   13334:	49 89 c4             	mov    %rax,%r12
   13337:	48 89 df             	mov    %rbx,%rdi
   1333a:	e8 71 0f ff ff       	call   42b0 <__cxa_free_exception@plt>
   1333f:	4c 89 e3             	mov    %r12,%rbx
   13342:	eb 03                	jmp    13347 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   13344:	48 89 c3             	mov    %rax,%rbx
   13347:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1334b:	48 89 c7             	mov    %rax,%rdi
   1334e:	e8 19 00 00 00       	call   1336c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   13353:	48 89 d8             	mov    %rbx,%rax
   13356:	48 89 c7             	mov    %rax,%rdi
   13359:	e8 c2 14 ff ff       	call   4820 <_Unwind_Resume@plt>
  return pipelines;
   1335e:	90                   	nop
}
   1335f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13363:	48 83 c4 40          	add    $0x40,%rsp
   13367:	5b                   	pop    %rbx
   13368:	41 5c                	pop    %r12
   1336a:	5d                   	pop    %rbp
   1336b:	c3                   	ret

000000000001336c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1336c:	55                   	push   %rbp
   1336d:	48 89 e5             	mov    %rsp,%rbp
   13370:	48 83 ec 10          	sub    $0x10,%rsp
   13374:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1337c:	48 89 c7             	mov    %rax,%rdi
   1337f:	e8 ca 1b 00 00       	call   14f4e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13384:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1338b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1338f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13393:	48 8b 00             	mov    (%rax),%rax
   13396:	48 89 ce             	mov    %rcx,%rsi
   13399:	48 89 c7             	mov    %rax,%rdi
   1339c:	e8 bb 1b 00 00       	call   14f5c <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   133a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133a5:	48 89 c7             	mov    %rax,%rdi
   133a8:	e8 53 1b 00 00       	call   14f00 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   133ad:	90                   	nop
   133ae:	c9                   	leave
   133af:	c3                   	ret

00000000000133b0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   133b0:	55                   	push   %rbp
   133b1:	48 89 e5             	mov    %rsp,%rbp
   133b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   133bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133c0:	48 8b 00             	mov    (%rax),%rax
   133c3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   133c7:	48 c1 e2 03          	shl    $0x3,%rdx
   133cb:	48 01 d0             	add    %rdx,%rax
      }
   133ce:	5d                   	pop    %rbp
   133cf:	c3                   	ret

00000000000133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   133d0:	55                   	push   %rbp
   133d1:	48 89 e5             	mov    %rsp,%rbp
   133d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   133d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133dc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   133e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133e4:	48 8b 00             	mov    (%rax),%rax
   133e7:	48 29 c2             	sub    %rax,%rdx
   133ea:	48 89 d0             	mov    %rdx,%rax
   133ed:	48 c1 f8 03          	sar    $0x3,%rax
   133f1:	5d                   	pop    %rbp
   133f2:	c3                   	ret
   133f3:	90                   	nop

00000000000133f4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   133f4:	55                   	push   %rbp
   133f5:	48 89 e5             	mov    %rsp,%rbp
   133f8:	48 83 ec 10          	sub    $0x10,%rsp
   133fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13400:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   13404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13408:	48 89 c7             	mov    %rax,%rdi
   1340b:	e8 76 1b 00 00       	call   14f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   13410:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13414:	0f 92 c0             	setb   %al
   13417:	84 c0                	test   %al,%al
   13419:	74 24                	je     1343f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   1341b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1341f:	48 89 c7             	mov    %rax,%rdi
   13422:	e8 5f 1b 00 00       	call   14f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   13427:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1342b:	48 29 c2             	sub    %rax,%rdx
   1342e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13432:	48 89 d6             	mov    %rdx,%rsi
   13435:	48 89 c7             	mov    %rax,%rdi
   13438:	e8 6d 1b 00 00       	call   14faa <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   1343d:	eb 38                	jmp    13477 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   1343f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13443:	48 89 c7             	mov    %rax,%rdi
   13446:	e8 3b 1b 00 00       	call   14f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1344b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1344f:	0f 92 c0             	setb   %al
   13452:	84 c0                	test   %al,%al
   13454:	74 21                	je     13477 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   13456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1345a:	48 8b 00             	mov    (%rax),%rax
   1345d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13461:	48 c1 e2 03          	shl    $0x3,%rdx
   13465:	48 01 c2             	add    %rax,%rdx
   13468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1346c:	48 89 d6             	mov    %rdx,%rsi
   1346f:	48 89 c7             	mov    %rax,%rdi
   13472:	e8 3d 1d 00 00       	call   151b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   13477:	90                   	nop
   13478:	c9                   	leave
   13479:	c3                   	ret

000000000001347a <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1347a:	55                   	push   %rbp
   1347b:	48 89 e5             	mov    %rsp,%rbp
   1347e:	48 83 ec 10          	sub    $0x10,%rsp
   13482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1348a:	48 89 c7             	mov    %rax,%rdi
   1348d:	e8 82 1d 00 00       	call   15214 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   13492:	90                   	nop
   13493:	c9                   	leave
   13494:	c3                   	ret
   13495:	90                   	nop

0000000000013496 <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13496:	55                   	push   %rbp
   13497:	48 89 e5             	mov    %rsp,%rbp
   1349a:	48 83 ec 10          	sub    $0x10,%rsp
   1349e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134a6:	48 89 c7             	mov    %rax,%rdi
   134a9:	e8 72 1d 00 00       	call   15220 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   134ae:	90                   	nop
   134af:	c9                   	leave
   134b0:	c3                   	ret
   134b1:	90                   	nop

00000000000134b2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   134b2:	55                   	push   %rbp
   134b3:	48 89 e5             	mov    %rsp,%rbp
   134b6:	53                   	push   %rbx
   134b7:	48 83 ec 38          	sub    $0x38,%rsp
   134bb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   134bf:	48 89 f0             	mov    %rsi,%rax
   134c2:	48 89 d6             	mov    %rdx,%rsi
   134c5:	48 89 f2             	mov    %rsi,%rdx
   134c8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   134cc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   134d0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   134d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   134d8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   134dc:	48 89 d6             	mov    %rdx,%rsi
   134df:	48 89 c7             	mov    %rax,%rdi
   134e2:	e8 45 1d 00 00       	call   1522c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   134e7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   134eb:	48 89 c7             	mov    %rax,%rdi
   134ee:	e8 71 1d 00 00       	call   15264 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   134f3:	48 89 c3             	mov    %rax,%rbx
   134f6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   134fa:	48 89 c7             	mov    %rax,%rdi
   134fd:	e8 50 1d 00 00       	call   15252 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   13502:	48 89 c1             	mov    %rax,%rcx
   13505:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13509:	48 89 da             	mov    %rbx,%rdx
   1350c:	48 89 ce             	mov    %rcx,%rsi
   1350f:	48 89 c7             	mov    %rax,%rdi
   13512:	e8 b3 1d 00 00       	call   152ca <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   13517:	eb 1a                	jmp    13533 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   13519:	48 89 c3             	mov    %rax,%rbx
   1351c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13520:	48 89 c7             	mov    %rax,%rdi
   13523:	e8 80 06 00 00       	call   13ba8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   13528:	48 89 d8             	mov    %rbx,%rax
   1352b:	48 89 c7             	mov    %rax,%rdi
   1352e:	e8 ed 12 ff ff       	call   4820 <_Unwind_Resume@plt>
   13533:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13537:	c9                   	leave
   13538:	c3                   	ret
   13539:	90                   	nop

000000000001353a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1353a:	55                   	push   %rbp
   1353b:	48 89 e5             	mov    %rsp,%rbp
   1353e:	48 83 ec 10          	sub    $0x10,%rsp
   13542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1354a:	48 89 c7             	mov    %rax,%rdi
   1354d:	e8 28 1e 00 00       	call   1537a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13552:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13559:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1355d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13561:	48 8b 00             	mov    (%rax),%rax
   13564:	48 89 ce             	mov    %rcx,%rsi
   13567:	48 89 c7             	mov    %rax,%rdi
   1356a:	e8 19 1e 00 00       	call   15388 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   1356f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13573:	48 89 c7             	mov    %rax,%rdi
   13576:	e8 2d 06 00 00       	call   13ba8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   1357b:	90                   	nop
   1357c:	c9                   	leave
   1357d:	c3                   	ret

000000000001357e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1357e:	55                   	push   %rbp
   1357f:	48 89 e5             	mov    %rsp,%rbp
   13582:	48 83 ec 10          	sub    $0x10,%rsp
   13586:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1358a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1358e:	48 8b 10             	mov    (%rax),%rdx
   13591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13595:	48 89 d6             	mov    %rdx,%rsi
   13598:	48 89 c7             	mov    %rax,%rdi
   1359b:	e8 12 1e 00 00       	call   153b2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   135a0:	c9                   	leave
   135a1:	c3                   	ret

00000000000135a2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   135a2:	55                   	push   %rbp
   135a3:	48 89 e5             	mov    %rsp,%rbp
   135a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   135ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135b2:	48 8b 00             	mov    (%rax),%rax
   135b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135b9:	48 c1 e2 03          	shl    $0x3,%rdx
   135bd:	48 01 d0             	add    %rdx,%rax
      }
   135c0:	5d                   	pop    %rbp
   135c1:	c3                   	ret

00000000000135c2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   135c2:	55                   	push   %rbp
   135c3:	48 89 e5             	mov    %rsp,%rbp
   135c6:	48 83 ec 20          	sub    $0x20,%rsp
   135ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   135ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   135d2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   135d6:	48 89 d6             	mov    %rdx,%rsi
   135d9:	48 89 c7             	mov    %rax,%rdi
   135dc:	e8 e3 1d 00 00       	call   153c4 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   135e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135e5:	c9                   	leave
   135e6:	c3                   	ret
   135e7:	90                   	nop

00000000000135e8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   135e8:	55                   	push   %rbp
   135e9:	48 89 e5             	mov    %rsp,%rbp
   135ec:	48 83 ec 20          	sub    $0x20,%rsp
   135f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   135f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135f8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   135fc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13600:	48 89 d6             	mov    %rdx,%rsi
   13603:	48 89 c7             	mov    %rax,%rdi
   13606:	e8 b9 1d 00 00       	call   153c4 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1360b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1360f:	c9                   	leave
   13610:	c3                   	ret

0000000000013611 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13611:	55                   	push   %rbp
   13612:	48 89 e5             	mov    %rsp,%rbp
   13615:	53                   	push   %rbx
   13616:	48 83 ec 18          	sub    $0x18,%rsp
   1361a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1361e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13622:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13626:	48 89 c7             	mov    %rax,%rdi
   13629:	e8 b4 1d 00 00       	call   153e2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1362e:	48 8b 18             	mov    (%rax),%rbx
   13631:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13635:	48 89 c7             	mov    %rax,%rdi
   13638:	e8 a5 1d 00 00       	call   153e2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1363d:	48 8b 00             	mov    (%rax),%rax
   13640:	48 39 c3             	cmp    %rax,%rbx
   13643:	0f 95 c0             	setne  %al
   13646:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1364a:	c9                   	leave
   1364b:	c3                   	ret

000000000001364c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1364c:	55                   	push   %rbp
   1364d:	48 89 e5             	mov    %rsp,%rbp
   13650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13658:	48 8b 00             	mov    (%rax),%rax
   1365b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1365f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13663:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1366a:	5d                   	pop    %rbp
   1366b:	c3                   	ret

000000000001366c <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1366c:	55                   	push   %rbp
   1366d:	48 89 e5             	mov    %rsp,%rbp
   13670:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13678:	48 8b 00             	mov    (%rax),%rax
   1367b:	5d                   	pop    %rbp
   1367c:	c3                   	ret
   1367d:	90                   	nop

000000000001367e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1367e:	55                   	push   %rbp
   1367f:	48 89 e5             	mov    %rsp,%rbp
   13682:	48 83 ec 20          	sub    $0x20,%rsp
   13686:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1368a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1368e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13692:	48 89 d6             	mov    %rdx,%rsi
   13695:	48 89 c7             	mov    %rax,%rdi
   13698:	e8 53 1d 00 00       	call   153f0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1369d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136a1:	c9                   	leave
   136a2:	c3                   	ret
   136a3:	90                   	nop

00000000000136a4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   136a4:	55                   	push   %rbp
   136a5:	48 89 e5             	mov    %rsp,%rbp
   136a8:	48 83 ec 20          	sub    $0x20,%rsp
   136ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   136b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136b4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   136b8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   136bc:	48 89 d6             	mov    %rdx,%rsi
   136bf:	48 89 c7             	mov    %rax,%rdi
   136c2:	e8 29 1d 00 00       	call   153f0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   136c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136cb:	c9                   	leave
   136cc:	c3                   	ret

00000000000136cd <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   136cd:	55                   	push   %rbp
   136ce:	48 89 e5             	mov    %rsp,%rbp
   136d1:	53                   	push   %rbx
   136d2:	48 83 ec 18          	sub    $0x18,%rsp
   136d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   136da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   136de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136e2:	48 89 c7             	mov    %rax,%rdi
   136e5:	e8 24 1d 00 00       	call   1540e <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   136ea:	48 8b 18             	mov    (%rax),%rbx
   136ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   136f1:	48 89 c7             	mov    %rax,%rdi
   136f4:	e8 15 1d 00 00       	call   1540e <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   136f9:	48 8b 00             	mov    (%rax),%rax
   136fc:	48 39 c3             	cmp    %rax,%rbx
   136ff:	0f 95 c0             	setne  %al
   13702:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13706:	c9                   	leave
   13707:	c3                   	ret

0000000000013708 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13708:	55                   	push   %rbp
   13709:	48 89 e5             	mov    %rsp,%rbp
   1370c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13714:	48 8b 00             	mov    (%rax),%rax
   13717:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1371b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1371f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13726:	5d                   	pop    %rbp
   13727:	c3                   	ret

0000000000013728 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13728:	55                   	push   %rbp
   13729:	48 89 e5             	mov    %rsp,%rbp
   1372c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13734:	48 8b 00             	mov    (%rax),%rax
   13737:	5d                   	pop    %rbp
   13738:	c3                   	ret
   13739:	90                   	nop

000000000001373a <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1373a:	55                   	push   %rbp
   1373b:	48 89 e5             	mov    %rsp,%rbp
   1373e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13746:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1374a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1374e:	48 8b 00             	mov    (%rax),%rax
   13751:	48 29 c2             	sub    %rax,%rdx
   13754:	48 c1 fa 02          	sar    $0x2,%rdx
   13758:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   1375f:	cc cc cc 
   13762:	48 0f af c2          	imul   %rdx,%rax
   13766:	5d                   	pop    %rbp
   13767:	c3                   	ret

0000000000013768 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   13768:	55                   	push   %rbp
   13769:	48 89 e5             	mov    %rsp,%rbp
   1376c:	48 83 ec 20          	sub    $0x20,%rsp
   13770:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13774:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   13778:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   1377c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13780:	48 89 c7             	mov    %rax,%rdi
   13783:	e8 94 1c 00 00       	call   1541c <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   13788:	48 89 c2             	mov    %rax,%rdx
   1378b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1378f:	48 89 d6             	mov    %rdx,%rsi
   13792:	48 89 c7             	mov    %rax,%rdi
   13795:	e8 90 1c 00 00       	call   1542a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   1379a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1379e:	c9                   	leave
   1379f:	c3                   	ret

00000000000137a0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   137a0:	55                   	push   %rbp
   137a1:	48 89 e5             	mov    %rsp,%rbp
   137a4:	48 83 ec 10          	sub    $0x10,%rsp
   137a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   137b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137b4:	48 89 c7             	mov    %rax,%rdi
   137b7:	e8 58 03 00 00       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   137bc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   137c0:	0f 92 c0             	setb   %al
   137c3:	84 c0                	test   %al,%al
   137c5:	74 24                	je     137eb <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   137c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137cb:	48 89 c7             	mov    %rax,%rdi
   137ce:	e8 41 03 00 00       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   137d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   137d7:	48 29 c2             	sub    %rax,%rdx
   137da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137de:	48 89 d6             	mov    %rdx,%rsi
   137e1:	48 89 c7             	mov    %rax,%rdi
   137e4:	e8 e3 1c 00 00       	call   154cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
      }
   137e9:	eb 38                	jmp    13823 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   137eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137ef:	48 89 c7             	mov    %rax,%rdi
   137f2:	e8 1d 03 00 00       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   137f7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   137fb:	0f 92 c0             	setb   %al
   137fe:	84 c0                	test   %al,%al
   13800:	74 21                	je     13823 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   13802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13806:	48 8b 00             	mov    (%rax),%rax
   13809:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1380d:	48 c1 e2 03          	shl    $0x3,%rdx
   13811:	48 01 c2             	add    %rax,%rdx
   13814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13818:	48 89 d6             	mov    %rdx,%rsi
   1381b:	48 89 c7             	mov    %rax,%rdi
   1381e:	e8 b3 1e 00 00       	call   156d6 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   13823:	90                   	nop
   13824:	c9                   	leave
   13825:	c3                   	ret

0000000000013826 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   13826:	55                   	push   %rbp
   13827:	48 89 e5             	mov    %rsp,%rbp
   1382a:	48 83 ec 10          	sub    $0x10,%rsp
   1382e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13832:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   13836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1383a:	48 89 c7             	mov    %rax,%rdi
   1383d:	e8 f4 1e 00 00       	call   15736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   13842:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13846:	0f 92 c0             	setb   %al
   13849:	84 c0                	test   %al,%al
   1384b:	74 24                	je     13871 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   1384d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13851:	48 89 c7             	mov    %rax,%rdi
   13854:	e8 dd 1e 00 00       	call   15736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   13859:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1385d:	48 29 c2             	sub    %rax,%rdx
   13860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13864:	48 89 d6             	mov    %rdx,%rsi
   13867:	48 89 c7             	mov    %rax,%rdi
   1386a:	e8 eb 1e 00 00       	call   1575a <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
      }
   1386f:	eb 38                	jmp    138a9 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   13871:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13875:	48 89 c7             	mov    %rax,%rdi
   13878:	e8 b9 1e 00 00       	call   15736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   1387d:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   13881:	0f 92 c0             	setb   %al
   13884:	84 c0                	test   %al,%al
   13886:	74 21                	je     138a9 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   13888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1388c:	48 8b 00             	mov    (%rax),%rax
   1388f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13893:	48 c1 e2 03          	shl    $0x3,%rdx
   13897:	48 01 c2             	add    %rax,%rdx
   1389a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1389e:	48 89 d6             	mov    %rdx,%rsi
   138a1:	48 89 c7             	mov    %rax,%rdi
   138a4:	e8 bb 20 00 00       	call   15964 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   138a9:	90                   	nop
   138aa:	c9                   	leave
   138ab:	c3                   	ret

00000000000138ac <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   138ac:	55                   	push   %rbp
   138ad:	48 89 e5             	mov    %rsp,%rbp
   138b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   138b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138bc:	48 8b 00             	mov    (%rax),%rax
   138bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   138c3:	48 c1 e2 03          	shl    $0x3,%rdx
   138c7:	48 01 d0             	add    %rdx,%rax
      }
   138ca:	5d                   	pop    %rbp
   138cb:	c3                   	ret

00000000000138cc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   138cc:	55                   	push   %rbp
   138cd:	48 89 e5             	mov    %rsp,%rbp
   138d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   138d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138dc:	48 8b 00             	mov    (%rax),%rax
   138df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   138e3:	48 c1 e2 03          	shl    $0x3,%rdx
   138e7:	48 01 d0             	add    %rdx,%rax
      }
   138ea:	5d                   	pop    %rbp
   138eb:	c3                   	ret

00000000000138ec <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   138ec:	55                   	push   %rbp
   138ed:	48 89 e5             	mov    %rsp,%rbp
   138f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   138f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138fc:	48 8b 00             	mov    (%rax),%rax
   138ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13903:	48 c1 e2 03          	shl    $0x3,%rdx
   13907:	48 01 d0             	add    %rdx,%rax
      }
   1390a:	5d                   	pop    %rbp
   1390b:	c3                   	ret

000000000001390c <_ZNSaIP13VkSemaphore_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1390c:	55                   	push   %rbp
   1390d:	48 89 e5             	mov    %rsp,%rbp
   13910:	48 83 ec 10          	sub    $0x10,%rsp
   13914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1391c:	48 89 c7             	mov    %rax,%rdi
   1391f:	e8 a0 20 00 00       	call   159c4 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>
   13924:	90                   	nop
   13925:	c9                   	leave
   13926:	c3                   	ret
   13927:	90                   	nop

0000000000013928 <_ZNSaIP13VkSemaphore_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13928:	55                   	push   %rbp
   13929:	48 89 e5             	mov    %rsp,%rbp
   1392c:	48 83 ec 10          	sub    $0x10,%rsp
   13930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13938:	48 89 c7             	mov    %rax,%rdi
   1393b:	e8 90 20 00 00       	call   159d0 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
   13940:	90                   	nop
   13941:	c9                   	leave
   13942:	c3                   	ret
   13943:	90                   	nop

0000000000013944 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   13944:	55                   	push   %rbp
   13945:	48 89 e5             	mov    %rsp,%rbp
   13948:	53                   	push   %rbx
   13949:	48 83 ec 38          	sub    $0x38,%rsp
   1394d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13951:	48 89 f0             	mov    %rsi,%rax
   13954:	48 89 d6             	mov    %rdx,%rsi
   13957:	48 89 f2             	mov    %rsi,%rdx
   1395a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1395e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13962:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   13966:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1396a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1396e:	48 89 d6             	mov    %rdx,%rsi
   13971:	48 89 c7             	mov    %rax,%rdi
   13974:	e8 63 20 00 00       	call   159dc <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   13979:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1397d:	48 89 c7             	mov    %rax,%rdi
   13980:	e8 8f 20 00 00       	call   15a14 <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>
   13985:	48 89 c3             	mov    %rax,%rbx
   13988:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1398c:	48 89 c7             	mov    %rax,%rdi
   1398f:	e8 6e 20 00 00       	call   15a02 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   13994:	48 89 c1             	mov    %rax,%rcx
   13997:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1399b:	48 89 da             	mov    %rbx,%rdx
   1399e:	48 89 ce             	mov    %rcx,%rsi
   139a1:	48 89 c7             	mov    %rax,%rdi
   139a4:	e8 d1 20 00 00       	call   15a7a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   139a9:	eb 1a                	jmp    139c5 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   139ab:	48 89 c3             	mov    %rax,%rbx
   139ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   139b2:	48 89 c7             	mov    %rax,%rdi
   139b5:	e8 8a 03 00 00       	call   13d44 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   139ba:	48 89 d8             	mov    %rbx,%rax
   139bd:	48 89 c7             	mov    %rax,%rdi
   139c0:	e8 5b 0e ff ff       	call   4820 <_Unwind_Resume@plt>
   139c5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   139c9:	c9                   	leave
   139ca:	c3                   	ret
   139cb:	90                   	nop

00000000000139cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   139cc:	55                   	push   %rbp
   139cd:	48 89 e5             	mov    %rsp,%rbp
   139d0:	48 83 ec 10          	sub    $0x10,%rsp
   139d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   139d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139dc:	48 89 c7             	mov    %rax,%rdi
   139df:	e8 46 21 00 00       	call   15b2a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   139e4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   139e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139eb:	48 8b 48 08          	mov    0x8(%rax),%rcx
   139ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139f3:	48 8b 00             	mov    (%rax),%rax
   139f6:	48 89 ce             	mov    %rcx,%rsi
   139f9:	48 89 c7             	mov    %rax,%rdi
   139fc:	e8 37 21 00 00       	call   15b38 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
   13a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a05:	48 89 c7             	mov    %rax,%rdi
   13a08:	e8 37 03 00 00       	call   13d44 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   13a0d:	90                   	nop
   13a0e:	c9                   	leave
   13a0f:	c3                   	ret

0000000000013a10 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   13a10:	55                   	push   %rbp
   13a11:	48 89 e5             	mov    %rsp,%rbp
   13a14:	48 83 ec 10          	sub    $0x10,%rsp
   13a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a20:	48 89 c7             	mov    %rax,%rdi
   13a23:	e8 3a 21 00 00       	call   15b62 <_ZNSt15__new_allocatorIjEC1Ev>
   13a28:	90                   	nop
   13a29:	c9                   	leave
   13a2a:	c3                   	ret
   13a2b:	90                   	nop

0000000000013a2c <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13a2c:	55                   	push   %rbp
   13a2d:	48 89 e5             	mov    %rsp,%rbp
   13a30:	48 83 ec 10          	sub    $0x10,%rsp
   13a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a3c:	48 89 c7             	mov    %rax,%rdi
   13a3f:	e8 2a 21 00 00       	call   15b6e <_ZNSt15__new_allocatorIjED1Ev>
   13a44:	90                   	nop
   13a45:	c9                   	leave
   13a46:	c3                   	ret
   13a47:	90                   	nop

0000000000013a48 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>:
      vector(initializer_list<value_type> __l,
   13a48:	55                   	push   %rbp
   13a49:	48 89 e5             	mov    %rsp,%rbp
   13a4c:	53                   	push   %rbx
   13a4d:	48 83 ec 38          	sub    $0x38,%rsp
   13a51:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13a55:	48 89 f0             	mov    %rsi,%rax
   13a58:	48 89 d6             	mov    %rdx,%rsi
   13a5b:	48 89 f2             	mov    %rsi,%rdx
   13a5e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   13a62:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13a66:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   13a6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13a6e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13a72:	48 89 d6             	mov    %rdx,%rsi
   13a75:	48 89 c7             	mov    %rax,%rdi
   13a78:	e8 19 21 00 00       	call   15b96 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>
	_M_range_initialize(__l.begin(), __l.end(),
   13a7d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13a81:	48 89 c7             	mov    %rax,%rdi
   13a84:	e8 93 21 00 00       	call   15c1c <_ZNKSt16initializer_listIjE3endEv>
   13a89:	48 89 c3             	mov    %rax,%rbx
   13a8c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13a90:	48 89 c7             	mov    %rax,%rdi
   13a93:	e8 72 21 00 00       	call   15c0a <_ZNKSt16initializer_listIjE5beginEv>
   13a98:	48 89 c1             	mov    %rax,%rcx
   13a9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13a9f:	48 89 da             	mov    %rbx,%rdx
   13aa2:	48 89 ce             	mov    %rcx,%rsi
   13aa5:	48 89 c7             	mov    %rax,%rdi
   13aa8:	e8 d5 21 00 00       	call   15c82 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>
      }
   13aad:	eb 1a                	jmp    13ac9 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_+0x81>
   13aaf:	48 89 c3             	mov    %rax,%rbx
   13ab2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13ab6:	48 89 c7             	mov    %rax,%rdi
   13ab9:	e8 fe 20 00 00       	call   15bbc <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   13abe:	48 89 d8             	mov    %rbx,%rax
   13ac1:	48 89 c7             	mov    %rax,%rdi
   13ac4:	e8 57 0d ff ff       	call   4820 <_Unwind_Resume@plt>
   13ac9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13acd:	c9                   	leave
   13ace:	c3                   	ret
   13acf:	90                   	nop

0000000000013ad0 <_ZNSt6vectorIjSaIjEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13ad0:	55                   	push   %rbp
   13ad1:	48 89 e5             	mov    %rsp,%rbp
   13ad4:	48 83 ec 10          	sub    $0x10,%rsp
   13ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ae0:	48 89 c7             	mov    %rax,%rdi
   13ae3:	e8 4a 22 00 00       	call   15d32 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   13ae8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13aeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aef:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13af7:	48 8b 00             	mov    (%rax),%rax
   13afa:	48 89 ce             	mov    %rcx,%rsi
   13afd:	48 89 c7             	mov    %rax,%rdi
   13b00:	e8 3b 22 00 00       	call   15d40 <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>
      }
   13b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b09:	48 89 c7             	mov    %rax,%rdi
   13b0c:	e8 ab 20 00 00       	call   15bbc <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   13b11:	90                   	nop
   13b12:	c9                   	leave
   13b13:	c3                   	ret

0000000000013b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13b14:	55                   	push   %rbp
   13b15:	48 89 e5             	mov    %rsp,%rbp
   13b18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13b1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b20:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13b24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b28:	48 8b 00             	mov    (%rax),%rax
   13b2b:	48 29 c2             	sub    %rax,%rdx
   13b2e:	48 89 d0             	mov    %rdx,%rax
   13b31:	48 c1 f8 03          	sar    $0x3,%rax
   13b35:	5d                   	pop    %rbp
   13b36:	c3                   	ret
   13b37:	90                   	nop

0000000000013b38 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   13b38:	55                   	push   %rbp
   13b39:	48 89 e5             	mov    %rsp,%rbp
   13b3c:	48 83 ec 10          	sub    $0x10,%rsp
   13b40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b48:	48 8b 10             	mov    (%rax),%rdx
   13b4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b4f:	48 89 d6             	mov    %rdx,%rsi
   13b52:	48 89 c7             	mov    %rax,%rdi
   13b55:	e8 10 22 00 00       	call   15d6a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   13b5a:	c9                   	leave
   13b5b:	c3                   	ret

0000000000013b5c <_ZNSt6vectorIjSaIjEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   13b5c:	55                   	push   %rbp
   13b5d:	48 89 e5             	mov    %rsp,%rbp
   13b60:	48 83 ec 10          	sub    $0x10,%rsp
   13b64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b6c:	48 8b 10             	mov    (%rax),%rdx
   13b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b73:	48 89 d6             	mov    %rdx,%rsi
   13b76:	48 89 c7             	mov    %rax,%rdi
   13b79:	e8 fe 21 00 00       	call   15d7c <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>
   13b7e:	c9                   	leave
   13b7f:	c3                   	ret

0000000000013b80 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   13b80:	55                   	push   %rbp
   13b81:	48 89 e5             	mov    %rsp,%rbp
   13b84:	48 83 ec 10          	sub    $0x10,%rsp
   13b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   13b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b90:	48 89 c7             	mov    %rax,%rdi
   13b93:	e8 e2 f8 ff ff       	call   1347a <_ZNSaIP13VkImageView_TEC1Ev>
   13b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b9c:	48 89 c7             	mov    %rax,%rdi
   13b9f:	e8 ea 21 00 00       	call   15d8e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   13ba4:	90                   	nop
   13ba5:	c9                   	leave
   13ba6:	c3                   	ret
   13ba7:	90                   	nop

0000000000013ba8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   13ba8:	55                   	push   %rbp
   13ba9:	48 89 e5             	mov    %rsp,%rbp
   13bac:	48 83 ec 10          	sub    $0x10,%rsp
   13bb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   13bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bb8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bc0:	48 8b 00             	mov    (%rax),%rax
   13bc3:	48 29 c2             	sub    %rax,%rdx
   13bc6:	48 89 d0             	mov    %rdx,%rax
   13bc9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   13bcd:	48 89 c2             	mov    %rax,%rdx
   13bd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bd4:	48 8b 08             	mov    (%rax),%rcx
   13bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bdb:	48 89 ce             	mov    %rcx,%rsi
   13bde:	48 89 c7             	mov    %rax,%rdi
   13be1:	e8 d6 21 00 00       	call   15dbc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   13be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bea:	48 89 c7             	mov    %rax,%rdi
   13bed:	e8 50 e7 ff ff       	call   12342 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   13bf2:	90                   	nop
   13bf3:	c9                   	leave
   13bf4:	c3                   	ret
   13bf5:	90                   	nop

0000000000013bf6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   13bf6:	55                   	push   %rbp
   13bf7:	48 89 e5             	mov    %rsp,%rbp
   13bfa:	48 83 ec 10          	sub    $0x10,%rsp
   13bfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   13c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c06:	48 89 c7             	mov    %rax,%rdi
   13c09:	e8 b6 5b ff ff       	call   97c4 <_ZNSaIP9VkImage_TEC1Ev>
   13c0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c12:	48 89 c7             	mov    %rax,%rdi
   13c15:	e8 46 81 ff ff       	call   bd60 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   13c1a:	90                   	nop
   13c1b:	c9                   	leave
   13c1c:	c3                   	ret
   13c1d:	90                   	nop

0000000000013c1e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   13c1e:	55                   	push   %rbp
   13c1f:	48 89 e5             	mov    %rsp,%rbp
   13c22:	48 83 ec 10          	sub    $0x10,%rsp
   13c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   13c2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c2e:	48 89 c7             	mov    %rax,%rdi
   13c31:	e8 bc 21 00 00       	call   15df2 <_ZNSaIP15VkFramebuffer_TEC1Ev>
   13c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c3a:	48 89 c7             	mov    %rax,%rdi
   13c3d:	e8 cc 21 00 00       	call   15e0e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   13c42:	90                   	nop
   13c43:	c9                   	leave
   13c44:	c3                   	ret
   13c45:	90                   	nop

0000000000013c46 <_ZNSaIP15VkFramebuffer_TED1Ev>:
   13c46:	55                   	push   %rbp
   13c47:	48 89 e5             	mov    %rsp,%rbp
   13c4a:	48 83 ec 10          	sub    $0x10,%rsp
   13c4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c56:	48 89 c7             	mov    %rax,%rdi
   13c59:	e8 de 21 00 00       	call   15e3c <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   13c5e:	90                   	nop
   13c5f:	c9                   	leave
   13c60:	c3                   	ret
   13c61:	90                   	nop

0000000000013c62 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   13c62:	55                   	push   %rbp
   13c63:	48 89 e5             	mov    %rsp,%rbp
   13c66:	48 83 ec 10          	sub    $0x10,%rsp
   13c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   13c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c72:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c7a:	48 8b 00             	mov    (%rax),%rax
   13c7d:	48 29 c2             	sub    %rax,%rdx
   13c80:	48 89 d0             	mov    %rdx,%rax
   13c83:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   13c87:	48 89 c2             	mov    %rax,%rdx
   13c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c8e:	48 8b 08             	mov    (%rax),%rcx
   13c91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c95:	48 89 ce             	mov    %rcx,%rsi
   13c98:	48 89 c7             	mov    %rax,%rdi
   13c9b:	e8 a8 21 00 00       	call   15e48 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   13ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ca4:	48 89 c7             	mov    %rax,%rdi
   13ca7:	e8 5c e7 ff ff       	call   12408 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   13cac:	90                   	nop
   13cad:	c9                   	leave
   13cae:	c3                   	ret
   13caf:	90                   	nop

0000000000013cb0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13cb0:	55                   	push   %rbp
   13cb1:	48 89 e5             	mov    %rsp,%rbp
   13cb4:	48 83 ec 10          	sub    $0x10,%rsp
   13cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cc0:	48 89 c7             	mov    %rax,%rdi
   13cc3:	e8 b6 21 00 00       	call   15e7e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13cc8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ccf:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13cd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cd7:	48 8b 00             	mov    (%rax),%rax
   13cda:	48 89 ce             	mov    %rcx,%rsi
   13cdd:	48 89 c7             	mov    %rax,%rdi
   13ce0:	e8 a7 21 00 00       	call   15e8c <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   13ce5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ce9:	48 89 c7             	mov    %rax,%rdi
   13cec:	e8 71 ff ff ff       	call   13c62 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   13cf1:	90                   	nop
   13cf2:	c9                   	leave
   13cf3:	c3                   	ret

0000000000013cf4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   13cf4:	55                   	push   %rbp
   13cf5:	48 89 e5             	mov    %rsp,%rbp
   13cf8:	48 83 ec 10          	sub    $0x10,%rsp
   13cfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   13d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d04:	48 89 c7             	mov    %rax,%rdi
   13d07:	e8 40 1e ff ff       	call   5b4c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
   13d0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d10:	48 89 c7             	mov    %rax,%rdi
   13d13:	e8 c6 22 ff ff       	call   5fde <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   13d18:	90                   	nop
   13d19:	c9                   	leave
   13d1a:	c3                   	ret
   13d1b:	90                   	nop

0000000000013d1c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   13d1c:	55                   	push   %rbp
   13d1d:	48 89 e5             	mov    %rsp,%rbp
   13d20:	48 83 ec 10          	sub    $0x10,%rsp
   13d24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   13d28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d2c:	48 89 c7             	mov    %rax,%rdi
   13d2f:	e8 d8 fb ff ff       	call   1390c <_ZNSaIP13VkSemaphore_TEC1Ev>
   13d34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d38:	48 89 c7             	mov    %rax,%rdi
   13d3b:	e8 76 21 00 00       	call   15eb6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   13d40:	90                   	nop
   13d41:	c9                   	leave
   13d42:	c3                   	ret
   13d43:	90                   	nop

0000000000013d44 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   13d44:	55                   	push   %rbp
   13d45:	48 89 e5             	mov    %rsp,%rbp
   13d48:	48 83 ec 10          	sub    $0x10,%rsp
   13d4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   13d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d54:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d5c:	48 8b 00             	mov    (%rax),%rax
   13d5f:	48 29 c2             	sub    %rax,%rdx
   13d62:	48 89 d0             	mov    %rdx,%rax
   13d65:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   13d69:	48 89 c2             	mov    %rax,%rdx
   13d6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d70:	48 8b 08             	mov    (%rax),%rcx
   13d73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d77:	48 89 ce             	mov    %rcx,%rsi
   13d7a:	48 89 c7             	mov    %rax,%rdi
   13d7d:	e8 62 21 00 00       	call   15ee4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   13d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d86:	48 89 c7             	mov    %rax,%rdi
   13d89:	e8 06 e7 ff ff       	call   12494 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
   13d8e:	90                   	nop
   13d8f:	c9                   	leave
   13d90:	c3                   	ret
   13d91:	90                   	nop

0000000000013d92 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   13d92:	55                   	push   %rbp
   13d93:	48 89 e5             	mov    %rsp,%rbp
   13d96:	48 83 ec 10          	sub    $0x10,%rsp
   13d9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   13d9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13da2:	48 89 c7             	mov    %rax,%rdi
   13da5:	e8 70 21 00 00       	call   15f1a <_ZNSaIP9VkFence_TEC1Ev>
   13daa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dae:	48 89 c7             	mov    %rax,%rdi
   13db1:	e8 80 21 00 00       	call   15f36 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   13db6:	90                   	nop
   13db7:	c9                   	leave
   13db8:	c3                   	ret
   13db9:	90                   	nop

0000000000013dba <_ZNSaIP9VkFence_TED1Ev>:
   13dba:	55                   	push   %rbp
   13dbb:	48 89 e5             	mov    %rsp,%rbp
   13dbe:	48 83 ec 10          	sub    $0x10,%rsp
   13dc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dca:	48 89 c7             	mov    %rax,%rdi
   13dcd:	e8 92 21 00 00       	call   15f64 <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>
   13dd2:	90                   	nop
   13dd3:	c9                   	leave
   13dd4:	c3                   	ret
   13dd5:	90                   	nop

0000000000013dd6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   13dd6:	55                   	push   %rbp
   13dd7:	48 89 e5             	mov    %rsp,%rbp
   13dda:	48 83 ec 10          	sub    $0x10,%rsp
   13dde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   13de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13de6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dee:	48 8b 00             	mov    (%rax),%rax
   13df1:	48 29 c2             	sub    %rax,%rdx
   13df4:	48 89 d0             	mov    %rdx,%rax
   13df7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   13dfb:	48 89 c2             	mov    %rax,%rdx
   13dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e02:	48 8b 08             	mov    (%rax),%rcx
   13e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e09:	48 89 ce             	mov    %rcx,%rsi
   13e0c:	48 89 c7             	mov    %rax,%rdi
   13e0f:	e8 5c 21 00 00       	call   15f70 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   13e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e18:	48 89 c7             	mov    %rax,%rdi
   13e1b:	e8 c8 e6 ff ff       	call   124e8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>
   13e20:	90                   	nop
   13e21:	c9                   	leave
   13e22:	c3                   	ret
   13e23:	90                   	nop

0000000000013e24 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13e24:	55                   	push   %rbp
   13e25:	48 89 e5             	mov    %rsp,%rbp
   13e28:	48 83 ec 10          	sub    $0x10,%rsp
   13e2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e34:	48 89 c7             	mov    %rax,%rdi
   13e37:	e8 6a 21 00 00       	call   15fa6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13e3c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e43:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e4b:	48 8b 00             	mov    (%rax),%rax
   13e4e:	48 89 ce             	mov    %rcx,%rsi
   13e51:	48 89 c7             	mov    %rax,%rdi
   13e54:	e8 5b 21 00 00       	call   15fb4 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
      }
   13e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e5d:	48 89 c7             	mov    %rax,%rdi
   13e60:	e8 71 ff ff ff       	call   13dd6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>
   13e65:	90                   	nop
   13e66:	c9                   	leave
   13e67:	c3                   	ret

0000000000013e68 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   13e68:	55                   	push   %rbp
   13e69:	48 89 e5             	mov    %rsp,%rbp
   13e6c:	48 83 ec 20          	sub    $0x20,%rsp
   13e70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13e78:	89 d0                	mov    %edx,%eax
   13e7a:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   13e7d:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   13e81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13e85:	be 01 00 00 00       	mov    $0x1,%esi
   13e8a:	48 89 c7             	mov    %rax,%rdi
   13e8d:	e8 1e 06 ff ff       	call   44b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   13e92:	48 89 c7             	mov    %rax,%rdi
   13e95:	e8 d3 00 00 00       	call   13f6d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   13e9a:	48 89 c2             	mov    %rax,%rdx
   13e9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ea1:	48 89 d6             	mov    %rdx,%rsi
   13ea4:	48 89 c7             	mov    %rax,%rdi
   13ea7:	e8 94 03 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   13eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13eb0:	c9                   	leave
   13eb1:	c3                   	ret

0000000000013eb2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   13eb2:	55                   	push   %rbp
   13eb3:	48 89 e5             	mov    %rsp,%rbp
   13eb6:	48 83 ec 20          	sub    $0x20,%rsp
   13eba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   13ebe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13ec2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13ec6:	48 89 d6             	mov    %rdx,%rsi
   13ec9:	48 89 c7             	mov    %rax,%rdi
   13ecc:	e8 0d 21 00 00       	call   15fde <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   13ed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ed5:	c9                   	leave
   13ed6:	c3                   	ret
   13ed7:	90                   	nop

0000000000013ed8 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   13ed8:	55                   	push   %rbp
   13ed9:	48 89 e5             	mov    %rsp,%rbp
   13edc:	48 83 ec 20          	sub    $0x20,%rsp
   13ee0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   13ee4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ee8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13eec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13ef0:	48 89 d6             	mov    %rdx,%rsi
   13ef3:	48 89 c7             	mov    %rax,%rdi
   13ef6:	e8 e3 20 00 00       	call   15fde <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   13efb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13eff:	c9                   	leave
   13f00:	c3                   	ret

0000000000013f01 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13f01:	55                   	push   %rbp
   13f02:	48 89 e5             	mov    %rsp,%rbp
   13f05:	53                   	push   %rbx
   13f06:	48 83 ec 18          	sub    $0x18,%rsp
   13f0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13f0e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13f12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f16:	48 89 c7             	mov    %rax,%rdi
   13f19:	e8 de 20 00 00       	call   15ffc <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13f1e:	48 8b 18             	mov    (%rax),%rbx
   13f21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13f25:	48 89 c7             	mov    %rax,%rdi
   13f28:	e8 cf 20 00 00       	call   15ffc <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13f2d:	48 8b 00             	mov    (%rax),%rax
   13f30:	48 39 c3             	cmp    %rax,%rbx
   13f33:	0f 95 c0             	setne  %al
   13f36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13f3a:	c9                   	leave
   13f3b:	c3                   	ret

0000000000013f3c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13f3c:	55                   	push   %rbp
   13f3d:	48 89 e5             	mov    %rsp,%rbp
   13f40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13f44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f48:	48 8b 00             	mov    (%rax),%rax
   13f4b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f53:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13f5a:	5d                   	pop    %rbp
   13f5b:	c3                   	ret

0000000000013f5c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13f5c:	55                   	push   %rbp
   13f5d:	48 89 e5             	mov    %rsp,%rbp
   13f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f68:	48 8b 00             	mov    (%rax),%rax
   13f6b:	5d                   	pop    %rbp
   13f6c:	c3                   	ret

0000000000013f6d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   13f6d:	55                   	push   %rbp
   13f6e:	48 89 e5             	mov    %rsp,%rbp
   13f71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   13f75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f79:	5d                   	pop    %rbp
   13f7a:	c3                   	ret
   13f7b:	90                   	nop

0000000000013f7c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13f7c:	55                   	push   %rbp
   13f7d:	48 89 e5             	mov    %rsp,%rbp
   13f80:	48 83 ec 10          	sub    $0x10,%rsp
   13f84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   13f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f94:	48 89 d6             	mov    %rdx,%rsi
   13f97:	48 89 c7             	mov    %rax,%rdi
   13f9a:	e8 a1 6c ff ff       	call   ac40 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   13f9f:	90                   	nop
   13fa0:	c9                   	leave
   13fa1:	c3                   	ret

0000000000013fa2 <_ZNKSt16initializer_listIPKcE5beginEv>:
      begin() const noexcept { return _M_array; }
   13fa2:	55                   	push   %rbp
   13fa3:	48 89 e5             	mov    %rsp,%rbp
   13fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fae:	48 8b 00             	mov    (%rax),%rax
   13fb1:	5d                   	pop    %rbp
   13fb2:	c3                   	ret
   13fb3:	90                   	nop

0000000000013fb4 <_ZNKSt16initializer_listIPKcE3endEv>:
      end() const noexcept { return begin() + size(); }
   13fb4:	55                   	push   %rbp
   13fb5:	48 89 e5             	mov    %rsp,%rbp
   13fb8:	53                   	push   %rbx
   13fb9:	48 83 ec 18          	sub    $0x18,%rsp
   13fbd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13fc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fc5:	48 89 c7             	mov    %rax,%rdi
   13fc8:	e8 d5 ff ff ff       	call   13fa2 <_ZNKSt16initializer_listIPKcE5beginEv>
   13fcd:	48 89 c3             	mov    %rax,%rbx
   13fd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fd4:	48 89 c7             	mov    %rax,%rdi
   13fd7:	e8 2e 20 00 00       	call   1600a <_ZNKSt16initializer_listIPKcE4sizeEv>
   13fdc:	48 c1 e0 03          	shl    $0x3,%rax
   13fe0:	48 01 d8             	add    %rbx,%rax
   13fe3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13fe7:	c9                   	leave
   13fe8:	c3                   	ret

0000000000013fe9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   13fe9:	55                   	push   %rbp
   13fea:	48 89 e5             	mov    %rsp,%rbp
   13fed:	48 83 ec 10          	sub    $0x10,%rsp
   13ff1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ff5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   13ff9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13ffd:	48 89 c7             	mov    %rax,%rdi
   14000:	e8 17 20 00 00       	call   1601c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   14005:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14009:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1400d:	48 89 d6             	mov    %rdx,%rsi
   14010:	48 89 c7             	mov    %rax,%rdi
   14013:	e8 0f 20 00 00       	call   16027 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   14018:	c9                   	leave
   14019:	c3                   	ret

000000000001401a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1401a:	55                   	push   %rbp
   1401b:	48 89 e5             	mov    %rsp,%rbp
   1401e:	53                   	push   %rbx
   1401f:	48 83 ec 38          	sub    $0x38,%rsp
   14023:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14027:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1402b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1402f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14033:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14037:	48 89 d6             	mov    %rdx,%rsi
   1403a:	48 89 c7             	mov    %rax,%rdi
   1403d:	e8 a7 ff ff ff       	call   13fe9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   14042:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   14046:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1404a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1404e:	48 89 c7             	mov    %rax,%rdi
   14051:	e8 60 5d ff ff       	call   9db6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   14056:	48 89 c2             	mov    %rax,%rdx
   14059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1405d:	48 89 d6             	mov    %rdx,%rsi
   14060:	48 89 c7             	mov    %rax,%rdi
   14063:	e8 4f 5c ff ff       	call   9cb7 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   14068:	48 89 c6             	mov    %rax,%rsi
   1406b:	48 89 df             	mov    %rbx,%rdi
   1406e:	e8 59 77 ff ff       	call   b7cc <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   14073:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14077:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1407a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1407e:	48 8b 00             	mov    (%rax),%rax
   14081:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14085:	48 c1 e2 03          	shl    $0x3,%rdx
   14089:	48 01 c2             	add    %rax,%rdx
   1408c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14090:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   14094:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14098:	48 89 c7             	mov    %rax,%rdi
   1409b:	e8 16 5d ff ff       	call   9db6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   140a0:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   140a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140a7:	48 8b 10             	mov    (%rax),%rdx
   140aa:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   140ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   140b2:	48 89 c7             	mov    %rax,%rdi
   140b5:	e8 87 1f 00 00       	call   16041 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   140ba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   140be:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   140c2:	90                   	nop
   140c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   140c7:	c9                   	leave
   140c8:	c3                   	ret

00000000000140c9 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   140c9:	55                   	push   %rbp
   140ca:	48 89 e5             	mov    %rsp,%rbp
   140cd:	48 83 ec 20          	sub    $0x20,%rsp
   140d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   140d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   140dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   140e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140e5:	48 89 d6             	mov    %rdx,%rsi
   140e8:	48 89 c7             	mov    %rax,%rdi
   140eb:	e8 82 1f 00 00       	call   16072 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   140f0:	90                   	nop
   140f1:	c9                   	leave
   140f2:	c3                   	ret
   140f3:	90                   	nop

00000000000140f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   140f4:	55                   	push   %rbp
   140f5:	48 89 e5             	mov    %rsp,%rbp
   140f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14100:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14104:	48 8b 10             	mov    (%rax),%rdx
   14107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1410b:	48 89 10             	mov    %rdx,(%rax)
   1410e:	90                   	nop
   1410f:	5d                   	pop    %rbp
   14110:	c3                   	ret
   14111:	90                   	nop

0000000000014112 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14112:	55                   	push   %rbp
   14113:	48 89 e5             	mov    %rsp,%rbp
   14116:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1411a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1411e:	5d                   	pop    %rbp
   1411f:	c3                   	ret

0000000000014120 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14120:	55                   	push   %rbp
   14121:	48 89 e5             	mov    %rsp,%rbp
   14124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1412c:	5d                   	pop    %rbp
   1412d:	c3                   	ret

000000000001412e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1412e:	55                   	push   %rbp
   1412f:	48 89 e5             	mov    %rsp,%rbp
   14132:	48 83 ec 20          	sub    $0x20,%rsp
   14136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1413a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1413e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   14142:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14146:	48 89 c7             	mov    %rax,%rdi
   14149:	e8 d2 ff ff ff       	call   14120 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1414e:	48 89 c2             	mov    %rax,%rdx
   14151:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14159:	48 89 ce             	mov    %rcx,%rsi
   1415c:	48 89 c7             	mov    %rax,%rdi
   1415f:	e8 34 1f 00 00       	call   16098 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   14164:	90                   	nop
   14165:	c9                   	leave
   14166:	c3                   	ret
   14167:	90                   	nop

0000000000014168 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   14168:	55                   	push   %rbp
   14169:	48 89 e5             	mov    %rsp,%rbp
   1416c:	53                   	push   %rbx
   1416d:	48 83 ec 68          	sub    $0x68,%rsp
   14171:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   14175:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   14179:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   1417d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14181:	48 8d 15 ae af 00 00 	lea    0xafae(%rip),%rdx        # 1f136 <_ZZN9VulkanApp6renderEvE11submitCount+0x2be>
   14188:	be 01 00 00 00       	mov    $0x1,%esi
   1418d:	48 89 c7             	mov    %rax,%rdi
   14190:	e8 45 1f 00 00       	call   160da <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   14195:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   14199:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1419d:	48 8b 00             	mov    (%rax),%rax
   141a0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   141a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   141a8:	48 8b 40 08          	mov    0x8(%rax),%rax
   141ac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   141b0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   141b4:	48 89 c7             	mov    %rax,%rdi
   141b7:	e8 d0 e4 ff ff       	call   1268c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   141bc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   141c0:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   141c4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   141c8:	48 89 d6             	mov    %rdx,%rsi
   141cb:	48 89 c7             	mov    %rax,%rdi
   141ce:	e8 cf 1f 00 00       	call   161a2 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   141d3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   141d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   141db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   141df:	48 89 d6             	mov    %rdx,%rsi
   141e2:	48 89 c7             	mov    %rax,%rdi
   141e5:	e8 e2 75 ff ff       	call   b7cc <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   141ea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   141ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   141f2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   141f6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   141fa:	48 89 c7             	mov    %rax,%rdi
   141fd:	e8 1e ff ff ff       	call   14120 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   14202:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   14205:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14209:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   14210:	00 
	  _Alloc_traits::construct(this->_M_impl,
   14211:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14215:	48 01 c1             	add    %rax,%rcx
   14218:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1421c:	48 89 ce             	mov    %rcx,%rsi
   1421f:	48 89 c7             	mov    %rax,%rdi
   14222:	e8 07 ff ff ff       	call   1412e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   14227:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   1422e:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   1422f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14233:	48 89 c7             	mov    %rax,%rdi
   14236:	e8 7b 5b ff ff       	call   9db6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1423b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   1423e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14242:	48 89 c7             	mov    %rax,%rdi
   14245:	e8 c8 fe ff ff       	call   14112 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1424a:	48 8b 30             	mov    (%rax),%rsi
   1424d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14251:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14255:	48 89 d9             	mov    %rbx,%rcx
   14258:	48 89 c7             	mov    %rax,%rdi
   1425b:	e8 84 1f 00 00       	call   161e4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   14260:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   14264:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   14269:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1426d:	48 89 c7             	mov    %rax,%rdi
   14270:	e8 41 5b ff ff       	call   9db6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   14275:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   14278:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1427c:	48 89 c7             	mov    %rax,%rdi
   1427f:	e8 8e fe ff ff       	call   14112 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   14284:	48 8b 00             	mov    (%rax),%rax
   14287:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1428b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   1428f:	48 89 d9             	mov    %rbx,%rcx
   14292:	48 89 c7             	mov    %rax,%rdi
   14295:	e8 4a 1f 00 00       	call   161e4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1429a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   1429e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   142a2:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   142a6:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   142aa:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   142ae:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   142b2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   142b6:	48 89 ce             	mov    %rcx,%rsi
   142b9:	48 89 c7             	mov    %rax,%rdi
   142bc:	e8 29 5b ff ff       	call   9dea <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   142c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   142c5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   142c9:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   142cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   142d0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   142d4:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   142d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   142e3:	00 
   142e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   142e8:	48 01 c2             	add    %rax,%rdx
   142eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   142ef:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   142f3:	90                   	nop
   142f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   142f8:	c9                   	leave
   142f9:	c3                   	ret

00000000000142fa <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   142fa:	55                   	push   %rbp
   142fb:	48 89 e5             	mov    %rsp,%rbp
   142fe:	48 83 ec 20          	sub    $0x20,%rsp
   14302:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   14306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1430a:	48 89 c7             	mov    %rax,%rdi
   1430d:	e8 a0 e3 ff ff       	call   126b2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   14312:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14316:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1431a:	be 01 00 00 00       	mov    $0x1,%esi
   1431f:	48 89 c7             	mov    %rax,%rdi
   14322:	e8 ef 1e 00 00       	call   16216 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   14327:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1432b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1432f:	48 89 c7             	mov    %rax,%rdi
   14332:	e8 ff e3 ff ff       	call   12736 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   14337:	c9                   	leave
   14338:	c3                   	ret
   14339:	90                   	nop

000000000001433a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1433a:	55                   	push   %rbp
   1433b:	48 89 e5             	mov    %rsp,%rbp
   1433e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14342:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   14346:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1434a:	5d                   	pop    %rbp
   1434b:	c3                   	ret

000000000001434c <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1434c:	55                   	push   %rbp
   1434d:	48 89 e5             	mov    %rsp,%rbp
   14350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14358:	5d                   	pop    %rbp
   14359:	c3                   	ret

000000000001435a <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1435a:	55                   	push   %rbp
   1435b:	48 89 e5             	mov    %rsp,%rbp
   1435e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14366:	5d                   	pop    %rbp
   14367:	c3                   	ret

0000000000014368 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14368:	55                   	push   %rbp
   14369:	48 89 e5             	mov    %rsp,%rbp
   1436c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14374:	5d                   	pop    %rbp
   14375:	c3                   	ret

0000000000014376 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   14376:	55                   	push   %rbp
   14377:	48 89 e5             	mov    %rsp,%rbp
   1437a:	48 83 ec 20          	sub    $0x20,%rsp
   1437e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14382:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   14386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1438a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1438e:	48 89 d6             	mov    %rdx,%rsi
   14391:	48 89 c7             	mov    %rax,%rdi
   14394:	e8 bf 1e 00 00       	call   16258 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   14399:	90                   	nop
   1439a:	c9                   	leave
   1439b:	c3                   	ret

000000000001439c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   1439c:	55                   	push   %rbp
   1439d:	48 89 e5             	mov    %rsp,%rbp
   143a0:	53                   	push   %rbx
   143a1:	48 83 ec 18          	sub    $0x18,%rsp
   143a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   143a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   143ad:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   143b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   143b5:	48 89 c7             	mov    %rax,%rdi
   143b8:	e8 ab ff ff ff       	call   14368 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   143bd:	48 89 c6             	mov    %rax,%rsi
   143c0:	48 89 df             	mov    %rbx,%rdi
   143c3:	e8 ae ff ff ff       	call   14376 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   143c8:	90                   	nop
   143c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   143cd:	c9                   	leave
   143ce:	c3                   	ret
   143cf:	90                   	nop

00000000000143d0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   143d0:	55                   	push   %rbp
   143d1:	48 89 e5             	mov    %rsp,%rbp
   143d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   143dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   143e0:	48 8b 10             	mov    (%rax),%rdx
   143e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143e7:	48 89 10             	mov    %rdx,(%rax)
   143ea:	90                   	nop
   143eb:	5d                   	pop    %rbp
   143ec:	c3                   	ret
   143ed:	90                   	nop

00000000000143ee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   143ee:	55                   	push   %rbp
   143ef:	48 89 e5             	mov    %rsp,%rbp
   143f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   143f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143fa:	5d                   	pop    %rbp
   143fb:	c3                   	ret

00000000000143fc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   143fc:	55                   	push   %rbp
   143fd:	48 89 e5             	mov    %rsp,%rbp
   14400:	53                   	push   %rbx
   14401:	48 83 ec 18          	sub    $0x18,%rsp
   14405:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14409:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   1440d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14411:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   14415:	84 c0                	test   %al,%al
   14417:	74 35                	je     1444e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   14419:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1441d:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   14421:	84 c0                	test   %al,%al
   14423:	74 29                	je     1444e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   14425:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14429:	48 89 c7             	mov    %rax,%rdi
   1442c:	e8 63 1e 00 00       	call   16294 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   14431:	48 89 c3             	mov    %rax,%rbx
   14434:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14438:	48 89 c7             	mov    %rax,%rdi
   1443b:	e8 4e 00 00 00       	call   1448e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   14440:	48 89 de             	mov    %rbx,%rsi
   14443:	48 89 c7             	mov    %rax,%rdi
   14446:	e8 57 1e 00 00       	call   162a2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   1444b:	90                   	nop
      }
   1444c:	eb 38                	jmp    14486 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   1444e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14452:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   14456:	84 c0                	test   %al,%al
   14458:	74 20                	je     1447a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   1445a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1445e:	48 89 c7             	mov    %rax,%rdi
   14461:	e8 2e 1e 00 00       	call   16294 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   14466:	48 89 c2             	mov    %rax,%rdx
   14469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1446d:	48 89 d6             	mov    %rdx,%rsi
   14470:	48 89 c7             	mov    %rax,%rdi
   14473:	e8 68 1e 00 00       	call   162e0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   14478:	eb 0c                	jmp    14486 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   1447a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1447e:	48 89 c7             	mov    %rax,%rdi
   14481:	e8 a0 1e 00 00       	call   16326 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   14486:	90                   	nop
   14487:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1448b:	c9                   	leave
   1448c:	c3                   	ret
   1448d:	90                   	nop

000000000001448e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   1448e:	55                   	push   %rbp
   1448f:	48 89 e5             	mov    %rsp,%rbp
   14492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   14496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1449a:	5d                   	pop    %rbp
   1449b:	c3                   	ret

000000000001449c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1449c:	55                   	push   %rbp
   1449d:	48 89 e5             	mov    %rsp,%rbp
   144a0:	48 83 ec 10          	sub    $0x10,%rsp
   144a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144ac:	48 89 c7             	mov    %rax,%rdi
   144af:	e8 9a 1e 00 00       	call   1634e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   144b4:	90                   	nop
   144b5:	c9                   	leave
   144b6:	c3                   	ret
   144b7:	90                   	nop

00000000000144b8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   144b8:	55                   	push   %rbp
   144b9:	48 89 e5             	mov    %rsp,%rbp
   144bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   144c0:	90                   	nop
   144c1:	5d                   	pop    %rbp
   144c2:	c3                   	ret
   144c3:	90                   	nop

00000000000144c4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   144c4:	55                   	push   %rbp
   144c5:	48 89 e5             	mov    %rsp,%rbp
   144c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144cc:	90                   	nop
   144cd:	5d                   	pop    %rbp
   144ce:	c3                   	ret
   144cf:	90                   	nop

00000000000144d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   144d0:	55                   	push   %rbp
   144d1:	48 89 e5             	mov    %rsp,%rbp
   144d4:	48 83 ec 20          	sub    $0x20,%rsp
   144d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   144dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   144e0:	eb 49                	jmp    1452b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   144e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   144e6:	48 89 c7             	mov    %rax,%rdi
   144e9:	e8 6b 1e 00 00       	call   16359 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   144ee:	48 89 c2             	mov    %rax,%rdx
   144f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144f5:	48 89 d6             	mov    %rdx,%rsi
   144f8:	48 89 c7             	mov    %rax,%rdi
   144fb:	e8 d0 ff ff ff       	call   144d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   14500:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14504:	48 89 c7             	mov    %rax,%rdi
   14507:	e8 5f 1e 00 00       	call   1636b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1450c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   14510:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14514:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14518:	48 89 d6             	mov    %rdx,%rsi
   1451b:	48 89 c7             	mov    %rax,%rdi
   1451e:	e8 5b 1e 00 00       	call   1637e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   14523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14527:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   1452b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14530:	75 b0                	jne    144e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   14532:	90                   	nop
   14533:	90                   	nop
   14534:	c9                   	leave
   14535:	c3                   	ret

0000000000014536 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   14536:	55                   	push   %rbp
   14537:	48 89 e5             	mov    %rsp,%rbp
   1453a:	48 83 ec 10          	sub    $0x10,%rsp
   1453e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   14542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14546:	48 89 c7             	mov    %rax,%rdi
   14549:	e8 6a 1e 00 00       	call   163b8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   1454e:	c9                   	leave
   1454f:	c3                   	ret

0000000000014550 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   14550:	55                   	push   %rbp
   14551:	48 89 e5             	mov    %rsp,%rbp
   14554:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14558:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1455c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14560:	48 8b 10             	mov    (%rax),%rdx
   14563:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14567:	48 89 10             	mov    %rdx,(%rax)
   1456a:	90                   	nop
   1456b:	5d                   	pop    %rbp
   1456c:	c3                   	ret
   1456d:	90                   	nop

000000000001456e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1456e:	55                   	push   %rbp
   1456f:	48 89 e5             	mov    %rsp,%rbp
   14572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   14576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1457a:	5d                   	pop    %rbp
   1457b:	c3                   	ret

000000000001457c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   1457c:	55                   	push   %rbp
   1457d:	48 89 e5             	mov    %rsp,%rbp
   14580:	48 83 ec 10          	sub    $0x10,%rsp
   14584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14588:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   1458c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14590:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14594:	48 89 d6             	mov    %rdx,%rsi
   14597:	48 89 c7             	mov    %rax,%rdi
   1459a:	e8 2b 1e 00 00       	call   163ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   1459f:	c9                   	leave
   145a0:	c3                   	ret
   145a1:	90                   	nop

00000000000145a2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   145a2:	55                   	push   %rbp
   145a3:	48 89 e5             	mov    %rsp,%rbp
   145a6:	48 83 ec 10          	sub    $0x10,%rsp
   145aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   145ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145b2:	48 89 c7             	mov    %rax,%rdi
   145b5:	e8 5c 1e 00 00       	call   16416 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   145ba:	c9                   	leave
   145bb:	c3                   	ret

00000000000145bc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   145bc:	55                   	push   %rbp
   145bd:	48 89 e5             	mov    %rsp,%rbp
   145c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   145c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145cc:	48 8b 10             	mov    (%rax),%rdx
   145cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   145d3:	48 8b 00             	mov    (%rax),%rax
   145d6:	48 39 c2             	cmp    %rax,%rdx
   145d9:	0f 94 c0             	sete   %al
   145dc:	5d                   	pop    %rbp
   145dd:	c3                   	ret

00000000000145de <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   145de:	55                   	push   %rbp
   145df:	48 89 e5             	mov    %rsp,%rbp
   145e2:	48 83 ec 10          	sub    $0x10,%rsp
   145e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   145ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145ee:	48 89 c7             	mov    %rax,%rdi
   145f1:	e8 4a 1e 00 00       	call   16440 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   145f6:	90                   	nop
   145f7:	c9                   	leave
   145f8:	c3                   	ret
   145f9:	90                   	nop

00000000000145fa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   145fa:	55                   	push   %rbp
   145fb:	48 89 e5             	mov    %rsp,%rbp
   145fe:	48 83 ec 10          	sub    $0x10,%rsp
   14602:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   14606:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1460a:	48 8b 00             	mov    (%rax),%rax
   1460d:	48 89 c7             	mov    %rax,%rdi
   14610:	e8 37 1e 00 00       	call   1644c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   14615:	c9                   	leave
   14616:	c3                   	ret
   14617:	90                   	nop

0000000000014618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   14618:	55                   	push   %rbp
   14619:	48 89 e5             	mov    %rsp,%rbp
   1461c:	48 83 ec 20          	sub    $0x20,%rsp
   14620:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14624:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14628:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   1462c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14630:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14634:	48 89 d6             	mov    %rdx,%rsi
   14637:	48 89 c7             	mov    %rax,%rdi
   1463a:	e8 2b 1e 00 00       	call   1646a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   1463f:	c9                   	leave
   14640:	c3                   	ret

0000000000014641 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   14641:	55                   	push   %rbp
   14642:	48 89 e5             	mov    %rsp,%rbp
   14645:	48 83 ec 10          	sub    $0x10,%rsp
   14649:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1464d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   14651:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14655:	48 89 c7             	mov    %rax,%rdi
   14658:	e8 35 1e 00 00       	call   16492 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1465d:	48 89 c2             	mov    %rax,%rdx
   14660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14664:	48 89 d6             	mov    %rdx,%rsi
   14667:	48 89 c7             	mov    %rax,%rdi
   1466a:	e8 31 1e 00 00       	call   164a0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   1466f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14673:	c9                   	leave
   14674:	c3                   	ret
   14675:	90                   	nop

0000000000014676 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   14676:	55                   	push   %rbp
   14677:	48 89 e5             	mov    %rsp,%rbp
   1467a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1467e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   14682:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14686:	48 8b 10             	mov    (%rax),%rdx
   14689:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1468d:	48 89 10             	mov    %rdx,(%rax)
   14690:	90                   	nop
   14691:	5d                   	pop    %rbp
   14692:	c3                   	ret
   14693:	90                   	nop

0000000000014694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14694:	55                   	push   %rbp
   14695:	48 89 e5             	mov    %rsp,%rbp
   14698:	41 54                	push   %r12
   1469a:	53                   	push   %rbx
   1469b:	48 83 ec 60          	sub    $0x60,%rsp
   1469f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   146a3:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   146a7:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   146ab:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   146af:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   146b3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   146b7:	48 89 c7             	mov    %rax,%rdi
   146ba:	e8 30 1e 00 00       	call   164ef <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   146bf:	49 89 c4             	mov    %rax,%r12
   146c2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   146c6:	48 89 c7             	mov    %rax,%rdi
   146c9:	e8 13 1e 00 00       	call   164e1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   146ce:	48 89 c3             	mov    %rax,%rbx
   146d1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   146d5:	48 89 c7             	mov    %rax,%rdi
   146d8:	e8 f6 1d 00 00       	call   164d3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   146dd:	48 89 c2             	mov    %rax,%rdx
   146e0:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   146e4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   146e8:	4d 89 e0             	mov    %r12,%r8
   146eb:	48 89 d9             	mov    %rbx,%rcx
   146ee:	48 89 c7             	mov    %rax,%rdi
   146f1:	e8 08 1e 00 00       	call   164fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   146f6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   146fa:	48 89 c7             	mov    %rax,%rdi
   146fd:	e8 fc 22 00 00       	call   169fe <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   14702:	48 89 c2             	mov    %rax,%rdx
   14705:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   14709:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1470d:	48 89 ce             	mov    %rcx,%rsi
   14710:	48 89 c7             	mov    %rax,%rdi
   14713:	e8 98 1e 00 00       	call   165b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   14718:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1471c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   14720:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14724:	48 85 c0             	test   %rax,%rax
   14727:	74 1c                	je     14745 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   14729:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1472d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14731:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14735:	48 89 ce             	mov    %rcx,%rsi
   14738:	48 89 c7             	mov    %rax,%rdi
   1473b:	e8 dc 22 00 00       	call   16a1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   14740:	48 89 c3             	mov    %rax,%rbx
   14743:	eb 17                	jmp    1475c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   14745:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14749:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1474d:	48 89 d6             	mov    %rdx,%rsi
   14750:	48 89 c7             	mov    %rax,%rdi
   14753:	e8 1a 23 00 00       	call   16a72 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14758:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   1475c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14760:	48 89 c7             	mov    %rax,%rdi
   14763:	e8 12 1e 00 00       	call   1657a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   14768:	48 89 d8             	mov    %rbx,%rax
   1476b:	eb 1a                	jmp    14787 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   1476d:	48 89 c3             	mov    %rax,%rbx
   14770:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14774:	48 89 c7             	mov    %rax,%rdi
   14777:	e8 fe 1d 00 00       	call   1657a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   1477c:	48 89 d8             	mov    %rbx,%rax
   1477f:	48 89 c7             	mov    %rax,%rdi
   14782:	e8 99 00 ff ff       	call   4820 <_Unwind_Resume@plt>
   14787:	48 83 c4 60          	add    $0x60,%rsp
   1478b:	5b                   	pop    %rbx
   1478c:	41 5c                	pop    %r12
   1478e:	5d                   	pop    %rbp
   1478f:	c3                   	ret

0000000000014790 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   14790:	55                   	push   %rbp
   14791:	48 89 e5             	mov    %rsp,%rbp
   14794:	48 83 ec 20          	sub    $0x20,%rsp
   14798:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   1479c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   147a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   147a4:	48 89 d6             	mov    %rdx,%rsi
   147a7:	48 89 c7             	mov    %rax,%rdi
   147aa:	e8 dd 22 00 00       	call   16a8c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   147af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147b3:	c9                   	leave
   147b4:	c3                   	ret
   147b5:	90                   	nop

00000000000147b6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   147b6:	55                   	push   %rbp
   147b7:	48 89 e5             	mov    %rsp,%rbp
   147ba:	48 83 ec 20          	sub    $0x20,%rsp
   147be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   147c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147c6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   147ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   147ce:	48 89 d6             	mov    %rdx,%rsi
   147d1:	48 89 c7             	mov    %rax,%rdi
   147d4:	e8 b3 22 00 00       	call   16a8c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   147d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147dd:	c9                   	leave
   147de:	c3                   	ret

00000000000147df <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   147df:	55                   	push   %rbp
   147e0:	48 89 e5             	mov    %rsp,%rbp
   147e3:	53                   	push   %rbx
   147e4:	48 83 ec 18          	sub    $0x18,%rsp
   147e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   147f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147f4:	48 89 c7             	mov    %rax,%rdi
   147f7:	e8 ae 22 00 00       	call   16aaa <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   147fc:	48 8b 18             	mov    (%rax),%rbx
   147ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14803:	48 89 c7             	mov    %rax,%rdi
   14806:	e8 9f 22 00 00       	call   16aaa <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1480b:	48 8b 00             	mov    (%rax),%rax
   1480e:	48 39 c3             	cmp    %rax,%rbx
   14811:	0f 94 c0             	sete   %al
   14814:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14818:	c9                   	leave
   14819:	c3                   	ret

000000000001481a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1481a:	55                   	push   %rbp
   1481b:	48 89 e5             	mov    %rsp,%rbp
   1481e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14822:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14826:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1482a:	48 8b 10             	mov    (%rax),%rdx
   1482d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14831:	48 89 10             	mov    %rdx,(%rax)
   14834:	90                   	nop
   14835:	5d                   	pop    %rbp
   14836:	c3                   	ret
   14837:	90                   	nop

0000000000014838 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14838:	55                   	push   %rbp
   14839:	48 89 e5             	mov    %rsp,%rbp
   1483c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   14840:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14844:	5d                   	pop    %rbp
   14845:	c3                   	ret

0000000000014846 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   14846:	55                   	push   %rbp
   14847:	48 89 e5             	mov    %rsp,%rbp
   1484a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1484e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14852:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14856:	48 8b 10             	mov    (%rax),%rdx
   14859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1485d:	48 89 10             	mov    %rdx,(%rax)
   14860:	90                   	nop
   14861:	5d                   	pop    %rbp
   14862:	c3                   	ret
   14863:	90                   	nop

0000000000014864 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14864:	55                   	push   %rbp
   14865:	48 89 e5             	mov    %rsp,%rbp
   14868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1486c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14870:	5d                   	pop    %rbp
   14871:	c3                   	ret

0000000000014872 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   14872:	55                   	push   %rbp
   14873:	48 89 e5             	mov    %rsp,%rbp
   14876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1487a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1487e:	5d                   	pop    %rbp
   1487f:	c3                   	ret

0000000000014880 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   14880:	55                   	push   %rbp
   14881:	48 89 e5             	mov    %rsp,%rbp
   14884:	53                   	push   %rbx
   14885:	48 83 ec 38          	sub    $0x38,%rsp
   14889:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1488d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   14891:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14895:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14899:	48 89 d6             	mov    %rdx,%rsi
   1489c:	48 89 c7             	mov    %rax,%rdi
   1489f:	e8 14 22 00 00       	call   16ab8 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   148a4:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   148a8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   148ac:	48 89 d6             	mov    %rdx,%rsi
   148af:	48 89 c7             	mov    %rax,%rdi
   148b2:	e8 35 22 00 00       	call   16aec <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   148b7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   148bb:	48 89 c7             	mov    %rax,%rdi
   148be:	e8 1d 4f ff ff       	call   97e0 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   148c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148c7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   148cb:	48 89 d6             	mov    %rdx,%rsi
   148ce:	48 89 c7             	mov    %rax,%rdi
   148d1:	e8 3c 22 00 00       	call   16b12 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   148d6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   148da:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   148de:	48 89 d6             	mov    %rdx,%rsi
   148e1:	48 89 c7             	mov    %rax,%rdi
   148e4:	e8 29 22 00 00       	call   16b12 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   148e9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   148ed:	48 89 c7             	mov    %rax,%rdi
   148f0:	e8 9f 5f ff ff       	call   a894 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   148f5:	48 89 c3             	mov    %rax,%rbx
   148f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148fc:	48 89 c7             	mov    %rax,%rdi
   148ff:	e8 90 5f ff ff       	call   a894 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14904:	48 89 de             	mov    %rbx,%rsi
   14907:	48 89 c7             	mov    %rax,%rdi
   1490a:	e8 5b 22 00 00       	call   16b6a <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   1490f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14913:	48 89 c7             	mov    %rax,%rdi
   14916:	e8 57 4f ff ff       	call   9872 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   1491b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1491f:	c9                   	leave
   14920:	c3                   	ret
   14921:	90                   	nop

0000000000014922 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   14922:	55                   	push   %rbp
   14923:	48 89 e5             	mov    %rsp,%rbp
   14926:	53                   	push   %rbx
   14927:	48 83 ec 38          	sub    $0x38,%rsp
   1492b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1492f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   14933:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   14938:	0f 84 e7 01 00 00    	je     14b25 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   1493e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14942:	48 89 c7             	mov    %rax,%rdi
   14945:	e8 86 ea ff ff       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1494a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1494e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14952:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   14956:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1495a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1495e:	48 29 c2             	sub    %rax,%rdx
   14961:	48 89 d0             	mov    %rdx,%rax
   14964:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   14968:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   1496c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14970:	48 89 c7             	mov    %rax,%rdi
   14973:	e8 12 22 00 00       	call   16b8a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   14978:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1497c:	72 16                	jb     14994 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   1497e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14982:	48 89 c7             	mov    %rax,%rdi
   14985:	e8 00 22 00 00       	call   16b8a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1498a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1498e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   14992:	73 07                	jae    1499b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   14994:	b8 01 00 00 00       	mov    $0x1,%eax
   14999:	eb 05                	jmp    149a0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   1499b:	b8 00 00 00 00       	mov    $0x0,%eax
   149a0:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   149a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   149a6:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   149aa:	72 33                	jb     149df <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   149ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149b0:	48 89 c7             	mov    %rax,%rdi
   149b3:	e8 c2 09 00 00       	call   1537a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   149b8:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   149bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149bf:	48 8b 40 08          	mov    0x8(%rax),%rax
   149c3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   149c7:	48 89 ce             	mov    %rcx,%rsi
   149ca:	48 89 c7             	mov    %rax,%rdi
   149cd:	e8 da 21 00 00       	call   16bac <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   149d2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   149d6:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   149da:	e9 46 01 00 00       	jmp    14b25 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   149df:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   149e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149e7:	48 8d 15 62 a7 00 00 	lea    0xa762(%rip),%rdx        # 1f150 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   149ee:	48 89 ce             	mov    %rcx,%rsi
   149f1:	48 89 c7             	mov    %rax,%rdi
   149f4:	e8 dd 21 00 00       	call   16bd6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   149f9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   149fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a01:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14a05:	48 89 d6             	mov    %rdx,%rsi
   14a08:	48 89 c7             	mov    %rax,%rdi
   14a0b:	e8 8e 22 00 00       	call   16c9e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   14a10:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   14a14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a18:	48 89 c7             	mov    %rax,%rdi
   14a1b:	e8 5a 09 00 00       	call   1537a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14a20:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   14a23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a27:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   14a2e:	00 
   14a2f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14a33:	48 01 c1             	add    %rax,%rcx
   14a36:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14a3a:	48 89 c6             	mov    %rax,%rsi
   14a3d:	48 89 cf             	mov    %rcx,%rdi
   14a40:	e8 67 21 00 00       	call   16bac <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   14a45:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a49:	48 89 c7             	mov    %rax,%rdi
   14a4c:	e8 29 09 00 00       	call   1537a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14a51:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   14a54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a58:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14a5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a60:	48 8b 00             	mov    (%rax),%rax
   14a63:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14a67:	48 89 c7             	mov    %rax,%rdi
   14a6a:	e8 62 22 00 00       	call   16cd1 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   14a6f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   14a73:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14a77:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   14a7b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14a7f:	48 8b 12             	mov    (%rdx),%rdx
   14a82:	48 29 d1             	sub    %rdx,%rcx
   14a85:	48 c1 f9 03          	sar    $0x3,%rcx
   14a89:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   14a8c:	48 89 d6             	mov    %rdx,%rsi
   14a8f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14a93:	48 8b 0a             	mov    (%rdx),%rcx
   14a96:	48 89 f2             	mov    %rsi,%rdx
   14a99:	48 89 ce             	mov    %rcx,%rsi
   14a9c:	48 89 c7             	mov    %rax,%rdi
   14a9f:	e8 18 13 00 00       	call   15dbc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   14aa4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14aa8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14aac:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   14aaf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14ab3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14ab7:	48 01 d0             	add    %rdx,%rax
   14aba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14ac1:	00 
   14ac2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14ac6:	48 01 c2             	add    %rax,%rdx
   14ac9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14acd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   14ad1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ad5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14adc:	00 
   14add:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14ae1:	48 01 c2             	add    %rax,%rdx
   14ae4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ae8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   14aec:	eb 37                	jmp    14b25 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   14aee:	48 89 c7             	mov    %rax,%rdi
   14af1:	e8 4a f6 fe ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   14af6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14afa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14afe:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   14b02:	48 89 ce             	mov    %rcx,%rsi
   14b05:	48 89 c7             	mov    %rax,%rdi
   14b08:	e8 af 12 00 00       	call   15dbc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   14b0d:	e8 ae fb fe ff       	call   46c0 <__cxa_rethrow@plt>
		  __catch(...)
   14b12:	48 89 c3             	mov    %rax,%rbx
   14b15:	e8 86 fc fe ff       	call   47a0 <__cxa_end_catch@plt>
   14b1a:	48 89 d8             	mov    %rbx,%rax
   14b1d:	48 89 c7             	mov    %rax,%rdi
   14b20:	e8 fb fc fe ff       	call   4820 <_Unwind_Resume@plt>
    }
   14b25:	90                   	nop
   14b26:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14b2a:	c9                   	leave
   14b2b:	c3                   	ret

0000000000014b2c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   14b2c:	55                   	push   %rbp
   14b2d:	48 89 e5             	mov    %rsp,%rbp
   14b30:	48 83 ec 20          	sub    $0x20,%rsp
   14b34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14b38:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   14b3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b40:	48 8b 40 08          	mov    0x8(%rax),%rax
   14b44:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   14b48:	48 c1 f8 03          	sar    $0x3,%rax
   14b4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14b50:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14b55:	74 32                	je     14b89 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   14b57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b5b:	48 89 c7             	mov    %rax,%rdi
   14b5e:	e8 17 08 00 00       	call   1537a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14b63:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   14b66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b6a:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14b6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14b72:	48 89 ce             	mov    %rcx,%rsi
   14b75:	48 89 c7             	mov    %rax,%rdi
   14b78:	e8 0b 08 00 00       	call   15388 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   14b7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b81:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14b85:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   14b89:	90                   	nop
   14b8a:	c9                   	leave
   14b8b:	c3                   	ret

0000000000014b8c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>:
      operator[](size_type __n) noexcept
   14b8c:	55                   	push   %rbp
   14b8d:	48 89 e5             	mov    %rsp,%rbp
   14b90:	48 83 ec 10          	sub    $0x10,%rsp
   14b94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14b98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return _AT_Type::_S_ref(_M_elems, __n);
   14b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ba0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14ba4:	48 89 d6             	mov    %rdx,%rsi
   14ba7:	48 89 c7             	mov    %rax,%rdi
   14baa:	e8 54 21 00 00       	call   16d03 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>
      }
   14baf:	c9                   	leave
   14bb0:	c3                   	ret
   14bb1:	90                   	nop

0000000000014bb2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14bb2:	55                   	push   %rbp
   14bb3:	48 89 e5             	mov    %rsp,%rbp
   14bb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bba:	90                   	nop
   14bbb:	5d                   	pop    %rbp
   14bbc:	c3                   	ret
   14bbd:	90                   	nop

0000000000014bbe <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14bbe:	55                   	push   %rbp
   14bbf:	48 89 e5             	mov    %rsp,%rbp
   14bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bc6:	90                   	nop
   14bc7:	5d                   	pop    %rbp
   14bc8:	c3                   	ret
   14bc9:	90                   	nop

0000000000014bca <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   14bca:	55                   	push   %rbp
   14bcb:	48 89 e5             	mov    %rsp,%rbp
   14bce:	48 83 ec 10          	sub    $0x10,%rsp
   14bd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bda:	48 89 c7             	mov    %rax,%rdi
   14bdd:	e8 5a e5 ff ff       	call   1313c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   14be2:	90                   	nop
   14be3:	c9                   	leave
   14be4:	c3                   	ret
   14be5:	90                   	nop

0000000000014be6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14be6:	55                   	push   %rbp
   14be7:	48 89 e5             	mov    %rsp,%rbp
   14bea:	48 83 ec 10          	sub    $0x10,%rsp
   14bee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   14bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bfa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14bfe:	48 89 d6             	mov    %rdx,%rsi
   14c01:	48 89 c7             	mov    %rax,%rdi
   14c04:	e8 1b 21 00 00       	call   16d24 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   14c09:	90                   	nop
   14c0a:	c9                   	leave
   14c0b:	c3                   	ret

0000000000014c0c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   14c0c:	55                   	push   %rbp
   14c0d:	48 89 e5             	mov    %rsp,%rbp
   14c10:	48 83 ec 10          	sub    $0x10,%rsp
   14c14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   14c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c1c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c24:	48 8b 00             	mov    (%rax),%rax
   14c27:	48 29 c2             	sub    %rax,%rdx
   14c2a:	48 c1 fa 04          	sar    $0x4,%rdx
   14c2e:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   14c35:	e3 38 8e 
   14c38:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   14c3c:	48 89 c2             	mov    %rax,%rdx
   14c3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c43:	48 8b 08             	mov    (%rax),%rcx
   14c46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c4a:	48 89 ce             	mov    %rcx,%rsi
   14c4d:	48 89 c7             	mov    %rax,%rdi
   14c50:	e8 01 21 00 00       	call   16d56 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   14c55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c59:	48 89 c7             	mov    %rax,%rdi
   14c5c:	e8 69 ff ff ff       	call   14bca <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   14c61:	90                   	nop
   14c62:	c9                   	leave
   14c63:	c3                   	ret

0000000000014c64 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   14c64:	55                   	push   %rbp
   14c65:	48 89 e5             	mov    %rsp,%rbp
   14c68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c70:	48 8b 00             	mov    (%rax),%rax
   14c73:	5d                   	pop    %rbp
   14c74:	c3                   	ret
   14c75:	90                   	nop

0000000000014c76 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   14c76:	55                   	push   %rbp
   14c77:	48 89 e5             	mov    %rsp,%rbp
   14c7a:	53                   	push   %rbx
   14c7b:	48 83 ec 18          	sub    $0x18,%rsp
   14c7f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c87:	48 89 c7             	mov    %rax,%rdi
   14c8a:	e8 d5 ff ff ff       	call   14c64 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   14c8f:	48 89 c3             	mov    %rax,%rbx
   14c92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c96:	48 89 c7             	mov    %rax,%rdi
   14c99:	e8 ee 20 00 00       	call   16d8c <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   14c9e:	48 89 c2             	mov    %rax,%rdx
   14ca1:	48 89 d0             	mov    %rdx,%rax
   14ca4:	48 c1 e0 03          	shl    $0x3,%rax
   14ca8:	48 01 d0             	add    %rdx,%rax
   14cab:	48 c1 e0 04          	shl    $0x4,%rax
   14caf:	48 01 d8             	add    %rbx,%rax
   14cb2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14cb6:	c9                   	leave
   14cb7:	c3                   	ret

0000000000014cb8 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   14cb8:	55                   	push   %rbp
   14cb9:	48 89 e5             	mov    %rsp,%rbp
   14cbc:	48 83 ec 10          	sub    $0x10,%rsp
   14cc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   14cc8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14ccc:	48 89 c7             	mov    %rax,%rdi
   14ccf:	e8 ca 20 00 00       	call   16d9e <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   14cd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cd8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14cdc:	48 89 d6             	mov    %rdx,%rsi
   14cdf:	48 89 c7             	mov    %rax,%rdi
   14ce2:	e8 c2 20 00 00       	call   16da9 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   14ce7:	c9                   	leave
   14ce8:	c3                   	ret
   14ce9:	90                   	nop

0000000000014cea <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   14cea:	55                   	push   %rbp
   14ceb:	48 89 e5             	mov    %rsp,%rbp
   14cee:	53                   	push   %rbx
   14cef:	48 83 ec 38          	sub    $0x38,%rsp
   14cf3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14cf7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14cfb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   14cff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14d03:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d07:	48 89 d6             	mov    %rdx,%rsi
   14d0a:	48 89 c7             	mov    %rax,%rdi
   14d0d:	e8 a6 ff ff ff       	call   14cb8 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   14d12:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   14d16:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   14d1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d1e:	48 89 c7             	mov    %rax,%rdi
   14d21:	e8 7e 00 00 00       	call   14da4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   14d26:	48 89 c2             	mov    %rax,%rdx
   14d29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d2d:	48 89 d6             	mov    %rdx,%rsi
   14d30:	48 89 c7             	mov    %rax,%rdi
   14d33:	e8 9c 20 00 00       	call   16dd4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   14d38:	48 89 c6             	mov    %rax,%rsi
   14d3b:	48 89 df             	mov    %rbx,%rdi
   14d3e:	e8 f1 20 00 00       	call   16e34 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   14d43:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14d47:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   14d4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d4e:	48 8b 08             	mov    (%rax),%rcx
   14d51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14d55:	48 89 d0             	mov    %rdx,%rax
   14d58:	48 c1 e0 03          	shl    $0x3,%rax
   14d5c:	48 01 d0             	add    %rdx,%rax
   14d5f:	48 c1 e0 04          	shl    $0x4,%rax
   14d63:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   14d67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d6b:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   14d6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d73:	48 89 c7             	mov    %rax,%rdi
   14d76:	e8 29 00 00 00       	call   14da4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   14d7b:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   14d7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d82:	48 8b 10             	mov    (%rax),%rdx
   14d85:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   14d89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d8d:	48 89 c7             	mov    %rax,%rdi
   14d90:	e8 d2 20 00 00       	call   16e67 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   14d95:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14d99:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   14d9d:	90                   	nop
   14d9e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14da2:	c9                   	leave
   14da3:	c3                   	ret

0000000000014da4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   14da4:	55                   	push   %rbp
   14da5:	48 89 e5             	mov    %rsp,%rbp
   14da8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14db0:	5d                   	pop    %rbp
   14db1:	c3                   	ret

0000000000014db2 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   14db2:	55                   	push   %rbp
   14db3:	48 89 e5             	mov    %rsp,%rbp
   14db6:	48 83 ec 20          	sub    $0x20,%rsp
   14dba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14dbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14dc2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   14dc6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dce:	48 89 d6             	mov    %rdx,%rsi
   14dd1:	48 89 c7             	mov    %rax,%rdi
   14dd4:	e8 bf 20 00 00       	call   16e98 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   14dd9:	90                   	nop
   14dda:	c9                   	leave
   14ddb:	c3                   	ret

0000000000014ddc <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14ddc:	55                   	push   %rbp
   14ddd:	48 89 e5             	mov    %rsp,%rbp
   14de0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14de4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14de8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14df0:	48 8b 00             	mov    (%rax),%rax
   14df3:	48 29 c2             	sub    %rax,%rdx
   14df6:	48 c1 fa 04          	sar    $0x4,%rdx
   14dfa:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   14e01:	e3 38 8e 
   14e04:	48 0f af c2          	imul   %rdx,%rax
   14e08:	5d                   	pop    %rbp
   14e09:	c3                   	ret

0000000000014e0a <_ZNSaIP12VkPipeline_TEC1Ev>:
   14e0a:	55                   	push   %rbp
   14e0b:	48 89 e5             	mov    %rsp,%rbp
   14e0e:	48 83 ec 10          	sub    $0x10,%rsp
   14e12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e1a:	48 89 c7             	mov    %rax,%rdi
   14e1d:	e8 9c 20 00 00       	call   16ebe <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   14e22:	90                   	nop
   14e23:	c9                   	leave
   14e24:	c3                   	ret
   14e25:	90                   	nop

0000000000014e26 <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   14e26:	55                   	push   %rbp
   14e27:	48 89 e5             	mov    %rsp,%rbp
   14e2a:	48 83 ec 10          	sub    $0x10,%rsp
   14e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e36:	48 89 c7             	mov    %rax,%rdi
   14e39:	e8 8c 20 00 00       	call   16eca <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   14e3e:	90                   	nop
   14e3f:	c9                   	leave
   14e40:	c3                   	ret
   14e41:	90                   	nop

0000000000014e42 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   14e42:	55                   	push   %rbp
   14e43:	48 89 e5             	mov    %rsp,%rbp
   14e46:	53                   	push   %rbx
   14e47:	48 83 ec 28          	sub    $0x28,%rsp
   14e4b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14e4f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14e53:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   14e57:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   14e5b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14e5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14e63:	48 89 d6             	mov    %rdx,%rsi
   14e66:	48 89 c7             	mov    %rax,%rdi
   14e69:	e8 67 20 00 00       	call   16ed5 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   14e6e:	48 89 c1             	mov    %rax,%rcx
   14e71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e75:	48 89 c2             	mov    %rax,%rdx
   14e78:	48 89 ce             	mov    %rcx,%rsi
   14e7b:	48 89 df             	mov    %rbx,%rdi
   14e7e:	e8 b3 20 00 00       	call   16f36 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   14e83:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14e87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e8b:	48 89 d6             	mov    %rdx,%rsi
   14e8e:	48 89 c7             	mov    %rax,%rdi
   14e91:	e8 fe 20 00 00       	call   16f94 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   14e96:	eb 1a                	jmp    14eb2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   14e98:	48 89 c3             	mov    %rax,%rbx
   14e9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e9f:	48 89 c7             	mov    %rax,%rdi
   14ea2:	e8 59 00 00 00       	call   14f00 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   14ea7:	48 89 d8             	mov    %rbx,%rax
   14eaa:	48 89 c7             	mov    %rax,%rdi
   14ead:	e8 6e f9 fe ff       	call   4820 <_Unwind_Resume@plt>
   14eb2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14eb6:	c9                   	leave
   14eb7:	c3                   	ret

0000000000014eb8 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   14eb8:	55                   	push   %rbp
   14eb9:	48 89 e5             	mov    %rsp,%rbp
   14ebc:	48 83 ec 10          	sub    $0x10,%rsp
   14ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ec8:	48 8b 10             	mov    (%rax),%rdx
   14ecb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ecf:	48 89 d6             	mov    %rdx,%rsi
   14ed2:	48 89 c7             	mov    %rax,%rdi
   14ed5:	e8 fa 20 00 00       	call   16fd4 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   14eda:	c9                   	leave
   14edb:	c3                   	ret

0000000000014edc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   14edc:	55                   	push   %rbp
   14edd:	48 89 e5             	mov    %rsp,%rbp
   14ee0:	48 83 ec 10          	sub    $0x10,%rsp
   14ee4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14eec:	48 8b 10             	mov    (%rax),%rdx
   14eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ef3:	48 89 d6             	mov    %rdx,%rsi
   14ef6:	48 89 c7             	mov    %rax,%rdi
   14ef9:	e8 e8 20 00 00       	call   16fe6 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   14efe:	c9                   	leave
   14eff:	c3                   	ret

0000000000014f00 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   14f00:	55                   	push   %rbp
   14f01:	48 89 e5             	mov    %rsp,%rbp
   14f04:	48 83 ec 10          	sub    $0x10,%rsp
   14f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   14f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f10:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14f14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f18:	48 8b 00             	mov    (%rax),%rax
   14f1b:	48 29 c2             	sub    %rax,%rdx
   14f1e:	48 89 d0             	mov    %rdx,%rax
   14f21:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   14f25:	48 89 c2             	mov    %rax,%rdx
   14f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f2c:	48 8b 08             	mov    (%rax),%rcx
   14f2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f33:	48 89 ce             	mov    %rcx,%rsi
   14f36:	48 89 c7             	mov    %rax,%rdi
   14f39:	e8 e0 20 00 00       	call   1701e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   14f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f42:	48 89 c7             	mov    %rax,%rdi
   14f45:	e8 da e2 ff ff       	call   13224 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   14f4a:	90                   	nop
   14f4b:	c9                   	leave
   14f4c:	c3                   	ret
   14f4d:	90                   	nop

0000000000014f4e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   14f4e:	55                   	push   %rbp
   14f4f:	48 89 e5             	mov    %rsp,%rbp
   14f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f5a:	5d                   	pop    %rbp
   14f5b:	c3                   	ret

0000000000014f5c <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   14f5c:	55                   	push   %rbp
   14f5d:	48 89 e5             	mov    %rsp,%rbp
   14f60:	48 83 ec 20          	sub    $0x20,%rsp
   14f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14f6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   14f70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f78:	48 89 d6             	mov    %rdx,%rsi
   14f7b:	48 89 c7             	mov    %rax,%rdi
   14f7e:	e8 d0 20 00 00       	call   17053 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   14f83:	90                   	nop
   14f84:	c9                   	leave
   14f85:	c3                   	ret

0000000000014f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14f86:	55                   	push   %rbp
   14f87:	48 89 e5             	mov    %rsp,%rbp
   14f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f92:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14f96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f9a:	48 8b 00             	mov    (%rax),%rax
   14f9d:	48 29 c2             	sub    %rax,%rdx
   14fa0:	48 89 d0             	mov    %rdx,%rax
   14fa3:	48 c1 f8 03          	sar    $0x3,%rax
   14fa7:	5d                   	pop    %rbp
   14fa8:	c3                   	ret
   14fa9:	90                   	nop

0000000000014faa <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   14faa:	55                   	push   %rbp
   14fab:	48 89 e5             	mov    %rsp,%rbp
   14fae:	53                   	push   %rbx
   14faf:	48 83 ec 38          	sub    $0x38,%rsp
   14fb3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   14fb7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   14fbb:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   14fc0:	0f 84 e7 01 00 00    	je     151ad <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   14fc6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14fca:	48 89 c7             	mov    %rax,%rdi
   14fcd:	e8 b4 ff ff ff       	call   14f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   14fd2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   14fd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14fda:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   14fde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14fe2:	48 8b 40 08          	mov    0x8(%rax),%rax
   14fe6:	48 29 c2             	sub    %rax,%rdx
   14fe9:	48 89 d0             	mov    %rdx,%rax
   14fec:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   14ff0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   14ff4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ff8:	48 89 c7             	mov    %rax,%rdi
   14ffb:	e8 7a 20 00 00       	call   1707a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   15000:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15004:	72 16                	jb     1501c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   15006:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1500a:	48 89 c7             	mov    %rax,%rdi
   1500d:	e8 68 20 00 00       	call   1707a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   15012:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15016:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1501a:	73 07                	jae    15023 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   1501c:	b8 01 00 00 00       	mov    $0x1,%eax
   15021:	eb 05                	jmp    15028 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   15023:	b8 00 00 00 00       	mov    $0x0,%eax
   15028:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1502a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1502e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   15032:	72 33                	jb     15067 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   15034:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15038:	48 89 c7             	mov    %rax,%rdi
   1503b:	e8 3e 0e 00 00       	call   15e7e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15040:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   15043:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15047:	48 8b 40 08          	mov    0x8(%rax),%rax
   1504b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1504f:	48 89 ce             	mov    %rcx,%rsi
   15052:	48 89 c7             	mov    %rax,%rdi
   15055:	e8 42 20 00 00       	call   1709c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1505a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1505e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   15062:	e9 46 01 00 00       	jmp    151ad <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   15067:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1506b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1506f:	48 8d 15 da a0 00 00 	lea    0xa0da(%rip),%rdx        # 1f150 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   15076:	48 89 ce             	mov    %rcx,%rsi
   15079:	48 89 c7             	mov    %rax,%rdi
   1507c:	e8 45 20 00 00       	call   170c6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   15081:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   15085:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15089:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1508d:	48 89 d6             	mov    %rdx,%rsi
   15090:	48 89 c7             	mov    %rax,%rdi
   15093:	e8 f6 20 00 00       	call   1718e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   15098:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1509c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   150a0:	48 89 c7             	mov    %rax,%rdi
   150a3:	e8 d6 0d 00 00       	call   15e7e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   150a8:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   150ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   150af:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   150b6:	00 
   150b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   150bb:	48 01 c1             	add    %rax,%rcx
   150be:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   150c2:	48 89 c6             	mov    %rax,%rsi
   150c5:	48 89 cf             	mov    %rcx,%rdi
   150c8:	e8 cf 1f 00 00       	call   1709c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   150cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   150d1:	48 89 c7             	mov    %rax,%rdi
   150d4:	e8 a5 0d 00 00       	call   15e7e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   150d9:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   150dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   150e0:	48 8b 70 08          	mov    0x8(%rax),%rsi
   150e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   150e8:	48 8b 00             	mov    (%rax),%rax
   150eb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   150ef:	48 89 c7             	mov    %rax,%rdi
   150f2:	e8 ca 20 00 00       	call   171c1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   150f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   150fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   150ff:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   15103:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15107:	48 8b 12             	mov    (%rdx),%rdx
   1510a:	48 29 d1             	sub    %rdx,%rcx
   1510d:	48 c1 f9 03          	sar    $0x3,%rcx
   15111:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   15114:	48 89 d6             	mov    %rdx,%rsi
   15117:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1511b:	48 8b 0a             	mov    (%rdx),%rcx
   1511e:	48 89 f2             	mov    %rsi,%rdx
   15121:	48 89 ce             	mov    %rcx,%rsi
   15124:	48 89 c7             	mov    %rax,%rdi
   15127:	e8 1c 0d 00 00       	call   15e48 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1512c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15130:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15134:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   15137:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1513b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1513f:	48 01 d0             	add    %rdx,%rax
   15142:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15149:	00 
   1514a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1514e:	48 01 c2             	add    %rax,%rdx
   15151:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15155:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   15159:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1515d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15164:	00 
   15165:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15169:	48 01 c2             	add    %rax,%rdx
   1516c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15170:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   15174:	eb 37                	jmp    151ad <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   15176:	48 89 c7             	mov    %rax,%rdi
   15179:	e8 c2 ef fe ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1517e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15182:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15186:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1518a:	48 89 ce             	mov    %rcx,%rsi
   1518d:	48 89 c7             	mov    %rax,%rdi
   15190:	e8 b3 0c 00 00       	call   15e48 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   15195:	e8 26 f5 fe ff       	call   46c0 <__cxa_rethrow@plt>
		  __catch(...)
   1519a:	48 89 c3             	mov    %rax,%rbx
   1519d:	e8 fe f5 fe ff       	call   47a0 <__cxa_end_catch@plt>
   151a2:	48 89 d8             	mov    %rbx,%rax
   151a5:	48 89 c7             	mov    %rax,%rdi
   151a8:	e8 73 f6 fe ff       	call   4820 <_Unwind_Resume@plt>
    }
   151ad:	90                   	nop
   151ae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   151b2:	c9                   	leave
   151b3:	c3                   	ret

00000000000151b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   151b4:	55                   	push   %rbp
   151b5:	48 89 e5             	mov    %rsp,%rbp
   151b8:	48 83 ec 20          	sub    $0x20,%rsp
   151bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   151c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   151c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151c8:	48 8b 40 08          	mov    0x8(%rax),%rax
   151cc:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   151d0:	48 c1 f8 03          	sar    $0x3,%rax
   151d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   151d8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   151dd:	74 32                	je     15211 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   151df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151e3:	48 89 c7             	mov    %rax,%rdi
   151e6:	e8 93 0c 00 00       	call   15e7e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   151eb:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   151ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151f2:	48 8b 48 08          	mov    0x8(%rax),%rcx
   151f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   151fa:	48 89 ce             	mov    %rcx,%rsi
   151fd:	48 89 c7             	mov    %rax,%rdi
   15200:	e8 87 0c 00 00       	call   15e8c <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   15205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15209:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1520d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   15211:	90                   	nop
   15212:	c9                   	leave
   15213:	c3                   	ret

0000000000015214 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15214:	55                   	push   %rbp
   15215:	48 89 e5             	mov    %rsp,%rbp
   15218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1521c:	90                   	nop
   1521d:	5d                   	pop    %rbp
   1521e:	c3                   	ret
   1521f:	90                   	nop

0000000000015220 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15220:	55                   	push   %rbp
   15221:	48 89 e5             	mov    %rsp,%rbp
   15224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15228:	90                   	nop
   15229:	5d                   	pop    %rbp
   1522a:	c3                   	ret
   1522b:	90                   	nop

000000000001522c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1522c:	55                   	push   %rbp
   1522d:	48 89 e5             	mov    %rsp,%rbp
   15230:	48 83 ec 10          	sub    $0x10,%rsp
   15234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15238:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1523c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15240:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15244:	48 89 d6             	mov    %rdx,%rsi
   15247:	48 89 c7             	mov    %rax,%rdi
   1524a:	e8 a5 1f 00 00       	call   171f4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   1524f:	90                   	nop
   15250:	c9                   	leave
   15251:	c3                   	ret

0000000000015252 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   15252:	55                   	push   %rbp
   15253:	48 89 e5             	mov    %rsp,%rbp
   15256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1525a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1525e:	48 8b 00             	mov    (%rax),%rax
   15261:	5d                   	pop    %rbp
   15262:	c3                   	ret
   15263:	90                   	nop

0000000000015264 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   15264:	55                   	push   %rbp
   15265:	48 89 e5             	mov    %rsp,%rbp
   15268:	53                   	push   %rbx
   15269:	48 83 ec 18          	sub    $0x18,%rsp
   1526d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15271:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15275:	48 89 c7             	mov    %rax,%rdi
   15278:	e8 d5 ff ff ff       	call   15252 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   1527d:	48 89 c3             	mov    %rax,%rbx
   15280:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15284:	48 89 c7             	mov    %rax,%rdi
   15287:	e8 9a 1f 00 00       	call   17226 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   1528c:	48 c1 e0 03          	shl    $0x3,%rax
   15290:	48 01 d8             	add    %rbx,%rax
   15293:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15297:	c9                   	leave
   15298:	c3                   	ret

0000000000015299 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   15299:	55                   	push   %rbp
   1529a:	48 89 e5             	mov    %rsp,%rbp
   1529d:	48 83 ec 10          	sub    $0x10,%rsp
   152a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   152a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   152a9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   152ad:	48 89 c7             	mov    %rax,%rdi
   152b0:	e8 83 1f 00 00       	call   17238 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   152b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   152bd:	48 89 d6             	mov    %rdx,%rsi
   152c0:	48 89 c7             	mov    %rax,%rdi
   152c3:	e8 7b 1f 00 00       	call   17243 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   152c8:	c9                   	leave
   152c9:	c3                   	ret

00000000000152ca <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   152ca:	55                   	push   %rbp
   152cb:	48 89 e5             	mov    %rsp,%rbp
   152ce:	53                   	push   %rbx
   152cf:	48 83 ec 38          	sub    $0x38,%rsp
   152d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   152d7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   152db:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   152df:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   152e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   152e7:	48 89 d6             	mov    %rdx,%rsi
   152ea:	48 89 c7             	mov    %rax,%rdi
   152ed:	e8 a7 ff ff ff       	call   15299 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   152f2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   152f6:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   152fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152fe:	48 89 c7             	mov    %rax,%rdi
   15301:	e8 74 00 00 00       	call   1537a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15306:	48 89 c2             	mov    %rax,%rdx
   15309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1530d:	48 89 d6             	mov    %rdx,%rsi
   15310:	48 89 c7             	mov    %rax,%rdi
   15313:	e8 45 1f 00 00       	call   1725d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   15318:	48 89 c6             	mov    %rax,%rsi
   1531b:	48 89 df             	mov    %rbx,%rdi
   1531e:	e8 7b 19 00 00       	call   16c9e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   15323:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15327:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1532a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1532e:	48 8b 00             	mov    (%rax),%rax
   15331:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15335:	48 c1 e2 03          	shl    $0x3,%rdx
   15339:	48 01 c2             	add    %rax,%rdx
   1533c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15340:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   15344:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15348:	48 89 c7             	mov    %rax,%rdi
   1534b:	e8 2a 00 00 00       	call   1537a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15350:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   15353:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15357:	48 8b 10             	mov    (%rax),%rdx
   1535a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1535e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15362:	48 89 c7             	mov    %rax,%rdi
   15365:	e8 53 1f 00 00       	call   172bd <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   1536a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1536e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   15372:	90                   	nop
   15373:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15377:	c9                   	leave
   15378:	c3                   	ret
   15379:	90                   	nop

000000000001537a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1537a:	55                   	push   %rbp
   1537b:	48 89 e5             	mov    %rsp,%rbp
   1537e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15382:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15386:	5d                   	pop    %rbp
   15387:	c3                   	ret

0000000000015388 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15388:	55                   	push   %rbp
   15389:	48 89 e5             	mov    %rsp,%rbp
   1538c:	48 83 ec 20          	sub    $0x20,%rsp
   15390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15394:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15398:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1539c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   153a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153a4:	48 89 d6             	mov    %rdx,%rsi
   153a7:	48 89 c7             	mov    %rax,%rdi
   153aa:	e8 3f 1f 00 00       	call   172ee <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   153af:	90                   	nop
   153b0:	c9                   	leave
   153b1:	c3                   	ret

00000000000153b2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   153b2:	55                   	push   %rbp
   153b3:	48 89 e5             	mov    %rsp,%rbp
   153b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   153be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   153c2:	5d                   	pop    %rbp
   153c3:	c3                   	ret

00000000000153c4 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   153c4:	55                   	push   %rbp
   153c5:	48 89 e5             	mov    %rsp,%rbp
   153c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   153d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   153d4:	48 8b 10             	mov    (%rax),%rdx
   153d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153db:	48 89 10             	mov    %rdx,(%rax)
   153de:	90                   	nop
   153df:	5d                   	pop    %rbp
   153e0:	c3                   	ret
   153e1:	90                   	nop

00000000000153e2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   153e2:	55                   	push   %rbp
   153e3:	48 89 e5             	mov    %rsp,%rbp
   153e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   153ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ee:	5d                   	pop    %rbp
   153ef:	c3                   	ret

00000000000153f0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   153f0:	55                   	push   %rbp
   153f1:	48 89 e5             	mov    %rsp,%rbp
   153f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   153fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15400:	48 8b 10             	mov    (%rax),%rdx
   15403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15407:	48 89 10             	mov    %rdx,(%rax)
   1540a:	90                   	nop
   1540b:	5d                   	pop    %rbp
   1540c:	c3                   	ret
   1540d:	90                   	nop

000000000001540e <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1540e:	55                   	push   %rbp
   1540f:	48 89 e5             	mov    %rsp,%rbp
   15412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1541a:	5d                   	pop    %rbp
   1541b:	c3                   	ret

000000000001541c <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   1541c:	55                   	push   %rbp
   1541d:	48 89 e5             	mov    %rsp,%rbp
   15420:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   15424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15428:	5d                   	pop    %rbp
   15429:	c3                   	ret

000000000001542a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   1542a:	55                   	push   %rbp
   1542b:	48 89 e5             	mov    %rsp,%rbp
   1542e:	53                   	push   %rbx
   1542f:	48 83 ec 38          	sub    $0x38,%rsp
   15433:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15437:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   1543b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1543f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15443:	48 89 d6             	mov    %rdx,%rsi
   15446:	48 89 c7             	mov    %rax,%rdi
   15449:	e8 c6 1e 00 00       	call   17314 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>
   1544e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   15452:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15456:	48 89 d6             	mov    %rdx,%rsi
   15459:	48 89 c7             	mov    %rax,%rdi
   1545c:	e8 e7 1e 00 00       	call   17348 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   15461:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15465:	48 89 c7             	mov    %rax,%rdi
   15468:	e8 fb 06 ff ff       	call   5b68 <_ZNSaIP17VkCommandBuffer_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   1546d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15471:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15475:	48 89 d6             	mov    %rdx,%rsi
   15478:	48 89 c7             	mov    %rax,%rdi
   1547b:	e8 ee 1e 00 00       	call   1736e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   15480:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15484:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15488:	48 89 d6             	mov    %rdx,%rsi
   1548b:	48 89 c7             	mov    %rax,%rdi
   1548e:	e8 db 1e 00 00       	call   1736e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   15493:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15497:	48 89 c7             	mov    %rax,%rdi
   1549a:	e8 27 09 ff ff       	call   5dc6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1549f:	48 89 c3             	mov    %rax,%rbx
   154a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   154a6:	48 89 c7             	mov    %rax,%rdi
   154a9:	e8 18 09 ff ff       	call   5dc6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   154ae:	48 89 de             	mov    %rbx,%rsi
   154b1:	48 89 c7             	mov    %rax,%rdi
   154b4:	e8 0d 1f 00 00       	call   173c6 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>
      }
   154b9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   154bd:	48 89 c7             	mov    %rax,%rdi
   154c0:	e8 35 07 ff ff       	call   5bfa <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   154c5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   154c9:	c9                   	leave
   154ca:	c3                   	ret
   154cb:	90                   	nop

00000000000154cc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   154cc:	55                   	push   %rbp
   154cd:	48 89 e5             	mov    %rsp,%rbp
   154d0:	53                   	push   %rbx
   154d1:	48 83 ec 38          	sub    $0x38,%rsp
   154d5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   154d9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   154dd:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   154e2:	0f 84 e7 01 00 00    	je     156cf <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   154e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   154ec:	48 89 c7             	mov    %rax,%rdi
   154ef:	e8 20 e6 ff ff       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   154f4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   154f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   154fc:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   15500:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15504:	48 8b 40 08          	mov    0x8(%rax),%rax
   15508:	48 29 c2             	sub    %rax,%rdx
   1550b:	48 89 d0             	mov    %rdx,%rax
   1550e:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15512:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   15516:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1551a:	48 89 c7             	mov    %rax,%rdi
   1551d:	e8 c4 1e 00 00       	call   173e6 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   15522:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15526:	72 16                	jb     1553e <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x72>
   15528:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1552c:	48 89 c7             	mov    %rax,%rdi
   1552f:	e8 b2 1e 00 00       	call   173e6 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   15534:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15538:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1553c:	73 07                	jae    15545 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x79>
   1553e:	b8 01 00 00 00       	mov    $0x1,%eax
   15543:	eb 05                	jmp    1554a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7e>
   15545:	b8 00 00 00 00       	mov    $0x0,%eax
   1554a:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1554c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15550:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   15554:	72 33                	jb     15589 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   15556:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1555a:	48 89 c7             	mov    %rax,%rdi
   1555d:	e8 c8 05 00 00       	call   15b2a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15562:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   15565:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15569:	48 8b 40 08          	mov    0x8(%rax),%rax
   1556d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15571:	48 89 ce             	mov    %rcx,%rsi
   15574:	48 89 c7             	mov    %rax,%rdi
   15577:	e8 8c 1e 00 00       	call   17408 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1557c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15580:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   15584:	e9 46 01 00 00       	jmp    156cf <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   15589:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1558d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15591:	48 8d 15 b8 9b 00 00 	lea    0x9bb8(%rip),%rdx        # 1f150 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   15598:	48 89 ce             	mov    %rcx,%rsi
   1559b:	48 89 c7             	mov    %rax,%rdi
   1559e:	e8 8f 1e 00 00       	call   17432 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>
   155a3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   155a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   155ab:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   155af:	48 89 d6             	mov    %rdx,%rsi
   155b2:	48 89 c7             	mov    %rax,%rdi
   155b5:	e8 40 1f 00 00       	call   174fa <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   155ba:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   155be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   155c2:	48 89 c7             	mov    %rax,%rdi
   155c5:	e8 60 05 00 00       	call   15b2a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   155ca:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   155cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155d1:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   155d8:	00 
   155d9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   155dd:	48 01 c1             	add    %rax,%rcx
   155e0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   155e4:	48 89 c6             	mov    %rax,%rsi
   155e7:	48 89 cf             	mov    %rcx,%rdi
   155ea:	e8 19 1e 00 00       	call   17408 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   155ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   155f3:	48 89 c7             	mov    %rax,%rdi
   155f6:	e8 2f 05 00 00       	call   15b2a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   155fb:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   155fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15602:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15606:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1560a:	48 8b 00             	mov    (%rax),%rax
   1560d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15611:	48 89 c7             	mov    %rax,%rdi
   15614:	e8 14 1f 00 00       	call   1752d <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   15619:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1561d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15621:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   15625:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15629:	48 8b 12             	mov    (%rdx),%rdx
   1562c:	48 29 d1             	sub    %rdx,%rcx
   1562f:	48 c1 f9 03          	sar    $0x3,%rcx
   15633:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   15636:	48 89 d6             	mov    %rdx,%rsi
   15639:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1563d:	48 8b 0a             	mov    (%rdx),%rcx
   15640:	48 89 f2             	mov    %rsi,%rdx
   15643:	48 89 ce             	mov    %rcx,%rsi
   15646:	48 89 c7             	mov    %rax,%rdi
   15649:	e8 96 08 00 00       	call   15ee4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1564e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15652:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15656:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   15659:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1565d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15661:	48 01 d0             	add    %rdx,%rax
   15664:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1566b:	00 
   1566c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15670:	48 01 c2             	add    %rax,%rdx
   15673:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15677:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1567b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1567f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15686:	00 
   15687:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1568b:	48 01 c2             	add    %rax,%rdx
   1568e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15692:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   15696:	eb 37                	jmp    156cf <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   15698:	48 89 c7             	mov    %rax,%rdi
   1569b:	e8 a0 ea fe ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   156a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   156a4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   156a8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   156ac:	48 89 ce             	mov    %rcx,%rsi
   156af:	48 89 c7             	mov    %rax,%rdi
   156b2:	e8 2d 08 00 00       	call   15ee4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   156b7:	e8 04 f0 fe ff       	call   46c0 <__cxa_rethrow@plt>
		  __catch(...)
   156bc:	48 89 c3             	mov    %rax,%rbx
   156bf:	e8 dc f0 fe ff       	call   47a0 <__cxa_end_catch@plt>
   156c4:	48 89 d8             	mov    %rbx,%rax
   156c7:	48 89 c7             	mov    %rax,%rdi
   156ca:	e8 51 f1 fe ff       	call   4820 <_Unwind_Resume@plt>
    }
   156cf:	90                   	nop
   156d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   156d4:	c9                   	leave
   156d5:	c3                   	ret

00000000000156d6 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   156d6:	55                   	push   %rbp
   156d7:	48 89 e5             	mov    %rsp,%rbp
   156da:	48 83 ec 20          	sub    $0x20,%rsp
   156de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   156e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   156e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156ea:	48 8b 40 08          	mov    0x8(%rax),%rax
   156ee:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   156f2:	48 c1 f8 03          	sar    $0x3,%rax
   156f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   156fa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   156ff:	74 32                	je     15733 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   15701:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15705:	48 89 c7             	mov    %rax,%rdi
   15708:	e8 1d 04 00 00       	call   15b2a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1570d:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   15710:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15714:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15718:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1571c:	48 89 ce             	mov    %rcx,%rsi
   1571f:	48 89 c7             	mov    %rax,%rdi
   15722:	e8 11 04 00 00       	call   15b38 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   15727:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1572b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1572f:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   15733:	90                   	nop
   15734:	c9                   	leave
   15735:	c3                   	ret

0000000000015736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   15736:	55                   	push   %rbp
   15737:	48 89 e5             	mov    %rsp,%rbp
   1573a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1573e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15742:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1574a:	48 8b 00             	mov    (%rax),%rax
   1574d:	48 29 c2             	sub    %rax,%rdx
   15750:	48 89 d0             	mov    %rdx,%rax
   15753:	48 c1 f8 03          	sar    $0x3,%rax
   15757:	5d                   	pop    %rbp
   15758:	c3                   	ret
   15759:	90                   	nop

000000000001575a <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1575a:	55                   	push   %rbp
   1575b:	48 89 e5             	mov    %rsp,%rbp
   1575e:	53                   	push   %rbx
   1575f:	48 83 ec 38          	sub    $0x38,%rsp
   15763:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15767:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1576b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15770:	0f 84 e7 01 00 00    	je     1595d <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   15776:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1577a:	48 89 c7             	mov    %rax,%rdi
   1577d:	e8 b4 ff ff ff       	call   15736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   15782:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15786:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1578a:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1578e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15792:	48 8b 40 08          	mov    0x8(%rax),%rax
   15796:	48 29 c2             	sub    %rax,%rdx
   15799:	48 89 d0             	mov    %rdx,%rax
   1579c:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   157a0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   157a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   157a8:	48 89 c7             	mov    %rax,%rdi
   157ab:	e8 b0 1d 00 00       	call   17560 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   157b0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   157b4:	72 16                	jb     157cc <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x72>
   157b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   157ba:	48 89 c7             	mov    %rax,%rdi
   157bd:	e8 9e 1d 00 00       	call   17560 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   157c2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   157c6:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   157ca:	73 07                	jae    157d3 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x79>
   157cc:	b8 01 00 00 00       	mov    $0x1,%eax
   157d1:	eb 05                	jmp    157d8 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7e>
   157d3:	b8 00 00 00 00       	mov    $0x0,%eax
   157d8:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   157da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   157de:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   157e2:	72 33                	jb     15817 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   157e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   157e8:	48 89 c7             	mov    %rax,%rdi
   157eb:	e8 b6 07 00 00       	call   15fa6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   157f0:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   157f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   157f7:	48 8b 40 08          	mov    0x8(%rax),%rax
   157fb:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   157ff:	48 89 ce             	mov    %rcx,%rsi
   15802:	48 89 c7             	mov    %rax,%rdi
   15805:	e8 78 1d 00 00       	call   17582 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1580a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1580e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   15812:	e9 46 01 00 00       	jmp    1595d <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   15817:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1581b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1581f:	48 8d 15 2a 99 00 00 	lea    0x992a(%rip),%rdx        # 1f150 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   15826:	48 89 ce             	mov    %rcx,%rsi
   15829:	48 89 c7             	mov    %rax,%rdi
   1582c:	e8 7b 1d 00 00       	call   175ac <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>
   15831:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   15835:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15839:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1583d:	48 89 d6             	mov    %rdx,%rsi
   15840:	48 89 c7             	mov    %rax,%rdi
   15843:	e8 2c 1e 00 00       	call   17674 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>
   15848:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1584c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15850:	48 89 c7             	mov    %rax,%rdi
   15853:	e8 4e 07 00 00       	call   15fa6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15858:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   1585b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1585f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   15866:	00 
   15867:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1586b:	48 01 c1             	add    %rax,%rcx
   1586e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15872:	48 89 c6             	mov    %rax,%rsi
   15875:	48 89 cf             	mov    %rcx,%rdi
   15878:	e8 05 1d 00 00       	call   17582 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1587d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15881:	48 89 c7             	mov    %rax,%rdi
   15884:	e8 1d 07 00 00       	call   15fa6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15889:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1588c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15890:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15894:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15898:	48 8b 00             	mov    (%rax),%rax
   1589b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1589f:	48 89 c7             	mov    %rax,%rdi
   158a2:	e8 00 1e 00 00       	call   176a7 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   158a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   158ab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   158af:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   158b3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   158b7:	48 8b 12             	mov    (%rdx),%rdx
   158ba:	48 29 d1             	sub    %rdx,%rcx
   158bd:	48 c1 f9 03          	sar    $0x3,%rcx
   158c1:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   158c4:	48 89 d6             	mov    %rdx,%rsi
   158c7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   158cb:	48 8b 0a             	mov    (%rdx),%rcx
   158ce:	48 89 f2             	mov    %rsi,%rdx
   158d1:	48 89 ce             	mov    %rcx,%rsi
   158d4:	48 89 c7             	mov    %rax,%rdi
   158d7:	e8 94 06 00 00       	call   15f70 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   158dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   158e0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   158e4:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   158e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   158eb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   158ef:	48 01 d0             	add    %rdx,%rax
   158f2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   158f9:	00 
   158fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   158fe:	48 01 c2             	add    %rax,%rdx
   15901:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15905:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   15909:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1590d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15914:	00 
   15915:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15919:	48 01 c2             	add    %rax,%rdx
   1591c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15920:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   15924:	eb 37                	jmp    1595d <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   15926:	48 89 c7             	mov    %rax,%rdi
   15929:	e8 12 e8 fe ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1592e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15932:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15936:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1593a:	48 89 ce             	mov    %rcx,%rsi
   1593d:	48 89 c7             	mov    %rax,%rdi
   15940:	e8 2b 06 00 00       	call   15f70 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   15945:	e8 76 ed fe ff       	call   46c0 <__cxa_rethrow@plt>
		  __catch(...)
   1594a:	48 89 c3             	mov    %rax,%rbx
   1594d:	e8 4e ee fe ff       	call   47a0 <__cxa_end_catch@plt>
   15952:	48 89 d8             	mov    %rbx,%rax
   15955:	48 89 c7             	mov    %rax,%rdi
   15958:	e8 c3 ee fe ff       	call   4820 <_Unwind_Resume@plt>
    }
   1595d:	90                   	nop
   1595e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15962:	c9                   	leave
   15963:	c3                   	ret

0000000000015964 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   15964:	55                   	push   %rbp
   15965:	48 89 e5             	mov    %rsp,%rbp
   15968:	48 83 ec 20          	sub    $0x20,%rsp
   1596c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15970:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   15974:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15978:	48 8b 40 08          	mov    0x8(%rax),%rax
   1597c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   15980:	48 c1 f8 03          	sar    $0x3,%rax
   15984:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15988:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1598d:	74 32                	je     159c1 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1598f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15993:	48 89 c7             	mov    %rax,%rdi
   15996:	e8 0b 06 00 00       	call   15fa6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1599b:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1599e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159a2:	48 8b 48 08          	mov    0x8(%rax),%rcx
   159a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   159aa:	48 89 ce             	mov    %rcx,%rsi
   159ad:	48 89 c7             	mov    %rax,%rdi
   159b0:	e8 ff 05 00 00       	call   15fb4 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   159b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   159bd:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   159c1:	90                   	nop
   159c2:	c9                   	leave
   159c3:	c3                   	ret

00000000000159c4 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   159c4:	55                   	push   %rbp
   159c5:	48 89 e5             	mov    %rsp,%rbp
   159c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159cc:	90                   	nop
   159cd:	5d                   	pop    %rbp
   159ce:	c3                   	ret
   159cf:	90                   	nop

00000000000159d0 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   159d0:	55                   	push   %rbp
   159d1:	48 89 e5             	mov    %rsp,%rbp
   159d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159d8:	90                   	nop
   159d9:	5d                   	pop    %rbp
   159da:	c3                   	ret
   159db:	90                   	nop

00000000000159dc <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   159dc:	55                   	push   %rbp
   159dd:	48 89 e5             	mov    %rsp,%rbp
   159e0:	48 83 ec 10          	sub    $0x10,%rsp
   159e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   159ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   159f4:	48 89 d6             	mov    %rdx,%rsi
   159f7:	48 89 c7             	mov    %rax,%rdi
   159fa:	e8 db 1c 00 00       	call   176da <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>
   159ff:	90                   	nop
   15a00:	c9                   	leave
   15a01:	c3                   	ret

0000000000015a02 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   15a02:	55                   	push   %rbp
   15a03:	48 89 e5             	mov    %rsp,%rbp
   15a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a0e:	48 8b 00             	mov    (%rax),%rax
   15a11:	5d                   	pop    %rbp
   15a12:	c3                   	ret
   15a13:	90                   	nop

0000000000015a14 <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   15a14:	55                   	push   %rbp
   15a15:	48 89 e5             	mov    %rsp,%rbp
   15a18:	53                   	push   %rbx
   15a19:	48 83 ec 18          	sub    $0x18,%rsp
   15a1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a25:	48 89 c7             	mov    %rax,%rdi
   15a28:	e8 d5 ff ff ff       	call   15a02 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   15a2d:	48 89 c3             	mov    %rax,%rbx
   15a30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a34:	48 89 c7             	mov    %rax,%rdi
   15a37:	e8 d0 1c 00 00       	call   1770c <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>
   15a3c:	48 c1 e0 03          	shl    $0x3,%rax
   15a40:	48 01 d8             	add    %rbx,%rax
   15a43:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15a47:	c9                   	leave
   15a48:	c3                   	ret

0000000000015a49 <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   15a49:	55                   	push   %rbp
   15a4a:	48 89 e5             	mov    %rsp,%rbp
   15a4d:	48 83 ec 10          	sub    $0x10,%rsp
   15a51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   15a59:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15a5d:	48 89 c7             	mov    %rax,%rdi
   15a60:	e8 b9 1c 00 00       	call   1771e <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   15a65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a69:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15a6d:	48 89 d6             	mov    %rdx,%rsi
   15a70:	48 89 c7             	mov    %rax,%rdi
   15a73:	e8 b1 1c 00 00       	call   17729 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   15a78:	c9                   	leave
   15a79:	c3                   	ret

0000000000015a7a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   15a7a:	55                   	push   %rbp
   15a7b:	48 89 e5             	mov    %rsp,%rbp
   15a7e:	53                   	push   %rbx
   15a7f:	48 83 ec 38          	sub    $0x38,%rsp
   15a83:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15a87:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15a8b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   15a8f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15a93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15a97:	48 89 d6             	mov    %rdx,%rsi
   15a9a:	48 89 c7             	mov    %rax,%rdi
   15a9d:	e8 a7 ff ff ff       	call   15a49 <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   15aa2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   15aa6:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15aaa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15aae:	48 89 c7             	mov    %rax,%rdi
   15ab1:	e8 74 00 00 00       	call   15b2a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15ab6:	48 89 c2             	mov    %rax,%rdx
   15ab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15abd:	48 89 d6             	mov    %rdx,%rsi
   15ac0:	48 89 c7             	mov    %rax,%rdi
   15ac3:	e8 7b 1c 00 00       	call   17743 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   15ac8:	48 89 c6             	mov    %rax,%rsi
   15acb:	48 89 df             	mov    %rbx,%rdi
   15ace:	e8 27 1a 00 00       	call   174fa <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   15ad3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15ad7:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   15ada:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ade:	48 8b 00             	mov    (%rax),%rax
   15ae1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ae5:	48 c1 e2 03          	shl    $0x3,%rdx
   15ae9:	48 01 c2             	add    %rax,%rdx
   15aec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15af0:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   15af4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15af8:	48 89 c7             	mov    %rax,%rdi
   15afb:	e8 2a 00 00 00       	call   15b2a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15b00:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   15b03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15b07:	48 8b 10             	mov    (%rax),%rdx
   15b0a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   15b0e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15b12:	48 89 c7             	mov    %rax,%rdi
   15b15:	e8 89 1c 00 00       	call   177a3 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   15b1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15b1e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   15b22:	90                   	nop
   15b23:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15b27:	c9                   	leave
   15b28:	c3                   	ret
   15b29:	90                   	nop

0000000000015b2a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   15b2a:	55                   	push   %rbp
   15b2b:	48 89 e5             	mov    %rsp,%rbp
   15b2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15b32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b36:	5d                   	pop    %rbp
   15b37:	c3                   	ret

0000000000015b38 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15b38:	55                   	push   %rbp
   15b39:	48 89 e5             	mov    %rsp,%rbp
   15b3c:	48 83 ec 20          	sub    $0x20,%rsp
   15b40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15b48:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15b4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15b50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b54:	48 89 d6             	mov    %rdx,%rsi
   15b57:	48 89 c7             	mov    %rax,%rdi
   15b5a:	e8 75 1c 00 00       	call   177d4 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
   15b5f:	90                   	nop
   15b60:	c9                   	leave
   15b61:	c3                   	ret

0000000000015b62 <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15b62:	55                   	push   %rbp
   15b63:	48 89 e5             	mov    %rsp,%rbp
   15b66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b6a:	90                   	nop
   15b6b:	5d                   	pop    %rbp
   15b6c:	c3                   	ret
   15b6d:	90                   	nop

0000000000015b6e <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15b6e:	55                   	push   %rbp
   15b6f:	48 89 e5             	mov    %rsp,%rbp
   15b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b76:	90                   	nop
   15b77:	5d                   	pop    %rbp
   15b78:	c3                   	ret
   15b79:	90                   	nop

0000000000015b7a <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>:
      struct _Vector_impl
   15b7a:	55                   	push   %rbp
   15b7b:	48 89 e5             	mov    %rsp,%rbp
   15b7e:	48 83 ec 10          	sub    $0x10,%rsp
   15b82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b8a:	48 89 c7             	mov    %rax,%rdi
   15b8d:	e8 9a de ff ff       	call   13a2c <_ZNSaIjED1Ev>
   15b92:	90                   	nop
   15b93:	c9                   	leave
   15b94:	c3                   	ret
   15b95:	90                   	nop

0000000000015b96 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   15b96:	55                   	push   %rbp
   15b97:	48 89 e5             	mov    %rsp,%rbp
   15b9a:	48 83 ec 10          	sub    $0x10,%rsp
   15b9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ba2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   15ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15baa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15bae:	48 89 d6             	mov    %rdx,%rsi
   15bb1:	48 89 c7             	mov    %rax,%rdi
   15bb4:	e8 41 1c 00 00       	call   177fa <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>
   15bb9:	90                   	nop
   15bba:	c9                   	leave
   15bbb:	c3                   	ret

0000000000015bbc <_ZNSt12_Vector_baseIjSaIjEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   15bbc:	55                   	push   %rbp
   15bbd:	48 89 e5             	mov    %rsp,%rbp
   15bc0:	48 83 ec 10          	sub    $0x10,%rsp
   15bc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   15bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bcc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15bd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bd4:	48 8b 00             	mov    (%rax),%rax
   15bd7:	48 29 c2             	sub    %rax,%rdx
   15bda:	48 89 d0             	mov    %rdx,%rax
   15bdd:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   15be1:	48 89 c2             	mov    %rax,%rdx
   15be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15be8:	48 8b 08             	mov    (%rax),%rcx
   15beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bef:	48 89 ce             	mov    %rcx,%rsi
   15bf2:	48 89 c7             	mov    %rax,%rdi
   15bf5:	e8 32 1c 00 00       	call   1782c <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>
      }
   15bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bfe:	48 89 c7             	mov    %rax,%rdi
   15c01:	e8 74 ff ff ff       	call   15b7a <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>
   15c06:	90                   	nop
   15c07:	c9                   	leave
   15c08:	c3                   	ret
   15c09:	90                   	nop

0000000000015c0a <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
   15c0a:	55                   	push   %rbp
   15c0b:	48 89 e5             	mov    %rsp,%rbp
   15c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c16:	48 8b 00             	mov    (%rax),%rax
   15c19:	5d                   	pop    %rbp
   15c1a:	c3                   	ret
   15c1b:	90                   	nop

0000000000015c1c <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
   15c1c:	55                   	push   %rbp
   15c1d:	48 89 e5             	mov    %rsp,%rbp
   15c20:	53                   	push   %rbx
   15c21:	48 83 ec 18          	sub    $0x18,%rsp
   15c25:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15c29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c2d:	48 89 c7             	mov    %rax,%rdi
   15c30:	e8 d5 ff ff ff       	call   15c0a <_ZNKSt16initializer_listIjE5beginEv>
   15c35:	48 89 c3             	mov    %rax,%rbx
   15c38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c3c:	48 89 c7             	mov    %rax,%rdi
   15c3f:	e8 1e 1c 00 00       	call   17862 <_ZNKSt16initializer_listIjE4sizeEv>
   15c44:	48 c1 e0 02          	shl    $0x2,%rax
   15c48:	48 01 d8             	add    %rbx,%rax
   15c4b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15c4f:	c9                   	leave
   15c50:	c3                   	ret

0000000000015c51 <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   15c51:	55                   	push   %rbp
   15c52:	48 89 e5             	mov    %rsp,%rbp
   15c55:	48 83 ec 10          	sub    $0x10,%rsp
   15c59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c5d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   15c61:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15c65:	48 89 c7             	mov    %rax,%rdi
   15c68:	e8 07 1c 00 00       	call   17874 <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   15c6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c71:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15c75:	48 89 d6             	mov    %rdx,%rsi
   15c78:	48 89 c7             	mov    %rax,%rdi
   15c7b:	e8 ff 1b 00 00       	call   1787f <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   15c80:	c9                   	leave
   15c81:	c3                   	ret

0000000000015c82 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   15c82:	55                   	push   %rbp
   15c83:	48 89 e5             	mov    %rsp,%rbp
   15c86:	53                   	push   %rbx
   15c87:	48 83 ec 38          	sub    $0x38,%rsp
   15c8b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15c8f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15c93:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   15c97:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15c9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15c9f:	48 89 d6             	mov    %rdx,%rsi
   15ca2:	48 89 c7             	mov    %rax,%rdi
   15ca5:	e8 a7 ff ff ff       	call   15c51 <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>
   15caa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   15cae:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15cb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15cb6:	48 89 c7             	mov    %rax,%rdi
   15cb9:	e8 74 00 00 00       	call   15d32 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   15cbe:	48 89 c2             	mov    %rax,%rdx
   15cc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15cc5:	48 89 d6             	mov    %rdx,%rsi
   15cc8:	48 89 c7             	mov    %rax,%rdi
   15ccb:	e8 c9 1b 00 00       	call   17899 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>
   15cd0:	48 89 c6             	mov    %rax,%rsi
   15cd3:	48 89 df             	mov    %rbx,%rdi
   15cd6:	e8 1f 1c 00 00       	call   178fa <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>
   15cdb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15cdf:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   15ce2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ce6:	48 8b 00             	mov    (%rax),%rax
   15ce9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ced:	48 c1 e2 02          	shl    $0x2,%rdx
   15cf1:	48 01 c2             	add    %rax,%rdx
   15cf4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15cf8:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   15cfc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d00:	48 89 c7             	mov    %rax,%rdi
   15d03:	e8 2a 00 00 00       	call   15d32 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   15d08:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   15d0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d0f:	48 8b 10             	mov    (%rax),%rdx
   15d12:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   15d16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15d1a:	48 89 c7             	mov    %rax,%rdi
   15d1d:	e8 0b 1c 00 00       	call   1792d <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
   15d22:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15d26:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   15d2a:	90                   	nop
   15d2b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15d2f:	c9                   	leave
   15d30:	c3                   	ret
   15d31:	90                   	nop

0000000000015d32 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   15d32:	55                   	push   %rbp
   15d33:	48 89 e5             	mov    %rsp,%rbp
   15d36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d3e:	5d                   	pop    %rbp
   15d3f:	c3                   	ret

0000000000015d40 <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15d40:	55                   	push   %rbp
   15d41:	48 89 e5             	mov    %rsp,%rbp
   15d44:	48 83 ec 20          	sub    $0x20,%rsp
   15d48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15d50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15d54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d5c:	48 89 d6             	mov    %rdx,%rsi
   15d5f:	48 89 c7             	mov    %rax,%rdi
   15d62:	e8 f7 1b 00 00       	call   1795e <_ZSt8_DestroyIPjEvT_S1_>
    }
   15d67:	90                   	nop
   15d68:	c9                   	leave
   15d69:	c3                   	ret

0000000000015d6a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   15d6a:	55                   	push   %rbp
   15d6b:	48 89 e5             	mov    %rsp,%rbp
   15d6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   15d76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15d7a:	5d                   	pop    %rbp
   15d7b:	c3                   	ret

0000000000015d7c <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   15d7c:	55                   	push   %rbp
   15d7d:	48 89 e5             	mov    %rsp,%rbp
   15d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   15d88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15d8c:	5d                   	pop    %rbp
   15d8d:	c3                   	ret

0000000000015d8e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   15d8e:	55                   	push   %rbp
   15d8f:	48 89 e5             	mov    %rsp,%rbp
   15d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   15d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d9a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15da5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15dac:	00 
   15dad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15db1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15db8:	00 
	{ }
   15db9:	90                   	nop
   15dba:	5d                   	pop    %rbp
   15dbb:	c3                   	ret

0000000000015dbc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   15dbc:	55                   	push   %rbp
   15dbd:	48 89 e5             	mov    %rsp,%rbp
   15dc0:	48 83 ec 20          	sub    $0x20,%rsp
   15dc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15dc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15dcc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   15dd0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15dd5:	74 17                	je     15dee <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   15dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ddb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ddf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15de3:	48 89 ce             	mov    %rcx,%rsi
   15de6:	48 89 c7             	mov    %rax,%rdi
   15de9:	e8 96 1b 00 00       	call   17984 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   15dee:	90                   	nop
   15def:	c9                   	leave
   15df0:	c3                   	ret
   15df1:	90                   	nop

0000000000015df2 <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   15df2:	55                   	push   %rbp
   15df3:	48 89 e5             	mov    %rsp,%rbp
   15df6:	48 83 ec 10          	sub    $0x10,%rsp
   15dfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e02:	48 89 c7             	mov    %rax,%rdi
   15e05:	e8 a8 1b 00 00       	call   179b2 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   15e0a:	90                   	nop
   15e0b:	c9                   	leave
   15e0c:	c3                   	ret
   15e0d:	90                   	nop

0000000000015e0e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   15e0e:	55                   	push   %rbp
   15e0f:	48 89 e5             	mov    %rsp,%rbp
   15e12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   15e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e1a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e25:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15e2c:	00 
   15e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e31:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15e38:	00 
	{ }
   15e39:	90                   	nop
   15e3a:	5d                   	pop    %rbp
   15e3b:	c3                   	ret

0000000000015e3c <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
   15e3c:	55                   	push   %rbp
   15e3d:	48 89 e5             	mov    %rsp,%rbp
   15e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e44:	90                   	nop
   15e45:	5d                   	pop    %rbp
   15e46:	c3                   	ret
   15e47:	90                   	nop

0000000000015e48 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   15e48:	55                   	push   %rbp
   15e49:	48 89 e5             	mov    %rsp,%rbp
   15e4c:	48 83 ec 20          	sub    $0x20,%rsp
   15e50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15e58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   15e5c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15e61:	74 17                	je     15e7a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   15e63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e67:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15e6b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15e6f:	48 89 ce             	mov    %rcx,%rsi
   15e72:	48 89 c7             	mov    %rax,%rdi
   15e75:	e8 43 1b 00 00       	call   179bd <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   15e7a:	90                   	nop
   15e7b:	c9                   	leave
   15e7c:	c3                   	ret
   15e7d:	90                   	nop

0000000000015e7e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   15e7e:	55                   	push   %rbp
   15e7f:	48 89 e5             	mov    %rsp,%rbp
   15e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e8a:	5d                   	pop    %rbp
   15e8b:	c3                   	ret

0000000000015e8c <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15e8c:	55                   	push   %rbp
   15e8d:	48 89 e5             	mov    %rsp,%rbp
   15e90:	48 83 ec 20          	sub    $0x20,%rsp
   15e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15e9c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15ea0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ea8:	48 89 d6             	mov    %rdx,%rsi
   15eab:	48 89 c7             	mov    %rax,%rdi
   15eae:	e8 38 1b 00 00       	call   179eb <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   15eb3:	90                   	nop
   15eb4:	c9                   	leave
   15eb5:	c3                   	ret

0000000000015eb6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   15eb6:	55                   	push   %rbp
   15eb7:	48 89 e5             	mov    %rsp,%rbp
   15eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   15ebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ec2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ecd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15ed4:	00 
   15ed5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ed9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15ee0:	00 
	{ }
   15ee1:	90                   	nop
   15ee2:	5d                   	pop    %rbp
   15ee3:	c3                   	ret

0000000000015ee4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   15ee4:	55                   	push   %rbp
   15ee5:	48 89 e5             	mov    %rsp,%rbp
   15ee8:	48 83 ec 20          	sub    $0x20,%rsp
   15eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ef0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15ef4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   15ef8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15efd:	74 17                	je     15f16 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   15eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f03:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15f07:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15f0b:	48 89 ce             	mov    %rcx,%rsi
   15f0e:	48 89 c7             	mov    %rax,%rdi
   15f11:	e8 fb 1a 00 00       	call   17a11 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
   15f16:	90                   	nop
   15f17:	c9                   	leave
   15f18:	c3                   	ret
   15f19:	90                   	nop

0000000000015f1a <_ZNSaIP9VkFence_TEC1Ev>:
   15f1a:	55                   	push   %rbp
   15f1b:	48 89 e5             	mov    %rsp,%rbp
   15f1e:	48 83 ec 10          	sub    $0x10,%rsp
   15f22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f2a:	48 89 c7             	mov    %rax,%rdi
   15f2d:	e8 0e 1b 00 00       	call   17a40 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>
   15f32:	90                   	nop
   15f33:	c9                   	leave
   15f34:	c3                   	ret
   15f35:	90                   	nop

0000000000015f36 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   15f36:	55                   	push   %rbp
   15f37:	48 89 e5             	mov    %rsp,%rbp
   15f3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   15f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f42:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15f49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f4d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15f54:	00 
   15f55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f59:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15f60:	00 
	{ }
   15f61:	90                   	nop
   15f62:	5d                   	pop    %rbp
   15f63:	c3                   	ret

0000000000015f64 <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>:
   15f64:	55                   	push   %rbp
   15f65:	48 89 e5             	mov    %rsp,%rbp
   15f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f6c:	90                   	nop
   15f6d:	5d                   	pop    %rbp
   15f6e:	c3                   	ret
   15f6f:	90                   	nop

0000000000015f70 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   15f70:	55                   	push   %rbp
   15f71:	48 89 e5             	mov    %rsp,%rbp
   15f74:	48 83 ec 20          	sub    $0x20,%rsp
   15f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15f80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   15f84:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15f89:	74 17                	je     15fa2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   15f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f8f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15f93:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15f97:	48 89 ce             	mov    %rcx,%rsi
   15f9a:	48 89 c7             	mov    %rax,%rdi
   15f9d:	e8 a9 1a 00 00       	call   17a4b <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>
      }
   15fa2:	90                   	nop
   15fa3:	c9                   	leave
   15fa4:	c3                   	ret
   15fa5:	90                   	nop

0000000000015fa6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   15fa6:	55                   	push   %rbp
   15fa7:	48 89 e5             	mov    %rsp,%rbp
   15faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fb2:	5d                   	pop    %rbp
   15fb3:	c3                   	ret

0000000000015fb4 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15fb4:	55                   	push   %rbp
   15fb5:	48 89 e5             	mov    %rsp,%rbp
   15fb8:	48 83 ec 20          	sub    $0x20,%rsp
   15fbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15fc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15fc4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15fc8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fd0:	48 89 d6             	mov    %rdx,%rsi
   15fd3:	48 89 c7             	mov    %rax,%rdi
   15fd6:	e8 9e 1a 00 00       	call   17a79 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>
    }
   15fdb:	90                   	nop
   15fdc:	c9                   	leave
   15fdd:	c3                   	ret

0000000000015fde <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   15fde:	55                   	push   %rbp
   15fdf:	48 89 e5             	mov    %rsp,%rbp
   15fe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15fe6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15fea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15fee:	48 8b 10             	mov    (%rax),%rdx
   15ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ff5:	48 89 10             	mov    %rdx,(%rax)
   15ff8:	90                   	nop
   15ff9:	5d                   	pop    %rbp
   15ffa:	c3                   	ret
   15ffb:	90                   	nop

0000000000015ffc <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15ffc:	55                   	push   %rbp
   15ffd:	48 89 e5             	mov    %rsp,%rbp
   16000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   16004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16008:	5d                   	pop    %rbp
   16009:	c3                   	ret

000000000001600a <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   1600a:	55                   	push   %rbp
   1600b:	48 89 e5             	mov    %rsp,%rbp
   1600e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16016:	48 8b 40 08          	mov    0x8(%rax),%rax
   1601a:	5d                   	pop    %rbp
   1601b:	c3                   	ret

000000000001601c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1601c:	55                   	push   %rbp
   1601d:	48 89 e5             	mov    %rsp,%rbp
   16020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16024:	90                   	nop
   16025:	5d                   	pop    %rbp
   16026:	c3                   	ret

0000000000016027 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   16027:	55                   	push   %rbp
   16028:	48 89 e5             	mov    %rsp,%rbp
   1602b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1602f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   16033:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16037:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1603b:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1603f:	5d                   	pop    %rbp
   16040:	c3                   	ret

0000000000016041 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   16041:	55                   	push   %rbp
   16042:	48 89 e5             	mov    %rsp,%rbp
   16045:	48 83 ec 20          	sub    $0x20,%rsp
   16049:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1604d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16051:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16055:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   16059:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1605d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16065:	48 89 ce             	mov    %rcx,%rsi
   16068:	48 89 c7             	mov    %rax,%rdi
   1606b:	e8 2f 1a 00 00       	call   17a9f <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   16070:	c9                   	leave
   16071:	c3                   	ret

0000000000016072 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   16072:	55                   	push   %rbp
   16073:	48 89 e5             	mov    %rsp,%rbp
   16076:	48 83 ec 10          	sub    $0x10,%rsp
   1607a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1607e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   16082:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1608a:	48 89 d6             	mov    %rdx,%rsi
   1608d:	48 89 c7             	mov    %rax,%rdi
   16090:	e8 3f 1a 00 00       	call   17ad4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   16095:	90                   	nop
   16096:	c9                   	leave
   16097:	c3                   	ret

0000000000016098 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   16098:	55                   	push   %rbp
   16099:	48 89 e5             	mov    %rsp,%rbp
   1609c:	53                   	push   %rbx
   1609d:	48 83 ec 28          	sub    $0x28,%rsp
   160a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   160a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   160a9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   160ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   160b1:	48 89 c6             	mov    %rax,%rsi
   160b4:	bf 08 00 00 00       	mov    $0x8,%edi
   160b9:	e8 51 fa fe ff       	call   5b0f <_ZnwmPv>
   160be:	48 89 c3             	mov    %rax,%rbx
   160c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160c5:	48 89 c7             	mov    %rax,%rdi
   160c8:	e8 53 e0 ff ff       	call   14120 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   160cd:	48 8b 00             	mov    (%rax),%rax
   160d0:	48 89 03             	mov    %rax,(%rbx)
   160d3:	90                   	nop
   160d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   160d8:	c9                   	leave
   160d9:	c3                   	ret

00000000000160da <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   160da:	55                   	push   %rbp
   160db:	48 89 e5             	mov    %rsp,%rbp
   160de:	53                   	push   %rbx
   160df:	48 83 ec 38          	sub    $0x38,%rsp
   160e3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   160e7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   160eb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   160ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160f3:	48 89 c7             	mov    %rax,%rdi
   160f6:	e8 e9 19 00 00       	call   17ae4 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   160fb:	48 89 c3             	mov    %rax,%rbx
   160fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16102:	48 89 c7             	mov    %rax,%rdi
   16105:	e8 e2 c6 ff ff       	call   127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1610a:	48 29 c3             	sub    %rax,%rbx
   1610d:	48 89 da             	mov    %rbx,%rdx
   16110:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16114:	48 39 c2             	cmp    %rax,%rdx
   16117:	0f 92 c0             	setb   %al
   1611a:	84 c0                	test   %al,%al
   1611c:	74 0c                	je     1612a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   1611e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16122:	48 89 c7             	mov    %rax,%rdi
   16125:	e8 a6 e0 fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1612a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1612e:	48 89 c7             	mov    %rax,%rdi
   16131:	e8 b6 c6 ff ff       	call   127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   16136:	48 89 c3             	mov    %rax,%rbx
   16139:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1613d:	48 89 c7             	mov    %rax,%rdi
   16140:	e8 a7 c6 ff ff       	call   127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   16145:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16149:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1614d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16151:	48 89 d6             	mov    %rdx,%rsi
   16154:	48 89 c7             	mov    %rax,%rdi
   16157:	e8 aa 19 00 00       	call   17b06 <_ZSt3maxImERKT_S2_S2_>
   1615c:	48 8b 00             	mov    (%rax),%rax
   1615f:	48 01 d8             	add    %rbx,%rax
   16162:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   16166:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1616a:	48 89 c7             	mov    %rax,%rdi
   1616d:	e8 7a c6 ff ff       	call   127ec <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   16172:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   16176:	72 12                	jb     1618a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   16178:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1617c:	48 89 c7             	mov    %rax,%rdi
   1617f:	e8 60 19 00 00       	call   17ae4 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   16184:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   16188:	73 0e                	jae    16198 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   1618a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1618e:	48 89 c7             	mov    %rax,%rdi
   16191:	e8 4e 19 00 00       	call   17ae4 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   16196:	eb 04                	jmp    1619c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   16198:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1619c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   161a0:	c9                   	leave
   161a1:	c3                   	ret

00000000000161a2 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   161a2:	55                   	push   %rbp
   161a3:	48 89 e5             	mov    %rsp,%rbp
   161a6:	53                   	push   %rbx
   161a7:	48 83 ec 18          	sub    $0x18,%rsp
   161ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   161af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   161b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   161b7:	48 89 c7             	mov    %rax,%rdi
   161ba:	e8 53 df ff ff       	call   14112 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   161bf:	48 8b 18             	mov    (%rax),%rbx
   161c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   161c6:	48 89 c7             	mov    %rax,%rdi
   161c9:	e8 44 df ff ff       	call   14112 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   161ce:	48 8b 00             	mov    (%rax),%rax
   161d1:	48 89 da             	mov    %rbx,%rdx
   161d4:	48 29 c2             	sub    %rax,%rdx
   161d7:	48 89 d0             	mov    %rdx,%rax
   161da:	48 c1 f8 03          	sar    $0x3,%rax
   161de:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   161e2:	c9                   	leave
   161e3:	c3                   	ret

00000000000161e4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   161e4:	55                   	push   %rbp
   161e5:	48 89 e5             	mov    %rsp,%rbp
   161e8:	48 83 ec 20          	sub    $0x20,%rsp
   161ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   161f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   161f8:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   161fc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16200:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16204:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   16208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1620c:	48 89 c7             	mov    %rax,%rdi
   1620f:	e8 1d 19 00 00       	call   17b31 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   16214:	c9                   	leave
   16215:	c3                   	ret

0000000000016216 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   16216:	55                   	push   %rbp
   16217:	48 89 e5             	mov    %rsp,%rbp
   1621a:	48 83 ec 20          	sub    $0x20,%rsp
   1621e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16222:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   16226:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1622a:	48 8b 00             	mov    (%rax),%rax
   1622d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16231:	48 c1 e2 03          	shl    $0x3,%rdx
   16235:	48 f7 da             	neg    %rdx
   16238:	48 01 d0             	add    %rdx,%rax
   1623b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1623f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   16243:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   16247:	48 89 d6             	mov    %rdx,%rsi
   1624a:	48 89 c7             	mov    %rax,%rdi
   1624d:	e8 a2 de ff ff       	call   140f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   16252:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16256:	c9                   	leave
   16257:	c3                   	ret

0000000000016258 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   16258:	55                   	push   %rbp
   16259:	48 89 e5             	mov    %rsp,%rbp
   1625c:	53                   	push   %rbx
   1625d:	48 83 ec 28          	sub    $0x28,%rsp
   16261:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16265:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   16269:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1626d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16271:	48 89 c7             	mov    %rax,%rdi
   16274:	e8 ef e0 ff ff       	call   14368 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   16279:	48 89 c6             	mov    %rax,%rsi
   1627c:	48 89 df             	mov    %rbx,%rdi
   1627f:	e8 10 19 00 00       	call   17b94 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   16284:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16288:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   1628c:	90                   	nop
   1628d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16291:	c9                   	leave
   16292:	c3                   	ret
   16293:	90                   	nop

0000000000016294 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   16294:	55                   	push   %rbp
   16295:	48 89 e5             	mov    %rsp,%rbp
   16298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1629c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162a0:	5d                   	pop    %rbp
   162a1:	c3                   	ret

00000000000162a2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   162a2:	55                   	push   %rbp
   162a3:	48 89 e5             	mov    %rsp,%rbp
   162a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   162aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   162ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   162b2:	8b 10                	mov    (%rax),%edx
   162b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162b8:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   162ba:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   162be:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   162c2:	48 8b 46 04          	mov    0x4(%rsi),%rax
   162c6:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   162ca:	48 89 41 04          	mov    %rax,0x4(%rcx)
   162ce:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   162d2:	48 8b 46 14          	mov    0x14(%rsi),%rax
   162d6:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   162da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   162de:	5d                   	pop    %rbp
   162df:	c3                   	ret

00000000000162e0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   162e0:	55                   	push   %rbp
   162e1:	48 89 e5             	mov    %rsp,%rbp
   162e4:	53                   	push   %rbx
   162e5:	48 83 ec 18          	sub    $0x18,%rsp
   162e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   162ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   162f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   162f5:	48 89 c7             	mov    %rax,%rdi
   162f8:	e8 e9 18 00 00       	call   17be6 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   162fd:	48 89 c3             	mov    %rax,%rbx
   16300:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16304:	48 89 c7             	mov    %rax,%rdi
   16307:	e8 cc 18 00 00       	call   17bd8 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   1630c:	48 89 de             	mov    %rbx,%rsi
   1630f:	48 89 c7             	mov    %rax,%rdi
   16312:	e8 dd 18 00 00       	call   17bf4 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   16317:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1631b:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   1631f:	90                   	nop
   16320:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16324:	c9                   	leave
   16325:	c3                   	ret

0000000000016326 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   16326:	55                   	push   %rbp
   16327:	48 89 e5             	mov    %rsp,%rbp
   1632a:	48 83 ec 10          	sub    $0x10,%rsp
   1632e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   16332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16336:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1633a:	84 c0                	test   %al,%al
   1633c:	74 0c                	je     1634a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   1633e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16342:	48 89 c7             	mov    %rax,%rdi
   16345:	e8 04 19 00 00       	call   17c4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   1634a:	90                   	nop
   1634b:	c9                   	leave
   1634c:	c3                   	ret
   1634d:	90                   	nop

000000000001634e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1634e:	55                   	push   %rbp
   1634f:	48 89 e5             	mov    %rsp,%rbp
   16352:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16356:	90                   	nop
   16357:	5d                   	pop    %rbp
   16358:	c3                   	ret

0000000000016359 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   16359:	55                   	push   %rbp
   1635a:	48 89 e5             	mov    %rsp,%rbp
   1635d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   16361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16365:	48 8b 40 18          	mov    0x18(%rax),%rax
   16369:	5d                   	pop    %rbp
   1636a:	c3                   	ret

000000000001636b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1636b:	55                   	push   %rbp
   1636c:	48 89 e5             	mov    %rsp,%rbp
   1636f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   16373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16377:	48 8b 40 10          	mov    0x10(%rax),%rax
   1637b:	5d                   	pop    %rbp
   1637c:	c3                   	ret
   1637d:	90                   	nop

000000000001637e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1637e:	55                   	push   %rbp
   1637f:	48 89 e5             	mov    %rsp,%rbp
   16382:	48 83 ec 10          	sub    $0x10,%rsp
   16386:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1638a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   1638e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16396:	48 89 d6             	mov    %rdx,%rsi
   16399:	48 89 c7             	mov    %rax,%rdi
   1639c:	e8 c1 18 00 00       	call   17c62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   163a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   163a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163a9:	48 89 d6             	mov    %rdx,%rsi
   163ac:	48 89 c7             	mov    %rax,%rdi
   163af:	e8 ec 18 00 00       	call   17ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   163b4:	90                   	nop
   163b5:	c9                   	leave
   163b6:	c3                   	ret
   163b7:	90                   	nop

00000000000163b8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   163b8:	55                   	push   %rbp
   163b9:	48 89 e5             	mov    %rsp,%rbp
   163bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   163c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163c4:	48 8b 40 10          	mov    0x10(%rax),%rax
   163c8:	5d                   	pop    %rbp
   163c9:	c3                   	ret

00000000000163ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   163ca:	55                   	push   %rbp
   163cb:	48 89 e5             	mov    %rsp,%rbp
   163ce:	53                   	push   %rbx
   163cf:	48 83 ec 18          	sub    $0x18,%rsp
   163d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   163d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   163db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163df:	48 89 c7             	mov    %rax,%rdi
   163e2:	e8 ef 18 00 00       	call   17cd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   163e7:	48 89 c3             	mov    %rax,%rbx
   163ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163ee:	48 89 c7             	mov    %rax,%rdi
   163f1:	e8 40 e1 ff ff       	call   14536 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   163f6:	48 89 c6             	mov    %rax,%rsi
   163f9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   163fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16401:	48 89 d1             	mov    %rdx,%rcx
   16404:	48 89 da             	mov    %rbx,%rdx
   16407:	48 89 c7             	mov    %rax,%rdi
   1640a:	e8 d9 18 00 00       	call   17ce8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   1640f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16413:	c9                   	leave
   16414:	c3                   	ret
   16415:	90                   	nop

0000000000016416 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   16416:	55                   	push   %rbp
   16417:	48 89 e5             	mov    %rsp,%rbp
   1641a:	48 83 ec 20          	sub    $0x20,%rsp
   1641e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   16422:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16426:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1642a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1642e:	48 89 d6             	mov    %rdx,%rsi
   16431:	48 89 c7             	mov    %rax,%rdi
   16434:	e8 39 06 00 00       	call   16a72 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   16439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1643d:	c9                   	leave
   1643e:	c3                   	ret
   1643f:	90                   	nop

0000000000016440 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   16440:	55                   	push   %rbp
   16441:	48 89 e5             	mov    %rsp,%rbp
   16444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   16448:	90                   	nop
   16449:	5d                   	pop    %rbp
   1644a:	c3                   	ret
   1644b:	90                   	nop

000000000001644c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   1644c:	55                   	push   %rbp
   1644d:	48 89 e5             	mov    %rsp,%rbp
   16450:	48 83 ec 10          	sub    $0x10,%rsp
   16454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   16458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1645c:	48 83 c0 20          	add    $0x20,%rax
   16460:	48 89 c7             	mov    %rax,%rdi
   16463:	e8 16 19 00 00       	call   17d7e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   16468:	c9                   	leave
   16469:	c3                   	ret

000000000001646a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   1646a:	55                   	push   %rbp
   1646b:	48 89 e5             	mov    %rsp,%rbp
   1646e:	48 83 ec 10          	sub    $0x10,%rsp
   16472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16476:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   1647a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1647e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16482:	48 89 d6             	mov    %rdx,%rsi
   16485:	48 89 c7             	mov    %rax,%rdi
   16488:	e8 a3 db fe ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   1648d:	c1 e8 1f             	shr    $0x1f,%eax
   16490:	c9                   	leave
   16491:	c3                   	ret

0000000000016492 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   16492:	55                   	push   %rbp
   16493:	48 89 e5             	mov    %rsp,%rbp
   16496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1649a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1649e:	5d                   	pop    %rbp
   1649f:	c3                   	ret

00000000000164a0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   164a0:	55                   	push   %rbp
   164a1:	48 89 e5             	mov    %rsp,%rbp
   164a4:	53                   	push   %rbx
   164a5:	48 83 ec 18          	sub    $0x18,%rsp
   164a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   164ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   164b1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   164b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   164b9:	48 89 c7             	mov    %rax,%rdi
   164bc:	e8 d1 ff ff ff       	call   16492 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   164c1:	48 89 c6             	mov    %rax,%rsi
   164c4:	48 89 df             	mov    %rbx,%rdi
   164c7:	e8 cc 18 00 00       	call   17d98 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   164cc:	90                   	nop
   164cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   164d1:	c9                   	leave
   164d2:	c3                   	ret

00000000000164d3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   164d3:	55                   	push   %rbp
   164d4:	48 89 e5             	mov    %rsp,%rbp
   164d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   164db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164df:	5d                   	pop    %rbp
   164e0:	c3                   	ret

00000000000164e1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   164e1:	55                   	push   %rbp
   164e2:	48 89 e5             	mov    %rsp,%rbp
   164e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   164e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164ed:	5d                   	pop    %rbp
   164ee:	c3                   	ret

00000000000164ef <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   164ef:	55                   	push   %rbp
   164f0:	48 89 e5             	mov    %rsp,%rbp
   164f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   164f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164fb:	5d                   	pop    %rbp
   164fc:	c3                   	ret
   164fd:	90                   	nop

00000000000164fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   164fe:	55                   	push   %rbp
   164ff:	48 89 e5             	mov    %rsp,%rbp
   16502:	41 54                	push   %r12
   16504:	53                   	push   %rbx
   16505:	48 83 ec 30          	sub    $0x30,%rsp
   16509:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1650d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16511:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16515:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   16519:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   1651d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16521:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16525:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   16528:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1652c:	48 89 c7             	mov    %rax,%rdi
   1652f:	e8 bb ff ff ff       	call   164ef <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   16534:	49 89 c4             	mov    %rax,%r12
   16537:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1653b:	48 89 c7             	mov    %rax,%rdi
   1653e:	e8 9e ff ff ff       	call   164e1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   16543:	48 89 c3             	mov    %rax,%rbx
   16546:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1654a:	48 89 c7             	mov    %rax,%rdi
   1654d:	e8 81 ff ff ff       	call   164d3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   16552:	48 89 c6             	mov    %rax,%rsi
   16555:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16559:	4c 89 e1             	mov    %r12,%rcx
   1655c:	48 89 da             	mov    %rbx,%rdx
   1655f:	48 89 c7             	mov    %rax,%rdi
   16562:	e8 65 18 00 00       	call   17dcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   16567:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1656b:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   1656f:	90                   	nop
   16570:	48 83 c4 30          	add    $0x30,%rsp
   16574:	5b                   	pop    %rbx
   16575:	41 5c                	pop    %r12
   16577:	5d                   	pop    %rbp
   16578:	c3                   	ret
   16579:	90                   	nop

000000000001657a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   1657a:	55                   	push   %rbp
   1657b:	48 89 e5             	mov    %rsp,%rbp
   1657e:	48 83 ec 10          	sub    $0x10,%rsp
   16582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   16586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1658a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1658e:	48 85 c0             	test   %rax,%rax
   16591:	74 1a                	je     165ad <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   16593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16597:	48 8b 00             	mov    (%rax),%rax
   1659a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1659e:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   165a2:	48 89 d6             	mov    %rdx,%rsi
   165a5:	48 89 c7             	mov    %rax,%rdi
   165a8:	e8 d1 fd ff ff       	call   1637e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   165ad:	90                   	nop
   165ae:	c9                   	leave
   165af:	c3                   	ret

00000000000165b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   165b0:	55                   	push   %rbp
   165b1:	48 89 e5             	mov    %rsp,%rbp
   165b4:	53                   	push   %rbx
   165b5:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   165bc:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   165c3:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   165ca:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   165d1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   165d8:	48 89 c7             	mov    %rax,%rdi
   165db:	e8 68 18 00 00       	call   17e48 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   165e0:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   165e7:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   165ee:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   165f5:	48 89 c7             	mov    %rax,%rdi
   165f8:	e8 d9 16 00 00       	call   17cd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   165fd:	48 39 c3             	cmp    %rax,%rbx
   16600:	0f 94 c0             	sete   %al
   16603:	84 c0                	test   %al,%al
   16605:	0f 84 c8 00 00 00    	je     166d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   1660b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16612:	48 89 c7             	mov    %rax,%rdi
   16615:	e8 56 18 00 00       	call   17e70 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   1661a:	48 85 c0             	test   %rax,%rax
   1661d:	74 44                	je     16663 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   1661f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   16626:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1662d:	48 89 c7             	mov    %rax,%rdi
   16630:	e8 4d 18 00 00       	call   17e82 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   16635:	48 8b 00             	mov    (%rax),%rax
   16638:	48 89 c7             	mov    %rax,%rdi
   1663b:	e8 54 18 00 00       	call   17e94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   16640:	48 89 c1             	mov    %rax,%rcx
   16643:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1664a:	48 89 c2             	mov    %rax,%rdx
   1664d:	48 89 ce             	mov    %rcx,%rsi
   16650:	48 89 df             	mov    %rbx,%rdi
   16653:	e8 c0 df ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   16658:	84 c0                	test   %al,%al
   1665a:	74 07                	je     16663 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   1665c:	b8 01 00 00 00       	mov    $0x1,%eax
   16661:	eb 05                	jmp    16668 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   16663:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   16668:	84 c0                	test   %al,%al
   1666a:	74 49                	je     166b5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   1666c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16673:	48 89 c7             	mov    %rax,%rdi
   16676:	e8 07 18 00 00       	call   17e82 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1667b:	48 89 c2             	mov    %rax,%rdx
   1667e:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   16685:	00 00 00 00 
   16689:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   16690:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   16697:	48 89 ce             	mov    %rcx,%rsi
   1669a:	48 89 c7             	mov    %rax,%rdi
   1669d:	e8 0c 18 00 00       	call   17eae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   166a2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   166a9:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   166b0:	e9 43 03 00 00       	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   166b5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   166bc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   166c3:	48 89 d6             	mov    %rdx,%rsi
   166c6:	48 89 c7             	mov    %rax,%rdi
   166c9:	e8 10 18 00 00       	call   17ede <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   166ce:	e9 25 03 00 00       	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   166d3:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   166da:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   166e1:	48 89 c7             	mov    %rax,%rdi
   166e4:	e8 ab 17 00 00       	call   17e94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   166e9:	48 89 c2             	mov    %rax,%rdx
   166ec:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   166f3:	48 89 c6             	mov    %rax,%rsi
   166f6:	48 89 df             	mov    %rbx,%rdi
   166f9:	e8 1a df ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   166fe:	84 c0                	test   %al,%al
   16700:	0f 84 66 01 00 00    	je     1686c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   16706:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1670d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   16714:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1671b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16722:	48 89 c7             	mov    %rax,%rdi
   16725:	e8 2a 19 00 00       	call   18054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1672a:	48 8b 00             	mov    (%rax),%rax
   1672d:	48 39 c3             	cmp    %rax,%rbx
   16730:	0f 94 c0             	sete   %al
   16733:	84 c0                	test   %al,%al
   16735:	74 4c                	je     16783 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   16737:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1673e:	48 89 c7             	mov    %rax,%rdi
   16741:	e8 0e 19 00 00       	call   18054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   16746:	48 89 c3             	mov    %rax,%rbx
   16749:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16750:	48 89 c7             	mov    %rax,%rdi
   16753:	e8 fc 18 00 00       	call   18054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   16758:	48 89 c1             	mov    %rax,%rcx
   1675b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   16762:	48 89 da             	mov    %rbx,%rdx
   16765:	48 89 ce             	mov    %rcx,%rsi
   16768:	48 89 c7             	mov    %rax,%rdi
   1676b:	e8 f6 18 00 00       	call   18066 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   16770:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   16777:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1677e:	e9 75 02 00 00       	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   16783:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1678a:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   16791:	48 89 c7             	mov    %rax,%rdi
   16794:	e8 11 19 00 00       	call   180aa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   16799:	48 8b 00             	mov    (%rax),%rax
   1679c:	48 89 c7             	mov    %rax,%rdi
   1679f:	e8 f0 16 00 00       	call   17e94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   167a4:	48 89 c1             	mov    %rax,%rcx
   167a7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   167ae:	48 89 c2             	mov    %rax,%rdx
   167b1:	48 89 ce             	mov    %rcx,%rsi
   167b4:	48 89 df             	mov    %rbx,%rdi
   167b7:	e8 5c de ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   167bc:	84 c0                	test   %al,%al
   167be:	0f 84 8a 00 00 00    	je     1684e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   167c4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   167cb:	48 89 c7             	mov    %rax,%rdi
   167ce:	e8 86 fb ff ff       	call   16359 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   167d3:	48 85 c0             	test   %rax,%rax
   167d6:	0f 94 c0             	sete   %al
   167d9:	84 c0                	test   %al,%al
   167db:	74 3e                	je     1681b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   167dd:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   167e4:	00 00 00 00 
   167e8:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   167ef:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   167f6:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   167fd:	48 89 ce             	mov    %rcx,%rsi
   16800:	48 89 c7             	mov    %rax,%rdi
   16803:	e8 a6 16 00 00       	call   17eae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   16808:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1680f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   16816:	e9 dd 01 00 00       	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   1681b:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   16822:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   16829:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   16830:	48 89 ce             	mov    %rcx,%rsi
   16833:	48 89 c7             	mov    %rax,%rdi
   16836:	e8 2b 18 00 00       	call   18066 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1683b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   16842:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   16849:	e9 aa 01 00 00       	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1684e:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   16855:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1685c:	48 89 d6             	mov    %rdx,%rsi
   1685f:	48 89 c7             	mov    %rax,%rdi
   16862:	e8 77 16 00 00       	call   17ede <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   16867:	e9 8c 01 00 00       	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   1686c:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   16873:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1687a:	48 89 c7             	mov    %rax,%rdi
   1687d:	e8 12 16 00 00       	call   17e94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   16882:	48 89 c1             	mov    %rax,%rcx
   16885:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1688c:	48 89 c2             	mov    %rax,%rdx
   1688f:	48 89 ce             	mov    %rcx,%rsi
   16892:	48 89 df             	mov    %rbx,%rdi
   16895:	e8 7e dd ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1689a:	84 c0                	test   %al,%al
   1689c:	0f 84 2c 01 00 00    	je     169ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   168a2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   168a9:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   168b0:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   168b7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   168be:	48 89 c7             	mov    %rax,%rdi
   168c1:	e8 bc 15 00 00       	call   17e82 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   168c6:	48 8b 00             	mov    (%rax),%rax
   168c9:	48 39 c3             	cmp    %rax,%rbx
   168cc:	0f 94 c0             	sete   %al
   168cf:	84 c0                	test   %al,%al
   168d1:	74 3a                	je     1690d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   168d3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   168da:	48 89 c7             	mov    %rax,%rdi
   168dd:	e8 a0 15 00 00       	call   17e82 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   168e2:	48 89 c2             	mov    %rax,%rdx
   168e5:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   168ec:	00 
   168ed:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   168f1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   168f5:	48 89 ce             	mov    %rcx,%rsi
   168f8:	48 89 c7             	mov    %rax,%rdi
   168fb:	e8 ae 15 00 00       	call   17eae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   16900:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   16904:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   16908:	e9 eb 00 00 00       	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   1690d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   16914:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   1691b:	48 89 c7             	mov    %rax,%rdi
   1691e:	e8 af 17 00 00       	call   180d2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   16923:	48 8b 00             	mov    (%rax),%rax
   16926:	48 89 c7             	mov    %rax,%rdi
   16929:	e8 66 15 00 00       	call   17e94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1692e:	48 89 c2             	mov    %rax,%rdx
   16931:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   16938:	48 89 c6             	mov    %rax,%rsi
   1693b:	48 89 df             	mov    %rbx,%rdi
   1693e:	e8 d5 dc ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   16943:	84 c0                	test   %al,%al
   16945:	74 6c                	je     169b3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   16947:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1694e:	48 89 c7             	mov    %rax,%rdi
   16951:	e8 03 fa ff ff       	call   16359 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   16956:	48 85 c0             	test   %rax,%rax
   16959:	0f 94 c0             	sete   %al
   1695c:	84 c0                	test   %al,%al
   1695e:	74 2c                	je     1698c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   16960:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   16967:	00 
   16968:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1696f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   16973:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   16977:	48 89 ce             	mov    %rcx,%rsi
   1697a:	48 89 c7             	mov    %rax,%rdi
   1697d:	e8 2c 15 00 00       	call   17eae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   16982:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   16986:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1698a:	eb 6c                	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   1698c:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   16993:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   1699a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1699e:	48 89 ce             	mov    %rcx,%rsi
   169a1:	48 89 c7             	mov    %rax,%rdi
   169a4:	e8 bd 16 00 00       	call   18066 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   169a9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   169ad:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   169b1:	eb 45                	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   169b3:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   169ba:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   169c1:	48 89 d6             	mov    %rdx,%rsi
   169c4:	48 89 c7             	mov    %rax,%rdi
   169c7:	e8 12 15 00 00       	call   17ede <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   169cc:	eb 2a                	jmp    169f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   169ce:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   169d5:	00 
   169d6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   169da:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   169e1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   169e5:	48 89 ce             	mov    %rcx,%rsi
   169e8:	48 89 c7             	mov    %rax,%rdi
   169eb:	e8 be 14 00 00       	call   17eae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   169f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   169f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   169f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   169fc:	c9                   	leave
   169fd:	c3                   	ret

00000000000169fe <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   169fe:	55                   	push   %rbp
   169ff:	48 89 e5             	mov    %rsp,%rbp
   16a02:	48 83 ec 10          	sub    $0x10,%rsp
   16a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   16a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a0e:	48 8b 40 08          	mov    0x8(%rax),%rax
   16a12:	48 89 c7             	mov    %rax,%rdi
   16a15:	e8 e0 16 00 00       	call   180fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   16a1a:	c9                   	leave
   16a1b:	c3                   	ret

0000000000016a1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   16a1c:	55                   	push   %rbp
   16a1d:	48 89 e5             	mov    %rsp,%rbp
   16a20:	48 83 ec 30          	sub    $0x30,%rsp
   16a24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16a28:	48 89 d1             	mov    %rdx,%rcx
   16a2b:	48 89 f0             	mov    %rsi,%rax
   16a2e:	48 89 fa             	mov    %rdi,%rdx
   16a31:	48 89 ca             	mov    %rcx,%rdx
   16a34:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16a38:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   16a3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a40:	48 8b 00             	mov    (%rax),%rax
   16a43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16a47:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   16a4b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16a4f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   16a53:	48 89 c7             	mov    %rax,%rdi
   16a56:	e8 cb 16 00 00       	call   18126 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   16a5b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   16a5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a63:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   16a6a:	00 
	  return __it;
   16a6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   16a6f:	c9                   	leave
   16a70:	c3                   	ret
   16a71:	90                   	nop

0000000000016a72 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   16a72:	55                   	push   %rbp
   16a73:	48 89 e5             	mov    %rsp,%rbp
   16a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   16a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16a86:	48 89 10             	mov    %rdx,(%rax)
   16a89:	90                   	nop
   16a8a:	5d                   	pop    %rbp
   16a8b:	c3                   	ret

0000000000016a8c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   16a8c:	55                   	push   %rbp
   16a8d:	48 89 e5             	mov    %rsp,%rbp
   16a90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   16a98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16a9c:	48 8b 10             	mov    (%rax),%rdx
   16a9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16aa3:	48 89 10             	mov    %rdx,(%rax)
   16aa6:	90                   	nop
   16aa7:	5d                   	pop    %rbp
   16aa8:	c3                   	ret
   16aa9:	90                   	nop

0000000000016aaa <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   16aaa:	55                   	push   %rbp
   16aab:	48 89 e5             	mov    %rsp,%rbp
   16aae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   16ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ab6:	5d                   	pop    %rbp
   16ab7:	c3                   	ret

0000000000016ab8 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   16ab8:	55                   	push   %rbp
   16ab9:	48 89 e5             	mov    %rsp,%rbp
   16abc:	48 83 ec 10          	sub    $0x10,%rsp
   16ac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ac4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   16ac8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16acc:	48 89 c7             	mov    %rax,%rdi
   16acf:	e8 16 17 00 00       	call   181ea <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16ad4:	48 89 c2             	mov    %rax,%rdx
   16ad7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16adb:	48 89 d6             	mov    %rdx,%rsi
   16ade:	48 89 c7             	mov    %rax,%rdi
   16ae1:	e8 f8 3d ff ff       	call   a8de <_ZNSaIP9VkImage_TEC1ERKS1_>
   16ae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16aea:	c9                   	leave
   16aeb:	c3                   	ret

0000000000016aec <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16aec:	55                   	push   %rbp
   16aed:	48 89 e5             	mov    %rsp,%rbp
   16af0:	48 83 ec 10          	sub    $0x10,%rsp
   16af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16af8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   16afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b00:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16b04:	48 89 d6             	mov    %rdx,%rsi
   16b07:	48 89 c7             	mov    %rax,%rdi
   16b0a:	e8 e9 16 00 00       	call   181f8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   16b0f:	90                   	nop
   16b10:	c9                   	leave
   16b11:	c3                   	ret

0000000000016b12 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   16b12:	55                   	push   %rbp
   16b13:	48 89 e5             	mov    %rsp,%rbp
   16b16:	48 83 ec 30          	sub    $0x30,%rsp
   16b1a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16b1e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   16b22:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16b26:	48 89 c7             	mov    %rax,%rdi
   16b29:	e8 32 52 ff ff       	call   bd60 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   16b2e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16b32:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16b36:	48 89 d6             	mov    %rdx,%rsi
   16b39:	48 89 c7             	mov    %rax,%rdi
   16b3c:	e8 dd 16 00 00       	call   1821e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   16b41:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16b45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b49:	48 89 d6             	mov    %rdx,%rsi
   16b4c:	48 89 c7             	mov    %rax,%rdi
   16b4f:	e8 ca 16 00 00       	call   1821e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   16b54:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   16b58:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16b5c:	48 89 d6             	mov    %rdx,%rsi
   16b5f:	48 89 c7             	mov    %rax,%rdi
   16b62:	e8 b7 16 00 00       	call   1821e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   16b67:	90                   	nop
   16b68:	c9                   	leave
   16b69:	c3                   	ret

0000000000016b6a <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   16b6a:	55                   	push   %rbp
   16b6b:	48 89 e5             	mov    %rsp,%rbp
   16b6e:	48 83 ec 10          	sub    $0x10,%rsp
   16b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   16b7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16b7e:	48 89 c7             	mov    %rax,%rdi
   16b81:	e8 d5 16 00 00       	call   1825b <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   16b86:	90                   	nop
   16b87:	c9                   	leave
   16b88:	c3                   	ret
   16b89:	90                   	nop

0000000000016b8a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   16b8a:	55                   	push   %rbp
   16b8b:	48 89 e5             	mov    %rsp,%rbp
   16b8e:	48 83 ec 10          	sub    $0x10,%rsp
   16b92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   16b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b9a:	48 89 c7             	mov    %rax,%rdi
   16b9d:	e8 0a 17 00 00       	call   182ac <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16ba2:	48 89 c7             	mov    %rax,%rdi
   16ba5:	e8 bf 16 00 00       	call   18269 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   16baa:	c9                   	leave
   16bab:	c3                   	ret

0000000000016bac <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   16bac:	55                   	push   %rbp
   16bad:	48 89 e5             	mov    %rsp,%rbp
   16bb0:	48 83 ec 20          	sub    $0x20,%rsp
   16bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16bb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16bbc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   16bc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bc8:	48 89 d6             	mov    %rdx,%rsi
   16bcb:	48 89 c7             	mov    %rax,%rdi
   16bce:	e8 e7 16 00 00       	call   182ba <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   16bd3:	c9                   	leave
   16bd4:	c3                   	ret
   16bd5:	90                   	nop

0000000000016bd6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   16bd6:	55                   	push   %rbp
   16bd7:	48 89 e5             	mov    %rsp,%rbp
   16bda:	53                   	push   %rbx
   16bdb:	48 83 ec 38          	sub    $0x38,%rsp
   16bdf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16be3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16be7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   16beb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16bef:	48 89 c7             	mov    %rax,%rdi
   16bf2:	e8 93 ff ff ff       	call   16b8a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   16bf7:	48 89 c3             	mov    %rax,%rbx
   16bfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16bfe:	48 89 c7             	mov    %rax,%rdi
   16c01:	e8 ca c7 ff ff       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   16c06:	48 29 c3             	sub    %rax,%rbx
   16c09:	48 89 da             	mov    %rbx,%rdx
   16c0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16c10:	48 39 c2             	cmp    %rax,%rdx
   16c13:	0f 92 c0             	setb   %al
   16c16:	84 c0                	test   %al,%al
   16c18:	74 0c                	je     16c26 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   16c1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c1e:	48 89 c7             	mov    %rax,%rdi
   16c21:	e8 aa d5 fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   16c26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16c2a:	48 89 c7             	mov    %rax,%rdi
   16c2d:	e8 9e c7 ff ff       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   16c32:	48 89 c3             	mov    %rax,%rbx
   16c35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16c39:	48 89 c7             	mov    %rax,%rdi
   16c3c:	e8 8f c7 ff ff       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   16c41:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16c45:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   16c49:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16c4d:	48 89 d6             	mov    %rdx,%rsi
   16c50:	48 89 c7             	mov    %rax,%rdi
   16c53:	e8 ae 0e 00 00       	call   17b06 <_ZSt3maxImERKT_S2_S2_>
   16c58:	48 8b 00             	mov    (%rax),%rax
   16c5b:	48 01 d8             	add    %rbx,%rax
   16c5e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   16c62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16c66:	48 89 c7             	mov    %rax,%rdi
   16c69:	e8 62 c7 ff ff       	call   133d0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   16c6e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   16c72:	72 12                	jb     16c86 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   16c74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16c78:	48 89 c7             	mov    %rax,%rdi
   16c7b:	e8 0a ff ff ff       	call   16b8a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   16c80:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   16c84:	73 0e                	jae    16c94 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   16c86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16c8a:	48 89 c7             	mov    %rax,%rdi
   16c8d:	e8 f8 fe ff ff       	call   16b8a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   16c92:	eb 04                	jmp    16c98 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   16c94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   16c98:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16c9c:	c9                   	leave
   16c9d:	c3                   	ret

0000000000016c9e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   16c9e:	55                   	push   %rbp
   16c9f:	48 89 e5             	mov    %rsp,%rbp
   16ca2:	48 83 ec 10          	sub    $0x10,%rsp
   16ca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16caa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   16cae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16cb3:	74 15                	je     16cca <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   16cb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cb9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16cbd:	48 89 d6             	mov    %rdx,%rsi
   16cc0:	48 89 c7             	mov    %rax,%rdi
   16cc3:	e8 1b 16 00 00       	call   182e3 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   16cc8:	eb 05                	jmp    16ccf <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   16cca:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   16ccf:	c9                   	leave
   16cd0:	c3                   	ret

0000000000016cd1 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   16cd1:	55                   	push   %rbp
   16cd2:	48 89 e5             	mov    %rsp,%rbp
   16cd5:	48 83 ec 20          	sub    $0x20,%rsp
   16cd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16cdd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16ce1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16ce5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   16ce9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16ced:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16cf1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   16cf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cf9:	48 89 c7             	mov    %rax,%rdi
   16cfc:	e8 0c 16 00 00       	call   1830d <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   16d01:	c9                   	leave
   16d02:	c3                   	ret

0000000000016d03 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
   16d03:	55                   	push   %rbp
   16d04:	48 89 e5             	mov    %rsp,%rbp
   16d07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return const_cast<_Tp&>(__t[__n]); }
   16d0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16d13:	48 c1 e0 04          	shl    $0x4,%rax
   16d17:	48 89 c2             	mov    %rax,%rdx
   16d1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d1e:	48 01 d0             	add    %rdx,%rax
   16d21:	5d                   	pop    %rbp
   16d22:	c3                   	ret
   16d23:	90                   	nop

0000000000016d24 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   16d24:	55                   	push   %rbp
   16d25:	48 89 e5             	mov    %rsp,%rbp
   16d28:	48 83 ec 10          	sub    $0x10,%rsp
   16d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   16d34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d3c:	48 89 d6             	mov    %rdx,%rsi
   16d3f:	48 89 c7             	mov    %rax,%rdi
   16d42:	e8 29 16 00 00       	call   18370 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   16d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d4b:	48 89 c7             	mov    %rax,%rdi
   16d4e:	e8 43 16 00 00       	call   18396 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   16d53:	90                   	nop
   16d54:	c9                   	leave
   16d55:	c3                   	ret

0000000000016d56 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   16d56:	55                   	push   %rbp
   16d57:	48 89 e5             	mov    %rsp,%rbp
   16d5a:	48 83 ec 20          	sub    $0x20,%rsp
   16d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16d66:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   16d6a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16d6f:	74 17                	je     16d88 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   16d71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d75:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16d79:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16d7d:	48 89 ce             	mov    %rcx,%rsi
   16d80:	48 89 c7             	mov    %rax,%rdi
   16d83:	e8 3c 16 00 00       	call   183c4 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   16d88:	90                   	nop
   16d89:	c9                   	leave
   16d8a:	c3                   	ret
   16d8b:	90                   	nop

0000000000016d8c <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   16d8c:	55                   	push   %rbp
   16d8d:	48 89 e5             	mov    %rsp,%rbp
   16d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d98:	48 8b 40 08          	mov    0x8(%rax),%rax
   16d9c:	5d                   	pop    %rbp
   16d9d:	c3                   	ret

0000000000016d9e <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   16d9e:	55                   	push   %rbp
   16d9f:	48 89 e5             	mov    %rsp,%rbp
   16da2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16da6:	90                   	nop
   16da7:	5d                   	pop    %rbp
   16da8:	c3                   	ret

0000000000016da9 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   16da9:	55                   	push   %rbp
   16daa:	48 89 e5             	mov    %rsp,%rbp
   16dad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16db1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   16db5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16db9:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   16dbd:	48 c1 f8 04          	sar    $0x4,%rax
   16dc1:	48 89 c2             	mov    %rax,%rdx
   16dc4:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   16dcb:	e3 38 8e 
   16dce:	48 0f af c2          	imul   %rdx,%rax
    }
   16dd2:	5d                   	pop    %rbp
   16dd3:	c3                   	ret

0000000000016dd4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   16dd4:	55                   	push   %rbp
   16dd5:	48 89 e5             	mov    %rsp,%rbp
   16dd8:	53                   	push   %rbx
   16dd9:	48 83 ec 28          	sub    $0x28,%rsp
   16ddd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16de1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   16de5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16de9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16ded:	48 89 d6             	mov    %rdx,%rsi
   16df0:	48 89 c7             	mov    %rax,%rdi
   16df3:	e8 78 15 00 00       	call   18370 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   16df8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16dfc:	48 89 c7             	mov    %rax,%rdi
   16dff:	e8 ee 15 00 00       	call   183f2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   16e04:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   16e08:	0f 92 c3             	setb   %bl
   16e0b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16e0f:	48 89 c7             	mov    %rax,%rdi
   16e12:	e8 25 c3 ff ff       	call   1313c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   16e17:	84 db                	test   %bl,%bl
   16e19:	74 0f                	je     16e2a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   16e1b:	48 8d 05 4e 83 00 00 	lea    0x834e(%rip),%rax        # 1f170 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   16e22:	48 89 c7             	mov    %rax,%rdi
   16e25:	e8 a6 d3 fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   16e2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   16e2e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16e32:	c9                   	leave
   16e33:	c3                   	ret

0000000000016e34 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   16e34:	55                   	push   %rbp
   16e35:	48 89 e5             	mov    %rsp,%rbp
   16e38:	48 83 ec 10          	sub    $0x10,%rsp
   16e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   16e44:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16e49:	74 15                	je     16e60 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   16e4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e4f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16e53:	48 89 d6             	mov    %rdx,%rsi
   16e56:	48 89 c7             	mov    %rax,%rdi
   16e59:	e8 d6 15 00 00       	call   18434 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   16e5e:	eb 05                	jmp    16e65 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   16e60:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   16e65:	c9                   	leave
   16e66:	c3                   	ret

0000000000016e67 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   16e67:	55                   	push   %rbp
   16e68:	48 89 e5             	mov    %rsp,%rbp
   16e6b:	48 83 ec 20          	sub    $0x20,%rsp
   16e6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16e77:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16e7b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   16e7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16e83:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16e87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e8b:	48 89 ce             	mov    %rcx,%rsi
   16e8e:	48 89 c7             	mov    %rax,%rdi
   16e91:	e8 c8 15 00 00       	call   1845e <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   16e96:	c9                   	leave
   16e97:	c3                   	ret

0000000000016e98 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   16e98:	55                   	push   %rbp
   16e99:	48 89 e5             	mov    %rsp,%rbp
   16e9c:	48 83 ec 10          	sub    $0x10,%rsp
   16ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   16ea8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16eb0:	48 89 d6             	mov    %rdx,%rsi
   16eb3:	48 89 c7             	mov    %rax,%rdi
   16eb6:	e8 d8 15 00 00       	call   18493 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   16ebb:	90                   	nop
   16ebc:	c9                   	leave
   16ebd:	c3                   	ret

0000000000016ebe <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   16ebe:	55                   	push   %rbp
   16ebf:	48 89 e5             	mov    %rsp,%rbp
   16ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ec6:	90                   	nop
   16ec7:	5d                   	pop    %rbp
   16ec8:	c3                   	ret
   16ec9:	90                   	nop

0000000000016eca <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16eca:	55                   	push   %rbp
   16ecb:	48 89 e5             	mov    %rsp,%rbp
   16ece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ed2:	90                   	nop
   16ed3:	5d                   	pop    %rbp
   16ed4:	c3                   	ret

0000000000016ed5 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   16ed5:	55                   	push   %rbp
   16ed6:	48 89 e5             	mov    %rsp,%rbp
   16ed9:	53                   	push   %rbx
   16eda:	48 83 ec 28          	sub    $0x28,%rsp
   16ede:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16ee2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   16ee6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16eea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16eee:	48 89 d6             	mov    %rdx,%rsi
   16ef1:	48 89 c7             	mov    %rax,%rdi
   16ef4:	e8 ff 00 00 00       	call   16ff8 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   16ef9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16efd:	48 89 c7             	mov    %rax,%rdi
   16f00:	e8 9d 15 00 00       	call   184a2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   16f05:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   16f09:	0f 92 c3             	setb   %bl
   16f0c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16f10:	48 89 c7             	mov    %rax,%rdi
   16f13:	e8 0e df ff ff       	call   14e26 <_ZNSaIP12VkPipeline_TED1Ev>
   16f18:	84 db                	test   %bl,%bl
   16f1a:	74 0f                	je     16f2b <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   16f1c:	48 8d 05 4d 82 00 00 	lea    0x824d(%rip),%rax        # 1f170 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   16f23:	48 89 c7             	mov    %rax,%rdi
   16f26:	e8 a5 d2 fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   16f2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   16f2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16f33:	c9                   	leave
   16f34:	c3                   	ret
   16f35:	90                   	nop

0000000000016f36 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   16f36:	55                   	push   %rbp
   16f37:	48 89 e5             	mov    %rsp,%rbp
   16f3a:	53                   	push   %rbx
   16f3b:	48 83 ec 28          	sub    $0x28,%rsp
   16f3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16f43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16f47:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   16f4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f4f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16f53:	48 89 d6             	mov    %rdx,%rsi
   16f56:	48 89 c7             	mov    %rax,%rdi
   16f59:	e8 86 15 00 00       	call   184e4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   16f5e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16f62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f66:	48 89 d6             	mov    %rdx,%rsi
   16f69:	48 89 c7             	mov    %rax,%rdi
   16f6c:	e8 a5 15 00 00       	call   18516 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   16f71:	eb 1a                	jmp    16f8d <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   16f73:	48 89 c3             	mov    %rax,%rbx
   16f76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f7a:	48 89 c7             	mov    %rax,%rdi
   16f7d:	e8 a2 c2 ff ff       	call   13224 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   16f82:	48 89 d8             	mov    %rbx,%rax
   16f85:	48 89 c7             	mov    %rax,%rdi
   16f88:	e8 93 d8 fe ff       	call   4820 <_Unwind_Resume@plt>
   16f8d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16f91:	c9                   	leave
   16f92:	c3                   	ret
   16f93:	90                   	nop

0000000000016f94 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   16f94:	55                   	push   %rbp
   16f95:	48 89 e5             	mov    %rsp,%rbp
   16f98:	48 83 ec 10          	sub    $0x10,%rsp
   16f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   16fa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fa8:	48 89 c7             	mov    %rax,%rdi
   16fab:	e8 9e df ff ff       	call   14f4e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16fb0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   16fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fb7:	48 8b 00             	mov    (%rax),%rax
   16fba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16fbe:	48 89 ce             	mov    %rcx,%rsi
   16fc1:	48 89 c7             	mov    %rax,%rdi
   16fc4:	e8 a3 15 00 00       	call   1856c <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   16fc9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16fcd:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   16fd1:	90                   	nop
   16fd2:	c9                   	leave
   16fd3:	c3                   	ret

0000000000016fd4 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   16fd4:	55                   	push   %rbp
   16fd5:	48 89 e5             	mov    %rsp,%rbp
   16fd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   16fe0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16fe4:	5d                   	pop    %rbp
   16fe5:	c3                   	ret

0000000000016fe6 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   16fe6:	55                   	push   %rbp
   16fe7:	48 89 e5             	mov    %rsp,%rbp
   16fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   16ff2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16ff6:	5d                   	pop    %rbp
   16ff7:	c3                   	ret

0000000000016ff8 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   16ff8:	55                   	push   %rbp
   16ff9:	48 89 e5             	mov    %rsp,%rbp
   16ffc:	48 83 ec 10          	sub    $0x10,%rsp
   17000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17004:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   17008:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1700c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17010:	48 89 d6             	mov    %rdx,%rsi
   17013:	48 89 c7             	mov    %rax,%rdi
   17016:	e8 7b 15 00 00       	call   18596 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   1701b:	90                   	nop
   1701c:	c9                   	leave
   1701d:	c3                   	ret

000000000001701e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1701e:	55                   	push   %rbp
   1701f:	48 89 e5             	mov    %rsp,%rbp
   17022:	48 83 ec 20          	sub    $0x20,%rsp
   17026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1702a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1702e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   17032:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17037:	74 17                	je     17050 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   17039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1703d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17041:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17045:	48 89 ce             	mov    %rcx,%rsi
   17048:	48 89 c7             	mov    %rax,%rdi
   1704b:	e8 55 15 00 00       	call   185a5 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   17050:	90                   	nop
   17051:	c9                   	leave
   17052:	c3                   	ret

0000000000017053 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   17053:	55                   	push   %rbp
   17054:	48 89 e5             	mov    %rsp,%rbp
   17057:	48 83 ec 10          	sub    $0x10,%rsp
   1705b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1705f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17063:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1706b:	48 89 d6             	mov    %rdx,%rsi
   1706e:	48 89 c7             	mov    %rax,%rdi
   17071:	e8 5d 15 00 00       	call   185d3 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   17076:	90                   	nop
   17077:	c9                   	leave
   17078:	c3                   	ret
   17079:	90                   	nop

000000000001707a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1707a:	55                   	push   %rbp
   1707b:	48 89 e5             	mov    %rsp,%rbp
   1707e:	48 83 ec 10          	sub    $0x10,%rsp
   17082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   17086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1708a:	48 89 c7             	mov    %rax,%rdi
   1708d:	e8 92 15 00 00       	call   18624 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17092:	48 89 c7             	mov    %rax,%rdi
   17095:	e8 48 15 00 00       	call   185e2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   1709a:	c9                   	leave
   1709b:	c3                   	ret

000000000001709c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1709c:	55                   	push   %rbp
   1709d:	48 89 e5             	mov    %rsp,%rbp
   170a0:	48 83 ec 20          	sub    $0x20,%rsp
   170a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   170ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   170b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   170b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170b8:	48 89 d6             	mov    %rdx,%rsi
   170bb:	48 89 c7             	mov    %rax,%rdi
   170be:	e8 6f 15 00 00       	call   18632 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   170c3:	c9                   	leave
   170c4:	c3                   	ret
   170c5:	90                   	nop

00000000000170c6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   170c6:	55                   	push   %rbp
   170c7:	48 89 e5             	mov    %rsp,%rbp
   170ca:	53                   	push   %rbx
   170cb:	48 83 ec 38          	sub    $0x38,%rsp
   170cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   170d3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   170d7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   170db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   170df:	48 89 c7             	mov    %rax,%rdi
   170e2:	e8 93 ff ff ff       	call   1707a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   170e7:	48 89 c3             	mov    %rax,%rbx
   170ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   170ee:	48 89 c7             	mov    %rax,%rdi
   170f1:	e8 90 de ff ff       	call   14f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   170f6:	48 29 c3             	sub    %rax,%rbx
   170f9:	48 89 da             	mov    %rbx,%rdx
   170fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17100:	48 39 c2             	cmp    %rax,%rdx
   17103:	0f 92 c0             	setb   %al
   17106:	84 c0                	test   %al,%al
   17108:	74 0c                	je     17116 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1710a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1710e:	48 89 c7             	mov    %rax,%rdi
   17111:	e8 ba d0 fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   17116:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1711a:	48 89 c7             	mov    %rax,%rdi
   1711d:	e8 64 de ff ff       	call   14f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   17122:	48 89 c3             	mov    %rax,%rbx
   17125:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17129:	48 89 c7             	mov    %rax,%rdi
   1712c:	e8 55 de ff ff       	call   14f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   17131:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17135:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   17139:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1713d:	48 89 d6             	mov    %rdx,%rsi
   17140:	48 89 c7             	mov    %rax,%rdi
   17143:	e8 be 09 00 00       	call   17b06 <_ZSt3maxImERKT_S2_S2_>
   17148:	48 8b 00             	mov    (%rax),%rax
   1714b:	48 01 d8             	add    %rbx,%rax
   1714e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   17152:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17156:	48 89 c7             	mov    %rax,%rdi
   17159:	e8 28 de ff ff       	call   14f86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1715e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   17162:	72 12                	jb     17176 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   17164:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17168:	48 89 c7             	mov    %rax,%rdi
   1716b:	e8 0a ff ff ff       	call   1707a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   17170:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   17174:	73 0e                	jae    17184 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   17176:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1717a:	48 89 c7             	mov    %rax,%rdi
   1717d:	e8 f8 fe ff ff       	call   1707a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   17182:	eb 04                	jmp    17188 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   17184:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   17188:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1718c:	c9                   	leave
   1718d:	c3                   	ret

000000000001718e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1718e:	55                   	push   %rbp
   1718f:	48 89 e5             	mov    %rsp,%rbp
   17192:	48 83 ec 10          	sub    $0x10,%rsp
   17196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1719a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1719e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   171a3:	74 15                	je     171ba <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   171a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171a9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   171ad:	48 89 d6             	mov    %rdx,%rsi
   171b0:	48 89 c7             	mov    %rax,%rdi
   171b3:	e8 a3 14 00 00       	call   1865b <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   171b8:	eb 05                	jmp    171bf <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   171ba:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   171bf:	c9                   	leave
   171c0:	c3                   	ret

00000000000171c1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   171c1:	55                   	push   %rbp
   171c2:	48 89 e5             	mov    %rsp,%rbp
   171c5:	48 83 ec 20          	sub    $0x20,%rsp
   171c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   171cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   171d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   171d5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   171d9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   171dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   171e1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   171e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171e9:	48 89 c7             	mov    %rax,%rdi
   171ec:	e8 94 14 00 00       	call   18685 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   171f1:	c9                   	leave
   171f2:	c3                   	ret
   171f3:	90                   	nop

00000000000171f4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   171f4:	55                   	push   %rbp
   171f5:	48 89 e5             	mov    %rsp,%rbp
   171f8:	48 83 ec 10          	sub    $0x10,%rsp
   171fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17200:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   17204:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1720c:	48 89 d6             	mov    %rdx,%rsi
   1720f:	48 89 c7             	mov    %rax,%rdi
   17212:	e8 d1 14 00 00       	call   186e8 <_ZNSaIP13VkImageView_TEC1ERKS1_>
   17217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1721b:	48 89 c7             	mov    %rax,%rdi
   1721e:	e8 6b eb ff ff       	call   15d8e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   17223:	90                   	nop
   17224:	c9                   	leave
   17225:	c3                   	ret

0000000000017226 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   17226:	55                   	push   %rbp
   17227:	48 89 e5             	mov    %rsp,%rbp
   1722a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1722e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17232:	48 8b 40 08          	mov    0x8(%rax),%rax
   17236:	5d                   	pop    %rbp
   17237:	c3                   	ret

0000000000017238 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   17238:	55                   	push   %rbp
   17239:	48 89 e5             	mov    %rsp,%rbp
   1723c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17240:	90                   	nop
   17241:	5d                   	pop    %rbp
   17242:	c3                   	ret

0000000000017243 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   17243:	55                   	push   %rbp
   17244:	48 89 e5             	mov    %rsp,%rbp
   17247:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1724b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1724f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17253:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   17257:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1725b:	5d                   	pop    %rbp
   1725c:	c3                   	ret

000000000001725d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1725d:	55                   	push   %rbp
   1725e:	48 89 e5             	mov    %rsp,%rbp
   17261:	53                   	push   %rbx
   17262:	48 83 ec 28          	sub    $0x28,%rsp
   17266:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1726a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1726e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17272:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17276:	48 89 d6             	mov    %rdx,%rsi
   17279:	48 89 c7             	mov    %rax,%rdi
   1727c:	e8 67 14 00 00       	call   186e8 <_ZNSaIP13VkImageView_TEC1ERKS1_>
   17281:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17285:	48 89 c7             	mov    %rax,%rdi
   17288:	e8 dc 0f 00 00       	call   18269 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   1728d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   17291:	0f 92 c3             	setb   %bl
   17294:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17298:	48 89 c7             	mov    %rax,%rdi
   1729b:	e8 f6 c1 ff ff       	call   13496 <_ZNSaIP13VkImageView_TED1Ev>
   172a0:	84 db                	test   %bl,%bl
   172a2:	74 0f                	je     172b3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   172a4:	48 8d 05 c5 7e 00 00 	lea    0x7ec5(%rip),%rax        # 1f170 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   172ab:	48 89 c7             	mov    %rax,%rdi
   172ae:	e8 1d cf fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   172b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   172b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   172bb:	c9                   	leave
   172bc:	c3                   	ret

00000000000172bd <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   172bd:	55                   	push   %rbp
   172be:	48 89 e5             	mov    %rsp,%rbp
   172c1:	48 83 ec 20          	sub    $0x20,%rsp
   172c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   172cd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   172d1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   172d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   172d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   172dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172e1:	48 89 ce             	mov    %rcx,%rsi
   172e4:	48 89 c7             	mov    %rax,%rdi
   172e7:	e8 22 14 00 00       	call   1870e <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   172ec:	c9                   	leave
   172ed:	c3                   	ret

00000000000172ee <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   172ee:	55                   	push   %rbp
   172ef:	48 89 e5             	mov    %rsp,%rbp
   172f2:	48 83 ec 10          	sub    $0x10,%rsp
   172f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   172fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17306:	48 89 d6             	mov    %rdx,%rsi
   17309:	48 89 c7             	mov    %rax,%rdi
   1730c:	e8 32 14 00 00       	call   18743 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   17311:	90                   	nop
   17312:	c9                   	leave
   17313:	c3                   	ret

0000000000017314 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   17314:	55                   	push   %rbp
   17315:	48 89 e5             	mov    %rsp,%rbp
   17318:	48 83 ec 10          	sub    $0x10,%rsp
   1731c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17320:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   17324:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17328:	48 89 c7             	mov    %rax,%rdi
   1732b:	e8 22 14 00 00       	call   18752 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17330:	48 89 c2             	mov    %rax,%rdx
   17333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17337:	48 89 d6             	mov    %rdx,%rsi
   1733a:	48 89 c7             	mov    %rax,%rdi
   1733d:	e8 ce ea fe ff       	call   5e10 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
   17342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17346:	c9                   	leave
   17347:	c3                   	ret

0000000000017348 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   17348:	55                   	push   %rbp
   17349:	48 89 e5             	mov    %rsp,%rbp
   1734c:	48 83 ec 10          	sub    $0x10,%rsp
   17350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17354:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   17358:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1735c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17360:	48 89 d6             	mov    %rdx,%rsi
   17363:	48 89 c7             	mov    %rax,%rdi
   17366:	e8 f5 13 00 00       	call   18760 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   1736b:	90                   	nop
   1736c:	c9                   	leave
   1736d:	c3                   	ret

000000000001736e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   1736e:	55                   	push   %rbp
   1736f:	48 89 e5             	mov    %rsp,%rbp
   17372:	48 83 ec 30          	sub    $0x30,%rsp
   17376:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1737a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   1737e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17382:	48 89 c7             	mov    %rax,%rdi
   17385:	e8 54 ec fe ff       	call   5fde <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   1738a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1738e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17392:	48 89 d6             	mov    %rdx,%rsi
   17395:	48 89 c7             	mov    %rax,%rdi
   17398:	e8 e9 13 00 00       	call   18786 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   1739d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   173a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   173a5:	48 89 d6             	mov    %rdx,%rsi
   173a8:	48 89 c7             	mov    %rax,%rdi
   173ab:	e8 d6 13 00 00       	call   18786 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   173b0:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   173b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   173b8:	48 89 d6             	mov    %rdx,%rsi
   173bb:	48 89 c7             	mov    %rax,%rdi
   173be:	e8 c3 13 00 00       	call   18786 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   173c3:	90                   	nop
   173c4:	c9                   	leave
   173c5:	c3                   	ret

00000000000173c6 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   173c6:	55                   	push   %rbp
   173c7:	48 89 e5             	mov    %rsp,%rbp
   173ca:	48 83 ec 10          	sub    $0x10,%rsp
   173ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   173d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   173da:	48 89 c7             	mov    %rax,%rdi
   173dd:	e8 e1 13 00 00       	call   187c3 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   173e2:	90                   	nop
   173e3:	c9                   	leave
   173e4:	c3                   	ret
   173e5:	90                   	nop

00000000000173e6 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   173e6:	55                   	push   %rbp
   173e7:	48 89 e5             	mov    %rsp,%rbp
   173ea:	48 83 ec 10          	sub    $0x10,%rsp
   173ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   173f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173f6:	48 89 c7             	mov    %rax,%rdi
   173f9:	e8 16 14 00 00       	call   18814 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   173fe:	48 89 c7             	mov    %rax,%rdi
   17401:	e8 cb 13 00 00       	call   187d1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   17406:	c9                   	leave
   17407:	c3                   	ret

0000000000017408 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   17408:	55                   	push   %rbp
   17409:	48 89 e5             	mov    %rsp,%rbp
   1740c:	48 83 ec 20          	sub    $0x20,%rsp
   17410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17414:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17418:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1741c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17424:	48 89 d6             	mov    %rdx,%rsi
   17427:	48 89 c7             	mov    %rax,%rdi
   1742a:	e8 f3 13 00 00       	call   18822 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>
   1742f:	c9                   	leave
   17430:	c3                   	ret
   17431:	90                   	nop

0000000000017432 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   17432:	55                   	push   %rbp
   17433:	48 89 e5             	mov    %rsp,%rbp
   17436:	53                   	push   %rbx
   17437:	48 83 ec 38          	sub    $0x38,%rsp
   1743b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1743f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17443:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   17447:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1744b:	48 89 c7             	mov    %rax,%rdi
   1744e:	e8 93 ff ff ff       	call   173e6 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   17453:	48 89 c3             	mov    %rax,%rbx
   17456:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1745a:	48 89 c7             	mov    %rax,%rdi
   1745d:	e8 b2 c6 ff ff       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   17462:	48 29 c3             	sub    %rax,%rbx
   17465:	48 89 da             	mov    %rbx,%rdx
   17468:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1746c:	48 39 c2             	cmp    %rax,%rdx
   1746f:	0f 92 c0             	setb   %al
   17472:	84 c0                	test   %al,%al
   17474:	74 0c                	je     17482 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   17476:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1747a:	48 89 c7             	mov    %rax,%rdi
   1747d:	e8 4e cd fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   17482:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17486:	48 89 c7             	mov    %rax,%rdi
   17489:	e8 86 c6 ff ff       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1748e:	48 89 c3             	mov    %rax,%rbx
   17491:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17495:	48 89 c7             	mov    %rax,%rdi
   17498:	e8 77 c6 ff ff       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1749d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   174a1:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   174a5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   174a9:	48 89 d6             	mov    %rdx,%rsi
   174ac:	48 89 c7             	mov    %rax,%rdi
   174af:	e8 52 06 00 00       	call   17b06 <_ZSt3maxImERKT_S2_S2_>
   174b4:	48 8b 00             	mov    (%rax),%rax
   174b7:	48 01 d8             	add    %rbx,%rax
   174ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   174be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   174c2:	48 89 c7             	mov    %rax,%rdi
   174c5:	e8 4a c6 ff ff       	call   13b14 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   174ca:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   174ce:	72 12                	jb     174e2 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   174d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   174d4:	48 89 c7             	mov    %rax,%rdi
   174d7:	e8 0a ff ff ff       	call   173e6 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   174dc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   174e0:	73 0e                	jae    174f0 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   174e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   174e6:	48 89 c7             	mov    %rax,%rdi
   174e9:	e8 f8 fe ff ff       	call   173e6 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   174ee:	eb 04                	jmp    174f4 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   174f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   174f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   174f8:	c9                   	leave
   174f9:	c3                   	ret

00000000000174fa <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   174fa:	55                   	push   %rbp
   174fb:	48 89 e5             	mov    %rsp,%rbp
   174fe:	48 83 ec 10          	sub    $0x10,%rsp
   17502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17506:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1750a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1750f:	74 15                	je     17526 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   17511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17515:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17519:	48 89 d6             	mov    %rdx,%rsi
   1751c:	48 89 c7             	mov    %rax,%rdi
   1751f:	e8 27 13 00 00       	call   1884b <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   17524:	eb 05                	jmp    1752b <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   17526:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1752b:	c9                   	leave
   1752c:	c3                   	ret

000000000001752d <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1752d:	55                   	push   %rbp
   1752e:	48 89 e5             	mov    %rsp,%rbp
   17531:	48 83 ec 20          	sub    $0x20,%rsp
   17535:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17539:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1753d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17541:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   17545:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17549:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1754d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   17551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17555:	48 89 c7             	mov    %rax,%rdi
   17558:	e8 18 13 00 00       	call   18875 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1755d:	c9                   	leave
   1755e:	c3                   	ret
   1755f:	90                   	nop

0000000000017560 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   17560:	55                   	push   %rbp
   17561:	48 89 e5             	mov    %rsp,%rbp
   17564:	48 83 ec 10          	sub    $0x10,%rsp
   17568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1756c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17570:	48 89 c7             	mov    %rax,%rdi
   17573:	e8 a2 13 00 00       	call   1891a <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17578:	48 89 c7             	mov    %rax,%rdi
   1757b:	e8 58 13 00 00       	call   188d8 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>
   17580:	c9                   	leave
   17581:	c3                   	ret

0000000000017582 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   17582:	55                   	push   %rbp
   17583:	48 89 e5             	mov    %rsp,%rbp
   17586:	48 83 ec 20          	sub    $0x20,%rsp
   1758a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1758e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17592:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   17596:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1759a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1759e:	48 89 d6             	mov    %rdx,%rsi
   175a1:	48 89 c7             	mov    %rax,%rdi
   175a4:	e8 7f 13 00 00       	call   18928 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>
   175a9:	c9                   	leave
   175aa:	c3                   	ret
   175ab:	90                   	nop

00000000000175ac <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   175ac:	55                   	push   %rbp
   175ad:	48 89 e5             	mov    %rsp,%rbp
   175b0:	53                   	push   %rbx
   175b1:	48 83 ec 38          	sub    $0x38,%rsp
   175b5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   175b9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   175bd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   175c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   175c5:	48 89 c7             	mov    %rax,%rdi
   175c8:	e8 93 ff ff ff       	call   17560 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   175cd:	48 89 c3             	mov    %rax,%rbx
   175d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   175d4:	48 89 c7             	mov    %rax,%rdi
   175d7:	e8 5a e1 ff ff       	call   15736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   175dc:	48 29 c3             	sub    %rax,%rbx
   175df:	48 89 da             	mov    %rbx,%rdx
   175e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   175e6:	48 39 c2             	cmp    %rax,%rdx
   175e9:	0f 92 c0             	setb   %al
   175ec:	84 c0                	test   %al,%al
   175ee:	74 0c                	je     175fc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   175f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   175f4:	48 89 c7             	mov    %rax,%rdi
   175f7:	e8 d4 cb fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   175fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17600:	48 89 c7             	mov    %rax,%rdi
   17603:	e8 2e e1 ff ff       	call   15736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17608:	48 89 c3             	mov    %rax,%rbx
   1760b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1760f:	48 89 c7             	mov    %rax,%rdi
   17612:	e8 1f e1 ff ff       	call   15736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17617:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1761b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1761f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17623:	48 89 d6             	mov    %rdx,%rsi
   17626:	48 89 c7             	mov    %rax,%rdi
   17629:	e8 d8 04 00 00       	call   17b06 <_ZSt3maxImERKT_S2_S2_>
   1762e:	48 8b 00             	mov    (%rax),%rax
   17631:	48 01 d8             	add    %rbx,%rax
   17634:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   17638:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1763c:	48 89 c7             	mov    %rax,%rdi
   1763f:	e8 f2 e0 ff ff       	call   15736 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17644:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   17648:	72 12                	jb     1765c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1764a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1764e:	48 89 c7             	mov    %rax,%rdi
   17651:	e8 0a ff ff ff       	call   17560 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   17656:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1765a:	73 0e                	jae    1766a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1765c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17660:	48 89 c7             	mov    %rax,%rdi
   17663:	e8 f8 fe ff ff       	call   17560 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   17668:	eb 04                	jmp    1766e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1766a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1766e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17672:	c9                   	leave
   17673:	c3                   	ret

0000000000017674 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   17674:	55                   	push   %rbp
   17675:	48 89 e5             	mov    %rsp,%rbp
   17678:	48 83 ec 10          	sub    $0x10,%rsp
   1767c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17680:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   17684:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17689:	74 15                	je     176a0 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x2c>
   1768b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1768f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17693:	48 89 d6             	mov    %rdx,%rsi
   17696:	48 89 c7             	mov    %rax,%rdi
   17699:	e8 b3 12 00 00       	call   18951 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>
   1769e:	eb 05                	jmp    176a5 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x31>
   176a0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   176a5:	c9                   	leave
   176a6:	c3                   	ret

00000000000176a7 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   176a7:	55                   	push   %rbp
   176a8:	48 89 e5             	mov    %rsp,%rbp
   176ab:	48 83 ec 20          	sub    $0x20,%rsp
   176af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   176b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   176bb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   176bf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   176c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   176c7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   176cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176cf:	48 89 c7             	mov    %rax,%rdi
   176d2:	e8 a4 12 00 00       	call   1897b <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   176d7:	c9                   	leave
   176d8:	c3                   	ret
   176d9:	90                   	nop

00000000000176da <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   176da:	55                   	push   %rbp
   176db:	48 89 e5             	mov    %rsp,%rbp
   176de:	48 83 ec 10          	sub    $0x10,%rsp
   176e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   176ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   176ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176f2:	48 89 d6             	mov    %rdx,%rsi
   176f5:	48 89 c7             	mov    %rax,%rdi
   176f8:	e8 e1 12 00 00       	call   189de <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   176fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17701:	48 89 c7             	mov    %rax,%rdi
   17704:	e8 ad e7 ff ff       	call   15eb6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   17709:	90                   	nop
   1770a:	c9                   	leave
   1770b:	c3                   	ret

000000000001770c <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>:
   1770c:	55                   	push   %rbp
   1770d:	48 89 e5             	mov    %rsp,%rbp
   17710:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17718:	48 8b 40 08          	mov    0x8(%rax),%rax
   1771c:	5d                   	pop    %rbp
   1771d:	c3                   	ret

000000000001771e <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1771e:	55                   	push   %rbp
   1771f:	48 89 e5             	mov    %rsp,%rbp
   17722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17726:	90                   	nop
   17727:	5d                   	pop    %rbp
   17728:	c3                   	ret

0000000000017729 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   17729:	55                   	push   %rbp
   1772a:	48 89 e5             	mov    %rsp,%rbp
   1772d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17731:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   17735:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17739:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1773d:	48 c1 f8 03          	sar    $0x3,%rax
    }
   17741:	5d                   	pop    %rbp
   17742:	c3                   	ret

0000000000017743 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   17743:	55                   	push   %rbp
   17744:	48 89 e5             	mov    %rsp,%rbp
   17747:	53                   	push   %rbx
   17748:	48 83 ec 28          	sub    $0x28,%rsp
   1774c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17750:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   17754:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17758:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1775c:	48 89 d6             	mov    %rdx,%rsi
   1775f:	48 89 c7             	mov    %rax,%rdi
   17762:	e8 77 12 00 00       	call   189de <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   17767:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1776b:	48 89 c7             	mov    %rax,%rdi
   1776e:	e8 5e 10 00 00       	call   187d1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   17773:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   17777:	0f 92 c3             	setb   %bl
   1777a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1777e:	48 89 c7             	mov    %rax,%rdi
   17781:	e8 a2 c1 ff ff       	call   13928 <_ZNSaIP13VkSemaphore_TED1Ev>
   17786:	84 db                	test   %bl,%bl
   17788:	74 0f                	je     17799 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1778a:	48 8d 05 df 79 00 00 	lea    0x79df(%rip),%rax        # 1f170 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   17791:	48 89 c7             	mov    %rax,%rdi
   17794:	e8 37 ca fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   17799:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1779d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   177a1:	c9                   	leave
   177a2:	c3                   	ret

00000000000177a3 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   177a3:	55                   	push   %rbp
   177a4:	48 89 e5             	mov    %rsp,%rbp
   177a7:	48 83 ec 20          	sub    $0x20,%rsp
   177ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   177b3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   177b7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   177bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   177bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   177c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177c7:	48 89 ce             	mov    %rcx,%rsi
   177ca:	48 89 c7             	mov    %rax,%rdi
   177cd:	e8 32 12 00 00       	call   18a04 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
    }
   177d2:	c9                   	leave
   177d3:	c3                   	ret

00000000000177d4 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   177d4:	55                   	push   %rbp
   177d5:	48 89 e5             	mov    %rsp,%rbp
   177d8:	48 83 ec 10          	sub    $0x10,%rsp
   177dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   177e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   177e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177ec:	48 89 d6             	mov    %rdx,%rsi
   177ef:	48 89 c7             	mov    %rax,%rdi
   177f2:	e8 42 12 00 00       	call   18a39 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
   177f7:	90                   	nop
   177f8:	c9                   	leave
   177f9:	c3                   	ret

00000000000177fa <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   177fa:	55                   	push   %rbp
   177fb:	48 89 e5             	mov    %rsp,%rbp
   177fe:	48 83 ec 10          	sub    $0x10,%rsp
   17802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17806:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1780a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1780e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17812:	48 89 d6             	mov    %rdx,%rsi
   17815:	48 89 c7             	mov    %rax,%rdi
   17818:	e8 2b 12 00 00       	call   18a48 <_ZNSaIjEC1ERKS_>
   1781d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17821:	48 89 c7             	mov    %rax,%rdi
   17824:	e8 45 12 00 00       	call   18a6e <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>
	{ }
   17829:	90                   	nop
   1782a:	c9                   	leave
   1782b:	c3                   	ret

000000000001782c <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>:
      _M_deallocate(pointer __p, size_t __n)
   1782c:	55                   	push   %rbp
   1782d:	48 89 e5             	mov    %rsp,%rbp
   17830:	48 83 ec 20          	sub    $0x20,%rsp
   17834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17838:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1783c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   17840:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17845:	74 17                	je     1785e <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   17847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1784b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1784f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17853:	48 89 ce             	mov    %rcx,%rsi
   17856:	48 89 c7             	mov    %rax,%rdi
   17859:	e8 3e 12 00 00       	call   18a9c <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>
      }
   1785e:	90                   	nop
   1785f:	c9                   	leave
   17860:	c3                   	ret
   17861:	90                   	nop

0000000000017862 <_ZNKSt16initializer_listIjE4sizeEv>:
   17862:	55                   	push   %rbp
   17863:	48 89 e5             	mov    %rsp,%rbp
   17866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1786a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1786e:	48 8b 40 08          	mov    0x8(%rax),%rax
   17872:	5d                   	pop    %rbp
   17873:	c3                   	ret

0000000000017874 <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   17874:	55                   	push   %rbp
   17875:	48 89 e5             	mov    %rsp,%rbp
   17878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1787c:	90                   	nop
   1787d:	5d                   	pop    %rbp
   1787e:	c3                   	ret

000000000001787f <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1787f:	55                   	push   %rbp
   17880:	48 89 e5             	mov    %rsp,%rbp
   17883:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17887:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1788b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1788f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   17893:	48 c1 f8 02          	sar    $0x2,%rax
    }
   17897:	5d                   	pop    %rbp
   17898:	c3                   	ret

0000000000017899 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   17899:	55                   	push   %rbp
   1789a:	48 89 e5             	mov    %rsp,%rbp
   1789d:	53                   	push   %rbx
   1789e:	48 83 ec 28          	sub    $0x28,%rsp
   178a2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   178a6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   178aa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   178ae:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   178b2:	48 89 d6             	mov    %rdx,%rsi
   178b5:	48 89 c7             	mov    %rax,%rdi
   178b8:	e8 8b 11 00 00       	call   18a48 <_ZNSaIjEC1ERKS_>
   178bd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   178c1:	48 89 c7             	mov    %rax,%rdi
   178c4:	e8 01 12 00 00       	call   18aca <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>
   178c9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   178cd:	0f 92 c3             	setb   %bl
   178d0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   178d4:	48 89 c7             	mov    %rax,%rdi
   178d7:	e8 50 c1 ff ff       	call   13a2c <_ZNSaIjED1Ev>
   178dc:	84 db                	test   %bl,%bl
   178de:	74 0f                	je     178ef <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   178e0:	48 8d 05 89 78 00 00 	lea    0x7889(%rip),%rax        # 1f170 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   178e7:	48 89 c7             	mov    %rax,%rdi
   178ea:	e8 e1 c8 fe ff       	call   41d0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   178ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   178f3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   178f7:	c9                   	leave
   178f8:	c3                   	ret
   178f9:	90                   	nop

00000000000178fa <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   178fa:	55                   	push   %rbp
   178fb:	48 89 e5             	mov    %rsp,%rbp
   178fe:	48 83 ec 10          	sub    $0x10,%rsp
   17902:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17906:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1790a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1790f:	74 15                	je     17926 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x2c>
   17911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17915:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17919:	48 89 d6             	mov    %rdx,%rsi
   1791c:	48 89 c7             	mov    %rax,%rdi
   1791f:	e8 e8 11 00 00       	call   18b0c <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>
   17924:	eb 05                	jmp    1792b <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x31>
   17926:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1792b:	c9                   	leave
   1792c:	c3                   	ret

000000000001792d <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1792d:	55                   	push   %rbp
   1792e:	48 89 e5             	mov    %rsp,%rbp
   17931:	48 83 ec 20          	sub    $0x20,%rsp
   17935:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17939:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1793d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17941:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   17945:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17949:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1794d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17951:	48 89 ce             	mov    %rcx,%rsi
   17954:	48 89 c7             	mov    %rax,%rdi
   17957:	e8 da 11 00 00       	call   18b36 <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>
    }
   1795c:	c9                   	leave
   1795d:	c3                   	ret

000000000001795e <_ZSt8_DestroyIPjEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1795e:	55                   	push   %rbp
   1795f:	48 89 e5             	mov    %rsp,%rbp
   17962:	48 83 ec 10          	sub    $0x10,%rsp
   17966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1796a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1796e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17976:	48 89 d6             	mov    %rdx,%rsi
   17979:	48 89 c7             	mov    %rax,%rdi
   1797c:	e8 ea 11 00 00       	call   18b6b <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>
    }
   17981:	90                   	nop
   17982:	c9                   	leave
   17983:	c3                   	ret

0000000000017984 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17984:	55                   	push   %rbp
   17985:	48 89 e5             	mov    %rsp,%rbp
   17988:	48 83 ec 20          	sub    $0x20,%rsp
   1798c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17990:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17994:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   17998:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1799c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   179a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179a4:	48 89 ce             	mov    %rcx,%rsi
   179a7:	48 89 c7             	mov    %rax,%rdi
   179aa:	e8 cb 11 00 00       	call   18b7a <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   179af:	90                   	nop
   179b0:	c9                   	leave
   179b1:	c3                   	ret

00000000000179b2 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   179b2:	55                   	push   %rbp
   179b3:	48 89 e5             	mov    %rsp,%rbp
   179b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   179ba:	90                   	nop
   179bb:	5d                   	pop    %rbp
   179bc:	c3                   	ret

00000000000179bd <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   179bd:	55                   	push   %rbp
   179be:	48 89 e5             	mov    %rsp,%rbp
   179c1:	48 83 ec 20          	sub    $0x20,%rsp
   179c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   179c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   179cd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   179d1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   179d5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   179d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179dd:	48 89 ce             	mov    %rcx,%rsi
   179e0:	48 89 c7             	mov    %rax,%rdi
   179e3:	e8 c4 11 00 00       	call   18bac <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   179e8:	90                   	nop
   179e9:	c9                   	leave
   179ea:	c3                   	ret

00000000000179eb <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   179eb:	55                   	push   %rbp
   179ec:	48 89 e5             	mov    %rsp,%rbp
   179ef:	48 83 ec 10          	sub    $0x10,%rsp
   179f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   179f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   179fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   179ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a03:	48 89 d6             	mov    %rdx,%rsi
   17a06:	48 89 c7             	mov    %rax,%rdi
   17a09:	e8 cf 11 00 00       	call   18bdd <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   17a0e:	90                   	nop
   17a0f:	c9                   	leave
   17a10:	c3                   	ret

0000000000017a11 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17a11:	55                   	push   %rbp
   17a12:	48 89 e5             	mov    %rsp,%rbp
   17a15:	48 83 ec 20          	sub    $0x20,%rsp
   17a19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17a21:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   17a25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17a29:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a31:	48 89 ce             	mov    %rcx,%rsi
   17a34:	48 89 c7             	mov    %rax,%rdi
   17a37:	e8 b0 11 00 00       	call   18bec <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
   17a3c:	90                   	nop
   17a3d:	c9                   	leave
   17a3e:	c3                   	ret
   17a3f:	90                   	nop

0000000000017a40 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>:
   17a40:	55                   	push   %rbp
   17a41:	48 89 e5             	mov    %rsp,%rbp
   17a44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a48:	90                   	nop
   17a49:	5d                   	pop    %rbp
   17a4a:	c3                   	ret

0000000000017a4b <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17a4b:	55                   	push   %rbp
   17a4c:	48 89 e5             	mov    %rsp,%rbp
   17a4f:	48 83 ec 20          	sub    $0x20,%rsp
   17a53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a57:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17a5b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   17a5f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17a63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17a67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a6b:	48 89 ce             	mov    %rcx,%rsi
   17a6e:	48 89 c7             	mov    %rax,%rdi
   17a71:	e8 a8 11 00 00       	call   18c1e <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>
   17a76:	90                   	nop
   17a77:	c9                   	leave
   17a78:	c3                   	ret

0000000000017a79 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   17a79:	55                   	push   %rbp
   17a7a:	48 89 e5             	mov    %rsp,%rbp
   17a7d:	48 83 ec 10          	sub    $0x10,%rsp
   17a81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a85:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17a89:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a91:	48 89 d6             	mov    %rdx,%rsi
   17a94:	48 89 c7             	mov    %rax,%rdi
   17a97:	e8 b3 11 00 00       	call   18c4f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>
    }
   17a9c:	90                   	nop
   17a9d:	c9                   	leave
   17a9e:	c3                   	ret

0000000000017a9f <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   17a9f:	55                   	push   %rbp
   17aa0:	48 89 e5             	mov    %rsp,%rbp
   17aa3:	48 83 ec 30          	sub    $0x30,%rsp
   17aa7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17aab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17aaf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   17ab3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   17ab7:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   17abb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17abf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17ac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ac7:	48 89 ce             	mov    %rcx,%rsi
   17aca:	48 89 c7             	mov    %rax,%rdi
   17acd:	e8 8c 11 00 00       	call   18c5e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   17ad2:	c9                   	leave
   17ad3:	c3                   	ret

0000000000017ad4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   17ad4:	55                   	push   %rbp
   17ad5:	48 89 e5             	mov    %rsp,%rbp
   17ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17adc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17ae0:	90                   	nop
   17ae1:	5d                   	pop    %rbp
   17ae2:	c3                   	ret
   17ae3:	90                   	nop

0000000000017ae4 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   17ae4:	55                   	push   %rbp
   17ae5:	48 89 e5             	mov    %rsp,%rbp
   17ae8:	48 83 ec 10          	sub    $0x10,%rsp
   17aec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   17af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17af4:	48 89 c7             	mov    %rax,%rdi
   17af7:	e8 90 11 00 00       	call   18c8c <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   17afc:	48 89 c7             	mov    %rax,%rdi
   17aff:	e8 f9 30 ff ff       	call   abfd <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   17b04:	c9                   	leave
   17b05:	c3                   	ret

0000000000017b06 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   17b06:	55                   	push   %rbp
   17b07:	48 89 e5             	mov    %rsp,%rbp
   17b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17b0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   17b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b16:	48 8b 10             	mov    (%rax),%rdx
   17b19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17b1d:	48 8b 00             	mov    (%rax),%rax
   17b20:	48 39 c2             	cmp    %rax,%rdx
   17b23:	73 06                	jae    17b2b <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   17b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17b29:	eb 04                	jmp    17b2f <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   17b2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   17b2f:	5d                   	pop    %rbp
   17b30:	c3                   	ret

0000000000017b31 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   17b31:	55                   	push   %rbp
   17b32:	48 89 e5             	mov    %rsp,%rbp
   17b35:	41 54                	push   %r12
   17b37:	53                   	push   %rbx
   17b38:	48 83 ec 20          	sub    $0x20,%rsp
   17b3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17b40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17b44:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   17b48:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   17b4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17b50:	48 89 c7             	mov    %rax,%rdi
   17b53:	e8 42 11 00 00       	call   18c9a <_ZSt12__niter_baseIPPKcET_S3_>
   17b58:	49 89 c4             	mov    %rax,%r12
   17b5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17b5f:	48 89 c7             	mov    %rax,%rdi
   17b62:	e8 33 11 00 00       	call   18c9a <_ZSt12__niter_baseIPPKcET_S3_>
   17b67:	48 89 c3             	mov    %rax,%rbx
   17b6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b6e:	48 89 c7             	mov    %rax,%rdi
   17b71:	e8 24 11 00 00       	call   18c9a <_ZSt12__niter_baseIPPKcET_S3_>
   17b76:	48 89 c7             	mov    %rax,%rdi
   17b79:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17b7d:	48 89 c1             	mov    %rax,%rcx
   17b80:	4c 89 e2             	mov    %r12,%rdx
   17b83:	48 89 de             	mov    %rbx,%rsi
   17b86:	e8 1d 11 00 00       	call   18ca8 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   17b8b:	48 83 c4 20          	add    $0x20,%rsp
   17b8f:	5b                   	pop    %rbx
   17b90:	41 5c                	pop    %r12
   17b92:	5d                   	pop    %rbp
   17b93:	c3                   	ret

0000000000017b94 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   17b94:	55                   	push   %rbp
   17b95:	48 89 e5             	mov    %rsp,%rbp
   17b98:	48 83 ec 10          	sub    $0x10,%rsp
   17b9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ba0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   17ba4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17ba8:	48 89 c7             	mov    %rax,%rdi
   17bab:	e8 b8 c7 ff ff       	call   14368 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   17bb0:	48 89 c1             	mov    %rax,%rcx
   17bb3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   17bb7:	48 8b 01             	mov    (%rcx),%rax
   17bba:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   17bbe:	48 89 06             	mov    %rax,(%rsi)
   17bc1:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   17bc5:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   17bc9:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   17bcd:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   17bd1:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   17bd5:	90                   	nop
   17bd6:	c9                   	leave
   17bd7:	c3                   	ret

0000000000017bd8 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17bd8:	55                   	push   %rbp
   17bd9:	48 89 e5             	mov    %rsp,%rbp
   17bdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17be4:	5d                   	pop    %rbp
   17be5:	c3                   	ret

0000000000017be6 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17be6:	55                   	push   %rbp
   17be7:	48 89 e5             	mov    %rsp,%rbp
   17bea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17bee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17bf2:	5d                   	pop    %rbp
   17bf3:	c3                   	ret

0000000000017bf4 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17bf4:	55                   	push   %rbp
   17bf5:	48 89 e5             	mov    %rsp,%rbp
   17bf8:	53                   	push   %rbx
   17bf9:	48 83 ec 18          	sub    $0x18,%rsp
   17bfd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17c01:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17c05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c09:	48 89 c6             	mov    %rax,%rsi
   17c0c:	bf 1c 00 00 00       	mov    $0x1c,%edi
   17c11:	e8 f9 de fe ff       	call   5b0f <_ZnwmPv>
   17c16:	48 89 c3             	mov    %rax,%rbx
   17c19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17c1d:	48 89 c7             	mov    %rax,%rdi
   17c20:	e8 c1 ff ff ff       	call   17be6 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   17c25:	48 89 c1             	mov    %rax,%rcx
   17c28:	48 8b 01             	mov    (%rcx),%rax
   17c2b:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   17c2f:	48 89 03             	mov    %rax,(%rbx)
   17c32:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   17c36:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   17c3a:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   17c3e:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   17c42:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   17c46:	90                   	nop
   17c47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17c4b:	c9                   	leave
   17c4c:	c3                   	ret
   17c4d:	90                   	nop

0000000000017c4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   17c4e:	55                   	push   %rbp
   17c4f:	48 89 e5             	mov    %rsp,%rbp
   17c52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   17c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c5a:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   17c5e:	90                   	nop
   17c5f:	5d                   	pop    %rbp
   17c60:	c3                   	ret
   17c61:	90                   	nop

0000000000017c62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   17c62:	55                   	push   %rbp
   17c63:	48 89 e5             	mov    %rsp,%rbp
   17c66:	53                   	push   %rbx
   17c67:	48 83 ec 18          	sub    $0x18,%rsp
   17c6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17c6f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   17c73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17c77:	48 89 c7             	mov    %rax,%rdi
   17c7a:	e8 cd e7 ff ff       	call   1644c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   17c7f:	48 89 c3             	mov    %rax,%rbx
   17c82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c86:	48 89 c7             	mov    %rax,%rdi
   17c89:	e8 7e 10 00 00       	call   18d0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   17c8e:	48 89 de             	mov    %rbx,%rsi
   17c91:	48 89 c7             	mov    %rax,%rdi
   17c94:	e8 81 10 00 00       	call   18d1a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   17c99:	90                   	nop
   17c9a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17c9e:	c9                   	leave
   17c9f:	c3                   	ret

0000000000017ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   17ca0:	55                   	push   %rbp
   17ca1:	48 89 e5             	mov    %rsp,%rbp
   17ca4:	48 83 ec 10          	sub    $0x10,%rsp
   17ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17cac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   17cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cb4:	48 89 c7             	mov    %rax,%rdi
   17cb7:	e8 50 10 00 00       	call   18d0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   17cbc:	48 89 c1             	mov    %rax,%rcx
   17cbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cc3:	ba 01 00 00 00       	mov    $0x1,%edx
   17cc8:	48 89 c6             	mov    %rax,%rsi
   17ccb:	48 89 cf             	mov    %rcx,%rdi
   17cce:	e8 6d 10 00 00       	call   18d40 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   17cd3:	90                   	nop
   17cd4:	c9                   	leave
   17cd5:	c3                   	ret

0000000000017cd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   17cd6:	55                   	push   %rbp
   17cd7:	48 89 e5             	mov    %rsp,%rbp
   17cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   17cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ce2:	48 83 c0 08          	add    $0x8,%rax
   17ce6:	5d                   	pop    %rbp
   17ce7:	c3                   	ret

0000000000017ce8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   17ce8:	55                   	push   %rbp
   17ce9:	48 89 e5             	mov    %rsp,%rbp
   17cec:	53                   	push   %rbx
   17ced:	48 83 ec 38          	sub    $0x38,%rsp
   17cf1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17cf5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17cf9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17cfd:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   17d01:	eb 56                	jmp    17d59 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   17d03:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   17d07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17d0b:	48 89 c7             	mov    %rax,%rdi
   17d0e:	e8 e7 03 00 00       	call   180fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   17d13:	48 89 c1             	mov    %rax,%rcx
   17d16:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17d1a:	48 89 c2             	mov    %rax,%rdx
   17d1d:	48 89 ce             	mov    %rcx,%rsi
   17d20:	48 89 df             	mov    %rbx,%rdi
   17d23:	e8 f0 c8 ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17d28:	83 f0 01             	xor    $0x1,%eax
   17d2b:	84 c0                	test   %al,%al
   17d2d:	74 1a                	je     17d49 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   17d2f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17d33:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   17d37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17d3b:	48 89 c7             	mov    %rax,%rdi
   17d3e:	e8 28 e6 ff ff       	call   1636b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   17d43:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   17d47:	eb 10                	jmp    17d59 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   17d49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17d4d:	48 89 c7             	mov    %rax,%rdi
   17d50:	e8 04 e6 ff ff       	call   16359 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   17d55:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   17d59:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   17d5e:	75 a3                	jne    17d03 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   17d60:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   17d64:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   17d68:	48 89 d6             	mov    %rdx,%rsi
   17d6b:	48 89 c7             	mov    %rax,%rdi
   17d6e:	e8 ff ec ff ff       	call   16a72 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   17d73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   17d77:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17d7b:	c9                   	leave
   17d7c:	c3                   	ret
   17d7d:	90                   	nop

0000000000017d7e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   17d7e:	55                   	push   %rbp
   17d7f:	48 89 e5             	mov    %rsp,%rbp
   17d82:	48 83 ec 10          	sub    $0x10,%rsp
   17d86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   17d8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d8e:	48 89 c7             	mov    %rax,%rdi
   17d91:	e8 d8 0f 00 00       	call   18d6e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   17d96:	c9                   	leave
   17d97:	c3                   	ret

0000000000017d98 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   17d98:	55                   	push   %rbp
   17d99:	48 89 e5             	mov    %rsp,%rbp
   17d9c:	53                   	push   %rbx
   17d9d:	48 83 ec 18          	sub    $0x18,%rsp
   17da1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17da5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   17da9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   17dad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17db1:	48 89 c7             	mov    %rax,%rdi
   17db4:	e8 d9 e6 ff ff       	call   16492 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   17db9:	48 89 c6             	mov    %rax,%rsi
   17dbc:	48 89 df             	mov    %rbx,%rdi
   17dbf:	e8 b8 0f 00 00       	call   18d7c <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   17dc4:	90                   	nop
   17dc5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17dc9:	c9                   	leave
   17dca:	c3                   	ret
   17dcb:	90                   	nop

0000000000017dcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   17dcc:	55                   	push   %rbp
   17dcd:	48 89 e5             	mov    %rsp,%rbp
   17dd0:	41 54                	push   %r12
   17dd2:	53                   	push   %rbx
   17dd3:	48 83 ec 30          	sub    $0x30,%rsp
   17dd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17ddb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17ddf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17de3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   17de7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17deb:	48 89 c7             	mov    %rax,%rdi
   17dee:	e8 af 0f 00 00       	call   18da2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   17df3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   17df7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17dfb:	48 89 c7             	mov    %rax,%rdi
   17dfe:	e8 ec e6 ff ff       	call   164ef <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   17e03:	49 89 c4             	mov    %rax,%r12
   17e06:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17e0a:	48 89 c7             	mov    %rax,%rdi
   17e0d:	e8 cf e6 ff ff       	call   164e1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   17e12:	48 89 c3             	mov    %rax,%rbx
   17e15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17e19:	48 89 c7             	mov    %rax,%rdi
   17e1c:	e8 b2 e6 ff ff       	call   164d3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   17e21:	48 89 c2             	mov    %rax,%rdx
   17e24:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   17e28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e2c:	4d 89 e0             	mov    %r12,%r8
   17e2f:	48 89 d9             	mov    %rbx,%rcx
   17e32:	48 89 c7             	mov    %rax,%rdi
   17e35:	e8 90 0f 00 00       	call   18dca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   17e3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   17e3e:	48 83 c4 30          	add    $0x30,%rsp
   17e42:	5b                   	pop    %rbx
   17e43:	41 5c                	pop    %r12
   17e45:	5d                   	pop    %rbp
   17e46:	c3                   	ret
   17e47:	90                   	nop

0000000000017e48 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   17e48:	55                   	push   %rbp
   17e49:	48 89 e5             	mov    %rsp,%rbp
   17e4c:	48 83 ec 20          	sub    $0x20,%rsp
   17e50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   17e54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e58:	48 8b 10             	mov    (%rax),%rdx
   17e5b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17e5f:	48 89 d6             	mov    %rdx,%rsi
   17e62:	48 89 c7             	mov    %rax,%rdi
   17e65:	e8 08 ec ff ff       	call   16a72 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   17e6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e6e:	c9                   	leave
   17e6f:	c3                   	ret

0000000000017e70 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   17e70:	55                   	push   %rbp
   17e71:	48 89 e5             	mov    %rsp,%rbp
   17e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   17e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e7c:	48 8b 40 28          	mov    0x28(%rax),%rax
   17e80:	5d                   	pop    %rbp
   17e81:	c3                   	ret

0000000000017e82 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   17e82:	55                   	push   %rbp
   17e83:	48 89 e5             	mov    %rsp,%rbp
   17e86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   17e8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e8e:	48 83 c0 20          	add    $0x20,%rax
   17e92:	5d                   	pop    %rbp
   17e93:	c3                   	ret

0000000000017e94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   17e94:	55                   	push   %rbp
   17e95:	48 89 e5             	mov    %rsp,%rbp
   17e98:	48 83 ec 10          	sub    $0x10,%rsp
   17e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   17ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ea4:	48 89 c7             	mov    %rax,%rdi
   17ea7:	e8 4e 02 00 00       	call   180fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   17eac:	c9                   	leave
   17ead:	c3                   	ret

0000000000017eae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   17eae:	55                   	push   %rbp
   17eaf:	48 89 e5             	mov    %rsp,%rbp
   17eb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17eb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17eba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   17ebe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17ec2:	48 8b 10             	mov    (%rax),%rdx
   17ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ec9:	48 89 10             	mov    %rdx,(%rax)
   17ecc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ed0:	48 8b 10             	mov    (%rax),%rdx
   17ed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ed7:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17edb:	90                   	nop
   17edc:	5d                   	pop    %rbp
   17edd:	c3                   	ret

0000000000017ede <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   17ede:	55                   	push   %rbp
   17edf:	48 89 e5             	mov    %rsp,%rbp
   17ee2:	53                   	push   %rbx
   17ee3:	48 83 ec 78          	sub    $0x78,%rsp
   17ee7:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   17eeb:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   17eef:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   17ef3:	48 89 c7             	mov    %rax,%rdi
   17ef6:	e8 3b c6 ff ff       	call   14536 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   17efb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   17eff:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   17f03:	48 89 c7             	mov    %rax,%rdi
   17f06:	e8 cb fd ff ff       	call   17cd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   17f0b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   17f0f:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   17f13:	eb 51                	jmp    17f66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   17f15:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17f19:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   17f1d:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   17f21:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17f25:	48 89 c7             	mov    %rax,%rdi
   17f28:	e8 cd 01 00 00       	call   180fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   17f2d:	48 89 c2             	mov    %rax,%rdx
   17f30:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   17f34:	48 89 c6             	mov    %rax,%rsi
   17f37:	48 89 df             	mov    %rbx,%rdi
   17f3a:	e8 d9 c6 ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17f3f:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   17f42:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   17f46:	74 0e                	je     17f56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   17f48:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17f4c:	48 89 c7             	mov    %rax,%rdi
   17f4f:	e8 17 e4 ff ff       	call   1636b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   17f54:	eb 0c                	jmp    17f62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   17f56:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17f5a:	48 89 c7             	mov    %rax,%rdi
   17f5d:	e8 f7 e3 ff ff       	call   16359 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   17f62:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   17f66:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17f6a:	48 85 c0             	test   %rax,%rax
   17f6d:	75 a6                	jne    17f15 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   17f6f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   17f73:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   17f77:	48 89 d6             	mov    %rdx,%rsi
   17f7a:	48 89 c7             	mov    %rax,%rdi
   17f7d:	e8 f0 ea ff ff       	call   16a72 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   17f82:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   17f86:	74 54                	je     17fdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   17f88:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   17f8c:	48 89 c7             	mov    %rax,%rdi
   17f8f:	e8 08 0f 00 00       	call   18e9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   17f94:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   17f98:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   17f9c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   17fa0:	48 89 d6             	mov    %rdx,%rsi
   17fa3:	48 89 c7             	mov    %rax,%rdi
   17fa6:	e8 11 c6 ff ff       	call   145bc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   17fab:	84 c0                	test   %al,%al
   17fad:	74 21                	je     17fd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   17faf:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   17fb3:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   17fb7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   17fbb:	48 89 ce             	mov    %rcx,%rsi
   17fbe:	48 89 c7             	mov    %rax,%rdi
   17fc1:	e8 00 0f 00 00       	call   18ec6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   17fc6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   17fca:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   17fce:	eb 7d                	jmp    1804d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   17fd0:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   17fd4:	48 89 c7             	mov    %rax,%rdi
   17fd7:	e8 ce 00 00 00       	call   180aa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   17fdc:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   17fe0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   17fe4:	48 89 c7             	mov    %rax,%rdi
   17fe7:	e8 a8 fe ff ff       	call   17e94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17fec:	48 89 c1             	mov    %rax,%rcx
   17fef:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   17ff3:	48 89 c2             	mov    %rax,%rdx
   17ff6:	48 89 ce             	mov    %rcx,%rsi
   17ff9:	48 89 df             	mov    %rbx,%rdi
   17ffc:	e8 17 c6 ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   18001:	84 c0                	test   %al,%al
   18003:	74 21                	je     18026 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   18005:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   18009:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1800d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   18011:	48 89 ce             	mov    %rcx,%rsi
   18014:	48 89 c7             	mov    %rax,%rdi
   18017:	e8 aa 0e 00 00       	call   18ec6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   1801c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18020:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18024:	eb 27                	jmp    1804d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   18026:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1802d:	00 
   1802e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   18032:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   18036:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1803a:	48 89 ce             	mov    %rcx,%rsi
   1803d:	48 89 c7             	mov    %rax,%rdi
   18040:	e8 69 fe ff ff       	call   17eae <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   18045:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18049:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1804d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18051:	c9                   	leave
   18052:	c3                   	ret
   18053:	90                   	nop

0000000000018054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   18054:	55                   	push   %rbp
   18055:	48 89 e5             	mov    %rsp,%rbp
   18058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   1805c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18060:	48 83 c0 18          	add    $0x18,%rax
   18064:	5d                   	pop    %rbp
   18065:	c3                   	ret

0000000000018066 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   18066:	55                   	push   %rbp
   18067:	48 89 e5             	mov    %rsp,%rbp
   1806a:	48 83 ec 20          	sub    $0x20,%rsp
   1806e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18072:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18076:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1807a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1807e:	48 89 c7             	mov    %rax,%rdi
   18081:	e8 84 0e 00 00       	call   18f0a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   18086:	48 8b 10             	mov    (%rax),%rdx
   18089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1808d:	48 89 10             	mov    %rdx,(%rax)
   18090:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18094:	48 89 c7             	mov    %rax,%rdi
   18097:	e8 6e 0e 00 00       	call   18f0a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1809c:	48 8b 10             	mov    (%rax),%rdx
   1809f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180a3:	48 89 50 08          	mov    %rdx,0x8(%rax)
   180a7:	90                   	nop
   180a8:	c9                   	leave
   180a9:	c3                   	ret

00000000000180aa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   180aa:	55                   	push   %rbp
   180ab:	48 89 e5             	mov    %rsp,%rbp
   180ae:	48 83 ec 10          	sub    $0x10,%rsp
   180b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   180b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180ba:	48 8b 00             	mov    (%rax),%rax
   180bd:	48 89 c7             	mov    %rax,%rdi
   180c0:	e8 ab c3 fe ff       	call   4470 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   180c5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   180c9:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   180cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   180d0:	c9                   	leave
   180d1:	c3                   	ret

00000000000180d2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   180d2:	55                   	push   %rbp
   180d3:	48 89 e5             	mov    %rsp,%rbp
   180d6:	48 83 ec 10          	sub    $0x10,%rsp
   180da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   180de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180e2:	48 8b 00             	mov    (%rax),%rax
   180e5:	48 89 c7             	mov    %rax,%rdi
   180e8:	e8 93 c1 fe ff       	call   4280 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   180ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   180f1:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   180f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   180f8:	c9                   	leave
   180f9:	c3                   	ret

00000000000180fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   180fa:	55                   	push   %rbp
   180fb:	48 89 e5             	mov    %rsp,%rbp
   180fe:	48 83 ec 20          	sub    $0x20,%rsp
   18102:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   18106:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1810a:	48 89 c7             	mov    %rax,%rdi
   1810d:	e8 06 0e 00 00       	call   18f18 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   18112:	48 89 c2             	mov    %rax,%rdx
   18115:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   18119:	48 89 d6             	mov    %rdx,%rsi
   1811c:	48 89 c7             	mov    %rax,%rdi
   1811f:	e8 12 0e 00 00       	call   18f36 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   18124:	c9                   	leave
   18125:	c3                   	ret

0000000000018126 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   18126:	55                   	push   %rbp
   18127:	48 89 e5             	mov    %rsp,%rbp
   1812a:	41 54                	push   %r12
   1812c:	53                   	push   %rbx
   1812d:	48 83 ec 30          	sub    $0x30,%rsp
   18131:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18135:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   18139:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1813d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   18141:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   18146:	75 43                	jne    1818b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   18148:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1814c:	48 89 c7             	mov    %rax,%rdi
   1814f:	e8 82 fb ff ff       	call   17cd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   18154:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   18158:	74 31                	je     1818b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   1815a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1815e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18162:	48 89 c7             	mov    %rax,%rdi
   18165:	e8 2a fd ff ff       	call   17e94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1816a:	49 89 c4             	mov    %rax,%r12
   1816d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18171:	48 89 c7             	mov    %rax,%rdi
   18174:	e8 81 ff ff ff       	call   180fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   18179:	4c 89 e2             	mov    %r12,%rdx
   1817c:	48 89 c6             	mov    %rax,%rsi
   1817f:	48 89 df             	mov    %rbx,%rdi
   18182:	e8 91 c4 ff ff       	call   14618 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   18187:	84 c0                	test   %al,%al
   18189:	74 07                	je     18192 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   1818b:	b8 01 00 00 00       	mov    $0x1,%eax
   18190:	eb 05                	jmp    18197 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   18192:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   18197:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   1819a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1819e:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   181a2:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   181a6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   181aa:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   181ae:	89 c7                	mov    %eax,%edi
   181b0:	e8 ab be fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   181b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181b9:	48 8b 40 28          	mov    0x28(%rax),%rax
   181bd:	48 8d 50 01          	lea    0x1(%rax),%rdx
   181c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181c5:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   181c9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   181cd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   181d1:	48 89 d6             	mov    %rdx,%rsi
   181d4:	48 89 c7             	mov    %rax,%rdi
   181d7:	e8 96 e8 ff ff       	call   16a72 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   181dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   181e0:	48 83 c4 30          	add    $0x30,%rsp
   181e4:	5b                   	pop    %rbx
   181e5:	41 5c                	pop    %r12
   181e7:	5d                   	pop    %rbp
   181e8:	c3                   	ret
   181e9:	90                   	nop

00000000000181ea <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   181ea:	55                   	push   %rbp
   181eb:	48 89 e5             	mov    %rsp,%rbp
   181ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   181f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181f6:	5d                   	pop    %rbp
   181f7:	c3                   	ret

00000000000181f8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   181f8:	55                   	push   %rbp
   181f9:	48 89 e5             	mov    %rsp,%rbp
   181fc:	48 83 ec 10          	sub    $0x10,%rsp
   18200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18204:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   18208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1820c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18210:	48 89 d6             	mov    %rdx,%rsi
   18213:	48 89 c7             	mov    %rax,%rdi
   18216:	e8 77 32 ff ff       	call   b492 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   1821b:	90                   	nop
   1821c:	c9                   	leave
   1821d:	c3                   	ret

000000000001821e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   1821e:	55                   	push   %rbp
   1821f:	48 89 e5             	mov    %rsp,%rbp
   18222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18226:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   1822a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1822e:	48 8b 10             	mov    (%rax),%rdx
   18231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18235:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   18238:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1823c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18244:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   18248:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1824c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18254:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   18258:	90                   	nop
   18259:	5d                   	pop    %rbp
   1825a:	c3                   	ret

000000000001825b <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1825b:	55                   	push   %rbp
   1825c:	48 89 e5             	mov    %rsp,%rbp
   1825f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   18263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18267:	5d                   	pop    %rbp
   18268:	c3                   	ret

0000000000018269 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   18269:	55                   	push   %rbp
   1826a:	48 89 e5             	mov    %rsp,%rbp
   1826d:	48 83 ec 20          	sub    $0x20,%rsp
   18271:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   18275:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1827c:	ff ff 0f 
   1827f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   18283:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18287:	48 89 c7             	mov    %rax,%rdi
   1828a:	e8 b9 0c 00 00       	call   18f48 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   1828f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   18293:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18297:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1829b:	48 89 d6             	mov    %rdx,%rsi
   1829e:	48 89 c7             	mov    %rax,%rdi
   182a1:	e8 fa d2 fe ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
   182a6:	48 8b 00             	mov    (%rax),%rax
      }
   182a9:	c9                   	leave
   182aa:	c3                   	ret
   182ab:	90                   	nop

00000000000182ac <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   182ac:	55                   	push   %rbp
   182ad:	48 89 e5             	mov    %rsp,%rbp
   182b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   182b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182b8:	5d                   	pop    %rbp
   182b9:	c3                   	ret

00000000000182ba <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   182ba:	55                   	push   %rbp
   182bb:	48 89 e5             	mov    %rsp,%rbp
   182be:	48 83 ec 20          	sub    $0x20,%rsp
   182c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   182c6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   182ca:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   182ce:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   182d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   182d6:	48 89 d6             	mov    %rdx,%rsi
   182d9:	48 89 c7             	mov    %rax,%rdi
   182dc:	e8 81 0c 00 00       	call   18f62 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   182e1:	c9                   	leave
   182e2:	c3                   	ret

00000000000182e3 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   182e3:	55                   	push   %rbp
   182e4:	48 89 e5             	mov    %rsp,%rbp
   182e7:	48 83 ec 10          	sub    $0x10,%rsp
   182eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   182f3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   182f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182fb:	ba 00 00 00 00       	mov    $0x0,%edx
   18300:	48 89 ce             	mov    %rcx,%rsi
   18303:	48 89 c7             	mov    %rax,%rdi
   18306:	e8 b5 0c 00 00       	call   18fc0 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   1830b:	c9                   	leave
   1830c:	c3                   	ret

000000000001830d <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1830d:	55                   	push   %rbp
   1830e:	48 89 e5             	mov    %rsp,%rbp
   18311:	41 54                	push   %r12
   18313:	53                   	push   %rbx
   18314:	48 83 ec 20          	sub    $0x20,%rsp
   18318:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1831c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18320:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18324:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   18328:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1832c:	48 89 c7             	mov    %rax,%rdi
   1832f:	e8 ed 0c 00 00       	call   19021 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   18334:	49 89 c4             	mov    %rax,%r12
   18337:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1833b:	48 89 c7             	mov    %rax,%rdi
   1833e:	e8 de 0c 00 00       	call   19021 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   18343:	48 89 c3             	mov    %rax,%rbx
   18346:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1834a:	48 89 c7             	mov    %rax,%rdi
   1834d:	e8 cf 0c 00 00       	call   19021 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   18352:	48 89 c7             	mov    %rax,%rdi
   18355:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18359:	48 89 c1             	mov    %rax,%rcx
   1835c:	4c 89 e2             	mov    %r12,%rdx
   1835f:	48 89 de             	mov    %rbx,%rsi
   18362:	e8 c8 0c 00 00       	call   1902f <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   18367:	48 83 c4 20          	add    $0x20,%rsp
   1836b:	5b                   	pop    %rbx
   1836c:	41 5c                	pop    %r12
   1836e:	5d                   	pop    %rbp
   1836f:	c3                   	ret

0000000000018370 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   18370:	55                   	push   %rbp
   18371:	48 89 e5             	mov    %rsp,%rbp
   18374:	48 83 ec 10          	sub    $0x10,%rsp
   18378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1837c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   18380:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18388:	48 89 d6             	mov    %rdx,%rsi
   1838b:	48 89 c7             	mov    %rax,%rdi
   1838e:	e8 ff 0c 00 00       	call   19092 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   18393:	90                   	nop
   18394:	c9                   	leave
   18395:	c3                   	ret

0000000000018396 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   18396:	55                   	push   %rbp
   18397:	48 89 e5             	mov    %rsp,%rbp
   1839a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1839e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183a2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   183a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183ad:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   183b4:	00 
   183b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183b9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   183c0:	00 
	{ }
   183c1:	90                   	nop
   183c2:	5d                   	pop    %rbp
   183c3:	c3                   	ret

00000000000183c4 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   183c4:	55                   	push   %rbp
   183c5:	48 89 e5             	mov    %rsp,%rbp
   183c8:	48 83 ec 20          	sub    $0x20,%rsp
   183cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   183d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   183d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   183d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   183dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   183e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183e4:	48 89 ce             	mov    %rcx,%rsi
   183e7:	48 89 c7             	mov    %rax,%rdi
   183ea:	e8 b3 0c 00 00       	call   190a2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   183ef:	90                   	nop
   183f0:	c9                   	leave
   183f1:	c3                   	ret

00000000000183f2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   183f2:	55                   	push   %rbp
   183f3:	48 89 e5             	mov    %rsp,%rbp
   183f6:	48 83 ec 20          	sub    $0x20,%rsp
   183fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   183fe:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   18405:	8e e3 00 
   18408:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1840c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18410:	48 89 c7             	mov    %rax,%rdi
   18413:	e8 c4 0c 00 00       	call   190dc <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   18418:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1841c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18420:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18424:	48 89 d6             	mov    %rdx,%rsi
   18427:	48 89 c7             	mov    %rax,%rdi
   1842a:	e8 71 d1 fe ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
   1842f:	48 8b 00             	mov    (%rax),%rax
      }
   18432:	c9                   	leave
   18433:	c3                   	ret

0000000000018434 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   18434:	55                   	push   %rbp
   18435:	48 89 e5             	mov    %rsp,%rbp
   18438:	48 83 ec 10          	sub    $0x10,%rsp
   1843c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18440:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18444:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1844c:	ba 00 00 00 00       	mov    $0x0,%edx
   18451:	48 89 ce             	mov    %rcx,%rsi
   18454:	48 89 c7             	mov    %rax,%rdi
   18457:	e8 9a 0c 00 00       	call   190f6 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   1845c:	c9                   	leave
   1845d:	c3                   	ret

000000000001845e <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1845e:	55                   	push   %rbp
   1845f:	48 89 e5             	mov    %rsp,%rbp
   18462:	48 83 ec 30          	sub    $0x30,%rsp
   18466:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1846a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1846e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18472:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18476:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1847a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1847e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18486:	48 89 ce             	mov    %rcx,%rsi
   18489:	48 89 c7             	mov    %rax,%rdi
   1848c:	e8 d0 0c 00 00       	call   19161 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   18491:	c9                   	leave
   18492:	c3                   	ret

0000000000018493 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   18493:	55                   	push   %rbp
   18494:	48 89 e5             	mov    %rsp,%rbp
   18497:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1849b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1849f:	90                   	nop
   184a0:	5d                   	pop    %rbp
   184a1:	c3                   	ret

00000000000184a2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   184a2:	55                   	push   %rbp
   184a3:	48 89 e5             	mov    %rsp,%rbp
   184a6:	48 83 ec 20          	sub    $0x20,%rsp
   184aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   184ae:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   184b5:	ff ff 0f 
   184b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   184bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184c0:	48 89 c7             	mov    %rax,%rdi
   184c3:	e8 c6 0c 00 00       	call   1918e <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   184c8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   184cc:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   184d0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   184d4:	48 89 d6             	mov    %rdx,%rsi
   184d7:	48 89 c7             	mov    %rax,%rdi
   184da:	e8 c1 d0 fe ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
   184df:	48 8b 00             	mov    (%rax),%rax
      }
   184e2:	c9                   	leave
   184e3:	c3                   	ret

00000000000184e4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   184e4:	55                   	push   %rbp
   184e5:	48 89 e5             	mov    %rsp,%rbp
   184e8:	48 83 ec 10          	sub    $0x10,%rsp
   184ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   184f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   184f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   184f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184fc:	48 89 d6             	mov    %rdx,%rsi
   184ff:	48 89 c7             	mov    %rax,%rdi
   18502:	e8 f1 ea ff ff       	call   16ff8 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   18507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1850b:	48 89 c7             	mov    %rax,%rdi
   1850e:	e8 95 0c 00 00       	call   191a8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   18513:	90                   	nop
   18514:	c9                   	leave
   18515:	c3                   	ret

0000000000018516 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   18516:	55                   	push   %rbp
   18517:	48 89 e5             	mov    %rsp,%rbp
   1851a:	48 83 ec 10          	sub    $0x10,%rsp
   1851e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18522:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   18526:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1852a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1852e:	48 89 d6             	mov    %rdx,%rsi
   18531:	48 89 c7             	mov    %rax,%rdi
   18534:	e8 9d 0c 00 00       	call   191d6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   18539:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1853d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   18540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18544:	48 8b 10             	mov    (%rax),%rdx
   18547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1854b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1854f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18553:	48 8b 00             	mov    (%rax),%rax
   18556:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1855a:	48 c1 e2 03          	shl    $0x3,%rdx
   1855e:	48 01 c2             	add    %rax,%rdx
   18561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18565:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   18569:	90                   	nop
   1856a:	c9                   	leave
   1856b:	c3                   	ret

000000000001856c <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1856c:	55                   	push   %rbp
   1856d:	48 89 e5             	mov    %rsp,%rbp
   18570:	48 83 ec 20          	sub    $0x20,%rsp
   18574:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18578:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1857c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   18580:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18588:	48 89 d6             	mov    %rdx,%rsi
   1858b:	48 89 c7             	mov    %rax,%rdi
   1858e:	e8 76 0c 00 00       	call   19209 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   18593:	c9                   	leave
   18594:	c3                   	ret
   18595:	90                   	nop

0000000000018596 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   18596:	55                   	push   %rbp
   18597:	48 89 e5             	mov    %rsp,%rbp
   1859a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1859e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   185a2:	90                   	nop
   185a3:	5d                   	pop    %rbp
   185a4:	c3                   	ret

00000000000185a5 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   185a5:	55                   	push   %rbp
   185a6:	48 89 e5             	mov    %rsp,%rbp
   185a9:	48 83 ec 20          	sub    $0x20,%rsp
   185ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   185b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   185b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   185bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   185c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185c5:	48 89 ce             	mov    %rcx,%rsi
   185c8:	48 89 c7             	mov    %rax,%rdi
   185cb:	e8 62 0c 00 00       	call   19232 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   185d0:	90                   	nop
   185d1:	c9                   	leave
   185d2:	c3                   	ret

00000000000185d3 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   185d3:	55                   	push   %rbp
   185d4:	48 89 e5             	mov    %rsp,%rbp
   185d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   185df:	90                   	nop
   185e0:	5d                   	pop    %rbp
   185e1:	c3                   	ret

00000000000185e2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   185e2:	55                   	push   %rbp
   185e3:	48 89 e5             	mov    %rsp,%rbp
   185e6:	48 83 ec 20          	sub    $0x20,%rsp
   185ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   185ee:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   185f5:	ff ff 0f 
   185f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   185fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18600:	48 89 c7             	mov    %rax,%rdi
   18603:	e8 5b 0c 00 00       	call   19263 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   18608:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1860c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18610:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18614:	48 89 d6             	mov    %rdx,%rsi
   18617:	48 89 c7             	mov    %rax,%rdi
   1861a:	e8 81 cf fe ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
   1861f:	48 8b 00             	mov    (%rax),%rax
      }
   18622:	c9                   	leave
   18623:	c3                   	ret

0000000000018624 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   18624:	55                   	push   %rbp
   18625:	48 89 e5             	mov    %rsp,%rbp
   18628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1862c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18630:	5d                   	pop    %rbp
   18631:	c3                   	ret

0000000000018632 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   18632:	55                   	push   %rbp
   18633:	48 89 e5             	mov    %rsp,%rbp
   18636:	48 83 ec 20          	sub    $0x20,%rsp
   1863a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1863e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   18642:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   18646:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1864a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1864e:	48 89 d6             	mov    %rdx,%rsi
   18651:	48 89 c7             	mov    %rax,%rdi
   18654:	e8 24 0c 00 00       	call   1927d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   18659:	c9                   	leave
   1865a:	c3                   	ret

000000000001865b <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1865b:	55                   	push   %rbp
   1865c:	48 89 e5             	mov    %rsp,%rbp
   1865f:	48 83 ec 10          	sub    $0x10,%rsp
   18663:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18667:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1866b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1866f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18673:	ba 00 00 00 00       	mov    $0x0,%edx
   18678:	48 89 ce             	mov    %rcx,%rsi
   1867b:	48 89 c7             	mov    %rax,%rdi
   1867e:	e8 57 0c 00 00       	call   192da <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   18683:	c9                   	leave
   18684:	c3                   	ret

0000000000018685 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   18685:	55                   	push   %rbp
   18686:	48 89 e5             	mov    %rsp,%rbp
   18689:	41 54                	push   %r12
   1868b:	53                   	push   %rbx
   1868c:	48 83 ec 20          	sub    $0x20,%rsp
   18690:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18694:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18698:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1869c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   186a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   186a4:	48 89 c7             	mov    %rax,%rdi
   186a7:	e8 8f 0c 00 00       	call   1933b <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   186ac:	49 89 c4             	mov    %rax,%r12
   186af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   186b3:	48 89 c7             	mov    %rax,%rdi
   186b6:	e8 80 0c 00 00       	call   1933b <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   186bb:	48 89 c3             	mov    %rax,%rbx
   186be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   186c2:	48 89 c7             	mov    %rax,%rdi
   186c5:	e8 71 0c 00 00       	call   1933b <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   186ca:	48 89 c7             	mov    %rax,%rdi
   186cd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   186d1:	48 89 c1             	mov    %rax,%rcx
   186d4:	4c 89 e2             	mov    %r12,%rdx
   186d7:	48 89 de             	mov    %rbx,%rsi
   186da:	e8 6a 0c 00 00       	call   19349 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   186df:	48 83 c4 20          	add    $0x20,%rsp
   186e3:	5b                   	pop    %rbx
   186e4:	41 5c                	pop    %r12
   186e6:	5d                   	pop    %rbp
   186e7:	c3                   	ret

00000000000186e8 <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   186e8:	55                   	push   %rbp
   186e9:	48 89 e5             	mov    %rsp,%rbp
   186ec:	48 83 ec 10          	sub    $0x10,%rsp
   186f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   186f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   186fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18700:	48 89 d6             	mov    %rdx,%rsi
   18703:	48 89 c7             	mov    %rax,%rdi
   18706:	e8 a1 0c 00 00       	call   193ac <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   1870b:	90                   	nop
   1870c:	c9                   	leave
   1870d:	c3                   	ret

000000000001870e <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1870e:	55                   	push   %rbp
   1870f:	48 89 e5             	mov    %rsp,%rbp
   18712:	48 83 ec 30          	sub    $0x30,%rsp
   18716:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1871a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1871e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18722:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18726:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1872a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1872e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18732:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18736:	48 89 ce             	mov    %rcx,%rsi
   18739:	48 89 c7             	mov    %rax,%rdi
   1873c:	e8 7a 0c 00 00       	call   193bb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   18741:	c9                   	leave
   18742:	c3                   	ret

0000000000018743 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   18743:	55                   	push   %rbp
   18744:	48 89 e5             	mov    %rsp,%rbp
   18747:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1874b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1874f:	90                   	nop
   18750:	5d                   	pop    %rbp
   18751:	c3                   	ret

0000000000018752 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   18752:	55                   	push   %rbp
   18753:	48 89 e5             	mov    %rsp,%rbp
   18756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1875a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1875e:	5d                   	pop    %rbp
   1875f:	c3                   	ret

0000000000018760 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   18760:	55                   	push   %rbp
   18761:	48 89 e5             	mov    %rsp,%rbp
   18764:	48 83 ec 10          	sub    $0x10,%rsp
   18768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1876c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   18770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18774:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18778:	48 89 d6             	mov    %rdx,%rsi
   1877b:	48 89 c7             	mov    %rax,%rdi
   1877e:	e8 2b d7 fe ff       	call   5eae <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
   18783:	90                   	nop
   18784:	c9                   	leave
   18785:	c3                   	ret

0000000000018786 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   18786:	55                   	push   %rbp
   18787:	48 89 e5             	mov    %rsp,%rbp
   1878a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1878e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   18792:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18796:	48 8b 10             	mov    (%rax),%rdx
   18799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1879d:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   187a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   187a4:	48 8b 50 08          	mov    0x8(%rax),%rdx
   187a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187ac:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   187b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   187b4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   187b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187bc:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   187c0:	90                   	nop
   187c1:	5d                   	pop    %rbp
   187c2:	c3                   	ret

00000000000187c3 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   187c3:	55                   	push   %rbp
   187c4:	48 89 e5             	mov    %rsp,%rbp
   187c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   187cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187cf:	5d                   	pop    %rbp
   187d0:	c3                   	ret

00000000000187d1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   187d1:	55                   	push   %rbp
   187d2:	48 89 e5             	mov    %rsp,%rbp
   187d5:	48 83 ec 20          	sub    $0x20,%rsp
   187d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   187dd:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   187e4:	ff ff 0f 
   187e7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   187eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   187ef:	48 89 c7             	mov    %rax,%rdi
   187f2:	e8 f1 0b 00 00       	call   193e8 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   187f7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   187fb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   187ff:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18803:	48 89 d6             	mov    %rdx,%rsi
   18806:	48 89 c7             	mov    %rax,%rdi
   18809:	e8 92 cd fe ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
   1880e:	48 8b 00             	mov    (%rax),%rax
      }
   18811:	c9                   	leave
   18812:	c3                   	ret
   18813:	90                   	nop

0000000000018814 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   18814:	55                   	push   %rbp
   18815:	48 89 e5             	mov    %rsp,%rbp
   18818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1881c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18820:	5d                   	pop    %rbp
   18821:	c3                   	ret

0000000000018822 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   18822:	55                   	push   %rbp
   18823:	48 89 e5             	mov    %rsp,%rbp
   18826:	48 83 ec 20          	sub    $0x20,%rsp
   1882a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1882e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   18832:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   18836:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1883a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1883e:	48 89 d6             	mov    %rdx,%rsi
   18841:	48 89 c7             	mov    %rax,%rdi
   18844:	e8 b9 0b 00 00       	call   19402 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>
    }
   18849:	c9                   	leave
   1884a:	c3                   	ret

000000000001884b <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1884b:	55                   	push   %rbp
   1884c:	48 89 e5             	mov    %rsp,%rbp
   1884f:	48 83 ec 10          	sub    $0x10,%rsp
   18853:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18857:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1885b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1885f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18863:	ba 00 00 00 00       	mov    $0x0,%edx
   18868:	48 89 ce             	mov    %rcx,%rsi
   1886b:	48 89 c7             	mov    %rax,%rdi
   1886e:	e8 ed 0b 00 00       	call   19460 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   18873:	c9                   	leave
   18874:	c3                   	ret

0000000000018875 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   18875:	55                   	push   %rbp
   18876:	48 89 e5             	mov    %rsp,%rbp
   18879:	41 54                	push   %r12
   1887b:	53                   	push   %rbx
   1887c:	48 83 ec 20          	sub    $0x20,%rsp
   18880:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18884:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18888:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1888c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   18890:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18894:	48 89 c7             	mov    %rax,%rdi
   18897:	e8 25 0c 00 00       	call   194c1 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1889c:	49 89 c4             	mov    %rax,%r12
   1889f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   188a3:	48 89 c7             	mov    %rax,%rdi
   188a6:	e8 16 0c 00 00       	call   194c1 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   188ab:	48 89 c3             	mov    %rax,%rbx
   188ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188b2:	48 89 c7             	mov    %rax,%rdi
   188b5:	e8 07 0c 00 00       	call   194c1 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   188ba:	48 89 c7             	mov    %rax,%rdi
   188bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   188c1:	48 89 c1             	mov    %rax,%rcx
   188c4:	4c 89 e2             	mov    %r12,%rdx
   188c7:	48 89 de             	mov    %rbx,%rsi
   188ca:	e8 00 0c 00 00       	call   194cf <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   188cf:	48 83 c4 20          	add    $0x20,%rsp
   188d3:	5b                   	pop    %rbx
   188d4:	41 5c                	pop    %r12
   188d6:	5d                   	pop    %rbp
   188d7:	c3                   	ret

00000000000188d8 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   188d8:	55                   	push   %rbp
   188d9:	48 89 e5             	mov    %rsp,%rbp
   188dc:	48 83 ec 20          	sub    $0x20,%rsp
   188e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   188e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   188eb:	ff ff 0f 
   188ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   188f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188f6:	48 89 c7             	mov    %rax,%rdi
   188f9:	e8 34 0c 00 00       	call   19532 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>
   188fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   18902:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18906:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1890a:	48 89 d6             	mov    %rdx,%rsi
   1890d:	48 89 c7             	mov    %rax,%rdi
   18910:	e8 8b cc fe ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
   18915:	48 8b 00             	mov    (%rax),%rax
      }
   18918:	c9                   	leave
   18919:	c3                   	ret

000000000001891a <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1891a:	55                   	push   %rbp
   1891b:	48 89 e5             	mov    %rsp,%rbp
   1891e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   18922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18926:	5d                   	pop    %rbp
   18927:	c3                   	ret

0000000000018928 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   18928:	55                   	push   %rbp
   18929:	48 89 e5             	mov    %rsp,%rbp
   1892c:	48 83 ec 20          	sub    $0x20,%rsp
   18930:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18934:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   18938:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1893c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18940:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18944:	48 89 d6             	mov    %rdx,%rsi
   18947:	48 89 c7             	mov    %rax,%rdi
   1894a:	e8 fd 0b 00 00       	call   1954c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>
    }
   1894f:	c9                   	leave
   18950:	c3                   	ret

0000000000018951 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   18951:	55                   	push   %rbp
   18952:	48 89 e5             	mov    %rsp,%rbp
   18955:	48 83 ec 10          	sub    $0x10,%rsp
   18959:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1895d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18961:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18969:	ba 00 00 00 00       	mov    $0x0,%edx
   1896e:	48 89 ce             	mov    %rcx,%rsi
   18971:	48 89 c7             	mov    %rax,%rdi
   18974:	e8 31 0c 00 00       	call   195aa <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>
   18979:	c9                   	leave
   1897a:	c3                   	ret

000000000001897b <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1897b:	55                   	push   %rbp
   1897c:	48 89 e5             	mov    %rsp,%rbp
   1897f:	41 54                	push   %r12
   18981:	53                   	push   %rbx
   18982:	48 83 ec 20          	sub    $0x20,%rsp
   18986:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1898a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1898e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18992:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   18996:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1899a:	48 89 c7             	mov    %rax,%rdi
   1899d:	e8 69 0c 00 00       	call   1960b <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   189a2:	49 89 c4             	mov    %rax,%r12
   189a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   189a9:	48 89 c7             	mov    %rax,%rdi
   189ac:	e8 5a 0c 00 00       	call   1960b <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   189b1:	48 89 c3             	mov    %rax,%rbx
   189b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   189b8:	48 89 c7             	mov    %rax,%rdi
   189bb:	e8 4b 0c 00 00       	call   1960b <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   189c0:	48 89 c7             	mov    %rax,%rdi
   189c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   189c7:	48 89 c1             	mov    %rax,%rcx
   189ca:	4c 89 e2             	mov    %r12,%rdx
   189cd:	48 89 de             	mov    %rbx,%rsi
   189d0:	e8 44 0c 00 00       	call   19619 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   189d5:	48 83 c4 20          	add    $0x20,%rsp
   189d9:	5b                   	pop    %rbx
   189da:	41 5c                	pop    %r12
   189dc:	5d                   	pop    %rbp
   189dd:	c3                   	ret

00000000000189de <_ZNSaIP13VkSemaphore_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   189de:	55                   	push   %rbp
   189df:	48 89 e5             	mov    %rsp,%rbp
   189e2:	48 83 ec 10          	sub    $0x10,%rsp
   189e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   189ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   189f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189f6:	48 89 d6             	mov    %rdx,%rsi
   189f9:	48 89 c7             	mov    %rax,%rdi
   189fc:	e8 7b 0c 00 00       	call   1967c <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>
   18a01:	90                   	nop
   18a02:	c9                   	leave
   18a03:	c3                   	ret

0000000000018a04 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   18a04:	55                   	push   %rbp
   18a05:	48 89 e5             	mov    %rsp,%rbp
   18a08:	48 83 ec 30          	sub    $0x30,%rsp
   18a0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18a10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18a14:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18a18:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18a1c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   18a20:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18a24:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18a28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18a2c:	48 89 ce             	mov    %rcx,%rsi
   18a2f:	48 89 c7             	mov    %rax,%rdi
   18a32:	e8 54 0c 00 00       	call   1968b <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>
    }
   18a37:	c9                   	leave
   18a38:	c3                   	ret

0000000000018a39 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
   18a39:	55                   	push   %rbp
   18a3a:	48 89 e5             	mov    %rsp,%rbp
   18a3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a41:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18a45:	90                   	nop
   18a46:	5d                   	pop    %rbp
   18a47:	c3                   	ret

0000000000018a48 <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   18a48:	55                   	push   %rbp
   18a49:	48 89 e5             	mov    %rsp,%rbp
   18a4c:	48 83 ec 10          	sub    $0x10,%rsp
   18a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   18a58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a60:	48 89 d6             	mov    %rdx,%rsi
   18a63:	48 89 c7             	mov    %rax,%rdi
   18a66:	e8 4d 0c 00 00       	call   196b8 <_ZNSt15__new_allocatorIjEC1ERKS0_>
   18a6b:	90                   	nop
   18a6c:	c9                   	leave
   18a6d:	c3                   	ret

0000000000018a6e <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   18a6e:	55                   	push   %rbp
   18a6f:	48 89 e5             	mov    %rsp,%rbp
   18a72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   18a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a7a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   18a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a85:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   18a8c:	00 
   18a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a91:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   18a98:	00 
	{ }
   18a99:	90                   	nop
   18a9a:	5d                   	pop    %rbp
   18a9b:	c3                   	ret

0000000000018a9c <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18a9c:	55                   	push   %rbp
   18a9d:	48 89 e5             	mov    %rsp,%rbp
   18aa0:	48 83 ec 20          	sub    $0x20,%rsp
   18aa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18aa8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18aac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18ab0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18ab4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18abc:	48 89 ce             	mov    %rcx,%rsi
   18abf:	48 89 c7             	mov    %rax,%rdi
   18ac2:	e8 01 0c 00 00       	call   196c8 <_ZNSt15__new_allocatorIjE10deallocateEPjm>
   18ac7:	90                   	nop
   18ac8:	c9                   	leave
   18ac9:	c3                   	ret

0000000000018aca <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   18aca:	55                   	push   %rbp
   18acb:	48 89 e5             	mov    %rsp,%rbp
   18ace:	48 83 ec 20          	sub    $0x20,%rsp
   18ad2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   18ad6:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   18add:	ff ff 1f 
   18ae0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   18ae4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18ae8:	48 89 c7             	mov    %rax,%rdi
   18aeb:	e8 09 0c 00 00       	call   196f9 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>
   18af0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   18af4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18af8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18afc:	48 89 d6             	mov    %rdx,%rsi
   18aff:	48 89 c7             	mov    %rax,%rdi
   18b02:	e8 99 ca fe ff       	call   55a0 <_ZSt3minImERKT_S2_S2_>
   18b07:	48 8b 00             	mov    (%rax),%rax
      }
   18b0a:	c9                   	leave
   18b0b:	c3                   	ret

0000000000018b0c <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   18b0c:	55                   	push   %rbp
   18b0d:	48 89 e5             	mov    %rsp,%rbp
   18b10:	48 83 ec 10          	sub    $0x10,%rsp
   18b14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18b1c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18b20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b24:	ba 00 00 00 00       	mov    $0x0,%edx
   18b29:	48 89 ce             	mov    %rcx,%rsi
   18b2c:	48 89 c7             	mov    %rax,%rdi
   18b2f:	e8 e0 0b 00 00       	call   19714 <_ZNSt15__new_allocatorIjE8allocateEmPKv>
   18b34:	c9                   	leave
   18b35:	c3                   	ret

0000000000018b36 <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   18b36:	55                   	push   %rbp
   18b37:	48 89 e5             	mov    %rsp,%rbp
   18b3a:	48 83 ec 30          	sub    $0x30,%rsp
   18b3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18b42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18b46:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18b4a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18b4e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   18b52:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18b56:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18b5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18b5e:	48 89 ce             	mov    %rcx,%rsi
   18b61:	48 89 c7             	mov    %rax,%rdi
   18b64:	e8 0c 0c 00 00       	call   19775 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>
    }
   18b69:	c9                   	leave
   18b6a:	c3                   	ret

0000000000018b6b <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>:
   18b6b:	55                   	push   %rbp
   18b6c:	48 89 e5             	mov    %rsp,%rbp
   18b6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18b77:	90                   	nop
   18b78:	5d                   	pop    %rbp
   18b79:	c3                   	ret

0000000000018b7a <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   18b7a:	55                   	push   %rbp
   18b7b:	48 89 e5             	mov    %rsp,%rbp
   18b7e:	48 83 ec 20          	sub    $0x20,%rsp
   18b82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18b8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   18b8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18b92:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18b99:	00 
   18b9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18b9e:	48 89 d6             	mov    %rdx,%rsi
   18ba1:	48 89 c7             	mov    %rax,%rdi
   18ba4:	e8 87 b8 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   18ba9:	c9                   	leave
   18baa:	c3                   	ret
   18bab:	90                   	nop

0000000000018bac <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   18bac:	55                   	push   %rbp
   18bad:	48 89 e5             	mov    %rsp,%rbp
   18bb0:	48 83 ec 20          	sub    $0x20,%rsp
   18bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18bb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18bbc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   18bc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18bc4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18bcb:	00 
   18bcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18bd0:	48 89 d6             	mov    %rdx,%rsi
   18bd3:	48 89 c7             	mov    %rax,%rdi
   18bd6:	e8 55 b8 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   18bdb:	c9                   	leave
   18bdc:	c3                   	ret

0000000000018bdd <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   18bdd:	55                   	push   %rbp
   18bde:	48 89 e5             	mov    %rsp,%rbp
   18be1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18be5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18be9:	90                   	nop
   18bea:	5d                   	pop    %rbp
   18beb:	c3                   	ret

0000000000018bec <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   18bec:	55                   	push   %rbp
   18bed:	48 89 e5             	mov    %rsp,%rbp
   18bf0:	48 83 ec 20          	sub    $0x20,%rsp
   18bf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18bf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18bfc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   18c00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c04:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18c0b:	00 
   18c0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18c10:	48 89 d6             	mov    %rdx,%rsi
   18c13:	48 89 c7             	mov    %rax,%rdi
   18c16:	e8 15 b8 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   18c1b:	c9                   	leave
   18c1c:	c3                   	ret
   18c1d:	90                   	nop

0000000000018c1e <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   18c1e:	55                   	push   %rbp
   18c1f:	48 89 e5             	mov    %rsp,%rbp
   18c22:	48 83 ec 20          	sub    $0x20,%rsp
   18c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18c2e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   18c32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c36:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18c3d:	00 
   18c3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18c42:	48 89 d6             	mov    %rdx,%rsi
   18c45:	48 89 c7             	mov    %rax,%rdi
   18c48:	e8 e3 b7 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   18c4d:	c9                   	leave
   18c4e:	c3                   	ret

0000000000018c4f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>:
   18c4f:	55                   	push   %rbp
   18c50:	48 89 e5             	mov    %rsp,%rbp
   18c53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c57:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18c5b:	90                   	nop
   18c5c:	5d                   	pop    %rbp
   18c5d:	c3                   	ret

0000000000018c5e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   18c5e:	55                   	push   %rbp
   18c5f:	48 89 e5             	mov    %rsp,%rbp
   18c62:	48 83 ec 20          	sub    $0x20,%rsp
   18c66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18c6e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   18c72:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18c76:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c7e:	48 89 ce             	mov    %rcx,%rsi
   18c81:	48 89 c7             	mov    %rax,%rdi
   18c84:	e8 19 0b 00 00       	call   197a2 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   18c89:	c9                   	leave
   18c8a:	c3                   	ret
   18c8b:	90                   	nop

0000000000018c8c <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   18c8c:	55                   	push   %rbp
   18c8d:	48 89 e5             	mov    %rsp,%rbp
   18c90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   18c94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c98:	5d                   	pop    %rbp
   18c99:	c3                   	ret

0000000000018c9a <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   18c9a:	55                   	push   %rbp
   18c9b:	48 89 e5             	mov    %rsp,%rbp
   18c9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   18ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ca6:	5d                   	pop    %rbp
   18ca7:	c3                   	ret

0000000000018ca8 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   18ca8:	55                   	push   %rbp
   18ca9:	48 89 e5             	mov    %rsp,%rbp
   18cac:	48 83 ec 30          	sub    $0x30,%rsp
   18cb0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18cb4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18cb8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18cbc:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   18cc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18cc4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   18cc8:	48 c1 f8 03          	sar    $0x3,%rax
   18ccc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   18cd0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18cd5:	7e 1f                	jle    18cf6 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   18cd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18cdb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18ce2:	00 
   18ce3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   18ce7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18ceb:	48 89 ce             	mov    %rcx,%rsi
   18cee:	48 89 c7             	mov    %rax,%rdi
   18cf1:	e8 9a ba fe ff       	call   4790 <memmove@plt>
      return __result + __count;
   18cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18cfa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18d01:	00 
   18d02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d06:	48 01 d0             	add    %rdx,%rax
    }
   18d09:	c9                   	leave
   18d0a:	c3                   	ret
   18d0b:	90                   	nop

0000000000018d0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   18d0c:	55                   	push   %rbp
   18d0d:	48 89 e5             	mov    %rsp,%rbp
   18d10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   18d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d18:	5d                   	pop    %rbp
   18d19:	c3                   	ret

0000000000018d1a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   18d1a:	55                   	push   %rbp
   18d1b:	48 89 e5             	mov    %rsp,%rbp
   18d1e:	48 83 ec 10          	sub    $0x10,%rsp
   18d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   18d2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d32:	48 89 d6             	mov    %rdx,%rsi
   18d35:	48 89 c7             	mov    %rax,%rdi
   18d38:	e8 cd 0a 00 00       	call   1980a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   18d3d:	90                   	nop
   18d3e:	c9                   	leave
   18d3f:	c3                   	ret

0000000000018d40 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18d40:	55                   	push   %rbp
   18d41:	48 89 e5             	mov    %rsp,%rbp
   18d44:	48 83 ec 20          	sub    $0x20,%rsp
   18d48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18d50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18d54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18d58:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d60:	48 89 ce             	mov    %rcx,%rsi
   18d63:	48 89 c7             	mov    %rax,%rdi
   18d66:	e8 bf 0a 00 00       	call   1982a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   18d6b:	90                   	nop
   18d6c:	c9                   	leave
   18d6d:	c3                   	ret

0000000000018d6e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   18d6e:	55                   	push   %rbp
   18d6f:	48 89 e5             	mov    %rsp,%rbp
   18d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   18d76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d7a:	5d                   	pop    %rbp
   18d7b:	c3                   	ret

0000000000018d7c <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   18d7c:	55                   	push   %rbp
   18d7d:	48 89 e5             	mov    %rsp,%rbp
   18d80:	48 83 ec 10          	sub    $0x10,%rsp
   18d84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   18d8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18d90:	48 89 c7             	mov    %rax,%rdi
   18d93:	e8 fa d6 ff ff       	call   16492 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   18d98:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18d9c:	48 89 02             	mov    %rax,(%rdx)
   18d9f:	90                   	nop
   18da0:	c9                   	leave
   18da1:	c3                   	ret

0000000000018da2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   18da2:	55                   	push   %rbp
   18da3:	48 89 e5             	mov    %rsp,%rbp
   18da6:	48 83 ec 10          	sub    $0x10,%rsp
   18daa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   18dae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18db2:	48 89 c7             	mov    %rax,%rdi
   18db5:	e8 52 ff ff ff       	call   18d0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   18dba:	be 01 00 00 00       	mov    $0x1,%esi
   18dbf:	48 89 c7             	mov    %rax,%rdi
   18dc2:	e8 9d 0a 00 00       	call   19864 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   18dc7:	c9                   	leave
   18dc8:	c3                   	ret
   18dc9:	90                   	nop

0000000000018dca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   18dca:	55                   	push   %rbp
   18dcb:	48 89 e5             	mov    %rsp,%rbp
   18dce:	41 56                	push   %r14
   18dd0:	41 55                	push   %r13
   18dd2:	41 54                	push   %r12
   18dd4:	53                   	push   %rbx
   18dd5:	48 83 ec 30          	sub    $0x30,%rsp
   18dd9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18ddd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   18de1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   18de5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   18de9:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   18ded:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18df1:	48 89 c6             	mov    %rax,%rsi
   18df4:	bf 48 00 00 00       	mov    $0x48,%edi
   18df9:	e8 11 cd fe ff       	call   5b0f <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   18dfe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   18e02:	48 89 c7             	mov    %rax,%rdi
   18e05:	e8 e5 d6 ff ff       	call   164ef <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   18e0a:	49 89 c6             	mov    %rax,%r14
   18e0d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18e11:	48 89 c7             	mov    %rax,%rdi
   18e14:	e8 c8 d6 ff ff       	call   164e1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   18e19:	49 89 c5             	mov    %rax,%r13
   18e1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18e20:	48 89 c7             	mov    %rax,%rdi
   18e23:	e8 ab d6 ff ff       	call   164d3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   18e28:	49 89 c4             	mov    %rax,%r12
   18e2b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18e2f:	48 89 c7             	mov    %rax,%rdi
   18e32:	e8 15 d6 ff ff       	call   1644c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   18e37:	48 89 c3             	mov    %rax,%rbx
   18e3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e3e:	48 89 c7             	mov    %rax,%rdi
   18e41:	e8 c6 fe ff ff       	call   18d0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   18e46:	4d 89 f0             	mov    %r14,%r8
   18e49:	4c 89 e9             	mov    %r13,%rcx
   18e4c:	4c 89 e2             	mov    %r12,%rdx
   18e4f:	48 89 de             	mov    %rbx,%rsi
   18e52:	48 89 c7             	mov    %rax,%rdi
   18e55:	e8 34 0a 00 00       	call   1988e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   18e5a:	eb 33                	jmp    18e8f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   18e5c:	48 89 c7             	mov    %rax,%rdi
   18e5f:	e8 dc b2 fe ff       	call   4140 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   18e64:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18e68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e6c:	48 89 d6             	mov    %rdx,%rsi
   18e6f:	48 89 c7             	mov    %rax,%rdi
   18e72:	e8 29 ee ff ff       	call   17ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   18e77:	e8 44 b8 fe ff       	call   46c0 <__cxa_rethrow@plt>
	  __catch(...)
   18e7c:	48 89 c3             	mov    %rax,%rbx
   18e7f:	e8 1c b9 fe ff       	call   47a0 <__cxa_end_catch@plt>
   18e84:	48 89 d8             	mov    %rbx,%rax
   18e87:	48 89 c7             	mov    %rax,%rdi
   18e8a:	e8 91 b9 fe ff       	call   4820 <_Unwind_Resume@plt>
	}
   18e8f:	48 83 c4 30          	add    $0x30,%rsp
   18e93:	5b                   	pop    %rbx
   18e94:	41 5c                	pop    %r12
   18e96:	41 5d                	pop    %r13
   18e98:	41 5e                	pop    %r14
   18e9a:	5d                   	pop    %rbp
   18e9b:	c3                   	ret

0000000000018e9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   18e9c:	55                   	push   %rbp
   18e9d:	48 89 e5             	mov    %rsp,%rbp
   18ea0:	48 83 ec 20          	sub    $0x20,%rsp
   18ea4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   18ea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18eac:	48 8b 50 18          	mov    0x18(%rax),%rdx
   18eb0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18eb4:	48 89 d6             	mov    %rdx,%rsi
   18eb7:	48 89 c7             	mov    %rax,%rdi
   18eba:	e8 b3 db ff ff       	call   16a72 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   18ebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ec3:	c9                   	leave
   18ec4:	c3                   	ret
   18ec5:	90                   	nop

0000000000018ec6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   18ec6:	55                   	push   %rbp
   18ec7:	48 89 e5             	mov    %rsp,%rbp
   18eca:	48 83 ec 20          	sub    $0x20,%rsp
   18ece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ed2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18ed6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   18eda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18ede:	48 89 c7             	mov    %rax,%rdi
   18ee1:	e8 14 0a 00 00       	call   198fa <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   18ee6:	48 8b 10             	mov    (%rax),%rdx
   18ee9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18eed:	48 89 10             	mov    %rdx,(%rax)
   18ef0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18ef4:	48 89 c7             	mov    %rax,%rdi
   18ef7:	e8 0e 00 00 00       	call   18f0a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   18efc:	48 8b 10             	mov    (%rax),%rdx
   18eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f03:	48 89 50 08          	mov    %rdx,0x8(%rax)
   18f07:	90                   	nop
   18f08:	c9                   	leave
   18f09:	c3                   	ret

0000000000018f0a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   18f0a:	55                   	push   %rbp
   18f0b:	48 89 e5             	mov    %rsp,%rbp
   18f0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   18f12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f16:	5d                   	pop    %rbp
   18f17:	c3                   	ret

0000000000018f18 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   18f18:	55                   	push   %rbp
   18f19:	48 89 e5             	mov    %rsp,%rbp
   18f1c:	48 83 ec 10          	sub    $0x10,%rsp
   18f20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   18f24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f28:	48 83 c0 20          	add    $0x20,%rax
   18f2c:	48 89 c7             	mov    %rax,%rdi
   18f2f:	e8 d4 09 00 00       	call   19908 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   18f34:	c9                   	leave
   18f35:	c3                   	ret

0000000000018f36 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   18f36:	55                   	push   %rbp
   18f37:	48 89 e5             	mov    %rsp,%rbp
   18f3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   18f42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18f46:	5d                   	pop    %rbp
   18f47:	c3                   	ret

0000000000018f48 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   18f48:	55                   	push   %rbp
   18f49:	48 89 e5             	mov    %rsp,%rbp
   18f4c:	48 83 ec 10          	sub    $0x10,%rsp
   18f50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   18f54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f58:	48 89 c7             	mov    %rax,%rdi
   18f5b:	e8 c2 09 00 00       	call   19922 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   18f60:	c9                   	leave
   18f61:	c3                   	ret

0000000000018f62 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   18f62:	55                   	push   %rbp
   18f63:	48 89 e5             	mov    %rsp,%rbp
   18f66:	48 83 ec 20          	sub    $0x20,%rsp
   18f6a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18f6e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   18f72:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   18f77:	74 40                	je     18fb9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   18f79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f7d:	48 89 c7             	mov    %rax,%rdi
   18f80:	e8 b7 09 00 00       	call   1993c <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   18f85:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   18f89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f8d:	48 89 c7             	mov    %rax,%rdi
   18f90:	e8 b5 09 00 00       	call   1994a <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   18f95:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   18f9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18f9e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   18fa2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18fa6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18faa:	48 89 ce             	mov    %rcx,%rsi
   18fad:	48 89 c7             	mov    %rax,%rdi
   18fb0:	e8 bc 09 00 00       	call   19971 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   18fb5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   18fb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   18fbd:	c9                   	leave
   18fbe:	c3                   	ret
   18fbf:	90                   	nop

0000000000018fc0 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   18fc0:	55                   	push   %rbp
   18fc1:	48 89 e5             	mov    %rsp,%rbp
   18fc4:	48 83 ec 20          	sub    $0x20,%rsp
   18fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18fcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18fd0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   18fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fd8:	48 89 c7             	mov    %rax,%rdi
   18fdb:	e8 d6 09 00 00       	call   199b6 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   18fe0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18fe4:	0f 92 c0             	setb   %al
   18fe7:	0f b6 c0             	movzbl %al,%eax
   18fea:	48 85 c0             	test   %rax,%rax
   18fed:	0f 95 c0             	setne  %al
   18ff0:	84 c0                	test   %al,%al
   18ff2:	74 1a                	je     1900e <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   18ff4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   18ffb:	ff ff 1f 
   18ffe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19002:	73 05                	jae    19009 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   19004:	e8 d7 b2 fe ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   19009:	e8 f2 b0 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1900e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19012:	48 c1 e0 03          	shl    $0x3,%rax
   19016:	48 89 c7             	mov    %rax,%rdi
   19019:	e8 f2 b3 fe ff       	call   4410 <_Znwm@plt>
   1901e:	90                   	nop
      }
   1901f:	c9                   	leave
   19020:	c3                   	ret

0000000000019021 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   19021:	55                   	push   %rbp
   19022:	48 89 e5             	mov    %rsp,%rbp
   19025:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1902d:	5d                   	pop    %rbp
   1902e:	c3                   	ret

000000000001902f <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1902f:	55                   	push   %rbp
   19030:	48 89 e5             	mov    %rsp,%rbp
   19033:	48 83 ec 30          	sub    $0x30,%rsp
   19037:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1903b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1903f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19043:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   19047:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1904b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1904f:	48 c1 f8 03          	sar    $0x3,%rax
   19053:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   19057:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1905c:	7e 1f                	jle    1907d <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1905e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19062:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19069:	00 
   1906a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1906e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19072:	48 89 ce             	mov    %rcx,%rsi
   19075:	48 89 c7             	mov    %rax,%rdi
   19078:	e8 13 b7 fe ff       	call   4790 <memmove@plt>
      return __result + __count;
   1907d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19081:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19088:	00 
   19089:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1908d:	48 01 d0             	add    %rdx,%rax
    }
   19090:	c9                   	leave
   19091:	c3                   	ret

0000000000019092 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   19092:	55                   	push   %rbp
   19093:	48 89 e5             	mov    %rsp,%rbp
   19096:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1909a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1909e:	90                   	nop
   1909f:	5d                   	pop    %rbp
   190a0:	c3                   	ret
   190a1:	90                   	nop

00000000000190a2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   190a2:	55                   	push   %rbp
   190a3:	48 89 e5             	mov    %rsp,%rbp
   190a6:	48 83 ec 20          	sub    $0x20,%rsp
   190aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   190ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   190b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   190b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   190ba:	48 89 d0             	mov    %rdx,%rax
   190bd:	48 c1 e0 03          	shl    $0x3,%rax
   190c1:	48 01 d0             	add    %rdx,%rax
   190c4:	48 c1 e0 04          	shl    $0x4,%rax
   190c8:	48 89 c2             	mov    %rax,%rdx
   190cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   190cf:	48 89 d6             	mov    %rdx,%rsi
   190d2:	48 89 c7             	mov    %rax,%rdi
   190d5:	e8 56 b3 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   190da:	c9                   	leave
   190db:	c3                   	ret

00000000000190dc <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   190dc:	55                   	push   %rbp
   190dd:	48 89 e5             	mov    %rsp,%rbp
   190e0:	48 83 ec 10          	sub    $0x10,%rsp
   190e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   190e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190ec:	48 89 c7             	mov    %rax,%rdi
   190ef:	e8 d6 08 00 00       	call   199ca <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   190f4:	c9                   	leave
   190f5:	c3                   	ret

00000000000190f6 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   190f6:	55                   	push   %rbp
   190f7:	48 89 e5             	mov    %rsp,%rbp
   190fa:	48 83 ec 20          	sub    $0x20,%rsp
   190fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19102:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19106:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1910a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1910e:	48 89 c7             	mov    %rax,%rdi
   19111:	e8 ce 08 00 00       	call   199e4 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   19116:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1911a:	0f 92 c0             	setb   %al
   1911d:	0f b6 c0             	movzbl %al,%eax
   19120:	48 85 c0             	test   %rax,%rax
   19123:	0f 95 c0             	setne  %al
   19126:	84 c0                	test   %al,%al
   19128:	74 1a                	je     19144 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1912a:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   19131:	1c c7 01 
   19134:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19138:	73 05                	jae    1913f <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1913a:	e8 a1 b1 fe ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1913f:	e8 bc af fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   19144:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19148:	48 89 d0             	mov    %rdx,%rax
   1914b:	48 c1 e0 03          	shl    $0x3,%rax
   1914f:	48 01 d0             	add    %rdx,%rax
   19152:	48 c1 e0 04          	shl    $0x4,%rax
   19156:	48 89 c7             	mov    %rax,%rdi
   19159:	e8 b2 b2 fe ff       	call   4410 <_Znwm@plt>
   1915e:	90                   	nop
      }
   1915f:	c9                   	leave
   19160:	c3                   	ret

0000000000019161 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   19161:	55                   	push   %rbp
   19162:	48 89 e5             	mov    %rsp,%rbp
   19165:	48 83 ec 20          	sub    $0x20,%rsp
   19169:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1916d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19171:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   19175:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19179:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1917d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19181:	48 89 ce             	mov    %rcx,%rsi
   19184:	48 89 c7             	mov    %rax,%rdi
   19187:	e8 6c 08 00 00       	call   199f8 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   1918c:	c9                   	leave
   1918d:	c3                   	ret

000000000001918e <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1918e:	55                   	push   %rbp
   1918f:	48 89 e5             	mov    %rsp,%rbp
   19192:	48 83 ec 10          	sub    $0x10,%rsp
   19196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1919a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1919e:	48 89 c7             	mov    %rax,%rdi
   191a1:	e8 9e 08 00 00       	call   19a44 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   191a6:	c9                   	leave
   191a7:	c3                   	ret

00000000000191a8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   191a8:	55                   	push   %rbp
   191a9:	48 89 e5             	mov    %rsp,%rbp
   191ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   191b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191b4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   191bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191bf:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   191c6:	00 
   191c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191cb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   191d2:	00 
	{ }
   191d3:	90                   	nop
   191d4:	5d                   	pop    %rbp
   191d5:	c3                   	ret

00000000000191d6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   191d6:	55                   	push   %rbp
   191d7:	48 89 e5             	mov    %rsp,%rbp
   191da:	48 83 ec 10          	sub    $0x10,%rsp
   191de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   191e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   191e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   191eb:	74 15                	je     19202 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   191ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   191f5:	48 89 d6             	mov    %rdx,%rsi
   191f8:	48 89 c7             	mov    %rax,%rdi
   191fb:	e8 5e 08 00 00       	call   19a5e <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   19200:	eb 05                	jmp    19207 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   19202:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   19207:	c9                   	leave
   19208:	c3                   	ret

0000000000019209 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   19209:	55                   	push   %rbp
   1920a:	48 89 e5             	mov    %rsp,%rbp
   1920d:	48 83 ec 20          	sub    $0x20,%rsp
   19211:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19215:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   19219:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1921d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19221:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19225:	48 89 d6             	mov    %rdx,%rsi
   19228:	48 89 c7             	mov    %rax,%rdi
   1922b:	e8 58 08 00 00       	call   19a88 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   19230:	c9                   	leave
   19231:	c3                   	ret

0000000000019232 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   19232:	55                   	push   %rbp
   19233:	48 89 e5             	mov    %rsp,%rbp
   19236:	48 83 ec 20          	sub    $0x20,%rsp
   1923a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1923e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19242:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   19246:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1924a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19251:	00 
   19252:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19256:	48 89 d6             	mov    %rdx,%rsi
   19259:	48 89 c7             	mov    %rax,%rdi
   1925c:	e8 cf b1 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   19261:	c9                   	leave
   19262:	c3                   	ret

0000000000019263 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   19263:	55                   	push   %rbp
   19264:	48 89 e5             	mov    %rsp,%rbp
   19267:	48 83 ec 10          	sub    $0x10,%rsp
   1926b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1926f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19273:	48 89 c7             	mov    %rax,%rdi
   19276:	e8 6b 08 00 00       	call   19ae6 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   1927b:	c9                   	leave
   1927c:	c3                   	ret

000000000001927d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1927d:	55                   	push   %rbp
   1927e:	48 89 e5             	mov    %rsp,%rbp
   19281:	48 83 ec 20          	sub    $0x20,%rsp
   19285:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19289:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1928d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19292:	74 40                	je     192d4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   19294:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19298:	48 89 c7             	mov    %rax,%rdi
   1929b:	e8 60 08 00 00       	call   19b00 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   192a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   192a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192a8:	48 89 c7             	mov    %rax,%rdi
   192ab:	e8 5e 08 00 00       	call   19b0e <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   192b0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   192b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   192b9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   192bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   192c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   192c5:	48 89 ce             	mov    %rcx,%rsi
   192c8:	48 89 c7             	mov    %rax,%rdi
   192cb:	e8 65 08 00 00       	call   19b35 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   192d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   192d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   192d8:	c9                   	leave
   192d9:	c3                   	ret

00000000000192da <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   192da:	55                   	push   %rbp
   192db:	48 89 e5             	mov    %rsp,%rbp
   192de:	48 83 ec 20          	sub    $0x20,%rsp
   192e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   192e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   192ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   192ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192f2:	48 89 c7             	mov    %rax,%rdi
   192f5:	e8 80 08 00 00       	call   19b7a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   192fa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   192fe:	0f 92 c0             	setb   %al
   19301:	0f b6 c0             	movzbl %al,%eax
   19304:	48 85 c0             	test   %rax,%rax
   19307:	0f 95 c0             	setne  %al
   1930a:	84 c0                	test   %al,%al
   1930c:	74 1a                	je     19328 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1930e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   19315:	ff ff 1f 
   19318:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1931c:	73 05                	jae    19323 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1931e:	e8 bd af fe ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   19323:	e8 d8 ad fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   19328:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1932c:	48 c1 e0 03          	shl    $0x3,%rax
   19330:	48 89 c7             	mov    %rax,%rdi
   19333:	e8 d8 b0 fe ff       	call   4410 <_Znwm@plt>
   19338:	90                   	nop
      }
   19339:	c9                   	leave
   1933a:	c3                   	ret

000000000001933b <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   1933b:	55                   	push   %rbp
   1933c:	48 89 e5             	mov    %rsp,%rbp
   1933f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19347:	5d                   	pop    %rbp
   19348:	c3                   	ret

0000000000019349 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   19349:	55                   	push   %rbp
   1934a:	48 89 e5             	mov    %rsp,%rbp
   1934d:	48 83 ec 30          	sub    $0x30,%rsp
   19351:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19355:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19359:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1935d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   19361:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19365:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19369:	48 c1 f8 03          	sar    $0x3,%rax
   1936d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   19371:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19376:	7e 1f                	jle    19397 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   19378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1937c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19383:	00 
   19384:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19388:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1938c:	48 89 ce             	mov    %rcx,%rsi
   1938f:	48 89 c7             	mov    %rax,%rdi
   19392:	e8 f9 b3 fe ff       	call   4790 <memmove@plt>
      return __result + __count;
   19397:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1939b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   193a2:	00 
   193a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   193a7:	48 01 d0             	add    %rdx,%rax
    }
   193aa:	c9                   	leave
   193ab:	c3                   	ret

00000000000193ac <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   193ac:	55                   	push   %rbp
   193ad:	48 89 e5             	mov    %rsp,%rbp
   193b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   193b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   193b8:	90                   	nop
   193b9:	5d                   	pop    %rbp
   193ba:	c3                   	ret

00000000000193bb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   193bb:	55                   	push   %rbp
   193bc:	48 89 e5             	mov    %rsp,%rbp
   193bf:	48 83 ec 20          	sub    $0x20,%rsp
   193c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   193c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   193cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   193cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   193d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   193d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193db:	48 89 ce             	mov    %rcx,%rsi
   193de:	48 89 c7             	mov    %rax,%rdi
   193e1:	e8 a8 07 00 00       	call   19b8e <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   193e6:	c9                   	leave
   193e7:	c3                   	ret

00000000000193e8 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   193e8:	55                   	push   %rbp
   193e9:	48 89 e5             	mov    %rsp,%rbp
   193ec:	48 83 ec 10          	sub    $0x10,%rsp
   193f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   193f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193f8:	48 89 c7             	mov    %rax,%rdi
   193fb:	e8 da 07 00 00       	call   19bda <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   19400:	c9                   	leave
   19401:	c3                   	ret

0000000000019402 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   19402:	55                   	push   %rbp
   19403:	48 89 e5             	mov    %rsp,%rbp
   19406:	48 83 ec 20          	sub    $0x20,%rsp
   1940a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1940e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   19412:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19417:	74 40                	je     19459 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   19419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1941d:	48 89 c7             	mov    %rax,%rdi
   19420:	e8 cf 07 00 00       	call   19bf4 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>
   19425:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   19429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1942d:	48 89 c7             	mov    %rax,%rdi
   19430:	e8 cd 07 00 00       	call   19c02 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>
	      ++__first;
   19435:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1943a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1943e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   19442:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19446:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1944a:	48 89 ce             	mov    %rcx,%rsi
   1944d:	48 89 c7             	mov    %rax,%rdi
   19450:	e8 d4 07 00 00       	call   19c29 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>
   19455:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   19459:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1945d:	c9                   	leave
   1945e:	c3                   	ret
   1945f:	90                   	nop

0000000000019460 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   19460:	55                   	push   %rbp
   19461:	48 89 e5             	mov    %rsp,%rbp
   19464:	48 83 ec 20          	sub    $0x20,%rsp
   19468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1946c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19470:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   19474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19478:	48 89 c7             	mov    %rax,%rdi
   1947b:	e8 ee 07 00 00       	call   19c6e <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   19480:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19484:	0f 92 c0             	setb   %al
   19487:	0f b6 c0             	movzbl %al,%eax
   1948a:	48 85 c0             	test   %rax,%rax
   1948d:	0f 95 c0             	setne  %al
   19490:	84 c0                	test   %al,%al
   19492:	74 1a                	je     194ae <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   19494:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1949b:	ff ff 1f 
   1949e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   194a2:	73 05                	jae    194a9 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   194a4:	e8 37 ae fe ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   194a9:	e8 52 ac fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   194ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   194b2:	48 c1 e0 03          	shl    $0x3,%rax
   194b6:	48 89 c7             	mov    %rax,%rdi
   194b9:	e8 52 af fe ff       	call   4410 <_Znwm@plt>
   194be:	90                   	nop
      }
   194bf:	c9                   	leave
   194c0:	c3                   	ret

00000000000194c1 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   194c1:	55                   	push   %rbp
   194c2:	48 89 e5             	mov    %rsp,%rbp
   194c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   194c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194cd:	5d                   	pop    %rbp
   194ce:	c3                   	ret

00000000000194cf <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   194cf:	55                   	push   %rbp
   194d0:	48 89 e5             	mov    %rsp,%rbp
   194d3:	48 83 ec 30          	sub    $0x30,%rsp
   194d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   194db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   194df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   194e3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   194e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   194eb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   194ef:	48 c1 f8 03          	sar    $0x3,%rax
   194f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   194f7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   194fc:	7e 1f                	jle    1951d <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   194fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19502:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19509:	00 
   1950a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1950e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19512:	48 89 ce             	mov    %rcx,%rsi
   19515:	48 89 c7             	mov    %rax,%rdi
   19518:	e8 73 b2 fe ff       	call   4790 <memmove@plt>
      return __result + __count;
   1951d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19521:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19528:	00 
   19529:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1952d:	48 01 d0             	add    %rdx,%rax
    }
   19530:	c9                   	leave
   19531:	c3                   	ret

0000000000019532 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   19532:	55                   	push   %rbp
   19533:	48 89 e5             	mov    %rsp,%rbp
   19536:	48 83 ec 10          	sub    $0x10,%rsp
   1953a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1953e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19542:	48 89 c7             	mov    %rax,%rdi
   19545:	e8 38 07 00 00       	call   19c82 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>
      }
   1954a:	c9                   	leave
   1954b:	c3                   	ret

000000000001954c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1954c:	55                   	push   %rbp
   1954d:	48 89 e5             	mov    %rsp,%rbp
   19550:	48 83 ec 20          	sub    $0x20,%rsp
   19554:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19558:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1955c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19561:	74 40                	je     195a3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   19563:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19567:	48 89 c7             	mov    %rax,%rdi
   1956a:	e8 2d 07 00 00       	call   19c9c <_ZSt11__addressofIP9VkFence_TEPT_RS2_>
   1956f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   19573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19577:	48 89 c7             	mov    %rax,%rdi
   1957a:	e8 2b 07 00 00       	call   19caa <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>
	      ++__first;
   1957f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   19584:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19588:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1958c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19594:	48 89 ce             	mov    %rcx,%rsi
   19597:	48 89 c7             	mov    %rax,%rdi
   1959a:	e8 32 07 00 00       	call   19cd1 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>
   1959f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   195a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   195a7:	c9                   	leave
   195a8:	c3                   	ret
   195a9:	90                   	nop

00000000000195aa <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   195aa:	55                   	push   %rbp
   195ab:	48 89 e5             	mov    %rsp,%rbp
   195ae:	48 83 ec 20          	sub    $0x20,%rsp
   195b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   195b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   195ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   195be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195c2:	48 89 c7             	mov    %rax,%rdi
   195c5:	e8 4c 07 00 00       	call   19d16 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   195ca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   195ce:	0f 92 c0             	setb   %al
   195d1:	0f b6 c0             	movzbl %al,%eax
   195d4:	48 85 c0             	test   %rax,%rax
   195d7:	0f 95 c0             	setne  %al
   195da:	84 c0                	test   %al,%al
   195dc:	74 1a                	je     195f8 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   195de:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   195e5:	ff ff 1f 
   195e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   195ec:	73 05                	jae    195f3 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   195ee:	e8 ed ac fe ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   195f3:	e8 08 ab fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   195f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   195fc:	48 c1 e0 03          	shl    $0x3,%rax
   19600:	48 89 c7             	mov    %rax,%rdi
   19603:	e8 08 ae fe ff       	call   4410 <_Znwm@plt>
   19608:	90                   	nop
      }
   19609:	c9                   	leave
   1960a:	c3                   	ret

000000000001960b <_ZSt12__niter_baseIPP9VkFence_TET_S3_>:
    __niter_base(_Iterator __it)
   1960b:	55                   	push   %rbp
   1960c:	48 89 e5             	mov    %rsp,%rbp
   1960f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19617:	5d                   	pop    %rbp
   19618:	c3                   	ret

0000000000019619 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   19619:	55                   	push   %rbp
   1961a:	48 89 e5             	mov    %rsp,%rbp
   1961d:	48 83 ec 30          	sub    $0x30,%rsp
   19621:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19625:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19629:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1962d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   19631:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19635:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19639:	48 c1 f8 03          	sar    $0x3,%rax
   1963d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   19641:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19646:	7e 1f                	jle    19667 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   19648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1964c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19653:	00 
   19654:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19658:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1965c:	48 89 ce             	mov    %rcx,%rsi
   1965f:	48 89 c7             	mov    %rax,%rdi
   19662:	e8 29 b1 fe ff       	call   4790 <memmove@plt>
      return __result + __count;
   19667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1966b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19672:	00 
   19673:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19677:	48 01 d0             	add    %rdx,%rax
    }
   1967a:	c9                   	leave
   1967b:	c3                   	ret

000000000001967c <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1967c:	55                   	push   %rbp
   1967d:	48 89 e5             	mov    %rsp,%rbp
   19680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19688:	90                   	nop
   19689:	5d                   	pop    %rbp
   1968a:	c3                   	ret

000000000001968b <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1968b:	55                   	push   %rbp
   1968c:	48 89 e5             	mov    %rsp,%rbp
   1968f:	48 83 ec 20          	sub    $0x20,%rsp
   19693:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19697:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1969b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1969f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   196a3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   196a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196ab:	48 89 ce             	mov    %rcx,%rsi
   196ae:	48 89 c7             	mov    %rax,%rdi
   196b1:	e8 74 06 00 00       	call   19d2a <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
   196b6:	c9                   	leave
   196b7:	c3                   	ret

00000000000196b8 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
   196b8:	55                   	push   %rbp
   196b9:	48 89 e5             	mov    %rsp,%rbp
   196bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   196c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   196c4:	90                   	nop
   196c5:	5d                   	pop    %rbp
   196c6:	c3                   	ret
   196c7:	90                   	nop

00000000000196c8 <_ZNSt15__new_allocatorIjE10deallocateEPjm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   196c8:	55                   	push   %rbp
   196c9:	48 89 e5             	mov    %rsp,%rbp
   196cc:	48 83 ec 20          	sub    $0x20,%rsp
   196d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   196d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   196d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   196dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   196e0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   196e7:	00 
   196e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196ec:	48 89 d6             	mov    %rdx,%rsi
   196ef:	48 89 c7             	mov    %rax,%rdi
   196f2:	e8 39 ad fe ff       	call   4430 <_ZdlPvm@plt>
      }
   196f7:	c9                   	leave
   196f8:	c3                   	ret

00000000000196f9 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   196f9:	55                   	push   %rbp
   196fa:	48 89 e5             	mov    %rsp,%rbp
   196fd:	48 83 ec 10          	sub    $0x10,%rsp
   19701:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   19705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19709:	48 89 c7             	mov    %rax,%rdi
   1970c:	e8 65 06 00 00       	call   19d76 <_ZNKSt15__new_allocatorIjE8max_sizeEv>
      }
   19711:	c9                   	leave
   19712:	c3                   	ret
   19713:	90                   	nop

0000000000019714 <_ZNSt15__new_allocatorIjE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   19714:	55                   	push   %rbp
   19715:	48 89 e5             	mov    %rsp,%rbp
   19718:	48 83 ec 20          	sub    $0x20,%rsp
   1971c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19720:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19724:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   19728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1972c:	48 89 c7             	mov    %rax,%rdi
   1972f:	e8 5c 06 00 00       	call   19d90 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   19734:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19738:	0f 92 c0             	setb   %al
   1973b:	0f b6 c0             	movzbl %al,%eax
   1973e:	48 85 c0             	test   %rax,%rax
   19741:	0f 95 c0             	setne  %al
   19744:	84 c0                	test   %al,%al
   19746:	74 1a                	je     19762 <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   19748:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   1974f:	ff ff 3f 
   19752:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19756:	73 05                	jae    1975d <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   19758:	e8 83 ab fe ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1975d:	e8 9e a9 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   19762:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19766:	48 c1 e0 02          	shl    $0x2,%rax
   1976a:	48 89 c7             	mov    %rax,%rdi
   1976d:	e8 9e ac fe ff       	call   4410 <_Znwm@plt>
   19772:	90                   	nop
      }
   19773:	c9                   	leave
   19774:	c3                   	ret

0000000000019775 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   19775:	55                   	push   %rbp
   19776:	48 89 e5             	mov    %rsp,%rbp
   19779:	48 83 ec 20          	sub    $0x20,%rsp
   1977d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19781:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19785:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   19789:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1978d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19795:	48 89 ce             	mov    %rcx,%rsi
   19798:	48 89 c7             	mov    %rax,%rdi
   1979b:	e8 04 06 00 00       	call   19da4 <_ZSt4copyIPKjPjET0_T_S4_S3_>
   197a0:	c9                   	leave
   197a1:	c3                   	ret

00000000000197a2 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   197a2:	55                   	push   %rbp
   197a3:	48 89 e5             	mov    %rsp,%rbp
   197a6:	53                   	push   %rbx
   197a7:	48 83 ec 28          	sub    $0x28,%rsp
   197ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   197af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   197b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   197b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   197bb:	48 89 c7             	mov    %rax,%rdi
   197be:	e8 2c 06 00 00       	call   19def <_ZSt12__miter_baseIPKPKcET_S4_>
   197c3:	48 89 c3             	mov    %rax,%rbx
   197c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197ca:	48 89 c7             	mov    %rax,%rdi
   197cd:	e8 1d 06 00 00       	call   19def <_ZSt12__miter_baseIPKPKcET_S4_>
   197d2:	48 89 c1             	mov    %rax,%rcx
   197d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   197d9:	48 89 c2             	mov    %rax,%rdx
   197dc:	48 89 de             	mov    %rbx,%rsi
   197df:	48 89 cf             	mov    %rcx,%rdi
   197e2:	e8 16 06 00 00       	call   19dfd <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   197e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   197eb:	c9                   	leave
   197ec:	c3                   	ret
   197ed:	90                   	nop

00000000000197ee <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   197ee:	55                   	push   %rbp
   197ef:	48 89 e5             	mov    %rsp,%rbp
   197f2:	48 83 ec 10          	sub    $0x10,%rsp
   197f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   197fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197fe:	48 89 c7             	mov    %rax,%rdi
   19801:	e8 4a aa fe ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   19806:	90                   	nop
   19807:	c9                   	leave
   19808:	c3                   	ret
   19809:	90                   	nop

000000000001980a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   1980a:	55                   	push   %rbp
   1980b:	48 89 e5             	mov    %rsp,%rbp
   1980e:	48 83 ec 10          	sub    $0x10,%rsp
   19812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19816:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   1981a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1981e:	48 89 c7             	mov    %rax,%rdi
   19821:	e8 c8 ff ff ff       	call   197ee <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   19826:	90                   	nop
   19827:	c9                   	leave
   19828:	c3                   	ret
   19829:	90                   	nop

000000000001982a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1982a:	55                   	push   %rbp
   1982b:	48 89 e5             	mov    %rsp,%rbp
   1982e:	48 83 ec 20          	sub    $0x20,%rsp
   19832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1983a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1983e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19842:	48 89 d0             	mov    %rdx,%rax
   19845:	48 c1 e0 03          	shl    $0x3,%rax
   19849:	48 01 d0             	add    %rdx,%rax
   1984c:	48 c1 e0 03          	shl    $0x3,%rax
   19850:	48 89 c2             	mov    %rax,%rdx
   19853:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19857:	48 89 d6             	mov    %rdx,%rsi
   1985a:	48 89 c7             	mov    %rax,%rdi
   1985d:	e8 ce ab fe ff       	call   4430 <_ZdlPvm@plt>
      }
   19862:	c9                   	leave
   19863:	c3                   	ret

0000000000019864 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   19864:	55                   	push   %rbp
   19865:	48 89 e5             	mov    %rsp,%rbp
   19868:	48 83 ec 10          	sub    $0x10,%rsp
   1986c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19870:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19874:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1987c:	ba 00 00 00 00       	mov    $0x0,%edx
   19881:	48 89 ce             	mov    %rcx,%rsi
   19884:	48 89 c7             	mov    %rax,%rdi
   19887:	e8 dc 05 00 00       	call   19e68 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   1988c:	c9                   	leave
   1988d:	c3                   	ret

000000000001988e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1988e:	55                   	push   %rbp
   1988f:	48 89 e5             	mov    %rsp,%rbp
   19892:	41 54                	push   %r12
   19894:	53                   	push   %rbx
   19895:	48 83 ec 30          	sub    $0x30,%rsp
   19899:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1989d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   198a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   198a5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   198a9:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   198ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198b1:	48 89 c7             	mov    %rax,%rdi
   198b4:	e8 36 cc ff ff       	call   164ef <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   198b9:	49 89 c4             	mov    %rax,%r12
   198bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   198c0:	48 89 c7             	mov    %rax,%rdi
   198c3:	e8 19 cc ff ff       	call   164e1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   198c8:	48 89 c3             	mov    %rax,%rbx
   198cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   198cf:	48 89 c7             	mov    %rax,%rdi
   198d2:	e8 fc cb ff ff       	call   164d3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   198d7:	48 89 c2             	mov    %rax,%rdx
   198da:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   198de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   198e2:	4d 89 e0             	mov    %r12,%r8
   198e5:	48 89 d9             	mov    %rbx,%rcx
   198e8:	48 89 c7             	mov    %rax,%rdi
   198eb:	e8 0a 06 00 00       	call   19efa <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   198f0:	90                   	nop
   198f1:	48 83 c4 30          	add    $0x30,%rsp
   198f5:	5b                   	pop    %rbx
   198f6:	41 5c                	pop    %r12
   198f8:	5d                   	pop    %rbp
   198f9:	c3                   	ret

00000000000198fa <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   198fa:	55                   	push   %rbp
   198fb:	48 89 e5             	mov    %rsp,%rbp
   198fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   19902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19906:	5d                   	pop    %rbp
   19907:	c3                   	ret

0000000000019908 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   19908:	55                   	push   %rbp
   19909:	48 89 e5             	mov    %rsp,%rbp
   1990c:	48 83 ec 10          	sub    $0x10,%rsp
   19910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   19914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19918:	48 89 c7             	mov    %rax,%rdi
   1991b:	e8 8a 06 00 00       	call   19faa <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   19920:	c9                   	leave
   19921:	c3                   	ret

0000000000019922 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19922:	55                   	push   %rbp
   19923:	48 89 e5             	mov    %rsp,%rbp
   19926:	48 83 ec 10          	sub    $0x10,%rsp
   1992a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1992e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19932:	48 89 c7             	mov    %rax,%rdi
   19935:	e8 7c 00 00 00       	call   199b6 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   1993a:	c9                   	leave
   1993b:	c3                   	ret

000000000001993c <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1993c:	55                   	push   %rbp
   1993d:	48 89 e5             	mov    %rsp,%rbp
   19940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   19944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19948:	5d                   	pop    %rbp
   19949:	c3                   	ret

000000000001994a <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1994a:	55                   	push   %rbp
   1994b:	48 89 e5             	mov    %rsp,%rbp
   1994e:	48 83 ec 10          	sub    $0x10,%rsp
   19952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   19956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1995a:	48 89 c6             	mov    %rax,%rsi
   1995d:	bf 08 00 00 00       	mov    $0x8,%edi
   19962:	e8 a8 c1 fe ff       	call   5b0f <_ZnwmPv>
   19967:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1996e:	90                   	nop
   1996f:	c9                   	leave
   19970:	c3                   	ret

0000000000019971 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   19971:	55                   	push   %rbp
   19972:	48 89 e5             	mov    %rsp,%rbp
   19975:	48 83 ec 20          	sub    $0x20,%rsp
   19979:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1997d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19981:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   19985:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19989:	48 89 c7             	mov    %rax,%rdi
   1998c:	e8 27 06 00 00       	call   19fb8 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   19991:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19995:	48 89 c7             	mov    %rax,%rdi
   19998:	e8 84 c1 fe ff       	call   5b21 <_ZSt17__size_to_integerm>
   1999d:	48 89 c1             	mov    %rax,%rcx
   199a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   199a8:	48 89 ce             	mov    %rcx,%rsi
   199ab:	48 89 c7             	mov    %rax,%rdi
   199ae:	e8 10 06 00 00       	call   19fc3 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   199b3:	c9                   	leave
   199b4:	c3                   	ret
   199b5:	90                   	nop

00000000000199b6 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   199b6:	55                   	push   %rbp
   199b7:	48 89 e5             	mov    %rsp,%rbp
   199ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   199be:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   199c5:	ff ff 0f 
      }
   199c8:	5d                   	pop    %rbp
   199c9:	c3                   	ret

00000000000199ca <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   199ca:	55                   	push   %rbp
   199cb:	48 89 e5             	mov    %rsp,%rbp
   199ce:	48 83 ec 10          	sub    $0x10,%rsp
   199d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   199d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199da:	48 89 c7             	mov    %rax,%rdi
   199dd:	e8 02 00 00 00       	call   199e4 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   199e2:	c9                   	leave
   199e3:	c3                   	ret

00000000000199e4 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   199e4:	55                   	push   %rbp
   199e5:	48 89 e5             	mov    %rsp,%rbp
   199e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   199ec:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   199f3:	8e e3 00 
      }
   199f6:	5d                   	pop    %rbp
   199f7:	c3                   	ret

00000000000199f8 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   199f8:	55                   	push   %rbp
   199f9:	48 89 e5             	mov    %rsp,%rbp
   199fc:	53                   	push   %rbx
   199fd:	48 83 ec 28          	sub    $0x28,%rsp
   19a01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19a05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19a09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   19a0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19a11:	48 89 c7             	mov    %rax,%rdi
   19a14:	e8 07 06 00 00       	call   1a020 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   19a19:	48 89 c3             	mov    %rax,%rbx
   19a1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a20:	48 89 c7             	mov    %rax,%rdi
   19a23:	e8 f8 05 00 00       	call   1a020 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   19a28:	48 89 c1             	mov    %rax,%rcx
   19a2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19a2f:	48 89 c2             	mov    %rax,%rdx
   19a32:	48 89 de             	mov    %rbx,%rsi
   19a35:	48 89 cf             	mov    %rcx,%rdi
   19a38:	e8 f1 05 00 00       	call   1a02e <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   19a3d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19a41:	c9                   	leave
   19a42:	c3                   	ret
   19a43:	90                   	nop

0000000000019a44 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19a44:	55                   	push   %rbp
   19a45:	48 89 e5             	mov    %rsp,%rbp
   19a48:	48 83 ec 10          	sub    $0x10,%rsp
   19a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a54:	48 89 c7             	mov    %rax,%rdi
   19a57:	e8 3c 06 00 00       	call   1a098 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   19a5c:	c9                   	leave
   19a5d:	c3                   	ret

0000000000019a5e <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19a5e:	55                   	push   %rbp
   19a5f:	48 89 e5             	mov    %rsp,%rbp
   19a62:	48 83 ec 10          	sub    $0x10,%rsp
   19a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19a6e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a76:	ba 00 00 00 00       	mov    $0x0,%edx
   19a7b:	48 89 ce             	mov    %rcx,%rsi
   19a7e:	48 89 c7             	mov    %rax,%rdi
   19a81:	e8 26 06 00 00       	call   1a0ac <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   19a86:	c9                   	leave
   19a87:	c3                   	ret

0000000000019a88 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   19a88:	55                   	push   %rbp
   19a89:	48 89 e5             	mov    %rsp,%rbp
   19a8c:	48 83 ec 20          	sub    $0x20,%rsp
   19a90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19a94:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   19a98:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19a9d:	74 40                	je     19adf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   19a9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19aa3:	48 89 c7             	mov    %rax,%rdi
   19aa6:	e8 62 06 00 00       	call   1a10d <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   19aab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   19aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ab3:	48 89 c7             	mov    %rax,%rdi
   19ab6:	e8 60 06 00 00       	call   1a11b <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   19abb:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   19ac0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ac4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   19ac8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19acc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ad0:	48 89 ce             	mov    %rcx,%rsi
   19ad3:	48 89 c7             	mov    %rax,%rdi
   19ad6:	e8 67 06 00 00       	call   1a142 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   19adb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   19adf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   19ae3:	c9                   	leave
   19ae4:	c3                   	ret
   19ae5:	90                   	nop

0000000000019ae6 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19ae6:	55                   	push   %rbp
   19ae7:	48 89 e5             	mov    %rsp,%rbp
   19aea:	48 83 ec 10          	sub    $0x10,%rsp
   19aee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19af6:	48 89 c7             	mov    %rax,%rdi
   19af9:	e8 7c 00 00 00       	call   19b7a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   19afe:	c9                   	leave
   19aff:	c3                   	ret

0000000000019b00 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19b00:	55                   	push   %rbp
   19b01:	48 89 e5             	mov    %rsp,%rbp
   19b04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   19b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b0c:	5d                   	pop    %rbp
   19b0d:	c3                   	ret

0000000000019b0e <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   19b0e:	55                   	push   %rbp
   19b0f:	48 89 e5             	mov    %rsp,%rbp
   19b12:	48 83 ec 10          	sub    $0x10,%rsp
   19b16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   19b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b1e:	48 89 c6             	mov    %rax,%rsi
   19b21:	bf 08 00 00 00       	mov    $0x8,%edi
   19b26:	e8 e4 bf fe ff       	call   5b0f <_ZnwmPv>
   19b2b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   19b32:	90                   	nop
   19b33:	c9                   	leave
   19b34:	c3                   	ret

0000000000019b35 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   19b35:	55                   	push   %rbp
   19b36:	48 89 e5             	mov    %rsp,%rbp
   19b39:	48 83 ec 20          	sub    $0x20,%rsp
   19b3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b41:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19b45:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   19b49:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19b4d:	48 89 c7             	mov    %rax,%rdi
   19b50:	e8 31 06 00 00       	call   1a186 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   19b55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19b59:	48 89 c7             	mov    %rax,%rdi
   19b5c:	e8 c0 bf fe ff       	call   5b21 <_ZSt17__size_to_integerm>
   19b61:	48 89 c1             	mov    %rax,%rcx
   19b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b68:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19b6c:	48 89 ce             	mov    %rcx,%rsi
   19b6f:	48 89 c7             	mov    %rax,%rdi
   19b72:	e8 1a 06 00 00       	call   1a191 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   19b77:	c9                   	leave
   19b78:	c3                   	ret
   19b79:	90                   	nop

0000000000019b7a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   19b7a:	55                   	push   %rbp
   19b7b:	48 89 e5             	mov    %rsp,%rbp
   19b7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   19b82:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19b89:	ff ff 0f 
      }
   19b8c:	5d                   	pop    %rbp
   19b8d:	c3                   	ret

0000000000019b8e <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   19b8e:	55                   	push   %rbp
   19b8f:	48 89 e5             	mov    %rsp,%rbp
   19b92:	53                   	push   %rbx
   19b93:	48 83 ec 28          	sub    $0x28,%rsp
   19b97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19b9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19b9f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   19ba3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ba7:	48 89 c7             	mov    %rax,%rdi
   19baa:	e8 3f 06 00 00       	call   1a1ee <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   19baf:	48 89 c3             	mov    %rax,%rbx
   19bb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19bb6:	48 89 c7             	mov    %rax,%rdi
   19bb9:	e8 30 06 00 00       	call   1a1ee <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   19bbe:	48 89 c1             	mov    %rax,%rcx
   19bc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19bc5:	48 89 c2             	mov    %rax,%rdx
   19bc8:	48 89 de             	mov    %rbx,%rsi
   19bcb:	48 89 cf             	mov    %rcx,%rdi
   19bce:	e8 29 06 00 00       	call   1a1fc <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   19bd3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19bd7:	c9                   	leave
   19bd8:	c3                   	ret
   19bd9:	90                   	nop

0000000000019bda <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19bda:	55                   	push   %rbp
   19bdb:	48 89 e5             	mov    %rsp,%rbp
   19bde:	48 83 ec 10          	sub    $0x10,%rsp
   19be2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bea:	48 89 c7             	mov    %rax,%rdi
   19bed:	e8 7c 00 00 00       	call   19c6e <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   19bf2:	c9                   	leave
   19bf3:	c3                   	ret

0000000000019bf4 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19bf4:	55                   	push   %rbp
   19bf5:	48 89 e5             	mov    %rsp,%rbp
   19bf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   19bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c00:	5d                   	pop    %rbp
   19c01:	c3                   	ret

0000000000019c02 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   19c02:	55                   	push   %rbp
   19c03:	48 89 e5             	mov    %rsp,%rbp
   19c06:	48 83 ec 10          	sub    $0x10,%rsp
   19c0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   19c0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c12:	48 89 c6             	mov    %rax,%rsi
   19c15:	bf 08 00 00 00       	mov    $0x8,%edi
   19c1a:	e8 f0 be fe ff       	call   5b0f <_ZnwmPv>
   19c1f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   19c26:	90                   	nop
   19c27:	c9                   	leave
   19c28:	c3                   	ret

0000000000019c29 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   19c29:	55                   	push   %rbp
   19c2a:	48 89 e5             	mov    %rsp,%rbp
   19c2d:	48 83 ec 20          	sub    $0x20,%rsp
   19c31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19c35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19c39:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   19c3d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19c41:	48 89 c7             	mov    %rax,%rdi
   19c44:	e8 1d 06 00 00       	call   1a266 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   19c49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19c4d:	48 89 c7             	mov    %rax,%rdi
   19c50:	e8 cc be fe ff       	call   5b21 <_ZSt17__size_to_integerm>
   19c55:	48 89 c1             	mov    %rax,%rcx
   19c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c5c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19c60:	48 89 ce             	mov    %rcx,%rsi
   19c63:	48 89 c7             	mov    %rax,%rdi
   19c66:	e8 06 06 00 00       	call   1a271 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   19c6b:	c9                   	leave
   19c6c:	c3                   	ret
   19c6d:	90                   	nop

0000000000019c6e <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   19c6e:	55                   	push   %rbp
   19c6f:	48 89 e5             	mov    %rsp,%rbp
   19c72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   19c76:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19c7d:	ff ff 0f 
      }
   19c80:	5d                   	pop    %rbp
   19c81:	c3                   	ret

0000000000019c82 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19c82:	55                   	push   %rbp
   19c83:	48 89 e5             	mov    %rsp,%rbp
   19c86:	48 83 ec 10          	sub    $0x10,%rsp
   19c8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c92:	48 89 c7             	mov    %rax,%rdi
   19c95:	e8 7c 00 00 00       	call   19d16 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   19c9a:	c9                   	leave
   19c9b:	c3                   	ret

0000000000019c9c <_ZSt11__addressofIP9VkFence_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19c9c:	55                   	push   %rbp
   19c9d:	48 89 e5             	mov    %rsp,%rbp
   19ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   19ca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ca8:	5d                   	pop    %rbp
   19ca9:	c3                   	ret

0000000000019caa <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   19caa:	55                   	push   %rbp
   19cab:	48 89 e5             	mov    %rsp,%rbp
   19cae:	48 83 ec 10          	sub    $0x10,%rsp
   19cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   19cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cba:	48 89 c6             	mov    %rax,%rsi
   19cbd:	bf 08 00 00 00       	mov    $0x8,%edi
   19cc2:	e8 48 be fe ff       	call   5b0f <_ZnwmPv>
   19cc7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   19cce:	90                   	nop
   19ccf:	c9                   	leave
   19cd0:	c3                   	ret

0000000000019cd1 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   19cd1:	55                   	push   %rbp
   19cd2:	48 89 e5             	mov    %rsp,%rbp
   19cd5:	48 83 ec 20          	sub    $0x20,%rsp
   19cd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19cdd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19ce1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   19ce5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19ce9:	48 89 c7             	mov    %rax,%rdi
   19cec:	e8 dd 05 00 00       	call   1a2ce <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   19cf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19cf5:	48 89 c7             	mov    %rax,%rdi
   19cf8:	e8 24 be fe ff       	call   5b21 <_ZSt17__size_to_integerm>
   19cfd:	48 89 c1             	mov    %rax,%rcx
   19d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19d08:	48 89 ce             	mov    %rcx,%rsi
   19d0b:	48 89 c7             	mov    %rax,%rdi
   19d0e:	e8 c6 05 00 00       	call   1a2d9 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   19d13:	c9                   	leave
   19d14:	c3                   	ret
   19d15:	90                   	nop

0000000000019d16 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   19d16:	55                   	push   %rbp
   19d17:	48 89 e5             	mov    %rsp,%rbp
   19d1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   19d1e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19d25:	ff ff 0f 
      }
   19d28:	5d                   	pop    %rbp
   19d29:	c3                   	ret

0000000000019d2a <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   19d2a:	55                   	push   %rbp
   19d2b:	48 89 e5             	mov    %rsp,%rbp
   19d2e:	53                   	push   %rbx
   19d2f:	48 83 ec 28          	sub    $0x28,%rsp
   19d33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19d37:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19d3b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   19d3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19d43:	48 89 c7             	mov    %rax,%rdi
   19d46:	e8 eb 05 00 00       	call   1a336 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   19d4b:	48 89 c3             	mov    %rax,%rbx
   19d4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d52:	48 89 c7             	mov    %rax,%rdi
   19d55:	e8 dc 05 00 00       	call   1a336 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   19d5a:	48 89 c1             	mov    %rax,%rcx
   19d5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19d61:	48 89 c2             	mov    %rax,%rdx
   19d64:	48 89 de             	mov    %rbx,%rsi
   19d67:	48 89 cf             	mov    %rcx,%rdi
   19d6a:	e8 d5 05 00 00       	call   1a344 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
    }
   19d6f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19d73:	c9                   	leave
   19d74:	c3                   	ret
   19d75:	90                   	nop

0000000000019d76 <_ZNKSt15__new_allocatorIjE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19d76:	55                   	push   %rbp
   19d77:	48 89 e5             	mov    %rsp,%rbp
   19d7a:	48 83 ec 10          	sub    $0x10,%rsp
   19d7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d86:	48 89 c7             	mov    %rax,%rdi
   19d89:	e8 02 00 00 00       	call   19d90 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   19d8e:	c9                   	leave
   19d8f:	c3                   	ret

0000000000019d90 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   19d90:	55                   	push   %rbp
   19d91:	48 89 e5             	mov    %rsp,%rbp
   19d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   19d98:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   19d9f:	ff ff 1f 
      }
   19da2:	5d                   	pop    %rbp
   19da3:	c3                   	ret

0000000000019da4 <_ZSt4copyIPKjPjET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   19da4:	55                   	push   %rbp
   19da5:	48 89 e5             	mov    %rsp,%rbp
   19da8:	53                   	push   %rbx
   19da9:	48 83 ec 28          	sub    $0x28,%rsp
   19dad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19db1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19db5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   19db9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19dbd:	48 89 c7             	mov    %rax,%rdi
   19dc0:	e8 e9 05 00 00       	call   1a3ae <_ZSt12__miter_baseIPKjET_S2_>
   19dc5:	48 89 c3             	mov    %rax,%rbx
   19dc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19dcc:	48 89 c7             	mov    %rax,%rdi
   19dcf:	e8 da 05 00 00       	call   1a3ae <_ZSt12__miter_baseIPKjET_S2_>
   19dd4:	48 89 c1             	mov    %rax,%rcx
   19dd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19ddb:	48 89 c2             	mov    %rax,%rdx
   19dde:	48 89 de             	mov    %rbx,%rsi
   19de1:	48 89 cf             	mov    %rcx,%rdi
   19de4:	e8 d3 05 00 00       	call   1a3bc <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>
    }
   19de9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19ded:	c9                   	leave
   19dee:	c3                   	ret

0000000000019def <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
   19def:	55                   	push   %rbp
   19df0:	48 89 e5             	mov    %rsp,%rbp
   19df3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19df7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19dfb:	5d                   	pop    %rbp
   19dfc:	c3                   	ret

0000000000019dfd <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   19dfd:	55                   	push   %rbp
   19dfe:	48 89 e5             	mov    %rsp,%rbp
   19e01:	41 54                	push   %r12
   19e03:	53                   	push   %rbx
   19e04:	48 83 ec 20          	sub    $0x20,%rsp
   19e08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19e0c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19e10:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   19e14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19e18:	48 89 c7             	mov    %rax,%rdi
   19e1b:	e8 7a ee ff ff       	call   18c9a <_ZSt12__niter_baseIPPKcET_S3_>
   19e20:	49 89 c4             	mov    %rax,%r12
   19e23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e27:	48 89 c7             	mov    %rax,%rdi
   19e2a:	e8 f7 05 00 00       	call   1a426 <_ZSt12__niter_baseIPKPKcET_S4_>
   19e2f:	48 89 c3             	mov    %rax,%rbx
   19e32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e36:	48 89 c7             	mov    %rax,%rdi
   19e39:	e8 e8 05 00 00       	call   1a426 <_ZSt12__niter_baseIPKPKcET_S4_>
   19e3e:	4c 89 e2             	mov    %r12,%rdx
   19e41:	48 89 de             	mov    %rbx,%rsi
   19e44:	48 89 c7             	mov    %rax,%rdi
   19e47:	e8 e8 05 00 00       	call   1a434 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   19e4c:	48 89 c2             	mov    %rax,%rdx
   19e4f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   19e53:	48 89 d6             	mov    %rdx,%rsi
   19e56:	48 89 c7             	mov    %rax,%rdi
   19e59:	e8 03 06 00 00       	call   1a461 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   19e5e:	48 83 c4 20          	add    $0x20,%rsp
   19e62:	5b                   	pop    %rbx
   19e63:	41 5c                	pop    %r12
   19e65:	5d                   	pop    %rbp
   19e66:	c3                   	ret
   19e67:	90                   	nop

0000000000019e68 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   19e68:	55                   	push   %rbp
   19e69:	48 89 e5             	mov    %rsp,%rbp
   19e6c:	48 83 ec 20          	sub    $0x20,%rsp
   19e70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19e78:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   19e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e80:	48 89 c7             	mov    %rax,%rdi
   19e83:	e8 ec 05 00 00       	call   1a474 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   19e88:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19e8c:	0f 92 c0             	setb   %al
   19e8f:	0f b6 c0             	movzbl %al,%eax
   19e92:	48 85 c0             	test   %rax,%rax
   19e95:	0f 95 c0             	setne  %al
   19e98:	84 c0                	test   %al,%al
   19e9a:	74 1a                	je     19eb6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   19e9c:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   19ea3:	38 8e 03 
   19ea6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19eaa:	73 05                	jae    19eb1 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   19eac:	e8 2f a4 fe ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   19eb1:	e8 4a a2 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   19eb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19eba:	48 89 d0             	mov    %rdx,%rax
   19ebd:	48 c1 e0 03          	shl    $0x3,%rax
   19ec1:	48 01 d0             	add    %rdx,%rax
   19ec4:	48 c1 e0 03          	shl    $0x3,%rax
   19ec8:	48 89 c7             	mov    %rax,%rdi
   19ecb:	e8 40 a5 fe ff       	call   4410 <_Znwm@plt>
   19ed0:	90                   	nop
      }
   19ed1:	c9                   	leave
   19ed2:	c3                   	ret
   19ed3:	90                   	nop

0000000000019ed4 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   19ed4:	55                   	push   %rbp
   19ed5:	48 89 e5             	mov    %rsp,%rbp
   19ed8:	48 83 ec 10          	sub    $0x10,%rsp
   19edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ee0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19ee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ee8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19eec:	48 89 d6             	mov    %rdx,%rsi
   19eef:	48 89 c7             	mov    %rax,%rdi
   19ef2:	e8 91 05 00 00       	call   1a488 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   19ef7:	90                   	nop
   19ef8:	c9                   	leave
   19ef9:	c3                   	ret

0000000000019efa <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   19efa:	55                   	push   %rbp
   19efb:	48 89 e5             	mov    %rsp,%rbp
   19efe:	41 56                	push   %r14
   19f00:	41 55                	push   %r13
   19f02:	41 54                	push   %r12
   19f04:	53                   	push   %rbx
   19f05:	48 83 ec 40          	sub    $0x40,%rsp
   19f09:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   19f0d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   19f11:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   19f15:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   19f19:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   19f1d:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   19f21:	48 89 de             	mov    %rbx,%rsi
   19f24:	bf 28 00 00 00       	mov    $0x28,%edi
   19f29:	e8 e1 bb fe ff       	call   5b0f <_ZnwmPv>
   19f2e:	49 89 c4             	mov    %rax,%r12
   19f31:	41 be 01 00 00 00    	mov    $0x1,%r14d
   19f37:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19f3b:	48 89 c7             	mov    %rax,%rdi
   19f3e:	e8 ac c5 ff ff       	call   164ef <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   19f43:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19f47:	48 89 c7             	mov    %rax,%rdi
   19f4a:	e8 92 c5 ff ff       	call   164e1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   19f4f:	48 89 c2             	mov    %rax,%rdx
   19f52:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   19f56:	48 89 d6             	mov    %rdx,%rsi
   19f59:	48 89 c7             	mov    %rax,%rdi
   19f5c:	e8 73 ff ff ff       	call   19ed4 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   19f61:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19f65:	48 89 c7             	mov    %rax,%rdi
   19f68:	e8 66 c5 ff ff       	call   164d3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   19f6d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   19f71:	48 89 c6             	mov    %rax,%rsi
   19f74:	4c 89 e7             	mov    %r12,%rdi
   19f77:	e8 2a 05 00 00       	call   1a4a6 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   19f7c:	eb 1e                	jmp    19f9c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   19f7e:	49 89 c5             	mov    %rax,%r13
   19f81:	45 84 f6             	test   %r14b,%r14b
   19f84:	74 0b                	je     19f91 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   19f86:	48 89 de             	mov    %rbx,%rsi
   19f89:	4c 89 e7             	mov    %r12,%rdi
   19f8c:	e8 10 81 ff ff       	call   120a1 <_ZdlPvS_>
   19f91:	4c 89 e8             	mov    %r13,%rax
   19f94:	48 89 c7             	mov    %rax,%rdi
   19f97:	e8 84 a8 fe ff       	call   4820 <_Unwind_Resume@plt>
   19f9c:	48 83 c4 40          	add    $0x40,%rsp
   19fa0:	5b                   	pop    %rbx
   19fa1:	41 5c                	pop    %r12
   19fa3:	41 5d                	pop    %r13
   19fa5:	41 5e                	pop    %r14
   19fa7:	5d                   	pop    %rbp
   19fa8:	c3                   	ret
   19fa9:	90                   	nop

0000000000019faa <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   19faa:	55                   	push   %rbp
   19fab:	48 89 e5             	mov    %rsp,%rbp
   19fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   19fb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fb6:	5d                   	pop    %rbp
   19fb7:	c3                   	ret

0000000000019fb8 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   19fb8:	55                   	push   %rbp
   19fb9:	48 89 e5             	mov    %rsp,%rbp
   19fbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   19fc0:	90                   	nop
   19fc1:	5d                   	pop    %rbp
   19fc2:	c3                   	ret

0000000000019fc3 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   19fc3:	55                   	push   %rbp
   19fc4:	48 89 e5             	mov    %rsp,%rbp
   19fc7:	48 83 ec 20          	sub    $0x20,%rsp
   19fcb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19fcf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19fd3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   19fd7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   19fdc:	75 06                	jne    19fe4 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   19fde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fe2:	eb 3a                	jmp    1a01e <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   19fe4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19fe8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19fef:	00 
   19ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ff4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   19ff8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a000:	48 89 ce             	mov    %rcx,%rsi
   1a003:	48 89 c7             	mov    %rax,%rdi
   1a006:	e8 c5 04 00 00       	call   1a4d0 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a00b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a00f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a016:	00 
   1a017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a01b:	48 01 d0             	add    %rdx,%rax
    }
   1a01e:	c9                   	leave
   1a01f:	c3                   	ret

000000000001a020 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   1a020:	55                   	push   %rbp
   1a021:	48 89 e5             	mov    %rsp,%rbp
   1a024:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a02c:	5d                   	pop    %rbp
   1a02d:	c3                   	ret

000000000001a02e <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a02e:	55                   	push   %rbp
   1a02f:	48 89 e5             	mov    %rsp,%rbp
   1a032:	41 54                	push   %r12
   1a034:	53                   	push   %rbx
   1a035:	48 83 ec 20          	sub    $0x20,%rsp
   1a039:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a03d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a041:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a045:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a049:	48 89 c7             	mov    %rax,%rdi
   1a04c:	e8 bb 04 00 00       	call   1a50c <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   1a051:	49 89 c4             	mov    %rax,%r12
   1a054:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a058:	48 89 c7             	mov    %rax,%rdi
   1a05b:	e8 9e 04 00 00       	call   1a4fe <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1a060:	48 89 c3             	mov    %rax,%rbx
   1a063:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a067:	48 89 c7             	mov    %rax,%rdi
   1a06a:	e8 8f 04 00 00       	call   1a4fe <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1a06f:	4c 89 e2             	mov    %r12,%rdx
   1a072:	48 89 de             	mov    %rbx,%rsi
   1a075:	48 89 c7             	mov    %rax,%rdi
   1a078:	e8 9d 04 00 00       	call   1a51a <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1a07d:	48 89 c2             	mov    %rax,%rdx
   1a080:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a084:	48 89 d6             	mov    %rdx,%rsi
   1a087:	48 89 c7             	mov    %rax,%rdi
   1a08a:	e8 b8 04 00 00       	call   1a547 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   1a08f:	48 83 c4 20          	add    $0x20,%rsp
   1a093:	5b                   	pop    %rbx
   1a094:	41 5c                	pop    %r12
   1a096:	5d                   	pop    %rbp
   1a097:	c3                   	ret

000000000001a098 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1a098:	55                   	push   %rbp
   1a099:	48 89 e5             	mov    %rsp,%rbp
   1a09c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1a0a0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1a0a7:	ff ff 0f 
      }
   1a0aa:	5d                   	pop    %rbp
   1a0ab:	c3                   	ret

000000000001a0ac <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a0ac:	55                   	push   %rbp
   1a0ad:	48 89 e5             	mov    %rsp,%rbp
   1a0b0:	48 83 ec 20          	sub    $0x20,%rsp
   1a0b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a0b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a0bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a0c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a0c4:	48 89 c7             	mov    %rax,%rdi
   1a0c7:	e8 cc ff ff ff       	call   1a098 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1a0cc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a0d0:	0f 92 c0             	setb   %al
   1a0d3:	0f b6 c0             	movzbl %al,%eax
   1a0d6:	48 85 c0             	test   %rax,%rax
   1a0d9:	0f 95 c0             	setne  %al
   1a0dc:	84 c0                	test   %al,%al
   1a0de:	74 1a                	je     1a0fa <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a0e0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a0e7:	ff ff 1f 
   1a0ea:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a0ee:	73 05                	jae    1a0f5 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a0f0:	e8 eb a1 fe ff       	call   42e0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a0f5:	e8 06 a0 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a0fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a0fe:	48 c1 e0 03          	shl    $0x3,%rax
   1a102:	48 89 c7             	mov    %rax,%rdi
   1a105:	e8 06 a3 fe ff       	call   4410 <_Znwm@plt>
   1a10a:	90                   	nop
      }
   1a10b:	c9                   	leave
   1a10c:	c3                   	ret

000000000001a10d <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1a10d:	55                   	push   %rbp
   1a10e:	48 89 e5             	mov    %rsp,%rbp
   1a111:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1a115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a119:	5d                   	pop    %rbp
   1a11a:	c3                   	ret

000000000001a11b <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1a11b:	55                   	push   %rbp
   1a11c:	48 89 e5             	mov    %rsp,%rbp
   1a11f:	48 83 ec 10          	sub    $0x10,%rsp
   1a123:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1a127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a12b:	48 89 c6             	mov    %rax,%rsi
   1a12e:	bf 08 00 00 00       	mov    $0x8,%edi
   1a133:	e8 d7 b9 fe ff       	call   5b0f <_ZnwmPv>
   1a138:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1a13f:	90                   	nop
   1a140:	c9                   	leave
   1a141:	c3                   	ret

000000000001a142 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1a142:	55                   	push   %rbp
   1a143:	48 89 e5             	mov    %rsp,%rbp
   1a146:	48 83 ec 20          	sub    $0x20,%rsp
   1a14a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a14e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a152:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1a156:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1a15a:	48 89 c7             	mov    %rax,%rdi
   1a15d:	e8 f7 03 00 00       	call   1a559 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1a162:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a166:	48 89 c7             	mov    %rax,%rdi
   1a169:	e8 b3 b9 fe ff       	call   5b21 <_ZSt17__size_to_integerm>
   1a16e:	48 89 c1             	mov    %rax,%rcx
   1a171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a175:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a179:	48 89 ce             	mov    %rcx,%rsi
   1a17c:	48 89 c7             	mov    %rax,%rdi
   1a17f:	e8 e0 03 00 00       	call   1a564 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1a184:	c9                   	leave
   1a185:	c3                   	ret

000000000001a186 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a186:	55                   	push   %rbp
   1a187:	48 89 e5             	mov    %rsp,%rbp
   1a18a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a18e:	90                   	nop
   1a18f:	5d                   	pop    %rbp
   1a190:	c3                   	ret

000000000001a191 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a191:	55                   	push   %rbp
   1a192:	48 89 e5             	mov    %rsp,%rbp
   1a195:	48 83 ec 20          	sub    $0x20,%rsp
   1a199:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a19d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a1a1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a1a5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a1aa:	75 06                	jne    1a1b2 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a1ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1b0:	eb 3a                	jmp    1a1ec <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a1b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1b6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a1bd:	00 
   1a1be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1c2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a1c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a1ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1ce:	48 89 ce             	mov    %rcx,%rsi
   1a1d1:	48 89 c7             	mov    %rax,%rdi
   1a1d4:	e8 e8 03 00 00       	call   1a5c1 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a1d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1dd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a1e4:	00 
   1a1e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1e9:	48 01 d0             	add    %rdx,%rax
    }
   1a1ec:	c9                   	leave
   1a1ed:	c3                   	ret

000000000001a1ee <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   1a1ee:	55                   	push   %rbp
   1a1ef:	48 89 e5             	mov    %rsp,%rbp
   1a1f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a1f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1fa:	5d                   	pop    %rbp
   1a1fb:	c3                   	ret

000000000001a1fc <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a1fc:	55                   	push   %rbp
   1a1fd:	48 89 e5             	mov    %rsp,%rbp
   1a200:	41 54                	push   %r12
   1a202:	53                   	push   %rbx
   1a203:	48 83 ec 20          	sub    $0x20,%rsp
   1a207:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a20b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a20f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a213:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a217:	48 89 c7             	mov    %rax,%rdi
   1a21a:	e8 02 ee ff ff       	call   19021 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1a21f:	49 89 c4             	mov    %rax,%r12
   1a222:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a226:	48 89 c7             	mov    %rax,%rdi
   1a229:	e8 c1 03 00 00       	call   1a5ef <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1a22e:	48 89 c3             	mov    %rax,%rbx
   1a231:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a235:	48 89 c7             	mov    %rax,%rdi
   1a238:	e8 b2 03 00 00       	call   1a5ef <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1a23d:	4c 89 e2             	mov    %r12,%rdx
   1a240:	48 89 de             	mov    %rbx,%rsi
   1a243:	48 89 c7             	mov    %rax,%rdi
   1a246:	e8 b2 03 00 00       	call   1a5fd <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1a24b:	48 89 c2             	mov    %rax,%rdx
   1a24e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a252:	48 89 d6             	mov    %rdx,%rsi
   1a255:	48 89 c7             	mov    %rax,%rdi
   1a258:	e8 cd 03 00 00       	call   1a62a <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   1a25d:	48 83 c4 20          	add    $0x20,%rsp
   1a261:	5b                   	pop    %rbx
   1a262:	41 5c                	pop    %r12
   1a264:	5d                   	pop    %rbp
   1a265:	c3                   	ret

000000000001a266 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a266:	55                   	push   %rbp
   1a267:	48 89 e5             	mov    %rsp,%rbp
   1a26a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a26e:	90                   	nop
   1a26f:	5d                   	pop    %rbp
   1a270:	c3                   	ret

000000000001a271 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a271:	55                   	push   %rbp
   1a272:	48 89 e5             	mov    %rsp,%rbp
   1a275:	48 83 ec 20          	sub    $0x20,%rsp
   1a279:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a27d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a281:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a285:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a28a:	75 06                	jne    1a292 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a28c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a290:	eb 3a                	jmp    1a2cc <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a292:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a296:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a29d:	00 
   1a29e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2a2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a2a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a2aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2ae:	48 89 ce             	mov    %rcx,%rsi
   1a2b1:	48 89 c7             	mov    %rax,%rdi
   1a2b4:	e8 83 03 00 00       	call   1a63c <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a2b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a2bd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a2c4:	00 
   1a2c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2c9:	48 01 d0             	add    %rdx,%rax
    }
   1a2cc:	c9                   	leave
   1a2cd:	c3                   	ret

000000000001a2ce <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a2ce:	55                   	push   %rbp
   1a2cf:	48 89 e5             	mov    %rsp,%rbp
   1a2d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a2d6:	90                   	nop
   1a2d7:	5d                   	pop    %rbp
   1a2d8:	c3                   	ret

000000000001a2d9 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a2d9:	55                   	push   %rbp
   1a2da:	48 89 e5             	mov    %rsp,%rbp
   1a2dd:	48 83 ec 20          	sub    $0x20,%rsp
   1a2e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a2e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a2e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a2ed:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a2f2:	75 06                	jne    1a2fa <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a2f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2f8:	eb 3a                	jmp    1a334 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a2fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a2fe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a305:	00 
   1a306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a30a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a30e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a316:	48 89 ce             	mov    %rcx,%rsi
   1a319:	48 89 c7             	mov    %rax,%rdi
   1a31c:	e8 49 03 00 00       	call   1a66a <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a321:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a325:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a32c:	00 
   1a32d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a331:	48 01 d0             	add    %rdx,%rax
    }
   1a334:	c9                   	leave
   1a335:	c3                   	ret

000000000001a336 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>:
    __miter_base(_Iterator __it)
   1a336:	55                   	push   %rbp
   1a337:	48 89 e5             	mov    %rsp,%rbp
   1a33a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a33e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a342:	5d                   	pop    %rbp
   1a343:	c3                   	ret

000000000001a344 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a344:	55                   	push   %rbp
   1a345:	48 89 e5             	mov    %rsp,%rbp
   1a348:	41 54                	push   %r12
   1a34a:	53                   	push   %rbx
   1a34b:	48 83 ec 20          	sub    $0x20,%rsp
   1a34f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a353:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a357:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a35b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a35f:	48 89 c7             	mov    %rax,%rdi
   1a362:	e8 5a f1 ff ff       	call   194c1 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1a367:	49 89 c4             	mov    %rax,%r12
   1a36a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a36e:	48 89 c7             	mov    %rax,%rdi
   1a371:	e8 22 03 00 00       	call   1a698 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   1a376:	48 89 c3             	mov    %rax,%rbx
   1a379:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a37d:	48 89 c7             	mov    %rax,%rdi
   1a380:	e8 13 03 00 00       	call   1a698 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   1a385:	4c 89 e2             	mov    %r12,%rdx
   1a388:	48 89 de             	mov    %rbx,%rsi
   1a38b:	48 89 c7             	mov    %rax,%rdi
   1a38e:	e8 13 03 00 00       	call   1a6a6 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   1a393:	48 89 c2             	mov    %rax,%rdx
   1a396:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a39a:	48 89 d6             	mov    %rdx,%rsi
   1a39d:	48 89 c7             	mov    %rax,%rdi
   1a3a0:	e8 2e 03 00 00       	call   1a6d3 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>
    }
   1a3a5:	48 83 c4 20          	add    $0x20,%rsp
   1a3a9:	5b                   	pop    %rbx
   1a3aa:	41 5c                	pop    %r12
   1a3ac:	5d                   	pop    %rbp
   1a3ad:	c3                   	ret

000000000001a3ae <_ZSt12__miter_baseIPKjET_S2_>:
    __miter_base(_Iterator __it)
   1a3ae:	55                   	push   %rbp
   1a3af:	48 89 e5             	mov    %rsp,%rbp
   1a3b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a3b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a3ba:	5d                   	pop    %rbp
   1a3bb:	c3                   	ret

000000000001a3bc <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a3bc:	55                   	push   %rbp
   1a3bd:	48 89 e5             	mov    %rsp,%rbp
   1a3c0:	41 54                	push   %r12
   1a3c2:	53                   	push   %rbx
   1a3c3:	48 83 ec 20          	sub    $0x20,%rsp
   1a3c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a3cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a3cf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a3d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a3d7:	48 89 c7             	mov    %rax,%rdi
   1a3da:	e8 14 03 00 00       	call   1a6f3 <_ZSt12__niter_baseIPjET_S1_>
   1a3df:	49 89 c4             	mov    %rax,%r12
   1a3e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a3e6:	48 89 c7             	mov    %rax,%rdi
   1a3e9:	e8 f7 02 00 00       	call   1a6e5 <_ZSt12__niter_baseIPKjET_S2_>
   1a3ee:	48 89 c3             	mov    %rax,%rbx
   1a3f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a3f5:	48 89 c7             	mov    %rax,%rdi
   1a3f8:	e8 e8 02 00 00       	call   1a6e5 <_ZSt12__niter_baseIPKjET_S2_>
   1a3fd:	4c 89 e2             	mov    %r12,%rdx
   1a400:	48 89 de             	mov    %rbx,%rsi
   1a403:	48 89 c7             	mov    %rax,%rdi
   1a406:	e8 f6 02 00 00       	call   1a701 <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>
   1a40b:	48 89 c2             	mov    %rax,%rdx
   1a40e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a412:	48 89 d6             	mov    %rdx,%rsi
   1a415:	48 89 c7             	mov    %rax,%rdi
   1a418:	e8 11 03 00 00       	call   1a72e <_ZSt12__niter_wrapIPjET_RKS1_S1_>
    }
   1a41d:	48 83 c4 20          	add    $0x20,%rsp
   1a421:	5b                   	pop    %rbx
   1a422:	41 5c                	pop    %r12
   1a424:	5d                   	pop    %rbp
   1a425:	c3                   	ret

000000000001a426 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   1a426:	55                   	push   %rbp
   1a427:	48 89 e5             	mov    %rsp,%rbp
   1a42a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a42e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a432:	5d                   	pop    %rbp
   1a433:	c3                   	ret

000000000001a434 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1a434:	55                   	push   %rbp
   1a435:	48 89 e5             	mov    %rsp,%rbp
   1a438:	48 83 ec 20          	sub    $0x20,%rsp
   1a43c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a440:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a444:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1a448:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a44c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a454:	48 89 ce             	mov    %rcx,%rsi
   1a457:	48 89 c7             	mov    %rax,%rdi
   1a45a:	e8 e1 02 00 00       	call   1a740 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1a45f:	c9                   	leave
   1a460:	c3                   	ret

000000000001a461 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1a461:	55                   	push   %rbp
   1a462:	48 89 e5             	mov    %rsp,%rbp
   1a465:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a469:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1a46d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a471:	5d                   	pop    %rbp
   1a472:	c3                   	ret
   1a473:	90                   	nop

000000000001a474 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1a474:	55                   	push   %rbp
   1a475:	48 89 e5             	mov    %rsp,%rbp
   1a478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1a47c:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1a483:	1c c7 01 
      }
   1a486:	5d                   	pop    %rbp
   1a487:	c3                   	ret

000000000001a488 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   1a488:	55                   	push   %rbp
   1a489:	48 89 e5             	mov    %rsp,%rbp
   1a48c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a490:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1a494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a498:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a49c:	48 8b 12             	mov    (%rdx),%rdx
   1a49f:	48 89 10             	mov    %rdx,(%rax)
      { }
   1a4a2:	90                   	nop
   1a4a3:	5d                   	pop    %rbp
   1a4a4:	c3                   	ret
   1a4a5:	90                   	nop

000000000001a4a6 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   1a4a6:	55                   	push   %rbp
   1a4a7:	48 89 e5             	mov    %rsp,%rbp
   1a4aa:	48 83 ec 20          	sub    $0x20,%rsp
   1a4ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a4b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   1a4b6:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1a4ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a4be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a4c2:	48 89 ce             	mov    %rcx,%rsi
   1a4c5:	48 89 c7             	mov    %rax,%rdi
   1a4c8:	e8 a1 02 00 00       	call   1a76e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   1a4cd:	90                   	nop
   1a4ce:	c9                   	leave
   1a4cf:	c3                   	ret

000000000001a4d0 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1a4d0:	55                   	push   %rbp
   1a4d1:	48 89 e5             	mov    %rsp,%rbp
   1a4d4:	48 83 ec 20          	sub    $0x20,%rsp
   1a4d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a4dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a4e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1a4e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a4e8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a4ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a4f0:	48 89 ce             	mov    %rcx,%rsi
   1a4f3:	48 89 c7             	mov    %rax,%rdi
   1a4f6:	e8 bd 02 00 00       	call   1a7b8 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1a4fb:	90                   	nop
   1a4fc:	c9                   	leave
   1a4fd:	c3                   	ret

000000000001a4fe <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   1a4fe:	55                   	push   %rbp
   1a4ff:	48 89 e5             	mov    %rsp,%rbp
   1a502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a50a:	5d                   	pop    %rbp
   1a50b:	c3                   	ret

000000000001a50c <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   1a50c:	55                   	push   %rbp
   1a50d:	48 89 e5             	mov    %rsp,%rbp
   1a510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a518:	5d                   	pop    %rbp
   1a519:	c3                   	ret

000000000001a51a <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1a51a:	55                   	push   %rbp
   1a51b:	48 89 e5             	mov    %rsp,%rbp
   1a51e:	48 83 ec 20          	sub    $0x20,%rsp
   1a522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a52a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1a52e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a532:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a53a:	48 89 ce             	mov    %rcx,%rsi
   1a53d:	48 89 c7             	mov    %rax,%rdi
   1a540:	e8 ae 02 00 00       	call   1a7f3 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1a545:	c9                   	leave
   1a546:	c3                   	ret

000000000001a547 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1a547:	55                   	push   %rbp
   1a548:	48 89 e5             	mov    %rsp,%rbp
   1a54b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a54f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1a553:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a557:	5d                   	pop    %rbp
   1a558:	c3                   	ret

000000000001a559 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a559:	55                   	push   %rbp
   1a55a:	48 89 e5             	mov    %rsp,%rbp
   1a55d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a561:	90                   	nop
   1a562:	5d                   	pop    %rbp
   1a563:	c3                   	ret

000000000001a564 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a564:	55                   	push   %rbp
   1a565:	48 89 e5             	mov    %rsp,%rbp
   1a568:	48 83 ec 20          	sub    $0x20,%rsp
   1a56c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a570:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a574:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a578:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a57d:	75 06                	jne    1a585 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a57f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a583:	eb 3a                	jmp    1a5bf <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a585:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a589:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a590:	00 
   1a591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a595:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a599:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a59d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5a1:	48 89 ce             	mov    %rcx,%rsi
   1a5a4:	48 89 c7             	mov    %rax,%rdi
   1a5a7:	e8 74 02 00 00       	call   1a820 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a5ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a5b0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5b7:	00 
   1a5b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5bc:	48 01 d0             	add    %rdx,%rax
    }
   1a5bf:	c9                   	leave
   1a5c0:	c3                   	ret

000000000001a5c1 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1a5c1:	55                   	push   %rbp
   1a5c2:	48 89 e5             	mov    %rsp,%rbp
   1a5c5:	48 83 ec 20          	sub    $0x20,%rsp
   1a5c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a5cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a5d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1a5d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a5d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a5dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5e1:	48 89 ce             	mov    %rcx,%rsi
   1a5e4:	48 89 c7             	mov    %rax,%rdi
   1a5e7:	e8 62 02 00 00       	call   1a84e <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1a5ec:	90                   	nop
   1a5ed:	c9                   	leave
   1a5ee:	c3                   	ret

000000000001a5ef <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   1a5ef:	55                   	push   %rbp
   1a5f0:	48 89 e5             	mov    %rsp,%rbp
   1a5f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a5f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5fb:	5d                   	pop    %rbp
   1a5fc:	c3                   	ret

000000000001a5fd <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1a5fd:	55                   	push   %rbp
   1a5fe:	48 89 e5             	mov    %rsp,%rbp
   1a601:	48 83 ec 20          	sub    $0x20,%rsp
   1a605:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a609:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a60d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1a611:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a615:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a61d:	48 89 ce             	mov    %rcx,%rsi
   1a620:	48 89 c7             	mov    %rax,%rdi
   1a623:	e8 61 02 00 00       	call   1a889 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1a628:	c9                   	leave
   1a629:	c3                   	ret

000000000001a62a <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1a62a:	55                   	push   %rbp
   1a62b:	48 89 e5             	mov    %rsp,%rbp
   1a62e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a632:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1a636:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a63a:	5d                   	pop    %rbp
   1a63b:	c3                   	ret

000000000001a63c <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1a63c:	55                   	push   %rbp
   1a63d:	48 89 e5             	mov    %rsp,%rbp
   1a640:	48 83 ec 20          	sub    $0x20,%rsp
   1a644:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a648:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a64c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1a650:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a654:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a65c:	48 89 ce             	mov    %rcx,%rsi
   1a65f:	48 89 c7             	mov    %rax,%rdi
   1a662:	e8 4f 02 00 00       	call   1a8b6 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1a667:	90                   	nop
   1a668:	c9                   	leave
   1a669:	c3                   	ret

000000000001a66a <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1a66a:	55                   	push   %rbp
   1a66b:	48 89 e5             	mov    %rsp,%rbp
   1a66e:	48 83 ec 20          	sub    $0x20,%rsp
   1a672:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a676:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a67a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1a67e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a682:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a68a:	48 89 ce             	mov    %rcx,%rsi
   1a68d:	48 89 c7             	mov    %rax,%rdi
   1a690:	e8 5c 02 00 00       	call   1a8f1 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1a695:	90                   	nop
   1a696:	c9                   	leave
   1a697:	c3                   	ret

000000000001a698 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>:
    __niter_base(_Iterator __it)
   1a698:	55                   	push   %rbp
   1a699:	48 89 e5             	mov    %rsp,%rbp
   1a69c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6a4:	5d                   	pop    %rbp
   1a6a5:	c3                   	ret

000000000001a6a6 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1a6a6:	55                   	push   %rbp
   1a6a7:	48 89 e5             	mov    %rsp,%rbp
   1a6aa:	48 83 ec 20          	sub    $0x20,%rsp
   1a6ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a6b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a6b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1a6ba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a6be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a6c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6c6:	48 89 ce             	mov    %rcx,%rsi
   1a6c9:	48 89 c7             	mov    %rax,%rdi
   1a6cc:	e8 5b 02 00 00       	call   1a92c <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   1a6d1:	c9                   	leave
   1a6d2:	c3                   	ret

000000000001a6d3 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1a6d3:	55                   	push   %rbp
   1a6d4:	48 89 e5             	mov    %rsp,%rbp
   1a6d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a6db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1a6df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a6e3:	5d                   	pop    %rbp
   1a6e4:	c3                   	ret

000000000001a6e5 <_ZSt12__niter_baseIPKjET_S2_>:
    __niter_base(_Iterator __it)
   1a6e5:	55                   	push   %rbp
   1a6e6:	48 89 e5             	mov    %rsp,%rbp
   1a6e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a6ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6f1:	5d                   	pop    %rbp
   1a6f2:	c3                   	ret

000000000001a6f3 <_ZSt12__niter_baseIPjET_S1_>:
    __niter_base(_Iterator __it)
   1a6f3:	55                   	push   %rbp
   1a6f4:	48 89 e5             	mov    %rsp,%rbp
   1a6f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a6fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6ff:	5d                   	pop    %rbp
   1a700:	c3                   	ret

000000000001a701 <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1a701:	55                   	push   %rbp
   1a702:	48 89 e5             	mov    %rsp,%rbp
   1a705:	48 83 ec 20          	sub    $0x20,%rsp
   1a709:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a70d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a711:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1a715:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a719:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a71d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a721:	48 89 ce             	mov    %rcx,%rsi
   1a724:	48 89 c7             	mov    %rax,%rdi
   1a727:	e8 2d 02 00 00       	call   1a959 <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>
   1a72c:	c9                   	leave
   1a72d:	c3                   	ret

000000000001a72e <_ZSt12__niter_wrapIPjET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1a72e:	55                   	push   %rbp
   1a72f:	48 89 e5             	mov    %rsp,%rbp
   1a732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a736:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1a73a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a73e:	5d                   	pop    %rbp
   1a73f:	c3                   	ret

000000000001a740 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1a740:	55                   	push   %rbp
   1a741:	48 89 e5             	mov    %rsp,%rbp
   1a744:	48 83 ec 20          	sub    $0x20,%rsp
   1a748:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a74c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a750:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1a754:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a758:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a760:	48 89 ce             	mov    %rcx,%rsi
   1a763:	48 89 c7             	mov    %rax,%rdi
   1a766:	e8 1b 02 00 00       	call   1a986 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   1a76b:	c9                   	leave
   1a76c:	c3                   	ret
   1a76d:	90                   	nop

000000000001a76e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1a76e:	55                   	push   %rbp
   1a76f:	48 89 e5             	mov    %rsp,%rbp
   1a772:	53                   	push   %rbx
   1a773:	48 83 ec 28          	sub    $0x28,%rsp
   1a777:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a77b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a77f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1a783:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1a787:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a78b:	48 89 c7             	mov    %rax,%rdi
   1a78e:	e8 52 02 00 00       	call   1a9e5 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   1a793:	48 89 c7             	mov    %rax,%rdi
   1a796:	e8 64 02 00 00       	call   1a9ff <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   1a79b:	48 89 c6             	mov    %rax,%rsi
   1a79e:	48 89 df             	mov    %rbx,%rdi
   1a7a1:	e8 9a 9a fe ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   1a7a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7aa:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   1a7b1:	90                   	nop
   1a7b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a7b6:	c9                   	leave
   1a7b7:	c3                   	ret

000000000001a7b8 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1a7b8:	55                   	push   %rbp
   1a7b9:	48 89 e5             	mov    %rsp,%rbp
   1a7bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a7c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a7c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1a7c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a7cc:	48 8b 00             	mov    (%rax),%rax
   1a7cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1a7d3:	eb 10                	jmp    1a7e5 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1a7d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a7dd:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1a7e0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1a7e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7e9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a7ed:	75 e6                	jne    1a7d5 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1a7ef:	90                   	nop
   1a7f0:	90                   	nop
   1a7f1:	5d                   	pop    %rbp
   1a7f2:	c3                   	ret

000000000001a7f3 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1a7f3:	55                   	push   %rbp
   1a7f4:	48 89 e5             	mov    %rsp,%rbp
   1a7f7:	48 83 ec 20          	sub    $0x20,%rsp
   1a7fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a7ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a803:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1a807:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a80b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a80f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a813:	48 89 ce             	mov    %rcx,%rsi
   1a816:	48 89 c7             	mov    %rax,%rdi
   1a819:	e8 ef 01 00 00       	call   1aa0d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   1a81e:	c9                   	leave
   1a81f:	c3                   	ret

000000000001a820 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1a820:	55                   	push   %rbp
   1a821:	48 89 e5             	mov    %rsp,%rbp
   1a824:	48 83 ec 20          	sub    $0x20,%rsp
   1a828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a82c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a830:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1a834:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a838:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a83c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a840:	48 89 ce             	mov    %rcx,%rsi
   1a843:	48 89 c7             	mov    %rax,%rdi
   1a846:	e8 44 02 00 00       	call   1aa8f <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1a84b:	90                   	nop
   1a84c:	c9                   	leave
   1a84d:	c3                   	ret

000000000001a84e <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1a84e:	55                   	push   %rbp
   1a84f:	48 89 e5             	mov    %rsp,%rbp
   1a852:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a856:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a85a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1a85e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a862:	48 8b 00             	mov    (%rax),%rax
   1a865:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1a869:	eb 10                	jmp    1a87b <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1a86b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a86f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a873:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1a876:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1a87b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a87f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a883:	75 e6                	jne    1a86b <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1a885:	90                   	nop
   1a886:	90                   	nop
   1a887:	5d                   	pop    %rbp
   1a888:	c3                   	ret

000000000001a889 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1a889:	55                   	push   %rbp
   1a88a:	48 89 e5             	mov    %rsp,%rbp
   1a88d:	48 83 ec 20          	sub    $0x20,%rsp
   1a891:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a895:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a899:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1a89d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a8a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a8a9:	48 89 ce             	mov    %rcx,%rsi
   1a8ac:	48 89 c7             	mov    %rax,%rdi
   1a8af:	e8 16 02 00 00       	call   1aaca <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   1a8b4:	c9                   	leave
   1a8b5:	c3                   	ret

000000000001a8b6 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1a8b6:	55                   	push   %rbp
   1a8b7:	48 89 e5             	mov    %rsp,%rbp
   1a8ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a8be:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a8c2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1a8c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a8ca:	48 8b 00             	mov    (%rax),%rax
   1a8cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1a8d1:	eb 10                	jmp    1a8e3 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1a8d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a8db:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1a8de:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1a8e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8e7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a8eb:	75 e6                	jne    1a8d3 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1a8ed:	90                   	nop
   1a8ee:	90                   	nop
   1a8ef:	5d                   	pop    %rbp
   1a8f0:	c3                   	ret

000000000001a8f1 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1a8f1:	55                   	push   %rbp
   1a8f2:	48 89 e5             	mov    %rsp,%rbp
   1a8f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a8f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a8fd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1a901:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a905:	48 8b 00             	mov    (%rax),%rax
   1a908:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1a90c:	eb 10                	jmp    1a91e <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1a90e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a912:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a916:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1a919:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1a91e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a922:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a926:	75 e6                	jne    1a90e <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1a928:	90                   	nop
   1a929:	90                   	nop
   1a92a:	5d                   	pop    %rbp
   1a92b:	c3                   	ret

000000000001a92c <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1a92c:	55                   	push   %rbp
   1a92d:	48 89 e5             	mov    %rsp,%rbp
   1a930:	48 83 ec 20          	sub    $0x20,%rsp
   1a934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a938:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a93c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1a940:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a944:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a948:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a94c:	48 89 ce             	mov    %rcx,%rsi
   1a94f:	48 89 c7             	mov    %rax,%rdi
   1a952:	e8 d2 01 00 00       	call   1ab29 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>
    }
   1a957:	c9                   	leave
   1a958:	c3                   	ret

000000000001a959 <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1a959:	55                   	push   %rbp
   1a95a:	48 89 e5             	mov    %rsp,%rbp
   1a95d:	48 83 ec 20          	sub    $0x20,%rsp
   1a961:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a965:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a969:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1a96d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a971:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a975:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a979:	48 89 ce             	mov    %rcx,%rsi
   1a97c:	48 89 c7             	mov    %rax,%rdi
   1a97f:	e8 04 02 00 00       	call   1ab88 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>
    }
   1a984:	c9                   	leave
   1a985:	c3                   	ret

000000000001a986 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1a986:	55                   	push   %rbp
   1a987:	48 89 e5             	mov    %rsp,%rbp
   1a98a:	48 83 ec 30          	sub    $0x30,%rsp
   1a98e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a992:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a996:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1a99a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a99e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a9a2:	48 c1 f8 03          	sar    $0x3,%rax
   1a9a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1a9aa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a9af:	74 1f                	je     1a9d0 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1a9b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9b5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a9bc:	00 
   1a9bd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a9c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a9c5:	48 89 ce             	mov    %rcx,%rsi
   1a9c8:	48 89 c7             	mov    %rax,%rdi
   1a9cb:	e8 c0 9d fe ff       	call   4790 <memmove@plt>
	  return __result + _Num;
   1a9d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9d4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a9db:	00 
   1a9dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a9e0:	48 01 d0             	add    %rdx,%rax
	}
   1a9e3:	c9                   	leave
   1a9e4:	c3                   	ret

000000000001a9e5 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   1a9e5:	55                   	push   %rbp
   1a9e6:	48 89 e5             	mov    %rsp,%rbp
   1a9e9:	48 83 ec 10          	sub    $0x10,%rsp
   1a9ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   1a9f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9f5:	48 89 c7             	mov    %rax,%rdi
   1a9f8:	e8 ea 01 00 00       	call   1abe7 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   1a9fd:	c9                   	leave
   1a9fe:	c3                   	ret

000000000001a9ff <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1a9ff:	55                   	push   %rbp
   1aa00:	48 89 e5             	mov    %rsp,%rbp
   1aa03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1aa07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa0b:	5d                   	pop    %rbp
   1aa0c:	c3                   	ret

000000000001aa0d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1aa0d:	55                   	push   %rbp
   1aa0e:	48 89 e5             	mov    %rsp,%rbp
   1aa11:	48 83 ec 30          	sub    $0x30,%rsp
   1aa15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aa19:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1aa1d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1aa21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aa25:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1aa29:	48 c1 f8 04          	sar    $0x4,%rax
   1aa2d:	48 89 c2             	mov    %rax,%rdx
   1aa30:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1aa37:	e3 38 8e 
   1aa3a:	48 0f af c2          	imul   %rdx,%rax
   1aa3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1aa42:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1aa47:	74 28                	je     1aa71 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1aa49:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1aa4d:	48 89 d0             	mov    %rdx,%rax
   1aa50:	48 c1 e0 03          	shl    $0x3,%rax
   1aa54:	48 01 d0             	add    %rdx,%rax
   1aa57:	48 c1 e0 04          	shl    $0x4,%rax
   1aa5b:	48 89 c2             	mov    %rax,%rdx
   1aa5e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1aa62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aa66:	48 89 ce             	mov    %rcx,%rsi
   1aa69:	48 89 c7             	mov    %rax,%rdi
   1aa6c:	e8 1f 9d fe ff       	call   4790 <memmove@plt>
	  return __result + _Num;
   1aa71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1aa75:	48 89 d0             	mov    %rdx,%rax
   1aa78:	48 c1 e0 03          	shl    $0x3,%rax
   1aa7c:	48 01 d0             	add    %rdx,%rax
   1aa7f:	48 c1 e0 04          	shl    $0x4,%rax
   1aa83:	48 89 c2             	mov    %rax,%rdx
   1aa86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aa8a:	48 01 d0             	add    %rdx,%rax
	}
   1aa8d:	c9                   	leave
   1aa8e:	c3                   	ret

000000000001aa8f <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1aa8f:	55                   	push   %rbp
   1aa90:	48 89 e5             	mov    %rsp,%rbp
   1aa93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aa97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1aa9b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1aa9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aaa3:	48 8b 00             	mov    (%rax),%rax
   1aaa6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1aaaa:	eb 10                	jmp    1aabc <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1aaac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aab0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1aab4:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1aab7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1aabc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aac0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1aac4:	75 e6                	jne    1aaac <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1aac6:	90                   	nop
   1aac7:	90                   	nop
   1aac8:	5d                   	pop    %rbp
   1aac9:	c3                   	ret

000000000001aaca <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1aaca:	55                   	push   %rbp
   1aacb:	48 89 e5             	mov    %rsp,%rbp
   1aace:	48 83 ec 30          	sub    $0x30,%rsp
   1aad2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aad6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1aada:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1aade:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aae2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1aae6:	48 c1 f8 03          	sar    $0x3,%rax
   1aaea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1aaee:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1aaf3:	74 1f                	je     1ab14 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1aaf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aaf9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab00:	00 
   1ab01:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1ab05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ab09:	48 89 ce             	mov    %rcx,%rsi
   1ab0c:	48 89 c7             	mov    %rax,%rdi
   1ab0f:	e8 7c 9c fe ff       	call   4790 <memmove@plt>
	  return __result + _Num;
   1ab14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab18:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab1f:	00 
   1ab20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ab24:	48 01 d0             	add    %rdx,%rax
	}
   1ab27:	c9                   	leave
   1ab28:	c3                   	ret

000000000001ab29 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1ab29:	55                   	push   %rbp
   1ab2a:	48 89 e5             	mov    %rsp,%rbp
   1ab2d:	48 83 ec 30          	sub    $0x30,%rsp
   1ab31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ab35:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ab39:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1ab3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ab41:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1ab45:	48 c1 f8 03          	sar    $0x3,%rax
   1ab49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1ab4d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1ab52:	74 1f                	je     1ab73 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1ab54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab58:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab5f:	00 
   1ab60:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1ab64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ab68:	48 89 ce             	mov    %rcx,%rsi
   1ab6b:	48 89 c7             	mov    %rax,%rdi
   1ab6e:	e8 1d 9c fe ff       	call   4790 <memmove@plt>
	  return __result + _Num;
   1ab73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab77:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab7e:	00 
   1ab7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ab83:	48 01 d0             	add    %rdx,%rax
	}
   1ab86:	c9                   	leave
   1ab87:	c3                   	ret

000000000001ab88 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1ab88:	55                   	push   %rbp
   1ab89:	48 89 e5             	mov    %rsp,%rbp
   1ab8c:	48 83 ec 30          	sub    $0x30,%rsp
   1ab90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ab94:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ab98:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1ab9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aba0:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1aba4:	48 c1 f8 02          	sar    $0x2,%rax
   1aba8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1abac:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1abb1:	74 1f                	je     1abd2 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1abb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1abb7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1abbe:	00 
   1abbf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1abc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1abc7:	48 89 ce             	mov    %rcx,%rsi
   1abca:	48 89 c7             	mov    %rax,%rdi
   1abcd:	e8 be 9b fe ff       	call   4790 <memmove@plt>
	  return __result + _Num;
   1abd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1abd6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1abdd:	00 
   1abde:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1abe2:	48 01 d0             	add    %rdx,%rax
	}
   1abe5:	c9                   	leave
   1abe6:	c3                   	ret

000000000001abe7 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   1abe7:	55                   	push   %rbp
   1abe8:	48 89 e5             	mov    %rsp,%rbp
   1abeb:	48 83 ec 10          	sub    $0x10,%rsp
   1abef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   1abf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1abf7:	48 89 c7             	mov    %rax,%rdi
   1abfa:	e8 02 00 00 00       	call   1ac01 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   1abff:	c9                   	leave
   1ac00:	c3                   	ret

000000000001ac01 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   1ac01:	55                   	push   %rbp
   1ac02:	48 89 e5             	mov    %rsp,%rbp
   1ac05:	48 83 ec 10          	sub    $0x10,%rsp
   1ac09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac11:	48 89 c7             	mov    %rax,%rdi
   1ac14:	e8 02 00 00 00       	call   1ac1b <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   1ac19:	c9                   	leave
   1ac1a:	c3                   	ret

000000000001ac1b <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   1ac1b:	55                   	push   %rbp
   1ac1c:	48 89 e5             	mov    %rsp,%rbp
   1ac1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac27:	48 8b 00             	mov    (%rax),%rax
   1ac2a:	5d                   	pop    %rbp
   1ac2b:	c3                   	ret

000000000001ac2c <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   1ac2c:	55                   	push   %rbp
   1ac2d:	48 89 e5             	mov    %rsp,%rbp
   1ac30:	48 83 ec 10          	sub    $0x10,%rsp
   1ac34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac38:	48 8d 15 81 30 01 00 	lea    0x13081(%rip),%rdx        # 2dcc0 <_ZTVSt19bad_optional_access+0x10>
   1ac3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac43:	48 89 10             	mov    %rdx,(%rax)
   1ac46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac4a:	48 89 c7             	mov    %rax,%rdi
   1ac4d:	e8 0e 9c fe ff       	call   4860 <_ZNSt9exceptionD2Ev@plt>
   1ac52:	90                   	nop
   1ac53:	c9                   	leave
   1ac54:	c3                   	ret
   1ac55:	90                   	nop

000000000001ac56 <_ZNSt19bad_optional_accessD0Ev>:
   1ac56:	55                   	push   %rbp
   1ac57:	48 89 e5             	mov    %rsp,%rbp
   1ac5a:	48 83 ec 10          	sub    $0x10,%rsp
   1ac5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac66:	48 89 c7             	mov    %rax,%rdi
   1ac69:	e8 be ff ff ff       	call   1ac2c <_ZNSt19bad_optional_accessD1Ev>
   1ac6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac72:	be 08 00 00 00       	mov    $0x8,%esi
   1ac77:	48 89 c7             	mov    %rax,%rdi
   1ac7a:	e8 b1 97 fe ff       	call   4430 <_ZdlPvm@plt>
   1ac7f:	c9                   	leave
   1ac80:	c3                   	ret

Disassembly of section .fini:

000000000001ac84 <_fini>:
   1ac84:	48 83 ec 08          	sub    $0x8,%rsp
   1ac88:	48 83 c4 08          	add    $0x8,%rsp
   1ac8c:	c3                   	ret
