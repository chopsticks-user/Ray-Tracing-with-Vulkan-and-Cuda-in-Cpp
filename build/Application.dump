
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 3f 02 00 	mov    0x23fad(%rip),%rax        # 27fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 3f 02 00    	push   0x23fca(%rip)        # 27ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 3f 02 00    	jmp    *0x23fcc(%rip)        # 27ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 3f 02 00    	jmp    *0x23fca(%rip)        # 28000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 3f 02 00    	jmp    *0x23fc2(%rip)        # 28008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <vkCmdEndRenderPass@plt>:
    4050:	ff 25 ba 3f 02 00    	jmp    *0x23fba(%rip)        # 28010 <vkCmdEndRenderPass@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4060:	ff 25 b2 3f 02 00    	jmp    *0x23fb2(%rip)        # 28018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSaIcED2Ev@plt>:
    4070:	ff 25 aa 3f 02 00    	jmp    *0x23faa(%rip)        # 28020 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4080:	ff 25 a2 3f 02 00    	jmp    *0x23fa2(%rip)        # 28028 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4090:	ff 25 9a 3f 02 00    	jmp    *0x23f9a(%rip)        # 28030 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <_ZNSolsEm@plt>:
    40a0:	ff 25 92 3f 02 00    	jmp    *0x23f92(%rip)        # 28038 <_ZNSolsEm@GLIBCXX_3.4>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <vkDeviceWaitIdle@plt>:
    40b0:	ff 25 8a 3f 02 00    	jmp    *0x23f8a(%rip)        # 28040 <vkDeviceWaitIdle@Base>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40c0:	ff 25 82 3f 02 00    	jmp    *0x23f82(%rip)        # 28048 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <vkDestroySwapchainKHR@plt>:
    40d0:	ff 25 7a 3f 02 00    	jmp    *0x23f7a(%rip)        # 28050 <vkDestroySwapchainKHR@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <glfwDestroyWindow@plt>:
    40e0:	ff 25 72 3f 02 00    	jmp    *0x23f72(%rip)        # 28058 <glfwDestroyWindow@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <_ZSt17__throw_bad_allocv@plt>:
    40f0:	ff 25 6a 3f 02 00    	jmp    *0x23f6a(%rip)        # 28060 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    4100:	ff 25 62 3f 02 00    	jmp    *0x23f62(%rip)        # 28068 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <_ZNSt13runtime_errorC1EPKc@plt>:
    4110:	ff 25 5a 3f 02 00    	jmp    *0x23f5a(%rip)        # 28070 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <vkGetPhysicalDeviceProperties@plt>:
    4120:	ff 25 52 3f 02 00    	jmp    *0x23f52(%rip)        # 28078 <vkGetPhysicalDeviceProperties@Base>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <__cxa_begin_catch@plt>:
    4130:	ff 25 4a 3f 02 00    	jmp    *0x23f4a(%rip)        # 28080 <__cxa_begin_catch@CXXABI_1.3>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <vkCreateCommandPool@plt>:
    4140:	ff 25 42 3f 02 00    	jmp    *0x23f42(%rip)        # 28088 <vkCreateCommandPool@Base>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <strlen@plt>:
    4150:	ff 25 3a 3f 02 00    	jmp    *0x23f3a(%rip)        # 28090 <strlen@GLIBC_2.2.5>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <memcmp@plt>:
    4160:	ff 25 32 3f 02 00    	jmp    *0x23f32(%rip)        # 28098 <memcmp@GLIBC_2.2.5>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <vkCreateGraphicsPipelines@plt>:
    4170:	ff 25 2a 3f 02 00    	jmp    *0x23f2a(%rip)        # 280a0 <vkCreateGraphicsPipelines@Base>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <__cxa_allocate_exception@plt>:
    4180:	ff 25 22 3f 02 00    	jmp    *0x23f22(%rip)        # 280a8 <__cxa_allocate_exception@CXXABI_1.3>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <_ZSt20__throw_length_errorPKc@plt>:
    4190:	ff 25 1a 3f 02 00    	jmp    *0x23f1a(%rip)        # 280b0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <vkEnumeratePhysicalDevices@plt>:
    41a0:	ff 25 12 3f 02 00    	jmp    *0x23f12(%rip)        # 280b8 <vkEnumeratePhysicalDevices@Base>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <memset@plt>:
    41b0:	ff 25 0a 3f 02 00    	jmp    *0x23f0a(%rip)        # 280c0 <memset@GLIBC_2.2.5>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <_ZNSaIcEC1ERKS_@plt>:
    41c0:	ff 25 02 3f 02 00    	jmp    *0x23f02(%rip)        # 280c8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <vkGetSwapchainImagesKHR@plt>:
    41d0:	ff 25 fa 3e 02 00    	jmp    *0x23efa(%rip)        # 280d0 <vkGetSwapchainImagesKHR@Base>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    41e0:	ff 25 f2 3e 02 00    	jmp    *0x23ef2(%rip)        # 280d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    41f0:	ff 25 ea 3e 02 00    	jmp    *0x23eea(%rip)        # 280e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <vkCreateRenderPass@plt>:
    4200:	ff 25 e2 3e 02 00    	jmp    *0x23ee2(%rip)        # 280e8 <vkCreateRenderPass@Base>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4210:	ff 25 da 3e 02 00    	jmp    *0x23eda(%rip)        # 280f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4220:	ff 25 d2 3e 02 00    	jmp    *0x23ed2(%rip)        # 280f8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4230:	ff 25 ca 3e 02 00    	jmp    *0x23eca(%rip)        # 28100 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <_ZSt19__throw_logic_errorPKc@plt>:
    4240:	ff 25 c2 3e 02 00    	jmp    *0x23ec2(%rip)        # 28108 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <__cxa_free_exception@plt>:
    4250:	ff 25 ba 3e 02 00    	jmp    *0x23eba(%rip)        # 28110 <__cxa_free_exception@CXXABI_1.3>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    4260:	ff 25 b2 3e 02 00    	jmp    *0x23eb2(%rip)        # 28118 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <glfwGetRequiredInstanceExtensions@plt>:
    4270:	ff 25 aa 3e 02 00    	jmp    *0x23eaa(%rip)        # 28120 <glfwGetRequiredInstanceExtensions@Base>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4280:	ff 25 a2 3e 02 00    	jmp    *0x23ea2(%rip)        # 28128 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <vkCreateShaderModule@plt>:
    4290:	ff 25 9a 3e 02 00    	jmp    *0x23e9a(%rip)        # 28130 <vkCreateShaderModule@Base>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    42a0:	ff 25 92 3e 02 00    	jmp    *0x23e92(%rip)        # 28138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <vkDestroyDevice@plt>:
    42b0:	ff 25 8a 3e 02 00    	jmp    *0x23e8a(%rip)        # 28140 <vkDestroyDevice@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <vkCreatePipelineLayout@plt>:
    42c0:	ff 25 82 3e 02 00    	jmp    *0x23e82(%rip)        # 28148 <vkCreatePipelineLayout@Base>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <vkEnumerateInstanceExtensionProperties@plt>:
    42d0:	ff 25 7a 3e 02 00    	jmp    *0x23e7a(%rip)        # 28150 <vkEnumerateInstanceExtensionProperties@Base>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    42e0:	ff 25 72 3e 02 00    	jmp    *0x23e72(%rip)        # 28158 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <glfwWindowHint@plt>:
    42f0:	ff 25 6a 3e 02 00    	jmp    *0x23e6a(%rip)        # 28160 <glfwWindowHint@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    4300:	ff 25 62 3e 02 00    	jmp    *0x23e62(%rip)        # 28168 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <vkCmdBindPipeline@plt>:
    4310:	ff 25 5a 3e 02 00    	jmp    *0x23e5a(%rip)        # 28170 <vkCmdBindPipeline@Base>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <__cxa_atexit@plt>:
    4320:	ff 25 52 3e 02 00    	jmp    *0x23e52(%rip)        # 28178 <__cxa_atexit@GLIBC_2.2.5>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4330:	ff 25 4a 3e 02 00    	jmp    *0x23e4a(%rip)        # 28180 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <vkAllocateCommandBuffers@plt>:
    4340:	ff 25 42 3e 02 00    	jmp    *0x23e42(%rip)        # 28188 <vkAllocateCommandBuffers@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <vkGetPhysicalDeviceProperties2@plt>:
    4350:	ff 25 3a 3e 02 00    	jmp    *0x23e3a(%rip)        # 28190 <vkGetPhysicalDeviceProperties2@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkGetInstanceProcAddr@plt>:
    4360:	ff 25 32 3e 02 00    	jmp    *0x23e32(%rip)        # 28198 <vkGetInstanceProcAddr@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <glfwPollEvents@plt>:
    4370:	ff 25 2a 3e 02 00    	jmp    *0x23e2a(%rip)        # 281a0 <glfwPollEvents@Base>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <vkDestroyRenderPass@plt>:
    4380:	ff 25 22 3e 02 00    	jmp    *0x23e22(%rip)        # 281a8 <vkDestroyRenderPass@Base>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4390:	ff 25 1a 3e 02 00    	jmp    *0x23e1a(%rip)        # 281b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <_Znwm@plt>:
    43a0:	ff 25 12 3e 02 00    	jmp    *0x23e12(%rip)        # 281b8 <_Znwm@GLIBCXX_3.4>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkBeginCommandBuffer@plt>:
    43b0:	ff 25 0a 3e 02 00    	jmp    *0x23e0a(%rip)        # 281c0 <vkBeginCommandBuffer@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <_ZdlPvm@plt>:
    43c0:	ff 25 02 3e 02 00    	jmp    *0x23e02(%rip)        # 281c8 <_ZdlPvm@CXXABI_1.3.9>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <vkDestroyInstance@plt>:
    43d0:	ff 25 fa 3d 02 00    	jmp    *0x23dfa(%rip)        # 281d0 <vkDestroyInstance@Base>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <glfwTerminate@plt>:
    43e0:	ff 25 f2 3d 02 00    	jmp    *0x23df2(%rip)        # 281d8 <glfwTerminate@Base>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkCreateImageView@plt>:
    43f0:	ff 25 ea 3d 02 00    	jmp    *0x23dea(%rip)        # 281e0 <vkCreateImageView@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    4400:	ff 25 e2 3d 02 00    	jmp    *0x23de2(%rip)        # 281e8 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_ZNSolsEPFRSoS_E@plt>:
    4410:	ff 25 da 3d 02 00    	jmp    *0x23dda(%rip)        # 281f0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    4420:	ff 25 d2 3d 02 00    	jmp    *0x23dd2(%rip)        # 281f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    4430:	ff 25 ca 3d 02 00    	jmp    *0x23dca(%rip)        # 28200 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4440:	ff 25 c2 3d 02 00    	jmp    *0x23dc2(%rip)        # 28208 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <_ZNSaIcED1Ev@plt>:
    4450:	ff 25 ba 3d 02 00    	jmp    *0x23dba(%rip)        # 28210 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkDestroyPipeline@plt>:
    4460:	ff 25 b2 3d 02 00    	jmp    *0x23db2(%rip)        # 28218 <vkDestroyPipeline@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4470:	ff 25 aa 3d 02 00    	jmp    *0x23daa(%rip)        # 28220 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4480:	ff 25 a2 3d 02 00    	jmp    *0x23da2(%rip)        # 28228 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkEnumerateInstanceLayerProperties@plt>:
    4490:	ff 25 9a 3d 02 00    	jmp    *0x23d9a(%rip)        # 28230 <vkEnumerateInstanceLayerProperties@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <glfwInit@plt>:
    44a0:	ff 25 92 3d 02 00    	jmp    *0x23d92(%rip)        # 28238 <glfwInit@Base>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    44b0:	ff 25 8a 3d 02 00    	jmp    *0x23d8a(%rip)        # 28240 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <vkCreateSwapchainKHR@plt>:
    44c0:	ff 25 82 3d 02 00    	jmp    *0x23d82(%rip)        # 28248 <vkCreateSwapchainKHR@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    44d0:	ff 25 7a 3d 02 00    	jmp    *0x23d7a(%rip)        # 28250 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <vkDestroyShaderModule@plt>:
    44e0:	ff 25 72 3d 02 00    	jmp    *0x23d72(%rip)        # 28258 <vkDestroyShaderModule@Base>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <vkCreateInstance@plt>:
    44f0:	ff 25 6a 3d 02 00    	jmp    *0x23d6a(%rip)        # 28260 <vkCreateInstance@Base>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4500:	ff 25 62 3d 02 00    	jmp    *0x23d62(%rip)        # 28268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkDestroyPipelineLayout@plt>:
    4510:	ff 25 5a 3d 02 00    	jmp    *0x23d5a(%rip)        # 28270 <vkDestroyPipelineLayout@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <_ZNSi4readEPcl@plt>:
    4520:	ff 25 52 3d 02 00    	jmp    *0x23d52(%rip)        # 28278 <_ZNSi4readEPcl@GLIBCXX_3.4>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    4530:	ff 25 4a 3d 02 00    	jmp    *0x23d4a(%rip)        # 28280 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    4540:	ff 25 42 3d 02 00    	jmp    *0x23d42(%rip)        # 28288 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4550:	ff 25 3a 3d 02 00    	jmp    *0x23d3a(%rip)        # 28290 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    4560:	ff 25 32 3d 02 00    	jmp    *0x23d32(%rip)        # 28298 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <vkGetDeviceQueue@plt>:
    4570:	ff 25 2a 3d 02 00    	jmp    *0x23d2a(%rip)        # 282a0 <vkGetDeviceQueue@Base>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <_ZNSolsEj@plt>:
    4580:	ff 25 22 3d 02 00    	jmp    *0x23d22(%rip)        # 282a8 <_ZNSolsEj@GLIBCXX_3.4>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <vkCreateFramebuffer@plt>:
    4590:	ff 25 1a 3d 02 00    	jmp    *0x23d1a(%rip)        # 282b0 <vkCreateFramebuffer@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    45a0:	ff 25 12 3d 02 00    	jmp    *0x23d12(%rip)        # 282b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    45b0:	ff 25 0a 3d 02 00    	jmp    *0x23d0a(%rip)        # 282c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <vkEnumerateDeviceExtensionProperties@plt>:
    45c0:	ff 25 02 3d 02 00    	jmp    *0x23d02(%rip)        # 282c8 <vkEnumerateDeviceExtensionProperties@Base>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    45d0:	ff 25 fa 3c 02 00    	jmp    *0x23cfa(%rip)        # 282d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <vkCmdBeginRenderPass@plt>:
    45e0:	ff 25 f2 3c 02 00    	jmp    *0x23cf2(%rip)        # 282d8 <vkCmdBeginRenderPass@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkDestroyCommandPool@plt>:
    45f0:	ff 25 ea 3c 02 00    	jmp    *0x23cea(%rip)        # 282e0 <vkDestroyCommandPool@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <_ZNSaIcEC2ERKS_@plt>:
    4600:	ff 25 e2 3c 02 00    	jmp    *0x23ce2(%rip)        # 282e8 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <__cxa_rethrow@plt>:
    4610:	ff 25 da 3c 02 00    	jmp    *0x23cda(%rip)        # 282f0 <__cxa_rethrow@CXXABI_1.3>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <vkCreateDevice@plt>:
    4620:	ff 25 d2 3c 02 00    	jmp    *0x23cd2(%rip)        # 282f8 <vkCreateDevice@Base>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <_ZNSt8ios_base4InitC1Ev@plt>:
    4630:	ff 25 ca 3c 02 00    	jmp    *0x23cca(%rip)        # 28300 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <glfwCreateWindowSurface@plt>:
    4640:	ff 25 c2 3c 02 00    	jmp    *0x23cc2(%rip)        # 28308 <glfwCreateWindowSurface@Base>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <glfwCreateWindow@plt>:
    4650:	ff 25 ba 3c 02 00    	jmp    *0x23cba(%rip)        # 28310 <glfwCreateWindow@Base>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    4660:	ff 25 b2 3c 02 00    	jmp    *0x23cb2(%rip)        # 28318 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4670:	ff 25 aa 3c 02 00    	jmp    *0x23caa(%rip)        # 28320 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4680:	ff 25 a2 3c 02 00    	jmp    *0x23ca2(%rip)        # 28328 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4690:	ff 25 9a 3c 02 00    	jmp    *0x23c9a(%rip)        # 28330 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <memmove@plt>:
    46a0:	ff 25 92 3c 02 00    	jmp    *0x23c92(%rip)        # 28338 <memmove@GLIBC_2.2.5>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <__cxa_end_catch@plt>:
    46b0:	ff 25 8a 3c 02 00    	jmp    *0x23c8a(%rip)        # 28340 <__cxa_end_catch@CXXABI_1.3>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <vkDestroyFramebuffer@plt>:
    46c0:	ff 25 82 3c 02 00    	jmp    *0x23c82(%rip)        # 28348 <vkDestroyFramebuffer@Base>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <__cxa_throw@plt>:
    46d0:	ff 25 7a 3c 02 00    	jmp    *0x23c7a(%rip)        # 28350 <__cxa_throw@CXXABI_1.3>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    46e0:	ff 25 72 3c 02 00    	jmp    *0x23c72(%rip)        # 28358 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    46f0:	ff 25 6a 3c 02 00    	jmp    *0x23c6a(%rip)        # 28360 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <_ZNSolsEi@plt>:
    4700:	ff 25 62 3c 02 00    	jmp    *0x23c62(%rip)        # 28368 <_ZNSolsEi@GLIBCXX_3.4>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <_ZNSi5tellgEv@plt>:
    4710:	ff 25 5a 3c 02 00    	jmp    *0x23c5a(%rip)        # 28370 <_ZNSi5tellgEv@GLIBCXX_3.4>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <vkDestroySurfaceKHR@plt>:
    4720:	ff 25 52 3c 02 00    	jmp    *0x23c52(%rip)        # 28378 <vkDestroySurfaceKHR@Base>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <_Unwind_Resume@plt>:
    4730:	ff 25 4a 3c 02 00    	jmp    *0x23c4a(%rip)        # 28380 <_Unwind_Resume@GCC_3.0>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <_ZNSaIcEC1Ev@plt>:
    4740:	ff 25 42 3c 02 00    	jmp    *0x23c42(%rip)        # 28388 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <vkDestroyImageView@plt>:
    4750:	ff 25 3a 3c 02 00    	jmp    *0x23c3a(%rip)        # 28390 <vkDestroyImageView@Base>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4760:	ff 25 32 3c 02 00    	jmp    *0x23c32(%rip)        # 28398 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <_ZNSt9exceptionD2Ev@plt>:
    4770:	ff 25 2a 3c 02 00    	jmp    *0x23c2a(%rip)        # 283a0 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <glfwWindowShouldClose@plt>:
    4780:	ff 25 22 3c 02 00    	jmp    *0x23c22(%rip)        # 283a8 <glfwWindowShouldClose@Base>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <_ZNSolsEd@plt>:
    4790:	ff 25 1a 3c 02 00    	jmp    *0x23c1a(%rip)        # 283b0 <_ZNSolsEd@GLIBCXX_3.4>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <vkEndCommandBuffer@plt>:
    47a0:	ff 25 12 3c 02 00    	jmp    *0x23c12(%rip)        # 283b8 <vkEndCommandBuffer@Base>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    47b0:	ff 25 0a 3c 02 00    	jmp    *0x23c0a(%rip)        # 283c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <vkCmdDraw@plt>:
    47c0:	ff 25 02 3c 02 00    	jmp    *0x23c02(%rip)        # 283c8 <vkCmdDraw@Base>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    47d0:	ff 25 fa 3b 02 00    	jmp    *0x23bfa(%rip)        # 283d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

00000000000047e0 <__cxa_finalize@plt>:
    47e0:	ff 25 aa 37 02 00    	jmp    *0x237aa(%rip)        # 27f90 <__cxa_finalize@GLIBC_2.2.5>
    47e6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000047f0 <_start>:
    47f0:	31 ed                	xor    %ebp,%ebp
    47f2:	49 89 d1             	mov    %rdx,%r9
    47f5:	5e                   	pop    %rsi
    47f6:	48 89 e2             	mov    %rsp,%rdx
    47f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    47fd:	50                   	push   %rax
    47fe:	54                   	push   %rsp
    47ff:	45 31 c0             	xor    %r8d,%r8d
    4802:	31 c9                	xor    %ecx,%ecx
    4804:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 49b4 <main>
    480b:	ff 15 8f 37 02 00    	call   *0x2378f(%rip)        # 27fa0 <__libc_start_main@GLIBC_2.34>
    4811:	f4                   	hlt
    4812:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4819:	00 00 00 
    481c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004820 <deregister_tm_clones>:
    4820:	48 8d 3d d1 3b 02 00 	lea    0x23bd1(%rip),%rdi        # 283f8 <__TMC_END__>
    4827:	48 8d 05 ca 3b 02 00 	lea    0x23bca(%rip),%rax        # 283f8 <__TMC_END__>
    482e:	48 39 f8             	cmp    %rdi,%rax
    4831:	74 15                	je     4848 <deregister_tm_clones+0x28>
    4833:	48 8b 05 76 37 02 00 	mov    0x23776(%rip),%rax        # 27fb0 <_ITM_deregisterTMCloneTable@Base>
    483a:	48 85 c0             	test   %rax,%rax
    483d:	74 09                	je     4848 <deregister_tm_clones+0x28>
    483f:	ff e0                	jmp    *%rax
    4841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4848:	c3                   	ret
    4849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004850 <register_tm_clones>:
    4850:	48 8d 3d a1 3b 02 00 	lea    0x23ba1(%rip),%rdi        # 283f8 <__TMC_END__>
    4857:	48 8d 35 9a 3b 02 00 	lea    0x23b9a(%rip),%rsi        # 283f8 <__TMC_END__>
    485e:	48 29 fe             	sub    %rdi,%rsi
    4861:	48 89 f0             	mov    %rsi,%rax
    4864:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4868:	48 c1 f8 03          	sar    $0x3,%rax
    486c:	48 01 c6             	add    %rax,%rsi
    486f:	48 d1 fe             	sar    %rsi
    4872:	74 14                	je     4888 <register_tm_clones+0x38>
    4874:	48 8b 05 45 37 02 00 	mov    0x23745(%rip),%rax        # 27fc0 <_ITM_registerTMCloneTable@Base>
    487b:	48 85 c0             	test   %rax,%rax
    487e:	74 08                	je     4888 <register_tm_clones+0x38>
    4880:	ff e0                	jmp    *%rax
    4882:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4888:	c3                   	ret
    4889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004890 <__do_global_dtors_aux>:
    4890:	f3 0f 1e fa          	endbr64
    4894:	80 3d 95 3d 02 00 00 	cmpb   $0x0,0x23d95(%rip)        # 28630 <completed.0>
    489b:	75 2b                	jne    48c8 <__do_global_dtors_aux+0x38>
    489d:	55                   	push   %rbp
    489e:	48 83 3d ea 36 02 00 	cmpq   $0x0,0x236ea(%rip)        # 27f90 <__cxa_finalize@GLIBC_2.2.5>
    48a5:	00 
    48a6:	48 89 e5             	mov    %rsp,%rbp
    48a9:	74 0c                	je     48b7 <__do_global_dtors_aux+0x27>
    48ab:	48 8b 3d 2e 3b 02 00 	mov    0x23b2e(%rip),%rdi        # 283e0 <__dso_handle>
    48b2:	e8 29 ff ff ff       	call   47e0 <__cxa_finalize@plt>
    48b7:	e8 64 ff ff ff       	call   4820 <deregister_tm_clones>
    48bc:	c6 05 6d 3d 02 00 01 	movb   $0x1,0x23d6d(%rip)        # 28630 <completed.0>
    48c3:	5d                   	pop    %rbp
    48c4:	c3                   	ret
    48c5:	0f 1f 00             	nopl   (%rax)
    48c8:	c3                   	ret
    48c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000048d0 <frame_dummy>:
    48d0:	f3 0f 1e fa          	endbr64
    48d4:	e9 77 ff ff ff       	jmp    4850 <register_tm_clones>

00000000000048d9 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    48d9:	55                   	push   %rbp
    48da:	48 89 e5             	mov    %rsp,%rbp
    48dd:	53                   	push   %rbx
    48de:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
  VulkanApp app;
    48e5:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
    48ec:	48 89 c7             	mov    %rax,%rdi
    48ef:	e8 1a a9 00 00       	call   f20e <_ZN9VulkanAppC1Ev>
  app.run();
    48f4:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
    48fb:	48 89 c7             	mov    %rax,%rdi
    48fe:	e8 73 ae 00 00       	call   f776 <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    4903:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4907:	48 89 c7             	mov    %rax,%rdi
    490a:	e8 31 fe ff ff       	call   4740 <_ZNSaIcEC1Ev@plt>
    490f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4913:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4917:	48 8d 0d c6 2c 01 00 	lea    0x12cc6(%rip),%rcx        # 175e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    491e:	48 89 ce             	mov    %rcx,%rsi
    4921:	48 89 c7             	mov    %rax,%rdi
    4924:	e8 77 02 00 00       	call   4ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4929:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    492d:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
    4934:	48 89 d6             	mov    %rdx,%rsi
    4937:	48 89 c7             	mov    %rax,%rdi
    493a:	e8 6d af 00 00       	call   f8ac <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    493f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4943:	48 89 c7             	mov    %rax,%rdi
    4946:	e8 a5 f8 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    494b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    494f:	48 89 c7             	mov    %rax,%rdi
    4952:	e8 f9 fa ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    4957:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    495c:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
    4963:	48 89 c7             	mov    %rax,%rdi
    4966:	e8 65 ab 00 00       	call   f4d0 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    496b:	89 d8                	mov    %ebx,%eax
    496d:	eb 3f                	jmp    49ae <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    496f:	48 89 c3             	mov    %rax,%rbx
    4972:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4976:	48 89 c7             	mov    %rax,%rdi
    4979:	e8 72 f8 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    497e:	eb 03                	jmp    4983 <_Z14protected_mainv+0xaa>
    4980:	48 89 c3             	mov    %rax,%rbx
    4983:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4987:	48 89 c7             	mov    %rax,%rdi
    498a:	e8 c1 fa ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    498f:	eb 03                	jmp    4994 <_Z14protected_mainv+0xbb>
}
    4991:	48 89 c3             	mov    %rax,%rbx
    4994:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
    499b:	48 89 c7             	mov    %rax,%rdi
    499e:	e8 2d ab 00 00       	call   f4d0 <_ZN9VulkanAppD1Ev>
    49a3:	48 89 d8             	mov    %rbx,%rax
    49a6:	48 89 c7             	mov    %rax,%rdi
    49a9:	e8 82 fd ff ff       	call   4730 <_Unwind_Resume@plt>
    49ae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49b2:	c9                   	leave
    49b3:	c3                   	ret

00000000000049b4 <main>:

int main() {
    49b4:	55                   	push   %rbp
    49b5:	48 89 e5             	mov    %rsp,%rbp
    49b8:	53                   	push   %rbx
    49b9:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    49bd:	e8 17 ff ff ff       	call   48d9 <_Z14protected_mainv>
    49c2:	e9 aa 00 00 00       	jmp    4a71 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    49c7:	b8 01 00 00 00       	mov    $0x1,%eax
    49cc:	e9 a0 00 00 00       	jmp    4a71 <main+0xbd>
  } catch (const std::exception &e) {
    49d1:	48 83 fa 01          	cmp    $0x1,%rdx
    49d5:	75 49                	jne    4a20 <main+0x6c>
    49d7:	48 89 c7             	mov    %rax,%rdi
    49da:	e8 51 f7 ff ff       	call   4130 <__cxa_begin_catch@plt>
    49df:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    49e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49e7:	48 8b 00             	mov    (%rax),%rax
    49ea:	48 83 c0 10          	add    $0x10,%rax
    49ee:	48 8b 10             	mov    (%rax),%rdx
    49f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49f5:	48 89 c7             	mov    %rax,%rdi
    49f8:	ff d2                	call   *%rdx
    49fa:	48 89 c6             	mov    %rax,%rsi
    49fd:	48 8d 05 1c 3b 02 00 	lea    0x23b1c(%rip),%rax        # 28520 <_ZSt4cerr@GLIBCXX_3.4>
    4a04:	48 89 c7             	mov    %rax,%rdi
    4a07:	e8 84 f9 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4a0c:	be 0a 00 00 00       	mov    $0xa,%esi
    4a11:	48 89 c7             	mov    %rax,%rdi
    4a14:	e8 97 fa ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4a19:	e8 92 fc ff ff       	call   46b0 <__cxa_end_catch@plt>
    4a1e:	eb a7                	jmp    49c7 <main+0x13>
    4a20:	48 89 c7             	mov    %rax,%rdi
    4a23:	e8 08 f7 ff ff       	call   4130 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4a28:	48 8d 05 be 2b 01 00 	lea    0x12bbe(%rip),%rax        # 175ed <_ZN6__pstl9execution2v1L5unseqE+0xa>
    4a2f:	48 89 c6             	mov    %rax,%rsi
    4a32:	48 8d 05 e7 3a 02 00 	lea    0x23ae7(%rip),%rax        # 28520 <_ZSt4cerr@GLIBCXX_3.4>
    4a39:	48 89 c7             	mov    %rax,%rdi
    4a3c:	e8 4f f9 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4a41:	e8 6a fc ff ff       	call   46b0 <__cxa_end_catch@plt>
    4a46:	e9 7c ff ff ff       	jmp    49c7 <main+0x13>
  } catch (...) {
    4a4b:	48 89 c3             	mov    %rax,%rbx
    4a4e:	e8 5d fc ff ff       	call   46b0 <__cxa_end_catch@plt>
    4a53:	48 89 d8             	mov    %rbx,%rax
    4a56:	48 89 c7             	mov    %rax,%rdi
    4a59:	e8 d2 fc ff ff       	call   4730 <_Unwind_Resume@plt>
  }
    4a5e:	48 89 c3             	mov    %rax,%rbx
    4a61:	e8 4a fc ff ff       	call   46b0 <__cxa_end_catch@plt>
    4a66:	48 89 d8             	mov    %rbx,%rax
    4a69:	48 89 c7             	mov    %rax,%rdi
    4a6c:	e8 bf fc ff ff       	call   4730 <_Unwind_Resume@plt>
    4a71:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a75:	c9                   	leave
    4a76:	c3                   	ret

0000000000004a77 <_Z41__static_initialization_and_destruction_0ii>:
    4a77:	55                   	push   %rbp
    4a78:	48 89 e5             	mov    %rsp,%rbp
    4a7b:	48 83 ec 10          	sub    $0x10,%rsp
    4a7f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4a82:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4a85:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    4a89:	75 3b                	jne    4ac6 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    4a8b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    4a92:	75 32                	jne    4ac6 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4a94:	48 8d 05 96 3b 02 00 	lea    0x23b96(%rip),%rax        # 28631 <_ZStL8__ioinit>
    4a9b:	48 89 c7             	mov    %rax,%rdi
    4a9e:	e8 8d fb ff ff       	call   4630 <_ZNSt8ios_base4InitC1Ev@plt>
    4aa3:	48 8d 05 36 39 02 00 	lea    0x23936(%rip),%rax        # 283e0 <__dso_handle>
    4aaa:	48 89 c2             	mov    %rax,%rdx
    4aad:	48 8d 05 7d 3b 02 00 	lea    0x23b7d(%rip),%rax        # 28631 <_ZStL8__ioinit>
    4ab4:	48 89 c6             	mov    %rax,%rsi
    4ab7:	48 8b 05 0a 35 02 00 	mov    0x2350a(%rip),%rax        # 27fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4abe:	48 89 c7             	mov    %rax,%rdi
    4ac1:	e8 5a f8 ff ff       	call   4320 <__cxa_atexit@plt>
    4ac6:	90                   	nop
    4ac7:	c9                   	leave
    4ac8:	c3                   	ret

0000000000004ac9 <_GLOBAL__sub_I__Z14protected_mainv>:
    4ac9:	55                   	push   %rbp
    4aca:	48 89 e5             	mov    %rsp,%rbp
    4acd:	be ff ff 00 00       	mov    $0xffff,%esi
    4ad2:	bf 01 00 00 00       	mov    $0x1,%edi
    4ad7:	e8 9b ff ff ff       	call   4a77 <_Z41__static_initialization_and_destruction_0ii>
    4adc:	5d                   	pop    %rbp
    4add:	c3                   	ret

0000000000004ade <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4ade:	55                   	push   %rbp
    4adf:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4ae2:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4ae7:	5d                   	pop    %rbp
    4ae8:	c3                   	ret

0000000000004ae9 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4ae9:	55                   	push   %rbp
    4aea:	48 89 e5             	mov    %rsp,%rbp
    4aed:	48 83 ec 10          	sub    $0x10,%rsp
    4af1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4af5:	e8 e4 ff ff ff       	call   4ade <_ZSt23__is_constant_evaluatedv>
    4afa:	84 c0                	test   %al,%al
    4afc:	74 0e                	je     4b0c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b02:	48 89 c7             	mov    %rax,%rdi
    4b05:	e8 12 00 00 00       	call   4b1c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4b0a:	eb 0d                	jmp    4b19 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b10:	48 89 c7             	mov    %rax,%rdi
    4b13:	e8 38 f6 ff ff       	call   4150 <strlen@plt>
    4b18:	90                   	nop
      }
    4b19:	c9                   	leave
    4b1a:	c3                   	ret
    4b1b:	90                   	nop

0000000000004b1c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4b1c:	55                   	push   %rbp
    4b1d:	48 89 e5             	mov    %rsp,%rbp
    4b20:	48 83 ec 20          	sub    $0x20,%rsp
    4b24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4b28:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4b2f:	00 
      while (!eq(__p[__i], char_type()))
    4b30:	eb 05                	jmp    4b37 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4b32:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4b37:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4b3b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b43:	48 01 c2             	add    %rax,%rdx
    4b46:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4b4a:	48 89 c6             	mov    %rax,%rsi
    4b4d:	48 89 d7             	mov    %rdx,%rdi
    4b50:	e8 0d 00 00 00       	call   4b62 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4b55:	83 f0 01             	xor    $0x1,%eax
    4b58:	84 c0                	test   %al,%al
    4b5a:	75 d6                	jne    4b32 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4b60:	c9                   	leave
    4b61:	c3                   	ret

0000000000004b62 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4b62:	55                   	push   %rbp
    4b63:	48 89 e5             	mov    %rsp,%rbp
    4b66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b72:	0f b6 10             	movzbl (%rax),%edx
    4b75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b79:	0f b6 00             	movzbl (%rax),%eax
    4b7c:	38 c2                	cmp    %al,%dl
    4b7e:	0f 94 c0             	sete   %al
    4b81:	5d                   	pop    %rbp
    4b82:	c3                   	ret
    4b83:	90                   	nop

0000000000004b84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4b84:	55                   	push   %rbp
    4b85:	48 89 e5             	mov    %rsp,%rbp
    4b88:	48 83 ec 10          	sub    $0x10,%rsp
    4b8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b94:	48 89 c7             	mov    %rax,%rdi
    4b97:	e8 d4 f4 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    4b9c:	90                   	nop
    4b9d:	c9                   	leave
    4b9e:	c3                   	ret
    4b9f:	90                   	nop

0000000000004ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4ba0:	55                   	push   %rbp
    4ba1:	48 89 e5             	mov    %rsp,%rbp
    4ba4:	53                   	push   %rbx
    4ba5:	48 83 ec 38          	sub    $0x38,%rsp
    4ba9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4bad:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4bb1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4bb5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4bb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bbd:	48 89 c7             	mov    %rax,%rdi
    4bc0:	e8 db f6 ff ff       	call   42a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4bc5:	48 89 c1             	mov    %rax,%rcx
    4bc8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4bcc:	48 89 c2             	mov    %rax,%rdx
    4bcf:	48 89 ce             	mov    %rcx,%rsi
    4bd2:	48 89 df             	mov    %rbx,%rdi
    4bd5:	e8 46 f8 ff ff       	call   4420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4bda:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4bdf:	75 0f                	jne    4bf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4be1:	48 8d 05 20 2a 01 00 	lea    0x12a20(%rip),%rax        # 17608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4be8:	48 89 c7             	mov    %rax,%rdi
    4beb:	e8 50 f6 ff ff       	call   4240 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4bf0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4bf4:	48 89 c7             	mov    %rax,%rdi
    4bf7:	e8 ed fe ff ff       	call   4ae9 <_ZNSt11char_traitsIcE6lengthEPKc>
    4bfc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4c00:	48 01 d0             	add    %rdx,%rax
    4c03:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4c07:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4c0b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4c0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c13:	48 89 ce             	mov    %rcx,%rsi
    4c16:	48 89 c7             	mov    %rax,%rdi
    4c19:	e8 66 00 00 00       	call   4c84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4c1e:	eb 1a                	jmp    4c3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4c20:	48 89 c3             	mov    %rax,%rbx
    4c23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c27:	48 89 c7             	mov    %rax,%rdi
    4c2a:	e8 55 ff ff ff       	call   4b84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4c2f:	48 89 d8             	mov    %rbx,%rax
    4c32:	48 89 c7             	mov    %rax,%rdi
    4c35:	e8 f6 fa ff ff       	call   4730 <_Unwind_Resume@plt>
    4c3a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4c3e:	c9                   	leave
    4c3f:	c3                   	ret

0000000000004c40 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4c40:	55                   	push   %rbp
    4c41:	48 89 e5             	mov    %rsp,%rbp
    4c44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c54:	48 89 10             	mov    %rdx,(%rax)
    4c57:	90                   	nop
    4c58:	5d                   	pop    %rbp
    4c59:	c3                   	ret

0000000000004c5a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4c5a:	55                   	push   %rbp
    4c5b:	48 89 e5             	mov    %rsp,%rbp
    4c5e:	48 83 ec 10          	sub    $0x10,%rsp
    4c62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c6a:	48 8b 00             	mov    (%rax),%rax
    4c6d:	48 85 c0             	test   %rax,%rax
    4c70:	74 0f                	je     4c81 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4c72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c76:	48 8b 00             	mov    (%rax),%rax
    4c79:	48 89 c7             	mov    %rax,%rdi
    4c7c:	e8 7f f8 ff ff       	call   4500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4c81:	90                   	nop
    4c82:	c9                   	leave
    4c83:	c3                   	ret

0000000000004c84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4c84:	55                   	push   %rbp
    4c85:	48 89 e5             	mov    %rsp,%rbp
    4c88:	48 83 ec 40          	sub    $0x40,%rsp
    4c8c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c90:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c94:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4c98:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4c9c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4ca0:	48 89 d6             	mov    %rdx,%rsi
    4ca3:	48 89 c7             	mov    %rax,%rdi
    4ca6:	e8 c0 00 00 00       	call   4d6b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4cab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4caf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4cb3:	48 83 f8 0f          	cmp    $0xf,%rax
    4cb7:	76 3f                	jbe    4cf8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4cb9:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4cbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cc1:	ba 00 00 00 00       	mov    $0x0,%edx
    4cc6:	48 89 ce             	mov    %rcx,%rsi
    4cc9:	48 89 c7             	mov    %rax,%rdi
    4ccc:	e8 8f fa ff ff       	call   4760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4cd1:	48 89 c2             	mov    %rax,%rdx
    4cd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cd8:	48 89 d6             	mov    %rdx,%rsi
    4cdb:	48 89 c7             	mov    %rax,%rdi
    4cde:	e8 fd f5 ff ff       	call   42e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4ce3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4ce7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ceb:	48 89 d6             	mov    %rdx,%rsi
    4cee:	48 89 c7             	mov    %rax,%rdi
    4cf1:	e8 da fa ff ff       	call   47d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4cf6:	eb 15                	jmp    4d0d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4cf8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cfc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d04:	48 89 c7             	mov    %rax,%rdi
    4d07:	e8 94 f5 ff ff       	call   42a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4d0c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4d0d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4d11:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4d15:	48 89 d6             	mov    %rdx,%rsi
    4d18:	48 89 c7             	mov    %rax,%rdi
    4d1b:	e8 20 ff ff ff       	call   4c40 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4d20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d24:	48 89 c7             	mov    %rax,%rdi
    4d27:	e8 44 f7 ff ff       	call   4470 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4d2c:	48 89 c1             	mov    %rax,%rcx
    4d2f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4d33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d37:	48 89 c6             	mov    %rax,%rsi
    4d3a:	48 89 cf             	mov    %rcx,%rdi
    4d3d:	e8 3e f7 ff ff       	call   4480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4d42:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4d49:	00 

	_M_set_length(__dnew);
    4d4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d52:	48 89 d6             	mov    %rdx,%rsi
    4d55:	48 89 c7             	mov    %rax,%rdi
    4d58:	e8 b3 f4 ff ff       	call   4210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4d5d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4d61:	48 89 c7             	mov    %rax,%rdi
    4d64:	e8 f1 fe ff ff       	call   4c5a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4d69:	c9                   	leave
    4d6a:	c3                   	ret

0000000000004d6b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4d6b:	55                   	push   %rbp
    4d6c:	48 89 e5             	mov    %rsp,%rbp
    4d6f:	48 83 ec 10          	sub    $0x10,%rsp
    4d73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4d7b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4d7f:	48 89 c7             	mov    %rax,%rdi
    4d82:	e8 15 00 00 00       	call   4d9c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4d87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d8f:	48 89 d6             	mov    %rdx,%rsi
    4d92:	48 89 c7             	mov    %rax,%rdi
    4d95:	e8 0d 00 00 00       	call   4da7 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4d9a:	c9                   	leave
    4d9b:	c3                   	ret

0000000000004d9c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4d9c:	55                   	push   %rbp
    4d9d:	48 89 e5             	mov    %rsp,%rbp
    4da0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4da4:	90                   	nop
    4da5:	5d                   	pop    %rbp
    4da6:	c3                   	ret

0000000000004da7 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4da7:	55                   	push   %rbp
    4da8:	48 89 e5             	mov    %rsp,%rbp
    4dab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4daf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4db3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4db7:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4dbb:	5d                   	pop    %rbp
    4dbc:	c3                   	ret

0000000000004dbd <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4dbd:	55                   	push   %rbp
    4dbe:	48 89 e5             	mov    %rsp,%rbp
    4dc1:	41 54                	push   %r12
    4dc3:	53                   	push   %rbx
    4dc4:	48 83 ec 30          	sub    $0x30,%rsp
    4dc8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4dcc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4dd0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4dd4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4dd8:	8b 40 1c             	mov    0x1c(%rax),%eax
    4ddb:	89 c3                	mov    %eax,%ebx
    4ddd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4de1:	48 89 c7             	mov    %rax,%rdi
    4de4:	e8 1d 02 00 00       	call   5006 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4de9:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4ded:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4df1:	48 89 de             	mov    %rbx,%rsi
    4df4:	48 89 c7             	mov    %rax,%rdi
    4df7:	e8 42 02 00 00       	call   503e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4dfc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4e00:	48 89 c7             	mov    %rax,%rdi
    4e03:	e8 1a 02 00 00       	call   5022 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4e08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e0c:	48 89 c7             	mov    %rax,%rdi
    4e0f:	e8 e4 02 00 00       	call   50f8 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4e14:	48 89 c2             	mov    %rax,%rdx
    4e17:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4e1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4e1f:	48 89 ce             	mov    %rcx,%rsi
    4e22:	48 89 c7             	mov    %rax,%rdi
    4e25:	e8 16 f5 ff ff       	call   4340 <vkAllocateCommandBuffers@plt>
    4e2a:	85 c0                	test   %eax,%eax
    4e2c:	0f 95 c0             	setne  %al
    4e2f:	84 c0                	test   %al,%al
    4e31:	74 7f                	je     4eb2 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4e33:	bf 10 00 00 00       	mov    $0x10,%edi
    4e38:	e8 43 f3 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    4e3d:	48 89 c3             	mov    %rax,%rbx
    4e40:	48 8d 05 d1 2d 01 00 	lea    0x12dd1(%rip),%rax        # 17c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4e47:	48 89 c6             	mov    %rax,%rsi
    4e4a:	48 89 df             	mov    %rbx,%rdi
    4e4d:	e8 be f2 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    4e52:	48 8b 05 4f 31 02 00 	mov    0x2314f(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4e59:	48 89 c2             	mov    %rax,%rdx
    4e5c:	48 8d 05 dd 2e 02 00 	lea    0x22edd(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4e63:	48 89 c6             	mov    %rax,%rsi
    4e66:	48 89 df             	mov    %rbx,%rdi
    4e69:	e8 62 f8 ff ff       	call   46d0 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4e6e:	48 89 c3             	mov    %rax,%rbx
    4e71:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4e75:	48 89 c7             	mov    %rax,%rdi
    4e78:	e8 a5 01 00 00       	call   5022 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e7d:	48 89 d8             	mov    %rbx,%rax
    4e80:	48 89 c7             	mov    %rax,%rdi
    4e83:	e8 a8 f8 ff ff       	call   4730 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4e88:	49 89 c4             	mov    %rax,%r12
    4e8b:	48 89 df             	mov    %rbx,%rdi
    4e8e:	e8 bd f3 ff ff       	call   4250 <__cxa_free_exception@plt>
    4e93:	4c 89 e3             	mov    %r12,%rbx
    4e96:	eb 03                	jmp    4e9b <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4e98:	48 89 c3             	mov    %rax,%rbx
    4e9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e9f:	48 89 c7             	mov    %rax,%rdi
    4ea2:	e8 0d 02 00 00       	call   50b4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4ea7:	48 89 d8             	mov    %rbx,%rax
    4eaa:	48 89 c7             	mov    %rax,%rdi
    4ead:	e8 7e f8 ff ff       	call   4730 <_Unwind_Resume@plt>
  return commandBuffers;
    4eb2:	90                   	nop
}
    4eb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4eb7:	48 83 c4 30          	add    $0x30,%rsp
    4ebb:	5b                   	pop    %rbx
    4ebc:	41 5c                	pop    %r12
    4ebe:	5d                   	pop    %rbp
    4ebf:	c3                   	ret

0000000000004ec0 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>:

void beginCommandBuffer(VkCommandBuffer commandBuffer,
                        const VkCommandBufferBeginInfo *pBeginInfo) {
    4ec0:	55                   	push   %rbp
    4ec1:	48 89 e5             	mov    %rsp,%rbp
    4ec4:	41 54                	push   %r12
    4ec6:	53                   	push   %rbx
    4ec7:	48 83 ec 10          	sub    $0x10,%rsp
    4ecb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ecf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  if (vkBeginCommandBuffer(commandBuffer, pBeginInfo) != VK_SUCCESS) {
    4ed3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4ed7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4edb:	48 89 d6             	mov    %rdx,%rsi
    4ede:	48 89 c7             	mov    %rax,%rdi
    4ee1:	e8 ca f4 ff ff       	call   43b0 <vkBeginCommandBuffer@plt>
    4ee6:	85 c0                	test   %eax,%eax
    4ee8:	0f 95 c0             	setne  %al
    4eeb:	84 c0                	test   %al,%al
    4eed:	74 51                	je     4f40 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo+0x80>
    throw std::runtime_error("Failed to begin command buffer.");
    4eef:	bf 10 00 00 00       	mov    $0x10,%edi
    4ef4:	e8 87 f2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    4ef9:	48 89 c3             	mov    %rax,%rbx
    4efc:	48 8d 05 3d 2d 01 00 	lea    0x12d3d(%rip),%rax        # 17c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    4f03:	48 89 c6             	mov    %rax,%rsi
    4f06:	48 89 df             	mov    %rbx,%rdi
    4f09:	e8 02 f2 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    4f0e:	48 8b 05 93 30 02 00 	mov    0x23093(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4f15:	48 89 c2             	mov    %rax,%rdx
    4f18:	48 8d 05 21 2e 02 00 	lea    0x22e21(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4f1f:	48 89 c6             	mov    %rax,%rsi
    4f22:	48 89 df             	mov    %rbx,%rdi
    4f25:	e8 a6 f7 ff ff       	call   46d0 <__cxa_throw@plt>
    4f2a:	49 89 c4             	mov    %rax,%r12
    4f2d:	48 89 df             	mov    %rbx,%rdi
    4f30:	e8 1b f3 ff ff       	call   4250 <__cxa_free_exception@plt>
    4f35:	4c 89 e0             	mov    %r12,%rax
    4f38:	48 89 c7             	mov    %rax,%rdi
    4f3b:	e8 f0 f7 ff ff       	call   4730 <_Unwind_Resume@plt>
  }
}
    4f40:	90                   	nop
    4f41:	48 83 c4 10          	add    $0x10,%rsp
    4f45:	5b                   	pop    %rbx
    4f46:	41 5c                	pop    %r12
    4f48:	5d                   	pop    %rbp
    4f49:	c3                   	ret

0000000000004f4a <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>:

void endCommandBuffer(VkCommandBuffer commandBuffer) {
    4f4a:	55                   	push   %rbp
    4f4b:	48 89 e5             	mov    %rsp,%rbp
    4f4e:	41 54                	push   %r12
    4f50:	53                   	push   %rbx
    4f51:	48 83 ec 10          	sub    $0x10,%rsp
    4f55:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS) {
    4f59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f5d:	48 89 c7             	mov    %rax,%rdi
    4f60:	e8 3b f8 ff ff       	call   47a0 <vkEndCommandBuffer@plt>
    4f65:	85 c0                	test   %eax,%eax
    4f67:	0f 95 c0             	setne  %al
    4f6a:	84 c0                	test   %al,%al
    4f6c:	74 51                	je     4fbf <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T+0x75>
    throw std::runtime_error("Failed to end command buffer.");
    4f6e:	bf 10 00 00 00       	mov    $0x10,%edi
    4f73:	e8 08 f2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    4f78:	48 89 c3             	mov    %rax,%rbx
    4f7b:	48 8d 05 de 2c 01 00 	lea    0x12cde(%rip),%rax        # 17c60 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    4f82:	48 89 c6             	mov    %rax,%rsi
    4f85:	48 89 df             	mov    %rbx,%rdi
    4f88:	e8 83 f1 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    4f8d:	48 8b 05 14 30 02 00 	mov    0x23014(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4f94:	48 89 c2             	mov    %rax,%rdx
    4f97:	48 8d 05 a2 2d 02 00 	lea    0x22da2(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4f9e:	48 89 c6             	mov    %rax,%rsi
    4fa1:	48 89 df             	mov    %rbx,%rdi
    4fa4:	e8 27 f7 ff ff       	call   46d0 <__cxa_throw@plt>
    4fa9:	49 89 c4             	mov    %rax,%r12
    4fac:	48 89 df             	mov    %rbx,%rdi
    4faf:	e8 9c f2 ff ff       	call   4250 <__cxa_free_exception@plt>
    4fb4:	4c 89 e0             	mov    %r12,%rax
    4fb7:	48 89 c7             	mov    %rax,%rdi
    4fba:	e8 71 f7 ff ff       	call   4730 <_Unwind_Resume@plt>
  }
}
    4fbf:	90                   	nop
    4fc0:	48 83 c4 10          	add    $0x10,%rsp
    4fc4:	5b                   	pop    %rbx
    4fc5:	41 5c                	pop    %r12
    4fc7:	5d                   	pop    %rbp
    4fc8:	c3                   	ret

0000000000004fc9 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4fc9:	55                   	push   %rbp
    4fca:	48 89 e5             	mov    %rsp,%rbp
    4fcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fd1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4fd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4fd9:	5d                   	pop    %rbp
    4fda:	c3                   	ret

0000000000004fdb <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4fdb:	55                   	push   %rbp
    4fdc:	48 89 e5             	mov    %rsp,%rbp
    4fdf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fe7:	5d                   	pop    %rbp
    4fe8:	c3                   	ret
    4fe9:	90                   	nop

0000000000004fea <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4fea:	55                   	push   %rbp
    4feb:	48 89 e5             	mov    %rsp,%rbp
    4fee:	48 83 ec 10          	sub    $0x10,%rsp
    4ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ffa:	48 89 c7             	mov    %rax,%rdi
    4ffd:	e8 20 00 00 00       	call   5022 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5002:	90                   	nop
    5003:	c9                   	leave
    5004:	c3                   	ret
    5005:	90                   	nop

0000000000005006 <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    5006:	55                   	push   %rbp
    5007:	48 89 e5             	mov    %rsp,%rbp
    500a:	48 83 ec 10          	sub    $0x10,%rsp
    500e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5016:	48 89 c7             	mov    %rax,%rdi
    5019:	e8 4c 01 00 00       	call   516a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    501e:	90                   	nop
    501f:	c9                   	leave
    5020:	c3                   	ret
    5021:	90                   	nop

0000000000005022 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    5022:	55                   	push   %rbp
    5023:	48 89 e5             	mov    %rsp,%rbp
    5026:	48 83 ec 10          	sub    $0x10,%rsp
    502a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    502e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5032:	48 89 c7             	mov    %rax,%rdi
    5035:	e8 3c 01 00 00       	call   5176 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    503a:	90                   	nop
    503b:	c9                   	leave
    503c:	c3                   	ret
    503d:	90                   	nop

000000000000503e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    503e:	55                   	push   %rbp
    503f:	48 89 e5             	mov    %rsp,%rbp
    5042:	53                   	push   %rbx
    5043:	48 83 ec 28          	sub    $0x28,%rsp
    5047:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    504b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    504f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5053:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5057:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    505b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    505f:	48 89 d6             	mov    %rdx,%rsi
    5062:	48 89 c7             	mov    %rax,%rdi
    5065:	e8 17 01 00 00       	call   5181 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    506a:	48 89 c1             	mov    %rax,%rcx
    506d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5071:	48 89 c2             	mov    %rax,%rdx
    5074:	48 89 ce             	mov    %rcx,%rsi
    5077:	48 89 df             	mov    %rbx,%rdi
    507a:	e8 63 01 00 00       	call   51e2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    507f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5083:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5087:	48 89 d6             	mov    %rdx,%rsi
    508a:	48 89 c7             	mov    %rax,%rdi
    508d:	e8 ae 01 00 00       	call   5240 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    5092:	eb 1a                	jmp    50ae <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    5094:	48 89 c3             	mov    %rax,%rbx
    5097:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    509b:	48 89 c7             	mov    %rax,%rdi
    509e:	e8 79 00 00 00       	call   511c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    50a3:	48 89 d8             	mov    %rbx,%rax
    50a6:	48 89 c7             	mov    %rax,%rdi
    50a9:	e8 82 f6 ff ff       	call   4730 <_Unwind_Resume@plt>
    50ae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50b2:	c9                   	leave
    50b3:	c3                   	ret

00000000000050b4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    50b4:	55                   	push   %rbp
    50b5:	48 89 e5             	mov    %rsp,%rbp
    50b8:	48 83 ec 10          	sub    $0x10,%rsp
    50bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    50c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50c4:	48 89 c7             	mov    %rax,%rdi
    50c7:	e8 b4 01 00 00       	call   5280 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    50cc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    50cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50d3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    50d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50db:	48 8b 00             	mov    (%rax),%rax
    50de:	48 89 ce             	mov    %rcx,%rsi
    50e1:	48 89 c7             	mov    %rax,%rdi
    50e4:	e8 a5 01 00 00       	call   528e <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    50e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ed:	48 89 c7             	mov    %rax,%rdi
    50f0:	e8 27 00 00 00       	call   511c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    50f5:	90                   	nop
    50f6:	c9                   	leave
    50f7:	c3                   	ret

00000000000050f8 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    50f8:	55                   	push   %rbp
    50f9:	48 89 e5             	mov    %rsp,%rbp
    50fc:	48 83 ec 10          	sub    $0x10,%rsp
    5100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5108:	48 8b 10             	mov    (%rax),%rdx
    510b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    510f:	48 89 d6             	mov    %rdx,%rsi
    5112:	48 89 c7             	mov    %rax,%rdi
    5115:	e8 9e 01 00 00       	call   52b8 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    511a:	c9                   	leave
    511b:	c3                   	ret

000000000000511c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    511c:	55                   	push   %rbp
    511d:	48 89 e5             	mov    %rsp,%rbp
    5120:	48 83 ec 10          	sub    $0x10,%rsp
    5124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    512c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5134:	48 8b 00             	mov    (%rax),%rax
    5137:	48 29 c2             	sub    %rax,%rdx
    513a:	48 89 d0             	mov    %rdx,%rax
    513d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5141:	48 89 c2             	mov    %rax,%rdx
    5144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5148:	48 8b 08             	mov    (%rax),%rcx
    514b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    514f:	48 89 ce             	mov    %rcx,%rsi
    5152:	48 89 c7             	mov    %rax,%rdi
    5155:	e8 96 01 00 00       	call   52f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    515a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    515e:	48 89 c7             	mov    %rax,%rdi
    5161:	e8 84 fe ff ff       	call   4fea <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5166:	90                   	nop
    5167:	c9                   	leave
    5168:	c3                   	ret
    5169:	90                   	nop

000000000000516a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    516a:	55                   	push   %rbp
    516b:	48 89 e5             	mov    %rsp,%rbp
    516e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5172:	90                   	nop
    5173:	5d                   	pop    %rbp
    5174:	c3                   	ret
    5175:	90                   	nop

0000000000005176 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5176:	55                   	push   %rbp
    5177:	48 89 e5             	mov    %rsp,%rbp
    517a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    517e:	90                   	nop
    517f:	5d                   	pop    %rbp
    5180:	c3                   	ret

0000000000005181 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5181:	55                   	push   %rbp
    5182:	48 89 e5             	mov    %rsp,%rbp
    5185:	53                   	push   %rbx
    5186:	48 83 ec 28          	sub    $0x28,%rsp
    518a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    518e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5192:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5196:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    519a:	48 89 d6             	mov    %rdx,%rsi
    519d:	48 89 c7             	mov    %rax,%rdi
    51a0:	e8 25 01 00 00       	call   52ca <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    51a5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    51a9:	48 89 c7             	mov    %rax,%rdi
    51ac:	e8 74 01 00 00       	call   5325 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    51b1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    51b5:	0f 92 c3             	setb   %bl
    51b8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    51bc:	48 89 c7             	mov    %rax,%rdi
    51bf:	e8 5e fe ff ff       	call   5022 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    51c4:	84 db                	test   %bl,%bl
    51c6:	74 0f                	je     51d7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    51c8:	48 8d 05 b1 2a 01 00 	lea    0x12ab1(%rip),%rax        # 17c80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x70>
    51cf:	48 89 c7             	mov    %rax,%rdi
    51d2:	e8 b9 ef ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    51d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    51db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    51df:	c9                   	leave
    51e0:	c3                   	ret
    51e1:	90                   	nop

00000000000051e2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    51e2:	55                   	push   %rbp
    51e3:	48 89 e5             	mov    %rsp,%rbp
    51e6:	53                   	push   %rbx
    51e7:	48 83 ec 28          	sub    $0x28,%rsp
    51eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    51ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    51f3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    51f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51fb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    51ff:	48 89 d6             	mov    %rdx,%rsi
    5202:	48 89 c7             	mov    %rax,%rdi
    5205:	e8 5e 01 00 00       	call   5368 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    520a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    520e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5212:	48 89 d6             	mov    %rdx,%rsi
    5215:	48 89 c7             	mov    %rax,%rdi
    5218:	e8 7d 01 00 00       	call   539a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    521d:	eb 1a                	jmp    5239 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    521f:	48 89 c3             	mov    %rax,%rbx
    5222:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5226:	48 89 c7             	mov    %rax,%rdi
    5229:	e8 bc fd ff ff       	call   4fea <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    522e:	48 89 d8             	mov    %rbx,%rax
    5231:	48 89 c7             	mov    %rax,%rdi
    5234:	e8 f7 f4 ff ff       	call   4730 <_Unwind_Resume@plt>
    5239:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    523d:	c9                   	leave
    523e:	c3                   	ret
    523f:	90                   	nop

0000000000005240 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5240:	55                   	push   %rbp
    5241:	48 89 e5             	mov    %rsp,%rbp
    5244:	48 83 ec 10          	sub    $0x10,%rsp
    5248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    524c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5254:	48 89 c7             	mov    %rax,%rdi
    5257:	e8 24 00 00 00       	call   5280 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    525c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    525f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5263:	48 8b 00             	mov    (%rax),%rax
    5266:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    526a:	48 89 ce             	mov    %rcx,%rsi
    526d:	48 89 c7             	mov    %rax,%rdi
    5270:	e8 7b 01 00 00       	call   53f0 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5275:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5279:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    527d:	90                   	nop
    527e:	c9                   	leave
    527f:	c3                   	ret

0000000000005280 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5280:	55                   	push   %rbp
    5281:	48 89 e5             	mov    %rsp,%rbp
    5284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    528c:	5d                   	pop    %rbp
    528d:	c3                   	ret

000000000000528e <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    528e:	55                   	push   %rbp
    528f:	48 89 e5             	mov    %rsp,%rbp
    5292:	48 83 ec 20          	sub    $0x20,%rsp
    5296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    529a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    529e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    52a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52aa:	48 89 d6             	mov    %rdx,%rsi
    52ad:	48 89 c7             	mov    %rax,%rdi
    52b0:	e8 64 01 00 00       	call   5419 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    52b5:	90                   	nop
    52b6:	c9                   	leave
    52b7:	c3                   	ret

00000000000052b8 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    52b8:	55                   	push   %rbp
    52b9:	48 89 e5             	mov    %rsp,%rbp
    52bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    52c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52c8:	5d                   	pop    %rbp
    52c9:	c3                   	ret

00000000000052ca <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    52ca:	55                   	push   %rbp
    52cb:	48 89 e5             	mov    %rsp,%rbp
    52ce:	48 83 ec 10          	sub    $0x10,%rsp
    52d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    52da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e2:	48 89 d6             	mov    %rdx,%rsi
    52e5:	48 89 c7             	mov    %rax,%rdi
    52e8:	e8 53 01 00 00       	call   5440 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    52ed:	90                   	nop
    52ee:	c9                   	leave
    52ef:	c3                   	ret

00000000000052f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    52f0:	55                   	push   %rbp
    52f1:	48 89 e5             	mov    %rsp,%rbp
    52f4:	48 83 ec 20          	sub    $0x20,%rsp
    52f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5300:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5304:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5309:	74 17                	je     5322 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    530b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    530f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5313:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5317:	48 89 ce             	mov    %rcx,%rsi
    531a:	48 89 c7             	mov    %rax,%rdi
    531d:	e8 2d 01 00 00       	call   544f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5322:	90                   	nop
    5323:	c9                   	leave
    5324:	c3                   	ret

0000000000005325 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5325:	55                   	push   %rbp
    5326:	48 89 e5             	mov    %rsp,%rbp
    5329:	48 83 ec 20          	sub    $0x20,%rsp
    532d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5331:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    5338:	ff ff 0f 
    533b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    533f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5343:	48 89 c7             	mov    %rax,%rdi
    5346:	e8 32 01 00 00       	call   547d <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    534b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    534f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5353:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5357:	48 89 d6             	mov    %rdx,%rsi
    535a:	48 89 c7             	mov    %rax,%rdi
    535d:	e8 35 01 00 00       	call   5497 <_ZSt3minImERKT_S2_S2_>
    5362:	48 8b 00             	mov    (%rax),%rax
      }
    5365:	c9                   	leave
    5366:	c3                   	ret
    5367:	90                   	nop

0000000000005368 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5368:	55                   	push   %rbp
    5369:	48 89 e5             	mov    %rsp,%rbp
    536c:	48 83 ec 10          	sub    $0x10,%rsp
    5370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5374:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5378:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    537c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5380:	48 89 d6             	mov    %rdx,%rsi
    5383:	48 89 c7             	mov    %rax,%rdi
    5386:	e8 3f ff ff ff       	call   52ca <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    538b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    538f:	48 89 c7             	mov    %rax,%rdi
    5392:	e8 2b 01 00 00       	call   54c2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5397:	90                   	nop
    5398:	c9                   	leave
    5399:	c3                   	ret

000000000000539a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    539a:	55                   	push   %rbp
    539b:	48 89 e5             	mov    %rsp,%rbp
    539e:	48 83 ec 10          	sub    $0x10,%rsp
    53a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    53aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b2:	48 89 d6             	mov    %rdx,%rsi
    53b5:	48 89 c7             	mov    %rax,%rdi
    53b8:	e8 33 01 00 00       	call   54f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    53bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    53c1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    53c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53c8:	48 8b 10             	mov    (%rax),%rdx
    53cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    53d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53d7:	48 8b 00             	mov    (%rax),%rax
    53da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53de:	48 c1 e2 03          	shl    $0x3,%rdx
    53e2:	48 01 c2             	add    %rax,%rdx
    53e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e9:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    53ed:	90                   	nop
    53ee:	c9                   	leave
    53ef:	c3                   	ret

00000000000053f0 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    53f0:	55                   	push   %rbp
    53f1:	48 89 e5             	mov    %rsp,%rbp
    53f4:	48 83 ec 20          	sub    $0x20,%rsp
    53f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5400:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    5404:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    540c:	48 89 d6             	mov    %rdx,%rsi
    540f:	48 89 c7             	mov    %rax,%rdi
    5412:	e8 0c 01 00 00       	call   5523 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    5417:	c9                   	leave
    5418:	c3                   	ret

0000000000005419 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5419:	55                   	push   %rbp
    541a:	48 89 e5             	mov    %rsp,%rbp
    541d:	48 83 ec 10          	sub    $0x10,%rsp
    5421:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5425:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    5429:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    542d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5431:	48 89 d6             	mov    %rdx,%rsi
    5434:	48 89 c7             	mov    %rax,%rdi
    5437:	e8 10 01 00 00       	call   554c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    543c:	90                   	nop
    543d:	c9                   	leave
    543e:	c3                   	ret
    543f:	90                   	nop

0000000000005440 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5440:	55                   	push   %rbp
    5441:	48 89 e5             	mov    %rsp,%rbp
    5444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5448:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    544c:	90                   	nop
    544d:	5d                   	pop    %rbp
    544e:	c3                   	ret

000000000000544f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    544f:	55                   	push   %rbp
    5450:	48 89 e5             	mov    %rsp,%rbp
    5453:	48 83 ec 20          	sub    $0x20,%rsp
    5457:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    545b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    545f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5463:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5467:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    546b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    546f:	48 89 ce             	mov    %rcx,%rsi
    5472:	48 89 c7             	mov    %rax,%rdi
    5475:	e8 e2 00 00 00       	call   555c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    547a:	90                   	nop
    547b:	c9                   	leave
    547c:	c3                   	ret

000000000000547d <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    547d:	55                   	push   %rbp
    547e:	48 89 e5             	mov    %rsp,%rbp
    5481:	48 83 ec 10          	sub    $0x10,%rsp
    5485:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    548d:	48 89 c7             	mov    %rax,%rdi
    5490:	e8 f9 00 00 00       	call   558e <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    5495:	c9                   	leave
    5496:	c3                   	ret

0000000000005497 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    5497:	55                   	push   %rbp
    5498:	48 89 e5             	mov    %rsp,%rbp
    549b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    549f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    54a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    54a7:	48 8b 10             	mov    (%rax),%rdx
    54aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54ae:	48 8b 00             	mov    (%rax),%rax
    54b1:	48 39 c2             	cmp    %rax,%rdx
    54b4:	73 06                	jae    54bc <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    54b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    54ba:	eb 04                	jmp    54c0 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    54bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    54c0:	5d                   	pop    %rbp
    54c1:	c3                   	ret

00000000000054c2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    54c2:	55                   	push   %rbp
    54c3:	48 89 e5             	mov    %rsp,%rbp
    54c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    54ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54ce:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    54d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    54e0:	00 
    54e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54e5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    54ec:	00 
	{ }
    54ed:	90                   	nop
    54ee:	5d                   	pop    %rbp
    54ef:	c3                   	ret

00000000000054f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    54f0:	55                   	push   %rbp
    54f1:	48 89 e5             	mov    %rsp,%rbp
    54f4:	48 83 ec 10          	sub    $0x10,%rsp
    54f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5500:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5505:	74 15                	je     551c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    5507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    550b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    550f:	48 89 d6             	mov    %rdx,%rsi
    5512:	48 89 c7             	mov    %rax,%rdi
    5515:	e8 8e 00 00 00       	call   55a8 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    551a:	eb 05                	jmp    5521 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    551c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5521:	c9                   	leave
    5522:	c3                   	ret

0000000000005523 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5523:	55                   	push   %rbp
    5524:	48 89 e5             	mov    %rsp,%rbp
    5527:	48 83 ec 20          	sub    $0x20,%rsp
    552b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    552f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    5533:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    5537:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    553b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    553f:	48 89 d6             	mov    %rdx,%rsi
    5542:	48 89 c7             	mov    %rax,%rdi
    5545:	e8 88 00 00 00       	call   55d2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    554a:	c9                   	leave
    554b:	c3                   	ret

000000000000554c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    554c:	55                   	push   %rbp
    554d:	48 89 e5             	mov    %rsp,%rbp
    5550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5554:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5558:	90                   	nop
    5559:	5d                   	pop    %rbp
    555a:	c3                   	ret
    555b:	90                   	nop

000000000000555c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    555c:	55                   	push   %rbp
    555d:	48 89 e5             	mov    %rsp,%rbp
    5560:	48 83 ec 20          	sub    $0x20,%rsp
    5564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5568:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    556c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5570:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5574:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    557b:	00 
    557c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5580:	48 89 d6             	mov    %rdx,%rsi
    5583:	48 89 c7             	mov    %rax,%rdi
    5586:	e8 35 ee ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    558b:	c9                   	leave
    558c:	c3                   	ret
    558d:	90                   	nop

000000000000558e <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    558e:	55                   	push   %rbp
    558f:	48 89 e5             	mov    %rsp,%rbp
    5592:	48 83 ec 10          	sub    $0x10,%rsp
    5596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    559a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    559e:	48 89 c7             	mov    %rax,%rdi
    55a1:	e8 8a 00 00 00       	call   5630 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    55a6:	c9                   	leave
    55a7:	c3                   	ret

00000000000055a8 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    55a8:	55                   	push   %rbp
    55a9:	48 89 e5             	mov    %rsp,%rbp
    55ac:	48 83 ec 10          	sub    $0x10,%rsp
    55b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    55b8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    55bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55c0:	ba 00 00 00 00       	mov    $0x0,%edx
    55c5:	48 89 ce             	mov    %rcx,%rsi
    55c8:	48 89 c7             	mov    %rax,%rdi
    55cb:	e8 74 00 00 00       	call   5644 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    55d0:	c9                   	leave
    55d1:	c3                   	ret

00000000000055d2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    55d2:	55                   	push   %rbp
    55d3:	48 89 e5             	mov    %rsp,%rbp
    55d6:	48 83 ec 20          	sub    $0x20,%rsp
    55da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    55e2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    55e7:	74 40                	je     5629 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    55e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55ed:	48 89 c7             	mov    %rax,%rdi
    55f0:	e8 b0 00 00 00       	call   56a5 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    55f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    55f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fd:	48 89 c7             	mov    %rax,%rdi
    5600:	e8 ae 00 00 00       	call   56b3 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    5605:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    560a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    560e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5612:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5616:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    561a:	48 89 ce             	mov    %rcx,%rsi
    561d:	48 89 c7             	mov    %rax,%rdi
    5620:	e8 b5 00 00 00       	call   56da <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    5625:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5629:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    562d:	c9                   	leave
    562e:	c3                   	ret
    562f:	90                   	nop

0000000000005630 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5630:	55                   	push   %rbp
    5631:	48 89 e5             	mov    %rsp,%rbp
    5634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5638:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    563f:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    5642:	5d                   	pop    %rbp
    5643:	c3                   	ret

0000000000005644 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5644:	55                   	push   %rbp
    5645:	48 89 e5             	mov    %rsp,%rbp
    5648:	48 83 ec 20          	sub    $0x20,%rsp
    564c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5650:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5654:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    565c:	48 89 c7             	mov    %rax,%rdi
    565f:	e8 cc ff ff ff       	call   5630 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    5664:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5668:	0f 92 c0             	setb   %al
    566b:	0f b6 c0             	movzbl %al,%eax
    566e:	48 85 c0             	test   %rax,%rax
    5671:	0f 95 c0             	setne  %al
    5674:	84 c0                	test   %al,%al
    5676:	74 1a                	je     5692 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5678:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    567f:	ff ff 1f 
    5682:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5686:	73 05                	jae    568d <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5688:	e8 f3 eb ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    568d:	e8 5e ea ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5692:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5696:	48 c1 e0 03          	shl    $0x3,%rax
    569a:	48 89 c7             	mov    %rax,%rdi
    569d:	e8 fe ec ff ff       	call   43a0 <_Znwm@plt>
    56a2:	90                   	nop
      }
    56a3:	c9                   	leave
    56a4:	c3                   	ret

00000000000056a5 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    56a5:	55                   	push   %rbp
    56a6:	48 89 e5             	mov    %rsp,%rbp
    56a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    56ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56b1:	5d                   	pop    %rbp
    56b2:	c3                   	ret

00000000000056b3 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    56b3:	55                   	push   %rbp
    56b4:	48 89 e5             	mov    %rsp,%rbp
    56b7:	48 83 ec 10          	sub    $0x10,%rsp
    56bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    56bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56c3:	48 89 c6             	mov    %rax,%rsi
    56c6:	bf 08 00 00 00       	mov    $0x8,%edi
    56cb:	e8 f9 f8 ff ff       	call   4fc9 <_ZnwmPv>
    56d0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    56d7:	90                   	nop
    56d8:	c9                   	leave
    56d9:	c3                   	ret

00000000000056da <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    56da:	55                   	push   %rbp
    56db:	48 89 e5             	mov    %rsp,%rbp
    56de:	48 83 ec 20          	sub    $0x20,%rsp
    56e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    56ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    56ee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    56f2:	48 89 c7             	mov    %rax,%rdi
    56f5:	e8 24 00 00 00       	call   571e <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    56fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    56fe:	48 89 c7             	mov    %rax,%rdi
    5701:	e8 d5 f8 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    5706:	48 89 c1             	mov    %rax,%rcx
    5709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    570d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5711:	48 89 ce             	mov    %rcx,%rsi
    5714:	48 89 c7             	mov    %rax,%rdi
    5717:	e8 0d 00 00 00       	call   5729 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    571c:	c9                   	leave
    571d:	c3                   	ret

000000000000571e <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    571e:	55                   	push   %rbp
    571f:	48 89 e5             	mov    %rsp,%rbp
    5722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5726:	90                   	nop
    5727:	5d                   	pop    %rbp
    5728:	c3                   	ret

0000000000005729 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5729:	55                   	push   %rbp
    572a:	48 89 e5             	mov    %rsp,%rbp
    572d:	48 83 ec 20          	sub    $0x20,%rsp
    5731:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5735:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5739:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    573d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5742:	75 06                	jne    574a <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5748:	eb 3a                	jmp    5784 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    574a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    574e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5755:	00 
    5756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    575a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    575e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5766:	48 89 ce             	mov    %rcx,%rsi
    5769:	48 89 c7             	mov    %rax,%rdi
    576c:	e8 15 00 00 00       	call   5786 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    5771:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5775:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    577c:	00 
    577d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5781:	48 01 d0             	add    %rdx,%rax
    }
    5784:	c9                   	leave
    5785:	c3                   	ret

0000000000005786 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5786:	55                   	push   %rbp
    5787:	48 89 e5             	mov    %rsp,%rbp
    578a:	48 83 ec 20          	sub    $0x20,%rsp
    578e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5792:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5796:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    579a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    579e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    57a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57a6:	48 89 ce             	mov    %rcx,%rsi
    57a9:	48 89 c7             	mov    %rax,%rdi
    57ac:	e8 03 00 00 00       	call   57b4 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    57b1:	90                   	nop
    57b2:	c9                   	leave
    57b3:	c3                   	ret

00000000000057b4 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    57b4:	55                   	push   %rbp
    57b5:	48 89 e5             	mov    %rsp,%rbp
    57b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    57bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    57c0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    57c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57c8:	48 8b 00             	mov    (%rax),%rax
    57cb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    57cf:	eb 10                	jmp    57e1 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    57d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    57d9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    57dc:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    57e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57e5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    57e9:	75 e6                	jne    57d1 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    57eb:	90                   	nop
    57ec:	90                   	nop
    57ed:	5d                   	pop    %rbp
    57ee:	c3                   	ret

00000000000057ef <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    57ef:	55                   	push   %rbp
    57f0:	48 89 e5             	mov    %rsp,%rbp
    57f3:	48 83 ec 20          	sub    $0x20,%rsp
    57f7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    57fa:	89 75 f8             	mov    %esi,-0x8(%rbp)
    57fd:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    5801:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    5805:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    5809:	be 00 00 00 00       	mov    $0x0,%esi
    580e:	bf 01 20 02 00       	mov    $0x22001,%edi
    5813:	e8 d8 ea ff ff       	call   42f0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    5818:	be 00 00 00 00       	mov    $0x0,%esi
    581d:	bf 03 00 02 00       	mov    $0x20003,%edi
    5822:	e8 c9 ea ff ff       	call   42f0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    5827:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    582b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    582f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5833:	8b 75 f8             	mov    -0x8(%rbp),%esi
    5836:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5839:	49 89 f8             	mov    %rdi,%r8
    583c:	89 c7                	mov    %eax,%edi
    583e:	e8 0d ee ff ff       	call   4650 <glfwCreateWindow@plt>
}
    5843:	c9                   	leave
    5844:	c3                   	ret

0000000000005845 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    5845:	55                   	push   %rbp
    5846:	48 89 e5             	mov    %rsp,%rbp
    5849:	41 54                	push   %r12
    584b:	53                   	push   %rbx
    584c:	48 83 ec 20          	sub    $0x20,%rsp
    5850:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5854:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    5858:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    585c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5860:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5864:	48 89 ce             	mov    %rcx,%rsi
    5867:	48 89 c7             	mov    %rax,%rdi
    586a:	e8 81 ec ff ff       	call   44f0 <vkCreateInstance@plt>
    586f:	85 c0                	test   %eax,%eax
    5871:	0f 95 c0             	setne  %al
    5874:	84 c0                	test   %al,%al
    5876:	74 3b                	je     58b3 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    5878:	bf 10 00 00 00       	mov    $0x10,%edi
    587d:	e8 fe e8 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    5882:	48 89 c3             	mov    %rax,%rbx
    5885:	48 8d 05 04 2a 01 00 	lea    0x12a04(%rip),%rax        # 18290 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    588c:	48 89 c6             	mov    %rax,%rsi
    588f:	48 89 df             	mov    %rbx,%rdi
    5892:	e8 79 e8 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    5897:	48 8b 05 0a 27 02 00 	mov    0x2270a(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    589e:	48 89 c2             	mov    %rax,%rdx
    58a1:	48 8d 05 98 24 02 00 	lea    0x22498(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    58a8:	48 89 c6             	mov    %rax,%rsi
    58ab:	48 89 df             	mov    %rbx,%rdi
    58ae:	e8 1d ee ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return instance;
    58b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58b7:	eb 16                	jmp    58cf <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    58b9:	49 89 c4             	mov    %rax,%r12
    58bc:	48 89 df             	mov    %rbx,%rdi
    58bf:	e8 8c e9 ff ff       	call   4250 <__cxa_free_exception@plt>
    58c4:	4c 89 e0             	mov    %r12,%rax
    58c7:	48 89 c7             	mov    %rax,%rdi
    58ca:	e8 61 ee ff ff       	call   4730 <_Unwind_Resume@plt>
}
    58cf:	48 83 c4 20          	add    $0x20,%rsp
    58d3:	5b                   	pop    %rbx
    58d4:	41 5c                	pop    %r12
    58d6:	5d                   	pop    %rbp
    58d7:	c3                   	ret

00000000000058d8 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    58d8:	55                   	push   %rbp
    58d9:	48 89 e5             	mov    %rsp,%rbp
    58dc:	41 54                	push   %r12
    58de:	53                   	push   %rbx
    58df:	48 83 ec 30          	sub    $0x30,%rsp
    58e3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    58e7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    58eb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    58ef:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    58f3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    58f7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    58fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58ff:	48 89 c7             	mov    %rax,%rdi
    5902:	e8 19 ed ff ff       	call   4620 <vkCreateDevice@plt>
    5907:	85 c0                	test   %eax,%eax
    5909:	0f 95 c0             	setne  %al
    590c:	84 c0                	test   %al,%al
    590e:	74 3b                	je     594b <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    5910:	bf 10 00 00 00       	mov    $0x10,%edi
    5915:	e8 66 e8 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    591a:	48 89 c3             	mov    %rax,%rbx
    591d:	48 8d 05 8c 29 01 00 	lea    0x1298c(%rip),%rax        # 182b0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    5924:	48 89 c6             	mov    %rax,%rsi
    5927:	48 89 df             	mov    %rbx,%rdi
    592a:	e8 e1 e7 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    592f:	48 8b 05 72 26 02 00 	mov    0x22672(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5936:	48 89 c2             	mov    %rax,%rdx
    5939:	48 8d 05 00 24 02 00 	lea    0x22400(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5940:	48 89 c6             	mov    %rax,%rsi
    5943:	48 89 df             	mov    %rbx,%rdi
    5946:	e8 85 ed ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return device;
    594b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    594f:	eb 16                	jmp    5967 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    5951:	49 89 c4             	mov    %rax,%r12
    5954:	48 89 df             	mov    %rbx,%rdi
    5957:	e8 f4 e8 ff ff       	call   4250 <__cxa_free_exception@plt>
    595c:	4c 89 e0             	mov    %r12,%rax
    595f:	48 89 c7             	mov    %rax,%rdi
    5962:	e8 c9 ed ff ff       	call   4730 <_Unwind_Resume@plt>
}
    5967:	48 83 c4 30          	add    $0x30,%rsp
    596b:	5b                   	pop    %rbx
    596c:	41 5c                	pop    %r12
    596e:	5d                   	pop    %rbp
    596f:	c3                   	ret

0000000000005970 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    5970:	55                   	push   %rbp
    5971:	48 89 e5             	mov    %rsp,%rbp
    5974:	41 54                	push   %r12
    5976:	53                   	push   %rbx
    5977:	48 83 ec 30          	sub    $0x30,%rsp
    597b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    597f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5983:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    5987:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    598b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    598f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5993:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5997:	48 89 c7             	mov    %rax,%rdi
    599a:	e8 a1 ec ff ff       	call   4640 <glfwCreateWindowSurface@plt>
    599f:	85 c0                	test   %eax,%eax
    59a1:	0f 95 c0             	setne  %al
    59a4:	84 c0                	test   %al,%al
    59a6:	74 3b                	je     59e3 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    59a8:	bf 10 00 00 00       	mov    $0x10,%edi
    59ad:	e8 ce e7 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    59b2:	48 89 c3             	mov    %rax,%rbx
    59b5:	48 8d 05 1c 29 01 00 	lea    0x1291c(%rip),%rax        # 182d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    59bc:	48 89 c6             	mov    %rax,%rsi
    59bf:	48 89 df             	mov    %rbx,%rdi
    59c2:	e8 49 e7 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    59c7:	48 8b 05 da 25 02 00 	mov    0x225da(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    59ce:	48 89 c2             	mov    %rax,%rdx
    59d1:	48 8d 05 68 23 02 00 	lea    0x22368(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    59d8:	48 89 c6             	mov    %rax,%rsi
    59db:	48 89 df             	mov    %rbx,%rdi
    59de:	e8 ed ec ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return surface;
    59e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59e7:	eb 16                	jmp    59ff <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    59e9:	49 89 c4             	mov    %rax,%r12
    59ec:	48 89 df             	mov    %rbx,%rdi
    59ef:	e8 5c e8 ff ff       	call   4250 <__cxa_free_exception@plt>
    59f4:	4c 89 e0             	mov    %r12,%rax
    59f7:	48 89 c7             	mov    %rax,%rdi
    59fa:	e8 31 ed ff ff       	call   4730 <_Unwind_Resume@plt>
}
    59ff:	48 83 c4 30          	add    $0x30,%rsp
    5a03:	5b                   	pop    %rbx
    5a04:	41 5c                	pop    %r12
    5a06:	5d                   	pop    %rbp
    5a07:	c3                   	ret

0000000000005a08 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    5a08:	55                   	push   %rbp
    5a09:	48 89 e5             	mov    %rsp,%rbp
    5a0c:	41 54                	push   %r12
    5a0e:	53                   	push   %rbx
    5a0f:	48 83 ec 30          	sub    $0x30,%rsp
    5a13:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5a17:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5a1b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    5a1f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5a26:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    5a27:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5a2b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5a2f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a37:	48 89 c7             	mov    %rax,%rdi
    5a3a:	e8 81 ea ff ff       	call   44c0 <vkCreateSwapchainKHR@plt>
    5a3f:	85 c0                	test   %eax,%eax
    5a41:	0f 95 c0             	setne  %al
    5a44:	84 c0                	test   %al,%al
    5a46:	74 3b                	je     5a83 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    5a48:	bf 10 00 00 00       	mov    $0x10,%edi
    5a4d:	e8 2e e7 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    5a52:	48 89 c3             	mov    %rax,%rbx
    5a55:	48 8d 05 9d 28 01 00 	lea    0x1289d(%rip),%rax        # 182f9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    5a5c:	48 89 c6             	mov    %rax,%rsi
    5a5f:	48 89 df             	mov    %rbx,%rdi
    5a62:	e8 a9 e6 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    5a67:	48 8b 05 3a 25 02 00 	mov    0x2253a(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a6e:	48 89 c2             	mov    %rax,%rdx
    5a71:	48 8d 05 c8 22 02 00 	lea    0x222c8(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a78:	48 89 c6             	mov    %rax,%rsi
    5a7b:	48 89 df             	mov    %rbx,%rdi
    5a7e:	e8 4d ec ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return swapchain;
    5a83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a87:	eb 16                	jmp    5a9f <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    5a89:	49 89 c4             	mov    %rax,%r12
    5a8c:	48 89 df             	mov    %rbx,%rdi
    5a8f:	e8 bc e7 ff ff       	call   4250 <__cxa_free_exception@plt>
    5a94:	4c 89 e0             	mov    %r12,%rax
    5a97:	48 89 c7             	mov    %rax,%rdi
    5a9a:	e8 91 ec ff ff       	call   4730 <_Unwind_Resume@plt>
}
    5a9f:	48 83 c4 30          	add    $0x30,%rsp
    5aa3:	5b                   	pop    %rbx
    5aa4:	41 5c                	pop    %r12
    5aa6:	5d                   	pop    %rbp
    5aa7:	c3                   	ret

0000000000005aa8 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    5aa8:	55                   	push   %rbp
    5aa9:	48 89 e5             	mov    %rsp,%rbp
    5aac:	41 54                	push   %r12
    5aae:	53                   	push   %rbx
    5aaf:	48 83 ec 30          	sub    $0x30,%rsp
    5ab3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ab7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5abb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    5abf:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5ac3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5ac7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5acb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5acf:	48 89 c7             	mov    %rax,%rdi
    5ad2:	e8 19 e9 ff ff       	call   43f0 <vkCreateImageView@plt>
    5ad7:	85 c0                	test   %eax,%eax
    5ad9:	0f 95 c0             	setne  %al
    5adc:	84 c0                	test   %al,%al
    5ade:	74 3b                	je     5b1b <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5ae0:	bf 10 00 00 00       	mov    $0x10,%edi
    5ae5:	e8 96 e6 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    5aea:	48 89 c3             	mov    %rax,%rbx
    5aed:	48 8d 05 24 28 01 00 	lea    0x12824(%rip),%rax        # 18318 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    5af4:	48 89 c6             	mov    %rax,%rsi
    5af7:	48 89 df             	mov    %rbx,%rdi
    5afa:	e8 11 e6 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    5aff:	48 8b 05 a2 24 02 00 	mov    0x224a2(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b06:	48 89 c2             	mov    %rax,%rdx
    5b09:	48 8d 05 30 22 02 00 	lea    0x22230(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b10:	48 89 c6             	mov    %rax,%rsi
    5b13:	48 89 df             	mov    %rbx,%rdi
    5b16:	e8 b5 eb ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return imageView;
    5b1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b1f:	eb 16                	jmp    5b37 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    5b21:	49 89 c4             	mov    %rax,%r12
    5b24:	48 89 df             	mov    %rbx,%rdi
    5b27:	e8 24 e7 ff ff       	call   4250 <__cxa_free_exception@plt>
    5b2c:	4c 89 e0             	mov    %r12,%rax
    5b2f:	48 89 c7             	mov    %rax,%rdi
    5b32:	e8 f9 eb ff ff       	call   4730 <_Unwind_Resume@plt>
}
    5b37:	48 83 c4 30          	add    $0x30,%rsp
    5b3b:	5b                   	pop    %rbx
    5b3c:	41 5c                	pop    %r12
    5b3e:	5d                   	pop    %rbp
    5b3f:	c3                   	ret

0000000000005b40 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    5b40:	55                   	push   %rbp
    5b41:	48 89 e5             	mov    %rsp,%rbp
    5b44:	41 54                	push   %r12
    5b46:	53                   	push   %rbx
    5b47:	48 83 ec 60          	sub    $0x60,%rsp
    5b4b:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    5b4f:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    5b53:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    5b57:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5b5b:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    5b5f:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    5b63:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    5b68:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    5b6f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5b73:	48 89 c7             	mov    %rax,%rdi
    5b76:	e8 4f 05 00 00       	call   60ca <_ZNKSt6vectorIcSaIcEE4sizeEv>
    5b7b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    5b7f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5b83:	48 89 c7             	mov    %rax,%rdi
    5b86:	e8 5f 05 00 00       	call   60ea <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    5b8b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    5b8f:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5b96:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5b97:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    5b9b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    5b9f:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5ba3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5ba7:	48 89 c7             	mov    %rax,%rdi
    5baa:	e8 e1 e6 ff ff       	call   4290 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    5baf:	85 c0                	test   %eax,%eax
    5bb1:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5bb4:	84 c0                	test   %al,%al
    5bb6:	74 3b                	je     5bf3 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    5bb8:	bf 10 00 00 00       	mov    $0x10,%edi
    5bbd:	e8 be e5 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    5bc2:	48 89 c3             	mov    %rax,%rbx
    5bc5:	48 8d 05 6c 27 01 00 	lea    0x1276c(%rip),%rax        # 18338 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    5bcc:	48 89 c6             	mov    %rax,%rsi
    5bcf:	48 89 df             	mov    %rbx,%rdi
    5bd2:	e8 39 e5 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    5bd7:	48 8b 05 ca 23 02 00 	mov    0x223ca(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5bde:	48 89 c2             	mov    %rax,%rdx
    5be1:	48 8d 05 58 21 02 00 	lea    0x22158(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5be8:	48 89 c6             	mov    %rax,%rsi
    5beb:	48 89 df             	mov    %rbx,%rdi
    5bee:	e8 dd ea ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return shaderModule;
    5bf3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5bf7:	eb 16                	jmp    5c0f <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5bf9:	49 89 c4             	mov    %rax,%r12
    5bfc:	48 89 df             	mov    %rbx,%rdi
    5bff:	e8 4c e6 ff ff       	call   4250 <__cxa_free_exception@plt>
    5c04:	4c 89 e0             	mov    %r12,%rax
    5c07:	48 89 c7             	mov    %rax,%rdi
    5c0a:	e8 21 eb ff ff       	call   4730 <_Unwind_Resume@plt>
}
    5c0f:	48 83 c4 60          	add    $0x60,%rsp
    5c13:	5b                   	pop    %rbx
    5c14:	41 5c                	pop    %r12
    5c16:	5d                   	pop    %rbp
    5c17:	c3                   	ret

0000000000005c18 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5c18:	55                   	push   %rbp
    5c19:	48 89 e5             	mov    %rsp,%rbp
    5c1c:	41 54                	push   %r12
    5c1e:	53                   	push   %rbx
    5c1f:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5c26:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5c2d:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5c34:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5c3b:	be 04 00 00 00       	mov    $0x4,%esi
    5c40:	bf 02 00 00 00       	mov    $0x2,%edi
    5c45:	e8 6e 04 00 00       	call   60b8 <_ZStorSt13_Ios_OpenmodeS_>
    5c4a:	89 c2                	mov    %eax,%edx
    5c4c:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5c53:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c5a:	48 89 ce             	mov    %rcx,%rsi
    5c5d:	48 89 c7             	mov    %rax,%rdi
    5c60:	e8 1b ea ff ff       	call   4680 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5c65:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c6c:	48 89 c7             	mov    %rax,%rdi
    5c6f:	e8 fc e9 ff ff       	call   4670 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5c74:	83 f0 01             	xor    $0x1,%eax
    5c77:	84 c0                	test   %al,%al
    5c79:	74 61                	je     5cdc <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5c7b:	bf 10 00 00 00       	mov    $0x10,%edi
    5c80:	e8 fb e4 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    5c85:	48 89 c3             	mov    %rax,%rbx
    5c88:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c8c:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5c93:	48 8d 0d be 26 01 00 	lea    0x126be(%rip),%rcx        # 18358 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5c9a:	48 89 ce             	mov    %rcx,%rsi
    5c9d:	48 89 c7             	mov    %rax,%rdi
    5ca0:	e8 69 04 00 00       	call   610e <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5ca5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5ca9:	48 89 c6             	mov    %rax,%rsi
    5cac:	48 89 df             	mov    %rbx,%rdi
    5caf:	e8 dc e9 ff ff       	call   4690 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5cb4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5cb8:	48 89 c7             	mov    %rax,%rdi
    5cbb:	e8 30 e5 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5cc0:	48 8b 05 e1 22 02 00 	mov    0x222e1(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5cc7:	48 89 c2             	mov    %rax,%rdx
    5cca:	48 8d 05 6f 20 02 00 	lea    0x2206f(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5cd1:	48 89 c6             	mov    %rax,%rsi
    5cd4:	48 89 df             	mov    %rbx,%rdi
    5cd7:	e8 f4 e9 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5cdc:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ce3:	48 89 c7             	mov    %rax,%rdi
    5ce6:	e8 25 ea ff ff       	call   4710 <_ZNSi5tellgEv@plt>
    5ceb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5cef:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5cf3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5cf7:	48 89 c7             	mov    %rax,%rdi
    5cfa:	e8 11 05 00 00       	call   6210 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5cff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5d03:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5d07:	48 89 c7             	mov    %rax,%rdi
    5d0a:	e8 31 ea ff ff       	call   4740 <_ZNSaIcEC1Ev@plt>
    5d0f:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5d13:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5d17:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5d1e:	48 89 ce             	mov    %rcx,%rsi
    5d21:	48 89 c7             	mov    %rax,%rdi
    5d24:	e8 f9 04 00 00       	call   6222 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5d29:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5d2d:	48 89 c7             	mov    %rax,%rdi
    5d30:	e8 1b e7 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5d35:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5d39:	be 00 00 00 00       	mov    $0x0,%esi
    5d3e:	48 89 c7             	mov    %rax,%rdi
    5d41:	e8 96 05 00 00       	call   62dc <_ZNSt4fposI11__mbstate_tEC1El>
    5d46:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5d4a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5d4e:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5d55:	48 89 ce             	mov    %rcx,%rsi
    5d58:	48 89 c7             	mov    %rax,%rdi
    5d5b:	e8 d0 e7 ff ff       	call   4530 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5d60:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5d64:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5d6b:	48 89 c7             	mov    %rax,%rdi
    5d6e:	e8 99 05 00 00       	call   630c <_ZNSt6vectorIcSaIcEE4dataEv>
    5d73:	48 89 c1             	mov    %rax,%rcx
    5d76:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5d7d:	48 89 da             	mov    %rbx,%rdx
    5d80:	48 89 ce             	mov    %rcx,%rsi
    5d83:	48 89 c7             	mov    %rax,%rdi
    5d86:	e8 95 e7 ff ff       	call   4520 <_ZNSi4readEPcl@plt>
  file.close();
    5d8b:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5d92:	48 89 c7             	mov    %rax,%rdi
    5d95:	e8 e6 e2 ff ff       	call   4080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5d9a:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5da1:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5da8:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5daf:	48 89 ce             	mov    %rcx,%rsi
    5db2:	48 89 c7             	mov    %rax,%rdi
    5db5:	e8 86 fd ff ff       	call   5b40 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5dba:	48 89 c3             	mov    %rax,%rbx
    5dbd:	90                   	nop
}
    5dbe:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5dc5:	48 89 c7             	mov    %rax,%rdi
    5dc8:	e8 cb 04 00 00       	call   6298 <_ZNSt6vectorIcSaIcEED1Ev>
    5dcd:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5dd4:	48 89 c7             	mov    %rax,%rdi
    5dd7:	e8 e4 e2 ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5ddc:	48 89 d8             	mov    %rbx,%rax
    5ddf:	eb 63                	jmp    5e44 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5de1:	49 89 c4             	mov    %rax,%r12
    5de4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5de8:	48 89 c7             	mov    %rax,%rdi
    5deb:	e8 00 e4 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5df0:	eb 03                	jmp    5df5 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5df2:	49 89 c4             	mov    %rax,%r12
    5df5:	48 89 df             	mov    %rbx,%rdi
    5df8:	e8 53 e4 ff ff       	call   4250 <__cxa_free_exception@plt>
    5dfd:	4c 89 e3             	mov    %r12,%rbx
    5e00:	eb 28                	jmp    5e2a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5e02:	48 89 c3             	mov    %rax,%rbx
    5e05:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5e09:	48 89 c7             	mov    %rax,%rdi
    5e0c:	e8 3f e6 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    5e11:	eb 17                	jmp    5e2a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5e13:	48 89 c3             	mov    %rax,%rbx
    5e16:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5e1d:	48 89 c7             	mov    %rax,%rdi
    5e20:	e8 73 04 00 00       	call   6298 <_ZNSt6vectorIcSaIcEED1Ev>
    5e25:	eb 03                	jmp    5e2a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5e27:	48 89 c3             	mov    %rax,%rbx
    5e2a:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5e31:	48 89 c7             	mov    %rax,%rdi
    5e34:	e8 87 e2 ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5e39:	48 89 d8             	mov    %rbx,%rax
    5e3c:	48 89 c7             	mov    %rax,%rdi
    5e3f:	e8 ec e8 ff ff       	call   4730 <_Unwind_Resume@plt>
    5e44:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5e4b:	5b                   	pop    %rbx
    5e4c:	41 5c                	pop    %r12
    5e4e:	5d                   	pop    %rbp
    5e4f:	c3                   	ret

0000000000005e50 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    5e50:	55                   	push   %rbp
    5e51:	48 89 e5             	mov    %rsp,%rbp
    5e54:	41 54                	push   %r12
    5e56:	53                   	push   %rbx
    5e57:	48 83 ec 30          	sub    $0x30,%rsp
    5e5b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5e5f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5e63:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5e67:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5e6b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e6f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5e73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e77:	48 89 c7             	mov    %rax,%rdi
    5e7a:	e8 41 e4 ff ff       	call   42c0 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    5e7f:	85 c0                	test   %eax,%eax
    5e81:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5e84:	84 c0                	test   %al,%al
    5e86:	74 3b                	je     5ec3 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    5e88:	bf 10 00 00 00       	mov    $0x10,%edi
    5e8d:	e8 ee e2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    5e92:	48 89 c3             	mov    %rax,%rbx
    5e95:	48 8d 05 cc 24 01 00 	lea    0x124cc(%rip),%rax        # 18368 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5e9c:	48 89 c6             	mov    %rax,%rsi
    5e9f:	48 89 df             	mov    %rbx,%rdi
    5ea2:	e8 69 e2 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    5ea7:	48 8b 05 fa 20 02 00 	mov    0x220fa(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5eae:	48 89 c2             	mov    %rax,%rdx
    5eb1:	48 8d 05 88 1e 02 00 	lea    0x21e88(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5eb8:	48 89 c6             	mov    %rax,%rsi
    5ebb:	48 89 df             	mov    %rbx,%rdi
    5ebe:	e8 0d e8 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return pipelineLayout;
    5ec3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ec7:	eb 16                	jmp    5edf <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5ec9:	49 89 c4             	mov    %rax,%r12
    5ecc:	48 89 df             	mov    %rbx,%rdi
    5ecf:	e8 7c e3 ff ff       	call   4250 <__cxa_free_exception@plt>
    5ed4:	4c 89 e0             	mov    %r12,%rax
    5ed7:	48 89 c7             	mov    %rax,%rdi
    5eda:	e8 51 e8 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    5edf:	48 83 c4 30          	add    $0x30,%rsp
    5ee3:	5b                   	pop    %rbx
    5ee4:	41 5c                	pop    %r12
    5ee6:	5d                   	pop    %rbp
    5ee7:	c3                   	ret

0000000000005ee8 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    5ee8:	55                   	push   %rbp
    5ee9:	48 89 e5             	mov    %rsp,%rbp
    5eec:	41 54                	push   %r12
    5eee:	53                   	push   %rbx
    5eef:	48 83 ec 30          	sub    $0x30,%rsp
    5ef3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ef7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5efb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    5eff:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5f03:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f07:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5f0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f0f:	48 89 c7             	mov    %rax,%rdi
    5f12:	e8 e9 e2 ff ff       	call   4200 <vkCreateRenderPass@plt>
    5f17:	85 c0                	test   %eax,%eax
    5f19:	0f 95 c0             	setne  %al
    5f1c:	84 c0                	test   %al,%al
    5f1e:	74 3b                	je     5f5b <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    5f20:	bf 10 00 00 00       	mov    $0x10,%edi
    5f25:	e8 56 e2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    5f2a:	48 89 c3             	mov    %rax,%rbx
    5f2d:	48 8d 05 34 24 01 00 	lea    0x12434(%rip),%rax        # 18368 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5f34:	48 89 c6             	mov    %rax,%rsi
    5f37:	48 89 df             	mov    %rbx,%rdi
    5f3a:	e8 d1 e1 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    5f3f:	48 8b 05 62 20 02 00 	mov    0x22062(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5f46:	48 89 c2             	mov    %rax,%rdx
    5f49:	48 8d 05 f0 1d 02 00 	lea    0x21df0(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5f50:	48 89 c6             	mov    %rax,%rsi
    5f53:	48 89 df             	mov    %rbx,%rdi
    5f56:	e8 75 e7 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return renderPass;
    5f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f5f:	eb 16                	jmp    5f77 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5f61:	49 89 c4             	mov    %rax,%r12
    5f64:	48 89 df             	mov    %rbx,%rdi
    5f67:	e8 e4 e2 ff ff       	call   4250 <__cxa_free_exception@plt>
    5f6c:	4c 89 e0             	mov    %r12,%rax
    5f6f:	48 89 c7             	mov    %rax,%rdi
    5f72:	e8 b9 e7 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    5f77:	48 83 c4 30          	add    $0x30,%rsp
    5f7b:	5b                   	pop    %rbx
    5f7c:	41 5c                	pop    %r12
    5f7e:	5d                   	pop    %rbp
    5f7f:	c3                   	ret

0000000000005f80 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5f80:	55                   	push   %rbp
    5f81:	48 89 e5             	mov    %rsp,%rbp
    5f84:	41 54                	push   %r12
    5f86:	53                   	push   %rbx
    5f87:	48 83 ec 30          	sub    $0x30,%rsp
    5f8b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5f8f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5f93:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    5f97:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5f9b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f9f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5fa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fa7:	48 89 c7             	mov    %rax,%rdi
    5faa:	e8 e1 e5 ff ff       	call   4590 <vkCreateFramebuffer@plt>
    5faf:	85 c0                	test   %eax,%eax
    5fb1:	0f 95 c0             	setne  %al
    5fb4:	84 c0                	test   %al,%al
    5fb6:	74 3b                	je     5ff3 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    5fb8:	bf 10 00 00 00       	mov    $0x10,%edi
    5fbd:	e8 be e1 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    5fc2:	48 89 c3             	mov    %rax,%rbx
    5fc5:	48 8d 05 be 23 01 00 	lea    0x123be(%rip),%rax        # 1838a <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x102>
    5fcc:	48 89 c6             	mov    %rax,%rsi
    5fcf:	48 89 df             	mov    %rbx,%rdi
    5fd2:	e8 39 e1 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    5fd7:	48 8b 05 ca 1f 02 00 	mov    0x21fca(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5fde:	48 89 c2             	mov    %rax,%rdx
    5fe1:	48 8d 05 58 1d 02 00 	lea    0x21d58(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5fe8:	48 89 c6             	mov    %rax,%rsi
    5feb:	48 89 df             	mov    %rbx,%rdi
    5fee:	e8 dd e6 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return framebuffer;
    5ff3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ff7:	eb 16                	jmp    600f <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    5ff9:	49 89 c4             	mov    %rax,%r12
    5ffc:	48 89 df             	mov    %rbx,%rdi
    5fff:	e8 4c e2 ff ff       	call   4250 <__cxa_free_exception@plt>
    6004:	4c 89 e0             	mov    %r12,%rax
    6007:	48 89 c7             	mov    %rax,%rdi
    600a:	e8 21 e7 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    600f:	48 83 c4 30          	add    $0x30,%rsp
    6013:	5b                   	pop    %rbx
    6014:	41 5c                	pop    %r12
    6016:	5d                   	pop    %rbp
    6017:	c3                   	ret

0000000000006018 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    6018:	55                   	push   %rbp
    6019:	48 89 e5             	mov    %rsp,%rbp
    601c:	41 54                	push   %r12
    601e:	53                   	push   %rbx
    601f:	48 83 ec 30          	sub    $0x30,%rsp
    6023:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6027:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    602b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    602f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    6036:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    6037:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    603b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    603f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6043:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6047:	48 89 c7             	mov    %rax,%rdi
    604a:	e8 f1 e0 ff ff       	call   4140 <vkCreateCommandPool@plt>
    604f:	85 c0                	test   %eax,%eax
    6051:	0f 95 c0             	setne  %al
    6054:	84 c0                	test   %al,%al
    6056:	74 3b                	je     6093 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    6058:	bf 10 00 00 00       	mov    $0x10,%edi
    605d:	e8 1e e1 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    6062:	48 89 c3             	mov    %rax,%rbx
    6065:	48 8d 05 3c 23 01 00 	lea    0x1233c(%rip),%rax        # 183a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x120>
    606c:	48 89 c6             	mov    %rax,%rsi
    606f:	48 89 df             	mov    %rbx,%rdi
    6072:	e8 99 e0 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    6077:	48 8b 05 2a 1f 02 00 	mov    0x21f2a(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    607e:	48 89 c2             	mov    %rax,%rdx
    6081:	48 8d 05 b8 1c 02 00 	lea    0x21cb8(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6088:	48 89 c6             	mov    %rax,%rsi
    608b:	48 89 df             	mov    %rbx,%rdi
    608e:	e8 3d e6 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return commandPool;
    6093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6097:	eb 16                	jmp    60af <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    6099:	49 89 c4             	mov    %rax,%r12
    609c:	48 89 df             	mov    %rbx,%rdi
    609f:	e8 ac e1 ff ff       	call   4250 <__cxa_free_exception@plt>
    60a4:	4c 89 e0             	mov    %r12,%rax
    60a7:	48 89 c7             	mov    %rax,%rdi
    60aa:	e8 81 e6 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    60af:	48 83 c4 30          	add    $0x30,%rsp
    60b3:	5b                   	pop    %rbx
    60b4:	41 5c                	pop    %r12
    60b6:	5d                   	pop    %rbp
    60b7:	c3                   	ret

00000000000060b8 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    60b8:	55                   	push   %rbp
    60b9:	48 89 e5             	mov    %rsp,%rbp
    60bc:	89 7d fc             	mov    %edi,-0x4(%rbp)
    60bf:	89 75 f8             	mov    %esi,-0x8(%rbp)
    60c2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    60c5:	0b 45 f8             	or     -0x8(%rbp),%eax
    60c8:	5d                   	pop    %rbp
    60c9:	c3                   	ret

00000000000060ca <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    60ca:	55                   	push   %rbp
    60cb:	48 89 e5             	mov    %rsp,%rbp
    60ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    60d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    60da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60de:	48 8b 00             	mov    (%rax),%rax
    60e1:	48 29 c2             	sub    %rax,%rdx
    60e4:	48 89 d0             	mov    %rdx,%rax
    60e7:	5d                   	pop    %rbp
    60e8:	c3                   	ret
    60e9:	90                   	nop

00000000000060ea <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    60ea:	55                   	push   %rbp
    60eb:	48 89 e5             	mov    %rsp,%rbp
    60ee:	48 83 ec 10          	sub    $0x10,%rsp
    60f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    60f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60fa:	48 8b 10             	mov    (%rax),%rdx
    60fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6101:	48 89 d6             	mov    %rdx,%rsi
    6104:	48 89 c7             	mov    %rax,%rdi
    6107:	e8 24 02 00 00       	call   6330 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    610c:	c9                   	leave
    610d:	c3                   	ret

000000000000610e <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    610e:	55                   	push   %rbp
    610f:	48 89 e5             	mov    %rsp,%rbp
    6112:	53                   	push   %rbx
    6113:	48 83 ec 38          	sub    $0x38,%rsp
    6117:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    611b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    611f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    6123:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6127:	48 89 c7             	mov    %rax,%rdi
    612a:	e8 ba e9 ff ff       	call   4ae9 <_ZNSt11char_traitsIcE6lengthEPKc>
    612f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6133:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6137:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    613b:	48 89 d6             	mov    %rdx,%rsi
    613e:	48 89 c7             	mov    %rax,%rdi
    6141:	e8 ba df ff ff       	call   4100 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    6146:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    614a:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    614e:	48 89 d6             	mov    %rdx,%rsi
    6151:	48 89 c7             	mov    %rax,%rdi
    6154:	e8 e9 01 00 00       	call   6342 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    6159:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    615d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6161:	48 89 d6             	mov    %rdx,%rsi
    6164:	48 89 c7             	mov    %rax,%rdi
    6167:	e8 74 e5 ff ff       	call   46e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    616c:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6170:	48 89 c7             	mov    %rax,%rdi
    6173:	e8 d8 e2 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    6178:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    617c:	48 89 c7             	mov    %rax,%rdi
    617f:	e8 cc e2 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    6184:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6188:	48 89 c7             	mov    %rax,%rdi
    618b:	e8 a0 e0 ff ff       	call   4230 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    6190:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6194:	48 01 c2             	add    %rax,%rdx
    6197:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    619b:	48 89 d6             	mov    %rdx,%rsi
    619e:	48 89 c7             	mov    %rax,%rdi
    61a1:	e8 ba e4 ff ff       	call   4660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    61a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    61aa:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    61ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    61b2:	48 89 ce             	mov    %rcx,%rsi
    61b5:	48 89 c7             	mov    %rax,%rdi
    61b8:	e8 83 de ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    61bd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    61c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    61c5:	48 89 d6             	mov    %rdx,%rsi
    61c8:	48 89 c7             	mov    %rax,%rdi
    61cb:	e8 e0 e5 ff ff       	call   47b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    61d0:	eb 34                	jmp    6206 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    61d2:	48 89 c3             	mov    %rax,%rbx
    61d5:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    61d9:	48 89 c7             	mov    %rax,%rdi
    61dc:	e8 6f e2 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    61e1:	48 89 d8             	mov    %rbx,%rax
    61e4:	48 89 c7             	mov    %rax,%rdi
    61e7:	e8 44 e5 ff ff       	call   4730 <_Unwind_Resume@plt>
    }
    61ec:	48 89 c3             	mov    %rax,%rbx
    61ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    61f3:	48 89 c7             	mov    %rax,%rdi
    61f6:	e8 f5 df ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    61fb:	48 89 d8             	mov    %rbx,%rax
    61fe:	48 89 c7             	mov    %rax,%rdi
    6201:	e8 2a e5 ff ff       	call   4730 <_Unwind_Resume@plt>
    6206:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    620a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    620e:	c9                   	leave
    620f:	c3                   	ret

0000000000006210 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    6210:	55                   	push   %rbp
    6211:	48 89 e5             	mov    %rsp,%rbp
    6214:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    621c:	48 8b 00             	mov    (%rax),%rax
    621f:	5d                   	pop    %rbp
    6220:	c3                   	ret
    6221:	90                   	nop

0000000000006222 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    6222:	55                   	push   %rbp
    6223:	48 89 e5             	mov    %rsp,%rbp
    6226:	53                   	push   %rbx
    6227:	48 83 ec 28          	sub    $0x28,%rsp
    622b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    622f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6233:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6237:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    623b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    623f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6243:	48 89 d6             	mov    %rdx,%rsi
    6246:	48 89 c7             	mov    %rax,%rdi
    6249:	e8 1d 01 00 00       	call   636b <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    624e:	48 89 c1             	mov    %rax,%rcx
    6251:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6255:	48 89 c2             	mov    %rax,%rdx
    6258:	48 89 ce             	mov    %rcx,%rsi
    625b:	48 89 df             	mov    %rbx,%rdi
    625e:	e8 85 01 00 00       	call   63e8 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    6263:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6267:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    626b:	48 89 d6             	mov    %rdx,%rsi
    626e:	48 89 c7             	mov    %rax,%rdi
    6271:	e8 14 02 00 00       	call   648a <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    6276:	eb 1a                	jmp    6292 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    6278:	48 89 c3             	mov    %rax,%rbx
    627b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    627f:	48 89 c7             	mov    %rax,%rdi
    6282:	e8 bf 01 00 00       	call   6446 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6287:	48 89 d8             	mov    %rbx,%rax
    628a:	48 89 c7             	mov    %rax,%rdi
    628d:	e8 9e e4 ff ff       	call   4730 <_Unwind_Resume@plt>
    6292:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6296:	c9                   	leave
    6297:	c3                   	ret

0000000000006298 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6298:	55                   	push   %rbp
    6299:	48 89 e5             	mov    %rsp,%rbp
    629c:	48 83 ec 10          	sub    $0x10,%rsp
    62a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    62a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62a8:	48 89 c7             	mov    %rax,%rdi
    62ab:	e8 1a 02 00 00       	call   64ca <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    62b0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    62b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    62bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62bf:	48 8b 00             	mov    (%rax),%rax
    62c2:	48 89 ce             	mov    %rcx,%rsi
    62c5:	48 89 c7             	mov    %rax,%rdi
    62c8:	e8 0b 02 00 00       	call   64d8 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    62cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d1:	48 89 c7             	mov    %rax,%rdi
    62d4:	e8 6d 01 00 00       	call   6446 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    62d9:	90                   	nop
    62da:	c9                   	leave
    62db:	c3                   	ret

00000000000062dc <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    62dc:	55                   	push   %rbp
    62dd:	48 89 e5             	mov    %rsp,%rbp
    62e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    62e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62f0:	48 89 10             	mov    %rdx,(%rax)
    62f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    62fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6302:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    6309:	90                   	nop
    630a:	5d                   	pop    %rbp
    630b:	c3                   	ret

000000000000630c <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    630c:	55                   	push   %rbp
    630d:	48 89 e5             	mov    %rsp,%rbp
    6310:	48 83 ec 10          	sub    $0x10,%rsp
    6314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    631c:	48 8b 10             	mov    (%rax),%rdx
    631f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6323:	48 89 d6             	mov    %rdx,%rsi
    6326:	48 89 c7             	mov    %rax,%rdi
    6329:	e8 02 00 00 00       	call   6330 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    632e:	c9                   	leave
    632f:	c3                   	ret

0000000000006330 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6330:	55                   	push   %rbp
    6331:	48 89 e5             	mov    %rsp,%rbp
    6334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6338:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    633c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6340:	5d                   	pop    %rbp
    6341:	c3                   	ret

0000000000006342 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    6342:	55                   	push   %rbp
    6343:	48 89 e5             	mov    %rsp,%rbp
    6346:	48 83 ec 10          	sub    $0x10,%rsp
    634a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    634e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    6352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6356:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    635a:	48 89 d6             	mov    %rdx,%rsi
    635d:	48 89 c7             	mov    %rax,%rdi
    6360:	e8 a8 01 00 00       	call   650d <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    6365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6369:	c9                   	leave
    636a:	c3                   	ret

000000000000636b <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    636b:	55                   	push   %rbp
    636c:	48 89 e5             	mov    %rsp,%rbp
    636f:	53                   	push   %rbx
    6370:	48 83 ec 28          	sub    $0x28,%rsp
    6374:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6378:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    637c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6380:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6384:	48 89 d6             	mov    %rdx,%rsi
    6387:	48 89 c7             	mov    %rax,%rdi
    638a:	e8 31 de ff ff       	call   41c0 <_ZNSaIcEC1ERKS_@plt>
    638f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6393:	48 89 c7             	mov    %rax,%rdi
    6396:	e8 9b 01 00 00       	call   6536 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    639b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    639f:	0f 92 c3             	setb   %bl
    63a2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    63a6:	48 89 c7             	mov    %rax,%rdi
    63a9:	e8 a2 e0 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    63ae:	84 db                	test   %bl,%bl
    63b0:	74 0f                	je     63c1 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    63b2:	48 8d 05 0f 20 01 00 	lea    0x1200f(%rip),%rax        # 183c8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x140>
    63b9:	48 89 c7             	mov    %rax,%rdi
    63bc:	e8 cf dd ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    63c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    63c5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63c9:	c9                   	leave
    63ca:	c3                   	ret
    63cb:	90                   	nop

00000000000063cc <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    63cc:	55                   	push   %rbp
    63cd:	48 89 e5             	mov    %rsp,%rbp
    63d0:	48 83 ec 10          	sub    $0x10,%rsp
    63d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63dc:	48 89 c7             	mov    %rax,%rdi
    63df:	e8 8c dc ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    63e4:	90                   	nop
    63e5:	c9                   	leave
    63e6:	c3                   	ret
    63e7:	90                   	nop

00000000000063e8 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    63e8:	55                   	push   %rbp
    63e9:	48 89 e5             	mov    %rsp,%rbp
    63ec:	53                   	push   %rbx
    63ed:	48 83 ec 28          	sub    $0x28,%rsp
    63f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    63f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    63f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    63fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6401:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6405:	48 89 d6             	mov    %rdx,%rsi
    6408:	48 89 c7             	mov    %rax,%rdi
    640b:	e8 68 01 00 00       	call   6578 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    6410:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6414:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6418:	48 89 d6             	mov    %rdx,%rsi
    641b:	48 89 c7             	mov    %rax,%rdi
    641e:	e8 87 01 00 00       	call   65aa <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    6423:	eb 1a                	jmp    643f <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    6425:	48 89 c3             	mov    %rax,%rbx
    6428:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    642c:	48 89 c7             	mov    %rax,%rdi
    642f:	e8 98 ff ff ff       	call   63cc <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6434:	48 89 d8             	mov    %rbx,%rax
    6437:	48 89 c7             	mov    %rax,%rdi
    643a:	e8 f1 e2 ff ff       	call   4730 <_Unwind_Resume@plt>
    643f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6443:	c9                   	leave
    6444:	c3                   	ret
    6445:	90                   	nop

0000000000006446 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6446:	55                   	push   %rbp
    6447:	48 89 e5             	mov    %rsp,%rbp
    644a:	48 83 ec 10          	sub    $0x10,%rsp
    644e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6456:	48 8b 50 10          	mov    0x10(%rax),%rdx
    645a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    645e:	48 8b 00             	mov    (%rax),%rax
    6461:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    6464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6468:	48 8b 08             	mov    (%rax),%rcx
    646b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646f:	48 89 ce             	mov    %rcx,%rsi
    6472:	48 89 c7             	mov    %rax,%rdi
    6475:	e8 82 01 00 00       	call   65fc <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    647a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    647e:	48 89 c7             	mov    %rax,%rdi
    6481:	e8 46 ff ff ff       	call   63cc <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6486:	90                   	nop
    6487:	c9                   	leave
    6488:	c3                   	ret
    6489:	90                   	nop

000000000000648a <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    648a:	55                   	push   %rbp
    648b:	48 89 e5             	mov    %rsp,%rbp
    648e:	48 83 ec 10          	sub    $0x10,%rsp
    6492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6496:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    649a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    649e:	48 89 c7             	mov    %rax,%rdi
    64a1:	e8 24 00 00 00       	call   64ca <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    64a6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    64a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ad:	48 8b 00             	mov    (%rax),%rax
    64b0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    64b4:	48 89 ce             	mov    %rcx,%rsi
    64b7:	48 89 c7             	mov    %rax,%rdi
    64ba:	e8 72 01 00 00       	call   6631 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    64bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    64c3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    64c7:	90                   	nop
    64c8:	c9                   	leave
    64c9:	c3                   	ret

00000000000064ca <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    64ca:	55                   	push   %rbp
    64cb:	48 89 e5             	mov    %rsp,%rbp
    64ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    64d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d6:	5d                   	pop    %rbp
    64d7:	c3                   	ret

00000000000064d8 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    64d8:	55                   	push   %rbp
    64d9:	48 89 e5             	mov    %rsp,%rbp
    64dc:	48 83 ec 20          	sub    $0x20,%rsp
    64e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    64ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64f4:	48 89 d6             	mov    %rdx,%rsi
    64f7:	48 89 c7             	mov    %rax,%rdi
    64fa:	e8 5b 01 00 00       	call   665a <_ZSt8_DestroyIPcEvT_S1_>
    }
    64ff:	90                   	nop
    6500:	c9                   	leave
    6501:	c3                   	ret

0000000000006502 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    6502:	55                   	push   %rbp
    6503:	48 89 e5             	mov    %rsp,%rbp
    6506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    650a:	90                   	nop
    650b:	5d                   	pop    %rbp
    650c:	c3                   	ret

000000000000650d <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    650d:	55                   	push   %rbp
    650e:	48 89 e5             	mov    %rsp,%rbp
    6511:	48 83 ec 10          	sub    $0x10,%rsp
    6515:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6519:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    651d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6525:	48 89 d6             	mov    %rdx,%rsi
    6528:	48 89 c7             	mov    %rax,%rdi
    652b:	e8 90 dc ff ff       	call   41c0 <_ZNSaIcEC1ERKS_@plt>
    6530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6534:	c9                   	leave
    6535:	c3                   	ret

0000000000006536 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6536:	55                   	push   %rbp
    6537:	48 89 e5             	mov    %rsp,%rbp
    653a:	48 83 ec 20          	sub    $0x20,%rsp
    653e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6542:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    6549:	ff ff 7f 
    654c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6550:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6554:	48 89 c7             	mov    %rax,%rdi
    6557:	e8 52 01 00 00       	call   66ae <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    655c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6560:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6564:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6568:	48 89 d6             	mov    %rdx,%rsi
    656b:	48 89 c7             	mov    %rax,%rdi
    656e:	e8 24 ef ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    6573:	48 8b 00             	mov    (%rax),%rax
      }
    6576:	c9                   	leave
    6577:	c3                   	ret

0000000000006578 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6578:	55                   	push   %rbp
    6579:	48 89 e5             	mov    %rsp,%rbp
    657c:	48 83 ec 10          	sub    $0x10,%rsp
    6580:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6584:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6588:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    658c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6590:	48 89 d6             	mov    %rdx,%rsi
    6593:	48 89 c7             	mov    %rax,%rdi
    6596:	e8 65 e0 ff ff       	call   4600 <_ZNSaIcEC2ERKS_@plt>
    659b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    659f:	48 89 c7             	mov    %rax,%rdi
    65a2:	e8 21 01 00 00       	call   66c8 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    65a7:	90                   	nop
    65a8:	c9                   	leave
    65a9:	c3                   	ret

00000000000065aa <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    65aa:	55                   	push   %rbp
    65ab:	48 89 e5             	mov    %rsp,%rbp
    65ae:	48 83 ec 10          	sub    $0x10,%rsp
    65b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    65ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    65be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65c2:	48 89 d6             	mov    %rdx,%rsi
    65c5:	48 89 c7             	mov    %rax,%rdi
    65c8:	e8 29 01 00 00       	call   66f6 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    65cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    65d1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    65d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65d8:	48 8b 10             	mov    (%rax),%rdx
    65db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65df:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    65e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65e7:	48 8b 10             	mov    (%rax),%rdx
    65ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    65ee:	48 01 c2             	add    %rax,%rdx
    65f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65f5:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    65f9:	90                   	nop
    65fa:	c9                   	leave
    65fb:	c3                   	ret

00000000000065fc <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    65fc:	55                   	push   %rbp
    65fd:	48 89 e5             	mov    %rsp,%rbp
    6600:	48 83 ec 20          	sub    $0x20,%rsp
    6604:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6608:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    660c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6610:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6615:	74 17                	je     662e <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    661b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    661f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6623:	48 89 ce             	mov    %rcx,%rsi
    6626:	48 89 c7             	mov    %rax,%rdi
    6629:	e8 52 00 00 00       	call   6680 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    662e:	90                   	nop
    662f:	c9                   	leave
    6630:	c3                   	ret

0000000000006631 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6631:	55                   	push   %rbp
    6632:	48 89 e5             	mov    %rsp,%rbp
    6635:	48 83 ec 20          	sub    $0x20,%rsp
    6639:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    663d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6641:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6645:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    664d:	48 89 d6             	mov    %rdx,%rsi
    6650:	48 89 c7             	mov    %rax,%rdi
    6653:	e8 d1 00 00 00       	call   6729 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    6658:	c9                   	leave
    6659:	c3                   	ret

000000000000665a <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    665a:	55                   	push   %rbp
    665b:	48 89 e5             	mov    %rsp,%rbp
    665e:	48 83 ec 10          	sub    $0x10,%rsp
    6662:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6666:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    666a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    666e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6672:	48 89 d6             	mov    %rdx,%rsi
    6675:	48 89 c7             	mov    %rax,%rdi
    6678:	e8 d5 00 00 00       	call   6752 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    667d:	90                   	nop
    667e:	c9                   	leave
    667f:	c3                   	ret

0000000000006680 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6680:	55                   	push   %rbp
    6681:	48 89 e5             	mov    %rsp,%rbp
    6684:	48 83 ec 20          	sub    $0x20,%rsp
    6688:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    668c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6690:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6694:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6698:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    669c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a0:	48 89 ce             	mov    %rcx,%rsi
    66a3:	48 89 c7             	mov    %rax,%rdi
    66a6:	e8 c5 00 00 00       	call   6770 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    66ab:	90                   	nop
    66ac:	c9                   	leave
    66ad:	c3                   	ret

00000000000066ae <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    66ae:	55                   	push   %rbp
    66af:	48 89 e5             	mov    %rsp,%rbp
    66b2:	48 83 ec 10          	sub    $0x10,%rsp
    66b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    66ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66be:	48 89 c7             	mov    %rax,%rdi
    66c1:	e8 d4 00 00 00       	call   679a <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    66c6:	c9                   	leave
    66c7:	c3                   	ret

00000000000066c8 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    66c8:	55                   	push   %rbp
    66c9:	48 89 e5             	mov    %rsp,%rbp
    66cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    66d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    66db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66df:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    66e6:	00 
    66e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66eb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    66f2:	00 
	{ }
    66f3:	90                   	nop
    66f4:	5d                   	pop    %rbp
    66f5:	c3                   	ret

00000000000066f6 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    66f6:	55                   	push   %rbp
    66f7:	48 89 e5             	mov    %rsp,%rbp
    66fa:	48 83 ec 10          	sub    $0x10,%rsp
    66fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6702:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6706:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    670b:	74 15                	je     6722 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    670d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6711:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6715:	48 89 d6             	mov    %rdx,%rsi
    6718:	48 89 c7             	mov    %rax,%rdi
    671b:	e8 94 00 00 00       	call   67b4 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    6720:	eb 05                	jmp    6727 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    6722:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6727:	c9                   	leave
    6728:	c3                   	ret

0000000000006729 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6729:	55                   	push   %rbp
    672a:	48 89 e5             	mov    %rsp,%rbp
    672d:	48 83 ec 20          	sub    $0x20,%rsp
    6731:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6735:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6739:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    673d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6741:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6745:	48 89 d6             	mov    %rdx,%rsi
    6748:	48 89 c7             	mov    %rax,%rdi
    674b:	e8 8e 00 00 00       	call   67de <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    6750:	c9                   	leave
    6751:	c3                   	ret

0000000000006752 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6752:	55                   	push   %rbp
    6753:	48 89 e5             	mov    %rsp,%rbp
    6756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    675a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    675e:	90                   	nop
    675f:	5d                   	pop    %rbp
    6760:	c3                   	ret

0000000000006761 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6761:	55                   	push   %rbp
    6762:	48 89 e5             	mov    %rsp,%rbp
    6765:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6769:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    676d:	5d                   	pop    %rbp
    676e:	c3                   	ret
    676f:	90                   	nop

0000000000006770 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6770:	55                   	push   %rbp
    6771:	48 89 e5             	mov    %rsp,%rbp
    6774:	48 83 ec 20          	sub    $0x20,%rsp
    6778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    677c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6780:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6784:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6788:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    678c:	48 89 d6             	mov    %rdx,%rsi
    678f:	48 89 c7             	mov    %rax,%rdi
    6792:	e8 29 dc ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    6797:	c9                   	leave
    6798:	c3                   	ret
    6799:	90                   	nop

000000000000679a <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    679a:	55                   	push   %rbp
    679b:	48 89 e5             	mov    %rsp,%rbp
    679e:	48 83 ec 10          	sub    $0x10,%rsp
    67a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    67a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67aa:	48 89 c7             	mov    %rax,%rdi
    67ad:	e8 8a 00 00 00       	call   683c <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    67b2:	c9                   	leave
    67b3:	c3                   	ret

00000000000067b4 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    67b4:	55                   	push   %rbp
    67b5:	48 89 e5             	mov    %rsp,%rbp
    67b8:	48 83 ec 10          	sub    $0x10,%rsp
    67bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    67c4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    67c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67cc:	ba 00 00 00 00       	mov    $0x0,%edx
    67d1:	48 89 ce             	mov    %rcx,%rsi
    67d4:	48 89 c7             	mov    %rax,%rdi
    67d7:	e8 74 00 00 00       	call   6850 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    67dc:	c9                   	leave
    67dd:	c3                   	ret

00000000000067de <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    67de:	55                   	push   %rbp
    67df:	48 89 e5             	mov    %rsp,%rbp
    67e2:	48 83 ec 20          	sub    $0x20,%rsp
    67e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    67ea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    67ee:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    67f3:	74 40                	je     6835 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    67f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67f9:	48 89 c7             	mov    %rax,%rdi
    67fc:	e8 60 ff ff ff       	call   6761 <_ZSt11__addressofIcEPT_RS0_>
    6801:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    6805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6809:	48 89 c7             	mov    %rax,%rdi
    680c:	e8 87 00 00 00       	call   6898 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    6811:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    6816:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    681a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    681e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6822:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6826:	48 89 ce             	mov    %rcx,%rsi
    6829:	48 89 c7             	mov    %rax,%rdi
    682c:	e8 8a 00 00 00       	call   68bb <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    6831:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6835:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6839:	c9                   	leave
    683a:	c3                   	ret
    683b:	90                   	nop

000000000000683c <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    683c:	55                   	push   %rbp
    683d:	48 89 e5             	mov    %rsp,%rbp
    6840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6844:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    684b:	ff ff 7f 
      }
    684e:	5d                   	pop    %rbp
    684f:	c3                   	ret

0000000000006850 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6850:	55                   	push   %rbp
    6851:	48 89 e5             	mov    %rsp,%rbp
    6854:	48 83 ec 20          	sub    $0x20,%rsp
    6858:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    685c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6860:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6868:	48 89 c7             	mov    %rax,%rdi
    686b:	e8 cc ff ff ff       	call   683c <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6870:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6874:	0f 92 c0             	setb   %al
    6877:	0f b6 c0             	movzbl %al,%eax
    687a:	48 85 c0             	test   %rax,%rax
    687d:	0f 95 c0             	setne  %al
    6880:	84 c0                	test   %al,%al
    6882:	74 05                	je     6889 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    6884:	e8 67 d8 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6889:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    688d:	48 89 c7             	mov    %rax,%rdi
    6890:	e8 0b db ff ff       	call   43a0 <_Znwm@plt>
    6895:	90                   	nop
      }
    6896:	c9                   	leave
    6897:	c3                   	ret

0000000000006898 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6898:	55                   	push   %rbp
    6899:	48 89 e5             	mov    %rsp,%rbp
    689c:	48 83 ec 10          	sub    $0x10,%rsp
    68a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    68a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68a8:	48 89 c6             	mov    %rax,%rsi
    68ab:	bf 01 00 00 00       	mov    $0x1,%edi
    68b0:	e8 14 e7 ff ff       	call   4fc9 <_ZnwmPv>
    68b5:	c6 00 00             	movb   $0x0,(%rax)
    }
    68b8:	90                   	nop
    68b9:	c9                   	leave
    68ba:	c3                   	ret

00000000000068bb <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    68bb:	55                   	push   %rbp
    68bc:	48 89 e5             	mov    %rsp,%rbp
    68bf:	48 83 ec 20          	sub    $0x20,%rsp
    68c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    68cf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    68d3:	48 89 c7             	mov    %rax,%rdi
    68d6:	e8 27 fc ff ff       	call   6502 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    68db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    68df:	48 89 c7             	mov    %rax,%rdi
    68e2:	e8 f4 e6 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    68e7:	48 89 c1             	mov    %rax,%rcx
    68ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68f2:	48 89 ce             	mov    %rcx,%rsi
    68f5:	48 89 c7             	mov    %rax,%rdi
    68f8:	e8 02 00 00 00       	call   68ff <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    68fd:	c9                   	leave
    68fe:	c3                   	ret

00000000000068ff <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    68ff:	55                   	push   %rbp
    6900:	48 89 e5             	mov    %rsp,%rbp
    6903:	48 83 ec 20          	sub    $0x20,%rsp
    6907:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    690b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    690f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6913:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6918:	75 06                	jne    6920 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    691a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    691e:	eb 2a                	jmp    694a <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    6920:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6924:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6928:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    692c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6934:	48 89 ce             	mov    %rcx,%rsi
    6937:	48 89 c7             	mov    %rax,%rdi
    693a:	e8 0d 00 00 00       	call   694c <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    693f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6943:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6947:	48 01 d0             	add    %rdx,%rax
    }
    694a:	c9                   	leave
    694b:	c3                   	ret

000000000000694c <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    694c:	55                   	push   %rbp
    694d:	48 89 e5             	mov    %rsp,%rbp
    6950:	48 83 ec 20          	sub    $0x20,%rsp
    6954:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6958:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    695c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6960:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6964:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696c:	48 89 ce             	mov    %rcx,%rsi
    696f:	48 89 c7             	mov    %rax,%rdi
    6972:	e8 03 00 00 00       	call   697a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    6977:	90                   	nop
    6978:	c9                   	leave
    6979:	c3                   	ret

000000000000697a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    697a:	55                   	push   %rbp
    697b:	48 89 e5             	mov    %rsp,%rbp
    697e:	48 83 ec 30          	sub    $0x30,%rsp
    6982:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6986:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    698a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    698e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6992:	0f b6 00             	movzbl (%rax),%eax
    6995:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    6998:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    699c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    69a0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    69a4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    69a9:	74 19                	je     69c4 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    69ab:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    69af:	0f b6 c8             	movzbl %al,%ecx
    69b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    69b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69ba:	89 ce                	mov    %ecx,%esi
    69bc:	48 89 c7             	mov    %rax,%rdi
    69bf:	e8 ec d7 ff ff       	call   41b0 <memset@plt>
    }
    69c4:	90                   	nop
    69c5:	c9                   	leave
    69c6:	c3                   	ret

00000000000069c7 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    69c7:	55                   	push   %rbp
    69c8:	48 89 e5             	mov    %rsp,%rbp
    69cb:	48 83 ec 10          	sub    $0x10,%rsp
    69cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69d7:	48 89 c7             	mov    %rax,%rdi
    69da:	e8 01 d7 ff ff       	call   40e0 <glfwDestroyWindow@plt>
    69df:	90                   	nop
    69e0:	c9                   	leave
    69e1:	c3                   	ret

00000000000069e2 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    69e2:	55                   	push   %rbp
    69e3:	48 89 e5             	mov    %rsp,%rbp
    69e6:	48 83 ec 10          	sub    $0x10,%rsp
    69ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    69f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    69f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69fa:	48 89 d6             	mov    %rdx,%rsi
    69fd:	48 89 c7             	mov    %rax,%rdi
    6a00:	e8 cb d9 ff ff       	call   43d0 <vkDestroyInstance@plt>
}
    6a05:	90                   	nop
    6a06:	c9                   	leave
    6a07:	c3                   	ret

0000000000006a08 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    6a08:	55                   	push   %rbp
    6a09:	48 89 e5             	mov    %rsp,%rbp
    6a0c:	48 83 ec 10          	sub    $0x10,%rsp
    6a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    6a18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a20:	48 89 d6             	mov    %rdx,%rsi
    6a23:	48 89 c7             	mov    %rax,%rdi
    6a26:	e8 85 d8 ff ff       	call   42b0 <vkDestroyDevice@plt>
}
    6a2b:	90                   	nop
    6a2c:	c9                   	leave
    6a2d:	c3                   	ret

0000000000006a2e <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    6a2e:	55                   	push   %rbp
    6a2f:	48 89 e5             	mov    %rsp,%rbp
    6a32:	48 83 ec 20          	sub    $0x20,%rsp
    6a36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    6a42:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a46:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a4e:	48 89 ce             	mov    %rcx,%rsi
    6a51:	48 89 c7             	mov    %rax,%rdi
    6a54:	e8 c7 dc ff ff       	call   4720 <vkDestroySurfaceKHR@plt>
}
    6a59:	90                   	nop
    6a5a:	c9                   	leave
    6a5b:	c3                   	ret

0000000000006a5c <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    6a5c:	55                   	push   %rbp
    6a5d:	48 89 e5             	mov    %rsp,%rbp
    6a60:	48 83 ec 20          	sub    $0x20,%rsp
    6a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    6a70:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a74:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6a78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a7c:	48 89 ce             	mov    %rcx,%rsi
    6a7f:	48 89 c7             	mov    %rax,%rdi
    6a82:	e8 49 d6 ff ff       	call   40d0 <vkDestroySwapchainKHR@plt>
}
    6a87:	90                   	nop
    6a88:	c9                   	leave
    6a89:	c3                   	ret

0000000000006a8a <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    6a8a:	55                   	push   %rbp
    6a8b:	48 89 e5             	mov    %rsp,%rbp
    6a8e:	48 83 ec 20          	sub    $0x20,%rsp
    6a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    6a9e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6aa2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6aa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aaa:	48 89 ce             	mov    %rcx,%rsi
    6aad:	48 89 c7             	mov    %rax,%rdi
    6ab0:	e8 9b dc ff ff       	call   4750 <vkDestroyImageView@plt>
}
    6ab5:	90                   	nop
    6ab6:	c9                   	leave
    6ab7:	c3                   	ret

0000000000006ab8 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    6ab8:	55                   	push   %rbp
    6ab9:	48 89 e5             	mov    %rsp,%rbp
    6abc:	48 83 ec 20          	sub    $0x20,%rsp
    6ac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ac4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ac8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    6acc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ad0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ad8:	48 89 ce             	mov    %rcx,%rsi
    6adb:	48 89 c7             	mov    %rax,%rdi
    6ade:	e8 fd d9 ff ff       	call   44e0 <vkDestroyShaderModule@plt>
}
    6ae3:	90                   	nop
    6ae4:	c9                   	leave
    6ae5:	c3                   	ret

0000000000006ae6 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    6ae6:	55                   	push   %rbp
    6ae7:	48 89 e5             	mov    %rsp,%rbp
    6aea:	48 83 ec 20          	sub    $0x20,%rsp
    6aee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6af2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6af6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    6afa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6afe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b06:	48 89 ce             	mov    %rcx,%rsi
    6b09:	48 89 c7             	mov    %rax,%rdi
    6b0c:	e8 ff d9 ff ff       	call   4510 <vkDestroyPipelineLayout@plt>
}
    6b11:	90                   	nop
    6b12:	c9                   	leave
    6b13:	c3                   	ret

0000000000006b14 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    6b14:	55                   	push   %rbp
    6b15:	48 89 e5             	mov    %rsp,%rbp
    6b18:	48 83 ec 20          	sub    $0x20,%rsp
    6b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    6b28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b2c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b34:	48 89 ce             	mov    %rcx,%rsi
    6b37:	48 89 c7             	mov    %rax,%rdi
    6b3a:	e8 41 d8 ff ff       	call   4380 <vkDestroyRenderPass@plt>
}
    6b3f:	90                   	nop
    6b40:	c9                   	leave
    6b41:	c3                   	ret

0000000000006b42 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    6b42:	55                   	push   %rbp
    6b43:	48 89 e5             	mov    %rsp,%rbp
    6b46:	48 83 ec 20          	sub    $0x20,%rsp
    6b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    6b56:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b5a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b62:	48 89 ce             	mov    %rcx,%rsi
    6b65:	48 89 c7             	mov    %rax,%rdi
    6b68:	e8 f3 d8 ff ff       	call   4460 <vkDestroyPipeline@plt>
}
    6b6d:	90                   	nop
    6b6e:	c9                   	leave
    6b6f:	c3                   	ret

0000000000006b70 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    6b70:	55                   	push   %rbp
    6b71:	48 89 e5             	mov    %rsp,%rbp
    6b74:	48 83 ec 40          	sub    $0x40,%rsp
    6b78:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6b7c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6b80:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    6b84:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6b88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b90:	48 89 c7             	mov    %rax,%rdi
    6b93:	e8 c4 00 00 00       	call   6c5c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    6b98:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ba0:	48 89 c7             	mov    %rax,%rdi
    6ba3:	e8 da 00 00 00       	call   6c82 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    6ba8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6bac:	eb 36                	jmp    6be4 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    6bae:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6bb2:	48 89 c7             	mov    %rax,%rdi
    6bb5:	e8 4c 01 00 00       	call   6d06 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    6bba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    6bbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6bc2:	48 8b 08             	mov    (%rax),%rcx
    6bc5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6bc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bcd:	48 89 ce             	mov    %rcx,%rsi
    6bd0:	48 89 c7             	mov    %rax,%rdi
    6bd3:	e8 88 d8 ff ff       	call   4460 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    6bd8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6bdc:	48 89 c7             	mov    %rax,%rdi
    6bdf:	e8 02 01 00 00       	call   6ce6 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    6be4:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    6be8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6bec:	48 89 d6             	mov    %rdx,%rsi
    6bef:	48 89 c7             	mov    %rax,%rdi
    6bf2:	e8 b4 00 00 00       	call   6cab <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6bf7:	84 c0                	test   %al,%al
    6bf9:	75 b3                	jne    6bae <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    6bfb:	90                   	nop
    6bfc:	90                   	nop
    6bfd:	c9                   	leave
    6bfe:	c3                   	ret

0000000000006bff <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    6bff:	55                   	push   %rbp
    6c00:	48 89 e5             	mov    %rsp,%rbp
    6c03:	48 83 ec 20          	sub    $0x20,%rsp
    6c07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    6c13:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c17:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c1f:	48 89 ce             	mov    %rcx,%rsi
    6c22:	48 89 c7             	mov    %rax,%rdi
    6c25:	e8 96 da ff ff       	call   46c0 <vkDestroyFramebuffer@plt>
}
    6c2a:	90                   	nop
    6c2b:	c9                   	leave
    6c2c:	c3                   	ret

0000000000006c2d <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    6c2d:	55                   	push   %rbp
    6c2e:	48 89 e5             	mov    %rsp,%rbp
    6c31:	48 83 ec 20          	sub    $0x20,%rsp
    6c35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c39:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c3d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    6c41:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c45:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c4d:	48 89 ce             	mov    %rcx,%rsi
    6c50:	48 89 c7             	mov    %rax,%rdi
    6c53:	e8 98 d9 ff ff       	call   45f0 <vkDestroyCommandPool@plt>
}
    6c58:	90                   	nop
    6c59:	c9                   	leave
    6c5a:	c3                   	ret
    6c5b:	90                   	nop

0000000000006c5c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6c5c:	55                   	push   %rbp
    6c5d:	48 89 e5             	mov    %rsp,%rbp
    6c60:	48 83 ec 20          	sub    $0x20,%rsp
    6c64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6c68:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c6c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6c70:	48 89 d6             	mov    %rdx,%rsi
    6c73:	48 89 c7             	mov    %rax,%rdi
    6c76:	e8 9d 00 00 00       	call   6d18 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6c7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c7f:	c9                   	leave
    6c80:	c3                   	ret
    6c81:	90                   	nop

0000000000006c82 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6c82:	55                   	push   %rbp
    6c83:	48 89 e5             	mov    %rsp,%rbp
    6c86:	48 83 ec 20          	sub    $0x20,%rsp
    6c8a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6c8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c92:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6c96:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6c9a:	48 89 d6             	mov    %rdx,%rsi
    6c9d:	48 89 c7             	mov    %rax,%rdi
    6ca0:	e8 73 00 00 00       	call   6d18 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ca9:	c9                   	leave
    6caa:	c3                   	ret

0000000000006cab <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    6cab:	55                   	push   %rbp
    6cac:	48 89 e5             	mov    %rsp,%rbp
    6caf:	53                   	push   %rbx
    6cb0:	48 83 ec 18          	sub    $0x18,%rsp
    6cb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6cb8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    6cbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cc0:	48 89 c7             	mov    %rax,%rdi
    6cc3:	e8 6e 00 00 00       	call   6d36 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6cc8:	48 8b 18             	mov    (%rax),%rbx
    6ccb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6ccf:	48 89 c7             	mov    %rax,%rdi
    6cd2:	e8 5f 00 00 00       	call   6d36 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6cd7:	48 8b 00             	mov    (%rax),%rax
    6cda:	48 39 c3             	cmp    %rax,%rbx
    6cdd:	0f 95 c0             	setne  %al
    6ce0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6ce4:	c9                   	leave
    6ce5:	c3                   	ret

0000000000006ce6 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6ce6:	55                   	push   %rbp
    6ce7:	48 89 e5             	mov    %rsp,%rbp
    6cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    6cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cf2:	48 8b 00             	mov    (%rax),%rax
    6cf5:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6cf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cfd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6d04:	5d                   	pop    %rbp
    6d05:	c3                   	ret

0000000000006d06 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6d06:	55                   	push   %rbp
    6d07:	48 89 e5             	mov    %rsp,%rbp
    6d0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6d0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d12:	48 8b 00             	mov    (%rax),%rax
    6d15:	5d                   	pop    %rbp
    6d16:	c3                   	ret
    6d17:	90                   	nop

0000000000006d18 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6d18:	55                   	push   %rbp
    6d19:	48 89 e5             	mov    %rsp,%rbp
    6d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6d24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d28:	48 8b 10             	mov    (%rax),%rdx
    6d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d2f:	48 89 10             	mov    %rdx,(%rax)
    6d32:	90                   	nop
    6d33:	5d                   	pop    %rbp
    6d34:	c3                   	ret
    6d35:	90                   	nop

0000000000006d36 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6d36:	55                   	push   %rbp
    6d37:	48 89 e5             	mov    %rsp,%rbp
    6d3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d42:	5d                   	pop    %rbp
    6d43:	c3                   	ret

0000000000006d44 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6d44:	55                   	push   %rbp
    6d45:	48 89 e5             	mov    %rsp,%rbp
    6d48:	53                   	push   %rbx
    6d49:	48 83 ec 28          	sub    $0x28,%rsp
    6d4d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6d51:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6d55:	be 00 00 00 00       	mov    $0x0,%esi
    6d5a:	48 89 c7             	mov    %rax,%rdi
    6d5d:	e8 2e d7 ff ff       	call   4490 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6d62:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6d65:	89 c3                	mov    %eax,%ebx
    6d67:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d6b:	48 89 c7             	mov    %rax,%rdi
    6d6e:	e8 47 11 00 00       	call   7eba <_ZNSaI17VkLayerPropertiesEC1Ev>
    6d73:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6d77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d7b:	48 89 de             	mov    %rbx,%rsi
    6d7e:	48 89 c7             	mov    %rax,%rdi
    6d81:	e8 6c 11 00 00       	call   7ef2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6d86:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d8a:	48 89 c7             	mov    %rax,%rdi
    6d8d:	e8 44 11 00 00       	call   7ed6 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6d92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d96:	48 89 c7             	mov    %rax,%rdi
    6d99:	e8 0e 12 00 00       	call   7fac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6d9e:	48 89 c2             	mov    %rax,%rdx
    6da1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6da5:	48 89 d6             	mov    %rdx,%rsi
    6da8:	48 89 c7             	mov    %rax,%rdi
    6dab:	e8 e0 d6 ff ff       	call   4490 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6db0:	eb 34                	jmp    6de6 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6db2:	48 89 c3             	mov    %rax,%rbx
    6db5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6db9:	48 89 c7             	mov    %rax,%rdi
    6dbc:	e8 15 11 00 00       	call   7ed6 <_ZNSaI17VkLayerPropertiesED1Ev>
    6dc1:	48 89 d8             	mov    %rbx,%rax
    6dc4:	48 89 c7             	mov    %rax,%rdi
    6dc7:	e8 64 d9 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    6dcc:	48 89 c3             	mov    %rax,%rbx
    6dcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6dd3:	48 89 c7             	mov    %rax,%rdi
    6dd6:	e8 8d 11 00 00       	call   7f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6ddb:	48 89 d8             	mov    %rbx,%rax
    6dde:	48 89 c7             	mov    %rax,%rdi
    6de1:	e8 4a d9 ff ff       	call   4730 <_Unwind_Resume@plt>
    6de6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6dea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6dee:	c9                   	leave
    6def:	c3                   	ret

0000000000006df0 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    6df0:	55                   	push   %rbp
    6df1:	48 89 e5             	mov    %rsp,%rbp
    6df4:	41 54                	push   %r12
    6df6:	53                   	push   %rbx
    6df7:	48 83 ec 20          	sub    $0x20,%rsp
    6dfb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6dff:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6e03:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6e07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6e0b:	ba 00 00 00 00       	mov    $0x0,%edx
    6e10:	48 89 ce             	mov    %rcx,%rsi
    6e13:	48 89 c7             	mov    %rax,%rdi
    6e16:	e8 b5 d4 ff ff       	call   42d0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    6e1b:	85 c0                	test   %eax,%eax
    6e1d:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6e20:	84 c0                	test   %al,%al
    6e22:	74 3b                	je     6e5f <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    6e24:	bf 10 00 00 00       	mov    $0x10,%edi
    6e29:	e8 52 d3 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    6e2e:	48 89 c3             	mov    %rax,%rbx
    6e31:	48 8d 05 78 21 01 00 	lea    0x12178(%rip),%rax        # 18fb0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6e38:	48 89 c6             	mov    %rax,%rsi
    6e3b:	48 89 df             	mov    %rbx,%rdi
    6e3e:	e8 cd d2 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    6e43:	48 8b 05 5e 11 02 00 	mov    0x2115e(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6e4a:	48 89 c2             	mov    %rax,%rdx
    6e4d:	48 8d 05 ec 0e 02 00 	lea    0x20eec(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6e54:	48 89 c6             	mov    %rax,%rsi
    6e57:	48 89 df             	mov    %rbx,%rdi
    6e5a:	e8 71 d8 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6e5f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6e62:	89 c3                	mov    %eax,%ebx
    6e64:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e68:	48 89 c7             	mov    %rax,%rdi
    6e6b:	e8 b8 11 00 00       	call   8028 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6e70:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6e74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e78:	48 89 de             	mov    %rbx,%rsi
    6e7b:	48 89 c7             	mov    %rax,%rdi
    6e7e:	e8 dd 11 00 00       	call   8060 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6e83:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e87:	48 89 c7             	mov    %rax,%rdi
    6e8a:	e8 b5 11 00 00       	call   8044 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6e8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e93:	48 89 c7             	mov    %rax,%rdi
    6e96:	e8 7f 12 00 00       	call   811a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6e9b:	48 89 c2             	mov    %rax,%rdx
    6e9e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6ea2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6ea6:	48 89 ce             	mov    %rcx,%rsi
    6ea9:	48 89 c7             	mov    %rax,%rdi
    6eac:	e8 1f d4 ff ff       	call   42d0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    6eb1:	85 c0                	test   %eax,%eax
    6eb3:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6eb6:	84 c0                	test   %al,%al
    6eb8:	0f 84 95 00 00 00    	je     6f53 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    6ebe:	bf 10 00 00 00       	mov    $0x10,%edi
    6ec3:	e8 b8 d2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    6ec8:	48 89 c3             	mov    %rax,%rbx
    6ecb:	48 8d 05 de 20 01 00 	lea    0x120de(%rip),%rax        # 18fb0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6ed2:	48 89 c6             	mov    %rax,%rsi
    6ed5:	48 89 df             	mov    %rbx,%rdi
    6ed8:	e8 33 d2 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    6edd:	48 8b 05 c4 10 02 00 	mov    0x210c4(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ee4:	48 89 c2             	mov    %rax,%rdx
    6ee7:	48 8d 05 52 0e 02 00 	lea    0x20e52(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6eee:	48 89 c6             	mov    %rax,%rsi
    6ef1:	48 89 df             	mov    %rbx,%rdi
    6ef4:	e8 d7 d7 ff ff       	call   46d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6ef9:	49 89 c4             	mov    %rax,%r12
    6efc:	48 89 df             	mov    %rbx,%rdi
    6eff:	e8 4c d3 ff ff       	call   4250 <__cxa_free_exception@plt>
    6f04:	4c 89 e0             	mov    %r12,%rax
    6f07:	48 89 c7             	mov    %rax,%rdi
    6f0a:	e8 21 d8 ff ff       	call   4730 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6f0f:	48 89 c3             	mov    %rax,%rbx
    6f12:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f16:	48 89 c7             	mov    %rax,%rdi
    6f19:	e8 26 11 00 00       	call   8044 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6f1e:	48 89 d8             	mov    %rbx,%rax
    6f21:	48 89 c7             	mov    %rax,%rdi
    6f24:	e8 07 d8 ff ff       	call   4730 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6f29:	49 89 c4             	mov    %rax,%r12
    6f2c:	48 89 df             	mov    %rbx,%rdi
    6f2f:	e8 1c d3 ff ff       	call   4250 <__cxa_free_exception@plt>
    6f34:	4c 89 e3             	mov    %r12,%rbx
    6f37:	eb 03                	jmp    6f3c <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    6f39:	48 89 c3             	mov    %rax,%rbx
    6f3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f40:	48 89 c7             	mov    %rax,%rdi
    6f43:	e8 8e 11 00 00       	call   80d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6f48:	48 89 d8             	mov    %rbx,%rax
    6f4b:	48 89 c7             	mov    %rax,%rdi
    6f4e:	e8 dd d7 ff ff       	call   4730 <_Unwind_Resume@plt>
  return instanceExtensions;
    6f53:	90                   	nop
}
    6f54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f58:	48 83 c4 20          	add    $0x20,%rsp
    6f5c:	5b                   	pop    %rbx
    6f5d:	41 5c                	pop    %r12
    6f5f:	5d                   	pop    %rbp
    6f60:	c3                   	ret

0000000000006f61 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    6f61:	55                   	push   %rbp
    6f62:	48 89 e5             	mov    %rsp,%rbp
    6f65:	41 54                	push   %r12
    6f67:	53                   	push   %rbx
    6f68:	48 83 ec 30          	sub    $0x30,%rsp
    6f6c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6f70:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6f74:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    6f78:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6f7c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6f80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6f84:	b9 00 00 00 00       	mov    $0x0,%ecx
    6f89:	48 89 c7             	mov    %rax,%rdi
    6f8c:	e8 2f d6 ff ff       	call   45c0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    6f91:	85 c0                	test   %eax,%eax
    6f93:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6f96:	84 c0                	test   %al,%al
    6f98:	74 3b                	je     6fd5 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    6f9a:	bf 10 00 00 00       	mov    $0x10,%edi
    6f9f:	e8 dc d1 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    6fa4:	48 89 c3             	mov    %rax,%rbx
    6fa7:	48 8d 05 2a 20 01 00 	lea    0x1202a(%rip),%rax        # 18fd8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6fae:	48 89 c6             	mov    %rax,%rsi
    6fb1:	48 89 df             	mov    %rbx,%rdi
    6fb4:	e8 57 d1 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    6fb9:	48 8b 05 e8 0f 02 00 	mov    0x20fe8(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6fc0:	48 89 c2             	mov    %rax,%rdx
    6fc3:	48 8d 05 76 0d 02 00 	lea    0x20d76(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6fca:	48 89 c6             	mov    %rax,%rsi
    6fcd:	48 89 df             	mov    %rbx,%rdi
    6fd0:	e8 fb d6 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6fd5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6fd8:	89 c3                	mov    %eax,%ebx
    6fda:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fde:	48 89 c7             	mov    %rax,%rdi
    6fe1:	e8 42 10 00 00       	call   8028 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6fe6:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6fea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fee:	48 89 de             	mov    %rbx,%rsi
    6ff1:	48 89 c7             	mov    %rax,%rdi
    6ff4:	e8 67 10 00 00       	call   8060 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6ff9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6ffd:	48 89 c7             	mov    %rax,%rdi
    7000:	e8 3f 10 00 00       	call   8044 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    7005:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7009:	48 89 c7             	mov    %rax,%rdi
    700c:	e8 09 11 00 00       	call   811a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    7011:	48 89 c1             	mov    %rax,%rcx
    7014:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7018:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    701c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7020:	48 89 c7             	mov    %rax,%rdi
    7023:	e8 98 d5 ff ff       	call   45c0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    7028:	85 c0                	test   %eax,%eax
    702a:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    702d:	84 c0                	test   %al,%al
    702f:	0f 84 95 00 00 00    	je     70ca <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    7035:	bf 10 00 00 00       	mov    $0x10,%edi
    703a:	e8 41 d1 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    703f:	48 89 c3             	mov    %rax,%rbx
    7042:	48 8d 05 8f 1f 01 00 	lea    0x11f8f(%rip),%rax        # 18fd8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    7049:	48 89 c6             	mov    %rax,%rsi
    704c:	48 89 df             	mov    %rbx,%rdi
    704f:	e8 bc d0 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7054:	48 8b 05 4d 0f 02 00 	mov    0x20f4d(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    705b:	48 89 c2             	mov    %rax,%rdx
    705e:	48 8d 05 db 0c 02 00 	lea    0x20cdb(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7065:	48 89 c6             	mov    %rax,%rsi
    7068:	48 89 df             	mov    %rbx,%rdi
    706b:	e8 60 d6 ff ff       	call   46d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    7070:	49 89 c4             	mov    %rax,%r12
    7073:	48 89 df             	mov    %rbx,%rdi
    7076:	e8 d5 d1 ff ff       	call   4250 <__cxa_free_exception@plt>
    707b:	4c 89 e0             	mov    %r12,%rax
    707e:	48 89 c7             	mov    %rax,%rdi
    7081:	e8 aa d6 ff ff       	call   4730 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    7086:	48 89 c3             	mov    %rax,%rbx
    7089:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    708d:	48 89 c7             	mov    %rax,%rdi
    7090:	e8 af 0f 00 00       	call   8044 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7095:	48 89 d8             	mov    %rbx,%rax
    7098:	48 89 c7             	mov    %rax,%rdi
    709b:	e8 90 d6 ff ff       	call   4730 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    70a0:	49 89 c4             	mov    %rax,%r12
    70a3:	48 89 df             	mov    %rbx,%rdi
    70a6:	e8 a5 d1 ff ff       	call   4250 <__cxa_free_exception@plt>
    70ab:	4c 89 e3             	mov    %r12,%rbx
    70ae:	eb 03                	jmp    70b3 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    70b0:	48 89 c3             	mov    %rax,%rbx
    70b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70b7:	48 89 c7             	mov    %rax,%rdi
    70ba:	e8 17 10 00 00       	call   80d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    70bf:	48 89 d8             	mov    %rbx,%rax
    70c2:	48 89 c7             	mov    %rax,%rdi
    70c5:	e8 66 d6 ff ff       	call   4730 <_Unwind_Resume@plt>
  return deviceExtensions;
    70ca:	90                   	nop
}
    70cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70cf:	48 83 c4 30          	add    $0x30,%rsp
    70d3:	5b                   	pop    %rbx
    70d4:	41 5c                	pop    %r12
    70d6:	5d                   	pop    %rbp
    70d7:	c3                   	ret

00000000000070d8 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    70d8:	55                   	push   %rbp
    70d9:	48 89 e5             	mov    %rsp,%rbp
    70dc:	53                   	push   %rbx
    70dd:	48 83 ec 38          	sub    $0x38,%rsp
    70e1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    70e5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    70e9:	48 89 c7             	mov    %rax,%rdi
    70ec:	e8 7f d1 ff ff       	call   4270 <glfwGetRequiredInstanceExtensions@plt>
    70f1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    70f5:	8b 45 d8             	mov    -0x28(%rbp),%eax
    70f8:	89 c3                	mov    %eax,%ebx
    70fa:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    70fe:	48 89 c7             	mov    %rax,%rdi
    7101:	e8 90 10 00 00       	call   8196 <_ZNSaIPKcEC1Ev>
    7106:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    710a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    710e:	48 89 de             	mov    %rbx,%rsi
    7111:	48 89 c7             	mov    %rax,%rdi
    7114:	e8 b5 10 00 00       	call   81ce <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    7119:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    711d:	48 89 c7             	mov    %rax,%rdi
    7120:	e8 8d 10 00 00       	call   81b2 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7125:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    712c:	eb 2e                	jmp    715c <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    712e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    7131:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7138:	00 
    7139:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    713d:	48 01 d0             	add    %rdx,%rax
    7140:	48 8b 18             	mov    (%rax),%rbx
    7143:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7146:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    714a:	48 89 d6             	mov    %rdx,%rsi
    714d:	48 89 c7             	mov    %rax,%rdi
    7150:	e8 ef 10 00 00       	call   8244 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    7155:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7158:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    715c:	8b 45 d8             	mov    -0x28(%rbp),%eax
    715f:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    7162:	72 ca                	jb     712e <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    7164:	eb 1a                	jmp    7180 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    7166:	48 89 c3             	mov    %rax,%rbx
    7169:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    716d:	48 89 c7             	mov    %rax,%rdi
    7170:	e8 3d 10 00 00       	call   81b2 <_ZNSaIPKcED1Ev>
    7175:	48 89 d8             	mov    %rbx,%rax
    7178:	48 89 c7             	mov    %rax,%rdi
    717b:	e8 b0 d5 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    7180:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7184:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7188:	c9                   	leave
    7189:	c3                   	ret

000000000000718a <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    718a:	55                   	push   %rbp
    718b:	48 89 e5             	mov    %rsp,%rbp
    718e:	53                   	push   %rbx
    718f:	48 83 ec 28          	sub    $0x28,%rsp
    7193:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    7197:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    719b:	be 00 00 00 00       	mov    $0x0,%esi
    71a0:	48 89 c7             	mov    %rax,%rdi
    71a3:	e8 e8 d2 ff ff       	call   4490 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    71a8:	8b 45 e8             	mov    -0x18(%rbp),%eax
    71ab:	89 c3                	mov    %eax,%ebx
    71ad:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71b1:	48 89 c7             	mov    %rax,%rdi
    71b4:	e8 01 0d 00 00       	call   7eba <_ZNSaI17VkLayerPropertiesEC1Ev>
    71b9:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    71bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71c1:	48 89 de             	mov    %rbx,%rsi
    71c4:	48 89 c7             	mov    %rax,%rdi
    71c7:	e8 26 0d 00 00       	call   7ef2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    71cc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71d0:	48 89 c7             	mov    %rax,%rdi
    71d3:	e8 fe 0c 00 00       	call   7ed6 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    71d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71dc:	48 89 c7             	mov    %rax,%rdi
    71df:	e8 c8 0d 00 00       	call   7fac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    71e4:	48 89 c2             	mov    %rax,%rdx
    71e7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    71eb:	48 89 d6             	mov    %rdx,%rsi
    71ee:	48 89 c7             	mov    %rax,%rdi
    71f1:	e8 9a d2 ff ff       	call   4490 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    71f6:	eb 34                	jmp    722c <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    71f8:	48 89 c3             	mov    %rax,%rbx
    71fb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71ff:	48 89 c7             	mov    %rax,%rdi
    7202:	e8 cf 0c 00 00       	call   7ed6 <_ZNSaI17VkLayerPropertiesED1Ev>
    7207:	48 89 d8             	mov    %rbx,%rax
    720a:	48 89 c7             	mov    %rax,%rdi
    720d:	e8 1e d5 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    7212:	48 89 c3             	mov    %rax,%rbx
    7215:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7219:	48 89 c7             	mov    %rax,%rdi
    721c:	e8 47 0d 00 00       	call   7f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7221:	48 89 d8             	mov    %rbx,%rax
    7224:	48 89 c7             	mov    %rax,%rdi
    7227:	e8 04 d5 ff ff       	call   4730 <_Unwind_Resume@plt>
    722c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7230:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7234:	c9                   	leave
    7235:	c3                   	ret

0000000000007236 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    7236:	55                   	push   %rbp
    7237:	48 89 e5             	mov    %rsp,%rbp
    723a:	41 54                	push   %r12
    723c:	53                   	push   %rbx
    723d:	48 83 ec 20          	sub    $0x20,%rsp
    7241:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7245:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    7249:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    724d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7251:	ba 00 00 00 00       	mov    $0x0,%edx
    7256:	48 89 ce             	mov    %rcx,%rsi
    7259:	48 89 c7             	mov    %rax,%rdi
    725c:	e8 3f cf ff ff       	call   41a0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    7261:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7264:	85 c0                	test   %eax,%eax
    7266:	75 3b                	jne    72a3 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    7268:	bf 10 00 00 00       	mov    $0x10,%edi
    726d:	e8 0e cf ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7272:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    7275:	48 8d 05 84 1d 01 00 	lea    0x11d84(%rip),%rax        # 19000 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    727c:	48 89 c6             	mov    %rax,%rsi
    727f:	48 89 df             	mov    %rbx,%rdi
    7282:	e8 89 ce ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    7287:	48 8b 05 1a 0d 02 00 	mov    0x20d1a(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    728e:	48 89 c2             	mov    %rax,%rdx
    7291:	48 8d 05 a8 0a 02 00 	lea    0x20aa8(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7298:	48 89 c6             	mov    %rax,%rsi
    729b:	48 89 df             	mov    %rbx,%rdi
    729e:	e8 2d d4 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    72a3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    72a6:	89 c3                	mov    %eax,%ebx
    72a8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    72ac:	48 89 c7             	mov    %rax,%rdi
    72af:	e8 fe 0f 00 00       	call   82b2 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    72b4:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    72b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72bc:	48 89 de             	mov    %rbx,%rsi
    72bf:	48 89 c7             	mov    %rax,%rdi
    72c2:	e8 23 10 00 00       	call   82ea <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    72c7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    72cb:	48 89 c7             	mov    %rax,%rdi
    72ce:	e8 fb 0f 00 00       	call   82ce <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    72d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72d7:	48 89 c7             	mov    %rax,%rdi
    72da:	e8 c5 10 00 00       	call   83a4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    72df:	48 89 c2             	mov    %rax,%rdx
    72e2:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    72e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    72ea:	48 89 ce             	mov    %rcx,%rsi
    72ed:	48 89 c7             	mov    %rax,%rdi
    72f0:	e8 ab ce ff ff       	call   41a0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    72f5:	85 c0                	test   %eax,%eax
    72f7:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    72fa:	84 c0                	test   %al,%al
    72fc:	0f 84 95 00 00 00    	je     7397 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    7302:	bf 10 00 00 00       	mov    $0x10,%edi
    7307:	e8 74 ce ff ff       	call   4180 <__cxa_allocate_exception@plt>
    730c:	48 89 c3             	mov    %rax,%rbx
    730f:	48 8d 05 22 1d 01 00 	lea    0x11d22(%rip),%rax        # 19038 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    7316:	48 89 c6             	mov    %rax,%rsi
    7319:	48 89 df             	mov    %rbx,%rdi
    731c:	e8 ef cd ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7321:	48 8b 05 80 0c 02 00 	mov    0x20c80(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7328:	48 89 c2             	mov    %rax,%rdx
    732b:	48 8d 05 0e 0a 02 00 	lea    0x20a0e(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7332:	48 89 c6             	mov    %rax,%rsi
    7335:	48 89 df             	mov    %rbx,%rdi
    7338:	e8 93 d3 ff ff       	call   46d0 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    733d:	49 89 c4             	mov    %rax,%r12
    7340:	48 89 df             	mov    %rbx,%rdi
    7343:	e8 08 cf ff ff       	call   4250 <__cxa_free_exception@plt>
    7348:	4c 89 e0             	mov    %r12,%rax
    734b:	48 89 c7             	mov    %rax,%rdi
    734e:	e8 dd d3 ff ff       	call   4730 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7353:	48 89 c3             	mov    %rax,%rbx
    7356:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    735a:	48 89 c7             	mov    %rax,%rdi
    735d:	e8 6c 0f 00 00       	call   82ce <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7362:	48 89 d8             	mov    %rbx,%rax
    7365:	48 89 c7             	mov    %rax,%rdi
    7368:	e8 c3 d3 ff ff       	call   4730 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    736d:	49 89 c4             	mov    %rax,%r12
    7370:	48 89 df             	mov    %rbx,%rdi
    7373:	e8 d8 ce ff ff       	call   4250 <__cxa_free_exception@plt>
    7378:	4c 89 e3             	mov    %r12,%rbx
    737b:	eb 03                	jmp    7380 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    737d:	48 89 c3             	mov    %rax,%rbx
    7380:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7384:	48 89 c7             	mov    %rax,%rdi
    7387:	e8 d4 0f 00 00       	call   8360 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    738c:	48 89 d8             	mov    %rbx,%rax
    738f:	48 89 c7             	mov    %rax,%rdi
    7392:	e8 99 d3 ff ff       	call   4730 <_Unwind_Resume@plt>
  return physicalDevices;
    7397:	90                   	nop
}
    7398:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    739c:	48 83 c4 20          	add    $0x20,%rsp
    73a0:	5b                   	pop    %rbx
    73a1:	41 5c                	pop    %r12
    73a3:	5d                   	pop    %rbp
    73a4:	c3                   	ret

00000000000073a5 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    73a5:	55                   	push   %rbp
    73a6:	48 89 e5             	mov    %rsp,%rbp
    73a9:	48 83 ec 10          	sub    $0x10,%rsp
    73ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    73b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    73b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    73bd:	48 89 d6             	mov    %rdx,%rsi
    73c0:	48 89 c7             	mov    %rax,%rdi
    73c3:	e8 58 cd ff ff       	call   4120 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    73c8:	90                   	nop
}
    73c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73cd:	c9                   	leave
    73ce:	c3                   	ret

00000000000073cf <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    73cf:	55                   	push   %rbp
    73d0:	48 89 e5             	mov    %rsp,%rbp
    73d3:	48 83 ec 20          	sub    $0x20,%rsp
    73d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    73df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    73e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73e7:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    73ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    73f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    73f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    73fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7401:	48 89 d6             	mov    %rdx,%rsi
    7404:	48 89 c7             	mov    %rax,%rdi
    7407:	e8 44 cf ff ff       	call   4350 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    740c:	90                   	nop
}
    740d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7411:	c9                   	leave
    7412:	c3                   	ret

0000000000007413 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7413:	55                   	push   %rbp
    7414:	48 89 e5             	mov    %rsp,%rbp
    7417:	53                   	push   %rbx
    7418:	48 83 ec 28          	sub    $0x28,%rsp
    741c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7420:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    7424:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7428:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    742c:	ba 00 00 00 00       	mov    $0x0,%edx
    7431:	48 89 ce             	mov    %rcx,%rsi
    7434:	48 89 c7             	mov    %rax,%rdi
    7437:	e8 24 ce ff ff       	call   4260 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    743c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    743f:	89 c3                	mov    %eax,%ebx
    7441:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7445:	48 89 c7             	mov    %rax,%rdi
    7448:	e8 c9 0f 00 00       	call   8416 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    744d:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7451:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7455:	48 89 de             	mov    %rbx,%rsi
    7458:	48 89 c7             	mov    %rax,%rdi
    745b:	e8 ee 0f 00 00       	call   844e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    7460:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7464:	48 89 c7             	mov    %rax,%rdi
    7467:	e8 c6 0f 00 00       	call   8432 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    746c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7470:	48 89 c7             	mov    %rax,%rdi
    7473:	e8 90 10 00 00       	call   8508 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    7478:	48 89 c2             	mov    %rax,%rdx
    747b:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    747f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7483:	48 89 ce             	mov    %rcx,%rsi
    7486:	48 89 c7             	mov    %rax,%rdi
    7489:	e8 d2 cd ff ff       	call   4260 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    748e:	eb 34                	jmp    74c4 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    7490:	48 89 c3             	mov    %rax,%rbx
    7493:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7497:	48 89 c7             	mov    %rax,%rdi
    749a:	e8 93 0f 00 00       	call   8432 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    749f:	48 89 d8             	mov    %rbx,%rax
    74a2:	48 89 c7             	mov    %rax,%rdi
    74a5:	e8 86 d2 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    74aa:	48 89 c3             	mov    %rax,%rbx
    74ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74b1:	48 89 c7             	mov    %rax,%rdi
    74b4:	e8 0b 10 00 00       	call   84c4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    74b9:	48 89 d8             	mov    %rbx,%rax
    74bc:	48 89 c7             	mov    %rax,%rdi
    74bf:	e8 6c d2 ff ff       	call   4730 <_Unwind_Resume@plt>
    74c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    74cc:	c9                   	leave
    74cd:	c3                   	ret

00000000000074ce <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    74ce:	55                   	push   %rbp
    74cf:	48 89 e5             	mov    %rsp,%rbp
    74d2:	53                   	push   %rbx
    74d3:	48 83 ec 68          	sub    $0x68,%rsp
    74d7:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    74db:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    74df:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74e3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    74e7:	48 89 d6             	mov    %rdx,%rsi
    74ea:	48 89 c7             	mov    %rax,%rdi
    74ed:	e8 21 ff ff ff       	call   7413 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    74f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74f6:	48 89 c7             	mov    %rax,%rdi
    74f9:	e8 86 10 00 00       	call   8584 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    74fe:	48 89 c3             	mov    %rax,%rbx
    7501:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7505:	48 89 c7             	mov    %rax,%rdi
    7508:	e8 a5 10 00 00       	call   85b2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    750d:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7511:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7515:	48 89 de             	mov    %rbx,%rsi
    7518:	48 89 c7             	mov    %rax,%rdi
    751b:	e8 ca 10 00 00       	call   85ea <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7520:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7524:	48 89 c7             	mov    %rax,%rdi
    7527:	e8 a2 10 00 00       	call   85ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    752c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7533:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7534:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7538:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    753c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7540:	48 89 c7             	mov    %rax,%rdi
    7543:	e8 5c 11 00 00       	call   86a4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7548:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    754c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7550:	48 89 c7             	mov    %rax,%rdi
    7553:	e8 72 11 00 00       	call   86ca <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7558:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    755c:	eb 4e                	jmp    75ac <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    755e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7562:	48 89 c7             	mov    %rax,%rdi
    7565:	e8 e4 11 00 00       	call   874e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    756a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    756e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7572:	8b 00                	mov    (%rax),%eax
    7574:	83 e0 01             	and    $0x1,%eax
    7577:	85 c0                	test   %eax,%eax
    7579:	74 25                	je     75a0 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    757b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    757f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7583:	48 89 d6             	mov    %rdx,%rsi
    7586:	48 89 c7             	mov    %rax,%rdi
    7589:	e8 d2 11 00 00       	call   8760 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    758e:	48 89 c2             	mov    %rax,%rdx
    7591:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7595:	48 89 c6             	mov    %rax,%rsi
    7598:	48 89 d7             	mov    %rdx,%rdi
    759b:	e8 ea 11 00 00       	call   878a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    75a0:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    75a4:	48 89 c7             	mov    %rax,%rdi
    75a7:	e8 82 11 00 00       	call   872e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    75ac:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    75b0:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    75b4:	48 89 d6             	mov    %rdx,%rsi
    75b7:	48 89 c7             	mov    %rax,%rdi
    75ba:	e8 34 11 00 00       	call   86f3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    75bf:	84 c0                	test   %al,%al
    75c1:	75 9b                	jne    755e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    75c3:	90                   	nop
}
    75c4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    75c8:	48 89 c7             	mov    %rax,%rdi
    75cb:	e8 f4 0e 00 00       	call   84c4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    75d0:	eb 26                	jmp    75f8 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    75d2:	48 89 c3             	mov    %rax,%rbx
    75d5:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    75d9:	48 89 c7             	mov    %rax,%rdi
    75dc:	e8 ed 0f 00 00       	call   85ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    75e1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    75e5:	48 89 c7             	mov    %rax,%rdi
    75e8:	e8 d7 0e 00 00       	call   84c4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    75ed:	48 89 d8             	mov    %rbx,%rax
    75f0:	48 89 c7             	mov    %rax,%rdi
    75f3:	e8 38 d1 ff ff       	call   4730 <_Unwind_Resume@plt>
    75f8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    75fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7600:	c9                   	leave
    7601:	c3                   	ret

0000000000007602 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7602:	55                   	push   %rbp
    7603:	48 89 e5             	mov    %rsp,%rbp
    7606:	53                   	push   %rbx
    7607:	48 83 ec 68          	sub    $0x68,%rsp
    760b:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    760f:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7613:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7617:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    761b:	48 89 d6             	mov    %rdx,%rsi
    761e:	48 89 c7             	mov    %rax,%rdi
    7621:	e8 ed fd ff ff       	call   7413 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    7626:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    762a:	48 89 c7             	mov    %rax,%rdi
    762d:	e8 52 0f 00 00       	call   8584 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7632:	48 89 c3             	mov    %rax,%rbx
    7635:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7639:	48 89 c7             	mov    %rax,%rdi
    763c:	e8 71 0f 00 00       	call   85b2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7641:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7645:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7649:	48 89 de             	mov    %rbx,%rsi
    764c:	48 89 c7             	mov    %rax,%rdi
    764f:	e8 96 0f 00 00       	call   85ea <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7654:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7658:	48 89 c7             	mov    %rax,%rdi
    765b:	e8 6e 0f 00 00       	call   85ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    7660:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7667:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7668:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    766c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7670:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7674:	48 89 c7             	mov    %rax,%rdi
    7677:	e8 28 10 00 00       	call   86a4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    767c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7680:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7684:	48 89 c7             	mov    %rax,%rdi
    7687:	e8 3e 10 00 00       	call   86ca <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    768c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7690:	eb 53                	jmp    76e5 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    7692:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7696:	48 89 c7             	mov    %rax,%rdi
    7699:	e8 b0 10 00 00       	call   874e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    769e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    76a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76a6:	8b 00                	mov    (%rax),%eax
    76a8:	83 e0 02             	and    $0x2,%eax
    76ab:	85 c0                	test   %eax,%eax
    76ad:	74 25                	je     76d4 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    76af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    76b3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    76b7:	48 89 d6             	mov    %rdx,%rsi
    76ba:	48 89 c7             	mov    %rax,%rdi
    76bd:	e8 9e 10 00 00       	call   8760 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    76c2:	48 89 c2             	mov    %rax,%rdx
    76c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76c9:	48 89 c6             	mov    %rax,%rsi
    76cc:	48 89 d7             	mov    %rdx,%rdi
    76cf:	e8 b6 10 00 00       	call   878a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    76d4:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    76d9:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    76dd:	48 89 c7             	mov    %rax,%rdi
    76e0:	e8 49 10 00 00       	call   872e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    76e5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    76e9:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    76ed:	48 89 d6             	mov    %rdx,%rsi
    76f0:	48 89 c7             	mov    %rax,%rdi
    76f3:	e8 fb 0f 00 00       	call   86f3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    76f8:	84 c0                	test   %al,%al
    76fa:	75 96                	jne    7692 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    76fc:	90                   	nop
}
    76fd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7701:	48 89 c7             	mov    %rax,%rdi
    7704:	e8 bb 0d 00 00       	call   84c4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    7709:	eb 26                	jmp    7731 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    770b:	48 89 c3             	mov    %rax,%rbx
    770e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7712:	48 89 c7             	mov    %rax,%rdi
    7715:	e8 b4 0e 00 00       	call   85ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    771a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    771e:	48 89 c7             	mov    %rax,%rdi
    7721:	e8 9e 0d 00 00       	call   84c4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7726:	48 89 d8             	mov    %rbx,%rax
    7729:	48 89 c7             	mov    %rax,%rdi
    772c:	e8 ff cf ff ff       	call   4730 <_Unwind_Resume@plt>
    7731:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7735:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7739:	c9                   	leave
    773a:	c3                   	ret

000000000000773b <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    773b:	55                   	push   %rbp
    773c:	48 89 e5             	mov    %rsp,%rbp
    773f:	53                   	push   %rbx
    7740:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    7747:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    774b:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    774f:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7756:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    775a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    775e:	48 89 d6             	mov    %rdx,%rsi
    7761:	48 89 c7             	mov    %rax,%rdi
    7764:	e8 aa fc ff ff       	call   7413 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    7769:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    776d:	48 89 c7             	mov    %rax,%rdi
    7770:	e8 0f 0e 00 00       	call   8584 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7775:	48 89 c3             	mov    %rax,%rbx
    7778:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    777c:	48 89 c7             	mov    %rax,%rdi
    777f:	e8 2e 0e 00 00       	call   85b2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7784:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7788:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    778c:	48 89 de             	mov    %rbx,%rsi
    778f:	48 89 c7             	mov    %rax,%rdi
    7792:	e8 53 0e 00 00       	call   85ea <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7797:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    779b:	48 89 c7             	mov    %rax,%rdi
    779e:	e8 2b 0e 00 00       	call   85ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    77a3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    77aa:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    77ae:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    77b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    77b6:	48 89 c7             	mov    %rax,%rdi
    77b9:	e8 e6 0e 00 00       	call   86a4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    77be:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    77c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    77c6:	48 89 c7             	mov    %rax,%rdi
    77c9:	e8 fc 0e 00 00       	call   86ca <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    77ce:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    77d2:	eb 6c                	jmp    7840 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    77d4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    77d8:	48 89 c7             	mov    %rax,%rdi
    77db:	e8 6e 0f 00 00       	call   874e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    77e0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    77e4:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    77eb:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    77ef:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    77f6:	8b 75 ec             	mov    -0x14(%rbp),%esi
    77f9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    77fd:	48 89 c7             	mov    %rax,%rdi
    7800:	e8 2b cc ff ff       	call   4430 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    7805:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7808:	85 c0                	test   %eax,%eax
    780a:	74 24                	je     7830 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    780c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    780f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7813:	48 89 d6             	mov    %rdx,%rsi
    7816:	48 89 c7             	mov    %rax,%rdi
    7819:	e8 42 0f 00 00       	call   8760 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    781e:	48 89 c2             	mov    %rax,%rdx
    7821:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7825:	48 89 c6             	mov    %rax,%rsi
    7828:	48 89 d7             	mov    %rdx,%rdi
    782b:	e8 5a 0f 00 00       	call   878a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7830:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7834:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7838:	48 89 c7             	mov    %rax,%rdi
    783b:	e8 ee 0e 00 00       	call   872e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7840:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7844:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7848:	48 89 d6             	mov    %rdx,%rsi
    784b:	48 89 c7             	mov    %rax,%rdi
    784e:	e8 a0 0e 00 00       	call   86f3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7853:	84 c0                	test   %al,%al
    7855:	0f 85 79 ff ff ff    	jne    77d4 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    785b:	90                   	nop
}
    785c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7860:	48 89 c7             	mov    %rax,%rdi
    7863:	e8 5c 0c 00 00       	call   84c4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    7868:	eb 37                	jmp    78a1 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    786a:	48 89 c3             	mov    %rax,%rbx
    786d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7871:	48 89 c7             	mov    %rax,%rdi
    7874:	e8 55 0d 00 00       	call   85ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7879:	eb 0f                	jmp    788a <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    787b:	48 89 c3             	mov    %rax,%rbx
    787e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7882:	48 89 c7             	mov    %rax,%rdi
    7885:	e8 d6 0d 00 00       	call   8660 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    788a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    788e:	48 89 c7             	mov    %rax,%rdi
    7891:	e8 2e 0c 00 00       	call   84c4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7896:	48 89 d8             	mov    %rbx,%rax
    7899:	48 89 c7             	mov    %rax,%rdi
    789c:	e8 8f ce ff ff       	call   4730 <_Unwind_Resume@plt>
    78a1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    78a5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    78a9:	c9                   	leave
    78aa:	c3                   	ret

00000000000078ab <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    78ab:	55                   	push   %rbp
    78ac:	48 89 e5             	mov    %rsp,%rbp
    78af:	41 54                	push   %r12
    78b1:	53                   	push   %rbx
    78b2:	48 83 ec 20          	sub    $0x20,%rsp
    78b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    78ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    78be:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    78c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78c6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    78ca:	0f 11 00             	movups %xmm0,(%rax)
    78cd:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    78d1:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    78d5:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    78da:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78de:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    78e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78e6:	48 89 ce             	mov    %rcx,%rsi
    78e9:	48 89 c7             	mov    %rax,%rdi
    78ec:	e8 0f ca ff ff       	call   4300 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    78f1:	85 c0                	test   %eax,%eax
    78f3:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    78f6:	84 c0                	test   %al,%al
    78f8:	74 51                	je     794b <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    78fa:	bf 10 00 00 00       	mov    $0x10,%edi
    78ff:	e8 7c c8 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7904:	48 89 c3             	mov    %rax,%rbx
    7907:	48 8d 05 52 17 01 00 	lea    0x11752(%rip),%rax        # 19060 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    790e:	48 89 c6             	mov    %rax,%rsi
    7911:	48 89 df             	mov    %rbx,%rdi
    7914:	e8 f7 c7 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7919:	48 8b 05 88 06 02 00 	mov    0x20688(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7920:	48 89 c2             	mov    %rax,%rdx
    7923:	48 8d 05 16 04 02 00 	lea    0x20416(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    792a:	48 89 c6             	mov    %rax,%rsi
    792d:	48 89 df             	mov    %rbx,%rdi
    7930:	e8 9b cd ff ff       	call   46d0 <__cxa_throw@plt>
    7935:	49 89 c4             	mov    %rax,%r12
    7938:	48 89 df             	mov    %rbx,%rdi
    793b:	e8 10 c9 ff ff       	call   4250 <__cxa_free_exception@plt>
    7940:	4c 89 e0             	mov    %r12,%rax
    7943:	48 89 c7             	mov    %rax,%rdi
    7946:	e8 e5 cd ff ff       	call   4730 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    794b:	90                   	nop
}
    794c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7950:	48 83 c4 20          	add    $0x20,%rsp
    7954:	5b                   	pop    %rbx
    7955:	41 5c                	pop    %r12
    7957:	5d                   	pop    %rbp
    7958:	c3                   	ret

0000000000007959 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    7959:	55                   	push   %rbp
    795a:	48 89 e5             	mov    %rsp,%rbp
    795d:	41 54                	push   %r12
    795f:	53                   	push   %rbx
    7960:	48 83 ec 30          	sub    $0x30,%rsp
    7964:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7968:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    796c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7970:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7974:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7978:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    797c:	b9 00 00 00 00       	mov    $0x0,%ecx
    7981:	48 89 c7             	mov    %rax,%rdi
    7984:	e8 b7 cb ff ff       	call   4540 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    7989:	85 c0                	test   %eax,%eax
    798b:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    798e:	84 c0                	test   %al,%al
    7990:	74 3b                	je     79cd <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    7992:	bf 10 00 00 00       	mov    $0x10,%edi
    7997:	e8 e4 c7 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    799c:	48 89 c3             	mov    %rax,%rbx
    799f:	48 8d 05 e2 16 01 00 	lea    0x116e2(%rip),%rax        # 19088 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    79a6:	48 89 c6             	mov    %rax,%rsi
    79a9:	48 89 df             	mov    %rbx,%rdi
    79ac:	e8 5f c7 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    79b1:	48 8b 05 f0 05 02 00 	mov    0x205f0(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    79b8:	48 89 c2             	mov    %rax,%rdx
    79bb:	48 8d 05 7e 03 02 00 	lea    0x2037e(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    79c2:	48 89 c6             	mov    %rax,%rsi
    79c5:	48 89 df             	mov    %rbx,%rdi
    79c8:	e8 03 cd ff ff       	call   46d0 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    79cd:	8b 45 e8             	mov    -0x18(%rbp),%eax
    79d0:	89 c3                	mov    %eax,%ebx
    79d2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    79d6:	48 89 c7             	mov    %rax,%rdi
    79d9:	e8 84 0e 00 00       	call   8862 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    79de:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    79e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79e6:	48 89 de             	mov    %rbx,%rsi
    79e9:	48 89 c7             	mov    %rax,%rdi
    79ec:	e8 a9 0e 00 00       	call   889a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    79f1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    79f5:	48 89 c7             	mov    %rax,%rdi
    79f8:	e8 81 0e 00 00       	call   887e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    79fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a01:	48 89 c7             	mov    %rax,%rdi
    7a04:	e8 4b 0f 00 00       	call   8954 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    7a09:	48 89 c1             	mov    %rax,%rcx
    7a0c:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7a10:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7a14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a18:	48 89 c7             	mov    %rax,%rdi
    7a1b:	e8 20 cb ff ff       	call   4540 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    7a20:	85 c0                	test   %eax,%eax
    7a22:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7a25:	84 c0                	test   %al,%al
    7a27:	0f 84 95 00 00 00    	je     7ac2 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    7a2d:	bf 10 00 00 00       	mov    $0x10,%edi
    7a32:	e8 49 c7 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7a37:	48 89 c3             	mov    %rax,%rbx
    7a3a:	48 8d 05 47 16 01 00 	lea    0x11647(%rip),%rax        # 19088 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7a41:	48 89 c6             	mov    %rax,%rsi
    7a44:	48 89 df             	mov    %rbx,%rdi
    7a47:	e8 c4 c6 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7a4c:	48 8b 05 55 05 02 00 	mov    0x20555(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7a53:	48 89 c2             	mov    %rax,%rdx
    7a56:	48 8d 05 e3 02 02 00 	lea    0x202e3(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7a5d:	48 89 c6             	mov    %rax,%rsi
    7a60:	48 89 df             	mov    %rbx,%rdi
    7a63:	e8 68 cc ff ff       	call   46d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7a68:	49 89 c4             	mov    %rax,%r12
    7a6b:	48 89 df             	mov    %rbx,%rdi
    7a6e:	e8 dd c7 ff ff       	call   4250 <__cxa_free_exception@plt>
    7a73:	4c 89 e0             	mov    %r12,%rax
    7a76:	48 89 c7             	mov    %rax,%rdi
    7a79:	e8 b2 cc ff ff       	call   4730 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7a7e:	48 89 c3             	mov    %rax,%rbx
    7a81:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a85:	48 89 c7             	mov    %rax,%rdi
    7a88:	e8 f1 0d 00 00       	call   887e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7a8d:	48 89 d8             	mov    %rbx,%rax
    7a90:	48 89 c7             	mov    %rax,%rdi
    7a93:	e8 98 cc ff ff       	call   4730 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7a98:	49 89 c4             	mov    %rax,%r12
    7a9b:	48 89 df             	mov    %rbx,%rdi
    7a9e:	e8 ad c7 ff ff       	call   4250 <__cxa_free_exception@plt>
    7aa3:	4c 89 e3             	mov    %r12,%rbx
    7aa6:	eb 03                	jmp    7aab <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    7aa8:	48 89 c3             	mov    %rax,%rbx
    7aab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7aaf:	48 89 c7             	mov    %rax,%rdi
    7ab2:	e8 59 0e 00 00       	call   8910 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    7ab7:	48 89 d8             	mov    %rbx,%rax
    7aba:	48 89 c7             	mov    %rax,%rdi
    7abd:	e8 6e cc ff ff       	call   4730 <_Unwind_Resume@plt>
  return surfaceFormats;
    7ac2:	90                   	nop
}
    7ac3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ac7:	48 83 c4 30          	add    $0x30,%rsp
    7acb:	5b                   	pop    %rbx
    7acc:	41 5c                	pop    %r12
    7ace:	5d                   	pop    %rbp
    7acf:	c3                   	ret

0000000000007ad0 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    7ad0:	55                   	push   %rbp
    7ad1:	48 89 e5             	mov    %rsp,%rbp
    7ad4:	41 54                	push   %r12
    7ad6:	53                   	push   %rbx
    7ad7:	48 83 ec 30          	sub    $0x30,%rsp
    7adb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7adf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7ae3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    7ae7:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7aeb:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7aef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7af3:	b9 00 00 00 00       	mov    $0x0,%ecx
    7af8:	48 89 c7             	mov    %rax,%rdi
    7afb:	e8 50 ca ff ff       	call   4550 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7b00:	85 c0                	test   %eax,%eax
    7b02:	0f 95 c0             	setne  %al
    7b05:	84 c0                	test   %al,%al
    7b07:	74 3b                	je     7b44 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7b09:	bf 10 00 00 00       	mov    $0x10,%edi
    7b0e:	e8 6d c6 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7b13:	48 89 c3             	mov    %rax,%rbx
    7b16:	48 8d 05 93 15 01 00 	lea    0x11593(%rip),%rax        # 190b0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7b1d:	48 89 c6             	mov    %rax,%rsi
    7b20:	48 89 df             	mov    %rbx,%rdi
    7b23:	e8 e8 c5 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7b28:	48 8b 05 79 04 02 00 	mov    0x20479(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7b2f:	48 89 c2             	mov    %rax,%rdx
    7b32:	48 8d 05 07 02 02 00 	lea    0x20207(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7b39:	48 89 c6             	mov    %rax,%rsi
    7b3c:	48 89 df             	mov    %rbx,%rdi
    7b3f:	e8 8c cb ff ff       	call   46d0 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7b44:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7b47:	89 c3                	mov    %eax,%ebx
    7b49:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b4d:	48 89 c7             	mov    %rax,%rdi
    7b50:	e8 71 0e 00 00       	call   89c6 <_ZNSaI16VkPresentModeKHREC1Ev>
    7b55:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7b59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b5d:	48 89 de             	mov    %rbx,%rsi
    7b60:	48 89 c7             	mov    %rax,%rdi
    7b63:	e8 96 0e 00 00       	call   89fe <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    7b68:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b6c:	48 89 c7             	mov    %rax,%rdi
    7b6f:	e8 6e 0e 00 00       	call   89e2 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    7b74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b78:	48 89 c7             	mov    %rax,%rdi
    7b7b:	e8 38 0f 00 00       	call   8ab8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7b80:	48 89 c1             	mov    %rax,%rcx
    7b83:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7b87:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7b8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b8f:	48 89 c7             	mov    %rax,%rdi
    7b92:	e8 b9 c9 ff ff       	call   4550 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7b97:	85 c0                	test   %eax,%eax
    7b99:	0f 95 c0             	setne  %al
    7b9c:	84 c0                	test   %al,%al
    7b9e:	0f 84 95 00 00 00    	je     7c39 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7ba4:	bf 10 00 00 00       	mov    $0x10,%edi
    7ba9:	e8 d2 c5 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7bae:	48 89 c3             	mov    %rax,%rbx
    7bb1:	48 8d 05 f8 14 01 00 	lea    0x114f8(%rip),%rax        # 190b0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7bb8:	48 89 c6             	mov    %rax,%rsi
    7bbb:	48 89 df             	mov    %rbx,%rdi
    7bbe:	e8 4d c5 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7bc3:	48 8b 05 de 03 02 00 	mov    0x203de(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7bca:	48 89 c2             	mov    %rax,%rdx
    7bcd:	48 8d 05 6c 01 02 00 	lea    0x2016c(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7bd4:	48 89 c6             	mov    %rax,%rsi
    7bd7:	48 89 df             	mov    %rbx,%rdi
    7bda:	e8 f1 ca ff ff       	call   46d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7bdf:	49 89 c4             	mov    %rax,%r12
    7be2:	48 89 df             	mov    %rbx,%rdi
    7be5:	e8 66 c6 ff ff       	call   4250 <__cxa_free_exception@plt>
    7bea:	4c 89 e0             	mov    %r12,%rax
    7bed:	48 89 c7             	mov    %rax,%rdi
    7bf0:	e8 3b cb ff ff       	call   4730 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7bf5:	48 89 c3             	mov    %rax,%rbx
    7bf8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7bfc:	48 89 c7             	mov    %rax,%rdi
    7bff:	e8 de 0d 00 00       	call   89e2 <_ZNSaI16VkPresentModeKHRED1Ev>
    7c04:	48 89 d8             	mov    %rbx,%rax
    7c07:	48 89 c7             	mov    %rax,%rdi
    7c0a:	e8 21 cb ff ff       	call   4730 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7c0f:	49 89 c4             	mov    %rax,%r12
    7c12:	48 89 df             	mov    %rbx,%rdi
    7c15:	e8 36 c6 ff ff       	call   4250 <__cxa_free_exception@plt>
    7c1a:	4c 89 e3             	mov    %r12,%rbx
    7c1d:	eb 03                	jmp    7c22 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    7c1f:	48 89 c3             	mov    %rax,%rbx
    7c22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c26:	48 89 c7             	mov    %rax,%rdi
    7c29:	e8 46 0e 00 00       	call   8a74 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    7c2e:	48 89 d8             	mov    %rbx,%rax
    7c31:	48 89 c7             	mov    %rax,%rdi
    7c34:	e8 f7 ca ff ff       	call   4730 <_Unwind_Resume@plt>
  return presentModes;
    7c39:	90                   	nop
}
    7c3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c3e:	48 83 c4 30          	add    $0x30,%rsp
    7c42:	5b                   	pop    %rbx
    7c43:	41 5c                	pop    %r12
    7c45:	5d                   	pop    %rbp
    7c46:	c3                   	ret

0000000000007c47 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    7c47:	55                   	push   %rbp
    7c48:	48 89 e5             	mov    %rsp,%rbp
    7c4b:	41 54                	push   %r12
    7c4d:	53                   	push   %rbx
    7c4e:	48 83 ec 30          	sub    $0x30,%rsp
    7c52:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7c56:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7c5a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7c5e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7c62:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7c66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c6a:	b9 00 00 00 00       	mov    $0x0,%ecx
    7c6f:	48 89 c7             	mov    %rax,%rdi
    7c72:	e8 59 c5 ff ff       	call   41d0 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    7c77:	85 c0                	test   %eax,%eax
    7c79:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7c7c:	84 c0                	test   %al,%al
    7c7e:	74 3b                	je     7cbb <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    7c80:	bf 10 00 00 00       	mov    $0x10,%edi
    7c85:	e8 f6 c4 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7c8a:	48 89 c3             	mov    %rax,%rbx
    7c8d:	48 8d 05 4c 14 01 00 	lea    0x1144c(%rip),%rax        # 190e0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7c94:	48 89 c6             	mov    %rax,%rsi
    7c97:	48 89 df             	mov    %rbx,%rdi
    7c9a:	e8 71 c4 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7c9f:	48 8b 05 02 03 02 00 	mov    0x20302(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7ca6:	48 89 c2             	mov    %rax,%rdx
    7ca9:	48 8d 05 90 00 02 00 	lea    0x20090(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7cb0:	48 89 c6             	mov    %rax,%rsi
    7cb3:	48 89 df             	mov    %rbx,%rdi
    7cb6:	e8 15 ca ff ff       	call   46d0 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7cbb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7cbe:	89 c3                	mov    %eax,%ebx
    7cc0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7cc4:	48 89 c7             	mov    %rax,%rdi
    7cc7:	e8 5e 0e 00 00       	call   8b2a <_ZNSaIP9VkImage_TEC1Ev>
    7ccc:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7cd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cd4:	48 89 de             	mov    %rbx,%rsi
    7cd7:	48 89 c7             	mov    %rax,%rdi
    7cda:	e8 83 0e 00 00       	call   8b62 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    7cdf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7ce3:	48 89 c7             	mov    %rax,%rdi
    7ce6:	e8 5b 0e 00 00       	call   8b46 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7ceb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cef:	48 89 c7             	mov    %rax,%rdi
    7cf2:	e8 25 0f 00 00       	call   8c1c <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    7cf7:	48 89 c1             	mov    %rax,%rcx
    7cfa:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7cfe:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7d02:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d06:	48 89 c7             	mov    %rax,%rdi
    7d09:	e8 c2 c4 ff ff       	call   41d0 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    7d0e:	85 c0                	test   %eax,%eax
    7d10:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7d13:	84 c0                	test   %al,%al
    7d15:	0f 84 95 00 00 00    	je     7db0 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    7d1b:	bf 10 00 00 00       	mov    $0x10,%edi
    7d20:	e8 5b c4 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7d25:	48 89 c3             	mov    %rax,%rbx
    7d28:	48 8d 05 b1 13 01 00 	lea    0x113b1(%rip),%rax        # 190e0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7d2f:	48 89 c6             	mov    %rax,%rsi
    7d32:	48 89 df             	mov    %rbx,%rdi
    7d35:	e8 d6 c3 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7d3a:	48 8b 05 67 02 02 00 	mov    0x20267(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7d41:	48 89 c2             	mov    %rax,%rdx
    7d44:	48 8d 05 f5 ff 01 00 	lea    0x1fff5(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7d4b:	48 89 c6             	mov    %rax,%rsi
    7d4e:	48 89 df             	mov    %rbx,%rdi
    7d51:	e8 7a c9 ff ff       	call   46d0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7d56:	49 89 c4             	mov    %rax,%r12
    7d59:	48 89 df             	mov    %rbx,%rdi
    7d5c:	e8 ef c4 ff ff       	call   4250 <__cxa_free_exception@plt>
    7d61:	4c 89 e0             	mov    %r12,%rax
    7d64:	48 89 c7             	mov    %rax,%rdi
    7d67:	e8 c4 c9 ff ff       	call   4730 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7d6c:	48 89 c3             	mov    %rax,%rbx
    7d6f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7d73:	48 89 c7             	mov    %rax,%rdi
    7d76:	e8 cb 0d 00 00       	call   8b46 <_ZNSaIP9VkImage_TED1Ev>
    7d7b:	48 89 d8             	mov    %rbx,%rax
    7d7e:	48 89 c7             	mov    %rax,%rdi
    7d81:	e8 aa c9 ff ff       	call   4730 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7d86:	49 89 c4             	mov    %rax,%r12
    7d89:	48 89 df             	mov    %rbx,%rdi
    7d8c:	e8 bf c4 ff ff       	call   4250 <__cxa_free_exception@plt>
    7d91:	4c 89 e3             	mov    %r12,%rbx
    7d94:	eb 03                	jmp    7d99 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    7d96:	48 89 c3             	mov    %rax,%rbx
    7d99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d9d:	48 89 c7             	mov    %rax,%rdi
    7da0:	e8 33 0e 00 00       	call   8bd8 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7da5:	48 89 d8             	mov    %rbx,%rax
    7da8:	48 89 c7             	mov    %rax,%rdi
    7dab:	e8 80 c9 ff ff       	call   4730 <_Unwind_Resume@plt>
  return swapchainImages;
    7db0:	90                   	nop
}
    7db1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7db5:	48 83 c4 30          	add    $0x30,%rsp
    7db9:	5b                   	pop    %rbx
    7dba:	41 5c                	pop    %r12
    7dbc:	5d                   	pop    %rbp
    7dbd:	c3                   	ret

0000000000007dbe <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7dbe:	55                   	push   %rbp
    7dbf:	48 89 e5             	mov    %rsp,%rbp
    7dc2:	48 83 ec 10          	sub    $0x10,%rsp
    7dc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dce:	48 89 c7             	mov    %rax,%rdi
    7dd1:	e8 00 01 00 00       	call   7ed6 <_ZNSaI17VkLayerPropertiesED1Ev>
    7dd6:	90                   	nop
    7dd7:	c9                   	leave
    7dd8:	c3                   	ret
    7dd9:	90                   	nop

0000000000007dda <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7dda:	55                   	push   %rbp
    7ddb:	48 89 e5             	mov    %rsp,%rbp
    7dde:	48 83 ec 10          	sub    $0x10,%rsp
    7de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dea:	48 89 c7             	mov    %rax,%rdi
    7ded:	e8 52 02 00 00       	call   8044 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7df2:	90                   	nop
    7df3:	c9                   	leave
    7df4:	c3                   	ret
    7df5:	90                   	nop

0000000000007df6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    7df6:	55                   	push   %rbp
    7df7:	48 89 e5             	mov    %rsp,%rbp
    7dfa:	48 83 ec 10          	sub    $0x10,%rsp
    7dfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e06:	48 89 c7             	mov    %rax,%rdi
    7e09:	e8 a4 03 00 00       	call   81b2 <_ZNSaIPKcED1Ev>
    7e0e:	90                   	nop
    7e0f:	c9                   	leave
    7e10:	c3                   	ret
    7e11:	90                   	nop

0000000000007e12 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    7e12:	55                   	push   %rbp
    7e13:	48 89 e5             	mov    %rsp,%rbp
    7e16:	48 83 ec 10          	sub    $0x10,%rsp
    7e1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e22:	48 89 c7             	mov    %rax,%rdi
    7e25:	e8 a4 04 00 00       	call   82ce <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7e2a:	90                   	nop
    7e2b:	c9                   	leave
    7e2c:	c3                   	ret
    7e2d:	90                   	nop

0000000000007e2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7e2e:	55                   	push   %rbp
    7e2f:	48 89 e5             	mov    %rsp,%rbp
    7e32:	48 83 ec 10          	sub    $0x10,%rsp
    7e36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e3e:	48 89 c7             	mov    %rax,%rdi
    7e41:	e8 ec 05 00 00       	call   8432 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7e46:	90                   	nop
    7e47:	c9                   	leave
    7e48:	c3                   	ret
    7e49:	90                   	nop

0000000000007e4a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    7e4a:	55                   	push   %rbp
    7e4b:	48 89 e5             	mov    %rsp,%rbp
    7e4e:	48 83 ec 10          	sub    $0x10,%rsp
    7e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e5a:	48 89 c7             	mov    %rax,%rdi
    7e5d:	e8 6c 07 00 00       	call   85ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7e62:	90                   	nop
    7e63:	c9                   	leave
    7e64:	c3                   	ret
    7e65:	90                   	nop

0000000000007e66 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    7e66:	55                   	push   %rbp
    7e67:	48 89 e5             	mov    %rsp,%rbp
    7e6a:	48 83 ec 10          	sub    $0x10,%rsp
    7e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e76:	48 89 c7             	mov    %rax,%rdi
    7e79:	e8 00 0a 00 00       	call   887e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7e7e:	90                   	nop
    7e7f:	c9                   	leave
    7e80:	c3                   	ret
    7e81:	90                   	nop

0000000000007e82 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    7e82:	55                   	push   %rbp
    7e83:	48 89 e5             	mov    %rsp,%rbp
    7e86:	48 83 ec 10          	sub    $0x10,%rsp
    7e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e92:	48 89 c7             	mov    %rax,%rdi
    7e95:	e8 48 0b 00 00       	call   89e2 <_ZNSaI16VkPresentModeKHRED1Ev>
    7e9a:	90                   	nop
    7e9b:	c9                   	leave
    7e9c:	c3                   	ret
    7e9d:	90                   	nop

0000000000007e9e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    7e9e:	55                   	push   %rbp
    7e9f:	48 89 e5             	mov    %rsp,%rbp
    7ea2:	48 83 ec 10          	sub    $0x10,%rsp
    7ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7eaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eae:	48 89 c7             	mov    %rax,%rdi
    7eb1:	e8 90 0c 00 00       	call   8b46 <_ZNSaIP9VkImage_TED1Ev>
    7eb6:	90                   	nop
    7eb7:	c9                   	leave
    7eb8:	c3                   	ret
    7eb9:	90                   	nop

0000000000007eba <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7eba:	55                   	push   %rbp
    7ebb:	48 89 e5             	mov    %rsp,%rbp
    7ebe:	48 83 ec 10          	sub    $0x10,%rsp
    7ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eca:	48 89 c7             	mov    %rax,%rdi
    7ecd:	e8 bc 0d 00 00       	call   8c8e <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    7ed2:	90                   	nop
    7ed3:	c9                   	leave
    7ed4:	c3                   	ret
    7ed5:	90                   	nop

0000000000007ed6 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7ed6:	55                   	push   %rbp
    7ed7:	48 89 e5             	mov    %rsp,%rbp
    7eda:	48 83 ec 10          	sub    $0x10,%rsp
    7ede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ee6:	48 89 c7             	mov    %rax,%rdi
    7ee9:	e8 ac 0d 00 00       	call   8c9a <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    7eee:	90                   	nop
    7eef:	c9                   	leave
    7ef0:	c3                   	ret
    7ef1:	90                   	nop

0000000000007ef2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7ef2:	55                   	push   %rbp
    7ef3:	48 89 e5             	mov    %rsp,%rbp
    7ef6:	53                   	push   %rbx
    7ef7:	48 83 ec 28          	sub    $0x28,%rsp
    7efb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7eff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7f03:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7f07:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7f0b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7f0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f13:	48 89 d6             	mov    %rdx,%rsi
    7f16:	48 89 c7             	mov    %rax,%rdi
    7f19:	e8 87 0d 00 00       	call   8ca5 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7f1e:	48 89 c1             	mov    %rax,%rcx
    7f21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f25:	48 89 c2             	mov    %rax,%rdx
    7f28:	48 89 ce             	mov    %rcx,%rsi
    7f2b:	48 89 df             	mov    %rbx,%rdi
    7f2e:	e8 d3 0d 00 00       	call   8d06 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7f33:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7f37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f3b:	48 89 d6             	mov    %rdx,%rsi
    7f3e:	48 89 c7             	mov    %rax,%rdi
    7f41:	e8 1e 0e 00 00       	call   8d64 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    7f46:	eb 1a                	jmp    7f62 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7f48:	48 89 c3             	mov    %rax,%rbx
    7f4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f4f:	48 89 c7             	mov    %rax,%rdi
    7f52:	e8 79 00 00 00       	call   7fd0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7f57:	48 89 d8             	mov    %rbx,%rax
    7f5a:	48 89 c7             	mov    %rax,%rdi
    7f5d:	e8 ce c7 ff ff       	call   4730 <_Unwind_Resume@plt>
    7f62:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f66:	c9                   	leave
    7f67:	c3                   	ret

0000000000007f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7f68:	55                   	push   %rbp
    7f69:	48 89 e5             	mov    %rsp,%rbp
    7f6c:	48 83 ec 10          	sub    $0x10,%rsp
    7f70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f78:	48 89 c7             	mov    %rax,%rdi
    7f7b:	e8 24 0e 00 00       	call   8da4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7f80:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7f83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f87:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f8f:	48 8b 00             	mov    (%rax),%rax
    7f92:	48 89 ce             	mov    %rcx,%rsi
    7f95:	48 89 c7             	mov    %rax,%rdi
    7f98:	e8 15 0e 00 00       	call   8db2 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7f9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fa1:	48 89 c7             	mov    %rax,%rdi
    7fa4:	e8 27 00 00 00       	call   7fd0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7fa9:	90                   	nop
    7faa:	c9                   	leave
    7fab:	c3                   	ret

0000000000007fac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7fac:	55                   	push   %rbp
    7fad:	48 89 e5             	mov    %rsp,%rbp
    7fb0:	48 83 ec 10          	sub    $0x10,%rsp
    7fb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7fb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fbc:	48 8b 10             	mov    (%rax),%rdx
    7fbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc3:	48 89 d6             	mov    %rdx,%rsi
    7fc6:	48 89 c7             	mov    %rax,%rdi
    7fc9:	e8 0e 0e 00 00       	call   8ddc <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7fce:	c9                   	leave
    7fcf:	c3                   	ret

0000000000007fd0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7fd0:	55                   	push   %rbp
    7fd1:	48 89 e5             	mov    %rsp,%rbp
    7fd4:	48 83 ec 10          	sub    $0x10,%rsp
    7fd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7fdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fe0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7fe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fe8:	48 8b 00             	mov    (%rax),%rax
    7feb:	48 29 c2             	sub    %rax,%rdx
    7fee:	48 c1 fa 03          	sar    $0x3,%rdx
    7ff2:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7ff9:	fc c0 0f 
    7ffc:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8000:	48 89 c2             	mov    %rax,%rdx
    8003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8007:	48 8b 08             	mov    (%rax),%rcx
    800a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800e:	48 89 ce             	mov    %rcx,%rsi
    8011:	48 89 c7             	mov    %rax,%rdi
    8014:	e8 fb 0d 00 00       	call   8e14 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8019:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    801d:	48 89 c7             	mov    %rax,%rdi
    8020:	e8 99 fd ff ff       	call   7dbe <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8025:	90                   	nop
    8026:	c9                   	leave
    8027:	c3                   	ret

0000000000008028 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8028:	55                   	push   %rbp
    8029:	48 89 e5             	mov    %rsp,%rbp
    802c:	48 83 ec 10          	sub    $0x10,%rsp
    8030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8038:	48 89 c7             	mov    %rax,%rdi
    803b:	e8 0a 0e 00 00       	call   8e4a <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    8040:	90                   	nop
    8041:	c9                   	leave
    8042:	c3                   	ret
    8043:	90                   	nop

0000000000008044 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8044:	55                   	push   %rbp
    8045:	48 89 e5             	mov    %rsp,%rbp
    8048:	48 83 ec 10          	sub    $0x10,%rsp
    804c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8054:	48 89 c7             	mov    %rax,%rdi
    8057:	e8 fa 0d 00 00       	call   8e56 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    805c:	90                   	nop
    805d:	c9                   	leave
    805e:	c3                   	ret
    805f:	90                   	nop

0000000000008060 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8060:	55                   	push   %rbp
    8061:	48 89 e5             	mov    %rsp,%rbp
    8064:	53                   	push   %rbx
    8065:	48 83 ec 28          	sub    $0x28,%rsp
    8069:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    806d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8071:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8075:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8079:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    807d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8081:	48 89 d6             	mov    %rdx,%rsi
    8084:	48 89 c7             	mov    %rax,%rdi
    8087:	e8 d5 0d 00 00       	call   8e61 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    808c:	48 89 c1             	mov    %rax,%rcx
    808f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8093:	48 89 c2             	mov    %rax,%rdx
    8096:	48 89 ce             	mov    %rcx,%rsi
    8099:	48 89 df             	mov    %rbx,%rdi
    809c:	e8 21 0e 00 00       	call   8ec2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    80a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    80a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80a9:	48 89 d6             	mov    %rdx,%rsi
    80ac:	48 89 c7             	mov    %rax,%rdi
    80af:	e8 6c 0e 00 00       	call   8f20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    80b4:	eb 1a                	jmp    80d0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    80b6:	48 89 c3             	mov    %rax,%rbx
    80b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80bd:	48 89 c7             	mov    %rax,%rdi
    80c0:	e8 79 00 00 00       	call   813e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    80c5:	48 89 d8             	mov    %rbx,%rax
    80c8:	48 89 c7             	mov    %rax,%rdi
    80cb:	e8 60 c6 ff ff       	call   4730 <_Unwind_Resume@plt>
    80d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    80d4:	c9                   	leave
    80d5:	c3                   	ret

00000000000080d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    80d6:	55                   	push   %rbp
    80d7:	48 89 e5             	mov    %rsp,%rbp
    80da:	48 83 ec 10          	sub    $0x10,%rsp
    80de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    80e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80e6:	48 89 c7             	mov    %rax,%rdi
    80e9:	e8 72 0e 00 00       	call   8f60 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    80ee:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    80f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80f5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    80f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80fd:	48 8b 00             	mov    (%rax),%rax
    8100:	48 89 ce             	mov    %rcx,%rsi
    8103:	48 89 c7             	mov    %rax,%rdi
    8106:	e8 63 0e 00 00       	call   8f6e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    810b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    810f:	48 89 c7             	mov    %rax,%rdi
    8112:	e8 27 00 00 00       	call   813e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8117:	90                   	nop
    8118:	c9                   	leave
    8119:	c3                   	ret

000000000000811a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    811a:	55                   	push   %rbp
    811b:	48 89 e5             	mov    %rsp,%rbp
    811e:	48 83 ec 10          	sub    $0x10,%rsp
    8122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    812a:	48 8b 10             	mov    (%rax),%rdx
    812d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8131:	48 89 d6             	mov    %rdx,%rsi
    8134:	48 89 c7             	mov    %rax,%rdi
    8137:	e8 5c 0e 00 00       	call   8f98 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    813c:	c9                   	leave
    813d:	c3                   	ret

000000000000813e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    813e:	55                   	push   %rbp
    813f:	48 89 e5             	mov    %rsp,%rbp
    8142:	48 83 ec 10          	sub    $0x10,%rsp
    8146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    814a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    814e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8156:	48 8b 00             	mov    (%rax),%rax
    8159:	48 29 c2             	sub    %rax,%rdx
    815c:	48 c1 fa 02          	sar    $0x2,%rdx
    8160:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    8167:	fc c0 0f 
    816a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    816e:	48 89 c2             	mov    %rax,%rdx
    8171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8175:	48 8b 08             	mov    (%rax),%rcx
    8178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    817c:	48 89 ce             	mov    %rcx,%rsi
    817f:	48 89 c7             	mov    %rax,%rdi
    8182:	e8 49 0e 00 00       	call   8fd0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    818b:	48 89 c7             	mov    %rax,%rdi
    818e:	e8 47 fc ff ff       	call   7dda <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8193:	90                   	nop
    8194:	c9                   	leave
    8195:	c3                   	ret

0000000000008196 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8196:	55                   	push   %rbp
    8197:	48 89 e5             	mov    %rsp,%rbp
    819a:	48 83 ec 10          	sub    $0x10,%rsp
    819e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81a6:	48 89 c7             	mov    %rax,%rdi
    81a9:	e8 58 0e 00 00       	call   9006 <_ZNSt15__new_allocatorIPKcEC1Ev>
    81ae:	90                   	nop
    81af:	c9                   	leave
    81b0:	c3                   	ret
    81b1:	90                   	nop

00000000000081b2 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    81b2:	55                   	push   %rbp
    81b3:	48 89 e5             	mov    %rsp,%rbp
    81b6:	48 83 ec 10          	sub    $0x10,%rsp
    81ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81c2:	48 89 c7             	mov    %rax,%rdi
    81c5:	e8 48 0e 00 00       	call   9012 <_ZNSt15__new_allocatorIPKcED1Ev>
    81ca:	90                   	nop
    81cb:	c9                   	leave
    81cc:	c3                   	ret
    81cd:	90                   	nop

00000000000081ce <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    81ce:	55                   	push   %rbp
    81cf:	48 89 e5             	mov    %rsp,%rbp
    81d2:	53                   	push   %rbx
    81d3:	48 83 ec 28          	sub    $0x28,%rsp
    81d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    81db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    81df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    81e3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    81e7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    81eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81ef:	48 89 d6             	mov    %rdx,%rsi
    81f2:	48 89 c7             	mov    %rax,%rdi
    81f5:	e8 23 0e 00 00       	call   901d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    81fa:	48 89 c1             	mov    %rax,%rcx
    81fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8201:	48 89 c2             	mov    %rax,%rdx
    8204:	48 89 ce             	mov    %rcx,%rsi
    8207:	48 89 df             	mov    %rbx,%rdi
    820a:	e8 6f 0e 00 00       	call   907e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    820f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8213:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8217:	48 89 d6             	mov    %rdx,%rsi
    821a:	48 89 c7             	mov    %rax,%rdi
    821d:	e8 ba 0e 00 00       	call   90dc <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    8222:	eb 1a                	jmp    823e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    8224:	48 89 c3             	mov    %rax,%rbx
    8227:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    822b:	48 89 c7             	mov    %rax,%rdi
    822e:	e8 31 00 00 00       	call   8264 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    8233:	48 89 d8             	mov    %rbx,%rax
    8236:	48 89 c7             	mov    %rax,%rdi
    8239:	e8 f2 c4 ff ff       	call   4730 <_Unwind_Resume@plt>
    823e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8242:	c9                   	leave
    8243:	c3                   	ret

0000000000008244 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8244:	55                   	push   %rbp
    8245:	48 89 e5             	mov    %rsp,%rbp
    8248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    824c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8254:	48 8b 00             	mov    (%rax),%rax
    8257:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    825b:	48 c1 e2 03          	shl    $0x3,%rdx
    825f:	48 01 d0             	add    %rdx,%rax
      }
    8262:	5d                   	pop    %rbp
    8263:	c3                   	ret

0000000000008264 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8264:	55                   	push   %rbp
    8265:	48 89 e5             	mov    %rsp,%rbp
    8268:	48 83 ec 10          	sub    $0x10,%rsp
    826c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8274:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    827c:	48 8b 00             	mov    (%rax),%rax
    827f:	48 29 c2             	sub    %rax,%rdx
    8282:	48 89 d0             	mov    %rdx,%rax
    8285:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8289:	48 89 c2             	mov    %rax,%rdx
    828c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8290:	48 8b 08             	mov    (%rax),%rcx
    8293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8297:	48 89 ce             	mov    %rcx,%rsi
    829a:	48 89 c7             	mov    %rax,%rdi
    829d:	e8 ae 0e 00 00       	call   9150 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    82a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82a6:	48 89 c7             	mov    %rax,%rdi
    82a9:	e8 48 fb ff ff       	call   7df6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    82ae:	90                   	nop
    82af:	c9                   	leave
    82b0:	c3                   	ret
    82b1:	90                   	nop

00000000000082b2 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    82b2:	55                   	push   %rbp
    82b3:	48 89 e5             	mov    %rsp,%rbp
    82b6:	48 83 ec 10          	sub    $0x10,%rsp
    82ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82c2:	48 89 c7             	mov    %rax,%rdi
    82c5:	e8 bc 0e 00 00       	call   9186 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    82ca:	90                   	nop
    82cb:	c9                   	leave
    82cc:	c3                   	ret
    82cd:	90                   	nop

00000000000082ce <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    82ce:	55                   	push   %rbp
    82cf:	48 89 e5             	mov    %rsp,%rbp
    82d2:	48 83 ec 10          	sub    $0x10,%rsp
    82d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82de:	48 89 c7             	mov    %rax,%rdi
    82e1:	e8 ac 0e 00 00       	call   9192 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    82e6:	90                   	nop
    82e7:	c9                   	leave
    82e8:	c3                   	ret
    82e9:	90                   	nop

00000000000082ea <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    82ea:	55                   	push   %rbp
    82eb:	48 89 e5             	mov    %rsp,%rbp
    82ee:	53                   	push   %rbx
    82ef:	48 83 ec 28          	sub    $0x28,%rsp
    82f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    82fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    82ff:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8303:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8307:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    830b:	48 89 d6             	mov    %rdx,%rsi
    830e:	48 89 c7             	mov    %rax,%rdi
    8311:	e8 87 0e 00 00       	call   919d <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8316:	48 89 c1             	mov    %rax,%rcx
    8319:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    831d:	48 89 c2             	mov    %rax,%rdx
    8320:	48 89 ce             	mov    %rcx,%rsi
    8323:	48 89 df             	mov    %rbx,%rdi
    8326:	e8 d3 0e 00 00       	call   91fe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    832b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    832f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8333:	48 89 d6             	mov    %rdx,%rsi
    8336:	48 89 c7             	mov    %rax,%rdi
    8339:	e8 1e 0f 00 00       	call   925c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    833e:	eb 1a                	jmp    835a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    8340:	48 89 c3             	mov    %rax,%rbx
    8343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8347:	48 89 c7             	mov    %rax,%rdi
    834a:	e8 79 00 00 00       	call   83c8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    834f:	48 89 d8             	mov    %rbx,%rax
    8352:	48 89 c7             	mov    %rax,%rdi
    8355:	e8 d6 c3 ff ff       	call   4730 <_Unwind_Resume@plt>
    835a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    835e:	c9                   	leave
    835f:	c3                   	ret

0000000000008360 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8360:	55                   	push   %rbp
    8361:	48 89 e5             	mov    %rsp,%rbp
    8364:	48 83 ec 10          	sub    $0x10,%rsp
    8368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    836c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8370:	48 89 c7             	mov    %rax,%rdi
    8373:	e8 24 0f 00 00       	call   929c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8378:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    837b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    837f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8387:	48 8b 00             	mov    (%rax),%rax
    838a:	48 89 ce             	mov    %rcx,%rsi
    838d:	48 89 c7             	mov    %rax,%rdi
    8390:	e8 15 0f 00 00       	call   92aa <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    8395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8399:	48 89 c7             	mov    %rax,%rdi
    839c:	e8 27 00 00 00       	call   83c8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    83a1:	90                   	nop
    83a2:	c9                   	leave
    83a3:	c3                   	ret

00000000000083a4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    83a4:	55                   	push   %rbp
    83a5:	48 89 e5             	mov    %rsp,%rbp
    83a8:	48 83 ec 10          	sub    $0x10,%rsp
    83ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    83b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b4:	48 8b 10             	mov    (%rax),%rdx
    83b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83bb:	48 89 d6             	mov    %rdx,%rsi
    83be:	48 89 c7             	mov    %rax,%rdi
    83c1:	e8 0e 0f 00 00       	call   92d4 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    83c6:	c9                   	leave
    83c7:	c3                   	ret

00000000000083c8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    83c8:	55                   	push   %rbp
    83c9:	48 89 e5             	mov    %rsp,%rbp
    83cc:	48 83 ec 10          	sub    $0x10,%rsp
    83d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    83d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83d8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    83dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83e0:	48 8b 00             	mov    (%rax),%rax
    83e3:	48 29 c2             	sub    %rax,%rdx
    83e6:	48 89 d0             	mov    %rdx,%rax
    83e9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    83ed:	48 89 c2             	mov    %rax,%rdx
    83f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f4:	48 8b 08             	mov    (%rax),%rcx
    83f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83fb:	48 89 ce             	mov    %rcx,%rsi
    83fe:	48 89 c7             	mov    %rax,%rdi
    8401:	e8 06 0f 00 00       	call   930c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    840a:	48 89 c7             	mov    %rax,%rdi
    840d:	e8 00 fa ff ff       	call   7e12 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    8412:	90                   	nop
    8413:	c9                   	leave
    8414:	c3                   	ret
    8415:	90                   	nop

0000000000008416 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8416:	55                   	push   %rbp
    8417:	48 89 e5             	mov    %rsp,%rbp
    841a:	48 83 ec 10          	sub    $0x10,%rsp
    841e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8426:	48 89 c7             	mov    %rax,%rdi
    8429:	e8 14 0f 00 00       	call   9342 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    842e:	90                   	nop
    842f:	c9                   	leave
    8430:	c3                   	ret
    8431:	90                   	nop

0000000000008432 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8432:	55                   	push   %rbp
    8433:	48 89 e5             	mov    %rsp,%rbp
    8436:	48 83 ec 10          	sub    $0x10,%rsp
    843a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    843e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8442:	48 89 c7             	mov    %rax,%rdi
    8445:	e8 04 0f 00 00       	call   934e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    844a:	90                   	nop
    844b:	c9                   	leave
    844c:	c3                   	ret
    844d:	90                   	nop

000000000000844e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    844e:	55                   	push   %rbp
    844f:	48 89 e5             	mov    %rsp,%rbp
    8452:	53                   	push   %rbx
    8453:	48 83 ec 28          	sub    $0x28,%rsp
    8457:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    845b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    845f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8463:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8467:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    846b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    846f:	48 89 d6             	mov    %rdx,%rsi
    8472:	48 89 c7             	mov    %rax,%rdi
    8475:	e8 df 0e 00 00       	call   9359 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    847a:	48 89 c1             	mov    %rax,%rcx
    847d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8481:	48 89 c2             	mov    %rax,%rdx
    8484:	48 89 ce             	mov    %rcx,%rsi
    8487:	48 89 df             	mov    %rbx,%rdi
    848a:	e8 2b 0f 00 00       	call   93ba <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    848f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8493:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8497:	48 89 d6             	mov    %rdx,%rsi
    849a:	48 89 c7             	mov    %rax,%rdi
    849d:	e8 76 0f 00 00       	call   9418 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    84a2:	eb 1a                	jmp    84be <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    84a4:	48 89 c3             	mov    %rax,%rbx
    84a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84ab:	48 89 c7             	mov    %rax,%rdi
    84ae:	e8 79 00 00 00       	call   852c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    84b3:	48 89 d8             	mov    %rbx,%rax
    84b6:	48 89 c7             	mov    %rax,%rdi
    84b9:	e8 72 c2 ff ff       	call   4730 <_Unwind_Resume@plt>
    84be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84c2:	c9                   	leave
    84c3:	c3                   	ret

00000000000084c4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    84c4:	55                   	push   %rbp
    84c5:	48 89 e5             	mov    %rsp,%rbp
    84c8:	48 83 ec 10          	sub    $0x10,%rsp
    84cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    84d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84d4:	48 89 c7             	mov    %rax,%rdi
    84d7:	e8 7c 0f 00 00       	call   9458 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    84dc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    84df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84e3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    84e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84eb:	48 8b 00             	mov    (%rax),%rax
    84ee:	48 89 ce             	mov    %rcx,%rsi
    84f1:	48 89 c7             	mov    %rax,%rdi
    84f4:	e8 6d 0f 00 00       	call   9466 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    84f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84fd:	48 89 c7             	mov    %rax,%rdi
    8500:	e8 27 00 00 00       	call   852c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8505:	90                   	nop
    8506:	c9                   	leave
    8507:	c3                   	ret

0000000000008508 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8508:	55                   	push   %rbp
    8509:	48 89 e5             	mov    %rsp,%rbp
    850c:	48 83 ec 10          	sub    $0x10,%rsp
    8510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8518:	48 8b 10             	mov    (%rax),%rdx
    851b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    851f:	48 89 d6             	mov    %rdx,%rsi
    8522:	48 89 c7             	mov    %rax,%rdi
    8525:	e8 66 0f 00 00       	call   9490 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    852a:	c9                   	leave
    852b:	c3                   	ret

000000000000852c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    852c:	55                   	push   %rbp
    852d:	48 89 e5             	mov    %rsp,%rbp
    8530:	48 83 ec 10          	sub    $0x10,%rsp
    8534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    853c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8544:	48 8b 00             	mov    (%rax),%rax
    8547:	48 29 c2             	sub    %rax,%rdx
    854a:	48 c1 fa 03          	sar    $0x3,%rdx
    854e:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    8555:	aa aa aa 
    8558:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    855c:	48 89 c2             	mov    %rax,%rdx
    855f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8563:	48 8b 08             	mov    (%rax),%rcx
    8566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    856a:	48 89 ce             	mov    %rcx,%rsi
    856d:	48 89 c7             	mov    %rax,%rdi
    8570:	e8 53 0f 00 00       	call   94c8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8575:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8579:	48 89 c7             	mov    %rax,%rdi
    857c:	e8 ad f8 ff ff       	call   7e2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    8581:	90                   	nop
    8582:	c9                   	leave
    8583:	c3                   	ret

0000000000008584 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8584:	55                   	push   %rbp
    8585:	48 89 e5             	mov    %rsp,%rbp
    8588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    858c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8590:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8598:	48 8b 00             	mov    (%rax),%rax
    859b:	48 29 c2             	sub    %rax,%rdx
    859e:	48 c1 fa 03          	sar    $0x3,%rdx
    85a2:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    85a9:	aa aa aa 
    85ac:	48 0f af c2          	imul   %rdx,%rax
    85b0:	5d                   	pop    %rbp
    85b1:	c3                   	ret

00000000000085b2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    85b2:	55                   	push   %rbp
    85b3:	48 89 e5             	mov    %rsp,%rbp
    85b6:	48 83 ec 10          	sub    $0x10,%rsp
    85ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c2:	48 89 c7             	mov    %rax,%rdi
    85c5:	e8 34 0f 00 00       	call   94fe <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    85ca:	90                   	nop
    85cb:	c9                   	leave
    85cc:	c3                   	ret
    85cd:	90                   	nop

00000000000085ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    85ce:	55                   	push   %rbp
    85cf:	48 89 e5             	mov    %rsp,%rbp
    85d2:	48 83 ec 10          	sub    $0x10,%rsp
    85d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85de:	48 89 c7             	mov    %rax,%rdi
    85e1:	e8 24 0f 00 00       	call   950a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    85e6:	90                   	nop
    85e7:	c9                   	leave
    85e8:	c3                   	ret
    85e9:	90                   	nop

00000000000085ea <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    85ea:	55                   	push   %rbp
    85eb:	48 89 e5             	mov    %rsp,%rbp
    85ee:	53                   	push   %rbx
    85ef:	48 83 ec 28          	sub    $0x28,%rsp
    85f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    85fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    85ff:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8603:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8607:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    860b:	48 89 d6             	mov    %rdx,%rsi
    860e:	48 89 c7             	mov    %rax,%rdi
    8611:	e8 ff 0e 00 00       	call   9515 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    8616:	48 89 c1             	mov    %rax,%rcx
    8619:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    861d:	48 89 c2             	mov    %rax,%rdx
    8620:	48 89 ce             	mov    %rcx,%rsi
    8623:	48 89 df             	mov    %rbx,%rdi
    8626:	e8 4b 0f 00 00       	call   9576 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    862b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    862f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8633:	48 89 d6             	mov    %rdx,%rsi
    8636:	48 89 c7             	mov    %rax,%rdi
    8639:	e8 96 0f 00 00       	call   95d4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    863e:	eb 1a                	jmp    865a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    8640:	48 89 c3             	mov    %rax,%rbx
    8643:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8647:	48 89 c7             	mov    %rax,%rdi
    864a:	e8 bb 01 00 00       	call   880a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    864f:	48 89 d8             	mov    %rbx,%rax
    8652:	48 89 c7             	mov    %rax,%rdi
    8655:	e8 d6 c0 ff ff       	call   4730 <_Unwind_Resume@plt>
    865a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    865e:	c9                   	leave
    865f:	c3                   	ret

0000000000008660 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8660:	55                   	push   %rbp
    8661:	48 89 e5             	mov    %rsp,%rbp
    8664:	48 83 ec 10          	sub    $0x10,%rsp
    8668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    866c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8670:	48 89 c7             	mov    %rax,%rdi
    8673:	e8 9c 0f 00 00       	call   9614 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    8678:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    867b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    867f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8687:	48 8b 00             	mov    (%rax),%rax
    868a:	48 89 ce             	mov    %rcx,%rsi
    868d:	48 89 c7             	mov    %rax,%rdi
    8690:	e8 8d 0f 00 00       	call   9622 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    8695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8699:	48 89 c7             	mov    %rax,%rdi
    869c:	e8 69 01 00 00       	call   880a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    86a1:	90                   	nop
    86a2:	c9                   	leave
    86a3:	c3                   	ret

00000000000086a4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    86a4:	55                   	push   %rbp
    86a5:	48 89 e5             	mov    %rsp,%rbp
    86a8:	48 83 ec 20          	sub    $0x20,%rsp
    86ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    86b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    86b4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    86b8:	48 89 d6             	mov    %rdx,%rsi
    86bb:	48 89 c7             	mov    %rax,%rdi
    86be:	e8 89 0f 00 00       	call   964c <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    86c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c7:	c9                   	leave
    86c8:	c3                   	ret
    86c9:	90                   	nop

00000000000086ca <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    86ca:	55                   	push   %rbp
    86cb:	48 89 e5             	mov    %rsp,%rbp
    86ce:	48 83 ec 20          	sub    $0x20,%rsp
    86d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    86d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86da:	48 8d 50 08          	lea    0x8(%rax),%rdx
    86de:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    86e2:	48 89 d6             	mov    %rdx,%rsi
    86e5:	48 89 c7             	mov    %rax,%rdi
    86e8:	e8 5f 0f 00 00       	call   964c <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    86ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86f1:	c9                   	leave
    86f2:	c3                   	ret

00000000000086f3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    86f3:	55                   	push   %rbp
    86f4:	48 89 e5             	mov    %rsp,%rbp
    86f7:	53                   	push   %rbx
    86f8:	48 83 ec 18          	sub    $0x18,%rsp
    86fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8700:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    8704:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8708:	48 89 c7             	mov    %rax,%rdi
    870b:	e8 5a 0f 00 00       	call   966a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    8710:	48 8b 18             	mov    (%rax),%rbx
    8713:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8717:	48 89 c7             	mov    %rax,%rdi
    871a:	e8 4b 0f 00 00       	call   966a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    871f:	48 8b 00             	mov    (%rax),%rax
    8722:	48 39 c3             	cmp    %rax,%rbx
    8725:	0f 95 c0             	setne  %al
    8728:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    872c:	c9                   	leave
    872d:	c3                   	ret

000000000000872e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    872e:	55                   	push   %rbp
    872f:	48 89 e5             	mov    %rsp,%rbp
    8732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    873a:	48 8b 00             	mov    (%rax),%rax
    873d:	48 8d 50 18          	lea    0x18(%rax),%rdx
    8741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8745:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    874c:	5d                   	pop    %rbp
    874d:	c3                   	ret

000000000000874e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    874e:	55                   	push   %rbp
    874f:	48 89 e5             	mov    %rsp,%rbp
    8752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    875a:	48 8b 00             	mov    (%rax),%rax
    875d:	5d                   	pop    %rbp
    875e:	c3                   	ret
    875f:	90                   	nop

0000000000008760 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8760:	55                   	push   %rbp
    8761:	48 89 e5             	mov    %rsp,%rbp
    8764:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8768:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    876c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8770:	48 8b 08             	mov    (%rax),%rcx
    8773:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8777:	48 89 d0             	mov    %rdx,%rax
    877a:	48 c1 e0 03          	shl    $0x3,%rax
    877e:	48 29 d0             	sub    %rdx,%rax
    8781:	48 c1 e0 02          	shl    $0x2,%rax
    8785:	48 01 c8             	add    %rcx,%rax
      }
    8788:	5d                   	pop    %rbp
    8789:	c3                   	ret

000000000000878a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    878a:	55                   	push   %rbp
    878b:	48 89 e5             	mov    %rsp,%rbp
    878e:	53                   	push   %rbx
    878f:	48 83 ec 18          	sub    $0x18,%rsp
    8793:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8797:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    879b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    879f:	48 89 c7             	mov    %rax,%rdi
    87a2:	e8 d1 0e 00 00       	call   9678 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    87a7:	84 c0                	test   %al,%al
    87a9:	74 36                	je     87e1 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    87ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87af:	48 89 c7             	mov    %rax,%rdi
    87b2:	e8 17 0f 00 00       	call   96ce <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    87b7:	48 89 c3             	mov    %rax,%rbx
    87ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87be:	48 89 c7             	mov    %rax,%rdi
    87c1:	e8 c4 0e 00 00       	call   968a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    87c6:	48 89 c1             	mov    %rax,%rcx
    87c9:	48 8b 03             	mov    (%rbx),%rax
    87cc:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    87d0:	48 89 01             	mov    %rax,(%rcx)
    87d3:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    87d7:	48 8b 43 10          	mov    0x10(%rbx),%rax
    87db:	48 89 41 10          	mov    %rax,0x10(%rcx)
    87df:	eb 1e                	jmp    87ff <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    87e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87e5:	48 89 c7             	mov    %rax,%rdi
    87e8:	e8 e1 0e 00 00       	call   96ce <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    87ed:	48 89 c2             	mov    %rax,%rdx
    87f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87f4:	48 89 d6             	mov    %rdx,%rsi
    87f7:	48 89 c7             	mov    %rax,%rdi
    87fa:	e8 dd 0e 00 00       	call   96dc <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    87ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8803:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8807:	c9                   	leave
    8808:	c3                   	ret
    8809:	90                   	nop

000000000000880a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    880a:	55                   	push   %rbp
    880b:	48 89 e5             	mov    %rsp,%rbp
    880e:	48 83 ec 10          	sub    $0x10,%rsp
    8812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8816:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    881a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    881e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8822:	48 8b 00             	mov    (%rax),%rax
    8825:	48 29 c2             	sub    %rax,%rdx
    8828:	48 c1 fa 02          	sar    $0x2,%rdx
    882c:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    8833:	db b6 6d 
    8836:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    883a:	48 89 c2             	mov    %rax,%rdx
    883d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8841:	48 8b 08             	mov    (%rax),%rcx
    8844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8848:	48 89 ce             	mov    %rcx,%rsi
    884b:	48 89 c7             	mov    %rax,%rdi
    884e:	e8 e3 0e 00 00       	call   9736 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    8853:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8857:	48 89 c7             	mov    %rax,%rdi
    885a:	e8 eb f5 ff ff       	call   7e4a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    885f:	90                   	nop
    8860:	c9                   	leave
    8861:	c3                   	ret

0000000000008862 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8862:	55                   	push   %rbp
    8863:	48 89 e5             	mov    %rsp,%rbp
    8866:	48 83 ec 10          	sub    $0x10,%rsp
    886a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    886e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8872:	48 89 c7             	mov    %rax,%rdi
    8875:	e8 f2 0e 00 00       	call   976c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    887a:	90                   	nop
    887b:	c9                   	leave
    887c:	c3                   	ret
    887d:	90                   	nop

000000000000887e <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    887e:	55                   	push   %rbp
    887f:	48 89 e5             	mov    %rsp,%rbp
    8882:	48 83 ec 10          	sub    $0x10,%rsp
    8886:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    888a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    888e:	48 89 c7             	mov    %rax,%rdi
    8891:	e8 e2 0e 00 00       	call   9778 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    8896:	90                   	nop
    8897:	c9                   	leave
    8898:	c3                   	ret
    8899:	90                   	nop

000000000000889a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    889a:	55                   	push   %rbp
    889b:	48 89 e5             	mov    %rsp,%rbp
    889e:	53                   	push   %rbx
    889f:	48 83 ec 28          	sub    $0x28,%rsp
    88a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    88a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    88ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    88af:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    88b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    88b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    88bb:	48 89 d6             	mov    %rdx,%rsi
    88be:	48 89 c7             	mov    %rax,%rdi
    88c1:	e8 bd 0e 00 00       	call   9783 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    88c6:	48 89 c1             	mov    %rax,%rcx
    88c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88cd:	48 89 c2             	mov    %rax,%rdx
    88d0:	48 89 ce             	mov    %rcx,%rsi
    88d3:	48 89 df             	mov    %rbx,%rdi
    88d6:	e8 09 0f 00 00       	call   97e4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    88db:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    88df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88e3:	48 89 d6             	mov    %rdx,%rsi
    88e6:	48 89 c7             	mov    %rax,%rdi
    88e9:	e8 54 0f 00 00       	call   9842 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    88ee:	eb 1a                	jmp    890a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    88f0:	48 89 c3             	mov    %rax,%rbx
    88f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88f7:	48 89 c7             	mov    %rax,%rdi
    88fa:	e8 79 00 00 00       	call   8978 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    88ff:	48 89 d8             	mov    %rbx,%rax
    8902:	48 89 c7             	mov    %rax,%rdi
    8905:	e8 26 be ff ff       	call   4730 <_Unwind_Resume@plt>
    890a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    890e:	c9                   	leave
    890f:	c3                   	ret

0000000000008910 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8910:	55                   	push   %rbp
    8911:	48 89 e5             	mov    %rsp,%rbp
    8914:	48 83 ec 10          	sub    $0x10,%rsp
    8918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    891c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8920:	48 89 c7             	mov    %rax,%rdi
    8923:	e8 5a 0f 00 00       	call   9882 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8928:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    892b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    892f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8933:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8937:	48 8b 00             	mov    (%rax),%rax
    893a:	48 89 ce             	mov    %rcx,%rsi
    893d:	48 89 c7             	mov    %rax,%rdi
    8940:	e8 4b 0f 00 00       	call   9890 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    8945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8949:	48 89 c7             	mov    %rax,%rdi
    894c:	e8 27 00 00 00       	call   8978 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8951:	90                   	nop
    8952:	c9                   	leave
    8953:	c3                   	ret

0000000000008954 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8954:	55                   	push   %rbp
    8955:	48 89 e5             	mov    %rsp,%rbp
    8958:	48 83 ec 10          	sub    $0x10,%rsp
    895c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8964:	48 8b 10             	mov    (%rax),%rdx
    8967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    896b:	48 89 d6             	mov    %rdx,%rsi
    896e:	48 89 c7             	mov    %rax,%rdi
    8971:	e8 44 0f 00 00       	call   98ba <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8976:	c9                   	leave
    8977:	c3                   	ret

0000000000008978 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8978:	55                   	push   %rbp
    8979:	48 89 e5             	mov    %rsp,%rbp
    897c:	48 83 ec 10          	sub    $0x10,%rsp
    8980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8988:	48 8b 50 10          	mov    0x10(%rax),%rdx
    898c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8990:	48 8b 00             	mov    (%rax),%rax
    8993:	48 29 c2             	sub    %rax,%rdx
    8996:	48 89 d0             	mov    %rdx,%rax
    8999:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    899d:	48 89 c2             	mov    %rax,%rdx
    89a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a4:	48 8b 08             	mov    (%rax),%rcx
    89a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ab:	48 89 ce             	mov    %rcx,%rsi
    89ae:	48 89 c7             	mov    %rax,%rdi
    89b1:	e8 3c 0f 00 00       	call   98f2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    89b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ba:	48 89 c7             	mov    %rax,%rdi
    89bd:	e8 a4 f4 ff ff       	call   7e66 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    89c2:	90                   	nop
    89c3:	c9                   	leave
    89c4:	c3                   	ret
    89c5:	90                   	nop

00000000000089c6 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    89c6:	55                   	push   %rbp
    89c7:	48 89 e5             	mov    %rsp,%rbp
    89ca:	48 83 ec 10          	sub    $0x10,%rsp
    89ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89d6:	48 89 c7             	mov    %rax,%rdi
    89d9:	e8 4a 0f 00 00       	call   9928 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    89de:	90                   	nop
    89df:	c9                   	leave
    89e0:	c3                   	ret
    89e1:	90                   	nop

00000000000089e2 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    89e2:	55                   	push   %rbp
    89e3:	48 89 e5             	mov    %rsp,%rbp
    89e6:	48 83 ec 10          	sub    $0x10,%rsp
    89ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f2:	48 89 c7             	mov    %rax,%rdi
    89f5:	e8 3a 0f 00 00       	call   9934 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    89fa:	90                   	nop
    89fb:	c9                   	leave
    89fc:	c3                   	ret
    89fd:	90                   	nop

00000000000089fe <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    89fe:	55                   	push   %rbp
    89ff:	48 89 e5             	mov    %rsp,%rbp
    8a02:	53                   	push   %rbx
    8a03:	48 83 ec 28          	sub    $0x28,%rsp
    8a07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a0b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a0f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8a13:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8a17:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8a1b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a1f:	48 89 d6             	mov    %rdx,%rsi
    8a22:	48 89 c7             	mov    %rax,%rdi
    8a25:	e8 15 0f 00 00       	call   993f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    8a2a:	48 89 c1             	mov    %rax,%rcx
    8a2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a31:	48 89 c2             	mov    %rax,%rdx
    8a34:	48 89 ce             	mov    %rcx,%rsi
    8a37:	48 89 df             	mov    %rbx,%rdi
    8a3a:	e8 61 0f 00 00       	call   99a0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8a3f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a47:	48 89 d6             	mov    %rdx,%rsi
    8a4a:	48 89 c7             	mov    %rax,%rdi
    8a4d:	e8 ac 0f 00 00       	call   99fe <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    8a52:	eb 1a                	jmp    8a6e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    8a54:	48 89 c3             	mov    %rax,%rbx
    8a57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a5b:	48 89 c7             	mov    %rax,%rdi
    8a5e:	e8 79 00 00 00       	call   8adc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8a63:	48 89 d8             	mov    %rbx,%rax
    8a66:	48 89 c7             	mov    %rax,%rdi
    8a69:	e8 c2 bc ff ff       	call   4730 <_Unwind_Resume@plt>
    8a6e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a72:	c9                   	leave
    8a73:	c3                   	ret

0000000000008a74 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8a74:	55                   	push   %rbp
    8a75:	48 89 e5             	mov    %rsp,%rbp
    8a78:	48 83 ec 10          	sub    $0x10,%rsp
    8a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a84:	48 89 c7             	mov    %rax,%rdi
    8a87:	e8 b2 0f 00 00       	call   9a3e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8a8c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a93:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a9b:	48 8b 00             	mov    (%rax),%rax
    8a9e:	48 89 ce             	mov    %rcx,%rsi
    8aa1:	48 89 c7             	mov    %rax,%rdi
    8aa4:	e8 a3 0f 00 00       	call   9a4c <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    8aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aad:	48 89 c7             	mov    %rax,%rdi
    8ab0:	e8 27 00 00 00       	call   8adc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8ab5:	90                   	nop
    8ab6:	c9                   	leave
    8ab7:	c3                   	ret

0000000000008ab8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8ab8:	55                   	push   %rbp
    8ab9:	48 89 e5             	mov    %rsp,%rbp
    8abc:	48 83 ec 10          	sub    $0x10,%rsp
    8ac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ac8:	48 8b 10             	mov    (%rax),%rdx
    8acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8acf:	48 89 d6             	mov    %rdx,%rsi
    8ad2:	48 89 c7             	mov    %rax,%rdi
    8ad5:	e8 9c 0f 00 00       	call   9a76 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8ada:	c9                   	leave
    8adb:	c3                   	ret

0000000000008adc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8adc:	55                   	push   %rbp
    8add:	48 89 e5             	mov    %rsp,%rbp
    8ae0:	48 83 ec 10          	sub    $0x10,%rsp
    8ae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aec:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8af4:	48 8b 00             	mov    (%rax),%rax
    8af7:	48 29 c2             	sub    %rax,%rdx
    8afa:	48 89 d0             	mov    %rdx,%rax
    8afd:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    8b01:	48 89 c2             	mov    %rax,%rdx
    8b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b08:	48 8b 08             	mov    (%rax),%rcx
    8b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b0f:	48 89 ce             	mov    %rcx,%rsi
    8b12:	48 89 c7             	mov    %rax,%rdi
    8b15:	e8 94 0f 00 00       	call   9aae <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    8b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b1e:	48 89 c7             	mov    %rax,%rdi
    8b21:	e8 5c f3 ff ff       	call   7e82 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    8b26:	90                   	nop
    8b27:	c9                   	leave
    8b28:	c3                   	ret
    8b29:	90                   	nop

0000000000008b2a <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8b2a:	55                   	push   %rbp
    8b2b:	48 89 e5             	mov    %rsp,%rbp
    8b2e:	48 83 ec 10          	sub    $0x10,%rsp
    8b32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b3a:	48 89 c7             	mov    %rax,%rdi
    8b3d:	e8 a2 0f 00 00       	call   9ae4 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    8b42:	90                   	nop
    8b43:	c9                   	leave
    8b44:	c3                   	ret
    8b45:	90                   	nop

0000000000008b46 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8b46:	55                   	push   %rbp
    8b47:	48 89 e5             	mov    %rsp,%rbp
    8b4a:	48 83 ec 10          	sub    $0x10,%rsp
    8b4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b56:	48 89 c7             	mov    %rax,%rdi
    8b59:	e8 92 0f 00 00       	call   9af0 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    8b5e:	90                   	nop
    8b5f:	c9                   	leave
    8b60:	c3                   	ret
    8b61:	90                   	nop

0000000000008b62 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8b62:	55                   	push   %rbp
    8b63:	48 89 e5             	mov    %rsp,%rbp
    8b66:	53                   	push   %rbx
    8b67:	48 83 ec 28          	sub    $0x28,%rsp
    8b6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8b6f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8b73:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8b77:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8b7b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8b7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8b83:	48 89 d6             	mov    %rdx,%rsi
    8b86:	48 89 c7             	mov    %rax,%rdi
    8b89:	e8 6d 0f 00 00       	call   9afb <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8b8e:	48 89 c1             	mov    %rax,%rcx
    8b91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b95:	48 89 c2             	mov    %rax,%rdx
    8b98:	48 89 ce             	mov    %rcx,%rsi
    8b9b:	48 89 df             	mov    %rbx,%rdi
    8b9e:	e8 b9 0f 00 00       	call   9b5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8ba3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8ba7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bab:	48 89 d6             	mov    %rdx,%rsi
    8bae:	48 89 c7             	mov    %rax,%rdi
    8bb1:	e8 04 10 00 00       	call   9bba <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    8bb6:	eb 1a                	jmp    8bd2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    8bb8:	48 89 c3             	mov    %rax,%rbx
    8bbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bbf:	48 89 c7             	mov    %rax,%rdi
    8bc2:	e8 79 00 00 00       	call   8c40 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8bc7:	48 89 d8             	mov    %rbx,%rax
    8bca:	48 89 c7             	mov    %rax,%rdi
    8bcd:	e8 5e bb ff ff       	call   4730 <_Unwind_Resume@plt>
    8bd2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8bd6:	c9                   	leave
    8bd7:	c3                   	ret

0000000000008bd8 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8bd8:	55                   	push   %rbp
    8bd9:	48 89 e5             	mov    %rsp,%rbp
    8bdc:	48 83 ec 10          	sub    $0x10,%rsp
    8be0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8be8:	48 89 c7             	mov    %rax,%rdi
    8beb:	e8 0a 10 00 00       	call   9bfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8bf0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bf7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8bfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bff:	48 8b 00             	mov    (%rax),%rax
    8c02:	48 89 ce             	mov    %rcx,%rsi
    8c05:	48 89 c7             	mov    %rax,%rdi
    8c08:	e8 fb 0f 00 00       	call   9c08 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    8c0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c11:	48 89 c7             	mov    %rax,%rdi
    8c14:	e8 27 00 00 00       	call   8c40 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8c19:	90                   	nop
    8c1a:	c9                   	leave
    8c1b:	c3                   	ret

0000000000008c1c <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8c1c:	55                   	push   %rbp
    8c1d:	48 89 e5             	mov    %rsp,%rbp
    8c20:	48 83 ec 10          	sub    $0x10,%rsp
    8c24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8c28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c2c:	48 8b 10             	mov    (%rax),%rdx
    8c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c33:	48 89 d6             	mov    %rdx,%rsi
    8c36:	48 89 c7             	mov    %rax,%rdi
    8c39:	e8 f4 0f 00 00       	call   9c32 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8c3e:	c9                   	leave
    8c3f:	c3                   	ret

0000000000008c40 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8c40:	55                   	push   %rbp
    8c41:	48 89 e5             	mov    %rsp,%rbp
    8c44:	48 83 ec 10          	sub    $0x10,%rsp
    8c48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c50:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8c54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c58:	48 8b 00             	mov    (%rax),%rax
    8c5b:	48 29 c2             	sub    %rax,%rdx
    8c5e:	48 89 d0             	mov    %rdx,%rax
    8c61:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8c65:	48 89 c2             	mov    %rax,%rdx
    8c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c6c:	48 8b 08             	mov    (%rax),%rcx
    8c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c73:	48 89 ce             	mov    %rcx,%rsi
    8c76:	48 89 c7             	mov    %rax,%rdi
    8c79:	e8 ec 0f 00 00       	call   9c6a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c82:	48 89 c7             	mov    %rax,%rdi
    8c85:	e8 14 f2 ff ff       	call   7e9e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    8c8a:	90                   	nop
    8c8b:	c9                   	leave
    8c8c:	c3                   	ret
    8c8d:	90                   	nop

0000000000008c8e <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8c8e:	55                   	push   %rbp
    8c8f:	48 89 e5             	mov    %rsp,%rbp
    8c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c96:	90                   	nop
    8c97:	5d                   	pop    %rbp
    8c98:	c3                   	ret
    8c99:	90                   	nop

0000000000008c9a <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8c9a:	55                   	push   %rbp
    8c9b:	48 89 e5             	mov    %rsp,%rbp
    8c9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ca2:	90                   	nop
    8ca3:	5d                   	pop    %rbp
    8ca4:	c3                   	ret

0000000000008ca5 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8ca5:	55                   	push   %rbp
    8ca6:	48 89 e5             	mov    %rsp,%rbp
    8ca9:	53                   	push   %rbx
    8caa:	48 83 ec 28          	sub    $0x28,%rsp
    8cae:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8cb2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8cb6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8cba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8cbe:	48 89 d6             	mov    %rdx,%rsi
    8cc1:	48 89 c7             	mov    %rax,%rdi
    8cc4:	e8 25 01 00 00       	call   8dee <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    8cc9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8ccd:	48 89 c7             	mov    %rax,%rdi
    8cd0:	e8 ca 0f 00 00       	call   9c9f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8cd5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8cd9:	0f 92 c3             	setb   %bl
    8cdc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8ce0:	48 89 c7             	mov    %rax,%rdi
    8ce3:	e8 ee f1 ff ff       	call   7ed6 <_ZNSaI17VkLayerPropertiesED1Ev>
    8ce8:	84 db                	test   %bl,%bl
    8cea:	74 0f                	je     8cfb <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8cec:	48 8d 05 0d 04 01 00 	lea    0x1040d(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8cf3:	48 89 c7             	mov    %rax,%rdi
    8cf6:	e8 95 b4 ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8cfb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8cff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d03:	c9                   	leave
    8d04:	c3                   	ret
    8d05:	90                   	nop

0000000000008d06 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8d06:	55                   	push   %rbp
    8d07:	48 89 e5             	mov    %rsp,%rbp
    8d0a:	53                   	push   %rbx
    8d0b:	48 83 ec 28          	sub    $0x28,%rsp
    8d0f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8d13:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8d17:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8d1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d1f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8d23:	48 89 d6             	mov    %rdx,%rsi
    8d26:	48 89 c7             	mov    %rax,%rdi
    8d29:	e8 b4 0f 00 00       	call   9ce2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8d2e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8d32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d36:	48 89 d6             	mov    %rdx,%rsi
    8d39:	48 89 c7             	mov    %rax,%rdi
    8d3c:	e8 d3 0f 00 00       	call   9d14 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8d41:	eb 1a                	jmp    8d5d <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8d43:	48 89 c3             	mov    %rax,%rbx
    8d46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d4a:	48 89 c7             	mov    %rax,%rdi
    8d4d:	e8 6c f0 ff ff       	call   7dbe <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8d52:	48 89 d8             	mov    %rbx,%rax
    8d55:	48 89 c7             	mov    %rax,%rdi
    8d58:	e8 d3 b9 ff ff       	call   4730 <_Unwind_Resume@plt>
    8d5d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d61:	c9                   	leave
    8d62:	c3                   	ret
    8d63:	90                   	nop

0000000000008d64 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8d64:	55                   	push   %rbp
    8d65:	48 89 e5             	mov    %rsp,%rbp
    8d68:	48 83 ec 10          	sub    $0x10,%rsp
    8d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8d74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d78:	48 89 c7             	mov    %rax,%rdi
    8d7b:	e8 24 00 00 00       	call   8da4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8d80:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8d83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d87:	48 8b 00             	mov    (%rax),%rax
    8d8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d8e:	48 89 ce             	mov    %rcx,%rsi
    8d91:	48 89 c7             	mov    %rax,%rdi
    8d94:	e8 dc 0f 00 00       	call   9d75 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8d99:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8d9d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8da1:	90                   	nop
    8da2:	c9                   	leave
    8da3:	c3                   	ret

0000000000008da4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8da4:	55                   	push   %rbp
    8da5:	48 89 e5             	mov    %rsp,%rbp
    8da8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8db0:	5d                   	pop    %rbp
    8db1:	c3                   	ret

0000000000008db2 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8db2:	55                   	push   %rbp
    8db3:	48 89 e5             	mov    %rsp,%rbp
    8db6:	48 83 ec 20          	sub    $0x20,%rsp
    8dba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8dbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8dc2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8dc6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dce:	48 89 d6             	mov    %rdx,%rsi
    8dd1:	48 89 c7             	mov    %rax,%rdi
    8dd4:	e8 c5 0f 00 00       	call   9d9e <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    8dd9:	90                   	nop
    8dda:	c9                   	leave
    8ddb:	c3                   	ret

0000000000008ddc <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8ddc:	55                   	push   %rbp
    8ddd:	48 89 e5             	mov    %rsp,%rbp
    8de0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8de4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8de8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8dec:	5d                   	pop    %rbp
    8ded:	c3                   	ret

0000000000008dee <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8dee:	55                   	push   %rbp
    8def:	48 89 e5             	mov    %rsp,%rbp
    8df2:	48 83 ec 10          	sub    $0x10,%rsp
    8df6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8dfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8dfe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e06:	48 89 d6             	mov    %rdx,%rsi
    8e09:	48 89 c7             	mov    %rax,%rdi
    8e0c:	e8 b3 0f 00 00       	call   9dc4 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    8e11:	90                   	nop
    8e12:	c9                   	leave
    8e13:	c3                   	ret

0000000000008e14 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8e14:	55                   	push   %rbp
    8e15:	48 89 e5             	mov    %rsp,%rbp
    8e18:	48 83 ec 20          	sub    $0x20,%rsp
    8e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8e28:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8e2d:	74 17                	je     8e46 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8e37:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e3b:	48 89 ce             	mov    %rcx,%rsi
    8e3e:	48 89 c7             	mov    %rax,%rdi
    8e41:	e8 8d 0f 00 00       	call   9dd3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    8e46:	90                   	nop
    8e47:	c9                   	leave
    8e48:	c3                   	ret
    8e49:	90                   	nop

0000000000008e4a <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8e4a:	55                   	push   %rbp
    8e4b:	48 89 e5             	mov    %rsp,%rbp
    8e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e52:	90                   	nop
    8e53:	5d                   	pop    %rbp
    8e54:	c3                   	ret
    8e55:	90                   	nop

0000000000008e56 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8e56:	55                   	push   %rbp
    8e57:	48 89 e5             	mov    %rsp,%rbp
    8e5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e5e:	90                   	nop
    8e5f:	5d                   	pop    %rbp
    8e60:	c3                   	ret

0000000000008e61 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8e61:	55                   	push   %rbp
    8e62:	48 89 e5             	mov    %rsp,%rbp
    8e65:	53                   	push   %rbx
    8e66:	48 83 ec 28          	sub    $0x28,%rsp
    8e6a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8e6e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8e72:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8e76:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8e7a:	48 89 d6             	mov    %rdx,%rsi
    8e7d:	48 89 c7             	mov    %rax,%rdi
    8e80:	e8 25 01 00 00       	call   8faa <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    8e85:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8e89:	48 89 c7             	mov    %rax,%rdi
    8e8c:	e8 70 0f 00 00       	call   9e01 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8e91:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8e95:	0f 92 c3             	setb   %bl
    8e98:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8e9c:	48 89 c7             	mov    %rax,%rdi
    8e9f:	e8 a0 f1 ff ff       	call   8044 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8ea4:	84 db                	test   %bl,%bl
    8ea6:	74 0f                	je     8eb7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8ea8:	48 8d 05 51 02 01 00 	lea    0x10251(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8eaf:	48 89 c7             	mov    %rax,%rdi
    8eb2:	e8 d9 b2 ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8eb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8ebb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ebf:	c9                   	leave
    8ec0:	c3                   	ret
    8ec1:	90                   	nop

0000000000008ec2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8ec2:	55                   	push   %rbp
    8ec3:	48 89 e5             	mov    %rsp,%rbp
    8ec6:	53                   	push   %rbx
    8ec7:	48 83 ec 28          	sub    $0x28,%rsp
    8ecb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ecf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8ed3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8ed7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8edb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8edf:	48 89 d6             	mov    %rdx,%rsi
    8ee2:	48 89 c7             	mov    %rax,%rdi
    8ee5:	e8 5a 0f 00 00       	call   9e44 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8eea:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8eee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ef2:	48 89 d6             	mov    %rdx,%rsi
    8ef5:	48 89 c7             	mov    %rax,%rdi
    8ef8:	e8 79 0f 00 00       	call   9e76 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    8efd:	eb 1a                	jmp    8f19 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8eff:	48 89 c3             	mov    %rax,%rbx
    8f02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f06:	48 89 c7             	mov    %rax,%rdi
    8f09:	e8 cc ee ff ff       	call   7dda <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8f0e:	48 89 d8             	mov    %rbx,%rax
    8f11:	48 89 c7             	mov    %rax,%rdi
    8f14:	e8 17 b8 ff ff       	call   4730 <_Unwind_Resume@plt>
    8f19:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f1d:	c9                   	leave
    8f1e:	c3                   	ret
    8f1f:	90                   	nop

0000000000008f20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8f20:	55                   	push   %rbp
    8f21:	48 89 e5             	mov    %rsp,%rbp
    8f24:	48 83 ec 10          	sub    $0x10,%rsp
    8f28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f34:	48 89 c7             	mov    %rax,%rdi
    8f37:	e8 24 00 00 00       	call   8f60 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8f3c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8f3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f43:	48 8b 00             	mov    (%rax),%rax
    8f46:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f4a:	48 89 ce             	mov    %rcx,%rsi
    8f4d:	48 89 c7             	mov    %rax,%rdi
    8f50:	e8 82 0f 00 00       	call   9ed7 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8f55:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8f59:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8f5d:	90                   	nop
    8f5e:	c9                   	leave
    8f5f:	c3                   	ret

0000000000008f60 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8f60:	55                   	push   %rbp
    8f61:	48 89 e5             	mov    %rsp,%rbp
    8f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8f68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f6c:	5d                   	pop    %rbp
    8f6d:	c3                   	ret

0000000000008f6e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8f6e:	55                   	push   %rbp
    8f6f:	48 89 e5             	mov    %rsp,%rbp
    8f72:	48 83 ec 20          	sub    $0x20,%rsp
    8f76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f7e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8f82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f8a:	48 89 d6             	mov    %rdx,%rsi
    8f8d:	48 89 c7             	mov    %rax,%rdi
    8f90:	e8 6b 0f 00 00       	call   9f00 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    8f95:	90                   	nop
    8f96:	c9                   	leave
    8f97:	c3                   	ret

0000000000008f98 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8f98:	55                   	push   %rbp
    8f99:	48 89 e5             	mov    %rsp,%rbp
    8f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8fa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fa8:	5d                   	pop    %rbp
    8fa9:	c3                   	ret

0000000000008faa <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8faa:	55                   	push   %rbp
    8fab:	48 89 e5             	mov    %rsp,%rbp
    8fae:	48 83 ec 10          	sub    $0x10,%rsp
    8fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8fba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fc2:	48 89 d6             	mov    %rdx,%rsi
    8fc5:	48 89 c7             	mov    %rax,%rdi
    8fc8:	e8 59 0f 00 00       	call   9f26 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    8fcd:	90                   	nop
    8fce:	c9                   	leave
    8fcf:	c3                   	ret

0000000000008fd0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8fd0:	55                   	push   %rbp
    8fd1:	48 89 e5             	mov    %rsp,%rbp
    8fd4:	48 83 ec 20          	sub    $0x20,%rsp
    8fd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8fe0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8fe4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8fe9:	74 17                	je     9002 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8ff3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ff7:	48 89 ce             	mov    %rcx,%rsi
    8ffa:	48 89 c7             	mov    %rax,%rdi
    8ffd:	e8 33 0f 00 00       	call   9f35 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    9002:	90                   	nop
    9003:	c9                   	leave
    9004:	c3                   	ret
    9005:	90                   	nop

0000000000009006 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9006:	55                   	push   %rbp
    9007:	48 89 e5             	mov    %rsp,%rbp
    900a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    900e:	90                   	nop
    900f:	5d                   	pop    %rbp
    9010:	c3                   	ret
    9011:	90                   	nop

0000000000009012 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9012:	55                   	push   %rbp
    9013:	48 89 e5             	mov    %rsp,%rbp
    9016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    901a:	90                   	nop
    901b:	5d                   	pop    %rbp
    901c:	c3                   	ret

000000000000901d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    901d:	55                   	push   %rbp
    901e:	48 89 e5             	mov    %rsp,%rbp
    9021:	53                   	push   %rbx
    9022:	48 83 ec 28          	sub    $0x28,%rsp
    9026:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    902a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    902e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9032:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9036:	48 89 d6             	mov    %rdx,%rsi
    9039:	48 89 c7             	mov    %rax,%rdi
    903c:	e8 e9 00 00 00       	call   912a <_ZNSaIPKcEC1ERKS1_>
    9041:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9045:	48 89 c7             	mov    %rax,%rdi
    9048:	e8 16 0f 00 00       	call   9f63 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    904d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9051:	0f 92 c3             	setb   %bl
    9054:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9058:	48 89 c7             	mov    %rax,%rdi
    905b:	e8 52 f1 ff ff       	call   81b2 <_ZNSaIPKcED1Ev>
    9060:	84 db                	test   %bl,%bl
    9062:	74 0f                	je     9073 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9064:	48 8d 05 95 00 01 00 	lea    0x10095(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    906b:	48 89 c7             	mov    %rax,%rdi
    906e:	e8 1d b1 ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9073:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9077:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    907b:	c9                   	leave
    907c:	c3                   	ret
    907d:	90                   	nop

000000000000907e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    907e:	55                   	push   %rbp
    907f:	48 89 e5             	mov    %rsp,%rbp
    9082:	53                   	push   %rbx
    9083:	48 83 ec 28          	sub    $0x28,%rsp
    9087:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    908b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    908f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9097:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    909b:	48 89 d6             	mov    %rdx,%rsi
    909e:	48 89 c7             	mov    %rax,%rdi
    90a1:	e8 00 0f 00 00       	call   9fa6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    90a6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    90aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90ae:	48 89 d6             	mov    %rdx,%rsi
    90b1:	48 89 c7             	mov    %rax,%rdi
    90b4:	e8 1f 0f 00 00       	call   9fd8 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    90b9:	eb 1a                	jmp    90d5 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    90bb:	48 89 c3             	mov    %rax,%rbx
    90be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90c2:	48 89 c7             	mov    %rax,%rdi
    90c5:	e8 2c ed ff ff       	call   7df6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    90ca:	48 89 d8             	mov    %rbx,%rax
    90cd:	48 89 c7             	mov    %rax,%rdi
    90d0:	e8 5b b6 ff ff       	call   4730 <_Unwind_Resume@plt>
    90d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90d9:	c9                   	leave
    90da:	c3                   	ret
    90db:	90                   	nop

00000000000090dc <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    90dc:	55                   	push   %rbp
    90dd:	48 89 e5             	mov    %rsp,%rbp
    90e0:	48 83 ec 10          	sub    $0x10,%rsp
    90e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    90ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90f0:	48 89 c7             	mov    %rax,%rdi
    90f3:	e8 24 00 00 00       	call   911c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    90f8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    90fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ff:	48 8b 00             	mov    (%rax),%rax
    9102:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9106:	48 89 ce             	mov    %rcx,%rsi
    9109:	48 89 c7             	mov    %rax,%rdi
    910c:	e8 1d 0f 00 00       	call   a02e <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9111:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9115:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9119:	90                   	nop
    911a:	c9                   	leave
    911b:	c3                   	ret

000000000000911c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    911c:	55                   	push   %rbp
    911d:	48 89 e5             	mov    %rsp,%rbp
    9120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9128:	5d                   	pop    %rbp
    9129:	c3                   	ret

000000000000912a <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    912a:	55                   	push   %rbp
    912b:	48 89 e5             	mov    %rsp,%rbp
    912e:	48 83 ec 10          	sub    $0x10,%rsp
    9132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9136:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    913a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    913e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9142:	48 89 d6             	mov    %rdx,%rsi
    9145:	48 89 c7             	mov    %rax,%rdi
    9148:	e8 0b 0f 00 00       	call   a058 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    914d:	90                   	nop
    914e:	c9                   	leave
    914f:	c3                   	ret

0000000000009150 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9150:	55                   	push   %rbp
    9151:	48 89 e5             	mov    %rsp,%rbp
    9154:	48 83 ec 20          	sub    $0x20,%rsp
    9158:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    915c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9160:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9164:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9169:	74 17                	je     9182 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    916b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    916f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9173:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9177:	48 89 ce             	mov    %rcx,%rsi
    917a:	48 89 c7             	mov    %rax,%rdi
    917d:	e8 e5 0e 00 00       	call   a067 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    9182:	90                   	nop
    9183:	c9                   	leave
    9184:	c3                   	ret
    9185:	90                   	nop

0000000000009186 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9186:	55                   	push   %rbp
    9187:	48 89 e5             	mov    %rsp,%rbp
    918a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    918e:	90                   	nop
    918f:	5d                   	pop    %rbp
    9190:	c3                   	ret
    9191:	90                   	nop

0000000000009192 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9192:	55                   	push   %rbp
    9193:	48 89 e5             	mov    %rsp,%rbp
    9196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    919a:	90                   	nop
    919b:	5d                   	pop    %rbp
    919c:	c3                   	ret

000000000000919d <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    919d:	55                   	push   %rbp
    919e:	48 89 e5             	mov    %rsp,%rbp
    91a1:	53                   	push   %rbx
    91a2:	48 83 ec 28          	sub    $0x28,%rsp
    91a6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    91aa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    91ae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    91b2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91b6:	48 89 d6             	mov    %rdx,%rsi
    91b9:	48 89 c7             	mov    %rax,%rdi
    91bc:	e8 25 01 00 00       	call   92e6 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    91c1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91c5:	48 89 c7             	mov    %rax,%rdi
    91c8:	e8 c8 0e 00 00       	call   a095 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    91cd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    91d1:	0f 92 c3             	setb   %bl
    91d4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91d8:	48 89 c7             	mov    %rax,%rdi
    91db:	e8 ee f0 ff ff       	call   82ce <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    91e0:	84 db                	test   %bl,%bl
    91e2:	74 0f                	je     91f3 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    91e4:	48 8d 05 15 ff 00 00 	lea    0xff15(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    91eb:	48 89 c7             	mov    %rax,%rdi
    91ee:	e8 9d af ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    91f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    91f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91fb:	c9                   	leave
    91fc:	c3                   	ret
    91fd:	90                   	nop

00000000000091fe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    91fe:	55                   	push   %rbp
    91ff:	48 89 e5             	mov    %rsp,%rbp
    9202:	53                   	push   %rbx
    9203:	48 83 ec 28          	sub    $0x28,%rsp
    9207:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    920b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    920f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9213:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9217:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    921b:	48 89 d6             	mov    %rdx,%rsi
    921e:	48 89 c7             	mov    %rax,%rdi
    9221:	e8 b2 0e 00 00       	call   a0d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9226:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    922a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    922e:	48 89 d6             	mov    %rdx,%rsi
    9231:	48 89 c7             	mov    %rax,%rdi
    9234:	e8 d1 0e 00 00       	call   a10a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    9239:	eb 1a                	jmp    9255 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    923b:	48 89 c3             	mov    %rax,%rbx
    923e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9242:	48 89 c7             	mov    %rax,%rdi
    9245:	e8 c8 eb ff ff       	call   7e12 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    924a:	48 89 d8             	mov    %rbx,%rax
    924d:	48 89 c7             	mov    %rax,%rdi
    9250:	e8 db b4 ff ff       	call   4730 <_Unwind_Resume@plt>
    9255:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9259:	c9                   	leave
    925a:	c3                   	ret
    925b:	90                   	nop

000000000000925c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    925c:	55                   	push   %rbp
    925d:	48 89 e5             	mov    %rsp,%rbp
    9260:	48 83 ec 10          	sub    $0x10,%rsp
    9264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9268:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    926c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9270:	48 89 c7             	mov    %rax,%rdi
    9273:	e8 24 00 00 00       	call   929c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9278:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    927b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    927f:	48 8b 00             	mov    (%rax),%rax
    9282:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9286:	48 89 ce             	mov    %rcx,%rsi
    9289:	48 89 c7             	mov    %rax,%rdi
    928c:	e8 cf 0e 00 00       	call   a160 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9291:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9295:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9299:	90                   	nop
    929a:	c9                   	leave
    929b:	c3                   	ret

000000000000929c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    929c:	55                   	push   %rbp
    929d:	48 89 e5             	mov    %rsp,%rbp
    92a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    92a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a8:	5d                   	pop    %rbp
    92a9:	c3                   	ret

00000000000092aa <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    92aa:	55                   	push   %rbp
    92ab:	48 89 e5             	mov    %rsp,%rbp
    92ae:	48 83 ec 20          	sub    $0x20,%rsp
    92b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    92ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    92be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    92c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92c6:	48 89 d6             	mov    %rdx,%rsi
    92c9:	48 89 c7             	mov    %rax,%rdi
    92cc:	e8 b8 0e 00 00       	call   a189 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    92d1:	90                   	nop
    92d2:	c9                   	leave
    92d3:	c3                   	ret

00000000000092d4 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    92d4:	55                   	push   %rbp
    92d5:	48 89 e5             	mov    %rsp,%rbp
    92d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    92e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92e4:	5d                   	pop    %rbp
    92e5:	c3                   	ret

00000000000092e6 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    92e6:	55                   	push   %rbp
    92e7:	48 89 e5             	mov    %rsp,%rbp
    92ea:	48 83 ec 10          	sub    $0x10,%rsp
    92ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    92f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    92fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92fe:	48 89 d6             	mov    %rdx,%rsi
    9301:	48 89 c7             	mov    %rax,%rdi
    9304:	e8 a7 0e 00 00       	call   a1b0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    9309:	90                   	nop
    930a:	c9                   	leave
    930b:	c3                   	ret

000000000000930c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    930c:	55                   	push   %rbp
    930d:	48 89 e5             	mov    %rsp,%rbp
    9310:	48 83 ec 20          	sub    $0x20,%rsp
    9314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9318:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    931c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9320:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9325:	74 17                	je     933e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    932b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    932f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9333:	48 89 ce             	mov    %rcx,%rsi
    9336:	48 89 c7             	mov    %rax,%rdi
    9339:	e8 81 0e 00 00       	call   a1bf <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    933e:	90                   	nop
    933f:	c9                   	leave
    9340:	c3                   	ret
    9341:	90                   	nop

0000000000009342 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9342:	55                   	push   %rbp
    9343:	48 89 e5             	mov    %rsp,%rbp
    9346:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    934a:	90                   	nop
    934b:	5d                   	pop    %rbp
    934c:	c3                   	ret
    934d:	90                   	nop

000000000000934e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    934e:	55                   	push   %rbp
    934f:	48 89 e5             	mov    %rsp,%rbp
    9352:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9356:	90                   	nop
    9357:	5d                   	pop    %rbp
    9358:	c3                   	ret

0000000000009359 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9359:	55                   	push   %rbp
    935a:	48 89 e5             	mov    %rsp,%rbp
    935d:	53                   	push   %rbx
    935e:	48 83 ec 28          	sub    $0x28,%rsp
    9362:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9366:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    936a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    936e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9372:	48 89 d6             	mov    %rdx,%rsi
    9375:	48 89 c7             	mov    %rax,%rdi
    9378:	e8 25 01 00 00       	call   94a2 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    937d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9381:	48 89 c7             	mov    %rax,%rdi
    9384:	e8 64 0e 00 00       	call   a1ed <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    9389:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    938d:	0f 92 c3             	setb   %bl
    9390:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9394:	48 89 c7             	mov    %rax,%rdi
    9397:	e8 96 f0 ff ff       	call   8432 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    939c:	84 db                	test   %bl,%bl
    939e:	74 0f                	je     93af <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    93a0:	48 8d 05 59 fd 00 00 	lea    0xfd59(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    93a7:	48 89 c7             	mov    %rax,%rdi
    93aa:	e8 e1 ad ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    93af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    93b3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    93b7:	c9                   	leave
    93b8:	c3                   	ret
    93b9:	90                   	nop

00000000000093ba <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    93ba:	55                   	push   %rbp
    93bb:	48 89 e5             	mov    %rsp,%rbp
    93be:	53                   	push   %rbx
    93bf:	48 83 ec 28          	sub    $0x28,%rsp
    93c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    93c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    93cb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    93cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    93d7:	48 89 d6             	mov    %rdx,%rsi
    93da:	48 89 c7             	mov    %rax,%rdi
    93dd:	e8 4e 0e 00 00       	call   a230 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    93e2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    93e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93ea:	48 89 d6             	mov    %rdx,%rsi
    93ed:	48 89 c7             	mov    %rax,%rdi
    93f0:	e8 6d 0e 00 00       	call   a262 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    93f5:	eb 1a                	jmp    9411 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    93f7:	48 89 c3             	mov    %rax,%rbx
    93fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93fe:	48 89 c7             	mov    %rax,%rdi
    9401:	e8 28 ea ff ff       	call   7e2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    9406:	48 89 d8             	mov    %rbx,%rax
    9409:	48 89 c7             	mov    %rax,%rdi
    940c:	e8 1f b3 ff ff       	call   4730 <_Unwind_Resume@plt>
    9411:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9415:	c9                   	leave
    9416:	c3                   	ret
    9417:	90                   	nop

0000000000009418 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9418:	55                   	push   %rbp
    9419:	48 89 e5             	mov    %rsp,%rbp
    941c:	48 83 ec 10          	sub    $0x10,%rsp
    9420:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9424:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    942c:	48 89 c7             	mov    %rax,%rdi
    942f:	e8 24 00 00 00       	call   9458 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9434:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    943b:	48 8b 00             	mov    (%rax),%rax
    943e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9442:	48 89 ce             	mov    %rcx,%rsi
    9445:	48 89 c7             	mov    %rax,%rdi
    9448:	e8 75 0e 00 00       	call   a2c2 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    944d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9451:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9455:	90                   	nop
    9456:	c9                   	leave
    9457:	c3                   	ret

0000000000009458 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9458:	55                   	push   %rbp
    9459:	48 89 e5             	mov    %rsp,%rbp
    945c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9464:	5d                   	pop    %rbp
    9465:	c3                   	ret

0000000000009466 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9466:	55                   	push   %rbp
    9467:	48 89 e5             	mov    %rsp,%rbp
    946a:	48 83 ec 20          	sub    $0x20,%rsp
    946e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9472:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9476:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    947a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    947e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9482:	48 89 d6             	mov    %rdx,%rsi
    9485:	48 89 c7             	mov    %rax,%rdi
    9488:	e8 5e 0e 00 00       	call   a2eb <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    948d:	90                   	nop
    948e:	c9                   	leave
    948f:	c3                   	ret

0000000000009490 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9490:	55                   	push   %rbp
    9491:	48 89 e5             	mov    %rsp,%rbp
    9494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9498:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    949c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94a0:	5d                   	pop    %rbp
    94a1:	c3                   	ret

00000000000094a2 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    94a2:	55                   	push   %rbp
    94a3:	48 89 e5             	mov    %rsp,%rbp
    94a6:	48 83 ec 10          	sub    $0x10,%rsp
    94aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    94b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94ba:	48 89 d6             	mov    %rdx,%rsi
    94bd:	48 89 c7             	mov    %rax,%rdi
    94c0:	e8 4d 0e 00 00       	call   a312 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    94c5:	90                   	nop
    94c6:	c9                   	leave
    94c7:	c3                   	ret

00000000000094c8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    94c8:	55                   	push   %rbp
    94c9:	48 89 e5             	mov    %rsp,%rbp
    94cc:	48 83 ec 20          	sub    $0x20,%rsp
    94d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    94dc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    94e1:	74 17                	je     94fa <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    94e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    94eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94ef:	48 89 ce             	mov    %rcx,%rsi
    94f2:	48 89 c7             	mov    %rax,%rdi
    94f5:	e8 27 0e 00 00       	call   a321 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    94fa:	90                   	nop
    94fb:	c9                   	leave
    94fc:	c3                   	ret
    94fd:	90                   	nop

00000000000094fe <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    94fe:	55                   	push   %rbp
    94ff:	48 89 e5             	mov    %rsp,%rbp
    9502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9506:	90                   	nop
    9507:	5d                   	pop    %rbp
    9508:	c3                   	ret
    9509:	90                   	nop

000000000000950a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    950a:	55                   	push   %rbp
    950b:	48 89 e5             	mov    %rsp,%rbp
    950e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9512:	90                   	nop
    9513:	5d                   	pop    %rbp
    9514:	c3                   	ret

0000000000009515 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9515:	55                   	push   %rbp
    9516:	48 89 e5             	mov    %rsp,%rbp
    9519:	53                   	push   %rbx
    951a:	48 83 ec 28          	sub    $0x28,%rsp
    951e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9522:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9526:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    952a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    952e:	48 89 d6             	mov    %rdx,%rsi
    9531:	48 89 c7             	mov    %rax,%rdi
    9534:	e8 d7 01 00 00       	call   9710 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    9539:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    953d:	48 89 c7             	mov    %rax,%rdi
    9540:	e8 0a 0e 00 00       	call   a34f <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    9545:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9549:	0f 92 c3             	setb   %bl
    954c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9550:	48 89 c7             	mov    %rax,%rdi
    9553:	e8 76 f0 ff ff       	call   85ce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9558:	84 db                	test   %bl,%bl
    955a:	74 0f                	je     956b <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    955c:	48 8d 05 9d fb 00 00 	lea    0xfb9d(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9563:	48 89 c7             	mov    %rax,%rdi
    9566:	e8 25 ac ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    956b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    956f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9573:	c9                   	leave
    9574:	c3                   	ret
    9575:	90                   	nop

0000000000009576 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9576:	55                   	push   %rbp
    9577:	48 89 e5             	mov    %rsp,%rbp
    957a:	53                   	push   %rbx
    957b:	48 83 ec 28          	sub    $0x28,%rsp
    957f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9583:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9587:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    958b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    958f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9593:	48 89 d6             	mov    %rdx,%rsi
    9596:	48 89 c7             	mov    %rax,%rdi
    9599:	e8 f4 0d 00 00       	call   a392 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    959e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95a6:	48 89 d6             	mov    %rdx,%rsi
    95a9:	48 89 c7             	mov    %rax,%rdi
    95ac:	e8 13 0e 00 00       	call   a3c4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    95b1:	eb 1a                	jmp    95cd <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    95b3:	48 89 c3             	mov    %rax,%rbx
    95b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95ba:	48 89 c7             	mov    %rax,%rdi
    95bd:	e8 88 e8 ff ff       	call   7e4a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    95c2:	48 89 d8             	mov    %rbx,%rax
    95c5:	48 89 c7             	mov    %rax,%rdi
    95c8:	e8 63 b1 ff ff       	call   4730 <_Unwind_Resume@plt>
    95cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95d1:	c9                   	leave
    95d2:	c3                   	ret
    95d3:	90                   	nop

00000000000095d4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    95d4:	55                   	push   %rbp
    95d5:	48 89 e5             	mov    %rsp,%rbp
    95d8:	48 83 ec 10          	sub    $0x10,%rsp
    95dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    95e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95e8:	48 89 c7             	mov    %rax,%rdi
    95eb:	e8 24 00 00 00       	call   9614 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    95f0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    95f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95f7:	48 8b 00             	mov    (%rax),%rax
    95fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95fe:	48 89 ce             	mov    %rcx,%rsi
    9601:	48 89 c7             	mov    %rax,%rdi
    9604:	e8 1c 0e 00 00       	call   a425 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9609:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    960d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9611:	90                   	nop
    9612:	c9                   	leave
    9613:	c3                   	ret

0000000000009614 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9614:	55                   	push   %rbp
    9615:	48 89 e5             	mov    %rsp,%rbp
    9618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    961c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9620:	5d                   	pop    %rbp
    9621:	c3                   	ret

0000000000009622 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9622:	55                   	push   %rbp
    9623:	48 89 e5             	mov    %rsp,%rbp
    9626:	48 83 ec 20          	sub    $0x20,%rsp
    962a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    962e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9632:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9636:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    963a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963e:	48 89 d6             	mov    %rdx,%rsi
    9641:	48 89 c7             	mov    %rax,%rdi
    9644:	e8 05 0e 00 00       	call   a44e <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    9649:	90                   	nop
    964a:	c9                   	leave
    964b:	c3                   	ret

000000000000964c <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    964c:	55                   	push   %rbp
    964d:	48 89 e5             	mov    %rsp,%rbp
    9650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9654:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    9658:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    965c:	48 8b 10             	mov    (%rax),%rdx
    965f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9663:	48 89 10             	mov    %rdx,(%rax)
    9666:	90                   	nop
    9667:	5d                   	pop    %rbp
    9668:	c3                   	ret
    9669:	90                   	nop

000000000000966a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    966a:	55                   	push   %rbp
    966b:	48 89 e5             	mov    %rsp,%rbp
    966e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9676:	5d                   	pop    %rbp
    9677:	c3                   	ret

0000000000009678 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    9678:	55                   	push   %rbp
    9679:	48 89 e5             	mov    %rsp,%rbp
    967c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    9680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9684:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    9688:	5d                   	pop    %rbp
    9689:	c3                   	ret

000000000000968a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    968a:	55                   	push   %rbp
    968b:	48 89 e5             	mov    %rsp,%rbp
    968e:	48 83 ec 10          	sub    $0x10,%rsp
    9692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    9696:	e8 43 b4 ff ff       	call   4ade <_ZSt23__is_constant_evaluatedv>
    969b:	84 c0                	test   %al,%al
    969d:	74 1a                	je     96b9 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    969f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96a3:	48 89 c7             	mov    %rax,%rdi
    96a6:	e8 cd ff ff ff       	call   9678 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    96ab:	83 f0 01             	xor    $0x1,%eax
    96ae:	84 c0                	test   %al,%al
    96b0:	74 07                	je     96b9 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    96b2:	b8 01 00 00 00       	mov    $0x1,%eax
    96b7:	eb 05                	jmp    96be <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    96b9:	b8 00 00 00 00       	mov    $0x0,%eax
    96be:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    96c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96c4:	48 89 c7             	mov    %rax,%rdi
    96c7:	e8 a8 0d 00 00       	call   a474 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    96cc:	c9                   	leave
    96cd:	c3                   	ret

00000000000096ce <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    96ce:	55                   	push   %rbp
    96cf:	48 89 e5             	mov    %rsp,%rbp
    96d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    96d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96da:	5d                   	pop    %rbp
    96db:	c3                   	ret

00000000000096dc <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    96dc:	55                   	push   %rbp
    96dd:	48 89 e5             	mov    %rsp,%rbp
    96e0:	53                   	push   %rbx
    96e1:	48 83 ec 18          	sub    $0x18,%rsp
    96e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    96e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    96ed:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    96f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96f5:	48 89 c7             	mov    %rax,%rdi
    96f8:	e8 d1 ff ff ff       	call   96ce <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    96fd:	48 89 c6             	mov    %rax,%rsi
    9700:	48 89 df             	mov    %rbx,%rdi
    9703:	e8 7a 0d 00 00       	call   a482 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    9708:	90                   	nop
    9709:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    970d:	c9                   	leave
    970e:	c3                   	ret
    970f:	90                   	nop

0000000000009710 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9710:	55                   	push   %rbp
    9711:	48 89 e5             	mov    %rsp,%rbp
    9714:	48 83 ec 10          	sub    $0x10,%rsp
    9718:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    971c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9720:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9728:	48 89 d6             	mov    %rdx,%rsi
    972b:	48 89 c7             	mov    %rax,%rdi
    972e:	e8 95 0d 00 00       	call   a4c8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    9733:	90                   	nop
    9734:	c9                   	leave
    9735:	c3                   	ret

0000000000009736 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    9736:	55                   	push   %rbp
    9737:	48 89 e5             	mov    %rsp,%rbp
    973a:	48 83 ec 20          	sub    $0x20,%rsp
    973e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9742:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9746:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    974a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    974f:	74 17                	je     9768 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9755:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9759:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    975d:	48 89 ce             	mov    %rcx,%rsi
    9760:	48 89 c7             	mov    %rax,%rdi
    9763:	e8 6f 0d 00 00       	call   a4d7 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    9768:	90                   	nop
    9769:	c9                   	leave
    976a:	c3                   	ret
    976b:	90                   	nop

000000000000976c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    976c:	55                   	push   %rbp
    976d:	48 89 e5             	mov    %rsp,%rbp
    9770:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9774:	90                   	nop
    9775:	5d                   	pop    %rbp
    9776:	c3                   	ret
    9777:	90                   	nop

0000000000009778 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9778:	55                   	push   %rbp
    9779:	48 89 e5             	mov    %rsp,%rbp
    977c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9780:	90                   	nop
    9781:	5d                   	pop    %rbp
    9782:	c3                   	ret

0000000000009783 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9783:	55                   	push   %rbp
    9784:	48 89 e5             	mov    %rsp,%rbp
    9787:	53                   	push   %rbx
    9788:	48 83 ec 28          	sub    $0x28,%rsp
    978c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9790:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9794:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9798:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    979c:	48 89 d6             	mov    %rdx,%rsi
    979f:	48 89 c7             	mov    %rax,%rdi
    97a2:	e8 25 01 00 00       	call   98cc <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    97a7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    97ab:	48 89 c7             	mov    %rax,%rdi
    97ae:	e8 52 0d 00 00       	call   a505 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    97b3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    97b7:	0f 92 c3             	setb   %bl
    97ba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    97be:	48 89 c7             	mov    %rax,%rdi
    97c1:	e8 b8 f0 ff ff       	call   887e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    97c6:	84 db                	test   %bl,%bl
    97c8:	74 0f                	je     97d9 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    97ca:	48 8d 05 2f f9 00 00 	lea    0xf92f(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    97d1:	48 89 c7             	mov    %rax,%rdi
    97d4:	e8 b7 a9 ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    97d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    97dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    97e1:	c9                   	leave
    97e2:	c3                   	ret
    97e3:	90                   	nop

00000000000097e4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    97e4:	55                   	push   %rbp
    97e5:	48 89 e5             	mov    %rsp,%rbp
    97e8:	53                   	push   %rbx
    97e9:	48 83 ec 28          	sub    $0x28,%rsp
    97ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    97f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    97f5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    97f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97fd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9801:	48 89 d6             	mov    %rdx,%rsi
    9804:	48 89 c7             	mov    %rax,%rdi
    9807:	e8 3c 0d 00 00       	call   a548 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    980c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9814:	48 89 d6             	mov    %rdx,%rsi
    9817:	48 89 c7             	mov    %rax,%rdi
    981a:	e8 5b 0d 00 00       	call   a57a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    981f:	eb 1a                	jmp    983b <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    9821:	48 89 c3             	mov    %rax,%rbx
    9824:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9828:	48 89 c7             	mov    %rax,%rdi
    982b:	e8 36 e6 ff ff       	call   7e66 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    9830:	48 89 d8             	mov    %rbx,%rax
    9833:	48 89 c7             	mov    %rax,%rdi
    9836:	e8 f5 ae ff ff       	call   4730 <_Unwind_Resume@plt>
    983b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    983f:	c9                   	leave
    9840:	c3                   	ret
    9841:	90                   	nop

0000000000009842 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9842:	55                   	push   %rbp
    9843:	48 89 e5             	mov    %rsp,%rbp
    9846:	48 83 ec 10          	sub    $0x10,%rsp
    984a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    984e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9856:	48 89 c7             	mov    %rax,%rdi
    9859:	e8 24 00 00 00       	call   9882 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    985e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9865:	48 8b 00             	mov    (%rax),%rax
    9868:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    986c:	48 89 ce             	mov    %rcx,%rsi
    986f:	48 89 c7             	mov    %rax,%rdi
    9872:	e8 59 0d 00 00       	call   a5d0 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9877:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    987b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    987f:	90                   	nop
    9880:	c9                   	leave
    9881:	c3                   	ret

0000000000009882 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9882:	55                   	push   %rbp
    9883:	48 89 e5             	mov    %rsp,%rbp
    9886:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    988a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    988e:	5d                   	pop    %rbp
    988f:	c3                   	ret

0000000000009890 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9890:	55                   	push   %rbp
    9891:	48 89 e5             	mov    %rsp,%rbp
    9894:	48 83 ec 20          	sub    $0x20,%rsp
    9898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    989c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    98a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    98a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    98a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ac:	48 89 d6             	mov    %rdx,%rsi
    98af:	48 89 c7             	mov    %rax,%rdi
    98b2:	e8 42 0d 00 00       	call   a5f9 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    98b7:	90                   	nop
    98b8:	c9                   	leave
    98b9:	c3                   	ret

00000000000098ba <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    98ba:	55                   	push   %rbp
    98bb:	48 89 e5             	mov    %rsp,%rbp
    98be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    98c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    98ca:	5d                   	pop    %rbp
    98cb:	c3                   	ret

00000000000098cc <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    98cc:	55                   	push   %rbp
    98cd:	48 89 e5             	mov    %rsp,%rbp
    98d0:	48 83 ec 10          	sub    $0x10,%rsp
    98d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    98dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    98e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e4:	48 89 d6             	mov    %rdx,%rsi
    98e7:	48 89 c7             	mov    %rax,%rdi
    98ea:	e8 31 0d 00 00       	call   a620 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    98ef:	90                   	nop
    98f0:	c9                   	leave
    98f1:	c3                   	ret

00000000000098f2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    98f2:	55                   	push   %rbp
    98f3:	48 89 e5             	mov    %rsp,%rbp
    98f6:	48 83 ec 20          	sub    $0x20,%rsp
    98fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9902:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9906:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    990b:	74 17                	je     9924 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    990d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9911:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9915:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9919:	48 89 ce             	mov    %rcx,%rsi
    991c:	48 89 c7             	mov    %rax,%rdi
    991f:	e8 0b 0d 00 00       	call   a62f <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    9924:	90                   	nop
    9925:	c9                   	leave
    9926:	c3                   	ret
    9927:	90                   	nop

0000000000009928 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9928:	55                   	push   %rbp
    9929:	48 89 e5             	mov    %rsp,%rbp
    992c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9930:	90                   	nop
    9931:	5d                   	pop    %rbp
    9932:	c3                   	ret
    9933:	90                   	nop

0000000000009934 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9934:	55                   	push   %rbp
    9935:	48 89 e5             	mov    %rsp,%rbp
    9938:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    993c:	90                   	nop
    993d:	5d                   	pop    %rbp
    993e:	c3                   	ret

000000000000993f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    993f:	55                   	push   %rbp
    9940:	48 89 e5             	mov    %rsp,%rbp
    9943:	53                   	push   %rbx
    9944:	48 83 ec 28          	sub    $0x28,%rsp
    9948:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    994c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9950:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9954:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9958:	48 89 d6             	mov    %rdx,%rsi
    995b:	48 89 c7             	mov    %rax,%rdi
    995e:	e8 25 01 00 00       	call   9a88 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    9963:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9967:	48 89 c7             	mov    %rax,%rdi
    996a:	e8 ee 0c 00 00       	call   a65d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    996f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9973:	0f 92 c3             	setb   %bl
    9976:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    997a:	48 89 c7             	mov    %rax,%rdi
    997d:	e8 60 f0 ff ff       	call   89e2 <_ZNSaI16VkPresentModeKHRED1Ev>
    9982:	84 db                	test   %bl,%bl
    9984:	74 0f                	je     9995 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9986:	48 8d 05 73 f7 00 00 	lea    0xf773(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    998d:	48 89 c7             	mov    %rax,%rdi
    9990:	e8 fb a7 ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9995:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9999:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    999d:	c9                   	leave
    999e:	c3                   	ret
    999f:	90                   	nop

00000000000099a0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    99a0:	55                   	push   %rbp
    99a1:	48 89 e5             	mov    %rsp,%rbp
    99a4:	53                   	push   %rbx
    99a5:	48 83 ec 28          	sub    $0x28,%rsp
    99a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    99b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    99b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99bd:	48 89 d6             	mov    %rdx,%rsi
    99c0:	48 89 c7             	mov    %rax,%rdi
    99c3:	e8 d8 0c 00 00       	call   a6a0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    99c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    99cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99d0:	48 89 d6             	mov    %rdx,%rsi
    99d3:	48 89 c7             	mov    %rax,%rdi
    99d6:	e8 f7 0c 00 00       	call   a6d2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    99db:	eb 1a                	jmp    99f7 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    99dd:	48 89 c3             	mov    %rax,%rbx
    99e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99e4:	48 89 c7             	mov    %rax,%rdi
    99e7:	e8 96 e4 ff ff       	call   7e82 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    99ec:	48 89 d8             	mov    %rbx,%rax
    99ef:	48 89 c7             	mov    %rax,%rdi
    99f2:	e8 39 ad ff ff       	call   4730 <_Unwind_Resume@plt>
    99f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99fb:	c9                   	leave
    99fc:	c3                   	ret
    99fd:	90                   	nop

00000000000099fe <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    99fe:	55                   	push   %rbp
    99ff:	48 89 e5             	mov    %rsp,%rbp
    9a02:	48 83 ec 10          	sub    $0x10,%rsp
    9a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a12:	48 89 c7             	mov    %rax,%rdi
    9a15:	e8 24 00 00 00       	call   9a3e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9a1a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9a1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a21:	48 8b 00             	mov    (%rax),%rax
    9a24:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9a28:	48 89 ce             	mov    %rcx,%rsi
    9a2b:	48 89 c7             	mov    %rax,%rdi
    9a2e:	e8 f5 0c 00 00       	call   a728 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9a33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a37:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9a3b:	90                   	nop
    9a3c:	c9                   	leave
    9a3d:	c3                   	ret

0000000000009a3e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9a3e:	55                   	push   %rbp
    9a3f:	48 89 e5             	mov    %rsp,%rbp
    9a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a4a:	5d                   	pop    %rbp
    9a4b:	c3                   	ret

0000000000009a4c <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9a4c:	55                   	push   %rbp
    9a4d:	48 89 e5             	mov    %rsp,%rbp
    9a50:	48 83 ec 20          	sub    $0x20,%rsp
    9a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9a60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a68:	48 89 d6             	mov    %rdx,%rsi
    9a6b:	48 89 c7             	mov    %rax,%rdi
    9a6e:	e8 de 0c 00 00       	call   a751 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9a73:	90                   	nop
    9a74:	c9                   	leave
    9a75:	c3                   	ret

0000000000009a76 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9a76:	55                   	push   %rbp
    9a77:	48 89 e5             	mov    %rsp,%rbp
    9a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9a82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a86:	5d                   	pop    %rbp
    9a87:	c3                   	ret

0000000000009a88 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9a88:	55                   	push   %rbp
    9a89:	48 89 e5             	mov    %rsp,%rbp
    9a8c:	48 83 ec 10          	sub    $0x10,%rsp
    9a90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9a98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa0:	48 89 d6             	mov    %rdx,%rsi
    9aa3:	48 89 c7             	mov    %rax,%rdi
    9aa6:	e8 cd 0c 00 00       	call   a778 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    9aab:	90                   	nop
    9aac:	c9                   	leave
    9aad:	c3                   	ret

0000000000009aae <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9aae:	55                   	push   %rbp
    9aaf:	48 89 e5             	mov    %rsp,%rbp
    9ab2:	48 83 ec 20          	sub    $0x20,%rsp
    9ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9aba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9abe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9ac2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9ac7:	74 17                	je     9ae0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9ac9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9acd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ad1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9ad5:	48 89 ce             	mov    %rcx,%rsi
    9ad8:	48 89 c7             	mov    %rax,%rdi
    9adb:	e8 a7 0c 00 00       	call   a787 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    9ae0:	90                   	nop
    9ae1:	c9                   	leave
    9ae2:	c3                   	ret
    9ae3:	90                   	nop

0000000000009ae4 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9ae4:	55                   	push   %rbp
    9ae5:	48 89 e5             	mov    %rsp,%rbp
    9ae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9aec:	90                   	nop
    9aed:	5d                   	pop    %rbp
    9aee:	c3                   	ret
    9aef:	90                   	nop

0000000000009af0 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9af0:	55                   	push   %rbp
    9af1:	48 89 e5             	mov    %rsp,%rbp
    9af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9af8:	90                   	nop
    9af9:	5d                   	pop    %rbp
    9afa:	c3                   	ret

0000000000009afb <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9afb:	55                   	push   %rbp
    9afc:	48 89 e5             	mov    %rsp,%rbp
    9aff:	53                   	push   %rbx
    9b00:	48 83 ec 28          	sub    $0x28,%rsp
    9b04:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9b08:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9b0c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9b10:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b14:	48 89 d6             	mov    %rdx,%rsi
    9b17:	48 89 c7             	mov    %rax,%rdi
    9b1a:	e8 25 01 00 00       	call   9c44 <_ZNSaIP9VkImage_TEC1ERKS1_>
    9b1f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b23:	48 89 c7             	mov    %rax,%rdi
    9b26:	e8 8a 0c 00 00       	call   a7b5 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    9b2b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9b2f:	0f 92 c3             	setb   %bl
    9b32:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b36:	48 89 c7             	mov    %rax,%rdi
    9b39:	e8 08 f0 ff ff       	call   8b46 <_ZNSaIP9VkImage_TED1Ev>
    9b3e:	84 db                	test   %bl,%bl
    9b40:	74 0f                	je     9b51 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9b42:	48 8d 05 b7 f5 00 00 	lea    0xf5b7(%rip),%rax        # 19100 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9b49:	48 89 c7             	mov    %rax,%rdi
    9b4c:	e8 3f a6 ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9b51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9b55:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b59:	c9                   	leave
    9b5a:	c3                   	ret
    9b5b:	90                   	nop

0000000000009b5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9b5c:	55                   	push   %rbp
    9b5d:	48 89 e5             	mov    %rsp,%rbp
    9b60:	53                   	push   %rbx
    9b61:	48 83 ec 28          	sub    $0x28,%rsp
    9b65:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b69:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9b6d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9b71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b75:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9b79:	48 89 d6             	mov    %rdx,%rsi
    9b7c:	48 89 c7             	mov    %rax,%rdi
    9b7f:	e8 74 0c 00 00       	call   a7f8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9b84:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b8c:	48 89 d6             	mov    %rdx,%rsi
    9b8f:	48 89 c7             	mov    %rax,%rdi
    9b92:	e8 93 0c 00 00       	call   a82a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    9b97:	eb 1a                	jmp    9bb3 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    9b99:	48 89 c3             	mov    %rax,%rbx
    9b9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ba0:	48 89 c7             	mov    %rax,%rdi
    9ba3:	e8 f6 e2 ff ff       	call   7e9e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    9ba8:	48 89 d8             	mov    %rbx,%rax
    9bab:	48 89 c7             	mov    %rax,%rdi
    9bae:	e8 7d ab ff ff       	call   4730 <_Unwind_Resume@plt>
    9bb3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9bb7:	c9                   	leave
    9bb8:	c3                   	ret
    9bb9:	90                   	nop

0000000000009bba <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9bba:	55                   	push   %rbp
    9bbb:	48 89 e5             	mov    %rsp,%rbp
    9bbe:	48 83 ec 10          	sub    $0x10,%rsp
    9bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bce:	48 89 c7             	mov    %rax,%rdi
    9bd1:	e8 24 00 00 00       	call   9bfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9bd6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bdd:	48 8b 00             	mov    (%rax),%rax
    9be0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9be4:	48 89 ce             	mov    %rcx,%rsi
    9be7:	48 89 c7             	mov    %rax,%rdi
    9bea:	e8 91 0c 00 00       	call   a880 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9bef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9bf3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9bf7:	90                   	nop
    9bf8:	c9                   	leave
    9bf9:	c3                   	ret

0000000000009bfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9bfa:	55                   	push   %rbp
    9bfb:	48 89 e5             	mov    %rsp,%rbp
    9bfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c06:	5d                   	pop    %rbp
    9c07:	c3                   	ret

0000000000009c08 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9c08:	55                   	push   %rbp
    9c09:	48 89 e5             	mov    %rsp,%rbp
    9c0c:	48 83 ec 20          	sub    $0x20,%rsp
    9c10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c18:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9c1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c24:	48 89 d6             	mov    %rdx,%rsi
    9c27:	48 89 c7             	mov    %rax,%rdi
    9c2a:	e8 7a 0c 00 00       	call   a8a9 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    9c2f:	90                   	nop
    9c30:	c9                   	leave
    9c31:	c3                   	ret

0000000000009c32 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9c32:	55                   	push   %rbp
    9c33:	48 89 e5             	mov    %rsp,%rbp
    9c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9c3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9c42:	5d                   	pop    %rbp
    9c43:	c3                   	ret

0000000000009c44 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9c44:	55                   	push   %rbp
    9c45:	48 89 e5             	mov    %rsp,%rbp
    9c48:	48 83 ec 10          	sub    $0x10,%rsp
    9c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9c54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c5c:	48 89 d6             	mov    %rdx,%rsi
    9c5f:	48 89 c7             	mov    %rax,%rdi
    9c62:	e8 69 0c 00 00       	call   a8d0 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    9c67:	90                   	nop
    9c68:	c9                   	leave
    9c69:	c3                   	ret

0000000000009c6a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9c6a:	55                   	push   %rbp
    9c6b:	48 89 e5             	mov    %rsp,%rbp
    9c6e:	48 83 ec 20          	sub    $0x20,%rsp
    9c72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c7a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9c7e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9c83:	74 17                	je     9c9c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c89:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c8d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c91:	48 89 ce             	mov    %rcx,%rsi
    9c94:	48 89 c7             	mov    %rax,%rdi
    9c97:	e8 43 0c 00 00       	call   a8df <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    9c9c:	90                   	nop
    9c9d:	c9                   	leave
    9c9e:	c3                   	ret

0000000000009c9f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9c9f:	55                   	push   %rbp
    9ca0:	48 89 e5             	mov    %rsp,%rbp
    9ca3:	48 83 ec 20          	sub    $0x20,%rsp
    9ca7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9cab:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9cb2:	03 3f 00 
    9cb5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9cb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cbd:	48 89 c7             	mov    %rax,%rdi
    9cc0:	e8 48 0c 00 00       	call   a90d <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    9cc5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9cc9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9ccd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9cd1:	48 89 d6             	mov    %rdx,%rsi
    9cd4:	48 89 c7             	mov    %rax,%rdi
    9cd7:	e8 bb b7 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    9cdc:	48 8b 00             	mov    (%rax),%rax
      }
    9cdf:	c9                   	leave
    9ce0:	c3                   	ret
    9ce1:	90                   	nop

0000000000009ce2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9ce2:	55                   	push   %rbp
    9ce3:	48 89 e5             	mov    %rsp,%rbp
    9ce6:	48 83 ec 10          	sub    $0x10,%rsp
    9cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9cf2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cfa:	48 89 d6             	mov    %rdx,%rsi
    9cfd:	48 89 c7             	mov    %rax,%rdi
    9d00:	e8 e9 f0 ff ff       	call   8dee <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d09:	48 89 c7             	mov    %rax,%rdi
    9d0c:	e8 17 0c 00 00       	call   a928 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9d11:	90                   	nop
    9d12:	c9                   	leave
    9d13:	c3                   	ret

0000000000009d14 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9d14:	55                   	push   %rbp
    9d15:	48 89 e5             	mov    %rsp,%rbp
    9d18:	48 83 ec 10          	sub    $0x10,%rsp
    9d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9d24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d2c:	48 89 d6             	mov    %rdx,%rsi
    9d2f:	48 89 c7             	mov    %rax,%rdi
    9d32:	e8 1f 0c 00 00       	call   a956 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    9d37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d3b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d42:	48 8b 10             	mov    (%rax),%rdx
    9d45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d49:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9d4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d51:	48 8b 08             	mov    (%rax),%rcx
    9d54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d58:	48 89 d0             	mov    %rdx,%rax
    9d5b:	48 c1 e0 06          	shl    $0x6,%rax
    9d5f:	48 01 d0             	add    %rdx,%rax
    9d62:	48 c1 e0 03          	shl    $0x3,%rax
    9d66:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9d6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d6e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9d72:	90                   	nop
    9d73:	c9                   	leave
    9d74:	c3                   	ret

0000000000009d75 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9d75:	55                   	push   %rbp
    9d76:	48 89 e5             	mov    %rsp,%rbp
    9d79:	48 83 ec 20          	sub    $0x20,%rsp
    9d7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d85:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9d89:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d91:	48 89 d6             	mov    %rdx,%rsi
    9d94:	48 89 c7             	mov    %rax,%rdi
    9d97:	e8 ed 0b 00 00       	call   a989 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9d9c:	c9                   	leave
    9d9d:	c3                   	ret

0000000000009d9e <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9d9e:	55                   	push   %rbp
    9d9f:	48 89 e5             	mov    %rsp,%rbp
    9da2:	48 83 ec 10          	sub    $0x10,%rsp
    9da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9daa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9dae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9db6:	48 89 d6             	mov    %rdx,%rsi
    9db9:	48 89 c7             	mov    %rax,%rdi
    9dbc:	e8 f1 0b 00 00       	call   a9b2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9dc1:	90                   	nop
    9dc2:	c9                   	leave
    9dc3:	c3                   	ret

0000000000009dc4 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    9dc4:	55                   	push   %rbp
    9dc5:	48 89 e5             	mov    %rsp,%rbp
    9dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dd0:	90                   	nop
    9dd1:	5d                   	pop    %rbp
    9dd2:	c3                   	ret

0000000000009dd3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9dd3:	55                   	push   %rbp
    9dd4:	48 89 e5             	mov    %rsp,%rbp
    9dd7:	48 83 ec 20          	sub    $0x20,%rsp
    9ddb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ddf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9de3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9de7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9deb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9df3:	48 89 ce             	mov    %rcx,%rsi
    9df6:	48 89 c7             	mov    %rax,%rdi
    9df9:	e8 c4 0b 00 00       	call   a9c2 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    9dfe:	90                   	nop
    9dff:	c9                   	leave
    9e00:	c3                   	ret

0000000000009e01 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9e01:	55                   	push   %rbp
    9e02:	48 89 e5             	mov    %rsp,%rbp
    9e05:	48 83 ec 20          	sub    $0x20,%rsp
    9e09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9e0d:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    9e14:	07 7e 00 
    9e17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9e1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e1f:	48 89 c7             	mov    %rax,%rdi
    9e22:	e8 d5 0b 00 00       	call   a9fc <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    9e27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9e2b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9e2f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9e33:	48 89 d6             	mov    %rdx,%rsi
    9e36:	48 89 c7             	mov    %rax,%rdi
    9e39:	e8 59 b6 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    9e3e:	48 8b 00             	mov    (%rax),%rax
      }
    9e41:	c9                   	leave
    9e42:	c3                   	ret
    9e43:	90                   	nop

0000000000009e44 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9e44:	55                   	push   %rbp
    9e45:	48 89 e5             	mov    %rsp,%rbp
    9e48:	48 83 ec 10          	sub    $0x10,%rsp
    9e4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9e54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e5c:	48 89 d6             	mov    %rdx,%rsi
    9e5f:	48 89 c7             	mov    %rax,%rdi
    9e62:	e8 43 f1 ff ff       	call   8faa <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e6b:	48 89 c7             	mov    %rax,%rdi
    9e6e:	e8 a3 0b 00 00       	call   aa16 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9e73:	90                   	nop
    9e74:	c9                   	leave
    9e75:	c3                   	ret

0000000000009e76 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9e76:	55                   	push   %rbp
    9e77:	48 89 e5             	mov    %rsp,%rbp
    9e7a:	48 83 ec 10          	sub    $0x10,%rsp
    9e7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9e86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e8e:	48 89 d6             	mov    %rdx,%rsi
    9e91:	48 89 c7             	mov    %rax,%rdi
    9e94:	e8 ab 0b 00 00       	call   aa44 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    9e99:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e9d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea4:	48 8b 10             	mov    (%rax),%rdx
    9ea7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eab:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eb3:	48 8b 08             	mov    (%rax),%rcx
    9eb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9eba:	48 89 d0             	mov    %rdx,%rax
    9ebd:	48 c1 e0 06          	shl    $0x6,%rax
    9ec1:	48 01 d0             	add    %rdx,%rax
    9ec4:	48 c1 e0 02          	shl    $0x2,%rax
    9ec8:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ed0:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ed4:	90                   	nop
    9ed5:	c9                   	leave
    9ed6:	c3                   	ret

0000000000009ed7 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9ed7:	55                   	push   %rbp
    9ed8:	48 89 e5             	mov    %rsp,%rbp
    9edb:	48 83 ec 20          	sub    $0x20,%rsp
    9edf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ee3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ee7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9eeb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef3:	48 89 d6             	mov    %rdx,%rsi
    9ef6:	48 89 c7             	mov    %rax,%rdi
    9ef9:	e8 79 0b 00 00       	call   aa77 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    9efe:	c9                   	leave
    9eff:	c3                   	ret

0000000000009f00 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9f00:	55                   	push   %rbp
    9f01:	48 89 e5             	mov    %rsp,%rbp
    9f04:	48 83 ec 10          	sub    $0x10,%rsp
    9f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9f10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f18:	48 89 d6             	mov    %rdx,%rsi
    9f1b:	48 89 c7             	mov    %rax,%rdi
    9f1e:	e8 7d 0b 00 00       	call   aaa0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    9f23:	90                   	nop
    9f24:	c9                   	leave
    9f25:	c3                   	ret

0000000000009f26 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    9f26:	55                   	push   %rbp
    9f27:	48 89 e5             	mov    %rsp,%rbp
    9f2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f32:	90                   	nop
    9f33:	5d                   	pop    %rbp
    9f34:	c3                   	ret

0000000000009f35 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9f35:	55                   	push   %rbp
    9f36:	48 89 e5             	mov    %rsp,%rbp
    9f39:	48 83 ec 20          	sub    $0x20,%rsp
    9f3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f41:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f45:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9f49:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f4d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f55:	48 89 ce             	mov    %rcx,%rsi
    9f58:	48 89 c7             	mov    %rax,%rdi
    9f5b:	e8 50 0b 00 00       	call   aab0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    9f60:	90                   	nop
    9f61:	c9                   	leave
    9f62:	c3                   	ret

0000000000009f63 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9f63:	55                   	push   %rbp
    9f64:	48 89 e5             	mov    %rsp,%rbp
    9f67:	48 83 ec 20          	sub    $0x20,%rsp
    9f6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9f6f:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9f76:	ff ff 0f 
    9f79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9f7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f81:	48 89 c7             	mov    %rax,%rdi
    9f84:	e8 61 0b 00 00       	call   aaea <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    9f89:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9f8d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9f91:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9f95:	48 89 d6             	mov    %rdx,%rsi
    9f98:	48 89 c7             	mov    %rax,%rdi
    9f9b:	e8 f7 b4 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    9fa0:	48 8b 00             	mov    (%rax),%rax
      }
    9fa3:	c9                   	leave
    9fa4:	c3                   	ret
    9fa5:	90                   	nop

0000000000009fa6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9fa6:	55                   	push   %rbp
    9fa7:	48 89 e5             	mov    %rsp,%rbp
    9faa:	48 83 ec 10          	sub    $0x10,%rsp
    9fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9fb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fbe:	48 89 d6             	mov    %rdx,%rsi
    9fc1:	48 89 c7             	mov    %rax,%rdi
    9fc4:	e8 61 f1 ff ff       	call   912a <_ZNSaIPKcEC1ERKS1_>
    9fc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fcd:	48 89 c7             	mov    %rax,%rdi
    9fd0:	e8 2f 0b 00 00       	call   ab04 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9fd5:	90                   	nop
    9fd6:	c9                   	leave
    9fd7:	c3                   	ret

0000000000009fd8 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9fd8:	55                   	push   %rbp
    9fd9:	48 89 e5             	mov    %rsp,%rbp
    9fdc:	48 83 ec 10          	sub    $0x10,%rsp
    9fe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fe4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9fe8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ff0:	48 89 d6             	mov    %rdx,%rsi
    9ff3:	48 89 c7             	mov    %rax,%rdi
    9ff6:	e8 37 0b 00 00       	call   ab32 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9ffb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9fff:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a006:	48 8b 10             	mov    (%rax),%rdx
    a009:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a00d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a015:	48 8b 00             	mov    (%rax),%rax
    a018:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a01c:	48 c1 e2 03          	shl    $0x3,%rdx
    a020:	48 01 c2             	add    %rax,%rdx
    a023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a027:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a02b:	90                   	nop
    a02c:	c9                   	leave
    a02d:	c3                   	ret

000000000000a02e <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a02e:	55                   	push   %rbp
    a02f:	48 89 e5             	mov    %rsp,%rbp
    a032:	48 83 ec 20          	sub    $0x20,%rsp
    a036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a03a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a03e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a042:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a04a:	48 89 d6             	mov    %rdx,%rsi
    a04d:	48 89 c7             	mov    %rax,%rdi
    a050:	e8 10 0b 00 00       	call   ab65 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    a055:	c9                   	leave
    a056:	c3                   	ret
    a057:	90                   	nop

000000000000a058 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    a058:	55                   	push   %rbp
    a059:	48 89 e5             	mov    %rsp,%rbp
    a05c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a060:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a064:	90                   	nop
    a065:	5d                   	pop    %rbp
    a066:	c3                   	ret

000000000000a067 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a067:	55                   	push   %rbp
    a068:	48 89 e5             	mov    %rsp,%rbp
    a06b:	48 83 ec 20          	sub    $0x20,%rsp
    a06f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a073:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a077:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a07b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a07f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a087:	48 89 ce             	mov    %rcx,%rsi
    a08a:	48 89 c7             	mov    %rax,%rdi
    a08d:	e8 fc 0a 00 00       	call   ab8e <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    a092:	90                   	nop
    a093:	c9                   	leave
    a094:	c3                   	ret

000000000000a095 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a095:	55                   	push   %rbp
    a096:	48 89 e5             	mov    %rsp,%rbp
    a099:	48 83 ec 20          	sub    $0x20,%rsp
    a09d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a0a1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a0a8:	ff ff 0f 
    a0ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a0af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0b3:	48 89 c7             	mov    %rax,%rdi
    a0b6:	e8 04 0b 00 00       	call   abbf <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    a0bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a0bf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a0c3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a0c7:	48 89 d6             	mov    %rdx,%rsi
    a0ca:	48 89 c7             	mov    %rax,%rdi
    a0cd:	e8 c5 b3 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    a0d2:	48 8b 00             	mov    (%rax),%rax
      }
    a0d5:	c9                   	leave
    a0d6:	c3                   	ret
    a0d7:	90                   	nop

000000000000a0d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a0d8:	55                   	push   %rbp
    a0d9:	48 89 e5             	mov    %rsp,%rbp
    a0dc:	48 83 ec 10          	sub    $0x10,%rsp
    a0e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a0e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0f0:	48 89 d6             	mov    %rdx,%rsi
    a0f3:	48 89 c7             	mov    %rax,%rdi
    a0f6:	e8 eb f1 ff ff       	call   92e6 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    a0fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ff:	48 89 c7             	mov    %rax,%rdi
    a102:	e8 d3 0a 00 00       	call   abda <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a107:	90                   	nop
    a108:	c9                   	leave
    a109:	c3                   	ret

000000000000a10a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a10a:	55                   	push   %rbp
    a10b:	48 89 e5             	mov    %rsp,%rbp
    a10e:	48 83 ec 10          	sub    $0x10,%rsp
    a112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a116:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a11a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a11e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a122:	48 89 d6             	mov    %rdx,%rsi
    a125:	48 89 c7             	mov    %rax,%rdi
    a128:	e8 db 0a 00 00       	call   ac08 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    a12d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a131:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a138:	48 8b 10             	mov    (%rax),%rdx
    a13b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a13f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a147:	48 8b 00             	mov    (%rax),%rax
    a14a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a14e:	48 c1 e2 03          	shl    $0x3,%rdx
    a152:	48 01 c2             	add    %rax,%rdx
    a155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a159:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a15d:	90                   	nop
    a15e:	c9                   	leave
    a15f:	c3                   	ret

000000000000a160 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a160:	55                   	push   %rbp
    a161:	48 89 e5             	mov    %rsp,%rbp
    a164:	48 83 ec 20          	sub    $0x20,%rsp
    a168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a16c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a170:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a174:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a17c:	48 89 d6             	mov    %rdx,%rsi
    a17f:	48 89 c7             	mov    %rax,%rdi
    a182:	e8 b4 0a 00 00       	call   ac3b <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    a187:	c9                   	leave
    a188:	c3                   	ret

000000000000a189 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a189:	55                   	push   %rbp
    a18a:	48 89 e5             	mov    %rsp,%rbp
    a18d:	48 83 ec 10          	sub    $0x10,%rsp
    a191:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a195:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a199:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a19d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a1:	48 89 d6             	mov    %rdx,%rsi
    a1a4:	48 89 c7             	mov    %rax,%rdi
    a1a7:	e8 b8 0a 00 00       	call   ac64 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    a1ac:	90                   	nop
    a1ad:	c9                   	leave
    a1ae:	c3                   	ret
    a1af:	90                   	nop

000000000000a1b0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    a1b0:	55                   	push   %rbp
    a1b1:	48 89 e5             	mov    %rsp,%rbp
    a1b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1bc:	90                   	nop
    a1bd:	5d                   	pop    %rbp
    a1be:	c3                   	ret

000000000000a1bf <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a1bf:	55                   	push   %rbp
    a1c0:	48 89 e5             	mov    %rsp,%rbp
    a1c3:	48 83 ec 20          	sub    $0x20,%rsp
    a1c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a1d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a1d7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a1db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1df:	48 89 ce             	mov    %rcx,%rsi
    a1e2:	48 89 c7             	mov    %rax,%rdi
    a1e5:	e8 8a 0a 00 00       	call   ac74 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    a1ea:	90                   	nop
    a1eb:	c9                   	leave
    a1ec:	c3                   	ret

000000000000a1ed <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a1ed:	55                   	push   %rbp
    a1ee:	48 89 e5             	mov    %rsp,%rbp
    a1f1:	48 83 ec 20          	sub    $0x20,%rsp
    a1f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a1f9:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    a200:	55 55 05 
    a203:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a207:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a20b:	48 89 c7             	mov    %rax,%rdi
    a20e:	e8 92 0a 00 00       	call   aca5 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    a213:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a217:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a21b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a21f:	48 89 d6             	mov    %rdx,%rsi
    a222:	48 89 c7             	mov    %rax,%rdi
    a225:	e8 6d b2 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    a22a:	48 8b 00             	mov    (%rax),%rax
      }
    a22d:	c9                   	leave
    a22e:	c3                   	ret
    a22f:	90                   	nop

000000000000a230 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a230:	55                   	push   %rbp
    a231:	48 89 e5             	mov    %rsp,%rbp
    a234:	48 83 ec 10          	sub    $0x10,%rsp
    a238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a23c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a240:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a248:	48 89 d6             	mov    %rdx,%rsi
    a24b:	48 89 c7             	mov    %rax,%rdi
    a24e:	e8 4f f2 ff ff       	call   94a2 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    a253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a257:	48 89 c7             	mov    %rax,%rdi
    a25a:	e8 61 0a 00 00       	call   acc0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a25f:	90                   	nop
    a260:	c9                   	leave
    a261:	c3                   	ret

000000000000a262 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a262:	55                   	push   %rbp
    a263:	48 89 e5             	mov    %rsp,%rbp
    a266:	48 83 ec 10          	sub    $0x10,%rsp
    a26a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a26e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a272:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a27a:	48 89 d6             	mov    %rdx,%rsi
    a27d:	48 89 c7             	mov    %rax,%rdi
    a280:	e8 69 0a 00 00       	call   acee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    a285:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a289:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a28c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a290:	48 8b 10             	mov    (%rax),%rdx
    a293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a297:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a29b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a29f:	48 8b 08             	mov    (%rax),%rcx
    a2a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2a6:	48 89 d0             	mov    %rdx,%rax
    a2a9:	48 01 c0             	add    %rax,%rax
    a2ac:	48 01 d0             	add    %rdx,%rax
    a2af:	48 c1 e0 03          	shl    $0x3,%rax
    a2b3:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a2b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a2bf:	90                   	nop
    a2c0:	c9                   	leave
    a2c1:	c3                   	ret

000000000000a2c2 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a2c2:	55                   	push   %rbp
    a2c3:	48 89 e5             	mov    %rsp,%rbp
    a2c6:	48 83 ec 20          	sub    $0x20,%rsp
    a2ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a2d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2de:	48 89 d6             	mov    %rdx,%rsi
    a2e1:	48 89 c7             	mov    %rax,%rdi
    a2e4:	e8 38 0a 00 00       	call   ad21 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    a2e9:	c9                   	leave
    a2ea:	c3                   	ret

000000000000a2eb <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a2eb:	55                   	push   %rbp
    a2ec:	48 89 e5             	mov    %rsp,%rbp
    a2ef:	48 83 ec 10          	sub    $0x10,%rsp
    a2f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a2fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a303:	48 89 d6             	mov    %rdx,%rsi
    a306:	48 89 c7             	mov    %rax,%rdi
    a309:	e8 3c 0a 00 00       	call   ad4a <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a30e:	90                   	nop
    a30f:	c9                   	leave
    a310:	c3                   	ret
    a311:	90                   	nop

000000000000a312 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    a312:	55                   	push   %rbp
    a313:	48 89 e5             	mov    %rsp,%rbp
    a316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a31a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a31e:	90                   	nop
    a31f:	5d                   	pop    %rbp
    a320:	c3                   	ret

000000000000a321 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a321:	55                   	push   %rbp
    a322:	48 89 e5             	mov    %rsp,%rbp
    a325:	48 83 ec 20          	sub    $0x20,%rsp
    a329:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a32d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a331:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a335:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a339:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a33d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a341:	48 89 ce             	mov    %rcx,%rsi
    a344:	48 89 c7             	mov    %rax,%rdi
    a347:	e8 0e 0a 00 00       	call   ad5a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    a34c:	90                   	nop
    a34d:	c9                   	leave
    a34e:	c3                   	ret

000000000000a34f <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a34f:	55                   	push   %rbp
    a350:	48 89 e5             	mov    %rsp,%rbp
    a353:	48 83 ec 20          	sub    $0x20,%rsp
    a357:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a35b:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    a362:	49 92 04 
    a365:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a36d:	48 89 c7             	mov    %rax,%rdi
    a370:	e8 1e 0a 00 00       	call   ad93 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    a375:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a379:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a37d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a381:	48 89 d6             	mov    %rdx,%rsi
    a384:	48 89 c7             	mov    %rax,%rdi
    a387:	e8 0b b1 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    a38c:	48 8b 00             	mov    (%rax),%rax
      }
    a38f:	c9                   	leave
    a390:	c3                   	ret
    a391:	90                   	nop

000000000000a392 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a392:	55                   	push   %rbp
    a393:	48 89 e5             	mov    %rsp,%rbp
    a396:	48 83 ec 10          	sub    $0x10,%rsp
    a39a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a39e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a3a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3aa:	48 89 d6             	mov    %rdx,%rsi
    a3ad:	48 89 c7             	mov    %rax,%rdi
    a3b0:	e8 5b f3 ff ff       	call   9710 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a3b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3b9:	48 89 c7             	mov    %rax,%rdi
    a3bc:	e8 ed 09 00 00       	call   adae <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    a3c1:	90                   	nop
    a3c2:	c9                   	leave
    a3c3:	c3                   	ret

000000000000a3c4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a3c4:	55                   	push   %rbp
    a3c5:	48 89 e5             	mov    %rsp,%rbp
    a3c8:	48 83 ec 10          	sub    $0x10,%rsp
    a3cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a3d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3dc:	48 89 d6             	mov    %rdx,%rsi
    a3df:	48 89 c7             	mov    %rax,%rdi
    a3e2:	e8 f5 09 00 00       	call   addc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    a3e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a3eb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a3ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3f2:	48 8b 10             	mov    (%rax),%rdx
    a3f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3f9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a401:	48 8b 08             	mov    (%rax),%rcx
    a404:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a408:	48 89 d0             	mov    %rdx,%rax
    a40b:	48 c1 e0 03          	shl    $0x3,%rax
    a40f:	48 29 d0             	sub    %rdx,%rax
    a412:	48 c1 e0 02          	shl    $0x2,%rax
    a416:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a41a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a41e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a422:	90                   	nop
    a423:	c9                   	leave
    a424:	c3                   	ret

000000000000a425 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a425:	55                   	push   %rbp
    a426:	48 89 e5             	mov    %rsp,%rbp
    a429:	48 83 ec 20          	sub    $0x20,%rsp
    a42d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a431:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a435:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a439:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a43d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a441:	48 89 d6             	mov    %rdx,%rsi
    a444:	48 89 c7             	mov    %rax,%rdi
    a447:	e8 c3 09 00 00       	call   ae0f <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a44c:	c9                   	leave
    a44d:	c3                   	ret

000000000000a44e <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a44e:	55                   	push   %rbp
    a44f:	48 89 e5             	mov    %rsp,%rbp
    a452:	48 83 ec 10          	sub    $0x10,%rsp
    a456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a45a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a45e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a466:	48 89 d6             	mov    %rdx,%rsi
    a469:	48 89 c7             	mov    %rax,%rdi
    a46c:	e8 c7 09 00 00       	call   ae38 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a471:	90                   	nop
    a472:	c9                   	leave
    a473:	c3                   	ret

000000000000a474 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a474:	55                   	push   %rbp
    a475:	48 89 e5             	mov    %rsp,%rbp
    a478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a47c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a480:	5d                   	pop    %rbp
    a481:	c3                   	ret

000000000000a482 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a482:	55                   	push   %rbp
    a483:	48 89 e5             	mov    %rsp,%rbp
    a486:	53                   	push   %rbx
    a487:	48 83 ec 18          	sub    $0x18,%rsp
    a48b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a48f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a493:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a497:	48 89 c7             	mov    %rax,%rdi
    a49a:	e8 2f f2 ff ff       	call   96ce <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a49f:	48 89 c3             	mov    %rax,%rbx
    a4a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4a6:	48 89 c7             	mov    %rax,%rdi
    a4a9:	e8 99 09 00 00       	call   ae47 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a4ae:	48 89 de             	mov    %rbx,%rsi
    a4b1:	48 89 c7             	mov    %rax,%rdi
    a4b4:	e8 9c 09 00 00       	call   ae55 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a4b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4bd:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a4c1:	90                   	nop
    a4c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a4c6:	c9                   	leave
    a4c7:	c3                   	ret

000000000000a4c8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a4c8:	55                   	push   %rbp
    a4c9:	48 89 e5             	mov    %rsp,%rbp
    a4cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4d4:	90                   	nop
    a4d5:	5d                   	pop    %rbp
    a4d6:	c3                   	ret

000000000000a4d7 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a4d7:	55                   	push   %rbp
    a4d8:	48 89 e5             	mov    %rsp,%rbp
    a4db:	48 83 ec 20          	sub    $0x20,%rsp
    a4df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a4eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a4ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a4f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f7:	48 89 ce             	mov    %rcx,%rsi
    a4fa:	48 89 c7             	mov    %rax,%rdi
    a4fd:	e8 a4 09 00 00       	call   aea6 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a502:	90                   	nop
    a503:	c9                   	leave
    a504:	c3                   	ret

000000000000a505 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a505:	55                   	push   %rbp
    a506:	48 89 e5             	mov    %rsp,%rbp
    a509:	48 83 ec 20          	sub    $0x20,%rsp
    a50d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a511:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a518:	ff ff 0f 
    a51b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a51f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a523:	48 89 c7             	mov    %rax,%rdi
    a526:	e8 b5 09 00 00       	call   aee0 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a52b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a52f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a533:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a537:	48 89 d6             	mov    %rdx,%rsi
    a53a:	48 89 c7             	mov    %rax,%rdi
    a53d:	e8 55 af ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    a542:	48 8b 00             	mov    (%rax),%rax
      }
    a545:	c9                   	leave
    a546:	c3                   	ret
    a547:	90                   	nop

000000000000a548 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a548:	55                   	push   %rbp
    a549:	48 89 e5             	mov    %rsp,%rbp
    a54c:	48 83 ec 10          	sub    $0x10,%rsp
    a550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a554:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a558:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a55c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a560:	48 89 d6             	mov    %rdx,%rsi
    a563:	48 89 c7             	mov    %rax,%rdi
    a566:	e8 61 f3 ff ff       	call   98cc <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a56b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a56f:	48 89 c7             	mov    %rax,%rdi
    a572:	e8 83 09 00 00       	call   aefa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a577:	90                   	nop
    a578:	c9                   	leave
    a579:	c3                   	ret

000000000000a57a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a57a:	55                   	push   %rbp
    a57b:	48 89 e5             	mov    %rsp,%rbp
    a57e:	48 83 ec 10          	sub    $0x10,%rsp
    a582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a586:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a58a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a58e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a592:	48 89 d6             	mov    %rdx,%rsi
    a595:	48 89 c7             	mov    %rax,%rdi
    a598:	e8 8b 09 00 00       	call   af28 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a59d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a5a1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a5a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5a8:	48 8b 10             	mov    (%rax),%rdx
    a5ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5af:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a5b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b7:	48 8b 00             	mov    (%rax),%rax
    a5ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5be:	48 c1 e2 03          	shl    $0x3,%rdx
    a5c2:	48 01 c2             	add    %rax,%rdx
    a5c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5c9:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a5cd:	90                   	nop
    a5ce:	c9                   	leave
    a5cf:	c3                   	ret

000000000000a5d0 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a5d0:	55                   	push   %rbp
    a5d1:	48 89 e5             	mov    %rsp,%rbp
    a5d4:	48 83 ec 20          	sub    $0x20,%rsp
    a5d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a5e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ec:	48 89 d6             	mov    %rdx,%rsi
    a5ef:	48 89 c7             	mov    %rax,%rdi
    a5f2:	e8 64 09 00 00       	call   af5b <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a5f7:	c9                   	leave
    a5f8:	c3                   	ret

000000000000a5f9 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a5f9:	55                   	push   %rbp
    a5fa:	48 89 e5             	mov    %rsp,%rbp
    a5fd:	48 83 ec 10          	sub    $0x10,%rsp
    a601:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a605:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a609:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a60d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a611:	48 89 d6             	mov    %rdx,%rsi
    a614:	48 89 c7             	mov    %rax,%rdi
    a617:	e8 68 09 00 00       	call   af84 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a61c:	90                   	nop
    a61d:	c9                   	leave
    a61e:	c3                   	ret
    a61f:	90                   	nop

000000000000a620 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a620:	55                   	push   %rbp
    a621:	48 89 e5             	mov    %rsp,%rbp
    a624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a62c:	90                   	nop
    a62d:	5d                   	pop    %rbp
    a62e:	c3                   	ret

000000000000a62f <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a62f:	55                   	push   %rbp
    a630:	48 89 e5             	mov    %rsp,%rbp
    a633:	48 83 ec 20          	sub    $0x20,%rsp
    a637:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a63b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a63f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a643:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a647:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a64b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a64f:	48 89 ce             	mov    %rcx,%rsi
    a652:	48 89 c7             	mov    %rax,%rdi
    a655:	e8 3a 09 00 00       	call   af94 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a65a:	90                   	nop
    a65b:	c9                   	leave
    a65c:	c3                   	ret

000000000000a65d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a65d:	55                   	push   %rbp
    a65e:	48 89 e5             	mov    %rsp,%rbp
    a661:	48 83 ec 20          	sub    $0x20,%rsp
    a665:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a669:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a670:	ff ff 1f 
    a673:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a67b:	48 89 c7             	mov    %rax,%rdi
    a67e:	e8 42 09 00 00       	call   afc5 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a683:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a687:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a68b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a68f:	48 89 d6             	mov    %rdx,%rsi
    a692:	48 89 c7             	mov    %rax,%rdi
    a695:	e8 fd ad ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    a69a:	48 8b 00             	mov    (%rax),%rax
      }
    a69d:	c9                   	leave
    a69e:	c3                   	ret
    a69f:	90                   	nop

000000000000a6a0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a6a0:	55                   	push   %rbp
    a6a1:	48 89 e5             	mov    %rsp,%rbp
    a6a4:	48 83 ec 10          	sub    $0x10,%rsp
    a6a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a6b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6b8:	48 89 d6             	mov    %rdx,%rsi
    a6bb:	48 89 c7             	mov    %rax,%rdi
    a6be:	e8 c5 f3 ff ff       	call   9a88 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a6c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6c7:	48 89 c7             	mov    %rax,%rdi
    a6ca:	e8 11 09 00 00       	call   afe0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a6cf:	90                   	nop
    a6d0:	c9                   	leave
    a6d1:	c3                   	ret

000000000000a6d2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a6d2:	55                   	push   %rbp
    a6d3:	48 89 e5             	mov    %rsp,%rbp
    a6d6:	48 83 ec 10          	sub    $0x10,%rsp
    a6da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a6e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ea:	48 89 d6             	mov    %rdx,%rsi
    a6ed:	48 89 c7             	mov    %rax,%rdi
    a6f0:	e8 19 09 00 00       	call   b00e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a6f5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a6f9:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a6fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a700:	48 8b 10             	mov    (%rax),%rdx
    a703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a707:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a70b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a70f:	48 8b 00             	mov    (%rax),%rax
    a712:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a716:	48 c1 e2 02          	shl    $0x2,%rdx
    a71a:	48 01 c2             	add    %rax,%rdx
    a71d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a721:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a725:	90                   	nop
    a726:	c9                   	leave
    a727:	c3                   	ret

000000000000a728 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a728:	55                   	push   %rbp
    a729:	48 89 e5             	mov    %rsp,%rbp
    a72c:	48 83 ec 20          	sub    $0x20,%rsp
    a730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a734:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a738:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a73c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a744:	48 89 d6             	mov    %rdx,%rsi
    a747:	48 89 c7             	mov    %rax,%rdi
    a74a:	e8 f2 08 00 00       	call   b041 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a74f:	c9                   	leave
    a750:	c3                   	ret

000000000000a751 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a751:	55                   	push   %rbp
    a752:	48 89 e5             	mov    %rsp,%rbp
    a755:	48 83 ec 10          	sub    $0x10,%rsp
    a759:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a75d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a761:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a769:	48 89 d6             	mov    %rdx,%rsi
    a76c:	48 89 c7             	mov    %rax,%rdi
    a76f:	e8 f6 08 00 00       	call   b06a <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a774:	90                   	nop
    a775:	c9                   	leave
    a776:	c3                   	ret
    a777:	90                   	nop

000000000000a778 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a778:	55                   	push   %rbp
    a779:	48 89 e5             	mov    %rsp,%rbp
    a77c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a780:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a784:	90                   	nop
    a785:	5d                   	pop    %rbp
    a786:	c3                   	ret

000000000000a787 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a787:	55                   	push   %rbp
    a788:	48 89 e5             	mov    %rsp,%rbp
    a78b:	48 83 ec 20          	sub    $0x20,%rsp
    a78f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a793:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a797:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a79b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a79f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a7a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7a7:	48 89 ce             	mov    %rcx,%rsi
    a7aa:	48 89 c7             	mov    %rax,%rdi
    a7ad:	e8 c8 08 00 00       	call   b07a <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a7b2:	90                   	nop
    a7b3:	c9                   	leave
    a7b4:	c3                   	ret

000000000000a7b5 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a7b5:	55                   	push   %rbp
    a7b6:	48 89 e5             	mov    %rsp,%rbp
    a7b9:	48 83 ec 20          	sub    $0x20,%rsp
    a7bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a7c1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a7c8:	ff ff 0f 
    a7cb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a7cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a7d3:	48 89 c7             	mov    %rax,%rdi
    a7d6:	e8 d0 08 00 00       	call   b0ab <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    a7db:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a7df:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a7e3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a7e7:	48 89 d6             	mov    %rdx,%rsi
    a7ea:	48 89 c7             	mov    %rax,%rdi
    a7ed:	e8 a5 ac ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    a7f2:	48 8b 00             	mov    (%rax),%rax
      }
    a7f5:	c9                   	leave
    a7f6:	c3                   	ret
    a7f7:	90                   	nop

000000000000a7f8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a7f8:	55                   	push   %rbp
    a7f9:	48 89 e5             	mov    %rsp,%rbp
    a7fc:	48 83 ec 10          	sub    $0x10,%rsp
    a800:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a804:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a808:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a80c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a810:	48 89 d6             	mov    %rdx,%rsi
    a813:	48 89 c7             	mov    %rax,%rdi
    a816:	e8 29 f4 ff ff       	call   9c44 <_ZNSaIP9VkImage_TEC1ERKS1_>
    a81b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a81f:	48 89 c7             	mov    %rax,%rdi
    a822:	e8 9f 08 00 00       	call   b0c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a827:	90                   	nop
    a828:	c9                   	leave
    a829:	c3                   	ret

000000000000a82a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a82a:	55                   	push   %rbp
    a82b:	48 89 e5             	mov    %rsp,%rbp
    a82e:	48 83 ec 10          	sub    $0x10,%rsp
    a832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a83a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a842:	48 89 d6             	mov    %rdx,%rsi
    a845:	48 89 c7             	mov    %rax,%rdi
    a848:	e8 a7 08 00 00       	call   b0f4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    a84d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a851:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a858:	48 8b 10             	mov    (%rax),%rdx
    a85b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a85f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a867:	48 8b 00             	mov    (%rax),%rax
    a86a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a86e:	48 c1 e2 03          	shl    $0x3,%rdx
    a872:	48 01 c2             	add    %rax,%rdx
    a875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a879:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a87d:	90                   	nop
    a87e:	c9                   	leave
    a87f:	c3                   	ret

000000000000a880 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a880:	55                   	push   %rbp
    a881:	48 89 e5             	mov    %rsp,%rbp
    a884:	48 83 ec 20          	sub    $0x20,%rsp
    a888:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a88c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a890:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a894:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a89c:	48 89 d6             	mov    %rdx,%rsi
    a89f:	48 89 c7             	mov    %rax,%rdi
    a8a2:	e8 80 08 00 00       	call   b127 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    a8a7:	c9                   	leave
    a8a8:	c3                   	ret

000000000000a8a9 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a8a9:	55                   	push   %rbp
    a8aa:	48 89 e5             	mov    %rsp,%rbp
    a8ad:	48 83 ec 10          	sub    $0x10,%rsp
    a8b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a8b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c1:	48 89 d6             	mov    %rdx,%rsi
    a8c4:	48 89 c7             	mov    %rax,%rdi
    a8c7:	e8 84 08 00 00       	call   b150 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    a8cc:	90                   	nop
    a8cd:	c9                   	leave
    a8ce:	c3                   	ret
    a8cf:	90                   	nop

000000000000a8d0 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    a8d0:	55                   	push   %rbp
    a8d1:	48 89 e5             	mov    %rsp,%rbp
    a8d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a8dc:	90                   	nop
    a8dd:	5d                   	pop    %rbp
    a8de:	c3                   	ret

000000000000a8df <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a8df:	55                   	push   %rbp
    a8e0:	48 89 e5             	mov    %rsp,%rbp
    a8e3:	48 83 ec 20          	sub    $0x20,%rsp
    a8e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a8ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a8f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a8f7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a8fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8ff:	48 89 ce             	mov    %rcx,%rsi
    a902:	48 89 c7             	mov    %rax,%rdi
    a905:	e8 56 08 00 00       	call   b160 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    a90a:	90                   	nop
    a90b:	c9                   	leave
    a90c:	c3                   	ret

000000000000a90d <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a90d:	55                   	push   %rbp
    a90e:	48 89 e5             	mov    %rsp,%rbp
    a911:	48 83 ec 10          	sub    $0x10,%rsp
    a915:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a91d:	48 89 c7             	mov    %rax,%rdi
    a920:	e8 6d 08 00 00       	call   b192 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    a925:	c9                   	leave
    a926:	c3                   	ret
    a927:	90                   	nop

000000000000a928 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a928:	55                   	push   %rbp
    a929:	48 89 e5             	mov    %rsp,%rbp
    a92c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a934:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a93b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a93f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a946:	00 
    a947:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a94b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a952:	00 
	{ }
    a953:	90                   	nop
    a954:	5d                   	pop    %rbp
    a955:	c3                   	ret

000000000000a956 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a956:	55                   	push   %rbp
    a957:	48 89 e5             	mov    %rsp,%rbp
    a95a:	48 83 ec 10          	sub    $0x10,%rsp
    a95e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a962:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a966:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a96b:	74 15                	je     a982 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a96d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a971:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a975:	48 89 d6             	mov    %rdx,%rsi
    a978:	48 89 c7             	mov    %rax,%rdi
    a97b:	e8 2c 08 00 00       	call   b1ac <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    a980:	eb 05                	jmp    a987 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a982:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a987:	c9                   	leave
    a988:	c3                   	ret

000000000000a989 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a989:	55                   	push   %rbp
    a98a:	48 89 e5             	mov    %rsp,%rbp
    a98d:	48 83 ec 20          	sub    $0x20,%rsp
    a991:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a995:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a999:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a99d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a9a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9a5:	48 89 d6             	mov    %rdx,%rsi
    a9a8:	48 89 c7             	mov    %rax,%rdi
    a9ab:	e8 26 08 00 00       	call   b1d6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    a9b0:	c9                   	leave
    a9b1:	c3                   	ret

000000000000a9b2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    a9b2:	55                   	push   %rbp
    a9b3:	48 89 e5             	mov    %rsp,%rbp
    a9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a9be:	90                   	nop
    a9bf:	5d                   	pop    %rbp
    a9c0:	c3                   	ret
    a9c1:	90                   	nop

000000000000a9c2 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a9c2:	55                   	push   %rbp
    a9c3:	48 89 e5             	mov    %rsp,%rbp
    a9c6:	48 83 ec 20          	sub    $0x20,%rsp
    a9ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a9d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a9d6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a9da:	48 89 d0             	mov    %rdx,%rax
    a9dd:	48 c1 e0 06          	shl    $0x6,%rax
    a9e1:	48 01 d0             	add    %rdx,%rax
    a9e4:	48 c1 e0 03          	shl    $0x3,%rax
    a9e8:	48 89 c2             	mov    %rax,%rdx
    a9eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a9ef:	48 89 d6             	mov    %rdx,%rsi
    a9f2:	48 89 c7             	mov    %rax,%rdi
    a9f5:	e8 c6 99 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    a9fa:	c9                   	leave
    a9fb:	c3                   	ret

000000000000a9fc <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a9fc:	55                   	push   %rbp
    a9fd:	48 89 e5             	mov    %rsp,%rbp
    aa00:	48 83 ec 10          	sub    $0x10,%rsp
    aa04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aa08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa0c:	48 89 c7             	mov    %rax,%rdi
    aa0f:	e8 22 08 00 00       	call   b236 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    aa14:	c9                   	leave
    aa15:	c3                   	ret

000000000000aa16 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aa16:	55                   	push   %rbp
    aa17:	48 89 e5             	mov    %rsp,%rbp
    aa1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aa1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa22:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aa29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa2d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aa34:	00 
    aa35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa39:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aa40:	00 
	{ }
    aa41:	90                   	nop
    aa42:	5d                   	pop    %rbp
    aa43:	c3                   	ret

000000000000aa44 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aa44:	55                   	push   %rbp
    aa45:	48 89 e5             	mov    %rsp,%rbp
    aa48:	48 83 ec 10          	sub    $0x10,%rsp
    aa4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aa54:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aa59:	74 15                	je     aa70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    aa5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa5f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa63:	48 89 d6             	mov    %rdx,%rsi
    aa66:	48 89 c7             	mov    %rax,%rdi
    aa69:	e8 e2 07 00 00       	call   b250 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    aa6e:	eb 05                	jmp    aa75 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    aa70:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aa75:	c9                   	leave
    aa76:	c3                   	ret

000000000000aa77 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aa77:	55                   	push   %rbp
    aa78:	48 89 e5             	mov    %rsp,%rbp
    aa7b:	48 83 ec 20          	sub    $0x20,%rsp
    aa7f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa83:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aa87:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aa8b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa93:	48 89 d6             	mov    %rdx,%rsi
    aa96:	48 89 c7             	mov    %rax,%rdi
    aa99:	e8 dc 07 00 00       	call   b27a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    aa9e:	c9                   	leave
    aa9f:	c3                   	ret

000000000000aaa0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    aaa0:	55                   	push   %rbp
    aaa1:	48 89 e5             	mov    %rsp,%rbp
    aaa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaa8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aaac:	90                   	nop
    aaad:	5d                   	pop    %rbp
    aaae:	c3                   	ret
    aaaf:	90                   	nop

000000000000aab0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aab0:	55                   	push   %rbp
    aab1:	48 89 e5             	mov    %rsp,%rbp
    aab4:	48 83 ec 20          	sub    $0x20,%rsp
    aab8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aabc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aac0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aac4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aac8:	48 89 d0             	mov    %rdx,%rax
    aacb:	48 c1 e0 06          	shl    $0x6,%rax
    aacf:	48 01 d0             	add    %rdx,%rax
    aad2:	48 c1 e0 02          	shl    $0x2,%rax
    aad6:	48 89 c2             	mov    %rax,%rdx
    aad9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aadd:	48 89 d6             	mov    %rdx,%rsi
    aae0:	48 89 c7             	mov    %rax,%rdi
    aae3:	e8 d8 98 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    aae8:	c9                   	leave
    aae9:	c3                   	ret

000000000000aaea <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aaea:	55                   	push   %rbp
    aaeb:	48 89 e5             	mov    %rsp,%rbp
    aaee:	48 83 ec 10          	sub    $0x10,%rsp
    aaf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aaf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aafa:	48 89 c7             	mov    %rax,%rdi
    aafd:	e8 d8 07 00 00       	call   b2da <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    ab02:	c9                   	leave
    ab03:	c3                   	ret

000000000000ab04 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ab04:	55                   	push   %rbp
    ab05:	48 89 e5             	mov    %rsp,%rbp
    ab08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ab0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab10:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ab17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab1b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab22:	00 
    ab23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab27:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ab2e:	00 
	{ }
    ab2f:	90                   	nop
    ab30:	5d                   	pop    %rbp
    ab31:	c3                   	ret

000000000000ab32 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ab32:	55                   	push   %rbp
    ab33:	48 89 e5             	mov    %rsp,%rbp
    ab36:	48 83 ec 10          	sub    $0x10,%rsp
    ab3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ab42:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab47:	74 15                	je     ab5e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    ab49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab51:	48 89 d6             	mov    %rdx,%rsi
    ab54:	48 89 c7             	mov    %rax,%rdi
    ab57:	e8 98 07 00 00       	call   b2f4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    ab5c:	eb 05                	jmp    ab63 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    ab5e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ab63:	c9                   	leave
    ab64:	c3                   	ret

000000000000ab65 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ab65:	55                   	push   %rbp
    ab66:	48 89 e5             	mov    %rsp,%rbp
    ab69:	48 83 ec 20          	sub    $0x20,%rsp
    ab6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ab75:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ab79:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ab7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab81:	48 89 d6             	mov    %rdx,%rsi
    ab84:	48 89 c7             	mov    %rax,%rdi
    ab87:	e8 92 07 00 00       	call   b31e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    ab8c:	c9                   	leave
    ab8d:	c3                   	ret

000000000000ab8e <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ab8e:	55                   	push   %rbp
    ab8f:	48 89 e5             	mov    %rsp,%rbp
    ab92:	48 83 ec 20          	sub    $0x20,%rsp
    ab96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aba2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aba6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    abad:	00 
    abae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    abb2:	48 89 d6             	mov    %rdx,%rsi
    abb5:	48 89 c7             	mov    %rax,%rdi
    abb8:	e8 03 98 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    abbd:	c9                   	leave
    abbe:	c3                   	ret

000000000000abbf <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    abbf:	55                   	push   %rbp
    abc0:	48 89 e5             	mov    %rsp,%rbp
    abc3:	48 83 ec 10          	sub    $0x10,%rsp
    abc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    abcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abcf:	48 89 c7             	mov    %rax,%rdi
    abd2:	e8 a5 07 00 00       	call   b37c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    abd7:	c9                   	leave
    abd8:	c3                   	ret
    abd9:	90                   	nop

000000000000abda <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    abda:	55                   	push   %rbp
    abdb:	48 89 e5             	mov    %rsp,%rbp
    abde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    abe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abe6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    abed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abf1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    abf8:	00 
    abf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abfd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ac04:	00 
	{ }
    ac05:	90                   	nop
    ac06:	5d                   	pop    %rbp
    ac07:	c3                   	ret

000000000000ac08 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ac08:	55                   	push   %rbp
    ac09:	48 89 e5             	mov    %rsp,%rbp
    ac0c:	48 83 ec 10          	sub    $0x10,%rsp
    ac10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ac18:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ac1d:	74 15                	je     ac34 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    ac1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac27:	48 89 d6             	mov    %rdx,%rsi
    ac2a:	48 89 c7             	mov    %rax,%rdi
    ac2d:	e8 64 07 00 00       	call   b396 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    ac32:	eb 05                	jmp    ac39 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    ac34:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ac39:	c9                   	leave
    ac3a:	c3                   	ret

000000000000ac3b <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ac3b:	55                   	push   %rbp
    ac3c:	48 89 e5             	mov    %rsp,%rbp
    ac3f:	48 83 ec 20          	sub    $0x20,%rsp
    ac43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ac4b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ac4f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ac53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac57:	48 89 d6             	mov    %rdx,%rsi
    ac5a:	48 89 c7             	mov    %rax,%rdi
    ac5d:	e8 5e 07 00 00       	call   b3c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    ac62:	c9                   	leave
    ac63:	c3                   	ret

000000000000ac64 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    ac64:	55                   	push   %rbp
    ac65:	48 89 e5             	mov    %rsp,%rbp
    ac68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac70:	90                   	nop
    ac71:	5d                   	pop    %rbp
    ac72:	c3                   	ret
    ac73:	90                   	nop

000000000000ac74 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ac74:	55                   	push   %rbp
    ac75:	48 89 e5             	mov    %rsp,%rbp
    ac78:	48 83 ec 20          	sub    $0x20,%rsp
    ac7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ac88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac8c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ac93:	00 
    ac94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac98:	48 89 d6             	mov    %rdx,%rsi
    ac9b:	48 89 c7             	mov    %rax,%rdi
    ac9e:	e8 1d 97 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    aca3:	c9                   	leave
    aca4:	c3                   	ret

000000000000aca5 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aca5:	55                   	push   %rbp
    aca6:	48 89 e5             	mov    %rsp,%rbp
    aca9:	48 83 ec 10          	sub    $0x10,%rsp
    acad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    acb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acb5:	48 89 c7             	mov    %rax,%rdi
    acb8:	e8 61 07 00 00       	call   b41e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    acbd:	c9                   	leave
    acbe:	c3                   	ret
    acbf:	90                   	nop

000000000000acc0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    acc0:	55                   	push   %rbp
    acc1:	48 89 e5             	mov    %rsp,%rbp
    acc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    acc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    accc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    acd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acd7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    acde:	00 
    acdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    acea:	00 
	{ }
    aceb:	90                   	nop
    acec:	5d                   	pop    %rbp
    aced:	c3                   	ret

000000000000acee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    acee:	55                   	push   %rbp
    acef:	48 89 e5             	mov    %rsp,%rbp
    acf2:	48 83 ec 10          	sub    $0x10,%rsp
    acf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    acfe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ad03:	74 15                	je     ad1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ad05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad09:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad0d:	48 89 d6             	mov    %rdx,%rsi
    ad10:	48 89 c7             	mov    %rax,%rdi
    ad13:	e8 20 07 00 00       	call   b438 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    ad18:	eb 05                	jmp    ad1f <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    ad1a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ad1f:	c9                   	leave
    ad20:	c3                   	ret

000000000000ad21 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ad21:	55                   	push   %rbp
    ad22:	48 89 e5             	mov    %rsp,%rbp
    ad25:	48 83 ec 20          	sub    $0x20,%rsp
    ad29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad2d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ad31:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ad35:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad3d:	48 89 d6             	mov    %rdx,%rsi
    ad40:	48 89 c7             	mov    %rax,%rdi
    ad43:	e8 1a 07 00 00       	call   b462 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    ad48:	c9                   	leave
    ad49:	c3                   	ret

000000000000ad4a <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    ad4a:	55                   	push   %rbp
    ad4b:	48 89 e5             	mov    %rsp,%rbp
    ad4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad56:	90                   	nop
    ad57:	5d                   	pop    %rbp
    ad58:	c3                   	ret
    ad59:	90                   	nop

000000000000ad5a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ad5a:	55                   	push   %rbp
    ad5b:	48 89 e5             	mov    %rsp,%rbp
    ad5e:	48 83 ec 20          	sub    $0x20,%rsp
    ad62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad6a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ad6e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ad72:	48 89 d0             	mov    %rdx,%rax
    ad75:	48 01 c0             	add    %rax,%rax
    ad78:	48 01 d0             	add    %rdx,%rax
    ad7b:	48 c1 e0 03          	shl    $0x3,%rax
    ad7f:	48 89 c2             	mov    %rax,%rdx
    ad82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad86:	48 89 d6             	mov    %rdx,%rsi
    ad89:	48 89 c7             	mov    %rax,%rdi
    ad8c:	e8 2f 96 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    ad91:	c9                   	leave
    ad92:	c3                   	ret

000000000000ad93 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ad93:	55                   	push   %rbp
    ad94:	48 89 e5             	mov    %rsp,%rbp
    ad97:	48 83 ec 10          	sub    $0x10,%rsp
    ad9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ad9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada3:	48 89 c7             	mov    %rax,%rdi
    ada6:	e8 15 07 00 00       	call   b4c0 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    adab:	c9                   	leave
    adac:	c3                   	ret
    adad:	90                   	nop

000000000000adae <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    adae:	55                   	push   %rbp
    adaf:	48 89 e5             	mov    %rsp,%rbp
    adb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    adb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    adc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adc5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    adcc:	00 
    adcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    add8:	00 
	{ }
    add9:	90                   	nop
    adda:	5d                   	pop    %rbp
    addb:	c3                   	ret

000000000000addc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    addc:	55                   	push   %rbp
    addd:	48 89 e5             	mov    %rsp,%rbp
    ade0:	48 83 ec 10          	sub    $0x10,%rsp
    ade4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ade8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    adec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    adf1:	74 15                	je     ae08 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    adf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    adfb:	48 89 d6             	mov    %rdx,%rsi
    adfe:	48 89 c7             	mov    %rax,%rdi
    ae01:	e8 d4 06 00 00       	call   b4da <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    ae06:	eb 05                	jmp    ae0d <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    ae08:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ae0d:	c9                   	leave
    ae0e:	c3                   	ret

000000000000ae0f <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ae0f:	55                   	push   %rbp
    ae10:	48 89 e5             	mov    %rsp,%rbp
    ae13:	48 83 ec 20          	sub    $0x20,%rsp
    ae17:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ae1b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ae1f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ae23:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ae27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae2b:	48 89 d6             	mov    %rdx,%rsi
    ae2e:	48 89 c7             	mov    %rax,%rdi
    ae31:	e8 ce 06 00 00       	call   b504 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    ae36:	c9                   	leave
    ae37:	c3                   	ret

000000000000ae38 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    ae38:	55                   	push   %rbp
    ae39:	48 89 e5             	mov    %rsp,%rbp
    ae3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae44:	90                   	nop
    ae45:	5d                   	pop    %rbp
    ae46:	c3                   	ret

000000000000ae47 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ae47:	55                   	push   %rbp
    ae48:	48 89 e5             	mov    %rsp,%rbp
    ae4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ae4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae53:	5d                   	pop    %rbp
    ae54:	c3                   	ret

000000000000ae55 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ae55:	55                   	push   %rbp
    ae56:	48 89 e5             	mov    %rsp,%rbp
    ae59:	53                   	push   %rbx
    ae5a:	48 83 ec 18          	sub    $0x18,%rsp
    ae5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ae62:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ae66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae6a:	48 89 c6             	mov    %rax,%rsi
    ae6d:	bf 18 00 00 00       	mov    $0x18,%edi
    ae72:	e8 52 a1 ff ff       	call   4fc9 <_ZnwmPv>
    ae77:	48 89 c3             	mov    %rax,%rbx
    ae7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ae7e:	48 89 c7             	mov    %rax,%rdi
    ae81:	e8 48 e8 ff ff       	call   96ce <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    ae86:	48 89 c1             	mov    %rax,%rcx
    ae89:	48 8b 01             	mov    (%rcx),%rax
    ae8c:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    ae90:	48 89 03             	mov    %rax,(%rbx)
    ae93:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    ae97:	48 8b 41 10          	mov    0x10(%rcx),%rax
    ae9b:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    ae9f:	90                   	nop
    aea0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aea4:	c9                   	leave
    aea5:	c3                   	ret

000000000000aea6 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aea6:	55                   	push   %rbp
    aea7:	48 89 e5             	mov    %rsp,%rbp
    aeaa:	48 83 ec 20          	sub    $0x20,%rsp
    aeae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aeb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aeba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aebe:	48 89 d0             	mov    %rdx,%rax
    aec1:	48 c1 e0 03          	shl    $0x3,%rax
    aec5:	48 29 d0             	sub    %rdx,%rax
    aec8:	48 c1 e0 02          	shl    $0x2,%rax
    aecc:	48 89 c2             	mov    %rax,%rdx
    aecf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aed3:	48 89 d6             	mov    %rdx,%rsi
    aed6:	48 89 c7             	mov    %rax,%rdi
    aed9:	e8 e2 94 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    aede:	c9                   	leave
    aedf:	c3                   	ret

000000000000aee0 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aee0:	55                   	push   %rbp
    aee1:	48 89 e5             	mov    %rsp,%rbp
    aee4:	48 83 ec 10          	sub    $0x10,%rsp
    aee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aeec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef0:	48 89 c7             	mov    %rax,%rdi
    aef3:	e8 52 06 00 00       	call   b54a <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    aef8:	c9                   	leave
    aef9:	c3                   	ret

000000000000aefa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aefa:	55                   	push   %rbp
    aefb:	48 89 e5             	mov    %rsp,%rbp
    aefe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    af02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af06:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    af0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af11:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    af18:	00 
    af19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af1d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    af24:	00 
	{ }
    af25:	90                   	nop
    af26:	5d                   	pop    %rbp
    af27:	c3                   	ret

000000000000af28 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    af28:	55                   	push   %rbp
    af29:	48 89 e5             	mov    %rsp,%rbp
    af2c:	48 83 ec 10          	sub    $0x10,%rsp
    af30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    af38:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    af3d:	74 15                	je     af54 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    af3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af47:	48 89 d6             	mov    %rdx,%rsi
    af4a:	48 89 c7             	mov    %rax,%rdi
    af4d:	e8 12 06 00 00       	call   b564 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    af52:	eb 05                	jmp    af59 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    af54:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    af59:	c9                   	leave
    af5a:	c3                   	ret

000000000000af5b <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    af5b:	55                   	push   %rbp
    af5c:	48 89 e5             	mov    %rsp,%rbp
    af5f:	48 83 ec 20          	sub    $0x20,%rsp
    af63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    af67:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    af6b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    af6f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    af73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af77:	48 89 d6             	mov    %rdx,%rsi
    af7a:	48 89 c7             	mov    %rax,%rdi
    af7d:	e8 0c 06 00 00       	call   b58e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    af82:	c9                   	leave
    af83:	c3                   	ret

000000000000af84 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    af84:	55                   	push   %rbp
    af85:	48 89 e5             	mov    %rsp,%rbp
    af88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af90:	90                   	nop
    af91:	5d                   	pop    %rbp
    af92:	c3                   	ret
    af93:	90                   	nop

000000000000af94 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af94:	55                   	push   %rbp
    af95:	48 89 e5             	mov    %rsp,%rbp
    af98:	48 83 ec 20          	sub    $0x20,%rsp
    af9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afa4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    afa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    afb3:	00 
    afb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    afb8:	48 89 d6             	mov    %rdx,%rsi
    afbb:	48 89 c7             	mov    %rax,%rdi
    afbe:	e8 fd 93 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    afc3:	c9                   	leave
    afc4:	c3                   	ret

000000000000afc5 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    afc5:	55                   	push   %rbp
    afc6:	48 89 e5             	mov    %rsp,%rbp
    afc9:	48 83 ec 10          	sub    $0x10,%rsp
    afcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    afd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afd5:	48 89 c7             	mov    %rax,%rdi
    afd8:	e8 0f 06 00 00       	call   b5ec <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    afdd:	c9                   	leave
    afde:	c3                   	ret
    afdf:	90                   	nop

000000000000afe0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    afe0:	55                   	push   %rbp
    afe1:	48 89 e5             	mov    %rsp,%rbp
    afe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    afe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afec:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aff7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    affe:	00 
    afff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b003:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b00a:	00 
	{ }
    b00b:	90                   	nop
    b00c:	5d                   	pop    %rbp
    b00d:	c3                   	ret

000000000000b00e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b00e:	55                   	push   %rbp
    b00f:	48 89 e5             	mov    %rsp,%rbp
    b012:	48 83 ec 10          	sub    $0x10,%rsp
    b016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b01a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b01e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b023:	74 15                	je     b03a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    b025:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b029:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b02d:	48 89 d6             	mov    %rdx,%rsi
    b030:	48 89 c7             	mov    %rax,%rdi
    b033:	e8 ce 05 00 00       	call   b606 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    b038:	eb 05                	jmp    b03f <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    b03a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b03f:	c9                   	leave
    b040:	c3                   	ret

000000000000b041 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b041:	55                   	push   %rbp
    b042:	48 89 e5             	mov    %rsp,%rbp
    b045:	48 83 ec 20          	sub    $0x20,%rsp
    b049:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b04d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b051:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b055:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b05d:	48 89 d6             	mov    %rdx,%rsi
    b060:	48 89 c7             	mov    %rax,%rdi
    b063:	e8 c8 05 00 00       	call   b630 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    b068:	c9                   	leave
    b069:	c3                   	ret

000000000000b06a <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    b06a:	55                   	push   %rbp
    b06b:	48 89 e5             	mov    %rsp,%rbp
    b06e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b072:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b076:	90                   	nop
    b077:	5d                   	pop    %rbp
    b078:	c3                   	ret
    b079:	90                   	nop

000000000000b07a <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b07a:	55                   	push   %rbp
    b07b:	48 89 e5             	mov    %rsp,%rbp
    b07e:	48 83 ec 20          	sub    $0x20,%rsp
    b082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b086:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b08a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b08e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b092:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    b099:	00 
    b09a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b09e:	48 89 d6             	mov    %rdx,%rsi
    b0a1:	48 89 c7             	mov    %rax,%rdi
    b0a4:	e8 17 93 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    b0a9:	c9                   	leave
    b0aa:	c3                   	ret

000000000000b0ab <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b0ab:	55                   	push   %rbp
    b0ac:	48 89 e5             	mov    %rsp,%rbp
    b0af:	48 83 ec 10          	sub    $0x10,%rsp
    b0b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b0b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0bb:	48 89 c7             	mov    %rax,%rdi
    b0be:	e8 cb 05 00 00       	call   b68e <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    b0c3:	c9                   	leave
    b0c4:	c3                   	ret
    b0c5:	90                   	nop

000000000000b0c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b0c6:	55                   	push   %rbp
    b0c7:	48 89 e5             	mov    %rsp,%rbp
    b0ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b0ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0d2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b0d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0dd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b0e4:	00 
    b0e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0e9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b0f0:	00 
	{ }
    b0f1:	90                   	nop
    b0f2:	5d                   	pop    %rbp
    b0f3:	c3                   	ret

000000000000b0f4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b0f4:	55                   	push   %rbp
    b0f5:	48 89 e5             	mov    %rsp,%rbp
    b0f8:	48 83 ec 10          	sub    $0x10,%rsp
    b0fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b100:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b104:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b109:	74 15                	je     b120 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    b10b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b10f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b113:	48 89 d6             	mov    %rdx,%rsi
    b116:	48 89 c7             	mov    %rax,%rdi
    b119:	e8 8a 05 00 00       	call   b6a8 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    b11e:	eb 05                	jmp    b125 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    b120:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b125:	c9                   	leave
    b126:	c3                   	ret

000000000000b127 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b127:	55                   	push   %rbp
    b128:	48 89 e5             	mov    %rsp,%rbp
    b12b:	48 83 ec 20          	sub    $0x20,%rsp
    b12f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b133:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b137:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b13b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b13f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b143:	48 89 d6             	mov    %rdx,%rsi
    b146:	48 89 c7             	mov    %rax,%rdi
    b149:	e8 84 05 00 00       	call   b6d2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    b14e:	c9                   	leave
    b14f:	c3                   	ret

000000000000b150 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    b150:	55                   	push   %rbp
    b151:	48 89 e5             	mov    %rsp,%rbp
    b154:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b158:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b15c:	90                   	nop
    b15d:	5d                   	pop    %rbp
    b15e:	c3                   	ret
    b15f:	90                   	nop

000000000000b160 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b160:	55                   	push   %rbp
    b161:	48 89 e5             	mov    %rsp,%rbp
    b164:	48 83 ec 20          	sub    $0x20,%rsp
    b168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b16c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b170:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b174:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b178:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b17f:	00 
    b180:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b184:	48 89 d6             	mov    %rdx,%rsi
    b187:	48 89 c7             	mov    %rax,%rdi
    b18a:	e8 31 92 ff ff       	call   43c0 <_ZdlPvm@plt>
      }
    b18f:	c9                   	leave
    b190:	c3                   	ret
    b191:	90                   	nop

000000000000b192 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b192:	55                   	push   %rbp
    b193:	48 89 e5             	mov    %rsp,%rbp
    b196:	48 83 ec 10          	sub    $0x10,%rsp
    b19a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1a2:	48 89 c7             	mov    %rax,%rdi
    b1a5:	e8 86 05 00 00       	call   b730 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b1aa:	c9                   	leave
    b1ab:	c3                   	ret

000000000000b1ac <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b1ac:	55                   	push   %rbp
    b1ad:	48 89 e5             	mov    %rsp,%rbp
    b1b0:	48 83 ec 10          	sub    $0x10,%rsp
    b1b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b1bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b1c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1c4:	ba 00 00 00 00       	mov    $0x0,%edx
    b1c9:	48 89 ce             	mov    %rcx,%rsi
    b1cc:	48 89 c7             	mov    %rax,%rdi
    b1cf:	e8 70 05 00 00       	call   b744 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    b1d4:	c9                   	leave
    b1d5:	c3                   	ret

000000000000b1d6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b1d6:	55                   	push   %rbp
    b1d7:	48 89 e5             	mov    %rsp,%rbp
    b1da:	48 83 ec 20          	sub    $0x20,%rsp
    b1de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b1e6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b1eb:	74 43                	je     b230 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b1ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1f1:	48 89 c7             	mov    %rax,%rdi
    b1f4:	e8 b6 05 00 00       	call   b7af <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    b1f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b1fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b201:	48 89 c7             	mov    %rax,%rdi
    b204:	e8 b4 05 00 00       	call   b7bd <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b209:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    b210:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b211:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b215:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b219:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b21d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b221:	48 89 ce             	mov    %rcx,%rsi
    b224:	48 89 c7             	mov    %rax,%rdi
    b227:	e8 eb 05 00 00       	call   b817 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    b22c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b230:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b234:	c9                   	leave
    b235:	c3                   	ret

000000000000b236 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b236:	55                   	push   %rbp
    b237:	48 89 e5             	mov    %rsp,%rbp
    b23a:	48 83 ec 10          	sub    $0x10,%rsp
    b23e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b246:	48 89 c7             	mov    %rax,%rdi
    b249:	e8 0e 06 00 00       	call   b85c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b24e:	c9                   	leave
    b24f:	c3                   	ret

000000000000b250 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b250:	55                   	push   %rbp
    b251:	48 89 e5             	mov    %rsp,%rbp
    b254:	48 83 ec 10          	sub    $0x10,%rsp
    b258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b25c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b260:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b268:	ba 00 00 00 00       	mov    $0x0,%edx
    b26d:	48 89 ce             	mov    %rcx,%rsi
    b270:	48 89 c7             	mov    %rax,%rdi
    b273:	e8 f8 05 00 00       	call   b870 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    b278:	c9                   	leave
    b279:	c3                   	ret

000000000000b27a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b27a:	55                   	push   %rbp
    b27b:	48 89 e5             	mov    %rsp,%rbp
    b27e:	48 83 ec 20          	sub    $0x20,%rsp
    b282:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b286:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b28a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b28f:	74 43                	je     b2d4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b295:	48 89 c7             	mov    %rax,%rdi
    b298:	e8 3e 06 00 00       	call   b8db <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    b29d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b2a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2a5:	48 89 c7             	mov    %rax,%rdi
    b2a8:	e8 3c 06 00 00       	call   b8e9 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b2ad:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    b2b4:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b2b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b2b9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b2bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b2c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b2c5:	48 89 ce             	mov    %rcx,%rsi
    b2c8:	48 89 c7             	mov    %rax,%rdi
    b2cb:	e8 73 06 00 00       	call   b943 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    b2d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b2d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b2d8:	c9                   	leave
    b2d9:	c3                   	ret

000000000000b2da <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b2da:	55                   	push   %rbp
    b2db:	48 89 e5             	mov    %rsp,%rbp
    b2de:	48 83 ec 10          	sub    $0x10,%rsp
    b2e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b2e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ea:	48 89 c7             	mov    %rax,%rdi
    b2ed:	e8 96 06 00 00       	call   b988 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b2f2:	c9                   	leave
    b2f3:	c3                   	ret

000000000000b2f4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b2f4:	55                   	push   %rbp
    b2f5:	48 89 e5             	mov    %rsp,%rbp
    b2f8:	48 83 ec 10          	sub    $0x10,%rsp
    b2fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b300:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b304:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b308:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b30c:	ba 00 00 00 00       	mov    $0x0,%edx
    b311:	48 89 ce             	mov    %rcx,%rsi
    b314:	48 89 c7             	mov    %rax,%rdi
    b317:	e8 80 06 00 00       	call   b99c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    b31c:	c9                   	leave
    b31d:	c3                   	ret

000000000000b31e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b31e:	55                   	push   %rbp
    b31f:	48 89 e5             	mov    %rsp,%rbp
    b322:	48 83 ec 20          	sub    $0x20,%rsp
    b326:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b32a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b32e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b333:	74 40                	je     b375 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b335:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b339:	48 89 c7             	mov    %rax,%rdi
    b33c:	e8 bc 06 00 00       	call   b9fd <_ZSt11__addressofIPKcEPT_RS2_>
    b341:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b349:	48 89 c7             	mov    %rax,%rdi
    b34c:	e8 ba 06 00 00       	call   ba0b <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    b351:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b356:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b35a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b35e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b362:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b366:	48 89 ce             	mov    %rcx,%rsi
    b369:	48 89 c7             	mov    %rax,%rdi
    b36c:	e8 c1 06 00 00       	call   ba32 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    b371:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b375:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b379:	c9                   	leave
    b37a:	c3                   	ret
    b37b:	90                   	nop

000000000000b37c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b37c:	55                   	push   %rbp
    b37d:	48 89 e5             	mov    %rsp,%rbp
    b380:	48 83 ec 10          	sub    $0x10,%rsp
    b384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b38c:	48 89 c7             	mov    %rax,%rdi
    b38f:	e8 e2 06 00 00       	call   ba76 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b394:	c9                   	leave
    b395:	c3                   	ret

000000000000b396 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b396:	55                   	push   %rbp
    b397:	48 89 e5             	mov    %rsp,%rbp
    b39a:	48 83 ec 10          	sub    $0x10,%rsp
    b39e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b3a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b3aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3ae:	ba 00 00 00 00       	mov    $0x0,%edx
    b3b3:	48 89 ce             	mov    %rcx,%rsi
    b3b6:	48 89 c7             	mov    %rax,%rdi
    b3b9:	e8 cc 06 00 00       	call   ba8a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    b3be:	c9                   	leave
    b3bf:	c3                   	ret

000000000000b3c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b3c0:	55                   	push   %rbp
    b3c1:	48 89 e5             	mov    %rsp,%rbp
    b3c4:	48 83 ec 20          	sub    $0x20,%rsp
    b3c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b3cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b3d0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b3d5:	74 40                	je     b417 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b3d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3db:	48 89 c7             	mov    %rax,%rdi
    b3de:	e8 08 07 00 00       	call   baeb <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    b3e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b3e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3eb:	48 89 c7             	mov    %rax,%rdi
    b3ee:	e8 06 07 00 00       	call   baf9 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    b3f3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b3f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b3fc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b400:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b404:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b408:	48 89 ce             	mov    %rcx,%rsi
    b40b:	48 89 c7             	mov    %rax,%rdi
    b40e:	e8 0d 07 00 00       	call   bb20 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    b413:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b417:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b41b:	c9                   	leave
    b41c:	c3                   	ret
    b41d:	90                   	nop

000000000000b41e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b41e:	55                   	push   %rbp
    b41f:	48 89 e5             	mov    %rsp,%rbp
    b422:	48 83 ec 10          	sub    $0x10,%rsp
    b426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b42e:	48 89 c7             	mov    %rax,%rdi
    b431:	e8 2e 07 00 00       	call   bb64 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b436:	c9                   	leave
    b437:	c3                   	ret

000000000000b438 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b438:	55                   	push   %rbp
    b439:	48 89 e5             	mov    %rsp,%rbp
    b43c:	48 83 ec 10          	sub    $0x10,%rsp
    b440:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b444:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b448:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b44c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b450:	ba 00 00 00 00       	mov    $0x0,%edx
    b455:	48 89 ce             	mov    %rcx,%rsi
    b458:	48 89 c7             	mov    %rax,%rdi
    b45b:	e8 18 07 00 00       	call   bb78 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b460:	c9                   	leave
    b461:	c3                   	ret

000000000000b462 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b462:	55                   	push   %rbp
    b463:	48 89 e5             	mov    %rsp,%rbp
    b466:	48 83 ec 20          	sub    $0x20,%rsp
    b46a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b46e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b472:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b477:	74 40                	je     b4b9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b479:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b47d:	48 89 c7             	mov    %rax,%rdi
    b480:	e8 c2 f9 ff ff       	call   ae47 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b485:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b48d:	48 89 c7             	mov    %rax,%rdi
    b490:	e8 4d 07 00 00       	call   bbe2 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b495:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b49a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b49e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b4a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b4a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4aa:	48 89 ce             	mov    %rcx,%rsi
    b4ad:	48 89 c7             	mov    %rax,%rdi
    b4b0:	e8 76 07 00 00       	call   bc2b <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b4b5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b4b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b4bd:	c9                   	leave
    b4be:	c3                   	ret
    b4bf:	90                   	nop

000000000000b4c0 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b4c0:	55                   	push   %rbp
    b4c1:	48 89 e5             	mov    %rsp,%rbp
    b4c4:	48 83 ec 10          	sub    $0x10,%rsp
    b4c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b4cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4d0:	48 89 c7             	mov    %rax,%rdi
    b4d3:	e8 98 07 00 00       	call   bc70 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b4d8:	c9                   	leave
    b4d9:	c3                   	ret

000000000000b4da <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b4da:	55                   	push   %rbp
    b4db:	48 89 e5             	mov    %rsp,%rbp
    b4de:	48 83 ec 10          	sub    $0x10,%rsp
    b4e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b4ea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b4ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f2:	ba 00 00 00 00       	mov    $0x0,%edx
    b4f7:	48 89 ce             	mov    %rcx,%rsi
    b4fa:	48 89 c7             	mov    %rax,%rdi
    b4fd:	e8 82 07 00 00       	call   bc84 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b502:	c9                   	leave
    b503:	c3                   	ret

000000000000b504 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b504:	55                   	push   %rbp
    b505:	48 89 e5             	mov    %rsp,%rbp
    b508:	48 83 ec 20          	sub    $0x20,%rsp
    b50c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b510:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b514:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b518:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b51c:	eb 1e                	jmp    b53c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b51e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b522:	48 89 c7             	mov    %rax,%rdi
    b525:	e8 c5 07 00 00       	call   bcef <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b52a:	48 89 c7             	mov    %rax,%rdi
    b52d:	e8 cb 07 00 00       	call   bcfd <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b532:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b537:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b53c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b541:	75 db                	jne    b51e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b547:	c9                   	leave
    b548:	c3                   	ret
    b549:	90                   	nop

000000000000b54a <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b54a:	55                   	push   %rbp
    b54b:	48 89 e5             	mov    %rsp,%rbp
    b54e:	48 83 ec 10          	sub    $0x10,%rsp
    b552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b55a:	48 89 c7             	mov    %rax,%rdi
    b55d:	e8 c4 07 00 00       	call   bd26 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b562:	c9                   	leave
    b563:	c3                   	ret

000000000000b564 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b564:	55                   	push   %rbp
    b565:	48 89 e5             	mov    %rsp,%rbp
    b568:	48 83 ec 10          	sub    $0x10,%rsp
    b56c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b570:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b574:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b57c:	ba 00 00 00 00       	mov    $0x0,%edx
    b581:	48 89 ce             	mov    %rcx,%rsi
    b584:	48 89 c7             	mov    %rax,%rdi
    b587:	e8 ae 07 00 00       	call   bd3a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b58c:	c9                   	leave
    b58d:	c3                   	ret

000000000000b58e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b58e:	55                   	push   %rbp
    b58f:	48 89 e5             	mov    %rsp,%rbp
    b592:	48 83 ec 20          	sub    $0x20,%rsp
    b596:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b59a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b59e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b5a3:	74 40                	je     b5e5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b5a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5a9:	48 89 c7             	mov    %rax,%rdi
    b5ac:	e8 ea 07 00 00       	call   bd9b <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b5b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b5b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5b9:	48 89 c7             	mov    %rax,%rdi
    b5bc:	e8 e8 07 00 00       	call   bda9 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b5c1:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b5c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b5ca:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b5ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b5d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5d6:	48 89 ce             	mov    %rcx,%rsi
    b5d9:	48 89 c7             	mov    %rax,%rdi
    b5dc:	e8 f5 07 00 00       	call   bdd6 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b5e1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b5e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b5e9:	c9                   	leave
    b5ea:	c3                   	ret
    b5eb:	90                   	nop

000000000000b5ec <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b5ec:	55                   	push   %rbp
    b5ed:	48 89 e5             	mov    %rsp,%rbp
    b5f0:	48 83 ec 10          	sub    $0x10,%rsp
    b5f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b5f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5fc:	48 89 c7             	mov    %rax,%rdi
    b5ff:	e8 16 08 00 00       	call   be1a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b604:	c9                   	leave
    b605:	c3                   	ret

000000000000b606 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b606:	55                   	push   %rbp
    b607:	48 89 e5             	mov    %rsp,%rbp
    b60a:	48 83 ec 10          	sub    $0x10,%rsp
    b60e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b616:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b61a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b61e:	ba 00 00 00 00       	mov    $0x0,%edx
    b623:	48 89 ce             	mov    %rcx,%rsi
    b626:	48 89 c7             	mov    %rax,%rdi
    b629:	e8 00 08 00 00       	call   be2e <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b62e:	c9                   	leave
    b62f:	c3                   	ret

000000000000b630 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b630:	55                   	push   %rbp
    b631:	48 89 e5             	mov    %rsp,%rbp
    b634:	48 83 ec 20          	sub    $0x20,%rsp
    b638:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b63c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b640:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b645:	74 40                	je     b687 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b647:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b64b:	48 89 c7             	mov    %rax,%rdi
    b64e:	e8 3c 08 00 00       	call   be8f <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b653:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b65b:	48 89 c7             	mov    %rax,%rdi
    b65e:	e8 3a 08 00 00       	call   be9d <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b663:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b668:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b66c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b670:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b674:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b678:	48 89 ce             	mov    %rcx,%rsi
    b67b:	48 89 c7             	mov    %rax,%rdi
    b67e:	e8 40 08 00 00       	call   bec3 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b683:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b687:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b68b:	c9                   	leave
    b68c:	c3                   	ret
    b68d:	90                   	nop

000000000000b68e <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b68e:	55                   	push   %rbp
    b68f:	48 89 e5             	mov    %rsp,%rbp
    b692:	48 83 ec 10          	sub    $0x10,%rsp
    b696:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b69a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b69e:	48 89 c7             	mov    %rax,%rdi
    b6a1:	e8 62 08 00 00       	call   bf08 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b6a6:	c9                   	leave
    b6a7:	c3                   	ret

000000000000b6a8 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b6a8:	55                   	push   %rbp
    b6a9:	48 89 e5             	mov    %rsp,%rbp
    b6ac:	48 83 ec 10          	sub    $0x10,%rsp
    b6b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b6b8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b6bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6c0:	ba 00 00 00 00       	mov    $0x0,%edx
    b6c5:	48 89 ce             	mov    %rcx,%rsi
    b6c8:	48 89 c7             	mov    %rax,%rdi
    b6cb:	e8 4c 08 00 00       	call   bf1c <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b6d0:	c9                   	leave
    b6d1:	c3                   	ret

000000000000b6d2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b6d2:	55                   	push   %rbp
    b6d3:	48 89 e5             	mov    %rsp,%rbp
    b6d6:	48 83 ec 20          	sub    $0x20,%rsp
    b6da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b6de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b6e2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b6e7:	74 40                	je     b729 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b6e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6ed:	48 89 c7             	mov    %rax,%rdi
    b6f0:	e8 88 08 00 00       	call   bf7d <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b6f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b6f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6fd:	48 89 c7             	mov    %rax,%rdi
    b700:	e8 86 08 00 00       	call   bf8b <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b705:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b70a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b70e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b712:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b716:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b71a:	48 89 ce             	mov    %rcx,%rsi
    b71d:	48 89 c7             	mov    %rax,%rdi
    b720:	e8 8d 08 00 00       	call   bfb2 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b725:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b729:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b72d:	c9                   	leave
    b72e:	c3                   	ret
    b72f:	90                   	nop

000000000000b730 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b730:	55                   	push   %rbp
    b731:	48 89 e5             	mov    %rsp,%rbp
    b734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b738:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b73f:	03 3f 00 
      }
    b742:	5d                   	pop    %rbp
    b743:	c3                   	ret

000000000000b744 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b744:	55                   	push   %rbp
    b745:	48 89 e5             	mov    %rsp,%rbp
    b748:	48 83 ec 20          	sub    $0x20,%rsp
    b74c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b750:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b754:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b75c:	48 89 c7             	mov    %rax,%rdi
    b75f:	e8 cc ff ff ff       	call   b730 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b764:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b768:	0f 92 c0             	setb   %al
    b76b:	0f b6 c0             	movzbl %al,%eax
    b76e:	48 85 c0             	test   %rax,%rax
    b771:	0f 95 c0             	setne  %al
    b774:	84 c0                	test   %al,%al
    b776:	74 1a                	je     b792 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b778:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b77f:	07 7e 00 
    b782:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b786:	73 05                	jae    b78d <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b788:	e8 f3 8a ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b78d:	e8 5e 89 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b792:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b796:	48 89 d0             	mov    %rdx,%rax
    b799:	48 c1 e0 06          	shl    $0x6,%rax
    b79d:	48 01 d0             	add    %rdx,%rax
    b7a0:	48 c1 e0 03          	shl    $0x3,%rax
    b7a4:	48 89 c7             	mov    %rax,%rdi
    b7a7:	e8 f4 8b ff ff       	call   43a0 <_Znwm@plt>
    b7ac:	90                   	nop
      }
    b7ad:	c9                   	leave
    b7ae:	c3                   	ret

000000000000b7af <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b7af:	55                   	push   %rbp
    b7b0:	48 89 e5             	mov    %rsp,%rbp
    b7b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b7b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7bb:	5d                   	pop    %rbp
    b7bc:	c3                   	ret

000000000000b7bd <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b7bd:	55                   	push   %rbp
    b7be:	48 89 e5             	mov    %rsp,%rbp
    b7c1:	48 83 ec 10          	sub    $0x10,%rsp
    b7c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b7c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7cd:	48 89 c6             	mov    %rax,%rsi
    b7d0:	bf 08 02 00 00       	mov    $0x208,%edi
    b7d5:	e8 ef 97 ff ff       	call   4fc9 <_ZnwmPv>
    b7da:	b9 08 02 00 00       	mov    $0x208,%ecx
    b7df:	be 00 00 00 00       	mov    $0x0,%esi
    b7e4:	48 89 30             	mov    %rsi,(%rax)
    b7e7:	89 ca                	mov    %ecx,%edx
    b7e9:	48 01 c2             	add    %rax,%rdx
    b7ec:	48 83 c2 08          	add    $0x8,%rdx
    b7f0:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b7f4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b7f8:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b7fc:	48 29 d0             	sub    %rdx,%rax
    b7ff:	01 c1                	add    %eax,%ecx
    b801:	83 e1 f8             	and    $0xfffffff8,%ecx
    b804:	89 c8                	mov    %ecx,%eax
    b806:	c1 e8 03             	shr    $0x3,%eax
    b809:	89 c1                	mov    %eax,%ecx
    b80b:	48 89 d7             	mov    %rdx,%rdi
    b80e:	48 89 f0             	mov    %rsi,%rax
    b811:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b814:	90                   	nop
    b815:	c9                   	leave
    b816:	c3                   	ret

000000000000b817 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b817:	55                   	push   %rbp
    b818:	48 89 e5             	mov    %rsp,%rbp
    b81b:	48 83 ec 20          	sub    $0x20,%rsp
    b81f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b823:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b827:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b82b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b82f:	48 89 c7             	mov    %rax,%rdi
    b832:	e8 bf 07 00 00       	call   bff6 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b837:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b83b:	48 89 c7             	mov    %rax,%rdi
    b83e:	e8 98 97 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    b843:	48 89 c1             	mov    %rax,%rcx
    b846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b84a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b84e:	48 89 ce             	mov    %rcx,%rsi
    b851:	48 89 c7             	mov    %rax,%rdi
    b854:	e8 a8 07 00 00       	call   c001 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b859:	c9                   	leave
    b85a:	c3                   	ret
    b85b:	90                   	nop

000000000000b85c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b85c:	55                   	push   %rbp
    b85d:	48 89 e5             	mov    %rsp,%rbp
    b860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b864:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b86b:	07 7e 00 
      }
    b86e:	5d                   	pop    %rbp
    b86f:	c3                   	ret

000000000000b870 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b870:	55                   	push   %rbp
    b871:	48 89 e5             	mov    %rsp,%rbp
    b874:	48 83 ec 20          	sub    $0x20,%rsp
    b878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b87c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b880:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b888:	48 89 c7             	mov    %rax,%rdi
    b88b:	e8 cc ff ff ff       	call   b85c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b890:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b894:	0f 92 c0             	setb   %al
    b897:	0f b6 c0             	movzbl %al,%eax
    b89a:	48 85 c0             	test   %rax,%rax
    b89d:	0f 95 c0             	setne  %al
    b8a0:	84 c0                	test   %al,%al
    b8a2:	74 1a                	je     b8be <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b8a4:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    b8ab:	0f fc 00 
    b8ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b8b2:	73 05                	jae    b8b9 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b8b4:	e8 c7 89 ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b8b9:	e8 32 88 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b8be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b8c2:	48 89 d0             	mov    %rdx,%rax
    b8c5:	48 c1 e0 06          	shl    $0x6,%rax
    b8c9:	48 01 d0             	add    %rdx,%rax
    b8cc:	48 c1 e0 02          	shl    $0x2,%rax
    b8d0:	48 89 c7             	mov    %rax,%rdi
    b8d3:	e8 c8 8a ff ff       	call   43a0 <_Znwm@plt>
    b8d8:	90                   	nop
      }
    b8d9:	c9                   	leave
    b8da:	c3                   	ret

000000000000b8db <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b8db:	55                   	push   %rbp
    b8dc:	48 89 e5             	mov    %rsp,%rbp
    b8df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b8e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8e7:	5d                   	pop    %rbp
    b8e8:	c3                   	ret

000000000000b8e9 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b8e9:	55                   	push   %rbp
    b8ea:	48 89 e5             	mov    %rsp,%rbp
    b8ed:	48 83 ec 10          	sub    $0x10,%rsp
    b8f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b8f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8f9:	48 89 c6             	mov    %rax,%rsi
    b8fc:	bf 04 01 00 00       	mov    $0x104,%edi
    b901:	e8 c3 96 ff ff       	call   4fc9 <_ZnwmPv>
    b906:	b9 04 01 00 00       	mov    $0x104,%ecx
    b90b:	be 00 00 00 00       	mov    $0x0,%esi
    b910:	48 89 30             	mov    %rsi,(%rax)
    b913:	89 ca                	mov    %ecx,%edx
    b915:	48 01 c2             	add    %rax,%rdx
    b918:	48 83 c2 08          	add    $0x8,%rdx
    b91c:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b920:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b924:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b928:	48 29 d0             	sub    %rdx,%rax
    b92b:	01 c1                	add    %eax,%ecx
    b92d:	83 e1 f8             	and    $0xfffffff8,%ecx
    b930:	89 c8                	mov    %ecx,%eax
    b932:	c1 e8 03             	shr    $0x3,%eax
    b935:	89 c1                	mov    %eax,%ecx
    b937:	48 89 d7             	mov    %rdx,%rdi
    b93a:	48 89 f0             	mov    %rsi,%rax
    b93d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b940:	90                   	nop
    b941:	c9                   	leave
    b942:	c3                   	ret

000000000000b943 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b943:	55                   	push   %rbp
    b944:	48 89 e5             	mov    %rsp,%rbp
    b947:	48 83 ec 20          	sub    $0x20,%rsp
    b94b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b94f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b953:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b957:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b95b:	48 89 c7             	mov    %rax,%rdi
    b95e:	e8 0d 07 00 00       	call   c070 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b963:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b967:	48 89 c7             	mov    %rax,%rdi
    b96a:	e8 6c 96 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    b96f:	48 89 c1             	mov    %rax,%rcx
    b972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b976:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b97a:	48 89 ce             	mov    %rcx,%rsi
    b97d:	48 89 c7             	mov    %rax,%rdi
    b980:	e8 f6 06 00 00       	call   c07b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b985:	c9                   	leave
    b986:	c3                   	ret
    b987:	90                   	nop

000000000000b988 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b988:	55                   	push   %rbp
    b989:	48 89 e5             	mov    %rsp,%rbp
    b98c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b990:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b997:	ff ff 0f 
      }
    b99a:	5d                   	pop    %rbp
    b99b:	c3                   	ret

000000000000b99c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b99c:	55                   	push   %rbp
    b99d:	48 89 e5             	mov    %rsp,%rbp
    b9a0:	48 83 ec 20          	sub    $0x20,%rsp
    b9a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b9b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9b4:	48 89 c7             	mov    %rax,%rdi
    b9b7:	e8 cc ff ff ff       	call   b988 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b9bc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b9c0:	0f 92 c0             	setb   %al
    b9c3:	0f b6 c0             	movzbl %al,%eax
    b9c6:	48 85 c0             	test   %rax,%rax
    b9c9:	0f 95 c0             	setne  %al
    b9cc:	84 c0                	test   %al,%al
    b9ce:	74 1a                	je     b9ea <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b9d0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b9d7:	ff ff 1f 
    b9da:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b9de:	73 05                	jae    b9e5 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b9e0:	e8 9b 88 ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b9e5:	e8 06 87 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b9ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9ee:	48 c1 e0 03          	shl    $0x3,%rax
    b9f2:	48 89 c7             	mov    %rax,%rdi
    b9f5:	e8 a6 89 ff ff       	call   43a0 <_Znwm@plt>
    b9fa:	90                   	nop
      }
    b9fb:	c9                   	leave
    b9fc:	c3                   	ret

000000000000b9fd <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b9fd:	55                   	push   %rbp
    b9fe:	48 89 e5             	mov    %rsp,%rbp
    ba01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ba05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba09:	5d                   	pop    %rbp
    ba0a:	c3                   	ret

000000000000ba0b <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ba0b:	55                   	push   %rbp
    ba0c:	48 89 e5             	mov    %rsp,%rbp
    ba0f:	48 83 ec 10          	sub    $0x10,%rsp
    ba13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ba17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba1b:	48 89 c6             	mov    %rax,%rsi
    ba1e:	bf 08 00 00 00       	mov    $0x8,%edi
    ba23:	e8 a1 95 ff ff       	call   4fc9 <_ZnwmPv>
    ba28:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    ba2f:	90                   	nop
    ba30:	c9                   	leave
    ba31:	c3                   	ret

000000000000ba32 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ba32:	55                   	push   %rbp
    ba33:	48 89 e5             	mov    %rsp,%rbp
    ba36:	48 83 ec 20          	sub    $0x20,%rsp
    ba3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba42:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ba46:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ba4a:	48 89 c7             	mov    %rax,%rdi
    ba4d:	e8 98 06 00 00       	call   c0ea <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ba52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba56:	48 89 c7             	mov    %rax,%rdi
    ba59:	e8 7d 95 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    ba5e:	48 89 c1             	mov    %rax,%rcx
    ba61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba65:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba69:	48 89 ce             	mov    %rcx,%rsi
    ba6c:	48 89 c7             	mov    %rax,%rdi
    ba6f:	e8 81 06 00 00       	call   c0f5 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    ba74:	c9                   	leave
    ba75:	c3                   	ret

000000000000ba76 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ba76:	55                   	push   %rbp
    ba77:	48 89 e5             	mov    %rsp,%rbp
    ba7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ba7e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ba85:	ff ff 0f 
      }
    ba88:	5d                   	pop    %rbp
    ba89:	c3                   	ret

000000000000ba8a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ba8a:	55                   	push   %rbp
    ba8b:	48 89 e5             	mov    %rsp,%rbp
    ba8e:	48 83 ec 20          	sub    $0x20,%rsp
    ba92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ba9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa2:	48 89 c7             	mov    %rax,%rdi
    baa5:	e8 cc ff ff ff       	call   ba76 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    baaa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    baae:	0f 92 c0             	setb   %al
    bab1:	0f b6 c0             	movzbl %al,%eax
    bab4:	48 85 c0             	test   %rax,%rax
    bab7:	0f 95 c0             	setne  %al
    baba:	84 c0                	test   %al,%al
    babc:	74 1a                	je     bad8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    babe:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bac5:	ff ff 1f 
    bac8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bacc:	73 05                	jae    bad3 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bace:	e8 ad 87 ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bad3:	e8 18 86 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bad8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    badc:	48 c1 e0 03          	shl    $0x3,%rax
    bae0:	48 89 c7             	mov    %rax,%rdi
    bae3:	e8 b8 88 ff ff       	call   43a0 <_Znwm@plt>
    bae8:	90                   	nop
      }
    bae9:	c9                   	leave
    baea:	c3                   	ret

000000000000baeb <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    baeb:	55                   	push   %rbp
    baec:	48 89 e5             	mov    %rsp,%rbp
    baef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    baf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baf7:	5d                   	pop    %rbp
    baf8:	c3                   	ret

000000000000baf9 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    baf9:	55                   	push   %rbp
    bafa:	48 89 e5             	mov    %rsp,%rbp
    bafd:	48 83 ec 10          	sub    $0x10,%rsp
    bb01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb09:	48 89 c6             	mov    %rax,%rsi
    bb0c:	bf 08 00 00 00       	mov    $0x8,%edi
    bb11:	e8 b3 94 ff ff       	call   4fc9 <_ZnwmPv>
    bb16:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bb1d:	90                   	nop
    bb1e:	c9                   	leave
    bb1f:	c3                   	ret

000000000000bb20 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bb20:	55                   	push   %rbp
    bb21:	48 89 e5             	mov    %rsp,%rbp
    bb24:	48 83 ec 20          	sub    $0x20,%rsp
    bb28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb30:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bb34:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb38:	48 89 c7             	mov    %rax,%rdi
    bb3b:	e8 12 06 00 00       	call   c152 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bb40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb44:	48 89 c7             	mov    %rax,%rdi
    bb47:	e8 8f 94 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    bb4c:	48 89 c1             	mov    %rax,%rcx
    bb4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb57:	48 89 ce             	mov    %rcx,%rsi
    bb5a:	48 89 c7             	mov    %rax,%rdi
    bb5d:	e8 fb 05 00 00       	call   c15d <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bb62:	c9                   	leave
    bb63:	c3                   	ret

000000000000bb64 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bb64:	55                   	push   %rbp
    bb65:	48 89 e5             	mov    %rsp,%rbp
    bb68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bb6c:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    bb73:	55 55 05 
      }
    bb76:	5d                   	pop    %rbp
    bb77:	c3                   	ret

000000000000bb78 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bb78:	55                   	push   %rbp
    bb79:	48 89 e5             	mov    %rsp,%rbp
    bb7c:	48 83 ec 20          	sub    $0x20,%rsp
    bb80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb88:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bb8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb90:	48 89 c7             	mov    %rax,%rdi
    bb93:	e8 cc ff ff ff       	call   bb64 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    bb98:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb9c:	0f 92 c0             	setb   %al
    bb9f:	0f b6 c0             	movzbl %al,%eax
    bba2:	48 85 c0             	test   %rax,%rax
    bba5:	0f 95 c0             	setne  %al
    bba8:	84 c0                	test   %al,%al
    bbaa:	74 1a                	je     bbc6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bbac:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    bbb3:	aa aa 0a 
    bbb6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bbba:	73 05                	jae    bbc1 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bbbc:	e8 bf 86 ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bbc1:	e8 2a 85 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bbc6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bbca:	48 89 d0             	mov    %rdx,%rax
    bbcd:	48 01 c0             	add    %rax,%rax
    bbd0:	48 01 d0             	add    %rdx,%rax
    bbd3:	48 c1 e0 03          	shl    $0x3,%rax
    bbd7:	48 89 c7             	mov    %rax,%rdi
    bbda:	e8 c1 87 ff ff       	call   43a0 <_Znwm@plt>
    bbdf:	90                   	nop
      }
    bbe0:	c9                   	leave
    bbe1:	c3                   	ret

000000000000bbe2 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bbe2:	55                   	push   %rbp
    bbe3:	48 89 e5             	mov    %rsp,%rbp
    bbe6:	48 83 ec 10          	sub    $0x10,%rsp
    bbea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bbee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf2:	48 89 c6             	mov    %rax,%rsi
    bbf5:	bf 18 00 00 00       	mov    $0x18,%edi
    bbfa:	e8 ca 93 ff ff       	call   4fc9 <_ZnwmPv>
    bbff:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    bc05:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    bc0c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    bc13:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    bc1a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    bc21:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    bc28:	90                   	nop
    bc29:	c9                   	leave
    bc2a:	c3                   	ret

000000000000bc2b <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bc2b:	55                   	push   %rbp
    bc2c:	48 89 e5             	mov    %rsp,%rbp
    bc2f:	48 83 ec 20          	sub    $0x20,%rsp
    bc33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc37:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc3b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bc3f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc43:	48 89 c7             	mov    %rax,%rdi
    bc46:	e8 6f 05 00 00       	call   c1ba <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bc4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc4f:	48 89 c7             	mov    %rax,%rdi
    bc52:	e8 84 93 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    bc57:	48 89 c1             	mov    %rax,%rcx
    bc5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc62:	48 89 ce             	mov    %rcx,%rsi
    bc65:	48 89 c7             	mov    %rax,%rdi
    bc68:	e8 58 05 00 00       	call   c1c5 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bc6d:	c9                   	leave
    bc6e:	c3                   	ret
    bc6f:	90                   	nop

000000000000bc70 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bc70:	55                   	push   %rbp
    bc71:	48 89 e5             	mov    %rsp,%rbp
    bc74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bc78:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    bc7f:	49 92 04 
      }
    bc82:	5d                   	pop    %rbp
    bc83:	c3                   	ret

000000000000bc84 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bc84:	55                   	push   %rbp
    bc85:	48 89 e5             	mov    %rsp,%rbp
    bc88:	48 83 ec 20          	sub    $0x20,%rsp
    bc8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bc98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9c:	48 89 c7             	mov    %rax,%rdi
    bc9f:	e8 cc ff ff ff       	call   bc70 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    bca4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bca8:	0f 92 c0             	setb   %al
    bcab:	0f b6 c0             	movzbl %al,%eax
    bcae:	48 85 c0             	test   %rax,%rax
    bcb1:	0f 95 c0             	setne  %al
    bcb4:	84 c0                	test   %al,%al
    bcb6:	74 1a                	je     bcd2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bcb8:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    bcbf:	92 24 09 
    bcc2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bcc6:	73 05                	jae    bccd <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bcc8:	e8 b3 85 ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bccd:	e8 1e 84 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bcd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bcd6:	48 89 d0             	mov    %rdx,%rax
    bcd9:	48 c1 e0 03          	shl    $0x3,%rax
    bcdd:	48 29 d0             	sub    %rdx,%rax
    bce0:	48 c1 e0 02          	shl    $0x2,%rax
    bce4:	48 89 c7             	mov    %rax,%rdi
    bce7:	e8 b4 86 ff ff       	call   43a0 <_Znwm@plt>
    bcec:	90                   	nop
      }
    bced:	c9                   	leave
    bcee:	c3                   	ret

000000000000bcef <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bcef:	55                   	push   %rbp
    bcf0:	48 89 e5             	mov    %rsp,%rbp
    bcf3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bcf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcfb:	5d                   	pop    %rbp
    bcfc:	c3                   	ret

000000000000bcfd <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bcfd:	55                   	push   %rbp
    bcfe:	48 89 e5             	mov    %rsp,%rbp
    bd01:	48 83 ec 10          	sub    $0x10,%rsp
    bd05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bd09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd0d:	48 89 c6             	mov    %rax,%rsi
    bd10:	bf 1c 00 00 00       	mov    $0x1c,%edi
    bd15:	e8 af 92 ff ff       	call   4fc9 <_ZnwmPv>
    bd1a:	48 89 c7             	mov    %rax,%rdi
    bd1d:	e8 6c 05 00 00       	call   c28e <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    bd22:	90                   	nop
    bd23:	c9                   	leave
    bd24:	c3                   	ret
    bd25:	90                   	nop

000000000000bd26 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bd26:	55                   	push   %rbp
    bd27:	48 89 e5             	mov    %rsp,%rbp
    bd2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bd2e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bd35:	ff ff 0f 
      }
    bd38:	5d                   	pop    %rbp
    bd39:	c3                   	ret

000000000000bd3a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bd3a:	55                   	push   %rbp
    bd3b:	48 89 e5             	mov    %rsp,%rbp
    bd3e:	48 83 ec 20          	sub    $0x20,%rsp
    bd42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bd4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd52:	48 89 c7             	mov    %rax,%rdi
    bd55:	e8 cc ff ff ff       	call   bd26 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    bd5a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bd5e:	0f 92 c0             	setb   %al
    bd61:	0f b6 c0             	movzbl %al,%eax
    bd64:	48 85 c0             	test   %rax,%rax
    bd67:	0f 95 c0             	setne  %al
    bd6a:	84 c0                	test   %al,%al
    bd6c:	74 1a                	je     bd88 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bd6e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bd75:	ff ff 1f 
    bd78:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bd7c:	73 05                	jae    bd83 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bd7e:	e8 fd 84 ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bd83:	e8 68 83 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bd88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd8c:	48 c1 e0 03          	shl    $0x3,%rax
    bd90:	48 89 c7             	mov    %rax,%rdi
    bd93:	e8 08 86 ff ff       	call   43a0 <_Znwm@plt>
    bd98:	90                   	nop
      }
    bd99:	c9                   	leave
    bd9a:	c3                   	ret

000000000000bd9b <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bd9b:	55                   	push   %rbp
    bd9c:	48 89 e5             	mov    %rsp,%rbp
    bd9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bda3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bda7:	5d                   	pop    %rbp
    bda8:	c3                   	ret

000000000000bda9 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bda9:	55                   	push   %rbp
    bdaa:	48 89 e5             	mov    %rsp,%rbp
    bdad:	48 83 ec 10          	sub    $0x10,%rsp
    bdb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bdb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb9:	48 89 c6             	mov    %rax,%rsi
    bdbc:	bf 08 00 00 00       	mov    $0x8,%edi
    bdc1:	e8 03 92 ff ff       	call   4fc9 <_ZnwmPv>
    bdc6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    bdcc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    bdd3:	90                   	nop
    bdd4:	c9                   	leave
    bdd5:	c3                   	ret

000000000000bdd6 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bdd6:	55                   	push   %rbp
    bdd7:	48 89 e5             	mov    %rsp,%rbp
    bdda:	48 83 ec 20          	sub    $0x20,%rsp
    bdde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bde2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bde6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bdea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bdee:	48 89 c7             	mov    %rax,%rdi
    bdf1:	e8 b3 04 00 00       	call   c2a9 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bdf6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bdfa:	48 89 c7             	mov    %rax,%rdi
    bdfd:	e8 d9 91 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    be02:	48 89 c1             	mov    %rax,%rcx
    be05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be0d:	48 89 ce             	mov    %rcx,%rsi
    be10:	48 89 c7             	mov    %rax,%rdi
    be13:	e8 9c 04 00 00       	call   c2b4 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    be18:	c9                   	leave
    be19:	c3                   	ret

000000000000be1a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    be1a:	55                   	push   %rbp
    be1b:	48 89 e5             	mov    %rsp,%rbp
    be1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    be22:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    be29:	ff ff 1f 
      }
    be2c:	5d                   	pop    %rbp
    be2d:	c3                   	ret

000000000000be2e <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    be2e:	55                   	push   %rbp
    be2f:	48 89 e5             	mov    %rsp,%rbp
    be32:	48 83 ec 20          	sub    $0x20,%rsp
    be36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    be42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be46:	48 89 c7             	mov    %rax,%rdi
    be49:	e8 cc ff ff ff       	call   be1a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    be4e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    be52:	0f 92 c0             	setb   %al
    be55:	0f b6 c0             	movzbl %al,%eax
    be58:	48 85 c0             	test   %rax,%rax
    be5b:	0f 95 c0             	setne  %al
    be5e:	84 c0                	test   %al,%al
    be60:	74 1a                	je     be7c <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    be62:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    be69:	ff ff 3f 
    be6c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    be70:	73 05                	jae    be77 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    be72:	e8 09 84 ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    be77:	e8 74 82 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    be7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be80:	48 c1 e0 02          	shl    $0x2,%rax
    be84:	48 89 c7             	mov    %rax,%rdi
    be87:	e8 14 85 ff ff       	call   43a0 <_Znwm@plt>
    be8c:	90                   	nop
      }
    be8d:	c9                   	leave
    be8e:	c3                   	ret

000000000000be8f <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    be8f:	55                   	push   %rbp
    be90:	48 89 e5             	mov    %rsp,%rbp
    be93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    be97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be9b:	5d                   	pop    %rbp
    be9c:	c3                   	ret

000000000000be9d <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    be9d:	55                   	push   %rbp
    be9e:	48 89 e5             	mov    %rsp,%rbp
    bea1:	48 83 ec 10          	sub    $0x10,%rsp
    bea5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bead:	48 89 c6             	mov    %rax,%rsi
    beb0:	bf 04 00 00 00       	mov    $0x4,%edi
    beb5:	e8 0f 91 ff ff       	call   4fc9 <_ZnwmPv>
    beba:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    bec0:	90                   	nop
    bec1:	c9                   	leave
    bec2:	c3                   	ret

000000000000bec3 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bec3:	55                   	push   %rbp
    bec4:	48 89 e5             	mov    %rsp,%rbp
    bec7:	48 83 ec 20          	sub    $0x20,%rsp
    becb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    becf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bed3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bed7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bedb:	48 89 c7             	mov    %rax,%rdi
    bede:	e8 2e 04 00 00       	call   c311 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bee3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bee7:	48 89 c7             	mov    %rax,%rdi
    beea:	e8 ec 90 ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    beef:	48 89 c1             	mov    %rax,%rcx
    bef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bef6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    befa:	48 89 ce             	mov    %rcx,%rsi
    befd:	48 89 c7             	mov    %rax,%rdi
    bf00:	e8 17 04 00 00       	call   c31c <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bf05:	c9                   	leave
    bf06:	c3                   	ret
    bf07:	90                   	nop

000000000000bf08 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bf08:	55                   	push   %rbp
    bf09:	48 89 e5             	mov    %rsp,%rbp
    bf0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bf10:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bf17:	ff ff 0f 
      }
    bf1a:	5d                   	pop    %rbp
    bf1b:	c3                   	ret

000000000000bf1c <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bf1c:	55                   	push   %rbp
    bf1d:	48 89 e5             	mov    %rsp,%rbp
    bf20:	48 83 ec 20          	sub    $0x20,%rsp
    bf24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bf30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf34:	48 89 c7             	mov    %rax,%rdi
    bf37:	e8 cc ff ff ff       	call   bf08 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    bf3c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bf40:	0f 92 c0             	setb   %al
    bf43:	0f b6 c0             	movzbl %al,%eax
    bf46:	48 85 c0             	test   %rax,%rax
    bf49:	0f 95 c0             	setne  %al
    bf4c:	84 c0                	test   %al,%al
    bf4e:	74 1a                	je     bf6a <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bf50:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bf57:	ff ff 1f 
    bf5a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bf5e:	73 05                	jae    bf65 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bf60:	e8 1b 83 ff ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bf65:	e8 86 81 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bf6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf6e:	48 c1 e0 03          	shl    $0x3,%rax
    bf72:	48 89 c7             	mov    %rax,%rdi
    bf75:	e8 26 84 ff ff       	call   43a0 <_Znwm@plt>
    bf7a:	90                   	nop
      }
    bf7b:	c9                   	leave
    bf7c:	c3                   	ret

000000000000bf7d <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bf7d:	55                   	push   %rbp
    bf7e:	48 89 e5             	mov    %rsp,%rbp
    bf81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bf85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf89:	5d                   	pop    %rbp
    bf8a:	c3                   	ret

000000000000bf8b <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bf8b:	55                   	push   %rbp
    bf8c:	48 89 e5             	mov    %rsp,%rbp
    bf8f:	48 83 ec 10          	sub    $0x10,%rsp
    bf93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bf97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf9b:	48 89 c6             	mov    %rax,%rsi
    bf9e:	bf 08 00 00 00       	mov    $0x8,%edi
    bfa3:	e8 21 90 ff ff       	call   4fc9 <_ZnwmPv>
    bfa8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bfaf:	90                   	nop
    bfb0:	c9                   	leave
    bfb1:	c3                   	ret

000000000000bfb2 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bfb2:	55                   	push   %rbp
    bfb3:	48 89 e5             	mov    %rsp,%rbp
    bfb6:	48 83 ec 20          	sub    $0x20,%rsp
    bfba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bfc2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bfc6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bfca:	48 89 c7             	mov    %rax,%rdi
    bfcd:	e8 a7 03 00 00       	call   c379 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bfd2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfd6:	48 89 c7             	mov    %rax,%rdi
    bfd9:	e8 fd 8f ff ff       	call   4fdb <_ZSt17__size_to_integerm>
    bfde:	48 89 c1             	mov    %rax,%rcx
    bfe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfe9:	48 89 ce             	mov    %rcx,%rsi
    bfec:	48 89 c7             	mov    %rax,%rdi
    bfef:	e8 90 03 00 00       	call   c384 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bff4:	c9                   	leave
    bff5:	c3                   	ret

000000000000bff6 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bff6:	55                   	push   %rbp
    bff7:	48 89 e5             	mov    %rsp,%rbp
    bffa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bffe:	90                   	nop
    bfff:	5d                   	pop    %rbp
    c000:	c3                   	ret

000000000000c001 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c001:	55                   	push   %rbp
    c002:	48 89 e5             	mov    %rsp,%rbp
    c005:	48 83 ec 20          	sub    $0x20,%rsp
    c009:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c00d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c011:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c015:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c01a:	75 06                	jne    c022 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c01c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c020:	eb 4c                	jmp    c06e <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    c022:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c026:	48 89 d0             	mov    %rdx,%rax
    c029:	48 c1 e0 06          	shl    $0x6,%rax
    c02d:	48 01 d0             	add    %rdx,%rax
    c030:	48 c1 e0 03          	shl    $0x3,%rax
    c034:	48 89 c2             	mov    %rax,%rdx
    c037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c03b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c03f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c047:	48 89 ce             	mov    %rcx,%rsi
    c04a:	48 89 c7             	mov    %rax,%rdi
    c04d:	e8 8f 03 00 00       	call   c3e1 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c052:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c056:	48 89 d0             	mov    %rdx,%rax
    c059:	48 c1 e0 06          	shl    $0x6,%rax
    c05d:	48 01 d0             	add    %rdx,%rax
    c060:	48 c1 e0 03          	shl    $0x3,%rax
    c064:	48 89 c2             	mov    %rax,%rdx
    c067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c06b:	48 01 d0             	add    %rdx,%rax
    }
    c06e:	c9                   	leave
    c06f:	c3                   	ret

000000000000c070 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c070:	55                   	push   %rbp
    c071:	48 89 e5             	mov    %rsp,%rbp
    c074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c078:	90                   	nop
    c079:	5d                   	pop    %rbp
    c07a:	c3                   	ret

000000000000c07b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c07b:	55                   	push   %rbp
    c07c:	48 89 e5             	mov    %rsp,%rbp
    c07f:	48 83 ec 20          	sub    $0x20,%rsp
    c083:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c087:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c08b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c08f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c094:	75 06                	jne    c09c <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c09a:	eb 4c                	jmp    c0e8 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    c09c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c0a0:	48 89 d0             	mov    %rdx,%rax
    c0a3:	48 c1 e0 06          	shl    $0x6,%rax
    c0a7:	48 01 d0             	add    %rdx,%rax
    c0aa:	48 c1 e0 02          	shl    $0x2,%rax
    c0ae:	48 89 c2             	mov    %rax,%rdx
    c0b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0b5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c0b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0c1:	48 89 ce             	mov    %rcx,%rsi
    c0c4:	48 89 c7             	mov    %rax,%rdi
    c0c7:	e8 43 03 00 00       	call   c40f <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c0cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c0d0:	48 89 d0             	mov    %rdx,%rax
    c0d3:	48 c1 e0 06          	shl    $0x6,%rax
    c0d7:	48 01 d0             	add    %rdx,%rax
    c0da:	48 c1 e0 02          	shl    $0x2,%rax
    c0de:	48 89 c2             	mov    %rax,%rdx
    c0e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0e5:	48 01 d0             	add    %rdx,%rax
    }
    c0e8:	c9                   	leave
    c0e9:	c3                   	ret

000000000000c0ea <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c0ea:	55                   	push   %rbp
    c0eb:	48 89 e5             	mov    %rsp,%rbp
    c0ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c0f2:	90                   	nop
    c0f3:	5d                   	pop    %rbp
    c0f4:	c3                   	ret

000000000000c0f5 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c0f5:	55                   	push   %rbp
    c0f6:	48 89 e5             	mov    %rsp,%rbp
    c0f9:	48 83 ec 20          	sub    $0x20,%rsp
    c0fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c101:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c105:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c109:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c10e:	75 06                	jne    c116 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c114:	eb 3a                	jmp    c150 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c116:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c11a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c121:	00 
    c122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c126:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c12a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c132:	48 89 ce             	mov    %rcx,%rsi
    c135:	48 89 c7             	mov    %rax,%rdi
    c138:	e8 00 03 00 00       	call   c43d <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    c13d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c141:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c148:	00 
    c149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c14d:	48 01 d0             	add    %rdx,%rax
    }
    c150:	c9                   	leave
    c151:	c3                   	ret

000000000000c152 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c152:	55                   	push   %rbp
    c153:	48 89 e5             	mov    %rsp,%rbp
    c156:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c15a:	90                   	nop
    c15b:	5d                   	pop    %rbp
    c15c:	c3                   	ret

000000000000c15d <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c15d:	55                   	push   %rbp
    c15e:	48 89 e5             	mov    %rsp,%rbp
    c161:	48 83 ec 20          	sub    $0x20,%rsp
    c165:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c169:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c16d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c171:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c176:	75 06                	jne    c17e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c17c:	eb 3a                	jmp    c1b8 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c17e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c182:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c189:	00 
    c18a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c18e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c192:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c19a:	48 89 ce             	mov    %rcx,%rsi
    c19d:	48 89 c7             	mov    %rax,%rdi
    c1a0:	e8 c6 02 00 00       	call   c46b <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c1a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1a9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c1b0:	00 
    c1b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1b5:	48 01 d0             	add    %rdx,%rax
    }
    c1b8:	c9                   	leave
    c1b9:	c3                   	ret

000000000000c1ba <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c1ba:	55                   	push   %rbp
    c1bb:	48 89 e5             	mov    %rsp,%rbp
    c1be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c1c2:	90                   	nop
    c1c3:	5d                   	pop    %rbp
    c1c4:	c3                   	ret

000000000000c1c5 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c1c5:	55                   	push   %rbp
    c1c6:	48 89 e5             	mov    %rsp,%rbp
    c1c9:	48 83 ec 20          	sub    $0x20,%rsp
    c1cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c1d9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c1de:	75 06                	jne    c1e6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c1e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1e4:	eb 4a                	jmp    c230 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    c1e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c1ea:	48 89 d0             	mov    %rdx,%rax
    c1ed:	48 01 c0             	add    %rax,%rax
    c1f0:	48 01 d0             	add    %rdx,%rax
    c1f3:	48 c1 e0 03          	shl    $0x3,%rax
    c1f7:	48 89 c2             	mov    %rax,%rdx
    c1fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1fe:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c202:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c20a:	48 89 ce             	mov    %rcx,%rsi
    c20d:	48 89 c7             	mov    %rax,%rdi
    c210:	e8 84 02 00 00       	call   c499 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c215:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c219:	48 89 d0             	mov    %rdx,%rax
    c21c:	48 01 c0             	add    %rax,%rax
    c21f:	48 01 d0             	add    %rdx,%rax
    c222:	48 c1 e0 03          	shl    $0x3,%rax
    c226:	48 89 c2             	mov    %rax,%rdx
    c229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c22d:	48 01 d0             	add    %rdx,%rax
    }
    c230:	c9                   	leave
    c231:	c3                   	ret

000000000000c232 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    c232:	55                   	push   %rbp
    c233:	48 89 e5             	mov    %rsp,%rbp
    c236:	48 83 ec 10          	sub    $0x10,%rsp
    c23a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c23e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c242:	48 89 c7             	mov    %rax,%rdi
    c245:	e8 7e 02 00 00       	call   c4c8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    c24a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c24e:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    c252:	90                   	nop
    c253:	c9                   	leave
    c254:	c3                   	ret
    c255:	90                   	nop

000000000000c256 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    c256:	55                   	push   %rbp
    c257:	48 89 e5             	mov    %rsp,%rbp
    c25a:	48 83 ec 10          	sub    $0x10,%rsp
    c25e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c266:	48 89 c7             	mov    %rax,%rdi
    c269:	e8 c4 ff ff ff       	call   c232 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    c26e:	90                   	nop
    c26f:	c9                   	leave
    c270:	c3                   	ret
    c271:	90                   	nop

000000000000c272 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    c272:	55                   	push   %rbp
    c273:	48 89 e5             	mov    %rsp,%rbp
    c276:	48 83 ec 10          	sub    $0x10,%rsp
    c27a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c27e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c282:	48 89 c7             	mov    %rax,%rdi
    c285:	e8 cc ff ff ff       	call   c256 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    c28a:	90                   	nop
    c28b:	c9                   	leave
    c28c:	c3                   	ret
    c28d:	90                   	nop

000000000000c28e <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    c28e:	55                   	push   %rbp
    c28f:	48 89 e5             	mov    %rsp,%rbp
    c292:	48 83 ec 10          	sub    $0x10,%rsp
    c296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c29a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c29e:	48 89 c7             	mov    %rax,%rdi
    c2a1:	e8 cc ff ff ff       	call   c272 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    c2a6:	90                   	nop
    c2a7:	c9                   	leave
    c2a8:	c3                   	ret

000000000000c2a9 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c2a9:	55                   	push   %rbp
    c2aa:	48 89 e5             	mov    %rsp,%rbp
    c2ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c2b1:	90                   	nop
    c2b2:	5d                   	pop    %rbp
    c2b3:	c3                   	ret

000000000000c2b4 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c2b4:	55                   	push   %rbp
    c2b5:	48 89 e5             	mov    %rsp,%rbp
    c2b8:	48 83 ec 20          	sub    $0x20,%rsp
    c2bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c2c8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c2cd:	75 06                	jne    c2d5 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c2cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2d3:	eb 3a                	jmp    c30f <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c2d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c2d9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c2e0:	00 
    c2e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2e5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c2e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2f1:	48 89 ce             	mov    %rcx,%rsi
    c2f4:	48 89 c7             	mov    %rax,%rdi
    c2f7:	e8 d7 01 00 00       	call   c4d3 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c2fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c300:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c307:	00 
    c308:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c30c:	48 01 d0             	add    %rdx,%rax
    }
    c30f:	c9                   	leave
    c310:	c3                   	ret

000000000000c311 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c311:	55                   	push   %rbp
    c312:	48 89 e5             	mov    %rsp,%rbp
    c315:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c319:	90                   	nop
    c31a:	5d                   	pop    %rbp
    c31b:	c3                   	ret

000000000000c31c <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c31c:	55                   	push   %rbp
    c31d:	48 89 e5             	mov    %rsp,%rbp
    c320:	48 83 ec 20          	sub    $0x20,%rsp
    c324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c328:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c32c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c330:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c335:	75 06                	jne    c33d <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c33b:	eb 3a                	jmp    c377 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c33d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c341:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c348:	00 
    c349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c34d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c351:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c359:	48 89 ce             	mov    %rcx,%rsi
    c35c:	48 89 c7             	mov    %rax,%rdi
    c35f:	e8 9d 01 00 00       	call   c501 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c364:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c368:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c36f:	00 
    c370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c374:	48 01 d0             	add    %rdx,%rax
    }
    c377:	c9                   	leave
    c378:	c3                   	ret

000000000000c379 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c379:	55                   	push   %rbp
    c37a:	48 89 e5             	mov    %rsp,%rbp
    c37d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c381:	90                   	nop
    c382:	5d                   	pop    %rbp
    c383:	c3                   	ret

000000000000c384 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c384:	55                   	push   %rbp
    c385:	48 89 e5             	mov    %rsp,%rbp
    c388:	48 83 ec 20          	sub    $0x20,%rsp
    c38c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c390:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c394:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c398:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c39d:	75 06                	jne    c3a5 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c39f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3a3:	eb 3a                	jmp    c3df <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c3a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c3a9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3b0:	00 
    c3b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3b5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c3b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c3bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3c1:	48 89 ce             	mov    %rcx,%rsi
    c3c4:	48 89 c7             	mov    %rax,%rdi
    c3c7:	e8 63 01 00 00       	call   c52f <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c3cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c3d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3d7:	00 
    c3d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3dc:	48 01 d0             	add    %rdx,%rax
    }
    c3df:	c9                   	leave
    c3e0:	c3                   	ret

000000000000c3e1 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c3e1:	55                   	push   %rbp
    c3e2:	48 89 e5             	mov    %rsp,%rbp
    c3e5:	48 83 ec 20          	sub    $0x20,%rsp
    c3e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c3f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c3f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c401:	48 89 ce             	mov    %rcx,%rsi
    c404:	48 89 c7             	mov    %rax,%rdi
    c407:	e8 51 01 00 00       	call   c55d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c40c:	90                   	nop
    c40d:	c9                   	leave
    c40e:	c3                   	ret

000000000000c40f <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c40f:	55                   	push   %rbp
    c410:	48 89 e5             	mov    %rsp,%rbp
    c413:	48 83 ec 20          	sub    $0x20,%rsp
    c417:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c41b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c41f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c423:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c427:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c42b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c42f:	48 89 ce             	mov    %rcx,%rsi
    c432:	48 89 c7             	mov    %rax,%rdi
    c435:	e8 9b 01 00 00       	call   c5d5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c43a:	90                   	nop
    c43b:	c9                   	leave
    c43c:	c3                   	ret

000000000000c43d <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c43d:	55                   	push   %rbp
    c43e:	48 89 e5             	mov    %rsp,%rbp
    c441:	48 83 ec 20          	sub    $0x20,%rsp
    c445:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c449:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c44d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c451:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c455:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c459:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c45d:	48 89 ce             	mov    %rcx,%rsi
    c460:	48 89 c7             	mov    %rax,%rdi
    c463:	e8 e5 01 00 00       	call   c64d <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c468:	90                   	nop
    c469:	c9                   	leave
    c46a:	c3                   	ret

000000000000c46b <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c46b:	55                   	push   %rbp
    c46c:	48 89 e5             	mov    %rsp,%rbp
    c46f:	48 83 ec 20          	sub    $0x20,%rsp
    c473:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c477:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c47b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c47f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c483:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c48b:	48 89 ce             	mov    %rcx,%rsi
    c48e:	48 89 c7             	mov    %rax,%rdi
    c491:	e8 f2 01 00 00       	call   c688 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c496:	90                   	nop
    c497:	c9                   	leave
    c498:	c3                   	ret

000000000000c499 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c499:	55                   	push   %rbp
    c49a:	48 89 e5             	mov    %rsp,%rbp
    c49d:	48 83 ec 20          	sub    $0x20,%rsp
    c4a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4a9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c4ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c4b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c4b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4b9:	48 89 ce             	mov    %rcx,%rsi
    c4bc:	48 89 c7             	mov    %rax,%rdi
    c4bf:	e8 ff 01 00 00       	call   c6c3 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c4c4:	90                   	nop
    c4c5:	c9                   	leave
    c4c6:	c3                   	ret
    c4c7:	90                   	nop

000000000000c4c8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c4c8:	55                   	push   %rbp
    c4c9:	48 89 e5             	mov    %rsp,%rbp
    c4cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4d0:	90                   	nop
    c4d1:	5d                   	pop    %rbp
    c4d2:	c3                   	ret

000000000000c4d3 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c4d3:	55                   	push   %rbp
    c4d4:	48 89 e5             	mov    %rsp,%rbp
    c4d7:	48 83 ec 20          	sub    $0x20,%rsp
    c4db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c4e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c4eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c4ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4f3:	48 89 ce             	mov    %rcx,%rsi
    c4f6:	48 89 c7             	mov    %rax,%rdi
    c4f9:	e8 08 02 00 00       	call   c706 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c4fe:	90                   	nop
    c4ff:	c9                   	leave
    c500:	c3                   	ret

000000000000c501 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c501:	55                   	push   %rbp
    c502:	48 89 e5             	mov    %rsp,%rbp
    c505:	48 83 ec 20          	sub    $0x20,%rsp
    c509:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c50d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c511:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c515:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c519:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c51d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c521:	48 89 ce             	mov    %rcx,%rsi
    c524:	48 89 c7             	mov    %rax,%rdi
    c527:	e8 0d 02 00 00       	call   c739 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c52c:	90                   	nop
    c52d:	c9                   	leave
    c52e:	c3                   	ret

000000000000c52f <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c52f:	55                   	push   %rbp
    c530:	48 89 e5             	mov    %rsp,%rbp
    c533:	48 83 ec 20          	sub    $0x20,%rsp
    c537:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c53b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c53f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c543:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c547:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c54b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c54f:	48 89 ce             	mov    %rcx,%rsi
    c552:	48 89 c7             	mov    %rax,%rdi
    c555:	e8 10 02 00 00       	call   c76a <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c55a:	90                   	nop
    c55b:	c9                   	leave
    c55c:	c3                   	ret

000000000000c55d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c55d:	55                   	push   %rbp
    c55e:	48 89 e5             	mov    %rsp,%rbp
    c561:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c565:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c569:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c56d:	eb 58                	jmp    c5c7 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c56f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c573:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c577:	b9 08 02 00 00       	mov    $0x208,%ecx
    c57c:	48 8b 32             	mov    (%rdx),%rsi
    c57f:	48 89 30             	mov    %rsi,(%rax)
    c582:	89 ce                	mov    %ecx,%esi
    c584:	48 01 c6             	add    %rax,%rsi
    c587:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c58b:	89 ce                	mov    %ecx,%esi
    c58d:	48 01 d6             	add    %rdx,%rsi
    c590:	48 83 c6 08          	add    $0x8,%rsi
    c594:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c598:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c59c:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c5a0:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c5a4:	48 29 f8             	sub    %rdi,%rax
    c5a7:	48 29 c2             	sub    %rax,%rdx
    c5aa:	01 c1                	add    %eax,%ecx
    c5ac:	83 e1 f8             	and    $0xfffffff8,%ecx
    c5af:	89 c8                	mov    %ecx,%eax
    c5b1:	c1 e8 03             	shr    $0x3,%eax
    c5b4:	89 c0                	mov    %eax,%eax
    c5b6:	48 89 d6             	mov    %rdx,%rsi
    c5b9:	48 89 c1             	mov    %rax,%rcx
    c5bc:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c5bf:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c5c6:	00 
    c5c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5cb:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c5cf:	75 9e                	jne    c56f <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c5d1:	90                   	nop
    c5d2:	90                   	nop
    c5d3:	5d                   	pop    %rbp
    c5d4:	c3                   	ret

000000000000c5d5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c5d5:	55                   	push   %rbp
    c5d6:	48 89 e5             	mov    %rsp,%rbp
    c5d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c5e5:	eb 58                	jmp    c63f <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c5e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c5ef:	b9 04 01 00 00       	mov    $0x104,%ecx
    c5f4:	48 8b 32             	mov    (%rdx),%rsi
    c5f7:	48 89 30             	mov    %rsi,(%rax)
    c5fa:	89 ce                	mov    %ecx,%esi
    c5fc:	48 01 c6             	add    %rax,%rsi
    c5ff:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c603:	89 ce                	mov    %ecx,%esi
    c605:	48 01 d6             	add    %rdx,%rsi
    c608:	48 83 c6 08          	add    $0x8,%rsi
    c60c:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c610:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c614:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c618:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c61c:	48 29 f8             	sub    %rdi,%rax
    c61f:	48 29 c2             	sub    %rax,%rdx
    c622:	01 c1                	add    %eax,%ecx
    c624:	83 e1 f8             	and    $0xfffffff8,%ecx
    c627:	89 c8                	mov    %ecx,%eax
    c629:	c1 e8 03             	shr    $0x3,%eax
    c62c:	89 c0                	mov    %eax,%eax
    c62e:	48 89 d6             	mov    %rdx,%rsi
    c631:	48 89 c1             	mov    %rax,%rcx
    c634:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c637:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c63e:	00 
    c63f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c643:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c647:	75 9e                	jne    c5e7 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c649:	90                   	nop
    c64a:	90                   	nop
    c64b:	5d                   	pop    %rbp
    c64c:	c3                   	ret

000000000000c64d <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c64d:	55                   	push   %rbp
    c64e:	48 89 e5             	mov    %rsp,%rbp
    c651:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c655:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c659:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c65d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c661:	48 8b 00             	mov    (%rax),%rax
    c664:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c668:	eb 10                	jmp    c67a <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c66a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c66e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c672:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c675:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c67a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c67e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c682:	75 e6                	jne    c66a <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c684:	90                   	nop
    c685:	90                   	nop
    c686:	5d                   	pop    %rbp
    c687:	c3                   	ret

000000000000c688 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c688:	55                   	push   %rbp
    c689:	48 89 e5             	mov    %rsp,%rbp
    c68c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c690:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c694:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c698:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c69c:	48 8b 00             	mov    (%rax),%rax
    c69f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c6a3:	eb 10                	jmp    c6b5 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c6a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c6ad:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c6b0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c6b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6b9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c6bd:	75 e6                	jne    c6a5 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c6bf:	90                   	nop
    c6c0:	90                   	nop
    c6c1:	5d                   	pop    %rbp
    c6c2:	c3                   	ret

000000000000c6c3 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c6c3:	55                   	push   %rbp
    c6c4:	48 89 e5             	mov    %rsp,%rbp
    c6c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c6d3:	eb 23                	jmp    c6f8 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c6d5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c6d9:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c6dd:	48 8b 06             	mov    (%rsi),%rax
    c6e0:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c6e4:	48 89 01             	mov    %rax,(%rcx)
    c6e7:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c6eb:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c6ef:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c6f3:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c6f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6fc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c700:	75 d3                	jne    c6d5 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c702:	90                   	nop
    c703:	90                   	nop
    c704:	5d                   	pop    %rbp
    c705:	c3                   	ret

000000000000c706 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c706:	55                   	push   %rbp
    c707:	48 89 e5             	mov    %rsp,%rbp
    c70a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c70e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c712:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c716:	eb 13                	jmp    c72b <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c720:	48 8b 12             	mov    (%rdx),%rdx
    c723:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c726:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c72b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c72f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c733:	75 e3                	jne    c718 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c735:	90                   	nop
    c736:	90                   	nop
    c737:	5d                   	pop    %rbp
    c738:	c3                   	ret

000000000000c739 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c739:	55                   	push   %rbp
    c73a:	48 89 e5             	mov    %rsp,%rbp
    c73d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c741:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c745:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c749:	eb 11                	jmp    c75c <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c74b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c74f:	8b 10                	mov    (%rax),%edx
    c751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c755:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c757:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c760:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c764:	75 e5                	jne    c74b <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c766:	90                   	nop
    c767:	90                   	nop
    c768:	5d                   	pop    %rbp
    c769:	c3                   	ret

000000000000c76a <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c76a:	55                   	push   %rbp
    c76b:	48 89 e5             	mov    %rsp,%rbp
    c76e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c772:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c776:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c77a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c77e:	48 8b 00             	mov    (%rax),%rax
    c781:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c785:	eb 10                	jmp    c797 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c787:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c78b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c78f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c792:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c797:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c79b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c79f:	75 e6                	jne    c787 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c7a1:	90                   	nop
    c7a2:	90                   	nop
    c7a3:	5d                   	pop    %rbp
    c7a4:	c3                   	ret

000000000000c7a5 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c7a5:	55                   	push   %rbp
    c7a6:	48 89 e5             	mov    %rsp,%rbp
    c7a9:	53                   	push   %rbx
    c7aa:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c7ae:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c7b2:	be 00 00 00 00       	mov    $0x0,%esi
    c7b7:	48 89 c7             	mov    %rax,%rdi
    c7ba:	e8 d1 7c ff ff       	call   4490 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c7bf:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c7c2:	89 c3                	mov    %eax,%ebx
    c7c4:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c7c8:	48 89 c7             	mov    %rax,%rdi
    c7cb:	e8 ea b6 ff ff       	call   7eba <_ZNSaI17VkLayerPropertiesEC1Ev>
    c7d0:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    c7d4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c7d8:	48 89 de             	mov    %rbx,%rsi
    c7db:	48 89 c7             	mov    %rax,%rdi
    c7de:	e8 0f b7 ff ff       	call   7ef2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    c7e3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c7e7:	48 89 c7             	mov    %rax,%rdi
    c7ea:	e8 e7 b6 ff ff       	call   7ed6 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    c7ef:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c7f3:	48 89 c7             	mov    %rax,%rdi
    c7f6:	e8 b1 b7 ff ff       	call   7fac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    c7fb:	48 89 c2             	mov    %rax,%rdx
    c7fe:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c802:	48 89 d6             	mov    %rdx,%rsi
    c805:	48 89 c7             	mov    %rax,%rdi
    c808:	e8 83 7c ff ff       	call   4490 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    c80d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c811:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c815:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c819:	48 89 c7             	mov    %rax,%rdi
    c81c:	e8 63 04 00 00       	call   cc84 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    c821:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c825:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c829:	48 89 c7             	mov    %rax,%rdi
    c82c:	e8 79 04 00 00       	call   ccaa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    c831:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c835:	eb 5b                	jmp    c892 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    c837:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c83b:	48 89 c7             	mov    %rax,%rdi
    c83e:	e8 ef 04 00 00       	call   cd32 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    c843:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    c847:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c84b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c84f:	48 89 d6             	mov    %rdx,%rsi
    c852:	48 89 c7             	mov    %rax,%rdi
    c855:	e8 f8 03 00 00       	call   cc52 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    c85a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c85e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c862:	48 8b 3d 37 b4 01 00 	mov    0x1b437(%rip),%rdi        # 27ca0 <_ZN3vkh19validationLayerNameE>
    c869:	48 8b 35 38 b4 01 00 	mov    0x1b438(%rip),%rsi        # 27ca8 <_ZN3vkh19validationLayerNameE+0x8>
    c870:	48 89 d1             	mov    %rdx,%rcx
    c873:	48 89 c2             	mov    %rax,%rdx
    c876:	e8 da 04 00 00       	call   cd55 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    c87b:	84 c0                	test   %al,%al
    c87d:	74 07                	je     c886 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    c87f:	bb 01 00 00 00       	mov    $0x1,%ebx
    c884:	eb 28                	jmp    c8ae <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    c886:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c88a:	48 89 c7             	mov    %rax,%rdi
    c88d:	e8 7c 04 00 00       	call   cd0e <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    c892:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    c896:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c89a:	48 89 d6             	mov    %rdx,%rsi
    c89d:	48 89 c7             	mov    %rax,%rdi
    c8a0:	e8 2e 04 00 00       	call   ccd3 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    c8a5:	84 c0                	test   %al,%al
    c8a7:	75 8e                	jne    c837 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    c8a9:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    c8ae:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c8b2:	48 89 c7             	mov    %rax,%rdi
    c8b5:	e8 ae b6 ff ff       	call   7f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c8ba:	89 d8                	mov    %ebx,%eax
    c8bc:	eb 34                	jmp    c8f2 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c8be:	48 89 c3             	mov    %rax,%rbx
    c8c1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c8c5:	48 89 c7             	mov    %rax,%rdi
    c8c8:	e8 09 b6 ff ff       	call   7ed6 <_ZNSaI17VkLayerPropertiesED1Ev>
    c8cd:	48 89 d8             	mov    %rbx,%rax
    c8d0:	48 89 c7             	mov    %rax,%rdi
    c8d3:	e8 58 7e ff ff       	call   4730 <_Unwind_Resume@plt>
}
    c8d8:	48 89 c3             	mov    %rax,%rbx
    c8db:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c8df:	48 89 c7             	mov    %rax,%rdi
    c8e2:	e8 81 b6 ff ff       	call   7f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c8e7:	48 89 d8             	mov    %rbx,%rax
    c8ea:	48 89 c7             	mov    %rax,%rdi
    c8ed:	e8 3e 7e ff ff       	call   4730 <_Unwind_Resume@plt>
    c8f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c8f6:	c9                   	leave
    c8f7:	c3                   	ret

000000000000c8f8 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    c8f8:	55                   	push   %rbp
    c8f9:	48 89 e5             	mov    %rsp,%rbp
    c8fc:	48 83 ec 20          	sub    $0x20,%rsp
    c900:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c903:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c906:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    c90a:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    c90e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c911:	83 f8 01             	cmp    $0x1,%eax
    c914:	7e 3c                	jle    c952 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    c916:	be 0a 00 00 00       	mov    $0xa,%esi
    c91b:	48 8d 05 fe bb 01 00 	lea    0x1bbfe(%rip),%rax        # 28520 <_ZSt4cerr@GLIBCXX_3.4>
    c922:	48 89 c7             	mov    %rax,%rdi
    c925:	e8 86 7b ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    c92a:	48 89 c2             	mov    %rax,%rdx
    c92d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c931:	48 8b 40 28          	mov    0x28(%rax),%rax
    c935:	48 89 c6             	mov    %rax,%rsi
    c938:	48 89 d7             	mov    %rdx,%rdi
    c93b:	e8 50 7a ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c940:	48 8b 15 51 b6 01 00 	mov    0x1b651(%rip),%rdx        # 27f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    c947:	48 89 d6             	mov    %rdx,%rsi
    c94a:	48 89 c7             	mov    %rax,%rdi
    c94d:	e8 be 7a ff ff       	call   4410 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    c952:	b8 00 00 00 00       	mov    $0x0,%eax
}
    c957:	c9                   	leave
    c958:	c3                   	ret

000000000000c959 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    c959:	55                   	push   %rbp
    c95a:	48 89 e5             	mov    %rsp,%rbp
    c95d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    c961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c965:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c969:	0f 11 00             	movups %xmm0,(%rax)
    c96c:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    c970:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    c974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c978:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    c97e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c982:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    c989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c98d:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    c994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c998:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # c8f8 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    c99f:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    c9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9a7:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c9ae:	00 
}
    c9af:	90                   	nop
    c9b0:	5d                   	pop    %rbp
    c9b1:	c3                   	ret

000000000000c9b2 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    c9b2:	55                   	push   %rbp
    c9b3:	48 89 e5             	mov    %rsp,%rbp
    c9b6:	48 83 ec 30          	sub    $0x30,%rsp
    c9ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9be:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c9c2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c9c6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c9ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9ce:	48 8d 15 5b cd 00 00 	lea    0xcd5b(%rip),%rdx        # 19730 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    c9d5:	48 89 d6             	mov    %rdx,%rsi
    c9d8:	48 89 c7             	mov    %rax,%rdi
    c9db:	e8 80 79 ff ff       	call   4360 <vkGetInstanceProcAddr@plt>
    c9e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    c9e4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c9e9:	75 07                	jne    c9f2 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    c9eb:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    c9f0:	eb 1b                	jmp    ca0d <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    c9f2:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c9f6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c9fa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c9fe:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    ca02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca06:	48 89 c7             	mov    %rax,%rdi
    ca09:	41 ff d0             	call   *%r8
    ca0c:	90                   	nop
}
    ca0d:	c9                   	leave
    ca0e:	c3                   	ret

000000000000ca0f <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    ca0f:	55                   	push   %rbp
    ca10:	48 89 e5             	mov    %rsp,%rbp
    ca13:	41 54                	push   %r12
    ca15:	53                   	push   %rbx
    ca16:	48 83 ec 50          	sub    $0x50,%rsp
    ca1a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    ca1e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ca22:	48 89 c7             	mov    %rax,%rdi
    ca25:	e8 2f ff ff ff       	call   c959 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    ca2a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    ca31:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    ca32:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    ca36:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    ca3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ca3e:	48 89 d1             	mov    %rdx,%rcx
    ca41:	ba 00 00 00 00       	mov    $0x0,%edx
    ca46:	48 89 c7             	mov    %rax,%rdi
    ca49:	e8 64 ff ff ff       	call   c9b2 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    ca4e:	85 c0                	test   %eax,%eax
    ca50:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    ca53:	84 c0                	test   %al,%al
    ca55:	74 3b                	je     ca92 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    ca57:	bf 10 00 00 00       	mov    $0x10,%edi
    ca5c:	e8 1f 77 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    ca61:	48 89 c3             	mov    %rax,%rbx
    ca64:	48 8d 05 e5 cc 00 00 	lea    0xcce5(%rip),%rax        # 19750 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    ca6b:	48 89 c6             	mov    %rax,%rsi
    ca6e:	48 89 df             	mov    %rbx,%rdi
    ca71:	e8 9a 76 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    ca76:	48 8b 05 2b b5 01 00 	mov    0x1b52b(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ca7d:	48 89 c2             	mov    %rax,%rdx
    ca80:	48 8d 05 b9 b2 01 00 	lea    0x1b2b9(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ca87:	48 89 c6             	mov    %rax,%rsi
    ca8a:	48 89 df             	mov    %rbx,%rdi
    ca8d:	e8 3e 7c ff ff       	call   46d0 <__cxa_throw@plt>
  }
  return debugMessenger;
    ca92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ca96:	eb 16                	jmp    caae <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    ca98:	49 89 c4             	mov    %rax,%r12
    ca9b:	48 89 df             	mov    %rbx,%rdi
    ca9e:	e8 ad 77 ff ff       	call   4250 <__cxa_free_exception@plt>
    caa3:	4c 89 e0             	mov    %r12,%rax
    caa6:	48 89 c7             	mov    %rax,%rdi
    caa9:	e8 82 7c ff ff       	call   4730 <_Unwind_Resume@plt>
}
    caae:	48 83 c4 50          	add    $0x50,%rsp
    cab2:	5b                   	pop    %rbx
    cab3:	41 5c                	pop    %r12
    cab5:	5d                   	pop    %rbp
    cab6:	c3                   	ret

000000000000cab7 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    cab7:	55                   	push   %rbp
    cab8:	48 89 e5             	mov    %rsp,%rbp
    cabb:	48 83 ec 30          	sub    $0x30,%rsp
    cabf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cac3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cac7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    cacb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cacf:	48 8d 15 9a cc 00 00 	lea    0xcc9a(%rip),%rdx        # 19770 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    cad6:	48 89 d6             	mov    %rdx,%rsi
    cad9:	48 89 c7             	mov    %rax,%rdi
    cadc:	e8 7f 78 ff ff       	call   4360 <vkGetInstanceProcAddr@plt>
    cae1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    cae5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    caea:	74 19                	je     cb05 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    caec:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    caf0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    caf4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    caf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cafc:	48 89 ce             	mov    %rcx,%rsi
    caff:	48 89 c7             	mov    %rax,%rdi
    cb02:	41 ff d0             	call   *%r8
  }
}
    cb05:	90                   	nop
    cb06:	c9                   	leave
    cb07:	c3                   	ret

000000000000cb08 <_Z41__static_initialization_and_destruction_0ii>:

    cb08:	55                   	push   %rbp
    cb09:	48 89 e5             	mov    %rsp,%rbp
    cb0c:	48 83 ec 10          	sub    $0x10,%rsp
    cb10:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cb13:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cb16:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cb1a:	75 3b                	jne    cb57 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cb1c:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cb23:	75 32                	jne    cb57 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cb25:	48 8d 05 06 bb 01 00 	lea    0x1bb06(%rip),%rax        # 28632 <_ZStL8__ioinit>
    cb2c:	48 89 c7             	mov    %rax,%rdi
    cb2f:	e8 fc 7a ff ff       	call   4630 <_ZNSt8ios_base4InitC1Ev@plt>
    cb34:	48 8d 05 a5 b8 01 00 	lea    0x1b8a5(%rip),%rax        # 283e0 <__dso_handle>
    cb3b:	48 89 c2             	mov    %rax,%rdx
    cb3e:	48 8d 05 ed ba 01 00 	lea    0x1baed(%rip),%rax        # 28632 <_ZStL8__ioinit>
    cb45:	48 89 c6             	mov    %rax,%rsi
    cb48:	48 8b 05 79 b4 01 00 	mov    0x1b479(%rip),%rax        # 27fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cb4f:	48 89 c7             	mov    %rax,%rdi
    cb52:	e8 c9 77 ff ff       	call   4320 <__cxa_atexit@plt>
    cb57:	90                   	nop
    cb58:	c9                   	leave
    cb59:	c3                   	ret

000000000000cb5a <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    cb5a:	55                   	push   %rbp
    cb5b:	48 89 e5             	mov    %rsp,%rbp
    cb5e:	be ff ff 00 00       	mov    $0xffff,%esi
    cb63:	bf 01 00 00 00       	mov    $0x1,%edi
    cb68:	e8 9b ff ff ff       	call   cb08 <_Z41__static_initialization_and_destruction_0ii>
    cb6d:	5d                   	pop    %rbp
    cb6e:	c3                   	ret

000000000000cb6f <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    cb6f:	55                   	push   %rbp
    cb70:	48 89 e5             	mov    %rsp,%rbp
    cb73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    cb7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb7f:	0f b6 00             	movzbl (%rax),%eax
    cb82:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    cb84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb88:	0f b6 00             	movzbl (%rax),%eax
    cb8b:	38 c2                	cmp    %al,%dl
    cb8d:	0f 92 c0             	setb   %al
      }
    cb90:	5d                   	pop    %rbp
    cb91:	c3                   	ret

000000000000cb92 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    cb92:	55                   	push   %rbp
    cb93:	48 89 e5             	mov    %rsp,%rbp
    cb96:	48 83 ec 30          	sub    $0x30,%rsp
    cb9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb9e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cba2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    cba6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    cbab:	75 0a                	jne    cbb7 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    cbad:	b8 00 00 00 00       	mov    $0x0,%eax
    cbb2:	e9 99 00 00 00       	jmp    cc50 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    cbb7:	e8 22 7f ff ff       	call   4ade <_ZSt23__is_constant_evaluatedv>
    cbbc:	84 c0                	test   %al,%al
    cbbe:	74 78                	je     cc38 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    cbc0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    cbc7:	00 
    cbc8:	eb 5d                	jmp    cc27 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    cbca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cbce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd2:	48 01 c2             	add    %rax,%rdx
    cbd5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    cbd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbdd:	48 01 c8             	add    %rcx,%rax
    cbe0:	48 89 d6             	mov    %rdx,%rsi
    cbe3:	48 89 c7             	mov    %rax,%rdi
    cbe6:	e8 84 ff ff ff       	call   cb6f <_ZNSt11char_traitsIcE2ltERKcS2_>
    cbeb:	84 c0                	test   %al,%al
    cbed:	74 07                	je     cbf6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    cbef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    cbf4:	eb 5a                	jmp    cc50 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    cbf6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cbfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbfe:	48 01 c2             	add    %rax,%rdx
    cc01:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cc05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc09:	48 01 c8             	add    %rcx,%rax
    cc0c:	48 89 d6             	mov    %rdx,%rsi
    cc0f:	48 89 c7             	mov    %rax,%rdi
    cc12:	e8 58 ff ff ff       	call   cb6f <_ZNSt11char_traitsIcE2ltERKcS2_>
    cc17:	84 c0                	test   %al,%al
    cc19:	74 07                	je     cc22 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    cc1b:	b8 01 00 00 00       	mov    $0x1,%eax
    cc20:	eb 2e                	jmp    cc50 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    cc22:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    cc27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc2b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    cc2f:	72 99                	jb     cbca <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    cc31:	b8 00 00 00 00       	mov    $0x0,%eax
    cc36:	eb 18                	jmp    cc50 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    cc38:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cc3c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cc40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc44:	48 89 ce             	mov    %rcx,%rsi
    cc47:	48 89 c7             	mov    %rax,%rdi
    cc4a:	e8 11 75 ff ff       	call   4160 <memcmp@plt>
    cc4f:	90                   	nop
      }
    cc50:	c9                   	leave
    cc51:	c3                   	ret

000000000000cc52 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    cc52:	55                   	push   %rbp
    cc53:	48 89 e5             	mov    %rsp,%rbp
    cc56:	48 83 ec 10          	sub    $0x10,%rsp
    cc5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    cc62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc66:	48 89 c7             	mov    %rax,%rdi
    cc69:	e8 7b 7e ff ff       	call   4ae9 <_ZNSt11char_traitsIcE6lengthEPKc>
    cc6e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc72:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    cc75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc79:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cc7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    cc81:	90                   	nop
    cc82:	c9                   	leave
    cc83:	c3                   	ret

000000000000cc84 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cc84:	55                   	push   %rbp
    cc85:	48 89 e5             	mov    %rsp,%rbp
    cc88:	48 83 ec 20          	sub    $0x20,%rsp
    cc8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    cc90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cc94:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cc98:	48 89 d6             	mov    %rdx,%rsi
    cc9b:	48 89 c7             	mov    %rax,%rdi
    cc9e:	e8 27 01 00 00       	call   cdca <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cca7:	c9                   	leave
    cca8:	c3                   	ret
    cca9:	90                   	nop

000000000000ccaa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ccaa:	55                   	push   %rbp
    ccab:	48 89 e5             	mov    %rsp,%rbp
    ccae:	48 83 ec 20          	sub    $0x20,%rsp
    ccb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ccb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccba:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ccbe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ccc2:	48 89 d6             	mov    %rdx,%rsi
    ccc5:	48 89 c7             	mov    %rax,%rdi
    ccc8:	e8 fd 00 00 00       	call   cdca <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cccd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccd1:	c9                   	leave
    ccd2:	c3                   	ret

000000000000ccd3 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ccd3:	55                   	push   %rbp
    ccd4:	48 89 e5             	mov    %rsp,%rbp
    ccd7:	53                   	push   %rbx
    ccd8:	48 83 ec 18          	sub    $0x18,%rsp
    ccdc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cce0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cce4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cce8:	48 89 c7             	mov    %rax,%rdi
    cceb:	e8 f8 00 00 00       	call   cde8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    ccf0:	48 8b 18             	mov    (%rax),%rbx
    ccf3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ccf7:	48 89 c7             	mov    %rax,%rdi
    ccfa:	e8 e9 00 00 00       	call   cde8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    ccff:	48 8b 00             	mov    (%rax),%rax
    cd02:	48 39 c3             	cmp    %rax,%rbx
    cd05:	0f 95 c0             	setne  %al
    cd08:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cd0c:	c9                   	leave
    cd0d:	c3                   	ret

000000000000cd0e <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cd0e:	55                   	push   %rbp
    cd0f:	48 89 e5             	mov    %rsp,%rbp
    cd12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cd16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd1a:	48 8b 00             	mov    (%rax),%rax
    cd1d:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    cd24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd28:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cd2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cd2f:	5d                   	pop    %rbp
    cd30:	c3                   	ret
    cd31:	90                   	nop

000000000000cd32 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cd32:	55                   	push   %rbp
    cd33:	48 89 e5             	mov    %rsp,%rbp
    cd36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cd3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd3e:	48 8b 00             	mov    (%rax),%rax
    cd41:	5d                   	pop    %rbp
    cd42:	c3                   	ret
    cd43:	90                   	nop

000000000000cd44 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    cd44:	55                   	push   %rbp
    cd45:	48 89 e5             	mov    %rsp,%rbp
    cd48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    cd4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd50:	48 8b 00             	mov    (%rax),%rax
    cd53:	5d                   	pop    %rbp
    cd54:	c3                   	ret

000000000000cd55 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    cd55:	55                   	push   %rbp
    cd56:	48 89 e5             	mov    %rsp,%rbp
    cd59:	53                   	push   %rbx
    cd5a:	48 83 ec 28          	sub    $0x28,%rsp
    cd5e:	48 89 f0             	mov    %rsi,%rax
    cd61:	49 89 f8             	mov    %rdi,%r8
    cd64:	4c 89 c6             	mov    %r8,%rsi
    cd67:	4c 89 cf             	mov    %r9,%rdi
    cd6a:	48 89 c7             	mov    %rax,%rdi
    cd6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cd71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd75:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    cd79:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    cd7d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cd81:	48 89 c7             	mov    %rax,%rdi
    cd84:	e8 bb ff ff ff       	call   cd44 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cd89:	48 89 c3             	mov    %rax,%rbx
    cd8c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cd90:	48 89 c7             	mov    %rax,%rdi
    cd93:	e8 ac ff ff ff       	call   cd44 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cd98:	48 39 c3             	cmp    %rax,%rbx
    cd9b:	75 22                	jne    cdbf <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cd9d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cda1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cda5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cda9:	48 89 ce             	mov    %rcx,%rsi
    cdac:	48 89 c7             	mov    %rax,%rdi
    cdaf:	e8 42 00 00 00       	call   cdf6 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    cdb4:	85 c0                	test   %eax,%eax
    cdb6:	75 07                	jne    cdbf <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cdb8:	b8 01 00 00 00       	mov    $0x1,%eax
    cdbd:	eb 05                	jmp    cdc4 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    cdbf:	b8 00 00 00 00       	mov    $0x0,%eax
    cdc4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cdc8:	c9                   	leave
    cdc9:	c3                   	ret

000000000000cdca <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cdca:	55                   	push   %rbp
    cdcb:	48 89 e5             	mov    %rsp,%rbp
    cdce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cdd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cdda:	48 8b 10             	mov    (%rax),%rdx
    cddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cde1:	48 89 10             	mov    %rdx,(%rax)
    cde4:	90                   	nop
    cde5:	5d                   	pop    %rbp
    cde6:	c3                   	ret
    cde7:	90                   	nop

000000000000cde8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cde8:	55                   	push   %rbp
    cde9:	48 89 e5             	mov    %rsp,%rbp
    cdec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cdf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdf4:	5d                   	pop    %rbp
    cdf5:	c3                   	ret

000000000000cdf6 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    cdf6:	55                   	push   %rbp
    cdf7:	48 89 e5             	mov    %rsp,%rbp
    cdfa:	48 83 ec 30          	sub    $0x30,%rsp
    cdfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ce02:	48 89 d1             	mov    %rdx,%rcx
    ce05:	48 89 f0             	mov    %rsi,%rax
    ce08:	48 89 fa             	mov    %rdi,%rdx
    ce0b:	48 89 ca             	mov    %rcx,%rdx
    ce0e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    ce12:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    ce16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce1a:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    ce1e:	48 89 d6             	mov    %rdx,%rsi
    ce21:	48 89 c7             	mov    %rax,%rdi
    ce24:	e8 6e 86 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
    ce29:	48 8b 00             	mov    (%rax),%rax
    ce2c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    ce30:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    ce34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce38:	48 8b 40 08          	mov    0x8(%rax),%rax
    ce3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce40:	48 89 ce             	mov    %rcx,%rsi
    ce43:	48 89 c7             	mov    %rax,%rdi
    ce46:	e8 47 fd ff ff       	call   cb92 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    ce4b:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    ce4e:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    ce52:	75 19                	jne    ce6d <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    ce54:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ce58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce5c:	48 8b 00             	mov    (%rax),%rax
    ce5f:	48 89 d6             	mov    %rdx,%rsi
    ce62:	48 89 c7             	mov    %rax,%rdi
    ce65:	e8 08 00 00 00       	call   ce72 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    ce6a:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    ce6d:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    ce70:	c9                   	leave
    ce71:	c3                   	ret

000000000000ce72 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    ce72:	55                   	push   %rbp
    ce73:	48 89 e5             	mov    %rsp,%rbp
    ce76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ce7a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    ce7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce82:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    ce86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    ce8a:	b8 00 00 00 80       	mov    $0x80000000,%eax
    ce8f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    ce93:	7c 07                	jl     ce9c <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    ce95:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    ce9a:	eb 1b                	jmp    ceb7 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    ce9c:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    cea3:	ff ff ff 
    cea6:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    ceaa:	7f 07                	jg     ceb3 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    ceac:	b8 00 00 00 80       	mov    $0x80000000,%eax
    ceb1:	eb 04                	jmp    ceb7 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    ceb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ceb7:	5d                   	pop    %rbp
    ceb8:	c3                   	ret

000000000000ceb9 <_Z41__static_initialization_and_destruction_0ii>:
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};

} /* namespace vkh */
    ceb9:	55                   	push   %rbp
    ceba:	48 89 e5             	mov    %rsp,%rbp
    cebd:	48 83 ec 10          	sub    $0x10,%rsp
    cec1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cec4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cec7:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cecb:	75 3b                	jne    cf08 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cecd:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    ced4:	75 32                	jne    cf08 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    ced6:	48 8d 05 56 b7 01 00 	lea    0x1b756(%rip),%rax        # 28633 <_ZStL8__ioinit>
    cedd:	48 89 c7             	mov    %rax,%rdi
    cee0:	e8 4b 77 ff ff       	call   4630 <_ZNSt8ios_base4InitC1Ev@plt>
    cee5:	48 8d 05 f4 b4 01 00 	lea    0x1b4f4(%rip),%rax        # 283e0 <__dso_handle>
    ceec:	48 89 c2             	mov    %rax,%rdx
    ceef:	48 8d 05 3d b7 01 00 	lea    0x1b73d(%rip),%rax        # 28633 <_ZStL8__ioinit>
    cef6:	48 89 c6             	mov    %rax,%rsi
    cef9:	48 8b 05 c8 b0 01 00 	mov    0x1b0c8(%rip),%rax        # 27fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cf00:	48 89 c7             	mov    %rax,%rdi
    cf03:	e8 18 74 ff ff       	call   4320 <__cxa_atexit@plt>
    cf08:	90                   	nop
    cf09:	c9                   	leave
    cf0a:	c3                   	ret

000000000000cf0b <_GLOBAL__sub_I_vkh.cpp>:
    cf0b:	55                   	push   %rbp
    cf0c:	48 89 e5             	mov    %rsp,%rbp
    cf0f:	be ff ff 00 00       	mov    $0xffff,%esi
    cf14:	bf 01 00 00 00       	mov    $0x1,%edi
    cf19:	e8 9b ff ff ff       	call   ceb9 <_Z41__static_initialization_and_destruction_0ii>
    cf1e:	5d                   	pop    %rbp
    cf1f:	c3                   	ret

000000000000cf20 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    cf20:	55                   	push   %rbp
    cf21:	48 89 e5             	mov    %rsp,%rbp
    cf24:	48 83 ec 10          	sub    $0x10,%rsp
    cf28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    cf2c:	e8 6f 75 ff ff       	call   44a0 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    cf31:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    cf37:	b9 00 00 00 00       	mov    $0x0,%ecx
    cf3c:	48 8d 05 2d da 00 00 	lea    0xda2d(%rip),%rax        # 1a970 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cf43:	48 89 c2             	mov    %rax,%rdx
    cf46:	be 58 02 00 00       	mov    $0x258,%esi
    cf4b:	bf 20 03 00 00       	mov    $0x320,%edi
    cf50:	e8 9a 88 ff ff       	call   57ef <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    cf55:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf59:	48 89 02             	mov    %rax,(%rdx)
}
    cf5c:	90                   	nop
    cf5d:	c9                   	leave
    cf5e:	c3                   	ret
    cf5f:	90                   	nop

000000000000cf60 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    cf60:	55                   	push   %rbp
    cf61:	48 89 e5             	mov    %rsp,%rbp
    cf64:	53                   	push   %rbx
    cf65:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    cf6c:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    cf73:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cf77:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    cf7b:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    cf7f:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    cf83:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    cf8a:	48 8d 05 df d9 00 00 	lea    0xd9df(%rip),%rax        # 1a970 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cf91:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    cf95:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    cf9c:	48 8d 05 e0 d9 00 00 	lea    0xd9e0(%rip),%rax        # 1a983 <_ZN6__pstl9execution2v1L5unseqE+0x14>
    cfa3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    cfa7:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    cfae:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    cfb5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cfb9:	48 89 c7             	mov    %rax,%rdi
    cfbc:	e8 17 a1 ff ff       	call   70d8 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    cfc1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cfc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cfc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cfcd:	48 89 c7             	mov    %rax,%rdi
    cfd0:	e8 31 3c 00 00       	call   10c06 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    cfd5:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    cfdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cfe0:	48 89 c7             	mov    %rax,%rdi
    cfe3:	e8 44 3c 00 00       	call   10c2c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    cfe8:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    cfef:	eb 3c                	jmp    d02d <_ZN9VulkanApp14createInstanceEv+0xcd>
    cff1:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cff8:	48 89 c7             	mov    %rax,%rdi
    cffb:	e8 b0 3c 00 00       	call   10cb0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d000:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    d004:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d00b:	48 8d 50 10          	lea    0x10(%rax),%rdx
    d00f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d013:	48 89 c6             	mov    %rax,%rsi
    d016:	48 89 d7             	mov    %rdx,%rdi
    d019:	e8 a4 3c 00 00       	call   10cc2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    d01e:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    d025:	48 89 c7             	mov    %rax,%rdi
    d028:	e8 63 3c 00 00       	call   10c90 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d02d:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    d034:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    d03b:	48 89 d6             	mov    %rdx,%rsi
    d03e:	48 89 c7             	mov    %rax,%rdi
    d041:	e8 0f 3c 00 00       	call   10c55 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d046:	84 c0                	test   %al,%al
    d048:	75 a7                	jne    cff1 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    d04a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d04e:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d055:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d05c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    d060:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d067:	48 89 c7             	mov    %rax,%rdi
    d06a:	e8 ea f8 ff ff       	call   c959 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    d06f:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    d076:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    d079:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d080:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    d087:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d08b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    d092:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d099:	48 83 c0 28          	add    $0x28,%rax
    d09d:	48 89 c7             	mov    %rax,%rdi
    d0a0:	e8 c1 3c 00 00       	call   10d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    d0a5:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    d0ab:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d0b2:	48 83 c0 28          	add    $0x28,%rax
    d0b6:	48 89 c7             	mov    %rax,%rdi
    d0b9:	e8 cc 3c 00 00       	call   10d8a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d0be:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    d0c5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d0cc:	48 83 c0 10          	add    $0x10,%rax
    d0d0:	48 89 c7             	mov    %rax,%rdi
    d0d3:	e8 8e 3c 00 00       	call   10d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    d0d8:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    d0de:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d0e5:	48 83 c0 10          	add    $0x10,%rax
    d0e9:	48 89 c7             	mov    %rax,%rdi
    d0ec:	e8 bd 3c 00 00       	call   10dae <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d0f1:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    d0f8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d0ff:	be 00 00 00 00       	mov    $0x0,%esi
    d104:	48 89 c7             	mov    %rax,%rdi
    d107:	e8 39 87 ff ff       	call   5845 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    d10c:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    d113:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    d117:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d11b:	48 89 c7             	mov    %rax,%rdi
    d11e:	e8 9f 3a 00 00       	call   10bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    d123:	eb 1a                	jmp    d13f <_ZN9VulkanApp14createInstanceEv+0x1df>
    d125:	48 89 c3             	mov    %rax,%rbx
    d128:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d12c:	48 89 c7             	mov    %rax,%rdi
    d12f:	e8 8e 3a 00 00       	call   10bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    d134:	48 89 d8             	mov    %rbx,%rax
    d137:	48 89 c7             	mov    %rax,%rdi
    d13a:	e8 f1 75 ff ff       	call   4730 <_Unwind_Resume@plt>
    d13f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d143:	c9                   	leave
    d144:	c3                   	ret
    d145:	90                   	nop

000000000000d146 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    d146:	55                   	push   %rbp
    d147:	48 89 e5             	mov    %rsp,%rbp
    d14a:	41 54                	push   %r12
    d14c:	53                   	push   %rbx
    d14d:	48 83 ec 10          	sub    $0x10,%rsp
    d151:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    d155:	e8 4b f6 ff ff       	call   c7a5 <_ZN3vkh27checkValidationLayerSupportEv>
    d15a:	0f b6 c0             	movzbl %al,%eax
    d15d:	85 c0                	test   %eax,%eax
    d15f:	0f 94 c0             	sete   %al
    d162:	84 c0                	test   %al,%al
    d164:	74 3b                	je     d1a1 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    d166:	bf 10 00 00 00       	mov    $0x10,%edi
    d16b:	e8 10 70 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    d170:	48 89 c3             	mov    %rax,%rbx
    d173:	48 8d 05 16 d8 00 00 	lea    0xd816(%rip),%rax        # 1a990 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    d17a:	48 89 c6             	mov    %rax,%rsi
    d17d:	48 89 df             	mov    %rbx,%rdi
    d180:	e8 8b 6f ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    d185:	48 8b 05 1c ae 01 00 	mov    0x1ae1c(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d18c:	48 89 c2             	mov    %rax,%rdx
    d18f:	48 8d 05 aa ab 01 00 	lea    0x1abaa(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d196:	48 89 c6             	mov    %rax,%rsi
    d199:	48 89 df             	mov    %rbx,%rdi
    d19c:	e8 2f 75 ff ff       	call   46d0 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    d1a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1a5:	48 8b 40 08          	mov    0x8(%rax),%rax
    d1a9:	48 89 c7             	mov    %rax,%rdi
    d1ac:	e8 5e f8 ff ff       	call   ca0f <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    d1b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1b5:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    d1b9:	eb 16                	jmp    d1d1 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    d1bb:	49 89 c4             	mov    %rax,%r12
    d1be:	48 89 df             	mov    %rbx,%rdi
    d1c1:	e8 8a 70 ff ff       	call   4250 <__cxa_free_exception@plt>
    d1c6:	4c 89 e0             	mov    %r12,%rax
    d1c9:	48 89 c7             	mov    %rax,%rdi
    d1cc:	e8 5f 75 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    d1d1:	48 83 c4 10          	add    $0x10,%rsp
    d1d5:	5b                   	pop    %rbx
    d1d6:	41 5c                	pop    %r12
    d1d8:	5d                   	pop    %rbp
    d1d9:	c3                   	ret

000000000000d1da <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    d1da:	55                   	push   %rbp
    d1db:	48 89 e5             	mov    %rsp,%rbp
    d1de:	48 83 ec 10          	sub    $0x10,%rsp
    d1e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    d1e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1ea:	48 8b 08             	mov    (%rax),%rcx
    d1ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1f1:	48 8b 40 08          	mov    0x8(%rax),%rax
    d1f5:	ba 00 00 00 00       	mov    $0x0,%edx
    d1fa:	48 89 ce             	mov    %rcx,%rsi
    d1fd:	48 89 c7             	mov    %rax,%rdi
    d200:	e8 6b 87 ff ff       	call   5970 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    d205:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d209:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    d20d:	90                   	nop
    d20e:	c9                   	leave
    d20f:	c3                   	ret

000000000000d210 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    d210:	55                   	push   %rbp
    d211:	48 89 e5             	mov    %rsp,%rbp
    d214:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    d21b:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    d222:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    d229:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    d230:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    d237:	48 89 d6             	mov    %rdx,%rsi
    d23a:	48 89 c7             	mov    %rax,%rdi
    d23d:	e8 63 a1 ff ff       	call   73a5 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    d242:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    d248:	83 f8 02             	cmp    $0x2,%eax
    d24b:	0f 94 c0             	sete   %al
}
    d24e:	c9                   	leave
    d24f:	c3                   	ret

000000000000d250 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    d250:	55                   	push   %rbp
    d251:	48 89 e5             	mov    %rsp,%rbp
    d254:	53                   	push   %rbx
    d255:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    d25c:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    d263:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    d26a:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    d271:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d275:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d27c:	48 89 d6             	mov    %rdx,%rsi
    d27f:	48 89 c7             	mov    %rax,%rdi
    d282:	e8 47 a2 ff ff       	call   74ce <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    d287:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d28b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d292:	48 89 d6             	mov    %rdx,%rsi
    d295:	48 89 c7             	mov    %rax,%rdi
    d298:	e8 65 a3 ff ff       	call   7602 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    d29d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d2a4:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d2a8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d2af:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    d2b6:	48 89 ce             	mov    %rcx,%rsi
    d2b9:	48 89 c7             	mov    %rax,%rdi
    d2bc:	e8 7a a4 ff ff       	call   773b <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d2c1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d2c8:	00 
    d2c9:	e9 c5 00 00 00       	jmp    d393 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d2ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d2d2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d2d6:	48 89 d6             	mov    %rdx,%rsi
    d2d9:	48 89 c7             	mov    %rax,%rdi
    d2dc:	e8 7f b4 ff ff       	call   8760 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d2e1:	48 89 c7             	mov    %rax,%rdi
    d2e4:	e8 17 3b 00 00       	call   10e00 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d2e9:	84 c0                	test   %al,%al
    d2eb:	74 48                	je     d335 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d2ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d2f1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d2f5:	48 89 d6             	mov    %rdx,%rsi
    d2f8:	48 89 c7             	mov    %rax,%rdi
    d2fb:	e8 60 b4 ff ff       	call   8760 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d300:	48 89 c7             	mov    %rax,%rdi
    d303:	e8 f8 3a 00 00       	call   10e00 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d308:	84 c0                	test   %al,%al
    d30a:	74 29                	je     d335 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    d30c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d310:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d317:	48 89 d6             	mov    %rdx,%rsi
    d31a:	48 89 c7             	mov    %rax,%rdi
    d31d:	e8 3e b4 ff ff       	call   8760 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d322:	48 89 c7             	mov    %rax,%rdi
    d325:	e8 d6 3a 00 00       	call   10e00 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d32a:	84 c0                	test   %al,%al
    d32c:	74 07                	je     d335 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d32e:	b8 01 00 00 00       	mov    $0x1,%eax
    d333:	eb 05                	jmp    d33a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    d335:	b8 00 00 00 00       	mov    $0x0,%eax
    d33a:	84 c0                	test   %al,%al
    d33c:	74 50                	je     d38e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    d33e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d342:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d345:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d349:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d34d:	48 89 d6             	mov    %rdx,%rsi
    d350:	48 89 c7             	mov    %rax,%rdi
    d353:	e8 08 b4 ff ff       	call   8760 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d358:	48 89 c7             	mov    %rax,%rdi
    d35b:	e8 ba 3a 00 00       	call   10e1a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    d360:	48 89 c2             	mov    %rax,%rdx
    d363:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d367:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d36b:	48 89 ce             	mov    %rcx,%rsi
    d36e:	48 89 c7             	mov    %rax,%rdi
    d371:	e8 d6 3a 00 00       	call   10e4c <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    d376:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d37a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d381:	48 89 d6             	mov    %rdx,%rsi
    d384:	48 89 c7             	mov    %rax,%rdi
    d387:	e8 16 3b 00 00       	call   10ea2 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    d38c:	eb 2f                	jmp    d3bd <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d38e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d393:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d397:	48 89 c7             	mov    %rax,%rdi
    d39a:	e8 33 3a 00 00       	call   10dd2 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    d39f:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d3a3:	0f 92 c0             	setb   %al
    d3a6:	84 c0                	test   %al,%al
    d3a8:	0f 85 20 ff ff ff    	jne    d2ce <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    d3ae:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d3b5:	48 89 c7             	mov    %rax,%rdi
    d3b8:	e8 b5 34 00 00       	call   10872 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    d3bd:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d3c4:	48 89 c7             	mov    %rax,%rdi
    d3c7:	e8 94 b2 ff ff       	call   8660 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d3cc:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d3d0:	48 89 c7             	mov    %rax,%rdi
    d3d3:	e8 88 b2 ff ff       	call   8660 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d3d8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d3dc:	48 89 c7             	mov    %rax,%rdi
    d3df:	e8 7c b2 ff ff       	call   8660 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d3e4:	eb 3f                	jmp    d425 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    d3e6:	48 89 c3             	mov    %rax,%rbx
    d3e9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d3f0:	48 89 c7             	mov    %rax,%rdi
    d3f3:	e8 68 b2 ff ff       	call   8660 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d3f8:	eb 03                	jmp    d3fd <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    d3fa:	48 89 c3             	mov    %rax,%rbx
    d3fd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d401:	48 89 c7             	mov    %rax,%rdi
    d404:	e8 57 b2 ff ff       	call   8660 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d409:	eb 03                	jmp    d40e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    d40b:	48 89 c3             	mov    %rax,%rbx
    d40e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d412:	48 89 c7             	mov    %rax,%rdi
    d415:	e8 46 b2 ff ff       	call   8660 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d41a:	48 89 d8             	mov    %rbx,%rax
    d41d:	48 89 c7             	mov    %rax,%rdi
    d420:	e8 0b 73 ff ff       	call   4730 <_Unwind_Resume@plt>
    d425:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d42c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d430:	c9                   	leave
    d431:	c3                   	ret

000000000000d432 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d432:	55                   	push   %rbp
    d433:	48 89 e5             	mov    %rsp,%rbp
    d436:	41 54                	push   %r12
    d438:	53                   	push   %rbx
    d439:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d440:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d447:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d44e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d452:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d456:	48 89 d6             	mov    %rdx,%rsi
    d459:	48 89 c7             	mov    %rax,%rdi
    d45c:	e8 d5 9d ff ff       	call   7236 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d461:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d468:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d469:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d46d:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d471:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d475:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d479:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d47d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d481:	48 89 c7             	mov    %rax,%rdi
    d484:	e8 4d 3a 00 00       	call   10ed6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d489:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d490:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d494:	48 89 c7             	mov    %rax,%rdi
    d497:	e8 60 3a 00 00       	call   10efc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d49c:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d4a3:	e9 dd 00 00 00       	jmp    d585 <_ZN9VulkanApp12createDeviceEv+0x153>
    d4a8:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d4af:	48 89 c7             	mov    %rax,%rdi
    d4b2:	e8 c9 3a 00 00       	call   10f80 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d4b7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d4bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d4bf:	48 8b 10             	mov    (%rax),%rdx
    d4c2:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4c9:	48 89 d6             	mov    %rdx,%rsi
    d4cc:	48 89 c7             	mov    %rax,%rdi
    d4cf:	e8 3c fd ff ff       	call   d210 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d4d4:	84 c0                	test   %al,%al
    d4d6:	74 41                	je     d519 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d4d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d4dc:	48 8b 10             	mov    (%rax),%rdx
    d4df:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4e6:	48 89 d6             	mov    %rdx,%rsi
    d4e9:	48 89 c7             	mov    %rax,%rdi
    d4ec:	e8 f9 02 00 00       	call   d7ea <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d4f1:	84 c0                	test   %al,%al
    d4f3:	74 24                	je     d519 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d4f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d4f9:	48 8b 10             	mov    (%rax),%rdx
    d4fc:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d503:	48 89 d6             	mov    %rdx,%rsi
    d506:	48 89 c7             	mov    %rax,%rdi
    d509:	e8 16 06 00 00       	call   db24 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d50e:	84 c0                	test   %al,%al
    d510:	74 07                	je     d519 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d512:	b8 01 00 00 00       	mov    $0x1,%eax
    d517:	eb 05                	jmp    d51e <_ZN9VulkanApp12createDeviceEv+0xec>
    d519:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d51e:	84 c0                	test   %al,%al
    d520:	74 54                	je     d576 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d522:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d526:	48 8b 10             	mov    (%rax),%rdx
    d529:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d530:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d537:	48 89 ce             	mov    %rcx,%rsi
    d53a:	48 89 c7             	mov    %rax,%rdi
    d53d:	e8 0e fd ff ff       	call   d250 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d542:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d549:	48 89 c7             	mov    %rax,%rdi
    d54c:	e8 41 3a 00 00       	call   10f92 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d551:	84 c0                	test   %al,%al
    d553:	74 21                	je     d576 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d555:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d55c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d560:	48 89 d6             	mov    %rdx,%rsi
    d563:	48 89 c7             	mov    %rax,%rdi
    d566:	e8 59 33 00 00       	call   108c4 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d56b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d56f:	48 8b 00             	mov    (%rax),%rax
    d572:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d576:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d57d:	48 89 c7             	mov    %rax,%rdi
    d580:	e8 db 39 00 00       	call   10f60 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d585:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d58c:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d593:	48 89 d6             	mov    %rdx,%rsi
    d596:	48 89 c7             	mov    %rax,%rdi
    d599:	e8 87 39 00 00       	call   10f25 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d59e:	84 c0                	test   %al,%al
    d5a0:	0f 85 02 ff ff ff    	jne    d4a8 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d5a6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d5ab:	75 3b                	jne    d5e8 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d5ad:	bf 10 00 00 00       	mov    $0x10,%edi
    d5b2:	e8 c9 6b ff ff       	call   4180 <__cxa_allocate_exception@plt>
    d5b7:	48 89 c3             	mov    %rax,%rbx
    d5ba:	48 8d 05 f7 d3 00 00 	lea    0xd3f7(%rip),%rax        # 1a9b8 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d5c1:	48 89 c6             	mov    %rax,%rsi
    d5c4:	48 89 df             	mov    %rbx,%rdi
    d5c7:	e8 44 6b ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    d5cc:	48 8b 05 d5 a9 01 00 	mov    0x1a9d5(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d5d3:	48 89 c2             	mov    %rax,%rdx
    d5d6:	48 8d 05 63 a7 01 00 	lea    0x1a763(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d5dd:	48 89 c6             	mov    %rax,%rsi
    d5e0:	48 89 df             	mov    %rbx,%rdi
    d5e3:	e8 e8 70 ff ff       	call   46d0 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d5e8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d5ec:	48 89 c7             	mov    %rax,%rdi
    d5ef:	e8 fa 32 00 00       	call   108ee <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d5f4:	8b 00                	mov    (%rax),%eax
    d5f6:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d5f9:	f3 0f 10 05 ef d7 00 	movss  0xd7ef(%rip),%xmm0        # 1adf0 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x310>
    d600:	00 
    d601:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d606:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d60a:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d611:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d618:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d61d:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d624:	00 00 00 
  queueInfo.pNext = nullptr;
    d627:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d62e:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d632:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d635:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d63b:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d642:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d645:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d649:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d64d:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d654:	b8 00 00 00 00       	mov    $0x0,%eax
    d659:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d65e:	48 89 d7             	mov    %rdx,%rdi
    d661:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d664:	48 89 fa             	mov    %rdi,%rdx
    d667:	89 02                	mov    %eax,(%rdx)
    d669:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d66d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d671:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d678:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d67f:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d686:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d68d:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d694:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d695:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d69c:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d69f:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d6a6:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d6aa:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d6b1:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d6b4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d6bb:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d6c2:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d6c9:	48 05 88 00 00 00    	add    $0x88,%rax
    d6cf:	48 89 c7             	mov    %rax,%rdi
    d6d2:	e8 8f 36 00 00       	call   10d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d6d7:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d6dd:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d6e4:	48 05 88 00 00 00    	add    $0x88,%rax
    d6ea:	48 89 c7             	mov    %rax,%rdi
    d6ed:	e8 bc 36 00 00       	call   10dae <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d6f2:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d6f9:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d700:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d707:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d70e:	48 83 c0 28          	add    $0x28,%rax
    d712:	48 89 c7             	mov    %rax,%rdi
    d715:	e8 4c 36 00 00       	call   10d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d71a:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d720:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d727:	48 83 c0 28          	add    $0x28,%rax
    d72b:	48 89 c7             	mov    %rax,%rdi
    d72e:	e8 57 36 00 00       	call   10d8a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d733:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d73a:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d741:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d745:	ba 00 00 00 00       	mov    $0x0,%edx
    d74a:	48 89 ce             	mov    %rcx,%rsi
    d74d:	48 89 c7             	mov    %rax,%rdi
    d750:	e8 83 81 ff ff       	call   58d8 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d755:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d75c:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d760:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d767:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d76b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d772:	48 8b 40 50          	mov    0x50(%rax),%rax
    d776:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d779:	48 89 d1             	mov    %rdx,%rcx
    d77c:	ba 00 00 00 00       	mov    $0x0,%edx
    d781:	48 89 c7             	mov    %rax,%rdi
    d784:	e8 e7 6d ff ff       	call   4570 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d789:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d790:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d794:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    d798:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d79f:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d7a2:	89 50 68             	mov    %edx,0x68(%rax)
}
    d7a5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d7a9:	48 89 c7             	mov    %rax,%rdi
    d7ac:	e8 af ab ff ff       	call   8360 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d7b1:	eb 2a                	jmp    d7dd <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    d7b3:	49 89 c4             	mov    %rax,%r12
    d7b6:	48 89 df             	mov    %rbx,%rdi
    d7b9:	e8 92 6a ff ff       	call   4250 <__cxa_free_exception@plt>
    d7be:	4c 89 e3             	mov    %r12,%rbx
    d7c1:	eb 03                	jmp    d7c6 <_ZN9VulkanApp12createDeviceEv+0x394>
}
    d7c3:	48 89 c3             	mov    %rax,%rbx
    d7c6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d7ca:	48 89 c7             	mov    %rax,%rdi
    d7cd:	e8 8e ab ff ff       	call   8360 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d7d2:	48 89 d8             	mov    %rbx,%rax
    d7d5:	48 89 c7             	mov    %rax,%rdi
    d7d8:	e8 53 6f ff ff       	call   4730 <_Unwind_Resume@plt>
    d7dd:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    d7e4:	5b                   	pop    %rbx
    d7e5:	41 5c                	pop    %r12
    d7e7:	5d                   	pop    %rbp
    d7e8:	c3                   	ret
    d7e9:	90                   	nop

000000000000d7ea <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    d7ea:	55                   	push   %rbp
    d7eb:	48 89 e5             	mov    %rsp,%rbp
    d7ee:	53                   	push   %rbx
    d7ef:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    d7f6:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    d7fd:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    d804:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d80b:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    d812:	ba 00 00 00 00       	mov    $0x0,%edx
    d817:	48 89 ce             	mov    %rcx,%rsi
    d81a:	48 89 c7             	mov    %rax,%rdi
    d81d:	e8 3f 97 ff ff       	call   6f61 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    d822:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d829:	48 89 c7             	mov    %rax,%rdi
    d82c:	e8 39 31 00 00       	call   1096a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    d831:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d838:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d83c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d840:	48 89 c7             	mov    %rax,%rdi
    d843:	e8 60 38 00 00       	call   110a8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d848:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    d84f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d853:	48 89 c7             	mov    %rax,%rdi
    d856:	e8 73 38 00 00       	call   110ce <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d85b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    d862:	e9 8c 00 00 00       	jmp    d8f3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    d867:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d86e:	48 89 c7             	mov    %rax,%rdi
    d871:	e8 e0 38 00 00       	call   11156 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d876:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    d87a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d881:	48 89 c7             	mov    %rax,%rdi
    d884:	e8 b7 6e ff ff       	call   4740 <_ZNSaIcEC1Ev@plt>
    d889:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d88d:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    d894:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d89b:	48 89 ce             	mov    %rcx,%rsi
    d89e:	48 89 c7             	mov    %rax,%rdi
    d8a1:	e8 fa 72 ff ff       	call   4ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d8a6:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    d8ad:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d8b4:	48 89 d6             	mov    %rdx,%rsi
    d8b7:	48 89 c7             	mov    %rax,%rdi
    d8ba:	e8 a9 38 00 00       	call   11168 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d8bf:	8b 10                	mov    (%rax),%edx
    d8c1:	83 c2 01             	add    $0x1,%edx
    d8c4:	89 10                	mov    %edx,(%rax)
    d8c6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d8cd:	48 89 c7             	mov    %rax,%rdi
    d8d0:	e8 1b 69 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d8d5:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d8dc:	48 89 c7             	mov    %rax,%rdi
    d8df:	e8 6c 6b ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    d8e4:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d8eb:	48 89 c7             	mov    %rax,%rdi
    d8ee:	e8 3f 38 00 00       	call   11132 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d8f3:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    d8fa:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d901:	48 89 d6             	mov    %rdx,%rsi
    d904:	48 89 c7             	mov    %rax,%rdi
    d907:	e8 eb 37 00 00       	call   110f7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d90c:	84 c0                	test   %al,%al
    d90e:	0f 85 53 ff ff ff    	jne    d867 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    d914:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    d91b:	48 05 88 00 00 00    	add    $0x88,%rax
    d921:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d925:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d929:	48 89 c7             	mov    %rax,%rdi
    d92c:	e8 d5 32 00 00       	call   10c06 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d931:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    d938:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d93c:	48 89 c7             	mov    %rax,%rdi
    d93f:	e8 e8 32 00 00       	call   10c2c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d944:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    d94b:	e9 ed 00 00 00       	jmp    da3d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    d950:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d957:	48 89 c7             	mov    %rax,%rdi
    d95a:	e8 51 33 00 00       	call   10cb0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d95f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    d963:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d967:	48 89 c7             	mov    %rax,%rdi
    d96a:	e8 d1 6d ff ff       	call   4740 <_ZNSaIcEC1Ev@plt>
    d96f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d973:	48 8b 08             	mov    (%rax),%rcx
    d976:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    d97a:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d981:	48 89 ce             	mov    %rcx,%rsi
    d984:	48 89 c7             	mov    %rax,%rdi
    d987:	e8 14 72 ff ff       	call   4ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d98c:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d993:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d99a:	48 89 d6             	mov    %rdx,%rsi
    d99d:	48 89 c7             	mov    %rax,%rdi
    d9a0:	e8 c3 37 00 00       	call   11168 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d9a5:	8b 10                	mov    (%rax),%edx
    d9a7:	83 c2 01             	add    $0x1,%edx
    d9aa:	89 10                	mov    %edx,(%rax)
    d9ac:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d9b3:	48 89 c7             	mov    %rax,%rdi
    d9b6:	e8 35 68 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d9bb:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d9bf:	48 89 c7             	mov    %rax,%rdi
    d9c2:	e8 89 6a ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    d9c7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d9cb:	48 89 c7             	mov    %rax,%rdi
    d9ce:	e8 6d 6d ff ff       	call   4740 <_ZNSaIcEC1Ev@plt>
    d9d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d9d7:	48 8b 08             	mov    (%rax),%rcx
    d9da:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d9de:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d9e2:	48 89 ce             	mov    %rcx,%rsi
    d9e5:	48 89 c7             	mov    %rax,%rdi
    d9e8:	e8 b3 71 ff ff       	call   4ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d9ed:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d9f1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d9f8:	48 89 d6             	mov    %rdx,%rsi
    d9fb:	48 89 c7             	mov    %rax,%rdi
    d9fe:	e8 65 37 00 00       	call   11168 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    da03:	8b 00                	mov    (%rax),%eax
    da05:	83 f8 01             	cmp    $0x1,%eax
    da08:	0f 96 c3             	setbe  %bl
    da0b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    da0f:	48 89 c7             	mov    %rax,%rdi
    da12:	e8 d9 67 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    da17:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    da1b:	48 89 c7             	mov    %rax,%rdi
    da1e:	e8 2d 6a ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    da23:	84 db                	test   %bl,%bl
    da25:	74 07                	je     da2e <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    da27:	bb 00 00 00 00       	mov    $0x0,%ebx
    da2c:	eb 35                	jmp    da63 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    da2e:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    da35:	48 89 c7             	mov    %rax,%rdi
    da38:	e8 53 32 00 00       	call   10c90 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    da3d:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    da44:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    da4b:	48 89 d6             	mov    %rdx,%rsi
    da4e:	48 89 c7             	mov    %rax,%rdi
    da51:	e8 ff 31 00 00       	call   10c55 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    da56:	84 c0                	test   %al,%al
    da58:	0f 85 f2 fe ff ff    	jne    d950 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    da5e:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    da63:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    da6a:	48 89 c7             	mov    %rax,%rdi
    da6d:	e8 14 2f 00 00       	call   10986 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    da72:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    da79:	48 89 c7             	mov    %rax,%rdi
    da7c:	e8 55 a6 ff ff       	call   80d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    da81:	89 d8                	mov    %ebx,%eax
    da83:	e9 96 00 00 00       	jmp    db1e <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    da88:	48 89 c3             	mov    %rax,%rbx
    da8b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    da92:	48 89 c7             	mov    %rax,%rdi
    da95:	e8 56 67 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    da9a:	eb 03                	jmp    da9f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    da9c:	48 89 c3             	mov    %rax,%rbx
    da9f:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    daa6:	48 89 c7             	mov    %rax,%rdi
    daa9:	e8 a2 69 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    daae:	eb 45                	jmp    daf5 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    dab0:	48 89 c3             	mov    %rax,%rbx
    dab3:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    daba:	48 89 c7             	mov    %rax,%rdi
    dabd:	e8 2e 67 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dac2:	eb 03                	jmp    dac7 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    dac4:	48 89 c3             	mov    %rax,%rbx
    dac7:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    dacb:	48 89 c7             	mov    %rax,%rdi
    dace:	e8 7d 69 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    dad3:	eb 20                	jmp    daf5 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    dad5:	48 89 c3             	mov    %rax,%rbx
    dad8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dadc:	48 89 c7             	mov    %rax,%rdi
    dadf:	e8 0c 67 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dae4:	eb 03                	jmp    dae9 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    dae6:	48 89 c3             	mov    %rax,%rbx
    dae9:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    daed:	48 89 c7             	mov    %rax,%rdi
    daf0:	e8 5b 69 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
}
    daf5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dafc:	48 89 c7             	mov    %rax,%rdi
    daff:	e8 82 2e 00 00       	call   10986 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    db04:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    db0b:	48 89 c7             	mov    %rax,%rdi
    db0e:	e8 c3 a5 ff ff       	call   80d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    db13:	48 89 d8             	mov    %rbx,%rax
    db16:	48 89 c7             	mov    %rax,%rdi
    db19:	e8 12 6c ff ff       	call   4730 <_Unwind_Resume@plt>
    db1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    db22:	c9                   	leave
    db23:	c3                   	ret

000000000000db24 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    db24:	55                   	push   %rbp
    db25:	48 89 e5             	mov    %rsp,%rbp
    db28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    db30:	b8 01 00 00 00       	mov    $0x1,%eax
}
    db35:	5d                   	pop    %rbp
    db36:	c3                   	ret
    db37:	90                   	nop

000000000000db38 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    db38:	55                   	push   %rbp
    db39:	48 89 e5             	mov    %rsp,%rbp
    db3c:	41 54                	push   %r12
    db3e:	53                   	push   %rbx
    db3f:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    db46:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    db4d:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    db54:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db5b:	48 8b 50 48          	mov    0x48(%rax),%rdx
    db5f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db66:	48 8b 48 58          	mov    0x58(%rax),%rcx
    db6a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    db6e:	48 89 ce             	mov    %rcx,%rsi
    db71:	48 89 c7             	mov    %rax,%rdi
    db74:	e8 32 9d ff ff       	call   78ab <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    db79:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db80:	48 8b 50 48          	mov    0x48(%rax),%rdx
    db84:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db8b:	48 8b 48 58          	mov    0x58(%rax),%rcx
    db8f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    db96:	48 89 ce             	mov    %rcx,%rsi
    db99:	48 89 c7             	mov    %rax,%rdi
    db9c:	e8 b8 9d ff ff       	call   7959 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    dba1:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dba8:	48 8b 50 48          	mov    0x48(%rax),%rdx
    dbac:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dbb3:	48 8b 48 58          	mov    0x58(%rax),%rcx
    dbb7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dbbe:	48 89 ce             	mov    %rcx,%rsi
    dbc1:	48 89 c7             	mov    %rax,%rdi
    dbc4:	e8 07 9f ff ff       	call   7ad0 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    dbc9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbd0:	48 89 c6             	mov    %rax,%rsi
    dbd3:	b8 00 00 00 00       	mov    $0x0,%eax
    dbd8:	ba 0d 00 00 00       	mov    $0xd,%edx
    dbdd:	48 89 f7             	mov    %rsi,%rdi
    dbe0:	48 89 d1             	mov    %rdx,%rcx
    dbe3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    dbe6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbed:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    dbf3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbfa:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dc01:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    dc02:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dc09:	48 8b 50 48          	mov    0x48(%rax),%rdx
    dc0d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc14:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    dc18:	8b 45 80             	mov    -0x80(%rbp),%eax
    dc1b:	83 c0 01             	add    $0x1,%eax
    dc1e:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    dc21:	8b 45 84             	mov    -0x7c(%rbp),%eax
    dc24:	85 c0                	test   %eax,%eax
    dc26:	74 0e                	je     dc36 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    dc28:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    dc2b:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    dc2e:	73 06                	jae    dc36 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    dc30:	8b 45 84             	mov    -0x7c(%rbp),%eax
    dc33:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    dc36:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc3d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    dc40:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    dc43:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dc4a:	48 89 c7             	mov    %rax,%rdi
    dc4d:	e8 1a 36 00 00       	call   1126c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    dc52:	84 c0                	test   %al,%al
    dc54:	74 3b                	je     dc91 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    dc56:	bf 10 00 00 00       	mov    $0x10,%edi
    dc5b:	e8 20 65 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    dc60:	48 89 c3             	mov    %rax,%rbx
    dc63:	48 8d 05 72 cd 00 00 	lea    0xcd72(%rip),%rax        # 1a9dc <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    dc6a:	48 89 c6             	mov    %rax,%rsi
    dc6d:	48 89 df             	mov    %rbx,%rdi
    dc70:	e8 9b 64 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    dc75:	48 8b 05 2c a3 01 00 	mov    0x1a32c(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dc7c:	48 89 c2             	mov    %rax,%rdx
    dc7f:	48 8d 05 ba a0 01 00 	lea    0x1a0ba(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dc86:	48 89 c6             	mov    %rax,%rsi
    dc89:	48 89 df             	mov    %rbx,%rdi
    dc8c:	e8 3f 6a ff ff       	call   46d0 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    dc91:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dc98:	be 00 00 00 00       	mov    $0x0,%esi
    dc9d:	48 89 c7             	mov    %rax,%rdi
    dca0:	e8 09 36 00 00       	call   112ae <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    dca5:	8b 10                	mov    (%rax),%edx
    dca7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dcae:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    dcb1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dcb8:	be 00 00 00 00       	mov    $0x0,%esi
    dcbd:	48 89 c7             	mov    %rax,%rdi
    dcc0:	e8 e9 35 00 00       	call   112ae <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    dcc5:	8b 50 04             	mov    0x4(%rax),%edx
    dcc8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dccf:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    dcd2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dcd9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    dcdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dce1:	48 89 c7             	mov    %rax,%rdi
    dce4:	e8 e5 35 00 00       	call   112ce <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    dce9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    dcf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dcf4:	48 89 c7             	mov    %rax,%rdi
    dcf7:	e8 f8 35 00 00       	call   112f4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    dcfc:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    dd03:	eb 5b                	jmp    dd60 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    dd05:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dd0c:	48 89 c7             	mov    %rax,%rdi
    dd0f:	e8 64 36 00 00       	call   11378 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dd14:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dd18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dd1c:	8b 00                	mov    (%rax),%eax
    dd1e:	83 f8 2b             	cmp    $0x2b,%eax
    dd21:	75 2e                	jne    dd51 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    dd23:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dd27:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dd2a:	85 c0                	test   %eax,%eax
    dd2c:	75 23                	jne    dd51 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    dd2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dd32:	8b 10                	mov    (%rax),%edx
    dd34:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd3b:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    dd3e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dd42:	8b 50 04             	mov    0x4(%rax),%edx
    dd45:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd4c:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    dd4f:	eb 2c                	jmp    dd7d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    dd51:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dd58:	48 89 c7             	mov    %rax,%rdi
    dd5b:	e8 f8 35 00 00       	call   11358 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    dd60:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    dd67:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dd6e:	48 89 d6             	mov    %rdx,%rsi
    dd71:	48 89 c7             	mov    %rax,%rdi
    dd74:	e8 a4 35 00 00       	call   1131d <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dd79:	84 c0                	test   %al,%al
    dd7b:	75 88                	jne    dd05 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    dd7d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd84:	8b 50 24             	mov    0x24(%rax),%edx
    dd87:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dd8e:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    dd91:	8b 45 88             	mov    -0x78(%rbp),%eax
    dd94:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    dd97:	8b 45 8c             	mov    -0x74(%rbp),%eax
    dd9a:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    dd9d:	8b 45 98             	mov    -0x68(%rbp),%eax
    dda0:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    dda3:	73 06                	jae    ddab <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    dda5:	8b 45 98             	mov    -0x68(%rbp),%eax
    dda8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    ddab:	8b 45 9c             	mov    -0x64(%rbp),%eax
    ddae:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    ddb1:	73 06                	jae    ddb9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    ddb3:	8b 45 9c             	mov    -0x64(%rbp),%eax
    ddb6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    ddb9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddc0:	8b 55 e8             	mov    -0x18(%rbp),%edx
    ddc3:	89 50 2c             	mov    %edx,0x2c(%rax)
    ddc6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddcd:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    ddd0:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    ddd3:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ddda:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    dde1:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    dde5:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    dde9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddf0:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    ddf7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddfe:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    de05:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    de0c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    de13:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    de17:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    de1b:	48 89 c7             	mov    %rax,%rdi
    de1e:	e8 67 35 00 00       	call   1138a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    de23:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    de2a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    de2e:	48 89 c7             	mov    %rax,%rdi
    de31:	e8 7a 35 00 00       	call   113b0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    de36:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    de3d:	eb 3c                	jmp    de7b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    de3f:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    de46:	48 89 c7             	mov    %rax,%rdi
    de49:	e8 e6 35 00 00       	call   11434 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    de4e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    de52:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    de56:	8b 00                	mov    (%rax),%eax
    de58:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    de5b:	75 0f                	jne    de6c <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    de5d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de64:	8b 55 cc             	mov    -0x34(%rbp),%edx
    de67:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    de6a:	eb 2c                	jmp    de98 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    de6c:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    de73:	48 89 c7             	mov    %rax,%rdi
    de76:	e8 99 35 00 00       	call   11414 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    de7b:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    de82:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    de89:	48 89 d6             	mov    %rdx,%rsi
    de8c:	48 89 c7             	mov    %rax,%rdi
    de8f:	e8 45 35 00 00       	call   113d9 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    de94:	84 c0                	test   %al,%al
    de96:	75 a7                	jne    de3f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    de98:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de9f:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    dea6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dead:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    deb4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    debb:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    dec2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dec9:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    ded0:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    ded1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    ded4:	83 e0 01             	and    $0x1,%eax
    ded7:	85 c0                	test   %eax,%eax
    ded9:	74 1e                	je     def9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    dedb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dee2:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    dee9:	8b 45 ac             	mov    -0x54(%rbp),%eax
    deec:	83 e0 01             	and    $0x1,%eax
    deef:	85 c0                	test   %eax,%eax
    def1:	0f 84 9b 00 00 00    	je     df92 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    def7:	eb 3b                	jmp    df34 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    def9:	bf 10 00 00 00       	mov    $0x10,%edi
    defe:	e8 7d 62 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    df03:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    df06:	48 8d 05 f3 ca 00 00 	lea    0xcaf3(%rip),%rax        # 1aa00 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    df0d:	48 89 c6             	mov    %rax,%rsi
    df10:	48 89 df             	mov    %rbx,%rdi
    df13:	e8 f8 61 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    df18:	48 8b 05 89 a0 01 00 	mov    0x1a089(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    df1f:	48 89 c2             	mov    %rax,%rdx
    df22:	48 8d 05 17 9e 01 00 	lea    0x19e17(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    df29:	48 89 c6             	mov    %rax,%rsi
    df2c:	48 89 df             	mov    %rbx,%rdi
    df2f:	e8 9c 67 ff ff       	call   46d0 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    df34:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df3b:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    df42:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df49:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    df50:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df57:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    df5e:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    df5f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df66:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    df6d:	00 

  return swapchainCreateInfo;
    df6e:	90                   	nop
}
    df6f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    df76:	48 89 c7             	mov    %rax,%rdi
    df79:	e8 f6 aa ff ff       	call   8a74 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    df7e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    df85:	48 89 c7             	mov    %rax,%rdi
    df88:	e8 83 a9 ff ff       	call   8910 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    df8d:	e9 9c 00 00 00       	jmp    e02e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    df92:	bf 10 00 00 00       	mov    $0x10,%edi
    df97:	e8 e4 61 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    df9c:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    df9f:	48 8d 05 92 ca 00 00 	lea    0xca92(%rip),%rax        # 1aa38 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    dfa6:	48 89 c6             	mov    %rax,%rsi
    dfa9:	48 89 df             	mov    %rbx,%rdi
    dfac:	e8 5f 61 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dfb1:	48 8b 05 f0 9f 01 00 	mov    0x19ff0(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dfb8:	48 89 c2             	mov    %rax,%rdx
    dfbb:	48 8d 05 7e 9d 01 00 	lea    0x19d7e(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dfc2:	48 89 c6             	mov    %rax,%rsi
    dfc5:	48 89 df             	mov    %rbx,%rdi
    dfc8:	e8 03 67 ff ff       	call   46d0 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    dfcd:	49 89 c4             	mov    %rax,%r12
    dfd0:	48 89 df             	mov    %rbx,%rdi
    dfd3:	e8 78 62 ff ff       	call   4250 <__cxa_free_exception@plt>
    dfd8:	4c 89 e3             	mov    %r12,%rbx
    dfdb:	eb 23                	jmp    e000 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dfdd:	49 89 c4             	mov    %rax,%r12
    dfe0:	48 89 df             	mov    %rbx,%rdi
    dfe3:	e8 68 62 ff ff       	call   4250 <__cxa_free_exception@plt>
    dfe8:	4c 89 e3             	mov    %r12,%rbx
    dfeb:	eb 13                	jmp    e000 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dfed:	49 89 c4             	mov    %rax,%r12
    dff0:	48 89 df             	mov    %rbx,%rdi
    dff3:	e8 58 62 ff ff       	call   4250 <__cxa_free_exception@plt>
    dff8:	4c 89 e3             	mov    %r12,%rbx
    dffb:	eb 03                	jmp    e000 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    dffd:	48 89 c3             	mov    %rax,%rbx
    e000:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e007:	48 89 c7             	mov    %rax,%rdi
    e00a:	e8 65 aa ff ff       	call   8a74 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    e00f:	eb 03                	jmp    e014 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    e011:	48 89 c3             	mov    %rax,%rbx
    e014:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e01b:	48 89 c7             	mov    %rax,%rdi
    e01e:	e8 ed a8 ff ff       	call   8910 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    e023:	48 89 d8             	mov    %rbx,%rax
    e026:	48 89 c7             	mov    %rax,%rdi
    e029:	e8 02 67 ff ff       	call   4730 <_Unwind_Resume@plt>
    e02e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e035:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    e03c:	5b                   	pop    %rbx
    e03d:	41 5c                	pop    %r12
    e03f:	5d                   	pop    %rbp
    e040:	c3                   	ret
    e041:	90                   	nop

000000000000e042 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    e042:	55                   	push   %rbp
    e043:	48 89 e5             	mov    %rsp,%rbp
    e046:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    e04a:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    e04e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e052:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    e056:	48 89 d6             	mov    %rdx,%rsi
    e059:	48 89 c7             	mov    %rax,%rdi
    e05c:	e8 d7 fa ff ff       	call   db38 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    e061:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e065:	48 8b 40 50          	mov    0x50(%rax),%rax
    e069:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e06d:	ba 00 00 00 00       	mov    $0x0,%edx
    e072:	48 89 ce             	mov    %rcx,%rsi
    e075:	48 89 c7             	mov    %rax,%rdi
    e078:	e8 8b 79 ff ff       	call   5a08 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    e07d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    e081:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    e085:	90                   	nop
    e086:	c9                   	leave
    e087:	c3                   	ret

000000000000e088 <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    e088:	55                   	push   %rbp
    e089:	48 89 e5             	mov    %rsp,%rbp
    e08c:	53                   	push   %rbx
    e08d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    e094:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    e09b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e0a2:	48 8b 50 70          	mov    0x70(%rax),%rdx
    e0a6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e0ad:	48 8b 48 50          	mov    0x50(%rax),%rcx
    e0b1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e0b5:	48 89 ce             	mov    %rcx,%rsi
    e0b8:	48 89 c7             	mov    %rax,%rdi
    e0bb:	e8 87 9b ff ff       	call   7c47 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    e0c0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e0c7:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    e0ce:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e0d2:	48 89 c6             	mov    %rax,%rsi
    e0d5:	48 89 d7             	mov    %rdx,%rdi
    e0d8:	e8 69 33 00 00       	call   11446 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    e0dd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e0e1:	48 89 c7             	mov    %rax,%rdi
    e0e4:	e8 ef aa ff ff       	call   8bd8 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    e0e9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e0f0:	48 05 b8 00 00 00    	add    $0xb8,%rax
    e0f6:	48 89 c7             	mov    %rax,%rdi
    e0f9:	e8 80 33 00 00       	call   1147e <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    e0fe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    e102:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e109:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    e110:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e114:	48 89 c6             	mov    %rax,%rsi
    e117:	48 89 d7             	mov    %rdx,%rdi
    e11a:	e8 83 33 00 00       	call   114a2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    e11f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e126:	00 
    e127:	e9 f1 00 00 00       	jmp    e21d <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    e12c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e130:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    e137:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    e13b:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    e13f:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    e143:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    e147:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    e14e:	00 00 00 
    imageViewInfo.pNext = nullptr;
    e151:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    e158:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    e15c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e163:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    e16a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e16e:	48 89 c6             	mov    %rax,%rsi
    e171:	48 89 d7             	mov    %rdx,%rdi
    e174:	e8 af 33 00 00       	call   11528 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    e179:	48 8b 00             	mov    (%rax),%rax
    e17c:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    e180:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    e187:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e18e:	8b 40 78             	mov    0x78(%rax),%eax
    e191:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    e194:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    e19b:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    e1a2:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    e1a9:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    e1b0:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    e1b7:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    e1be:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    e1c5:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    e1cc:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    e1d3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e1da:	48 8b 40 50          	mov    0x50(%rax),%rax
    e1de:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    e1e5:	ba 00 00 00 00       	mov    $0x0,%edx
    e1ea:	48 89 ce             	mov    %rcx,%rsi
    e1ed:	48 89 c7             	mov    %rax,%rdi
    e1f0:	e8 b3 78 ff ff       	call   5aa8 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    e1f5:	48 89 c3             	mov    %rax,%rbx
    e1f8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e1ff:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    e206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e20a:	48 89 c6             	mov    %rax,%rsi
    e20d:	48 89 d7             	mov    %rdx,%rdi
    e210:	e8 33 33 00 00       	call   11548 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    e215:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    e218:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    e21d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e221:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    e225:	0f 82 01 ff ff ff    	jb     e12c <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    e22b:	90                   	nop
    e22c:	90                   	nop
    e22d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e231:	c9                   	leave
    e232:	c3                   	ret
    e233:	90                   	nop

000000000000e234 <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    e234:	55                   	push   %rbp
    e235:	48 89 e5             	mov    %rsp,%rbp
    e238:	41 55                	push   %r13
    e23a:	41 54                	push   %r12
    e23c:	53                   	push   %rbx
    e23d:	48 81 ec 28 05 00 00 	sub    $0x528,%rsp
    e244:	48 89 bd c8 fa ff ff 	mov    %rdi,-0x538(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    e24b:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    e252:	00 00 00 00 
    e256:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    e25d:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    e261:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e268:	48 89 c7             	mov    %rax,%rdi
    e26b:	e8 d0 64 ff ff       	call   4740 <_ZNSaIcEC1Ev@plt>
    e270:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    e277:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e27e:	48 8d 0d eb c7 00 00 	lea    0xc7eb(%rip),%rcx        # 1aa70 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    e285:	48 89 ce             	mov    %rcx,%rsi
    e288:	48 89 c7             	mov    %rax,%rdi
    e28b:	e8 10 69 ff ff       	call   4ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e290:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e297:	48 8b 40 50          	mov    0x50(%rax),%rax
    e29b:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    e2a2:	ba 00 00 00 00       	mov    $0x0,%edx
    e2a7:	48 89 ce             	mov    %rcx,%rsi
    e2aa:	48 89 c7             	mov    %rax,%rdi
    e2ad:	e8 66 79 ff ff       	call   5c18 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e2b2:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    e2b9:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e2c0:	48 89 c7             	mov    %rax,%rdi
    e2c3:	e8 28 5f ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e2c8:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e2cf:	48 89 c7             	mov    %rax,%rdi
    e2d2:	e8 79 61 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
                                                        "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    e2d7:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e2de:	48 89 c7             	mov    %rax,%rdi
    e2e1:	e8 5a 64 ff ff       	call   4740 <_ZNSaIcEC1Ev@plt>
    e2e6:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    e2ed:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e2f4:	48 8d 0d 95 c7 00 00 	lea    0xc795(%rip),%rcx        # 1aa90 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    e2fb:	48 89 ce             	mov    %rcx,%rsi
    e2fe:	48 89 c7             	mov    %rax,%rdi
    e301:	e8 9a 68 ff ff       	call   4ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e306:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e30d:	48 8b 40 50          	mov    0x50(%rax),%rax
    e311:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    e318:	ba 00 00 00 00       	mov    $0x0,%edx
    e31d:	48 89 ce             	mov    %rcx,%rsi
    e320:	48 89 c7             	mov    %rax,%rdi
    e323:	e8 f0 78 ff ff       	call   5c18 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e328:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    e32f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e336:	48 89 c7             	mov    %rax,%rdi
    e339:	e8 b2 5e ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e33e:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e345:	48 89 c7             	mov    %rax,%rdi
    e348:	e8 03 61 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    e34d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e351:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    e358:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    e35f:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    e366:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    e36d:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    e370:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    e377:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    e37a:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e381:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    e388:	48 8d 05 21 c7 00 00 	lea    0xc721(%rip),%rax        # 1aab0 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e38f:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    e396:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    e39d:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    e3a1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3a5:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    e3ac:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    e3b3:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    e3ba:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    e3c1:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    e3c4:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    e3cb:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    e3ce:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e3d5:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    e3dc:	48 8d 05 cd c6 00 00 	lea    0xc6cd(%rip),%rax        # 1aab0 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e3e3:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    e3ea:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    e3f1:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    e3f5:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    e3fc:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    e403:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    e40a:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    e411:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    e418:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    e41f:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    e426:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    e42d:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    e434:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    e43b:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    e442:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    e449:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    e450:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    e457:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e45e:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    e465:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    e46c:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    e473:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    e47a:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    e481:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    e488:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    e48f:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    e496:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    e49d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4a1:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    e4a8:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    e4af:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
  vertInputInfo.sType =
    e4b6:	c7 85 c0 fd ff ff 13 	movl   $0x13,-0x240(%rbp)
    e4bd:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 0;
    e4c0:	c7 85 d4 fd ff ff 00 	movl   $0x0,-0x22c(%rbp)
    e4c7:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = nullptr;
    e4ca:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
    e4d1:	00 00 00 00 
  vertInputInfo.vertexAttributeDescriptionCount = 0;
    e4d5:	c7 85 e0 fd ff ff 00 	movl   $0x0,-0x220(%rbp)
    e4dc:	00 00 00 
  vertInputInfo.pVertexAttributeDescriptions = nullptr;
    e4df:	48 c7 85 e8 fd ff ff 	movq   $0x0,-0x218(%rbp)
    e4e6:	00 00 00 00 

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    e4ea:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4ee:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    e4f5:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  inputAssemblyInfo.sType =
    e4fc:	c7 85 a0 fd ff ff 14 	movl   $0x14,-0x260(%rbp)
    e503:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    e506:	c7 85 b4 fd ff ff 03 	movl   $0x3,-0x24c(%rbp)
    e50d:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    e510:	c7 85 b8 fd ff ff 00 	movl   $0x0,-0x248(%rbp)
    e517:	00 00 00 

  /*  */
  VkViewport viewport{};
    e51a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e51e:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    e525:	66 0f d6 85 90 fd ff 	movq   %xmm0,-0x270(%rbp)
    e52c:	ff 
  viewport.x = 0.0f;
    e52d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e531:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
    e538:	ff 
  viewport.y = 0.0f;
    e539:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e53d:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
    e544:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    e545:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e54c:	8b 40 7c             	mov    0x7c(%rax),%eax
    e54f:	89 c0                	mov    %eax,%eax
    e551:	48 85 c0             	test   %rax,%rax
    e554:	78 0b                	js     e561 <_ZN9VulkanApp22createGraphicsPipelineEv+0x32d>
    e556:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e55a:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e55f:	eb 19                	jmp    e57a <_ZN9VulkanApp22createGraphicsPipelineEv+0x346>
    e561:	48 89 c2             	mov    %rax,%rdx
    e564:	48 d1 ea             	shr    %rdx
    e567:	83 e0 01             	and    $0x1,%eax
    e56a:	48 09 c2             	or     %rax,%rdx
    e56d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e571:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e576:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e57a:	f3 0f 11 85 88 fd ff 	movss  %xmm0,-0x278(%rbp)
    e581:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    e582:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e589:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    e58f:	89 c0                	mov    %eax,%eax
    e591:	48 85 c0             	test   %rax,%rax
    e594:	78 0b                	js     e5a1 <_ZN9VulkanApp22createGraphicsPipelineEv+0x36d>
    e596:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e59a:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e59f:	eb 19                	jmp    e5ba <_ZN9VulkanApp22createGraphicsPipelineEv+0x386>
    e5a1:	48 89 c2             	mov    %rax,%rdx
    e5a4:	48 d1 ea             	shr    %rdx
    e5a7:	83 e0 01             	and    $0x1,%eax
    e5aa:	48 09 c2             	or     %rax,%rdx
    e5ad:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5b1:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e5b6:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e5ba:	f3 0f 11 85 8c fd ff 	movss  %xmm0,-0x274(%rbp)
    e5c1:	ff 
  viewport.minDepth = 0.0f;
    e5c2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5c6:	f3 0f 11 85 90 fd ff 	movss  %xmm0,-0x270(%rbp)
    e5cd:	ff 
  viewport.maxDepth = 1.0f;
    e5ce:	f3 0f 10 05 1a c8 00 	movss  0xc81a(%rip),%xmm0        # 1adf0 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x310>
    e5d5:	00 
    e5d6:	f3 0f 11 85 94 fd ff 	movss  %xmm0,-0x26c(%rbp)
    e5dd:	ff 

  VkRect2D scissor{};
    e5de:	48 c7 85 70 fd ff ff 	movq   $0x0,-0x290(%rbp)
    e5e5:	00 00 00 00 
    e5e9:	48 c7 85 78 fd ff ff 	movq   $0x0,-0x288(%rbp)
    e5f0:	00 00 00 00 
  scissor.offset = {0, 0};
    e5f4:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
    e5fb:	00 00 00 
    e5fe:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
    e605:	00 00 00 
  scissor.extent = swapchain.extent;
    e608:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e60f:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    e613:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    e61a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e61e:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    e625:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    e62c:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
  viewportStateInfo.sType =
    e633:	c7 85 40 fd ff ff 16 	movl   $0x16,-0x2c0(%rbp)
    e63a:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    e63d:	c7 85 54 fd ff ff 01 	movl   $0x1,-0x2ac(%rbp)
    e644:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    e647:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    e64e:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  viewportStateInfo.scissorCount = 1;
    e655:	c7 85 60 fd ff ff 01 	movl   $0x1,-0x2a0(%rbp)
    e65c:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    e65f:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
    e666:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    e66d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e671:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    e678:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    e67f:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    e686:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  rastStateInfo.sType =
    e68d:	c7 85 00 fd ff ff 17 	movl   $0x17,-0x300(%rbp)
    e694:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    e697:	48 c7 85 08 fd ff ff 	movq   $0x0,-0x2f8(%rbp)
    e69e:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    e6a2:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
    e6a9:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    e6ac:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
    e6b3:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    e6b6:	c7 85 1c fd ff ff 00 	movl   $0x0,-0x2e4(%rbp)
    e6bd:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    e6c0:	f3 0f 10 05 28 c7 00 	movss  0xc728(%rip),%xmm0        # 1adf0 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x310>
    e6c7:	00 
    e6c8:	f3 0f 11 85 38 fd ff 	movss  %xmm0,-0x2c8(%rbp)
    e6cf:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    e6d0:	c7 85 20 fd ff ff 02 	movl   $0x2,-0x2e0(%rbp)
    e6d7:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    e6da:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    e6e1:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    e6e4:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
    e6eb:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    e6ee:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6f2:	f3 0f 11 85 2c fd ff 	movss  %xmm0,-0x2d4(%rbp)
    e6f9:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    e6fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6fe:	f3 0f 11 85 30 fd ff 	movss  %xmm0,-0x2d0(%rbp)
    e705:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    e706:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e70a:	f3 0f 11 85 34 fd ff 	movss  %xmm0,-0x2cc(%rbp)
    e711:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    e712:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e716:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    e71d:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    e724:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
  multisampleStateInfo.sType =
    e72b:	c7 85 d0 fc ff ff 18 	movl   $0x18,-0x330(%rbp)
    e732:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    e735:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    e73c:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    e73f:	c7 85 e4 fc ff ff 01 	movl   $0x1,-0x31c(%rbp)
    e746:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    e749:	f3 0f 10 05 9f c6 00 	movss  0xc69f(%rip),%xmm0        # 1adf0 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x310>
    e750:	00 
    e751:	f3 0f 11 85 ec fc ff 	movss  %xmm0,-0x314(%rbp)
    e758:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    e759:	48 c7 85 f0 fc ff ff 	movq   $0x0,-0x310(%rbp)
    e760:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    e764:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    e76b:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    e76e:	c7 85 fc fc ff ff 00 	movl   $0x0,-0x304(%rbp)
    e775:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    e778:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e77c:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    e783:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  colorBlendAttachment.colorWriteMask =
    e78a:	c7 85 cc fc ff ff 0f 	movl   $0xf,-0x334(%rbp)
    e791:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    e794:	c7 85 b0 fc ff ff 01 	movl   $0x1,-0x350(%rbp)
    e79b:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    e79e:	c7 85 b4 fc ff ff 06 	movl   $0x6,-0x34c(%rbp)
    e7a5:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    e7a8:	c7 85 b8 fc ff ff 07 	movl   $0x7,-0x348(%rbp)
    e7af:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    e7b2:	c7 85 bc fc ff ff 00 	movl   $0x0,-0x344(%rbp)
    e7b9:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    e7bc:	c7 85 c0 fc ff ff 01 	movl   $0x1,-0x340(%rbp)
    e7c3:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    e7c6:	c7 85 c4 fc ff ff 00 	movl   $0x0,-0x33c(%rbp)
    e7cd:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    e7d0:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    e7d7:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    e7da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7de:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
    e7e5:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    e7ec:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    e7f3:	66 0f d6 85 a0 fc ff 	movq   %xmm0,-0x360(%rbp)
    e7fa:	ff 
  colorBlendState.sType =
    e7fb:	c7 85 70 fc ff ff 1a 	movl   $0x1a,-0x390(%rbp)
    e802:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
    e805:	c7 85 84 fc ff ff 00 	movl   $0x0,-0x37c(%rbp)
    e80c:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    e80f:	c7 85 88 fc ff ff 03 	movl   $0x3,-0x378(%rbp)
    e816:	00 00 00 
  colorBlendState.attachmentCount = 1;
    e819:	c7 85 8c fc ff ff 01 	movl   $0x1,-0x374(%rbp)
    e820:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
    e823:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    e82a:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
    e831:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e835:	f3 0f 11 85 98 fc ff 	movss  %xmm0,-0x368(%rbp)
    e83c:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
    e83d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e841:	f3 0f 11 85 9c fc ff 	movss  %xmm0,-0x364(%rbp)
    e848:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
    e849:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e84d:	f3 0f 11 85 a0 fc ff 	movss  %xmm0,-0x360(%rbp)
    e854:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
    e855:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e859:	f3 0f 11 85 a4 fc ff 	movss  %xmm0,-0x35c(%rbp)
    e860:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    e861:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e865:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    e86c:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    e873:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    e87a:	c7 85 40 fc ff ff 1e 	movl   $0x1e,-0x3c0(%rbp)
    e881:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    e884:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
    e88b:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    e88e:	48 c7 85 58 fc ff ff 	movq   $0x0,-0x3a8(%rbp)
    e895:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    e899:	c7 85 60 fc ff ff 00 	movl   $0x0,-0x3a0(%rbp)
    e8a0:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    e8a3:	48 c7 85 68 fc ff ff 	movq   $0x0,-0x398(%rbp)
    e8aa:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
    e8ae:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e8b5:	48 8b 40 50          	mov    0x50(%rax),%rax
    e8b9:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
    e8c0:	ba 00 00 00 00       	mov    $0x0,%edx
    e8c5:	48 89 ce             	mov    %rcx,%rsi
    e8c8:	48 89 c7             	mov    %rax,%rdi
    e8cb:	e8 80 75 ff ff       	call   5e50 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
    e8d0:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    e8d7:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
    e8de:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e8e2:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    e8e9:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    e8f0:	66 0f 7e 85 30 fc ff 	movd   %xmm0,-0x3d0(%rbp)
    e8f7:	ff 
  colorAttachment.format = swapchain.format;
    e8f8:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e8ff:	8b 40 78             	mov    0x78(%rax),%eax
    e902:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    e908:	c7 85 18 fc ff ff 01 	movl   $0x1,-0x3e8(%rbp)
    e90f:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    e912:	c7 85 1c fc ff ff 01 	movl   $0x1,-0x3e4(%rbp)
    e919:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    e91c:	c7 85 20 fc ff ff 00 	movl   $0x0,-0x3e0(%rbp)
    e923:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    e926:	c7 85 24 fc ff ff 02 	movl   $0x2,-0x3dc(%rbp)
    e92d:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    e930:	c7 85 28 fc ff ff 01 	movl   $0x1,-0x3d8(%rbp)
    e937:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    e93a:	c7 85 2c fc ff ff 00 	movl   $0x0,-0x3d4(%rbp)
    e941:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    e944:	c7 85 30 fc ff ff ea 	movl   $0x3b9acdea,-0x3d0(%rbp)
    e94b:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
    e94e:	48 c7 85 08 fc ff ff 	movq   $0x0,-0x3f8(%rbp)
    e955:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
    e959:	c7 85 08 fc ff ff 00 	movl   $0x0,-0x3f8(%rbp)
    e960:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    e963:	c7 85 0c fc ff ff 02 	movl   $0x2,-0x3f4(%rbp)
    e96a:	00 00 00 

  VkSubpassDescription subpass{};
    e96d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e971:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
    e978:	0f 29 85 d0 fb ff ff 	movaps %xmm0,-0x430(%rbp)
    e97f:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
    e986:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    e98d:	66 0f d6 85 00 fc ff 	movq   %xmm0,-0x400(%rbp)
    e994:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    e995:	c7 85 c4 fb ff ff 00 	movl   $0x0,-0x43c(%rbp)
    e99c:	00 00 00 
  subpass.colorAttachmentCount = 1;
    e99f:	c7 85 d8 fb ff ff 01 	movl   $0x1,-0x428(%rbp)
    e9a6:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
    e9a9:	48 8d 85 08 fc ff ff 	lea    -0x3f8(%rbp),%rax
    e9b0:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)

  VkRenderPassCreateInfo renderPassInfo{};
    e9b7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e9bb:	0f 29 85 80 fb ff ff 	movaps %xmm0,-0x480(%rbp)
    e9c2:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
    e9c9:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
    e9d0:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    e9d7:	c7 85 80 fb ff ff 26 	movl   $0x26,-0x480(%rbp)
    e9de:	00 00 00 
  renderPassInfo.pNext = nullptr;
    e9e1:	48 c7 85 88 fb ff ff 	movq   $0x0,-0x478(%rbp)
    e9e8:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
    e9ec:	c7 85 94 fb ff ff 01 	movl   $0x1,-0x46c(%rbp)
    e9f3:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    e9f6:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    e9fd:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  renderPassInfo.subpassCount = 1;
    ea04:	c7 85 a0 fb ff ff 01 	movl   $0x1,-0x460(%rbp)
    ea0b:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    ea0e:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
    ea15:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
    ea1c:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    ea23:	48 8b 40 50          	mov    0x50(%rax),%rax
    ea27:	48 8d 8d 80 fb ff ff 	lea    -0x480(%rbp),%rcx
    ea2e:	ba 00 00 00 00       	mov    $0x0,%edx
    ea33:	48 89 ce             	mov    %rcx,%rsi
    ea36:	48 89 c7             	mov    %rax,%rdi
    ea39:	e8 aa 74 ff ff       	call   5ee8 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
    ea3e:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    ea45:	48 89 82 e8 00 00 00 	mov    %rax,0xe8(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    ea4c:	48 8d 95 f0 fa ff ff 	lea    -0x510(%rbp),%rdx
    ea53:	b8 00 00 00 00       	mov    $0x0,%eax
    ea58:	b9 12 00 00 00       	mov    $0x12,%ecx
    ea5d:	48 89 d7             	mov    %rdx,%rdi
    ea60:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    ea63:	c7 85 f0 fa ff ff 1c 	movl   $0x1c,-0x510(%rbp)
    ea6a:	00 00 00 
  pipelineInfo.pNext = nullptr;
    ea6d:	48 c7 85 f8 fa ff ff 	movq   $0x0,-0x508(%rbp)
    ea74:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
    ea78:	c7 85 04 fb ff ff 02 	movl   $0x2,-0x4fc(%rbp)
    ea7f:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    ea82:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    ea89:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
    ea90:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    ea97:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
    ea9e:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    eaa5:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
    eaac:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    eab3:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
    eaba:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
    eac1:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
    eac8:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    eacf:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    ead6:	48 c7 85 40 fb ff ff 	movq   $0x0,-0x4c0(%rbp)
    eadd:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
    eae1:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    eae8:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    eaef:	48 c7 85 50 fb ff ff 	movq   $0x0,-0x4b0(%rbp)
    eaf6:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
    eafa:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb01:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
    eb08:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
    eb0f:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb16:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
    eb1d:	48 89 85 60 fb ff ff 	mov    %rax,-0x4a0(%rbp)
  pipelineInfo.subpass = 0;
    eb24:	c7 85 68 fb ff ff 00 	movl   $0x0,-0x498(%rbp)
    eb2b:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    eb2e:	48 c7 85 70 fb ff ff 	movq   $0x0,-0x490(%rbp)
    eb35:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    eb39:	c7 85 78 fb ff ff ff 	movl   $0xffffffff,-0x488(%rbp)
    eb40:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    eb43:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
    eb4a:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
    eb51:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    eb58:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    eb5f:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
    eb66:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
    eb6d:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    eb74:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    eb7b:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
    eb82:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
    eb89:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    eb90:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    eb97:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
    eb9e:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
    eba5:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    ebac:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    ebb3:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    ebba:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
    ebc1:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    ebc8:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    ebcf:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
    ebd6:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
    ebdd:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    ebe4:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    ebeb:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
    ebf2:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
    ebf9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    ebfd:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    ec01:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
    ec08:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
    ec0f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    ec13:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    ec17:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
    ec1e:	48 8b 95 78 fb ff ff 	mov    -0x488(%rbp),%rdx
    ec25:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ec29:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    ec2d:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ec34:	49 89 c4             	mov    %rax,%r12
    ec37:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    ec3d:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ec41:	48 89 c7             	mov    %rax,%rdi
    ec44:	e8 1f 29 00 00       	call   11568 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
    ec49:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    ec4d:	4c 89 e6             	mov    %r12,%rsi
    ec50:	4c 89 ef             	mov    %r13,%rdi
    ec53:	4c 89 e1             	mov    %r12,%rcx
    ec56:	4c 89 eb             	mov    %r13,%rbx
    ec59:	48 89 df             	mov    %rbx,%rdi
    ec5c:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    ec63:	48 89 d1             	mov    %rdx,%rcx
    ec66:	48 89 fa             	mov    %rdi,%rdx
    ec69:	48 89 c7             	mov    %rax,%rdi
    ec6c:	e8 2f 29 00 00       	call   115a0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    ec71:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ec75:	48 89 c7             	mov    %rax,%rdi
    ec78:	e8 07 29 00 00       	call   11584 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    ec7d:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    ec84:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
    ec8b:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    ec92:	48 8b 70 50          	mov    0x50(%rax),%rsi
    ec96:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ec9a:	48 8d 8d d0 fa ff ff 	lea    -0x530(%rbp),%rcx
    eca1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    eca7:	48 89 c7             	mov    %rax,%rdi
    ecaa:	e8 d8 29 00 00       	call   11687 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
    ecaf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ecb3:	be 00 00 00 00       	mov    $0x0,%esi
    ecb8:	48 89 c7             	mov    %rax,%rdi
    ecbb:	e8 38 2b 00 00       	call   117f8 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    ecc0:	48 8b 10             	mov    (%rax),%rdx
    ecc3:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    ecca:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
    ecd1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ecd5:	48 89 c7             	mov    %rax,%rdi
    ecd8:	e8 d7 2a 00 00       	call   117b4 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
    ecdd:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    ece4:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eceb:	48 8b 40 50          	mov    0x50(%rax),%rax
    ecef:	ba 00 00 00 00       	mov    $0x0,%edx
    ecf4:	48 89 ce             	mov    %rcx,%rsi
    ecf7:	48 89 c7             	mov    %rax,%rdi
    ecfa:	e8 b9 7d ff ff       	call   6ab8 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
    ecff:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
    ed06:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    ed0d:	48 8b 40 50          	mov    0x50(%rax),%rax
    ed11:	ba 00 00 00 00       	mov    $0x0,%edx
    ed16:	48 89 ce             	mov    %rcx,%rsi
    ed19:	48 89 c7             	mov    %rax,%rdi
    ed1c:	e8 97 7d ff ff       	call   6ab8 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
    ed21:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    ed28:	48 89 c7             	mov    %rax,%rdi
    ed2b:	e8 f8 28 00 00       	call   11628 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    ed30:	e9 99 00 00 00       	jmp    edce <_ZN9VulkanApp22createGraphicsPipelineEv+0xb9a>
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    ed35:	48 89 c3             	mov    %rax,%rbx
    ed38:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    ed3f:	48 89 c7             	mov    %rax,%rdi
    ed42:	e8 a9 54 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ed47:	eb 03                	jmp    ed4c <_ZN9VulkanApp22createGraphicsPipelineEv+0xb18>
    ed49:	48 89 c3             	mov    %rax,%rbx
    ed4c:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    ed53:	48 89 c7             	mov    %rax,%rdi
    ed56:	e8 f5 56 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    ed5b:	48 89 d8             	mov    %rbx,%rax
    ed5e:	48 89 c7             	mov    %rax,%rdi
    ed61:	e8 ca 59 ff ff       	call   4730 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    ed66:	48 89 c3             	mov    %rax,%rbx
    ed69:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    ed70:	48 89 c7             	mov    %rax,%rdi
    ed73:	e8 78 54 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ed78:	eb 03                	jmp    ed7d <_ZN9VulkanApp22createGraphicsPipelineEv+0xb49>
    ed7a:	48 89 c3             	mov    %rax,%rbx
    ed7d:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    ed84:	48 89 c7             	mov    %rax,%rdi
    ed87:	e8 c4 56 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
    ed8c:	48 89 d8             	mov    %rbx,%rax
    ed8f:	48 89 c7             	mov    %rax,%rdi
    ed92:	e8 99 59 ff ff       	call   4730 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    ed97:	48 89 c3             	mov    %rax,%rbx
    ed9a:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ed9e:	48 89 c7             	mov    %rax,%rdi
    eda1:	e8 de 27 00 00       	call   11584 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
    eda6:	48 89 d8             	mov    %rbx,%rax
    eda9:	48 89 c7             	mov    %rax,%rdi
    edac:	e8 7f 59 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    edb1:	48 89 c3             	mov    %rax,%rbx
    edb4:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    edbb:	48 89 c7             	mov    %rax,%rdi
    edbe:	e8 65 28 00 00       	call   11628 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    edc3:	48 89 d8             	mov    %rbx,%rax
    edc6:	48 89 c7             	mov    %rax,%rdi
    edc9:	e8 62 59 ff ff       	call   4730 <_Unwind_Resume@plt>
    edce:	48 81 c4 28 05 00 00 	add    $0x528,%rsp
    edd5:	5b                   	pop    %rbx
    edd6:	41 5c                	pop    %r12
    edd8:	41 5d                	pop    %r13
    edda:	5d                   	pop    %rbp
    eddb:	c3                   	ret

000000000000eddc <_ZN9VulkanApp17createFramebufferEv>:

void VulkanApp::createFramebuffer() {
    eddc:	55                   	push   %rbp
    eddd:	48 89 e5             	mov    %rsp,%rbp
    ede0:	41 55                	push   %r13
    ede2:	41 54                	push   %r12
    ede4:	53                   	push   %rbx
    ede5:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    edec:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
    edf3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    edfa:	48 8d 98 f0 00 00 00 	lea    0xf0(%rax),%rbx
    ee01:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee08:	48 05 a0 00 00 00    	add    $0xa0,%rax
    ee0e:	48 89 c7             	mov    %rax,%rdi
    ee11:	e8 02 2a 00 00       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    ee16:	48 89 c6             	mov    %rax,%rsi
    ee19:	48 89 df             	mov    %rbx,%rdi
    ee1c:	e8 1b 2a 00 00       	call   1183c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    ee21:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    ee28:	00 
    ee29:	e9 3a 01 00 00       	jmp    ef68 <_ZN9VulkanApp17createFramebufferEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
    ee2e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee35:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    ee3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee40:	48 89 c6             	mov    %rax,%rsi
    ee43:	48 89 d7             	mov    %rdx,%rdi
    ee46:	e8 fd 26 00 00       	call   11548 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    ee4b:	48 8b 00             	mov    (%rax),%rax
    ee4e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ee52:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ee56:	49 89 c4             	mov    %rax,%r12
    ee59:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    ee5f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    ee63:	48 89 c7             	mov    %rax,%rdi
    ee66:	e8 57 2a 00 00       	call   118c2 <_ZNSaIP13VkImageView_TEC1Ev>
    ee6b:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    ee6f:	4c 89 e6             	mov    %r12,%rsi
    ee72:	4c 89 ef             	mov    %r13,%rdi
    ee75:	4c 89 e1             	mov    %r12,%rcx
    ee78:	4c 89 eb             	mov    %r13,%rbx
    ee7b:	48 89 df             	mov    %rbx,%rdi
    ee7e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ee82:	48 89 d1             	mov    %rdx,%rcx
    ee85:	48 89 fa             	mov    %rdi,%rdx
    ee88:	48 89 c7             	mov    %rax,%rdi
    ee8b:	e8 6a 2a 00 00       	call   118fa <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ee90:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    ee94:	48 89 c7             	mov    %rax,%rdi
    ee97:	e8 42 2a 00 00       	call   118de <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
    ee9c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eea0:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    eea7:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    eeab:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    eeaf:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    eeb3:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
    eeba:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
    eebd:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    eec4:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
    eecb:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
    eecf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    eed3:	48 89 c7             	mov    %rax,%rdi
    eed6:	e8 3d 29 00 00       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    eedb:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
    eede:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    eee2:	48 89 c7             	mov    %rax,%rdi
    eee5:	e8 dc 2a 00 00       	call   119c6 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
    eeea:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
    eeee:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    eef5:	8b 40 7c             	mov    0x7c(%rax),%eax
    eef8:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
    eefb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ef02:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    ef08:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
    ef0b:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
    ef12:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ef19:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef1d:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    ef24:	ba 00 00 00 00       	mov    $0x0,%edx
    ef29:	48 89 ce             	mov    %rcx,%rsi
    ef2c:	48 89 c7             	mov    %rax,%rdi
    ef2f:	e8 4c 70 ff ff       	call   5f80 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
    ef34:	48 89 c3             	mov    %rax,%rbx
    ef37:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ef3e:	48 8d 90 f0 00 00 00 	lea    0xf0(%rax),%rdx
    ef45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef49:	48 89 c6             	mov    %rax,%rsi
    ef4c:	48 89 d7             	mov    %rdx,%rdi
    ef4f:	e8 96 2a 00 00       	call   119ea <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    ef54:	48 89 18             	mov    %rbx,(%rax)
  }
    ef57:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ef5b:	48 89 c7             	mov    %rax,%rdi
    ef5e:	e8 1f 2a 00 00       	call   11982 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    ef63:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    ef68:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ef6f:	48 05 a0 00 00 00    	add    $0xa0,%rax
    ef75:	48 89 c7             	mov    %rax,%rdi
    ef78:	e8 9b 28 00 00       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    ef7d:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    ef81:	0f 92 c0             	setb   %al
    ef84:	84 c0                	test   %al,%al
    ef86:	0f 85 a2 fe ff ff    	jne    ee2e <_ZN9VulkanApp17createFramebufferEv+0x52>
}
    ef8c:	eb 34                	jmp    efc2 <_ZN9VulkanApp17createFramebufferEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
    ef8e:	48 89 c3             	mov    %rax,%rbx
    ef91:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    ef95:	48 89 c7             	mov    %rax,%rdi
    ef98:	e8 41 29 00 00       	call   118de <_ZNSaIP13VkImageView_TED1Ev>
    ef9d:	48 89 d8             	mov    %rbx,%rax
    efa0:	48 89 c7             	mov    %rax,%rdi
    efa3:	e8 88 57 ff ff       	call   4730 <_Unwind_Resume@plt>
  }
    efa8:	48 89 c3             	mov    %rax,%rbx
    efab:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    efaf:	48 89 c7             	mov    %rax,%rdi
    efb2:	e8 cb 29 00 00       	call   11982 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    efb7:	48 89 d8             	mov    %rbx,%rax
    efba:	48 89 c7             	mov    %rax,%rdi
    efbd:	e8 6e 57 ff ff       	call   4730 <_Unwind_Resume@plt>
}
    efc2:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    efc9:	5b                   	pop    %rbx
    efca:	41 5c                	pop    %r12
    efcc:	41 5d                	pop    %r13
    efce:	5d                   	pop    %rbp
    efcf:	c3                   	ret

000000000000efd0 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    efd0:	55                   	push   %rbp
    efd1:	48 89 e5             	mov    %rsp,%rbp
    efd4:	48 83 ec 30          	sub    $0x30,%rsp
    efd8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    efdc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    efe0:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    efe4:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    efe9:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    eff0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    eff7:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    eff8:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    efff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f003:	8b 40 68             	mov    0x68(%rax),%eax
    f006:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    f009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f00d:	48 8b 40 50          	mov    0x50(%rax),%rax
    f011:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    f015:	ba 00 00 00 00       	mov    $0x0,%edx
    f01a:	48 89 ce             	mov    %rcx,%rsi
    f01d:	48 89 c7             	mov    %rax,%rdi
    f020:	e8 f3 6f ff ff       	call   6018 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    f025:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f029:	48 89 82 10 01 00 00 	mov    %rax,0x110(%rdx)
}
    f030:	90                   	nop
    f031:	c9                   	leave
    f032:	c3                   	ret
    f033:	90                   	nop

000000000000f034 <_ZN9VulkanApp19createCommandBufferEv>:

void VulkanApp::createCommandBuffer() {
    f034:	55                   	push   %rbp
    f035:	48 89 e5             	mov    %rsp,%rbp
    f038:	48 83 ec 50          	sub    $0x50,%rsp
    f03c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
    f040:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f044:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    f048:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    f04c:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
    f053:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f057:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
    f05e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    f062:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount = 1;
    f069:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
  vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo);
    f070:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f074:	48 8b 48 50          	mov    0x50(%rax),%rcx
    f078:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f07c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f080:	48 89 ce             	mov    %rcx,%rsi
    f083:	48 89 c7             	mov    %rax,%rdi
    f086:	e8 32 5d ff ff       	call   4dbd <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
    f08b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f08f:	48 89 c7             	mov    %rax,%rdi
    f092:	e8 1d 60 ff ff       	call   50b4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
    f097:	90                   	nop
    f098:	c9                   	leave
    f099:	c3                   	ret

000000000000f09a <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>:

void VulkanApp::recordCommandBuffer(VkCommandBuffer cmdBuffer,
                                    uint32_t imageIndex) {
    f09a:	55                   	push   %rbp
    f09b:	48 89 e5             	mov    %rsp,%rbp
    f09e:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    f0a5:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    f0a9:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    f0ad:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
  /* Begin recording a command buffer */
  VkCommandBufferBeginInfo cmdBufferBeginInfo{};
    f0b3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f0b7:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    f0bb:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  cmdBufferBeginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    f0bf:	c7 45 e0 2a 00 00 00 	movl   $0x2a,-0x20(%rbp)
  cmdBufferBeginInfo.flags = 0;
    f0c6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  cmdBufferBeginInfo.pInheritanceInfo = nullptr;
    f0cd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f0d4:	00 
  vkh::beginCommandBuffer(cmdBuffer, &cmdBufferBeginInfo);
    f0d5:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    f0d9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f0dd:	48 89 d6             	mov    %rdx,%rsi
    f0e0:	48 89 c7             	mov    %rax,%rdi
    f0e3:	e8 d8 5d ff ff       	call   4ec0 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  /* Start a render pass */
  VkClearValue clearColor = {{{0.0f, 0.0f, 0.0f, 1.0f}}};
    f0e8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f0ec:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
    f0f1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f0f5:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
    f0fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f0fe:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
    f103:	f3 0f 10 05 e5 bc 00 	movss  0xbce5(%rip),%xmm0        # 1adf0 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x310>
    f10a:	00 
    f10b:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)

  VkRenderPassBeginInfo renderPassBeginInfo{};
    f110:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f114:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    f118:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    f11c:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    f120:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassBeginInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
    f124:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassBeginInfo.renderPass = graphicsPipeline.renderPass;
    f12b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f12f:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
    f136:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassBeginInfo.framebuffer = framebuffers[imageIndex];
    f13a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f13e:	48 8d 90 f0 00 00 00 	lea    0xf0(%rax),%rdx
    f145:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    f14b:	48 89 c6             	mov    %rax,%rsi
    f14e:	48 89 d7             	mov    %rdx,%rdi
    f151:	e8 94 28 00 00       	call   119ea <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    f156:	48 8b 00             	mov    (%rax),%rax
    f159:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassBeginInfo.renderArea.offset = {0, 0};
    f15d:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    f164:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassBeginInfo.renderArea.extent = swapchain.extent;
    f16b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f16f:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    f173:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  renderPassBeginInfo.clearValueCount = 1;
    f177:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassBeginInfo.pClearValues = &clearColor;
    f17e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f182:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(cmdBuffer, &renderPassBeginInfo,
    f186:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    f18a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f18e:	ba 00 00 00 00       	mov    $0x0,%edx
    f193:	48 89 ce             	mov    %rcx,%rsi
    f196:	48 89 c7             	mov    %rax,%rdi
    f199:	e8 42 54 ff ff       	call   45e0 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  /* Drawing commands */
  vkCmdBindPipeline(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
    f19e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f1a2:	48 8b 90 d0 00 00 00 	mov    0xd0(%rax),%rdx
    f1a9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f1ad:	be 00 00 00 00       	mov    $0x0,%esi
    f1b2:	48 89 c7             	mov    %rax,%rdi
    f1b5:	e8 56 51 ff ff       	call   4310 <vkCmdBindPipeline@plt>

  static const uint32_t vertexCount = 3;
  static const uint32_t instanceCount = 1;
  static const uint32_t firstVertex = 0;
  static const uint32_t firstInstance = 0;
  vkCmdDraw(cmdBuffer, vertexCount, instanceCount, firstVertex, firstInstance);
    f1ba:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f1be:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f1c4:	b9 00 00 00 00       	mov    $0x0,%ecx
    f1c9:	ba 01 00 00 00       	mov    $0x1,%edx
    f1ce:	be 03 00 00 00       	mov    $0x3,%esi
    f1d3:	48 89 c7             	mov    %rax,%rdi
    f1d6:	e8 e5 55 ff ff       	call   47c0 <vkCmdDraw@plt>

  /* End recording the command buffer */
  vkCmdEndRenderPass(cmdBuffer);
    f1db:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f1df:	48 89 c7             	mov    %rax,%rdi
    f1e2:	e8 69 4e ff ff       	call   4050 <vkCmdEndRenderPass@plt>
  vkh::endCommandBuffer(cmdBuffer);
    f1e7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f1eb:	48 89 c7             	mov    %rax,%rdi
    f1ee:	e8 57 5d ff ff       	call   4f4a <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>
}
    f1f3:	90                   	nop
    f1f4:	c9                   	leave
    f1f5:	c3                   	ret

000000000000f1f6 <_ZN9VulkanApp28createSynchronizationObjectsEv>:

void VulkanApp::createSynchronizationObjects() {
    f1f6:	55                   	push   %rbp
    f1f7:	48 89 e5             	mov    %rsp,%rbp
    f1fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  //
}
    f1fe:	90                   	nop
    f1ff:	5d                   	pop    %rbp
    f200:	c3                   	ret
    f201:	90                   	nop

000000000000f202 <_ZN9VulkanApp6renderEv>:

void VulkanApp::render() {
    f202:	55                   	push   %rbp
    f203:	48 89 e5             	mov    %rsp,%rbp
    f206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  /* Record a command buffer which draws the scene onto that image */

  /* Submit the recorded command buffer */

  /* Present the swapchain image */
}
    f20a:	90                   	nop
    f20b:	5d                   	pop    %rbp
    f20c:	c3                   	ret
    f20d:	90                   	nop

000000000000f20e <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    f20e:	55                   	push   %rbp
    f20f:	48 89 e5             	mov    %rsp,%rbp
    f212:	41 57                	push   %r15
    f214:	41 56                	push   %r14
    f216:	41 55                	push   %r13
    f218:	41 54                	push   %r12
    f21a:	53                   	push   %rbx
    f21b:	48 83 ec 38          	sub    $0x38,%rsp
    f21f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    f223:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f227:	48 8d 58 10          	lea    0x10(%rax),%rbx
    f22b:	48 8d 05 96 b8 00 00 	lea    0xb896(%rip),%rax        # 1aac8 <_ZZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_TjE13firstInstance+0x4>
    f232:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f236:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f23a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    f23e:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    f245:	00 
    f246:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    f24a:	48 89 c7             	mov    %rax,%rdi
    f24d:	e8 44 8f ff ff       	call   8196 <_ZNSaIPKcEC1Ev>
    f252:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    f256:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    f25a:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    f25e:	49 89 f0             	mov    %rsi,%r8
    f261:	49 89 f9             	mov    %rdi,%r9
    f264:	48 89 fa             	mov    %rdi,%rdx
    f267:	48 89 c1             	mov    %rax,%rcx
    f26a:	4c 89 c6             	mov    %r8,%rsi
    f26d:	48 89 df             	mov    %rbx,%rdi
    f270:	e8 c5 18 00 00       	call   10b3a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f275:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    f279:	48 89 c7             	mov    %rax,%rdi
    f27c:	e8 31 8f ff ff       	call   81b2 <_ZNSaIPKcED1Ev>
    f281:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f285:	48 8d 58 28          	lea    0x28(%rax),%rbx
    f289:	4c 8d 35 50 8a 01 00 	lea    0x18a50(%rip),%r14        # 27ce0 <C.102.0>
    f290:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    f296:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    f29a:	48 89 c7             	mov    %rax,%rdi
    f29d:	e8 f4 8e ff ff       	call   8196 <_ZNSaIPKcEC1Ev>
    f2a2:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    f2a6:	4d 89 f0             	mov    %r14,%r8
    f2a9:	4d 89 f9             	mov    %r15,%r9
    f2ac:	4c 89 f6             	mov    %r14,%rsi
    f2af:	4c 89 ff             	mov    %r15,%rdi
    f2b2:	48 89 fa             	mov    %rdi,%rdx
    f2b5:	48 89 c1             	mov    %rax,%rcx
    f2b8:	4c 89 c6             	mov    %r8,%rsi
    f2bb:	48 89 df             	mov    %rbx,%rdi
    f2be:	e8 77 18 00 00       	call   10b3a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f2c3:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    f2c7:	48 89 c7             	mov    %rax,%rdi
    f2ca:	e8 e3 8e ff ff       	call   81b2 <_ZNSaIPKcED1Ev>
    f2cf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2d3:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
    f2da:	4c 8d 25 0f 8a 01 00 	lea    0x18a0f(%rip),%r12        # 27cf0 <C.103.1>
    f2e1:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    f2e7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f2eb:	48 89 c7             	mov    %rax,%rdi
    f2ee:	e8 a3 8e ff ff       	call   8196 <_ZNSaIPKcEC1Ev>
    f2f3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f2f7:	4d 89 e0             	mov    %r12,%r8
    f2fa:	4d 89 e9             	mov    %r13,%r9
    f2fd:	4c 89 e6             	mov    %r12,%rsi
    f300:	4c 89 ef             	mov    %r13,%rdi
    f303:	48 89 fa             	mov    %rdi,%rdx
    f306:	48 89 c1             	mov    %rax,%rcx
    f309:	4c 89 c6             	mov    %r8,%rsi
    f30c:	48 89 df             	mov    %rbx,%rdi
    f30f:	e8 26 18 00 00       	call   10b3a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f314:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f318:	48 89 c7             	mov    %rax,%rdi
    f31b:	e8 92 8e ff ff       	call   81b2 <_ZNSaIPKcED1Ev>
    f320:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f324:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f32a:	48 89 c7             	mov    %rax,%rdi
    f32d:	e8 a8 16 00 00       	call   109da <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    f332:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f336:	48 05 b8 00 00 00    	add    $0xb8,%rax
    f33c:	48 89 c7             	mov    %rax,%rdi
    f33f:	e8 ce 16 00 00       	call   10a12 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    f344:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f348:	48 05 d0 00 00 00    	add    $0xd0,%rax
    f34e:	48 89 c7             	mov    %rax,%rdi
    f351:	e8 d8 16 00 00       	call   10a2e <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
    f356:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f35a:	48 05 f0 00 00 00    	add    $0xf0,%rax
    f360:	48 89 c7             	mov    %rax,%rdi
    f363:	e8 38 17 00 00       	call   10aa0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
    f368:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f36c:	48 05 18 01 00 00    	add    $0x118,%rax
    f372:	48 89 c7             	mov    %rax,%rdi
    f375:	e8 42 17 00 00       	call   10abc <_ZN9VulkanApp11SyncWrapperC1Ev>
  createWindow();
    f37a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f37e:	48 89 c7             	mov    %rax,%rdi
    f381:	e8 9a db ff ff       	call   cf20 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    f386:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f38a:	48 89 c7             	mov    %rax,%rdi
    f38d:	e8 ce db ff ff       	call   cf60 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    f392:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f396:	48 89 c7             	mov    %rax,%rdi
    f399:	e8 a8 dd ff ff       	call   d146 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    f39e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3a2:	48 89 c7             	mov    %rax,%rdi
    f3a5:	e8 30 de ff ff       	call   d1da <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    f3aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3ae:	48 89 c7             	mov    %rax,%rdi
    f3b1:	e8 7c e0 ff ff       	call   d432 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    f3b6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3ba:	48 89 c7             	mov    %rax,%rdi
    f3bd:	e8 80 ec ff ff       	call   e042 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    f3c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3c6:	48 89 c7             	mov    %rax,%rdi
    f3c9:	e8 ba ec ff ff       	call   e088 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    f3ce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3d2:	48 89 c7             	mov    %rax,%rdi
    f3d5:	e8 5a ee ff ff       	call   e234 <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffer();
    f3da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3de:	48 89 c7             	mov    %rax,%rdi
    f3e1:	e8 f6 f9 ff ff       	call   eddc <_ZN9VulkanApp17createFramebufferEv>
  createCommandPool();
    f3e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3ea:	48 89 c7             	mov    %rax,%rdi
    f3ed:	e8 de fb ff ff       	call   efd0 <_ZN9VulkanApp17createCommandPoolEv>
  createCommandBuffer();
    f3f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3f6:	48 89 c7             	mov    %rax,%rdi
    f3f9:	e8 36 fc ff ff       	call   f034 <_ZN9VulkanApp19createCommandBufferEv>
  createSynchronizationObjects();
    f3fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f402:	48 89 c7             	mov    %rax,%rdi
    f405:	e8 ec fd ff ff       	call   f1f6 <_ZN9VulkanApp28createSynchronizationObjectsEv>
}
    f40a:	e9 b2 00 00 00       	jmp    f4c1 <_ZN9VulkanAppC1Ev+0x2b3>
VulkanApp::VulkanApp() {
    f40f:	48 89 c3             	mov    %rax,%rbx
    f412:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    f416:	48 89 c7             	mov    %rax,%rdi
    f419:	e8 94 8d ff ff       	call   81b2 <_ZNSaIPKcED1Ev>
    f41e:	48 89 d8             	mov    %rbx,%rax
    f421:	48 89 c7             	mov    %rax,%rdi
    f424:	e8 07 53 ff ff       	call   4730 <_Unwind_Resume@plt>
    f429:	48 89 c3             	mov    %rax,%rbx
    f42c:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    f430:	48 89 c7             	mov    %rax,%rdi
    f433:	e8 7a 8d ff ff       	call   81b2 <_ZNSaIPKcED1Ev>
    f438:	eb 6c                	jmp    f4a6 <_ZN9VulkanAppC1Ev+0x298>
    f43a:	48 89 c3             	mov    %rax,%rbx
    f43d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f441:	48 89 c7             	mov    %rax,%rdi
    f444:	e8 69 8d ff ff       	call   81b2 <_ZNSaIPKcED1Ev>
    f449:	eb 4b                	jmp    f496 <_ZN9VulkanAppC1Ev+0x288>
}
    f44b:	48 89 c3             	mov    %rax,%rbx
    f44e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f452:	48 05 f0 00 00 00    	add    $0xf0,%rax
    f458:	48 89 c7             	mov    %rax,%rdi
    f45b:	e8 da 26 00 00       	call   11b3a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    f460:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f464:	48 05 b8 00 00 00    	add    $0xb8,%rax
    f46a:	48 89 c7             	mov    %rax,%rdi
    f46d:	e8 66 97 ff ff       	call   8bd8 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    f472:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f476:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f47c:	48 89 c7             	mov    %rax,%rdi
    f47f:	e8 fe 24 00 00       	call   11982 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    f484:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f488:	48 05 88 00 00 00    	add    $0x88,%rax
    f48e:	48 89 c7             	mov    %rax,%rdi
    f491:	e8 2c 17 00 00       	call   10bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    f496:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f49a:	48 83 c0 28          	add    $0x28,%rax
}
    f49e:	48 89 c7             	mov    %rax,%rdi
    f4a1:	e8 1c 17 00 00       	call   10bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f4a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4aa:	48 83 c0 10          	add    $0x10,%rax
    f4ae:	48 89 c7             	mov    %rax,%rdi
    f4b1:	e8 0c 17 00 00       	call   10bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f4b6:	48 89 d8             	mov    %rbx,%rax
    f4b9:	48 89 c7             	mov    %rax,%rdi
    f4bc:	e8 6f 52 ff ff       	call   4730 <_Unwind_Resume@plt>
    f4c1:	48 83 c4 38          	add    $0x38,%rsp
    f4c5:	5b                   	pop    %rbx
    f4c6:	41 5c                	pop    %r12
    f4c8:	41 5d                	pop    %r13
    f4ca:	41 5e                	pop    %r14
    f4cc:	41 5f                	pop    %r15
    f4ce:	5d                   	pop    %rbp
    f4cf:	c3                   	ret

000000000000f4d0 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    f4d0:	55                   	push   %rbp
    f4d1:	48 89 e5             	mov    %rsp,%rbp
    f4d4:	48 83 ec 50          	sub    $0x50,%rsp
    f4d8:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  vkh::destroyCommandPool(device, commandPool);
    f4dc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4e0:	48 8b 88 10 01 00 00 	mov    0x110(%rax),%rcx
    f4e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4eb:	48 8b 40 50          	mov    0x50(%rax),%rax
    f4ef:	ba 00 00 00 00       	mov    $0x0,%edx
    f4f4:	48 89 ce             	mov    %rcx,%rsi
    f4f7:	48 89 c7             	mov    %rax,%rdi
    f4fa:	e8 2e 77 ff ff       	call   6c2d <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    f4ff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f503:	48 05 f0 00 00 00    	add    $0xf0,%rax
    f509:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f50d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f511:	48 89 c7             	mov    %rax,%rdi
    f514:	e8 65 26 00 00       	call   11b7e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
    f519:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f51d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f521:	48 89 c7             	mov    %rax,%rdi
    f524:	e8 7b 26 00 00       	call   11ba4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
    f529:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f52d:	eb 3b                	jmp    f56a <_ZN9VulkanAppD1Ev+0x9a>
    f52f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f533:	48 89 c7             	mov    %rax,%rdi
    f536:	e8 ed 26 00 00       	call   11c28 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
    f53b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
    f53f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f543:	48 8b 08             	mov    (%rax),%rcx
    f546:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f54a:	48 8b 40 50          	mov    0x50(%rax),%rax
    f54e:	ba 00 00 00 00       	mov    $0x0,%edx
    f553:	48 89 ce             	mov    %rcx,%rsi
    f556:	48 89 c7             	mov    %rax,%rdi
    f559:	e8 a1 76 ff ff       	call   6bff <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    f55e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f562:	48 89 c7             	mov    %rax,%rdi
    f565:	e8 9e 26 00 00       	call   11c08 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
    f56a:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    f56e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f572:	48 89 d6             	mov    %rdx,%rsi
    f575:	48 89 c7             	mov    %rax,%rdi
    f578:	e8 50 26 00 00       	call   11bcd <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f57d:	84 c0                	test   %al,%al
    f57f:	75 ae                	jne    f52f <_ZN9VulkanAppD1Ev+0x5f>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
    f581:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f585:	48 8b 88 d0 00 00 00 	mov    0xd0(%rax),%rcx
    f58c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f590:	48 8b 40 50          	mov    0x50(%rax),%rax
    f594:	ba 00 00 00 00       	mov    $0x0,%edx
    f599:	48 89 ce             	mov    %rcx,%rsi
    f59c:	48 89 c7             	mov    %rax,%rdi
    f59f:	e8 9e 75 ff ff       	call   6b42 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
    f5a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5a8:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    f5af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5b3:	48 8b 40 50          	mov    0x50(%rax),%rax
    f5b7:	ba 00 00 00 00       	mov    $0x0,%edx
    f5bc:	48 89 ce             	mov    %rcx,%rsi
    f5bf:	48 89 c7             	mov    %rax,%rdi
    f5c2:	e8 1f 75 ff ff       	call   6ae6 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
    f5c7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5cb:	48 8b 88 e8 00 00 00 	mov    0xe8(%rax),%rcx
    f5d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5d6:	48 8b 40 50          	mov    0x50(%rax),%rax
    f5da:	ba 00 00 00 00       	mov    $0x0,%edx
    f5df:	48 89 ce             	mov    %rcx,%rsi
    f5e2:	48 89 c7             	mov    %rax,%rdi
    f5e5:	e8 2a 75 ff ff       	call   6b14 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    f5ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5ee:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f5f4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f5f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f5fc:	48 89 c7             	mov    %rax,%rdi
    f5ff:	e8 36 26 00 00       	call   11c3a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    f604:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f608:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f60c:	48 89 c7             	mov    %rax,%rdi
    f60f:	e8 4c 26 00 00       	call   11c60 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    f614:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f618:	eb 3b                	jmp    f655 <_ZN9VulkanAppD1Ev+0x185>
    f61a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f61e:	48 89 c7             	mov    %rax,%rdi
    f621:	e8 be 26 00 00       	call   11ce4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    f626:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
    f62a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f62e:	48 8b 08             	mov    (%rax),%rcx
    f631:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f635:	48 8b 40 50          	mov    0x50(%rax),%rax
    f639:	ba 00 00 00 00       	mov    $0x0,%edx
    f63e:	48 89 ce             	mov    %rcx,%rsi
    f641:	48 89 c7             	mov    %rax,%rdi
    f644:	e8 41 74 ff ff       	call   6a8a <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    f649:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f64d:	48 89 c7             	mov    %rax,%rdi
    f650:	e8 6f 26 00 00       	call   11cc4 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    f655:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f659:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f65d:	48 89 d6             	mov    %rdx,%rsi
    f660:	48 89 c7             	mov    %rax,%rdi
    f663:	e8 21 26 00 00       	call   11c89 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f668:	84 c0                	test   %al,%al
    f66a:	75 ae                	jne    f61a <_ZN9VulkanAppD1Ev+0x14a>
  }
  vkh::destroySwapchain(device, swapchain.self);
    f66c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f670:	48 8b 48 70          	mov    0x70(%rax),%rcx
    f674:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f678:	48 8b 40 50          	mov    0x50(%rax),%rax
    f67c:	ba 00 00 00 00       	mov    $0x0,%edx
    f681:	48 89 ce             	mov    %rcx,%rsi
    f684:	48 89 c7             	mov    %rax,%rdi
    f687:	e8 d0 73 ff ff       	call   6a5c <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    f68c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f690:	48 8b 40 50          	mov    0x50(%rax),%rax
    f694:	be 00 00 00 00       	mov    $0x0,%esi
    f699:	48 89 c7             	mov    %rax,%rdi
    f69c:	e8 67 73 ff ff       	call   6a08 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    f6a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6a5:	48 8b 48 40          	mov    0x40(%rax),%rcx
    f6a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6ad:	48 8b 40 08          	mov    0x8(%rax),%rax
    f6b1:	ba 00 00 00 00       	mov    $0x0,%edx
    f6b6:	48 89 ce             	mov    %rcx,%rsi
    f6b9:	48 89 c7             	mov    %rax,%rdi
    f6bc:	e8 f6 d3 ff ff       	call   cab7 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    f6c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6c5:	48 8b 48 48          	mov    0x48(%rax),%rcx
    f6c9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6cd:	48 8b 40 08          	mov    0x8(%rax),%rax
    f6d1:	ba 00 00 00 00       	mov    $0x0,%edx
    f6d6:	48 89 ce             	mov    %rcx,%rsi
    f6d9:	48 89 c7             	mov    %rax,%rdi
    f6dc:	e8 4d 73 ff ff       	call   6a2e <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    f6e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6e5:	48 8b 40 08          	mov    0x8(%rax),%rax
    f6e9:	be 00 00 00 00       	mov    $0x0,%esi
    f6ee:	48 89 c7             	mov    %rax,%rdi
    f6f1:	e8 ec 72 ff ff       	call   69e2 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    f6f6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6fa:	48 8b 00             	mov    (%rax),%rax
    f6fd:	48 89 c7             	mov    %rax,%rdi
    f700:	e8 c2 72 ff ff       	call   69c7 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    f705:	e8 d6 4c ff ff       	call   43e0 <glfwTerminate@plt>
}
    f70a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f70e:	48 05 f0 00 00 00    	add    $0xf0,%rax
    f714:	48 89 c7             	mov    %rax,%rdi
    f717:	e8 1e 24 00 00       	call   11b3a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    f71c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f720:	48 05 b8 00 00 00    	add    $0xb8,%rax
    f726:	48 89 c7             	mov    %rax,%rdi
    f729:	e8 aa 94 ff ff       	call   8bd8 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    f72e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f732:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f738:	48 89 c7             	mov    %rax,%rdi
    f73b:	e8 42 22 00 00       	call   11982 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    f740:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f744:	48 05 88 00 00 00    	add    $0x88,%rax
    f74a:	48 89 c7             	mov    %rax,%rdi
    f74d:	e8 70 14 00 00       	call   10bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    f752:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f756:	48 83 c0 28          	add    $0x28,%rax
}
    f75a:	48 89 c7             	mov    %rax,%rdi
    f75d:	e8 60 14 00 00       	call   10bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f762:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f766:	48 83 c0 10          	add    $0x10,%rax
    f76a:	48 89 c7             	mov    %rax,%rdi
    f76d:	e8 50 14 00 00       	call   10bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f772:	90                   	nop
    f773:	c9                   	leave
    f774:	c3                   	ret
    f775:	90                   	nop

000000000000f776 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    f776:	55                   	push   %rbp
    f777:	48 89 e5             	mov    %rsp,%rbp
    f77a:	53                   	push   %rbx
    f77b:	48 83 ec 78          	sub    $0x78,%rsp
    f77f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  vkh::Timer time_total;
    f783:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f787:	48 89 c7             	mov    %rax,%rdi
    f78a:	e8 67 25 00 00       	call   11cf6 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  static const double sec_to_mics = 1'000'000.0;
  while (!glfwWindowShouldClose(window)) {
    f78f:	e9 ad 00 00 00       	jmp    f841 <_ZN9VulkanApp3runEv+0xcb>
    vkh::Timer time_circle;
    f794:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f798:	48 89 c7             	mov    %rax,%rdi
    f79b:	e8 56 25 00 00       	call   11cf6 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    f7a0:	e8 cb 4b ff ff       	call   4370 <glfwPollEvents@plt>

    render();
    f7a5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f7a9:	48 89 c7             	mov    %rax,%rdi
    f7ac:	e8 51 fa ff ff       	call   f202 <_ZN9VulkanApp6renderEv>

    double current = static_cast<double>(time_total.current());
    f7b1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f7b5:	48 89 c7             	mov    %rax,%rdi
    f7b8:	e8 2d 13 00 00       	call   10aea <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    f7bd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f7c1:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f7c6:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    if (current >= sec_to_mics) {
    f7cb:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    f7d0:	66 0f 2f 05 20 b6 00 	comisd 0xb620(%rip),%xmm0        # 1adf8 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x318>
    f7d7:	00 
    f7d8:	72 5b                	jb     f835 <_ZN9VulkanApp3runEv+0xbf>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    f7da:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f7de:	48 89 c7             	mov    %rax,%rdi
    f7e1:	e8 04 13 00 00       	call   10aea <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    f7e6:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f7ea:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f7ef:	f2 0f 10 05 01 b6 00 	movsd  0xb601(%rip),%xmm0        # 1adf8 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x318>
    f7f6:	00 
    f7f7:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    f7fb:	66 48 0f 7e c0       	movq   %xmm0,%rax
    f800:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f805:	48 8d 05 f4 8b 01 00 	lea    0x18bf4(%rip),%rax        # 28400 <_ZSt4cout@GLIBCXX_3.4>
    f80c:	48 89 c7             	mov    %rax,%rdi
    f80f:	e8 7c 4f ff ff       	call   4790 <_ZNSolsEd@plt>
    f814:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    f817:	48 8d 05 ca b2 00 00 	lea    0xb2ca(%rip),%rax        # 1aae8 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x8>
    f81e:	48 89 c6             	mov    %rax,%rsi
    f821:	48 89 d7             	mov    %rdx,%rdi
    f824:	e8 67 4b ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    f829:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f82d:	48 89 c7             	mov    %rax,%rdi
    f830:	e8 d1 25 00 00       	call   11e06 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    f835:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f839:	48 89 c7             	mov    %rax,%rdi
    f83c:	e8 2b 25 00 00       	call   11d6c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    f841:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f845:	48 8b 00             	mov    (%rax),%rax
    f848:	48 89 c7             	mov    %rax,%rdi
    f84b:	e8 30 4f ff ff       	call   4780 <glfwWindowShouldClose@plt>
    f850:	85 c0                	test   %eax,%eax
    f852:	0f 94 c0             	sete   %al
    f855:	84 c0                	test   %al,%al
    f857:	0f 85 37 ff ff ff    	jne    f794 <_ZN9VulkanApp3runEv+0x1e>
  vkDeviceWaitIdle(device);
    f85d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f861:	48 8b 40 50          	mov    0x50(%rax),%rax
    f865:	48 89 c7             	mov    %rax,%rdi
    f868:	e8 43 48 ff ff       	call   40b0 <vkDeviceWaitIdle@plt>
}
    f86d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f871:	48 89 c7             	mov    %rax,%rdi
    f874:	e8 f3 24 00 00       	call   11d6c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f879:	eb 2b                	jmp    f8a6 <_ZN9VulkanApp3runEv+0x130>
  }
    f87b:	48 89 c3             	mov    %rax,%rbx
    f87e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f882:	48 89 c7             	mov    %rax,%rdi
    f885:	e8 e2 24 00 00       	call   11d6c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f88a:	eb 03                	jmp    f88f <_ZN9VulkanApp3runEv+0x119>
}
    f88c:	48 89 c3             	mov    %rax,%rbx
    f88f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f893:	48 89 c7             	mov    %rax,%rdi
    f896:	e8 d1 24 00 00       	call   11d6c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f89b:	48 89 d8             	mov    %rbx,%rax
    f89e:	48 89 c7             	mov    %rax,%rdi
    f8a1:	e8 8a 4e ff ff       	call   4730 <_Unwind_Resume@plt>
    f8a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f8aa:	c9                   	leave
    f8ab:	c3                   	ret

000000000000f8ac <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    f8ac:	55                   	push   %rbp
    f8ad:	48 89 e5             	mov    %rsp,%rbp
    f8b0:	41 54                	push   %r12
    f8b2:	53                   	push   %rbx
    f8b3:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    f8ba:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    f8c1:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    f8c8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8cf:	48 89 c7             	mov    %rax,%rdi
    f8d2:	e8 f9 4b ff ff       	call   44d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    f8d7:	be 10 00 00 00       	mov    $0x10,%esi
    f8dc:	bf 08 00 00 00       	mov    $0x8,%edi
    f8e1:	e8 d2 67 ff ff       	call   60b8 <_ZStorSt13_Ios_OpenmodeS_>
    f8e6:	89 c2                	mov    %eax,%edx
    f8e8:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    f8ef:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8f6:	48 89 ce             	mov    %rcx,%rsi
    f8f9:	48 89 c7             	mov    %rax,%rdi
    f8fc:	e8 af 4c ff ff       	call   45b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    f901:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f908:	48 89 c7             	mov    %rax,%rdi
    f90b:	e8 e0 4d ff ff       	call   46f0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    f910:	83 f0 01             	xor    $0x1,%eax
    f913:	84 c0                	test   %al,%al
    f915:	0f 84 97 00 00 00    	je     f9b2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    f91b:	bf 10 00 00 00       	mov    $0x10,%edi
    f920:	e8 5b 48 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    f925:	48 89 c3             	mov    %rax,%rbx
    f928:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f92f:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    f936:	48 8d 0d b1 b1 00 00 	lea    0xb1b1(%rip),%rcx        # 1aaee <_ZZN9VulkanApp3runEvE11sec_to_mics+0xe>
    f93d:	48 89 ce             	mov    %rcx,%rsi
    f940:	48 89 c7             	mov    %rax,%rdi
    f943:	e8 c6 67 ff ff       	call   610e <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    f948:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f94f:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    f956:	ba 0a 00 00 00       	mov    $0xa,%edx
    f95b:	48 89 ce             	mov    %rcx,%rsi
    f95e:	48 89 c7             	mov    %rax,%rdi
    f961:	e8 c0 24 00 00       	call   11e26 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    f966:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f96d:	48 89 c6             	mov    %rax,%rsi
    f970:	48 89 df             	mov    %rbx,%rdi
    f973:	e8 18 4d ff ff       	call   4690 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    f978:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f97f:	48 89 c7             	mov    %rax,%rdi
    f982:	e8 69 48 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f987:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f98e:	48 89 c7             	mov    %rax,%rdi
    f991:	e8 5a 48 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f996:	48 8b 05 0b 86 01 00 	mov    0x1860b(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f99d:	48 89 c2             	mov    %rax,%rdx
    f9a0:	48 8d 05 99 83 01 00 	lea    0x18399(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f9a7:	48 89 c6             	mov    %rax,%rsi
    f9aa:	48 89 df             	mov    %rbx,%rdi
    f9ad:	e8 1e 4d ff ff       	call   46d0 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    f9b2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f9b9:	48 83 c0 10          	add    $0x10,%rax
    f9bd:	48 8d 15 3a b1 00 00 	lea    0xb13a(%rip),%rdx        # 1aafe <_ZZN9VulkanApp3runEvE11sec_to_mics+0x1e>
    f9c4:	48 89 d6             	mov    %rdx,%rsi
    f9c7:	48 89 c7             	mov    %rax,%rdi
    f9ca:	e8 c1 49 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    f9cf:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f9d6:	48 83 c0 10          	add    $0x10,%rax
    f9da:	48 8d 15 36 b1 00 00 	lea    0xb136(%rip),%rdx        # 1ab17 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x37>
    f9e1:	48 89 d6             	mov    %rdx,%rsi
    f9e4:	48 89 c7             	mov    %rax,%rdi
    f9e7:	e8 a4 49 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    f9ec:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f9f3:	be 00 00 00 00       	mov    $0x0,%esi
    f9f8:	48 89 c7             	mov    %rax,%rdi
    f9fb:	e8 f0 73 ff ff       	call   6df0 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    fa00:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    fa07:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    fa0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa0f:	48 89 c7             	mov    %rax,%rdi
    fa12:	e8 91 16 00 00       	call   110a8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    fa17:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    fa1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa22:	48 89 c7             	mov    %rax,%rdi
    fa25:	e8 a4 16 00 00       	call   110ce <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    fa2a:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    fa31:	eb 64                	jmp    fa97 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    fa33:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    fa3a:	48 89 c7             	mov    %rax,%rdi
    fa3d:	e8 14 17 00 00       	call   11156 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    fa42:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    fa49:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa50:	48 83 c0 10          	add    $0x10,%rax
    fa54:	48 8d 15 cd b0 00 00 	lea    0xb0cd(%rip),%rdx        # 1ab28 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x48>
    fa5b:	48 89 d6             	mov    %rdx,%rsi
    fa5e:	48 89 c7             	mov    %rax,%rdi
    fa61:	e8 2a 49 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa66:	48 89 c2             	mov    %rax,%rdx
    fa69:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    fa70:	48 89 c6             	mov    %rax,%rsi
    fa73:	48 89 d7             	mov    %rdx,%rdi
    fa76:	e8 15 49 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa7b:	be 0a 00 00 00       	mov    $0xa,%esi
    fa80:	48 89 c7             	mov    %rax,%rdi
    fa83:	e8 28 4a ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    fa88:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    fa8f:	48 89 c7             	mov    %rax,%rdi
    fa92:	e8 9b 16 00 00       	call   11132 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    fa97:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    fa9e:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    faa5:	48 89 d6             	mov    %rdx,%rsi
    faa8:	48 89 c7             	mov    %rax,%rdi
    faab:	e8 47 16 00 00       	call   110f7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    fab0:	84 c0                	test   %al,%al
    fab2:	0f 85 7b ff ff ff    	jne    fa33 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    fab8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fabf:	48 83 c0 10          	add    $0x10,%rax
    fac3:	48 8d 15 61 b0 00 00 	lea    0xb061(%rip),%rdx        # 1ab2b <_ZZN9VulkanApp3runEvE11sec_to_mics+0x4b>
    faca:	48 89 d6             	mov    %rdx,%rsi
    facd:	48 89 c7             	mov    %rax,%rdi
    fad0:	e8 bb 48 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    fad5:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fadc:	48 83 c0 10          	add    $0x10,%rax
    fae0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    fae4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fae8:	48 89 c7             	mov    %rax,%rdi
    faeb:	e8 16 11 00 00       	call   10c06 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    faf0:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    faf7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fafb:	48 89 c7             	mov    %rax,%rdi
    fafe:	e8 29 11 00 00       	call   10c2c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    fb03:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    fb0a:	eb 67                	jmp    fb73 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    fb0c:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    fb13:	48 89 c7             	mov    %rax,%rdi
    fb16:	e8 95 11 00 00       	call   10cb0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fb1b:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    fb22:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb29:	48 83 c0 10          	add    $0x10,%rax
    fb2d:	48 8d 15 f4 af 00 00 	lea    0xaff4(%rip),%rdx        # 1ab28 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x48>
    fb34:	48 89 d6             	mov    %rdx,%rsi
    fb37:	48 89 c7             	mov    %rax,%rdi
    fb3a:	e8 51 48 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb3f:	48 89 c2             	mov    %rax,%rdx
    fb42:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    fb49:	48 8b 00             	mov    (%rax),%rax
    fb4c:	48 89 c6             	mov    %rax,%rsi
    fb4f:	48 89 d7             	mov    %rdx,%rdi
    fb52:	e8 39 48 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb57:	be 0a 00 00 00       	mov    $0xa,%esi
    fb5c:	48 89 c7             	mov    %rax,%rdi
    fb5f:	e8 4c 49 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    fb64:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    fb6b:	48 89 c7             	mov    %rax,%rdi
    fb6e:	e8 1d 11 00 00       	call   10c90 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    fb73:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    fb7a:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    fb81:	48 89 d6             	mov    %rdx,%rsi
    fb84:	48 89 c7             	mov    %rax,%rdi
    fb87:	e8 c9 10 00 00       	call   10c55 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fb8c:	84 c0                	test   %al,%al
    fb8e:	0f 85 78 ff ff ff    	jne    fb0c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    fb94:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb9b:	48 83 c0 10          	add    $0x10,%rax
    fb9f:	be 0a 00 00 00       	mov    $0xa,%esi
    fba4:	48 89 c7             	mov    %rax,%rdi
    fba7:	e8 04 49 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    fbac:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fbb3:	48 83 c0 10          	add    $0x10,%rax
    fbb7:	48 8d 15 7d af 00 00 	lea    0xaf7d(%rip),%rdx        # 1ab3b <_ZZN9VulkanApp3runEvE11sec_to_mics+0x5b>
    fbbe:	48 89 d6             	mov    %rdx,%rsi
    fbc1:	48 89 c7             	mov    %rax,%rdi
    fbc4:	e8 c7 47 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    fbc9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fbd0:	48 83 c0 10          	add    $0x10,%rax
    fbd4:	48 8d 15 75 af 00 00 	lea    0xaf75(%rip),%rdx        # 1ab50 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x70>
    fbdb:	48 89 d6             	mov    %rdx,%rsi
    fbde:	48 89 c7             	mov    %rax,%rdi
    fbe1:	e8 aa 47 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    fbe6:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    fbed:	48 89 c7             	mov    %rax,%rdi
    fbf0:	e8 95 75 ff ff       	call   718a <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    fbf5:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    fbfc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    fc00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fc04:	48 89 c7             	mov    %rax,%rdi
    fc07:	e8 78 d0 ff ff       	call   cc84 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    fc0c:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    fc13:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fc17:	48 89 c7             	mov    %rax,%rdi
    fc1a:	e8 8b d0 ff ff       	call   ccaa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    fc1f:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    fc26:	eb 5e                	jmp    fc86 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    fc28:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    fc2f:	48 89 c7             	mov    %rax,%rdi
    fc32:	e8 fb d0 ff ff       	call   cd32 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    fc37:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    fc3b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fc42:	48 83 c0 10          	add    $0x10,%rax
    fc46:	48 8d 15 db ae 00 00 	lea    0xaedb(%rip),%rdx        # 1ab28 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x48>
    fc4d:	48 89 d6             	mov    %rdx,%rsi
    fc50:	48 89 c7             	mov    %rax,%rdi
    fc53:	e8 38 47 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc58:	48 89 c2             	mov    %rax,%rdx
    fc5b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    fc5f:	48 89 c6             	mov    %rax,%rsi
    fc62:	48 89 d7             	mov    %rdx,%rdi
    fc65:	e8 26 47 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc6a:	be 0a 00 00 00       	mov    $0xa,%esi
    fc6f:	48 89 c7             	mov    %rax,%rdi
    fc72:	e8 39 48 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    fc77:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    fc7e:	48 89 c7             	mov    %rax,%rdi
    fc81:	e8 88 d0 ff ff       	call   cd0e <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    fc86:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    fc8d:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    fc94:	48 89 d6             	mov    %rdx,%rsi
    fc97:	48 89 c7             	mov    %rax,%rdi
    fc9a:	e8 34 d0 ff ff       	call   ccd3 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    fc9f:	84 c0                	test   %al,%al
    fca1:	75 85                	jne    fc28 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    fca3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fcaa:	48 83 c0 10          	add    $0x10,%rax
    fcae:	48 8d 15 ac ae 00 00 	lea    0xaeac(%rip),%rdx        # 1ab61 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x81>
    fcb5:	48 89 d6             	mov    %rdx,%rsi
    fcb8:	48 89 c7             	mov    %rax,%rdi
    fcbb:	e8 d0 46 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    fcc0:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fcc7:	48 83 c0 28          	add    $0x28,%rax
    fccb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    fccf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fcd3:	48 89 c7             	mov    %rax,%rdi
    fcd6:	e8 95 21 00 00       	call   11e70 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    fcdb:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    fce2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fce6:	48 89 c7             	mov    %rax,%rdi
    fce9:	e8 a8 21 00 00       	call   11e96 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    fcee:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    fcf5:	eb 61                	jmp    fd58 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    fcf7:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    fcfe:	48 89 c7             	mov    %rax,%rdi
    fd01:	e8 14 22 00 00       	call   11f1a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fd06:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    fd0a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd11:	48 83 c0 10          	add    $0x10,%rax
    fd15:	48 8d 15 0c ae 00 00 	lea    0xae0c(%rip),%rdx        # 1ab28 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x48>
    fd1c:	48 89 d6             	mov    %rdx,%rsi
    fd1f:	48 89 c7             	mov    %rax,%rdi
    fd22:	e8 69 46 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd27:	48 89 c2             	mov    %rax,%rdx
    fd2a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    fd2e:	48 8b 00             	mov    (%rax),%rax
    fd31:	48 89 c6             	mov    %rax,%rsi
    fd34:	48 89 d7             	mov    %rdx,%rdi
    fd37:	e8 54 46 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd3c:	be 0a 00 00 00       	mov    $0xa,%esi
    fd41:	48 89 c7             	mov    %rax,%rdi
    fd44:	e8 67 47 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    fd49:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    fd50:	48 89 c7             	mov    %rax,%rdi
    fd53:	e8 a2 21 00 00       	call   11efa <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    fd58:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    fd5f:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    fd66:	48 89 d6             	mov    %rdx,%rsi
    fd69:	48 89 c7             	mov    %rax,%rdi
    fd6c:	e8 4e 21 00 00       	call   11ebf <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    fd71:	84 c0                	test   %al,%al
    fd73:	75 82                	jne    fcf7 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    fd75:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd7c:	48 83 c0 10          	add    $0x10,%rax
    fd80:	be 0a 00 00 00       	mov    $0xa,%esi
    fd85:	48 89 c7             	mov    %rax,%rdi
    fd88:	e8 23 47 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    fd8d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd94:	48 83 c0 10          	add    $0x10,%rax
    fd98:	48 8d 15 d2 ad 00 00 	lea    0xadd2(%rip),%rdx        # 1ab71 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x91>
    fd9f:	48 89 d6             	mov    %rdx,%rsi
    fda2:	48 89 c7             	mov    %rax,%rdi
    fda5:	e8 e6 45 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    fdaa:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fdb1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    fdb5:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fdbc:	48 89 d6             	mov    %rdx,%rsi
    fdbf:	48 89 c7             	mov    %rax,%rdi
    fdc2:	e8 6f 74 ff ff       	call   7236 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    fdc7:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fdce:	48 8b 50 58          	mov    0x58(%rax),%rdx
    fdd2:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    fdd9:	48 89 d6             	mov    %rdx,%rsi
    fddc:	48 89 c7             	mov    %rax,%rdi
    fddf:	e8 c1 75 ff ff       	call   73a5 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    fde4:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    fdeb:	00 
  size_t selectedDeviceIndex = 0;
    fdec:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    fdf3:	00 
  for (const auto &physDev : physicalDeviceList) {
    fdf4:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fdfb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    fdff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe03:	48 89 c7             	mov    %rax,%rdi
    fe06:	e8 cb 10 00 00       	call   10ed6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    fe0b:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    fe12:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe16:	48 89 c7             	mov    %rax,%rdi
    fe19:	e8 de 10 00 00       	call   10efc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    fe1e:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    fe25:	e9 c7 06 00 00       	jmp    104f1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    fe2a:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fe31:	48 89 c7             	mov    %rax,%rdi
    fe34:	e8 47 11 00 00       	call   10f80 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    fe39:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    fe3d:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    fe44:	48 89 c7             	mov    %rax,%rdi
    fe47:	e8 f4 48 ff ff       	call   4740 <_ZNSaIcEC1Ev@plt>
    fe4c:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    fe53:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fe5a:	48 8d 0d 26 ad 00 00 	lea    0xad26(%rip),%rcx        # 1ab87 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xa7>
    fe61:	48 89 ce             	mov    %rcx,%rsi
    fe64:	48 89 c7             	mov    %rax,%rdi
    fe67:	e8 34 4d ff ff       	call   4ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    fe6c:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    fe73:	48 89 c7             	mov    %rax,%rdi
    fe76:	e8 d5 45 ff ff       	call   4450 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    fe7b:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    fe82:	b8 00 00 00 00       	mov    $0x0,%eax
    fe87:	b9 0e 00 00 00       	mov    $0xe,%ecx
    fe8c:	48 89 d7             	mov    %rdx,%rdi
    fe8f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    fe92:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    fe99:	00 00 00 
    vk11Props.pNext = nullptr;
    fe9c:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    fea3:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    fea7:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    feae:	b8 00 00 00 00       	mov    $0x0,%eax
    feb3:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    feb8:	48 89 d7             	mov    %rdx,%rdi
    febb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    febe:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    fec5:	00 00 00 
    vk12Props.pNext = &vk11Props;
    fec8:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    fecf:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    fed6:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    fedd:	b8 00 00 00 00       	mov    $0x0,%eax
    fee2:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    fee7:	48 89 d7             	mov    %rdx,%rdi
    feea:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    feed:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    fef4:	00 00 00 
    vk13Props.pNext = &vk12Props;
    fef7:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    fefe:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    ff05:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff09:	48 8b 08             	mov    (%rax),%rcx
    ff0c:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    ff13:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    ff1a:	48 89 ce             	mov    %rcx,%rsi
    ff1d:	48 89 c7             	mov    %rax,%rdi
    ff20:	e8 aa 74 ff ff       	call   73cf <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    ff25:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    ff2b:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    ff31:	39 c2                	cmp    %eax,%edx
    ff33:	75 08                	jne    ff3d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    ff35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    ff3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ff41:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    ff45:	75 19                	jne    ff60 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    ff47:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    ff4e:	48 8d 15 33 ac 00 00 	lea    0xac33(%rip),%rdx        # 1ab88 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xa8>
    ff55:	48 89 d6             	mov    %rdx,%rsi
    ff58:	48 89 c7             	mov    %rax,%rdi
    ff5b:	e8 40 46 ff ff       	call   45a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    ff60:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ff67:	48 83 c0 10          	add    $0x10,%rax
    ff6b:	48 8d 15 22 ac 00 00 	lea    0xac22(%rip),%rdx        # 1ab94 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xb4>
    ff72:	48 89 d6             	mov    %rdx,%rsi
    ff75:	48 89 c7             	mov    %rax,%rdi
    ff78:	e8 13 44 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ff7d:	48 89 c2             	mov    %rax,%rdx
    ff80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff84:	48 89 c6             	mov    %rax,%rsi
    ff87:	48 89 d7             	mov    %rdx,%rdi
    ff8a:	e8 11 41 ff ff       	call   40a0 <_ZNSolsEm@plt>
    ff8f:	48 89 c2             	mov    %rax,%rdx
    ff92:	48 8d 05 ff ab 00 00 	lea    0xabff(%rip),%rax        # 1ab98 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xb8>
    ff99:	48 89 c6             	mov    %rax,%rsi
    ff9c:	48 89 d7             	mov    %rdx,%rdi
    ff9f:	e8 ec 43 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ffa4:	48 89 c2             	mov    %rax,%rdx
    ffa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffab:	48 89 c6             	mov    %rax,%rsi
    ffae:	48 89 d7             	mov    %rdx,%rdi
    ffb1:	e8 ea 40 ff ff       	call   40a0 <_ZNSolsEm@plt>
    ffb6:	48 89 c2             	mov    %rax,%rdx
    ffb9:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    ffc0:	48 89 c6             	mov    %rax,%rsi
    ffc3:	48 89 d7             	mov    %rdx,%rdi
    ffc6:	e8 65 43 ff ff       	call   4330 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    ffcb:	48 89 c2             	mov    %rax,%rdx
    ffce:	48 8d 05 cc ab 00 00 	lea    0xabcc(%rip),%rax        # 1aba1 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xc1>
    ffd5:	48 89 c6             	mov    %rax,%rsi
    ffd8:	48 89 d7             	mov    %rdx,%rdi
    ffdb:	e8 b0 43 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    ffe0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ffe7:	48 83 c0 10          	add    $0x10,%rax
    ffeb:	48 8d 15 b2 ab 00 00 	lea    0xabb2(%rip),%rdx        # 1aba4 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xc4>
    fff2:	48 89 d6             	mov    %rdx,%rsi
    fff5:	48 89 c7             	mov    %rax,%rdi
    fff8:	e8 93 43 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fffd:	48 89 c2             	mov    %rax,%rdx
   10000:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10004:	48 89 c6             	mov    %rax,%rsi
   10007:	48 89 d7             	mov    %rdx,%rdi
   1000a:	e8 91 40 ff ff       	call   40a0 <_ZNSolsEm@plt>
   1000f:	48 89 c2             	mov    %rax,%rdx
   10012:	48 8d 05 90 ab 00 00 	lea    0xab90(%rip),%rax        # 1aba9 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xc9>
   10019:	48 89 c6             	mov    %rax,%rsi
   1001c:	48 89 d7             	mov    %rdx,%rdi
   1001f:	e8 6c 43 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
   10024:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1002b:	48 83 c0 10          	add    $0x10,%rax
   1002f:	48 8d 15 8a ab 00 00 	lea    0xab8a(%rip),%rdx        # 1abc0 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xe0>
   10036:	48 89 d6             	mov    %rdx,%rsi
   10039:	48 89 c7             	mov    %rax,%rdi
   1003c:	e8 4f 43 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10041:	48 89 c2             	mov    %rax,%rdx
   10044:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
   1004a:	89 c6                	mov    %eax,%esi
   1004c:	48 89 d7             	mov    %rdx,%rdi
   1004f:	e8 2c 45 ff ff       	call   4580 <_ZNSolsEj@plt>
   10054:	be 0a 00 00 00       	mov    $0xa,%esi
   10059:	48 89 c7             	mov    %rax,%rdi
   1005c:	e8 4f 44 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
   10061:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10068:	48 83 c0 10          	add    $0x10,%rax
   1006c:	48 8d 15 5c ab 00 00 	lea    0xab5c(%rip),%rdx        # 1abcf <_ZZN9VulkanApp3runEvE11sec_to_mics+0xef>
   10073:	48 89 d6             	mov    %rdx,%rsi
   10076:	48 89 c7             	mov    %rax,%rdi
   10079:	e8 12 43 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1007e:	48 89 c2             	mov    %rax,%rdx
   10081:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   10088:	48 83 c0 24          	add    $0x24,%rax
   1008c:	48 89 c6             	mov    %rax,%rsi
   1008f:	48 89 d7             	mov    %rdx,%rdi
   10092:	e8 f9 42 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10097:	be 0a 00 00 00       	mov    $0xa,%esi
   1009c:	48 89 c7             	mov    %rax,%rdi
   1009f:	e8 0c 44 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
   100a4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   100ab:	48 83 c0 10          	add    $0x10,%rax
   100af:	48 8d 15 2a ab 00 00 	lea    0xab2a(%rip),%rdx        # 1abe0 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x100>
   100b6:	48 89 d6             	mov    %rdx,%rsi
   100b9:	48 89 c7             	mov    %rax,%rdi
   100bc:	e8 cf 42 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
   100c1:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
   100c7:	83 f8 04             	cmp    $0x4,%eax
   100ca:	0f 84 80 00 00 00    	je     10150 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
   100d0:	83 f8 04             	cmp    $0x4,%eax
   100d3:	0f 8f 96 00 00 00    	jg     1016f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   100d9:	83 f8 03             	cmp    $0x3,%eax
   100dc:	74 53                	je     10131 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
   100de:	83 f8 03             	cmp    $0x3,%eax
   100e1:	0f 8f 88 00 00 00    	jg     1016f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   100e7:	83 f8 01             	cmp    $0x1,%eax
   100ea:	74 07                	je     100f3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
   100ec:	83 f8 02             	cmp    $0x2,%eax
   100ef:	74 21                	je     10112 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
   100f1:	eb 7c                	jmp    1016f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
   100f3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   100fa:	48 83 c0 10          	add    $0x10,%rax
   100fe:	48 8d 15 ec aa 00 00 	lea    0xaaec(%rip),%rdx        # 1abf1 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x111>
   10105:	48 89 d6             	mov    %rdx,%rsi
   10108:	48 89 c7             	mov    %rax,%rdi
   1010b:	e8 80 42 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   10110:	eb 7b                	jmp    1018d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
   10112:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10119:	48 83 c0 10          	add    $0x10,%rax
   1011d:	48 8d 15 dd aa 00 00 	lea    0xaadd(%rip),%rdx        # 1ac01 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x121>
   10124:	48 89 d6             	mov    %rdx,%rsi
   10127:	48 89 c7             	mov    %rax,%rdi
   1012a:	e8 61 42 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   1012f:	eb 5c                	jmp    1018d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
   10131:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10138:	48 83 c0 10          	add    $0x10,%rax
   1013c:	48 8d 15 cc aa 00 00 	lea    0xaacc(%rip),%rdx        # 1ac0f <_ZZN9VulkanApp3runEvE11sec_to_mics+0x12f>
   10143:	48 89 d6             	mov    %rdx,%rsi
   10146:	48 89 c7             	mov    %rax,%rdi
   10149:	e8 42 42 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   1014e:	eb 3d                	jmp    1018d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
   10150:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10157:	48 83 c0 10          	add    $0x10,%rax
   1015b:	48 8d 15 ba aa 00 00 	lea    0xaaba(%rip),%rdx        # 1ac1c <_ZZN9VulkanApp3runEvE11sec_to_mics+0x13c>
   10162:	48 89 d6             	mov    %rdx,%rsi
   10165:	48 89 c7             	mov    %rax,%rdi
   10168:	e8 23 42 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   1016d:	eb 1e                	jmp    1018d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
   1016f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10176:	48 83 c0 10          	add    $0x10,%rax
   1017a:	48 8d 15 a0 aa 00 00 	lea    0xaaa0(%rip),%rdx        # 1ac21 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x141>
   10181:	48 89 d6             	mov    %rdx,%rsi
   10184:	48 89 c7             	mov    %rax,%rdi
   10187:	e8 04 42 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   1018c:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
   1018d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10194:	48 83 c0 10          	add    $0x10,%rax
   10198:	48 8d 15 89 aa 00 00 	lea    0xaa89(%rip),%rdx        # 1ac28 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x148>
   1019f:	48 89 d6             	mov    %rdx,%rsi
   101a2:	48 89 c7             	mov    %rax,%rdi
   101a5:	e8 e6 41 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   101aa:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
   101b0:	89 d6                	mov    %edx,%esi
   101b2:	48 89 c7             	mov    %rax,%rdi
   101b5:	e8 46 45 ff ff       	call   4700 <_ZNSolsEi@plt>
   101ba:	be 0a 00 00 00       	mov    $0xa,%esi
   101bf:	48 89 c7             	mov    %rax,%rdi
   101c2:	e8 e9 42 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
   101c7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   101ce:	48 83 c0 10          	add    $0x10,%rax
   101d2:	48 8d 15 5e aa 00 00 	lea    0xaa5e(%rip),%rdx        # 1ac37 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x157>
   101d9:	48 89 d6             	mov    %rdx,%rsi
   101dc:	48 89 c7             	mov    %rax,%rdi
   101df:	e8 ac 41 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   101e4:	48 89 c2             	mov    %rax,%rdx
   101e7:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   101ee:	48 83 c0 14          	add    $0x14,%rax
   101f2:	48 89 c6             	mov    %rax,%rsi
   101f5:	48 89 d7             	mov    %rdx,%rdi
   101f8:	e8 93 41 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   101fd:	be 0a 00 00 00       	mov    $0xa,%esi
   10202:	48 89 c7             	mov    %rax,%rdi
   10205:	e8 a6 42 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
   1020a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10211:	48 83 c0 10          	add    $0x10,%rax
   10215:	48 8d 15 2c aa 00 00 	lea    0xaa2c(%rip),%rdx        # 1ac48 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x168>
   1021c:	48 89 d6             	mov    %rdx,%rsi
   1021f:	48 89 c7             	mov    %rax,%rdi
   10222:	e8 69 41 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10227:	48 89 c2             	mov    %rax,%rdx
   1022a:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   10231:	48 05 14 01 00 00    	add    $0x114,%rax
   10237:	48 89 c6             	mov    %rax,%rsi
   1023a:	48 89 d7             	mov    %rdx,%rdi
   1023d:	e8 4e 41 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10242:	be 0a 00 00 00       	mov    $0xa,%esi
   10247:	48 89 c7             	mov    %rax,%rdi
   1024a:	e8 61 42 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
   1024f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10256:	48 83 c0 10          	add    $0x10,%rax
   1025a:	48 8d 15 ff a9 00 00 	lea    0xa9ff(%rip),%rdx        # 1ac60 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x180>
   10261:	48 89 d6             	mov    %rdx,%rsi
   10264:	48 89 c7             	mov    %rax,%rdi
   10267:	e8 24 41 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1026c:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
   1026f:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
   10276:	48 89 c6             	mov    %rax,%rsi
   10279:	48 89 d7             	mov    %rdx,%rdi
   1027c:	e8 1f 3e ff ff       	call   40a0 <_ZNSolsEm@plt>
   10281:	be 0a 00 00 00       	mov    $0xa,%esi
   10286:	48 89 c7             	mov    %rax,%rdi
   10289:	e8 22 42 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
   1028e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10295:	48 83 c0 10          	add    $0x10,%rax
   10299:	48 8d 15 04 a9 00 00 	lea    0xa904(%rip),%rdx        # 1aba4 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xc4>
   102a0:	48 89 d6             	mov    %rdx,%rsi
   102a3:	48 89 c7             	mov    %rax,%rdi
   102a6:	e8 e5 40 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   102ab:	48 89 c2             	mov    %rax,%rdx
   102ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102b2:	48 89 c6             	mov    %rax,%rsi
   102b5:	48 89 d7             	mov    %rdx,%rdi
   102b8:	e8 e3 3d ff ff       	call   40a0 <_ZNSolsEm@plt>
   102bd:	48 89 c2             	mov    %rax,%rdx
   102c0:	48 8d 05 c1 a9 00 00 	lea    0xa9c1(%rip),%rax        # 1ac88 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x1a8>
   102c7:	48 89 c6             	mov    %rax,%rsi
   102ca:	48 89 d7             	mov    %rdx,%rdi
   102cd:	e8 be 40 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
   102d2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   102d6:	48 8b 08             	mov    (%rax),%rcx
   102d9:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   102e0:	ba 00 00 00 00       	mov    $0x0,%edx
   102e5:	48 89 ce             	mov    %rcx,%rsi
   102e8:	48 89 c7             	mov    %rax,%rdi
   102eb:	e8 71 6c ff ff       	call   6f61 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
   102f0:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   102f7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   102fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   102ff:	48 89 c7             	mov    %rax,%rdi
   10302:	e8 a1 0d 00 00       	call   110a8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   10307:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   1030e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10312:	48 89 c7             	mov    %rax,%rdi
   10315:	e8 b4 0d 00 00       	call   110ce <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   1031a:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   10321:	eb 5e                	jmp    10381 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   10323:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   1032a:	48 89 c7             	mov    %rax,%rdi
   1032d:	e8 24 0e 00 00       	call   11156 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   10332:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   10336:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1033d:	48 83 c0 10          	add    $0x10,%rax
   10341:	48 8d 15 61 a9 00 00 	lea    0xa961(%rip),%rdx        # 1aca9 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x1c9>
   10348:	48 89 d6             	mov    %rdx,%rsi
   1034b:	48 89 c7             	mov    %rax,%rdi
   1034e:	e8 3d 40 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10353:	48 89 c2             	mov    %rax,%rdx
   10356:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1035a:	48 89 c6             	mov    %rax,%rsi
   1035d:	48 89 d7             	mov    %rdx,%rdi
   10360:	e8 2b 40 ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10365:	be 0a 00 00 00       	mov    $0xa,%esi
   1036a:	48 89 c7             	mov    %rax,%rdi
   1036d:	e8 3e 41 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   10372:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   10379:	48 89 c7             	mov    %rax,%rdi
   1037c:	e8 b1 0d 00 00       	call   11132 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   10381:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   10388:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   1038f:	48 89 d6             	mov    %rdx,%rsi
   10392:	48 89 c7             	mov    %rax,%rdi
   10395:	e8 5d 0d 00 00       	call   110f7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   1039a:	84 c0                	test   %al,%al
   1039c:	75 85                	jne    10323 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   1039e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   103a2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   103a6:	0f 85 fb 00 00 00    	jne    104a7 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   103ac:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   103b3:	48 83 c0 10          	add    $0x10,%rax
   103b7:	48 8d 15 e6 a7 00 00 	lea    0xa7e6(%rip),%rdx        # 1aba4 <_ZZN9VulkanApp3runEvE11sec_to_mics+0xc4>
   103be:	48 89 d6             	mov    %rdx,%rsi
   103c1:	48 89 c7             	mov    %rax,%rdi
   103c4:	e8 c7 3f ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   103c9:	48 89 c2             	mov    %rax,%rdx
   103cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103d0:	48 89 c6             	mov    %rax,%rsi
   103d3:	48 89 d7             	mov    %rdx,%rdi
   103d6:	e8 c5 3c ff ff       	call   40a0 <_ZNSolsEm@plt>
   103db:	48 89 c2             	mov    %rax,%rdx
   103de:	48 8d 05 cb a8 00 00 	lea    0xa8cb(%rip),%rax        # 1acb0 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x1d0>
   103e5:	48 89 c6             	mov    %rax,%rsi
   103e8:	48 89 d7             	mov    %rdx,%rdi
   103eb:	e8 a0 3f ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   103f0:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   103f7:	48 05 88 00 00 00    	add    $0x88,%rax
   103fd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10401:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10405:	48 89 c7             	mov    %rax,%rdi
   10408:	e8 f9 07 00 00       	call   10c06 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1040d:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   10414:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10418:	48 89 c7             	mov    %rax,%rdi
   1041b:	e8 0c 08 00 00       	call   10c2c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10420:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   10427:	eb 61                	jmp    1048a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   10429:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   10430:	48 89 c7             	mov    %rax,%rdi
   10433:	e8 78 08 00 00       	call   10cb0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   10438:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   1043c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10443:	48 83 c0 10          	add    $0x10,%rax
   10447:	48 8d 15 5b a8 00 00 	lea    0xa85b(%rip),%rdx        # 1aca9 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x1c9>
   1044e:	48 89 d6             	mov    %rdx,%rsi
   10451:	48 89 c7             	mov    %rax,%rdi
   10454:	e8 37 3f ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10459:	48 89 c2             	mov    %rax,%rdx
   1045c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10460:	48 8b 00             	mov    (%rax),%rax
   10463:	48 89 c6             	mov    %rax,%rsi
   10466:	48 89 d7             	mov    %rdx,%rdi
   10469:	e8 22 3f ff ff       	call   4390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1046e:	be 0a 00 00 00       	mov    $0xa,%esi
   10473:	48 89 c7             	mov    %rax,%rdi
   10476:	e8 35 40 ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   1047b:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   10482:	48 89 c7             	mov    %rax,%rdi
   10485:	e8 06 08 00 00       	call   10c90 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   1048a:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   10491:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   10498:	48 89 d6             	mov    %rdx,%rsi
   1049b:	48 89 c7             	mov    %rax,%rdi
   1049e:	e8 b2 07 00 00       	call   10c55 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   104a3:	84 c0                	test   %al,%al
   104a5:	75 82                	jne    10429 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   104a7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   104ae:	48 83 c0 10          	add    $0x10,%rax
   104b2:	be 0a 00 00 00       	mov    $0xa,%esi
   104b7:	48 89 c7             	mov    %rax,%rdi
   104ba:	e8 f1 3f ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   104bf:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   104c4:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   104cb:	48 89 c7             	mov    %rax,%rdi
   104ce:	e8 03 7c ff ff       	call   80d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   104d3:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   104da:	48 89 c7             	mov    %rax,%rdi
   104dd:	e8 0e 3d ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   104e2:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   104e9:	48 89 c7             	mov    %rax,%rdi
   104ec:	e8 6f 0a 00 00       	call   10f60 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   104f1:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   104f8:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   104ff:	48 89 d6             	mov    %rdx,%rsi
   10502:	48 89 c7             	mov    %rax,%rdi
   10505:	e8 1b 0a 00 00       	call   10f25 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   1050a:	84 c0                	test   %al,%al
   1050c:	0f 85 18 f9 ff ff    	jne    fe2a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   10512:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10519:	48 83 c0 10          	add    $0x10,%rax
   1051d:	be 0a 00 00 00       	mov    $0xa,%esi
   10522:	48 89 c7             	mov    %rax,%rdi
   10525:	e8 86 3f ff ff       	call   44b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   1052a:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   10531:	48 89 c7             	mov    %rax,%rdi
   10534:	e8 27 7e ff ff       	call   8360 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   10539:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   10540:	48 89 c7             	mov    %rax,%rdi
   10543:	e8 20 7a ff ff       	call   7f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   10548:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   1054f:	48 89 c7             	mov    %rax,%rdi
   10552:	e8 7f 7b ff ff       	call   80d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   10557:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1055e:	48 89 c7             	mov    %rax,%rdi
   10561:	e8 2a 3b ff ff       	call   4090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   10566:	e9 cd 00 00 00       	jmp    10638 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   1056b:	49 89 c4             	mov    %rax,%r12
   1056e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   10575:	48 89 c7             	mov    %rax,%rdi
   10578:	e8 73 3c ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1057d:	eb 03                	jmp    10582 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   1057f:	49 89 c4             	mov    %rax,%r12
   10582:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10589:	48 89 c7             	mov    %rax,%rdi
   1058c:	e8 5f 3c ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10591:	eb 03                	jmp    10596 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   10593:	49 89 c4             	mov    %rax,%r12
   10596:	48 89 df             	mov    %rbx,%rdi
   10599:	e8 b2 3c ff ff       	call   4250 <__cxa_free_exception@plt>
   1059e:	4c 89 e3             	mov    %r12,%rbx
   105a1:	eb 7b                	jmp    1061e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   105a3:	48 89 c3             	mov    %rax,%rbx
   105a6:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   105ad:	48 89 c7             	mov    %rax,%rdi
   105b0:	e8 9b 3e ff ff       	call   4450 <_ZNSaIcED1Ev@plt>
   105b5:	eb 2b                	jmp    105e2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   105b7:	48 89 c3             	mov    %rax,%rbx
   105ba:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   105c1:	48 89 c7             	mov    %rax,%rdi
   105c4:	e8 0d 7b ff ff       	call   80d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   105c9:	eb 03                	jmp    105ce <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   105cb:	48 89 c3             	mov    %rax,%rbx
   105ce:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   105d5:	48 89 c7             	mov    %rax,%rdi
   105d8:	e8 13 3c ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   105dd:	eb 03                	jmp    105e2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   105df:	48 89 c3             	mov    %rax,%rbx
   105e2:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   105e9:	48 89 c7             	mov    %rax,%rdi
   105ec:	e8 6f 7d ff ff       	call   8360 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   105f1:	eb 03                	jmp    105f6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   105f3:	48 89 c3             	mov    %rax,%rbx
   105f6:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   105fd:	48 89 c7             	mov    %rax,%rdi
   10600:	e8 63 79 ff ff       	call   7f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   10605:	eb 03                	jmp    1060a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   10607:	48 89 c3             	mov    %rax,%rbx
   1060a:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   10611:	48 89 c7             	mov    %rax,%rdi
   10614:	e8 bd 7a ff ff       	call   80d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   10619:	eb 03                	jmp    1061e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   1061b:	48 89 c3             	mov    %rax,%rbx
   1061e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10625:	48 89 c7             	mov    %rax,%rdi
   10628:	e8 63 3a ff ff       	call   4090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   1062d:	48 89 d8             	mov    %rbx,%rax
   10630:	48 89 c7             	mov    %rax,%rdi
   10633:	e8 f8 40 ff ff       	call   4730 <_Unwind_Resume@plt>
   10638:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   1063f:	5b                   	pop    %rbx
   10640:	41 5c                	pop    %r12
   10642:	5d                   	pop    %rbp
   10643:	c3                   	ret

0000000000010644 <_Z41__static_initialization_and_destruction_0ii>:
   10644:	55                   	push   %rbp
   10645:	48 89 e5             	mov    %rsp,%rbp
   10648:	48 83 ec 10          	sub    $0x10,%rsp
   1064c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   1064f:	89 75 f8             	mov    %esi,-0x8(%rbp)
   10652:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   10656:	75 3b                	jne    10693 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10658:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   1065f:	75 32                	jne    10693 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10661:	48 8d 05 cc 7f 01 00 	lea    0x17fcc(%rip),%rax        # 28634 <_ZStL8__ioinit>
   10668:	48 89 c7             	mov    %rax,%rdi
   1066b:	e8 c0 3f ff ff       	call   4630 <_ZNSt8ios_base4InitC1Ev@plt>
   10670:	48 8d 05 69 7d 01 00 	lea    0x17d69(%rip),%rax        # 283e0 <__dso_handle>
   10677:	48 89 c2             	mov    %rax,%rdx
   1067a:	48 8d 05 b3 7f 01 00 	lea    0x17fb3(%rip),%rax        # 28634 <_ZStL8__ioinit>
   10681:	48 89 c6             	mov    %rax,%rsi
   10684:	48 8b 05 3d 79 01 00 	mov    0x1793d(%rip),%rax        # 27fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   1068b:	48 89 c7             	mov    %rax,%rdi
   1068e:	e8 8d 3c ff ff       	call   4320 <__cxa_atexit@plt>
   10693:	90                   	nop
   10694:	c9                   	leave
   10695:	c3                   	ret

0000000000010696 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   10696:	55                   	push   %rbp
   10697:	48 89 e5             	mov    %rsp,%rbp
   1069a:	be ff ff 00 00       	mov    $0xffff,%esi
   1069f:	bf 01 00 00 00       	mov    $0x1,%edi
   106a4:	e8 9b ff ff ff       	call   10644 <_Z41__static_initialization_and_destruction_0ii>
   106a9:	5d                   	pop    %rbp
   106aa:	c3                   	ret
   106ab:	90                   	nop

00000000000106ac <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   106ac:	55                   	push   %rbp
   106ad:	48 89 e5             	mov    %rsp,%rbp
   106b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106b4:	48 8d 15 55 76 01 00 	lea    0x17655(%rip),%rdx        # 27d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   106bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106bf:	48 89 10             	mov    %rdx,(%rax)
   106c2:	90                   	nop
   106c3:	5d                   	pop    %rbp
   106c4:	c3                   	ret

00000000000106c5 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   106c5:	55                   	push   %rbp
   106c6:	48 89 e5             	mov    %rsp,%rbp
   106c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   106d1:	90                   	nop
   106d2:	5d                   	pop    %rbp
   106d3:	c3                   	ret

00000000000106d4 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   106d4:	55                   	push   %rbp
   106d5:	48 89 e5             	mov    %rsp,%rbp
   106d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   106dc:	48 8d 05 75 a2 00 00 	lea    0xa275(%rip),%rax        # 1a958 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
   106e3:	5d                   	pop    %rbp
   106e4:	c3                   	ret
   106e5:	90                   	nop

00000000000106e6 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   106e6:	55                   	push   %rbp
   106e7:	48 89 e5             	mov    %rsp,%rbp
   106ea:	48 83 ec 10          	sub    $0x10,%rsp
   106ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106f6:	48 89 c7             	mov    %rax,%rdi
   106f9:	e8 ae ff ff ff       	call   106ac <_ZNSt9exceptionC1Ev>
   106fe:	48 8d 15 bb 75 01 00 	lea    0x175bb(%rip),%rdx        # 27cc0 <_ZTVSt19bad_optional_access+0x10>
   10705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10709:	48 89 10             	mov    %rdx,(%rax)
   1070c:	90                   	nop
   1070d:	c9                   	leave
   1070e:	c3                   	ret

000000000001070f <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   1070f:	55                   	push   %rbp
   10710:	48 89 e5             	mov    %rsp,%rbp
   10713:	53                   	push   %rbx
   10714:	48 83 ec 08          	sub    $0x8,%rsp
   10718:	bf 08 00 00 00       	mov    $0x8,%edi
   1071d:	e8 5e 3a ff ff       	call   4180 <__cxa_allocate_exception@plt>
   10722:	48 89 c3             	mov    %rax,%rbx
   10725:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1072c:	48 89 df             	mov    %rbx,%rdi
   1072f:	e8 b2 ff ff ff       	call   106e6 <_ZNSt19bad_optional_accessC1Ev>
   10734:	48 8d 05 27 65 00 00 	lea    0x6527(%rip),%rax        # 16c62 <_ZNSt19bad_optional_accessD1Ev>
   1073b:	48 89 c2             	mov    %rax,%rdx
   1073e:	48 8d 05 13 76 01 00 	lea    0x17613(%rip),%rax        # 27d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   10745:	48 89 c6             	mov    %rax,%rsi
   10748:	48 89 df             	mov    %rbx,%rdi
   1074b:	e8 80 3f ff ff       	call   46d0 <__cxa_throw@plt>

0000000000010750 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
   10750:	55                   	push   %rbp
   10751:	48 89 e5             	mov    %rsp,%rbp
   10754:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
   10758:	e8 3a 00 00 00       	call   10797 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
   1075d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10761:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   10765:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   10769:	48 89 d6             	mov    %rdx,%rsi
   1076c:	48 89 c7             	mov    %rax,%rdi
   1076f:	e8 06 00 00 00       	call   1077a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   10774:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10778:	c9                   	leave
   10779:	c3                   	ret

000000000001077a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   1077a:	55                   	push   %rbp
   1077b:	48 89 e5             	mov    %rsp,%rbp
   1077e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10782:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   10786:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1078a:	48 8b 10             	mov    (%rax),%rdx
   1078d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10791:	48 89 10             	mov    %rdx,(%rax)
   10794:	90                   	nop
   10795:	5d                   	pop    %rbp
   10796:	c3                   	ret

0000000000010797 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
   10797:	55                   	push   %rbp
   10798:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
   1079b:	b8 00 00 00 00       	mov    $0x0,%eax
   107a0:	5d                   	pop    %rbp
   107a1:	c3                   	ret

00000000000107a2 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
   107a2:	55                   	push   %rbp
   107a3:	48 89 e5             	mov    %rsp,%rbp
   107a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   107aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107ae:	48 8b 00             	mov    (%rax),%rax
   107b1:	5d                   	pop    %rbp
   107b2:	c3                   	ret
   107b3:	90                   	nop

00000000000107b4 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   107b4:	55                   	push   %rbp
   107b5:	48 89 e5             	mov    %rsp,%rbp
   107b8:	48 83 ec 10          	sub    $0x10,%rsp
   107bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   107c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107c4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   107ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107ce:	48 89 c7             	mov    %rax,%rdi
   107d1:	e8 04 00 00 00       	call   107da <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   107d6:	90                   	nop
   107d7:	c9                   	leave
   107d8:	c3                   	ret
   107d9:	90                   	nop

00000000000107da <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   107da:	55                   	push   %rbp
   107db:	48 89 e5             	mov    %rsp,%rbp
   107de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   107e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107e6:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   107ed:	00 
      _M_header._M_left = &_M_header;
   107ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   107f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107f6:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   107fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   107fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10802:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   10806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1080a:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   10811:	00 
    }
   10812:	90                   	nop
   10813:	5d                   	pop    %rbp
   10814:	c3                   	ret
   10815:	90                   	nop

0000000000010816 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   10816:	55                   	push   %rbp
   10817:	48 89 e5             	mov    %rsp,%rbp
   1081a:	48 83 ec 10          	sub    $0x10,%rsp
   1081e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10826:	48 89 c7             	mov    %rax,%rdi
   10829:	e8 60 00 00 00       	call   1088e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   1082e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10832:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   10836:	90                   	nop
   10837:	c9                   	leave
   10838:	c3                   	ret
   10839:	90                   	nop

000000000001083a <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   1083a:	55                   	push   %rbp
   1083b:	48 89 e5             	mov    %rsp,%rbp
   1083e:	48 83 ec 10          	sub    $0x10,%rsp
   10842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1084a:	48 89 c7             	mov    %rax,%rdi
   1084d:	e8 c4 ff ff ff       	call   10816 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   10852:	90                   	nop
   10853:	c9                   	leave
   10854:	c3                   	ret
   10855:	90                   	nop

0000000000010856 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   10856:	55                   	push   %rbp
   10857:	48 89 e5             	mov    %rsp,%rbp
   1085a:	48 83 ec 10          	sub    $0x10,%rsp
   1085e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10866:	48 89 c7             	mov    %rax,%rdi
   10869:	e8 cc ff ff ff       	call   1083a <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   1086e:	90                   	nop
   1086f:	c9                   	leave
   10870:	c3                   	ret
   10871:	90                   	nop

0000000000010872 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   10872:	55                   	push   %rbp
   10873:	48 89 e5             	mov    %rsp,%rbp
   10876:	48 83 ec 10          	sub    $0x10,%rsp
   1087a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1087e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10882:	48 89 c7             	mov    %rax,%rdi
   10885:	e8 cc ff ff ff       	call   10856 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   1088a:	90                   	nop
   1088b:	c9                   	leave
   1088c:	c3                   	ret
   1088d:	90                   	nop

000000000001088e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   1088e:	55                   	push   %rbp
   1088f:	48 89 e5             	mov    %rsp,%rbp
   10892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10896:	90                   	nop
   10897:	5d                   	pop    %rbp
   10898:	c3                   	ret
   10899:	90                   	nop

000000000001089a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   1089a:	55                   	push   %rbp
   1089b:	48 89 e5             	mov    %rsp,%rbp
   1089e:	48 83 ec 10          	sub    $0x10,%rsp
   108a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   108a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   108aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   108ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108b2:	48 89 d6             	mov    %rdx,%rsi
   108b5:	48 89 c7             	mov    %rax,%rdi
   108b8:	e8 ef 06 00 00       	call   10fac <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   108bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108c1:	c9                   	leave
   108c2:	c3                   	ret
   108c3:	90                   	nop

00000000000108c4 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   108c4:	55                   	push   %rbp
   108c5:	48 89 e5             	mov    %rsp,%rbp
   108c8:	48 83 ec 10          	sub    $0x10,%rsp
   108cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   108d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   108d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   108dc:	48 89 d6             	mov    %rdx,%rsi
   108df:	48 89 c7             	mov    %rax,%rdi
   108e2:	e8 b3 ff ff ff       	call   1089a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   108e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108eb:	c9                   	leave
   108ec:	c3                   	ret
   108ed:	90                   	nop

00000000000108ee <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   108ee:	55                   	push   %rbp
   108ef:	48 89 e5             	mov    %rsp,%rbp
   108f2:	48 83 ec 10          	sub    $0x10,%rsp
   108f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   108fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108fe:	48 89 c7             	mov    %rax,%rdi
   10901:	e8 1a 00 00 00       	call   10920 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10906:	84 c0                	test   %al,%al
   10908:	74 0e                	je     10918 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   1090a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1090e:	48 89 c7             	mov    %rax,%rdi
   10911:	e8 c0 06 00 00       	call   10fd6 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   10916:	eb 05                	jmp    1091d <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   10918:	e8 f2 fd ff ff       	call   1070f <_ZSt27__throw_bad_optional_accessv>
      }
   1091d:	c9                   	leave
   1091e:	c3                   	ret
   1091f:	90                   	nop

0000000000010920 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   10920:	55                   	push   %rbp
   10921:	48 89 e5             	mov    %rsp,%rbp
   10924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   10928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1092c:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   10930:	5d                   	pop    %rbp
   10931:	c3                   	ret

0000000000010932 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   10932:	55                   	push   %rbp
   10933:	48 89 e5             	mov    %rsp,%rbp
   10936:	48 83 ec 10          	sub    $0x10,%rsp
   1093a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1093e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10942:	48 89 c7             	mov    %rax,%rdi
   10945:	e8 08 07 00 00       	call   11052 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   1094a:	90                   	nop
   1094b:	c9                   	leave
   1094c:	c3                   	ret
   1094d:	90                   	nop

000000000001094e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   1094e:	55                   	push   %rbp
   1094f:	48 89 e5             	mov    %rsp,%rbp
   10952:	48 83 ec 10          	sub    $0x10,%rsp
   10956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1095a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1095e:	48 89 c7             	mov    %rax,%rdi
   10961:	e8 b4 06 00 00       	call   1101a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   10966:	90                   	nop
   10967:	c9                   	leave
   10968:	c3                   	ret
   10969:	90                   	nop

000000000001096a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   1096a:	55                   	push   %rbp
   1096b:	48 89 e5             	mov    %rsp,%rbp
   1096e:	48 83 ec 10          	sub    $0x10,%rsp
   10972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1097a:	48 89 c7             	mov    %rax,%rdi
   1097d:	e8 cc ff ff ff       	call   1094e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   10982:	90                   	nop
   10983:	c9                   	leave
   10984:	c3                   	ret
   10985:	90                   	nop

0000000000010986 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   10986:	55                   	push   %rbp
   10987:	48 89 e5             	mov    %rsp,%rbp
   1098a:	48 83 ec 10          	sub    $0x10,%rsp
   1098e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10996:	48 89 c7             	mov    %rax,%rdi
   10999:	e8 d0 06 00 00       	call   1106e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   1099e:	90                   	nop
   1099f:	c9                   	leave
   109a0:	c3                   	ret
   109a1:	90                   	nop

00000000000109a2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   109a2:	55                   	push   %rbp
   109a3:	48 89 e5             	mov    %rsp,%rbp
   109a6:	48 83 ec 10          	sub    $0x10,%rsp
   109aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109b2:	48 89 c7             	mov    %rax,%rdi
   109b5:	e8 24 0f 00 00       	call   118de <_ZNSaIP13VkImageView_TED1Ev>
   109ba:	90                   	nop
   109bb:	c9                   	leave
   109bc:	c3                   	ret
   109bd:	90                   	nop

00000000000109be <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   109be:	55                   	push   %rbp
   109bf:	48 89 e5             	mov    %rsp,%rbp
   109c2:	48 83 ec 10          	sub    $0x10,%rsp
   109c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109ce:	48 89 c7             	mov    %rax,%rdi
   109d1:	e8 34 10 00 00       	call   11a0a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   109d6:	90                   	nop
   109d7:	c9                   	leave
   109d8:	c3                   	ret
   109d9:	90                   	nop

00000000000109da <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   109da:	55                   	push   %rbp
   109db:	48 89 e5             	mov    %rsp,%rbp
   109de:	48 83 ec 10          	sub    $0x10,%rsp
   109e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109ea:	48 89 c7             	mov    %rax,%rdi
   109ed:	e8 cc ff ff ff       	call   109be <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   109f2:	90                   	nop
   109f3:	c9                   	leave
   109f4:	c3                   	ret
   109f5:	90                   	nop

00000000000109f6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   109f6:	55                   	push   %rbp
   109f7:	48 89 e5             	mov    %rsp,%rbp
   109fa:	48 83 ec 10          	sub    $0x10,%rsp
   109fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a06:	48 89 c7             	mov    %rax,%rdi
   10a09:	e8 72 10 00 00       	call   11a80 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   10a0e:	90                   	nop
   10a0f:	c9                   	leave
   10a10:	c3                   	ret
   10a11:	90                   	nop

0000000000010a12 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   10a12:	55                   	push   %rbp
   10a13:	48 89 e5             	mov    %rsp,%rbp
   10a16:	48 83 ec 10          	sub    $0x10,%rsp
   10a1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a22:	48 89 c7             	mov    %rax,%rdi
   10a25:	e8 cc ff ff ff       	call   109f6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   10a2a:	90                   	nop
   10a2b:	c9                   	leave
   10a2c:	c3                   	ret
   10a2d:	90                   	nop

0000000000010a2e <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   10a2e:	55                   	push   %rbp
   10a2f:	48 89 e5             	mov    %rsp,%rbp
   10a32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a3a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   10a41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a45:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   10a4c:	00 
   10a4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a51:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   10a58:	00 
   10a59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a5d:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   10a64:	00 
   10a65:	90                   	nop
   10a66:	5d                   	pop    %rbp
   10a67:	c3                   	ret

0000000000010a68 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   10a68:	55                   	push   %rbp
   10a69:	48 89 e5             	mov    %rsp,%rbp
   10a6c:	48 83 ec 10          	sub    $0x10,%rsp
   10a70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a78:	48 89 c7             	mov    %rax,%rdi
   10a7b:	e8 50 10 00 00       	call   11ad0 <_ZNSaIP15VkFramebuffer_TED1Ev>
   10a80:	90                   	nop
   10a81:	c9                   	leave
   10a82:	c3                   	ret
   10a83:	90                   	nop

0000000000010a84 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   10a84:	55                   	push   %rbp
   10a85:	48 89 e5             	mov    %rsp,%rbp
   10a88:	48 83 ec 10          	sub    $0x10,%rsp
   10a8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a94:	48 89 c7             	mov    %rax,%rdi
   10a97:	e8 0c 10 00 00       	call   11aa8 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   10a9c:	90                   	nop
   10a9d:	c9                   	leave
   10a9e:	c3                   	ret
   10a9f:	90                   	nop

0000000000010aa0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   10aa0:	55                   	push   %rbp
   10aa1:	48 89 e5             	mov    %rsp,%rbp
   10aa4:	48 83 ec 10          	sub    $0x10,%rsp
   10aa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ab0:	48 89 c7             	mov    %rax,%rdi
   10ab3:	e8 cc ff ff ff       	call   10a84 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   10ab8:	90                   	nop
   10ab9:	c9                   	leave
   10aba:	c3                   	ret
   10abb:	90                   	nop

0000000000010abc <_ZN9VulkanApp11SyncWrapperC1Ev>:
  void createCommandBuffer();

  void recordCommandBuffer(VkCommandBuffer commandBuffer, uint32_t imageIndex);

  /* Step 10: Synchronization and cache control */
  struct SyncWrapper {
   10abc:	55                   	push   %rbp
   10abd:	48 89 e5             	mov    %rsp,%rbp
   10ac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ac8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   10acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ad3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   10ada:	00 
   10adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10adf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   10ae6:	00 
   10ae7:	90                   	nop
   10ae8:	5d                   	pop    %rbp
   10ae9:	c3                   	ret

0000000000010aea <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
   10aea:	55                   	push   %rbp
   10aeb:	48 89 e5             	mov    %rsp,%rbp
   10aee:	53                   	push   %rbx
   10aef:	48 83 ec 38          	sub    $0x38,%rsp
   10af3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
   10af7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   10afb:	e8 60 3a ff ff       	call   4560 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   10b00:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   10b04:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   10b08:	48 89 de             	mov    %rbx,%rsi
   10b0b:	48 89 c7             	mov    %rax,%rdi
   10b0e:	e8 81 12 00 00       	call   11d94 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
   10b13:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
   10b17:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10b1b:	48 89 c7             	mov    %rax,%rdi
   10b1e:	e8 b6 12 00 00       	call   11dd9 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
   10b23:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
   10b27:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10b2b:	48 89 c7             	mov    %rax,%rdi
   10b2e:	e8 c1 12 00 00       	call   11df4 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
   10b33:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10b37:	c9                   	leave
   10b38:	c3                   	ret
   10b39:	90                   	nop

0000000000010b3a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   10b3a:	55                   	push   %rbp
   10b3b:	48 89 e5             	mov    %rsp,%rbp
   10b3e:	53                   	push   %rbx
   10b3f:	48 83 ec 38          	sub    $0x38,%rsp
   10b43:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10b47:	48 89 f0             	mov    %rsi,%rax
   10b4a:	48 89 d6             	mov    %rdx,%rsi
   10b4d:	48 89 f2             	mov    %rsi,%rdx
   10b50:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10b54:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10b58:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   10b5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b60:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10b64:	48 89 d6             	mov    %rdx,%rsi
   10b67:	48 89 c7             	mov    %rax,%rdi
   10b6a:	e8 cb 13 00 00       	call   11f3a <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   10b6f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10b73:	48 89 c7             	mov    %rax,%rdi
   10b76:	e8 f7 13 00 00       	call   11f72 <_ZNKSt16initializer_listIPKcE3endEv>
   10b7b:	48 89 c3             	mov    %rax,%rbx
   10b7e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10b82:	48 89 c7             	mov    %rax,%rdi
   10b85:	e8 d6 13 00 00       	call   11f60 <_ZNKSt16initializer_listIPKcE5beginEv>
   10b8a:	48 89 c1             	mov    %rax,%rcx
   10b8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b91:	48 89 da             	mov    %rbx,%rdx
   10b94:	48 89 ce             	mov    %rcx,%rsi
   10b97:	48 89 c7             	mov    %rax,%rdi
   10b9a:	e8 39 14 00 00       	call   11fd8 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   10b9f:	eb 1a                	jmp    10bbb <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   10ba1:	48 89 c3             	mov    %rax,%rbx
   10ba4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ba8:	48 89 c7             	mov    %rax,%rdi
   10bab:	e8 b4 76 ff ff       	call   8264 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   10bb0:	48 89 d8             	mov    %rbx,%rax
   10bb3:	48 89 c7             	mov    %rax,%rdi
   10bb6:	e8 75 3b ff ff       	call   4730 <_Unwind_Resume@plt>
   10bbb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10bbf:	c9                   	leave
   10bc0:	c3                   	ret
   10bc1:	90                   	nop

0000000000010bc2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10bc2:	55                   	push   %rbp
   10bc3:	48 89 e5             	mov    %rsp,%rbp
   10bc6:	48 83 ec 10          	sub    $0x10,%rsp
   10bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bd2:	48 89 c7             	mov    %rax,%rdi
   10bd5:	e8 42 85 ff ff       	call   911c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10bda:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10bdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10be1:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10be9:	48 8b 00             	mov    (%rax),%rax
   10bec:	48 89 ce             	mov    %rcx,%rsi
   10bef:	48 89 c7             	mov    %rax,%rdi
   10bf2:	e8 90 14 00 00       	call   12087 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   10bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bfb:	48 89 c7             	mov    %rax,%rdi
   10bfe:	e8 61 76 ff ff       	call   8264 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   10c03:	90                   	nop
   10c04:	c9                   	leave
   10c05:	c3                   	ret

0000000000010c06 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10c06:	55                   	push   %rbp
   10c07:	48 89 e5             	mov    %rsp,%rbp
   10c0a:	48 83 ec 20          	sub    $0x20,%rsp
   10c0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10c12:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10c16:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10c1a:	48 89 d6             	mov    %rdx,%rsi
   10c1d:	48 89 c7             	mov    %rax,%rdi
   10c20:	e8 8d 14 00 00       	call   120b2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c29:	c9                   	leave
   10c2a:	c3                   	ret
   10c2b:	90                   	nop

0000000000010c2c <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10c2c:	55                   	push   %rbp
   10c2d:	48 89 e5             	mov    %rsp,%rbp
   10c30:	48 83 ec 20          	sub    $0x20,%rsp
   10c34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10c38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c3c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10c40:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10c44:	48 89 d6             	mov    %rdx,%rsi
   10c47:	48 89 c7             	mov    %rax,%rdi
   10c4a:	e8 63 14 00 00       	call   120b2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10c4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c53:	c9                   	leave
   10c54:	c3                   	ret

0000000000010c55 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10c55:	55                   	push   %rbp
   10c56:	48 89 e5             	mov    %rsp,%rbp
   10c59:	53                   	push   %rbx
   10c5a:	48 83 ec 18          	sub    $0x18,%rsp
   10c5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c62:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10c66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c6a:	48 89 c7             	mov    %rax,%rdi
   10c6d:	e8 5e 14 00 00       	call   120d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10c72:	48 8b 18             	mov    (%rax),%rbx
   10c75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c79:	48 89 c7             	mov    %rax,%rdi
   10c7c:	e8 4f 14 00 00       	call   120d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10c81:	48 8b 00             	mov    (%rax),%rax
   10c84:	48 39 c3             	cmp    %rax,%rbx
   10c87:	0f 95 c0             	setne  %al
   10c8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10c8e:	c9                   	leave
   10c8f:	c3                   	ret

0000000000010c90 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10c90:	55                   	push   %rbp
   10c91:	48 89 e5             	mov    %rsp,%rbp
   10c94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c9c:	48 8b 00             	mov    (%rax),%rax
   10c9f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ca7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10caa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10cae:	5d                   	pop    %rbp
   10caf:	c3                   	ret

0000000000010cb0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10cb0:	55                   	push   %rbp
   10cb1:	48 89 e5             	mov    %rsp,%rbp
   10cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10cb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cbc:	48 8b 00             	mov    (%rax),%rax
   10cbf:	5d                   	pop    %rbp
   10cc0:	c3                   	ret
   10cc1:	90                   	nop

0000000000010cc2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   10cc2:	55                   	push   %rbp
   10cc3:	48 89 e5             	mov    %rsp,%rbp
   10cc6:	53                   	push   %rbx
   10cc7:	48 83 ec 18          	sub    $0x18,%rsp
   10ccb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10ccf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   10cd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cd7:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10cdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cdf:	48 8b 40 10          	mov    0x10(%rax),%rax
   10ce3:	48 39 c2             	cmp    %rax,%rdx
   10ce6:	74 3c                	je     10d24 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   10ce8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10cec:	48 89 c7             	mov    %rax,%rdi
   10cef:	e8 ea 13 00 00       	call   120de <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   10cf4:	48 89 c2             	mov    %rax,%rdx
   10cf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cfb:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10cff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d03:	48 89 ce             	mov    %rcx,%rsi
   10d06:	48 89 c7             	mov    %rax,%rdi
   10d09:	e8 de 13 00 00       	call   120ec <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   10d0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d12:	48 8b 40 08          	mov    0x8(%rax),%rax
   10d16:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10d1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d1e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10d22:	eb 30                	jmp    10d54 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   10d24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d28:	48 89 c7             	mov    %rax,%rdi
   10d2b:	e8 ae 13 00 00       	call   120de <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   10d30:	48 89 c3             	mov    %rax,%rbx
   10d33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d37:	48 89 c7             	mov    %rax,%rdi
   10d3a:	e8 ed fe ff ff       	call   10c2c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10d3f:	48 89 c1             	mov    %rax,%rcx
   10d42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d46:	48 89 da             	mov    %rbx,%rdx
   10d49:	48 89 ce             	mov    %rcx,%rsi
   10d4c:	48 89 c7             	mov    %rax,%rdi
   10d4f:	e8 d2 13 00 00       	call   12126 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   10d54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d58:	48 89 c7             	mov    %rax,%rdi
   10d5b:	e8 58 15 00 00       	call   122b8 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   10d60:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10d64:	c9                   	leave
   10d65:	c3                   	ret

0000000000010d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10d66:	55                   	push   %rbp
   10d67:	48 89 e5             	mov    %rsp,%rbp
   10d6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d72:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10d76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d7a:	48 8b 00             	mov    (%rax),%rax
   10d7d:	48 29 c2             	sub    %rax,%rdx
   10d80:	48 89 d0             	mov    %rdx,%rax
   10d83:	48 c1 f8 03          	sar    $0x3,%rax
   10d87:	5d                   	pop    %rbp
   10d88:	c3                   	ret
   10d89:	90                   	nop

0000000000010d8a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   10d8a:	55                   	push   %rbp
   10d8b:	48 89 e5             	mov    %rsp,%rbp
   10d8e:	48 83 ec 10          	sub    $0x10,%rsp
   10d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d9a:	48 8b 10             	mov    (%rax),%rdx
   10d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10da1:	48 89 d6             	mov    %rdx,%rsi
   10da4:	48 89 c7             	mov    %rax,%rdi
   10da7:	e8 4c 15 00 00       	call   122f8 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10dac:	c9                   	leave
   10dad:	c3                   	ret

0000000000010dae <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10dae:	55                   	push   %rbp
   10daf:	48 89 e5             	mov    %rsp,%rbp
   10db2:	48 83 ec 10          	sub    $0x10,%rsp
   10db6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dbe:	48 8b 10             	mov    (%rax),%rdx
   10dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dc5:	48 89 d6             	mov    %rdx,%rsi
   10dc8:	48 89 c7             	mov    %rax,%rdi
   10dcb:	e8 28 15 00 00       	call   122f8 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10dd0:	c9                   	leave
   10dd1:	c3                   	ret

0000000000010dd2 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10dd2:	55                   	push   %rbp
   10dd3:	48 89 e5             	mov    %rsp,%rbp
   10dd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dde:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10de6:	48 8b 00             	mov    (%rax),%rax
   10de9:	48 29 c2             	sub    %rax,%rdx
   10dec:	48 c1 fa 02          	sar    $0x2,%rdx
   10df0:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   10df7:	db b6 6d 
   10dfa:	48 0f af c2          	imul   %rdx,%rax
   10dfe:	5d                   	pop    %rbp
   10dff:	c3                   	ret

0000000000010e00 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   10e00:	55                   	push   %rbp
   10e01:	48 89 e5             	mov    %rsp,%rbp
   10e04:	48 83 ec 10          	sub    $0x10,%rsp
   10e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e10:	48 89 c7             	mov    %rax,%rdi
   10e13:	e8 60 88 ff ff       	call   9678 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   10e18:	c9                   	leave
   10e19:	c3                   	ret

0000000000010e1a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   10e1a:	55                   	push   %rbp
   10e1b:	48 89 e5             	mov    %rsp,%rbp
   10e1e:	48 83 ec 10          	sub    $0x10,%rsp
   10e22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   10e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e2a:	48 89 c7             	mov    %rax,%rdi
   10e2d:	e8 46 88 ff ff       	call   9678 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   10e32:	84 c0                	test   %al,%al
   10e34:	74 0e                	je     10e44 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   10e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e3a:	48 89 c7             	mov    %rax,%rdi
   10e3d:	e8 48 88 ff ff       	call   968a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   10e42:	eb 05                	jmp    10e49 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   10e44:	e8 c6 f8 ff ff       	call   1070f <_ZSt27__throw_bad_optional_accessv>
      }
   10e49:	c9                   	leave
   10e4a:	c3                   	ret
   10e4b:	90                   	nop

0000000000010e4c <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   10e4c:	55                   	push   %rbp
   10e4d:	48 89 e5             	mov    %rsp,%rbp
   10e50:	48 83 ec 20          	sub    $0x20,%rsp
   10e54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10e5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   10e60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10e64:	48 89 c7             	mov    %rax,%rdi
   10e67:	e8 9e 14 00 00       	call   1230a <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   10e6c:	8b 10                	mov    (%rax),%edx
   10e6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e72:	89 10                	mov    %edx,(%rax)
   10e74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e78:	48 89 c7             	mov    %rax,%rdi
   10e7b:	e8 98 14 00 00       	call   12318 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   10e80:	48 89 c1             	mov    %rax,%rcx
   10e83:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   10e87:	48 8b 01             	mov    (%rcx),%rax
   10e8a:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   10e8e:	48 89 46 04          	mov    %rax,0x4(%rsi)
   10e92:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   10e96:	48 8b 41 10          	mov    0x10(%rcx),%rax
   10e9a:	48 89 46 14          	mov    %rax,0x14(%rsi)
   10e9e:	90                   	nop
   10e9f:	c9                   	leave
   10ea0:	c3                   	ret
   10ea1:	90                   	nop

0000000000010ea2 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   10ea2:	55                   	push   %rbp
   10ea3:	48 89 e5             	mov    %rsp,%rbp
   10ea6:	53                   	push   %rbx
   10ea7:	48 83 ec 18          	sub    $0x18,%rsp
   10eab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10eaf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   10eb3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   10eb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ebb:	48 89 c7             	mov    %rax,%rdi
   10ebe:	e8 63 14 00 00       	call   12326 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   10ec3:	48 89 c6             	mov    %rax,%rsi
   10ec6:	48 89 df             	mov    %rbx,%rdi
   10ec9:	e8 8c 14 00 00       	call   1235a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   10ece:	90                   	nop
   10ecf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10ed3:	c9                   	leave
   10ed4:	c3                   	ret
   10ed5:	90                   	nop

0000000000010ed6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10ed6:	55                   	push   %rbp
   10ed7:	48 89 e5             	mov    %rsp,%rbp
   10eda:	48 83 ec 20          	sub    $0x20,%rsp
   10ede:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10ee2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ee6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10eea:	48 89 d6             	mov    %rdx,%rsi
   10eed:	48 89 c7             	mov    %rax,%rdi
   10ef0:	e8 99 14 00 00       	call   1238e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10ef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ef9:	c9                   	leave
   10efa:	c3                   	ret
   10efb:	90                   	nop

0000000000010efc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10efc:	55                   	push   %rbp
   10efd:	48 89 e5             	mov    %rsp,%rbp
   10f00:	48 83 ec 20          	sub    $0x20,%rsp
   10f04:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10f08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f0c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10f10:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10f14:	48 89 d6             	mov    %rdx,%rsi
   10f17:	48 89 c7             	mov    %rax,%rdi
   10f1a:	e8 6f 14 00 00       	call   1238e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10f1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f23:	c9                   	leave
   10f24:	c3                   	ret

0000000000010f25 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10f25:	55                   	push   %rbp
   10f26:	48 89 e5             	mov    %rsp,%rbp
   10f29:	53                   	push   %rbx
   10f2a:	48 83 ec 18          	sub    $0x18,%rsp
   10f2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10f32:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10f36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f3a:	48 89 c7             	mov    %rax,%rdi
   10f3d:	e8 6a 14 00 00       	call   123ac <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   10f42:	48 8b 18             	mov    (%rax),%rbx
   10f45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10f49:	48 89 c7             	mov    %rax,%rdi
   10f4c:	e8 5b 14 00 00       	call   123ac <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   10f51:	48 8b 00             	mov    (%rax),%rax
   10f54:	48 39 c3             	cmp    %rax,%rbx
   10f57:	0f 95 c0             	setne  %al
   10f5a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10f5e:	c9                   	leave
   10f5f:	c3                   	ret

0000000000010f60 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10f60:	55                   	push   %rbp
   10f61:	48 89 e5             	mov    %rsp,%rbp
   10f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10f68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f6c:	48 8b 00             	mov    (%rax),%rax
   10f6f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f77:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10f7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10f7e:	5d                   	pop    %rbp
   10f7f:	c3                   	ret

0000000000010f80 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10f80:	55                   	push   %rbp
   10f81:	48 89 e5             	mov    %rsp,%rbp
   10f84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f8c:	48 8b 00             	mov    (%rax),%rax
   10f8f:	5d                   	pop    %rbp
   10f90:	c3                   	ret
   10f91:	90                   	nop

0000000000010f92 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   10f92:	55                   	push   %rbp
   10f93:	48 89 e5             	mov    %rsp,%rbp
   10f96:	48 83 ec 10          	sub    $0x10,%rsp
   10f9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fa2:	48 89 c7             	mov    %rax,%rdi
   10fa5:	e8 76 f9 ff ff       	call   10920 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10faa:	c9                   	leave
   10fab:	c3                   	ret

0000000000010fac <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   10fac:	55                   	push   %rbp
   10fad:	48 89 e5             	mov    %rsp,%rbp
   10fb0:	48 83 ec 10          	sub    $0x10,%rsp
   10fb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   10fbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10fc4:	48 89 d6             	mov    %rdx,%rsi
   10fc7:	48 89 c7             	mov    %rax,%rdi
   10fca:	e8 eb 13 00 00       	call   123ba <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   10fcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10fd3:	c9                   	leave
   10fd4:	c3                   	ret
   10fd5:	90                   	nop

0000000000010fd6 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   10fd6:	55                   	push   %rbp
   10fd7:	48 89 e5             	mov    %rsp,%rbp
   10fda:	48 83 ec 10          	sub    $0x10,%rsp
   10fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   10fe2:	e8 f7 3a ff ff       	call   4ade <_ZSt23__is_constant_evaluatedv>
   10fe7:	84 c0                	test   %al,%al
   10fe9:	74 1a                	je     11005 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fef:	48 89 c7             	mov    %rax,%rdi
   10ff2:	e8 29 f9 ff ff       	call   10920 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10ff7:	83 f0 01             	xor    $0x1,%eax
   10ffa:	84 c0                	test   %al,%al
   10ffc:	74 07                	je     11005 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10ffe:	b8 01 00 00 00       	mov    $0x1,%eax
   11003:	eb 05                	jmp    1100a <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   11005:	b8 00 00 00 00       	mov    $0x0,%eax
   1100a:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   1100c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11010:	48 89 c7             	mov    %rax,%rdi
   11013:	e8 34 14 00 00       	call   1244c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   11018:	c9                   	leave
   11019:	c3                   	ret

000000000001101a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   1101a:	55                   	push   %rbp
   1101b:	48 89 e5             	mov    %rsp,%rbp
   1101e:	48 83 ec 10          	sub    $0x10,%rsp
   11022:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   11026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1102a:	48 89 c7             	mov    %rax,%rdi
   1102d:	e8 28 14 00 00       	call   1245a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   11032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11036:	48 89 c7             	mov    %rax,%rdi
   11039:	e8 38 14 00 00       	call   12476 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   1103e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11042:	48 83 c0 08          	add    $0x8,%rax
   11046:	48 89 c7             	mov    %rax,%rdi
   11049:	e8 66 f7 ff ff       	call   107b4 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   1104e:	90                   	nop
   1104f:	c9                   	leave
   11050:	c3                   	ret
   11051:	90                   	nop

0000000000011052 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   11052:	55                   	push   %rbp
   11053:	48 89 e5             	mov    %rsp,%rbp
   11056:	48 83 ec 10          	sub    $0x10,%rsp
   1105a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1105e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11062:	48 89 c7             	mov    %rax,%rdi
   11065:	e8 18 14 00 00       	call   12482 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   1106a:	90                   	nop
   1106b:	c9                   	leave
   1106c:	c3                   	ret
   1106d:	90                   	nop

000000000001106e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   1106e:	55                   	push   %rbp
   1106f:	48 89 e5             	mov    %rsp,%rbp
   11072:	48 83 ec 10          	sub    $0x10,%rsp
   11076:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   1107a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1107e:	48 89 c7             	mov    %rax,%rdi
   11081:	e8 6e 14 00 00       	call   124f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   11086:	48 89 c2             	mov    %rax,%rdx
   11089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1108d:	48 89 d6             	mov    %rdx,%rsi
   11090:	48 89 c7             	mov    %rax,%rdi
   11093:	e8 f6 13 00 00       	call   1248e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   11098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1109c:	48 89 c7             	mov    %rax,%rdi
   1109f:	e8 8e f8 ff ff       	call   10932 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   110a4:	90                   	nop
   110a5:	c9                   	leave
   110a6:	c3                   	ret
   110a7:	90                   	nop

00000000000110a8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   110a8:	55                   	push   %rbp
   110a9:	48 89 e5             	mov    %rsp,%rbp
   110ac:	48 83 ec 20          	sub    $0x20,%rsp
   110b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   110b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   110b8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   110bc:	48 89 d6             	mov    %rdx,%rsi
   110bf:	48 89 c7             	mov    %rax,%rdi
   110c2:	e8 47 14 00 00       	call   1250e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   110c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110cb:	c9                   	leave
   110cc:	c3                   	ret
   110cd:	90                   	nop

00000000000110ce <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   110ce:	55                   	push   %rbp
   110cf:	48 89 e5             	mov    %rsp,%rbp
   110d2:	48 83 ec 20          	sub    $0x20,%rsp
   110d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   110da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110de:	48 8d 50 08          	lea    0x8(%rax),%rdx
   110e2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   110e6:	48 89 d6             	mov    %rdx,%rsi
   110e9:	48 89 c7             	mov    %rax,%rdi
   110ec:	e8 1d 14 00 00       	call   1250e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   110f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110f5:	c9                   	leave
   110f6:	c3                   	ret

00000000000110f7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   110f7:	55                   	push   %rbp
   110f8:	48 89 e5             	mov    %rsp,%rbp
   110fb:	53                   	push   %rbx
   110fc:	48 83 ec 18          	sub    $0x18,%rsp
   11100:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11104:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11108:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1110c:	48 89 c7             	mov    %rax,%rdi
   1110f:	e8 18 14 00 00       	call   1252c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   11114:	48 8b 18             	mov    (%rax),%rbx
   11117:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1111b:	48 89 c7             	mov    %rax,%rdi
   1111e:	e8 09 14 00 00       	call   1252c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   11123:	48 8b 00             	mov    (%rax),%rax
   11126:	48 39 c3             	cmp    %rax,%rbx
   11129:	0f 95 c0             	setne  %al
   1112c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11130:	c9                   	leave
   11131:	c3                   	ret

0000000000011132 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11132:	55                   	push   %rbp
   11133:	48 89 e5             	mov    %rsp,%rbp
   11136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1113a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1113e:	48 8b 00             	mov    (%rax),%rax
   11141:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   11148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1114c:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1114f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11153:	5d                   	pop    %rbp
   11154:	c3                   	ret
   11155:	90                   	nop

0000000000011156 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11156:	55                   	push   %rbp
   11157:	48 89 e5             	mov    %rsp,%rbp
   1115a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1115e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11162:	48 8b 00             	mov    (%rax),%rax
   11165:	5d                   	pop    %rbp
   11166:	c3                   	ret
   11167:	90                   	nop

0000000000011168 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   11168:	55                   	push   %rbp
   11169:	48 89 e5             	mov    %rsp,%rbp
   1116c:	53                   	push   %rbx
   1116d:	48 83 ec 48          	sub    $0x48,%rsp
   11171:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11175:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   11179:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1117d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11181:	48 89 d6             	mov    %rdx,%rsi
   11184:	48 89 c7             	mov    %rax,%rdi
   11187:	e8 ae 13 00 00       	call   1253a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   1118c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   11190:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11194:	48 89 c7             	mov    %rax,%rdi
   11197:	e8 c4 13 00 00       	call   12560 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   1119c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   111a0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   111a4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   111a8:	48 89 d6             	mov    %rdx,%rsi
   111ab:	48 89 c7             	mov    %rax,%rdi
   111ae:	e8 c7 13 00 00       	call   1257a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   111b3:	84 c0                	test   %al,%al
   111b5:	75 32                	jne    111e9 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   111b7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   111bb:	48 89 c7             	mov    %rax,%rdi
   111be:	e8 d9 13 00 00       	call   1259c <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   111c3:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   111c7:	48 89 c7             	mov    %rax,%rdi
   111ca:	e8 e9 13 00 00       	call   125b8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   111cf:	48 89 c2             	mov    %rax,%rdx
   111d2:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   111d6:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   111da:	48 89 ce             	mov    %rcx,%rsi
   111dd:	48 89 c7             	mov    %rax,%rdi
   111e0:	e8 f1 13 00 00       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   111e5:	84 c0                	test   %al,%al
   111e7:	74 07                	je     111f0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   111e9:	b8 01 00 00 00       	mov    $0x1,%eax
   111ee:	eb 05                	jmp    111f5 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   111f0:	b8 00 00 00 00       	mov    $0x0,%eax
   111f5:	84 c0                	test   %al,%al
   111f7:	74 5d                	je     11256 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   111f9:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   111fd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11201:	48 89 c7             	mov    %rax,%rdi
   11204:	e8 22 0d 00 00       	call   11f2b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   11209:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   1120c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11210:	48 89 d6             	mov    %rdx,%rsi
   11213:	48 89 c7             	mov    %rax,%rdi
   11216:	e8 e4 13 00 00       	call   125ff <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   1121b:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   1121f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   11223:	48 89 d6             	mov    %rdx,%rsi
   11226:	48 89 c7             	mov    %rax,%rdi
   11229:	e8 06 14 00 00       	call   12634 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   1122e:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   11232:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   11236:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1123a:	49 89 c8             	mov    %rcx,%r8
   1123d:	48 89 d1             	mov    %rdx,%rcx
   11240:	48 8d 15 b9 9b 00 00 	lea    0x9bb9(%rip),%rdx        # 1ae00 <_ZSt19piecewise_construct>
   11247:	48 89 c6             	mov    %rax,%rsi
   1124a:	48 89 df             	mov    %rbx,%rdi
   1124d:	e8 00 14 00 00       	call   12652 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   11252:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   11256:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1125a:	48 89 c7             	mov    %rax,%rdi
   1125d:	e8 56 13 00 00       	call   125b8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   11262:	48 83 c0 20          	add    $0x20,%rax
      }
   11266:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1126a:	c9                   	leave
   1126b:	c3                   	ret

000000000001126c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   1126c:	55                   	push   %rbp
   1126d:	48 89 e5             	mov    %rsp,%rbp
   11270:	48 83 ec 20          	sub    $0x20,%rsp
   11274:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   11278:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1127c:	48 89 c7             	mov    %rax,%rdi
   1127f:	e8 f0 14 00 00       	call   12774 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   11284:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11288:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1128c:	48 89 c7             	mov    %rax,%rdi
   1128f:	e8 ba 14 00 00       	call   1274e <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   11294:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11298:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1129c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   112a0:	48 89 d6             	mov    %rdx,%rsi
   112a3:	48 89 c7             	mov    %rax,%rdi
   112a6:	e8 f2 14 00 00       	call   1279d <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   112ab:	c9                   	leave
   112ac:	c3                   	ret
   112ad:	90                   	nop

00000000000112ae <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   112ae:	55                   	push   %rbp
   112af:	48 89 e5             	mov    %rsp,%rbp
   112b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   112b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   112ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112be:	48 8b 00             	mov    (%rax),%rax
   112c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   112c5:	48 c1 e2 03          	shl    $0x3,%rdx
   112c9:	48 01 d0             	add    %rdx,%rax
      }
   112cc:	5d                   	pop    %rbp
   112cd:	c3                   	ret

00000000000112ce <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   112ce:	55                   	push   %rbp
   112cf:	48 89 e5             	mov    %rsp,%rbp
   112d2:	48 83 ec 20          	sub    $0x20,%rsp
   112d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   112da:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   112de:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   112e2:	48 89 d6             	mov    %rdx,%rsi
   112e5:	48 89 c7             	mov    %rax,%rdi
   112e8:	e8 eb 14 00 00       	call   127d8 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   112ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112f1:	c9                   	leave
   112f2:	c3                   	ret
   112f3:	90                   	nop

00000000000112f4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   112f4:	55                   	push   %rbp
   112f5:	48 89 e5             	mov    %rsp,%rbp
   112f8:	48 83 ec 20          	sub    $0x20,%rsp
   112fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11300:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11304:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11308:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1130c:	48 89 d6             	mov    %rdx,%rsi
   1130f:	48 89 c7             	mov    %rax,%rdi
   11312:	e8 c1 14 00 00       	call   127d8 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1131b:	c9                   	leave
   1131c:	c3                   	ret

000000000001131d <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1131d:	55                   	push   %rbp
   1131e:	48 89 e5             	mov    %rsp,%rbp
   11321:	53                   	push   %rbx
   11322:	48 83 ec 18          	sub    $0x18,%rsp
   11326:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1132a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1132e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11332:	48 89 c7             	mov    %rax,%rdi
   11335:	e8 bc 14 00 00       	call   127f6 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1133a:	48 8b 18             	mov    (%rax),%rbx
   1133d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11341:	48 89 c7             	mov    %rax,%rdi
   11344:	e8 ad 14 00 00       	call   127f6 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11349:	48 8b 00             	mov    (%rax),%rax
   1134c:	48 39 c3             	cmp    %rax,%rbx
   1134f:	0f 95 c0             	setne  %al
   11352:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11356:	c9                   	leave
   11357:	c3                   	ret

0000000000011358 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11358:	55                   	push   %rbp
   11359:	48 89 e5             	mov    %rsp,%rbp
   1135c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11364:	48 8b 00             	mov    (%rax),%rax
   11367:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1136b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1136f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11372:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11376:	5d                   	pop    %rbp
   11377:	c3                   	ret

0000000000011378 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11378:	55                   	push   %rbp
   11379:	48 89 e5             	mov    %rsp,%rbp
   1137c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11384:	48 8b 00             	mov    (%rax),%rax
   11387:	5d                   	pop    %rbp
   11388:	c3                   	ret
   11389:	90                   	nop

000000000001138a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1138a:	55                   	push   %rbp
   1138b:	48 89 e5             	mov    %rsp,%rbp
   1138e:	48 83 ec 20          	sub    $0x20,%rsp
   11392:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11396:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1139a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1139e:	48 89 d6             	mov    %rdx,%rsi
   113a1:	48 89 c7             	mov    %rax,%rdi
   113a4:	e8 5b 14 00 00       	call   12804 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   113a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113ad:	c9                   	leave
   113ae:	c3                   	ret
   113af:	90                   	nop

00000000000113b0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   113b0:	55                   	push   %rbp
   113b1:	48 89 e5             	mov    %rsp,%rbp
   113b4:	48 83 ec 20          	sub    $0x20,%rsp
   113b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   113bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113c0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   113c4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   113c8:	48 89 d6             	mov    %rdx,%rsi
   113cb:	48 89 c7             	mov    %rax,%rdi
   113ce:	e8 31 14 00 00       	call   12804 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   113d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113d7:	c9                   	leave
   113d8:	c3                   	ret

00000000000113d9 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   113d9:	55                   	push   %rbp
   113da:	48 89 e5             	mov    %rsp,%rbp
   113dd:	53                   	push   %rbx
   113de:	48 83 ec 18          	sub    $0x18,%rsp
   113e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   113e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   113ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113ee:	48 89 c7             	mov    %rax,%rdi
   113f1:	e8 2c 14 00 00       	call   12822 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   113f6:	48 8b 18             	mov    (%rax),%rbx
   113f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   113fd:	48 89 c7             	mov    %rax,%rdi
   11400:	e8 1d 14 00 00       	call   12822 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11405:	48 8b 00             	mov    (%rax),%rax
   11408:	48 39 c3             	cmp    %rax,%rbx
   1140b:	0f 95 c0             	setne  %al
   1140e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11412:	c9                   	leave
   11413:	c3                   	ret

0000000000011414 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11414:	55                   	push   %rbp
   11415:	48 89 e5             	mov    %rsp,%rbp
   11418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1141c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11420:	48 8b 00             	mov    (%rax),%rax
   11423:	48 8d 50 04          	lea    0x4(%rax),%rdx
   11427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1142b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1142e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11432:	5d                   	pop    %rbp
   11433:	c3                   	ret

0000000000011434 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11434:	55                   	push   %rbp
   11435:	48 89 e5             	mov    %rsp,%rbp
   11438:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1143c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11440:	48 8b 00             	mov    (%rax),%rax
   11443:	5d                   	pop    %rbp
   11444:	c3                   	ret
   11445:	90                   	nop

0000000000011446 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   11446:	55                   	push   %rbp
   11447:	48 89 e5             	mov    %rsp,%rbp
   1144a:	48 83 ec 20          	sub    $0x20,%rsp
   1144e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11452:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   11456:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   1145a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1145e:	48 89 c7             	mov    %rax,%rdi
   11461:	e8 ca 13 00 00       	call   12830 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   11466:	48 89 c2             	mov    %rax,%rdx
   11469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1146d:	48 89 d6             	mov    %rdx,%rsi
   11470:	48 89 c7             	mov    %rax,%rdi
   11473:	e8 c6 13 00 00       	call   1283e <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   11478:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1147c:	c9                   	leave
   1147d:	c3                   	ret

000000000001147e <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1147e:	55                   	push   %rbp
   1147f:	48 89 e5             	mov    %rsp,%rbp
   11482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1148a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1148e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11492:	48 8b 00             	mov    (%rax),%rax
   11495:	48 29 c2             	sub    %rax,%rdx
   11498:	48 89 d0             	mov    %rdx,%rax
   1149b:	48 c1 f8 03          	sar    $0x3,%rax
   1149f:	5d                   	pop    %rbp
   114a0:	c3                   	ret
   114a1:	90                   	nop

00000000000114a2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   114a2:	55                   	push   %rbp
   114a3:	48 89 e5             	mov    %rsp,%rbp
   114a6:	48 83 ec 10          	sub    $0x10,%rsp
   114aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   114b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114b6:	48 89 c7             	mov    %rax,%rdi
   114b9:	e8 5a 03 00 00       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   114be:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   114c2:	0f 92 c0             	setb   %al
   114c5:	84 c0                	test   %al,%al
   114c7:	74 24                	je     114ed <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   114c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114cd:	48 89 c7             	mov    %rax,%rdi
   114d0:	e8 43 03 00 00       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   114d5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   114d9:	48 29 c2             	sub    %rax,%rdx
   114dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114e0:	48 89 d6             	mov    %rdx,%rsi
   114e3:	48 89 c7             	mov    %rax,%rdi
   114e6:	e8 f5 13 00 00       	call   128e0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   114eb:	eb 38                	jmp    11525 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   114ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114f1:	48 89 c7             	mov    %rax,%rdi
   114f4:	e8 1f 03 00 00       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   114f9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   114fd:	0f 92 c0             	setb   %al
   11500:	84 c0                	test   %al,%al
   11502:	74 21                	je     11525 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   11504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11508:	48 8b 00             	mov    (%rax),%rax
   1150b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1150f:	48 c1 e2 03          	shl    $0x3,%rdx
   11513:	48 01 c2             	add    %rax,%rdx
   11516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1151a:	48 89 d6             	mov    %rdx,%rsi
   1151d:	48 89 c7             	mov    %rax,%rdi
   11520:	e8 c5 15 00 00       	call   12aea <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   11525:	90                   	nop
   11526:	c9                   	leave
   11527:	c3                   	ret

0000000000011528 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11528:	55                   	push   %rbp
   11529:	48 89 e5             	mov    %rsp,%rbp
   1152c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11530:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   11534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11538:	48 8b 00             	mov    (%rax),%rax
   1153b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1153f:	48 c1 e2 03          	shl    $0x3,%rdx
   11543:	48 01 d0             	add    %rdx,%rax
      }
   11546:	5d                   	pop    %rbp
   11547:	c3                   	ret

0000000000011548 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11548:	55                   	push   %rbp
   11549:	48 89 e5             	mov    %rsp,%rbp
   1154c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11550:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   11554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11558:	48 8b 00             	mov    (%rax),%rax
   1155b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1155f:	48 c1 e2 03          	shl    $0x3,%rdx
   11563:	48 01 d0             	add    %rdx,%rax
      }
   11566:	5d                   	pop    %rbp
   11567:	c3                   	ret

0000000000011568 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   11568:	55                   	push   %rbp
   11569:	48 89 e5             	mov    %rsp,%rbp
   1156c:	48 83 ec 10          	sub    $0x10,%rsp
   11570:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11578:	48 89 c7             	mov    %rax,%rdi
   1157b:	e8 ca 15 00 00       	call   12b4a <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   11580:	90                   	nop
   11581:	c9                   	leave
   11582:	c3                   	ret
   11583:	90                   	nop

0000000000011584 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   11584:	55                   	push   %rbp
   11585:	48 89 e5             	mov    %rsp,%rbp
   11588:	48 83 ec 10          	sub    $0x10,%rsp
   1158c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11590:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11594:	48 89 c7             	mov    %rax,%rdi
   11597:	e8 ba 15 00 00       	call   12b56 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   1159c:	90                   	nop
   1159d:	c9                   	leave
   1159e:	c3                   	ret
   1159f:	90                   	nop

00000000000115a0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   115a0:	55                   	push   %rbp
   115a1:	48 89 e5             	mov    %rsp,%rbp
   115a4:	53                   	push   %rbx
   115a5:	48 83 ec 38          	sub    $0x38,%rsp
   115a9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   115ad:	48 89 f0             	mov    %rsi,%rax
   115b0:	48 89 d6             	mov    %rdx,%rsi
   115b3:	48 89 f2             	mov    %rsi,%rdx
   115b6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   115ba:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   115be:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   115c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115c6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   115ca:	48 89 d6             	mov    %rdx,%rsi
   115cd:	48 89 c7             	mov    %rax,%rdi
   115d0:	e8 a9 15 00 00       	call   12b7e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   115d5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   115d9:	48 89 c7             	mov    %rax,%rdi
   115dc:	e8 2d 16 00 00       	call   12c0e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   115e1:	48 89 c3             	mov    %rax,%rbx
   115e4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   115e8:	48 89 c7             	mov    %rax,%rdi
   115eb:	e8 0c 16 00 00       	call   12bfc <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   115f0:	48 89 c1             	mov    %rax,%rcx
   115f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115f7:	48 89 da             	mov    %rbx,%rdx
   115fa:	48 89 ce             	mov    %rcx,%rsi
   115fd:	48 89 c7             	mov    %rax,%rdi
   11600:	e8 7d 16 00 00       	call   12c82 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   11605:	eb 1a                	jmp    11621 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   11607:	48 89 c3             	mov    %rax,%rbx
   1160a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1160e:	48 89 c7             	mov    %rax,%rdi
   11611:	e8 8e 15 00 00       	call   12ba4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   11616:	48 89 d8             	mov    %rbx,%rax
   11619:	48 89 c7             	mov    %rax,%rdi
   1161c:	e8 0f 31 ff ff       	call   4730 <_Unwind_Resume@plt>
   11621:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11625:	c9                   	leave
   11626:	c3                   	ret
   11627:	90                   	nop

0000000000011628 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11628:	55                   	push   %rbp
   11629:	48 89 e5             	mov    %rsp,%rbp
   1162c:	48 83 ec 10          	sub    $0x10,%rsp
   11630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11638:	48 89 c7             	mov    %rax,%rdi
   1163b:	e8 fc 16 00 00       	call   12d3c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   11640:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11647:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1164b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1164f:	48 8b 00             	mov    (%rax),%rax
   11652:	48 89 ce             	mov    %rcx,%rsi
   11655:	48 89 c7             	mov    %rax,%rdi
   11658:	e8 ed 16 00 00       	call   12d4a <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   1165d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11661:	48 89 c7             	mov    %rax,%rdi
   11664:	e8 3b 15 00 00       	call   12ba4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   11669:	90                   	nop
   1166a:	c9                   	leave
   1166b:	c3                   	ret

000000000001166c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1166c:	55                   	push   %rbp
   1166d:	48 89 e5             	mov    %rsp,%rbp
   11670:	48 83 ec 10          	sub    $0x10,%rsp
   11674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1167c:	48 89 c7             	mov    %rax,%rdi
   1167f:	e8 3a 17 00 00       	call   12dbe <_ZNSaIP12VkPipeline_TED1Ev>
   11684:	90                   	nop
   11685:	c9                   	leave
   11686:	c3                   	ret

0000000000011687 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   11687:	55                   	push   %rbp
   11688:	48 89 e5             	mov    %rsp,%rbp
   1168b:	41 54                	push   %r12
   1168d:	53                   	push   %rbx
   1168e:	48 83 ec 40          	sub    $0x40,%rsp
   11692:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11696:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1169a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1169e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   116a2:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   116a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   116aa:	48 89 c7             	mov    %rax,%rdi
   116ad:	e8 c2 16 00 00       	call   12d74 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   116b2:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   116b5:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   116b8:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   116bc:	48 89 c7             	mov    %rax,%rdi
   116bf:	e8 de 16 00 00       	call   12da2 <_ZNSaIP12VkPipeline_TEC1Ev>
   116c4:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   116c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116cc:	48 89 de             	mov    %rbx,%rsi
   116cf:	48 89 c7             	mov    %rax,%rdi
   116d2:	e8 03 17 00 00       	call   12dda <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   116d7:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   116db:	48 89 c7             	mov    %rax,%rdi
   116de:	e8 db 16 00 00       	call   12dbe <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   116e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116e7:	48 89 c7             	mov    %rax,%rdi
   116ea:	e8 85 17 00 00       	call   12e74 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   116ef:	48 89 c3             	mov    %rax,%rbx
   116f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   116f6:	48 89 c7             	mov    %rax,%rdi
   116f9:	e8 52 17 00 00       	call   12e50 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   116fe:	48 89 c1             	mov    %rax,%rcx
   11701:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   11705:	8b 55 ec             	mov    -0x14(%rbp),%edx
   11708:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1170c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11710:	49 89 d9             	mov    %rbx,%r9
   11713:	49 89 f8             	mov    %rdi,%r8
   11716:	48 89 c7             	mov    %rax,%rdi
   11719:	e8 52 2a ff ff       	call   4170 <vkCreateGraphicsPipelines@plt>
   1171e:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   11721:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   11725:	74 7f                	je     117a6 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   11727:	bf 10 00 00 00       	mov    $0x10,%edi
   1172c:	e8 4f 2a ff ff       	call   4180 <__cxa_allocate_exception@plt>
   11731:	48 89 c3             	mov    %rax,%rbx
   11734:	48 8d 05 c7 95 00 00 	lea    0x95c7(%rip),%rax        # 1ad02 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x222>
   1173b:	48 89 c6             	mov    %rax,%rsi
   1173e:	48 89 df             	mov    %rbx,%rdi
   11741:	e8 ca 29 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
   11746:	48 8b 05 5b 68 01 00 	mov    0x1685b(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1174d:	48 89 c2             	mov    %rax,%rdx
   11750:	48 8d 05 e9 65 01 00 	lea    0x165e9(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11757:	48 89 c6             	mov    %rax,%rsi
   1175a:	48 89 df             	mov    %rbx,%rdi
   1175d:	e8 6e 2f ff ff       	call   46d0 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   11762:	48 89 c3             	mov    %rax,%rbx
   11765:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   11769:	48 89 c7             	mov    %rax,%rdi
   1176c:	e8 4d 16 00 00       	call   12dbe <_ZNSaIP12VkPipeline_TED1Ev>
   11771:	48 89 d8             	mov    %rbx,%rax
   11774:	48 89 c7             	mov    %rax,%rdi
   11777:	e8 b4 2f ff ff       	call   4730 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   1177c:	49 89 c4             	mov    %rax,%r12
   1177f:	48 89 df             	mov    %rbx,%rdi
   11782:	e8 c9 2a ff ff       	call   4250 <__cxa_free_exception@plt>
   11787:	4c 89 e3             	mov    %r12,%rbx
   1178a:	eb 03                	jmp    1178f <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   1178c:	48 89 c3             	mov    %rax,%rbx
   1178f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11793:	48 89 c7             	mov    %rax,%rdi
   11796:	e8 19 00 00 00       	call   117b4 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   1179b:	48 89 d8             	mov    %rbx,%rax
   1179e:	48 89 c7             	mov    %rax,%rdi
   117a1:	e8 8a 2f ff ff       	call   4730 <_Unwind_Resume@plt>
  return pipelines;
   117a6:	90                   	nop
}
   117a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117ab:	48 83 c4 40          	add    $0x40,%rsp
   117af:	5b                   	pop    %rbx
   117b0:	41 5c                	pop    %r12
   117b2:	5d                   	pop    %rbp
   117b3:	c3                   	ret

00000000000117b4 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   117b4:	55                   	push   %rbp
   117b5:	48 89 e5             	mov    %rsp,%rbp
   117b8:	48 83 ec 10          	sub    $0x10,%rsp
   117bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   117c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117c4:	48 89 c7             	mov    %rax,%rdi
   117c7:	e8 1a 17 00 00       	call   12ee6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   117cc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   117cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117d3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   117d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117db:	48 8b 00             	mov    (%rax),%rax
   117de:	48 89 ce             	mov    %rcx,%rsi
   117e1:	48 89 c7             	mov    %rax,%rdi
   117e4:	e8 0b 17 00 00       	call   12ef4 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   117e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117ed:	48 89 c7             	mov    %rax,%rdi
   117f0:	e8 a3 16 00 00       	call   12e98 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   117f5:	90                   	nop
   117f6:	c9                   	leave
   117f7:	c3                   	ret

00000000000117f8 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   117f8:	55                   	push   %rbp
   117f9:	48 89 e5             	mov    %rsp,%rbp
   117fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11800:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   11804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11808:	48 8b 00             	mov    (%rax),%rax
   1180b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1180f:	48 c1 e2 03          	shl    $0x3,%rdx
   11813:	48 01 d0             	add    %rdx,%rax
      }
   11816:	5d                   	pop    %rbp
   11817:	c3                   	ret

0000000000011818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11818:	55                   	push   %rbp
   11819:	48 89 e5             	mov    %rsp,%rbp
   1181c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11824:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1182c:	48 8b 00             	mov    (%rax),%rax
   1182f:	48 29 c2             	sub    %rax,%rdx
   11832:	48 89 d0             	mov    %rdx,%rax
   11835:	48 c1 f8 03          	sar    $0x3,%rax
   11839:	5d                   	pop    %rbp
   1183a:	c3                   	ret
   1183b:	90                   	nop

000000000001183c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   1183c:	55                   	push   %rbp
   1183d:	48 89 e5             	mov    %rsp,%rbp
   11840:	48 83 ec 10          	sub    $0x10,%rsp
   11844:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11848:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   1184c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11850:	48 89 c7             	mov    %rax,%rdi
   11853:	e8 c6 16 00 00       	call   12f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   11858:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1185c:	0f 92 c0             	setb   %al
   1185f:	84 c0                	test   %al,%al
   11861:	74 24                	je     11887 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   11863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11867:	48 89 c7             	mov    %rax,%rdi
   1186a:	e8 af 16 00 00       	call   12f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1186f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11873:	48 29 c2             	sub    %rax,%rdx
   11876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1187a:	48 89 d6             	mov    %rdx,%rsi
   1187d:	48 89 c7             	mov    %rax,%rdi
   11880:	e8 bd 16 00 00       	call   12f42 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   11885:	eb 38                	jmp    118bf <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   11887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1188b:	48 89 c7             	mov    %rax,%rdi
   1188e:	e8 8b 16 00 00       	call   12f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   11893:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   11897:	0f 92 c0             	setb   %al
   1189a:	84 c0                	test   %al,%al
   1189c:	74 21                	je     118bf <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   1189e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118a2:	48 8b 00             	mov    (%rax),%rax
   118a5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   118a9:	48 c1 e2 03          	shl    $0x3,%rdx
   118ad:	48 01 c2             	add    %rax,%rdx
   118b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118b4:	48 89 d6             	mov    %rdx,%rsi
   118b7:	48 89 c7             	mov    %rax,%rdi
   118ba:	e8 8d 18 00 00       	call   1314c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   118bf:	90                   	nop
   118c0:	c9                   	leave
   118c1:	c3                   	ret

00000000000118c2 <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   118c2:	55                   	push   %rbp
   118c3:	48 89 e5             	mov    %rsp,%rbp
   118c6:	48 83 ec 10          	sub    $0x10,%rsp
   118ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118d2:	48 89 c7             	mov    %rax,%rdi
   118d5:	e8 d2 18 00 00       	call   131ac <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   118da:	90                   	nop
   118db:	c9                   	leave
   118dc:	c3                   	ret
   118dd:	90                   	nop

00000000000118de <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   118de:	55                   	push   %rbp
   118df:	48 89 e5             	mov    %rsp,%rbp
   118e2:	48 83 ec 10          	sub    $0x10,%rsp
   118e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118ee:	48 89 c7             	mov    %rax,%rdi
   118f1:	e8 c2 18 00 00       	call   131b8 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   118f6:	90                   	nop
   118f7:	c9                   	leave
   118f8:	c3                   	ret
   118f9:	90                   	nop

00000000000118fa <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   118fa:	55                   	push   %rbp
   118fb:	48 89 e5             	mov    %rsp,%rbp
   118fe:	53                   	push   %rbx
   118ff:	48 83 ec 38          	sub    $0x38,%rsp
   11903:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11907:	48 89 f0             	mov    %rsi,%rax
   1190a:	48 89 d6             	mov    %rdx,%rsi
   1190d:	48 89 f2             	mov    %rsi,%rdx
   11910:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11914:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   11918:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   1191c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11920:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11924:	48 89 d6             	mov    %rdx,%rsi
   11927:	48 89 c7             	mov    %rax,%rdi
   1192a:	e8 95 18 00 00       	call   131c4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   1192f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11933:	48 89 c7             	mov    %rax,%rdi
   11936:	e8 c1 18 00 00       	call   131fc <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   1193b:	48 89 c3             	mov    %rax,%rbx
   1193e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11942:	48 89 c7             	mov    %rax,%rdi
   11945:	e8 a0 18 00 00       	call   131ea <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   1194a:	48 89 c1             	mov    %rax,%rcx
   1194d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11951:	48 89 da             	mov    %rbx,%rdx
   11954:	48 89 ce             	mov    %rcx,%rsi
   11957:	48 89 c7             	mov    %rax,%rdi
   1195a:	e8 03 19 00 00       	call   13262 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   1195f:	eb 1a                	jmp    1197b <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   11961:	48 89 c3             	mov    %rax,%rbx
   11964:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11968:	48 89 c7             	mov    %rax,%rdi
   1196b:	e8 c2 00 00 00       	call   11a32 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   11970:	48 89 d8             	mov    %rbx,%rax
   11973:	48 89 c7             	mov    %rax,%rdi
   11976:	e8 b5 2d ff ff       	call   4730 <_Unwind_Resume@plt>
   1197b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1197f:	c9                   	leave
   11980:	c3                   	ret
   11981:	90                   	nop

0000000000011982 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11982:	55                   	push   %rbp
   11983:	48 89 e5             	mov    %rsp,%rbp
   11986:	48 83 ec 10          	sub    $0x10,%rsp
   1198a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1198e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11992:	48 89 c7             	mov    %rax,%rdi
   11995:	e8 78 19 00 00       	call   13312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1199a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1199d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119a1:	48 8b 48 08          	mov    0x8(%rax),%rcx
   119a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119a9:	48 8b 00             	mov    (%rax),%rax
   119ac:	48 89 ce             	mov    %rcx,%rsi
   119af:	48 89 c7             	mov    %rax,%rdi
   119b2:	e8 69 19 00 00       	call   13320 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   119b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119bb:	48 89 c7             	mov    %rax,%rdi
   119be:	e8 6f 00 00 00       	call   11a32 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   119c3:	90                   	nop
   119c4:	c9                   	leave
   119c5:	c3                   	ret

00000000000119c6 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   119c6:	55                   	push   %rbp
   119c7:	48 89 e5             	mov    %rsp,%rbp
   119ca:	48 83 ec 10          	sub    $0x10,%rsp
   119ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   119d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119d6:	48 8b 10             	mov    (%rax),%rdx
   119d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119dd:	48 89 d6             	mov    %rdx,%rsi
   119e0:	48 89 c7             	mov    %rax,%rdi
   119e3:	e8 62 19 00 00       	call   1334a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   119e8:	c9                   	leave
   119e9:	c3                   	ret

00000000000119ea <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   119ea:	55                   	push   %rbp
   119eb:	48 89 e5             	mov    %rsp,%rbp
   119ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   119f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119fa:	48 8b 00             	mov    (%rax),%rax
   119fd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11a01:	48 c1 e2 03          	shl    $0x3,%rdx
   11a05:	48 01 d0             	add    %rdx,%rax
      }
   11a08:	5d                   	pop    %rbp
   11a09:	c3                   	ret

0000000000011a0a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11a0a:	55                   	push   %rbp
   11a0b:	48 89 e5             	mov    %rsp,%rbp
   11a0e:	48 83 ec 10          	sub    $0x10,%rsp
   11a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   11a16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a1a:	48 89 c7             	mov    %rax,%rdi
   11a1d:	e8 a0 fe ff ff       	call   118c2 <_ZNSaIP13VkImageView_TEC1Ev>
   11a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a26:	48 89 c7             	mov    %rax,%rdi
   11a29:	e8 2e 19 00 00       	call   1335c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   11a2e:	90                   	nop
   11a2f:	c9                   	leave
   11a30:	c3                   	ret
   11a31:	90                   	nop

0000000000011a32 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   11a32:	55                   	push   %rbp
   11a33:	48 89 e5             	mov    %rsp,%rbp
   11a36:	48 83 ec 10          	sub    $0x10,%rsp
   11a3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   11a3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a42:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a4a:	48 8b 00             	mov    (%rax),%rax
   11a4d:	48 29 c2             	sub    %rax,%rdx
   11a50:	48 89 d0             	mov    %rdx,%rax
   11a53:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   11a57:	48 89 c2             	mov    %rax,%rdx
   11a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a5e:	48 8b 08             	mov    (%rax),%rcx
   11a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a65:	48 89 ce             	mov    %rcx,%rsi
   11a68:	48 89 c7             	mov    %rax,%rdi
   11a6b:	e8 1a 19 00 00       	call   1338a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   11a70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a74:	48 89 c7             	mov    %rax,%rdi
   11a77:	e8 26 ef ff ff       	call   109a2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   11a7c:	90                   	nop
   11a7d:	c9                   	leave
   11a7e:	c3                   	ret
   11a7f:	90                   	nop

0000000000011a80 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11a80:	55                   	push   %rbp
   11a81:	48 89 e5             	mov    %rsp,%rbp
   11a84:	48 83 ec 10          	sub    $0x10,%rsp
   11a88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   11a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a90:	48 89 c7             	mov    %rax,%rdi
   11a93:	e8 92 70 ff ff       	call   8b2a <_ZNSaIP9VkImage_TEC1Ev>
   11a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a9c:	48 89 c7             	mov    %rax,%rdi
   11a9f:	e8 22 96 ff ff       	call   b0c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   11aa4:	90                   	nop
   11aa5:	c9                   	leave
   11aa6:	c3                   	ret
   11aa7:	90                   	nop

0000000000011aa8 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11aa8:	55                   	push   %rbp
   11aa9:	48 89 e5             	mov    %rsp,%rbp
   11aac:	48 83 ec 10          	sub    $0x10,%rsp
   11ab0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   11ab4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ab8:	48 89 c7             	mov    %rax,%rdi
   11abb:	e8 00 19 00 00       	call   133c0 <_ZNSaIP15VkFramebuffer_TEC1Ev>
   11ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ac4:	48 89 c7             	mov    %rax,%rdi
   11ac7:	e8 10 19 00 00       	call   133dc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   11acc:	90                   	nop
   11acd:	c9                   	leave
   11ace:	c3                   	ret
   11acf:	90                   	nop

0000000000011ad0 <_ZNSaIP15VkFramebuffer_TED1Ev>:
   11ad0:	55                   	push   %rbp
   11ad1:	48 89 e5             	mov    %rsp,%rbp
   11ad4:	48 83 ec 10          	sub    $0x10,%rsp
   11ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ae0:	48 89 c7             	mov    %rax,%rdi
   11ae3:	e8 22 19 00 00       	call   1340a <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   11ae8:	90                   	nop
   11ae9:	c9                   	leave
   11aea:	c3                   	ret
   11aeb:	90                   	nop

0000000000011aec <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   11aec:	55                   	push   %rbp
   11aed:	48 89 e5             	mov    %rsp,%rbp
   11af0:	48 83 ec 10          	sub    $0x10,%rsp
   11af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   11af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11afc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11b00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b04:	48 8b 00             	mov    (%rax),%rax
   11b07:	48 29 c2             	sub    %rax,%rdx
   11b0a:	48 89 d0             	mov    %rdx,%rax
   11b0d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   11b11:	48 89 c2             	mov    %rax,%rdx
   11b14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b18:	48 8b 08             	mov    (%rax),%rcx
   11b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b1f:	48 89 ce             	mov    %rcx,%rsi
   11b22:	48 89 c7             	mov    %rax,%rdi
   11b25:	e8 ec 18 00 00       	call   13416 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   11b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b2e:	48 89 c7             	mov    %rax,%rdi
   11b31:	e8 32 ef ff ff       	call   10a68 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   11b36:	90                   	nop
   11b37:	c9                   	leave
   11b38:	c3                   	ret
   11b39:	90                   	nop

0000000000011b3a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11b3a:	55                   	push   %rbp
   11b3b:	48 89 e5             	mov    %rsp,%rbp
   11b3e:	48 83 ec 10          	sub    $0x10,%rsp
   11b42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b4a:	48 89 c7             	mov    %rax,%rdi
   11b4d:	e8 fa 18 00 00       	call   1344c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11b52:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11b55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b59:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11b5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b61:	48 8b 00             	mov    (%rax),%rax
   11b64:	48 89 ce             	mov    %rcx,%rsi
   11b67:	48 89 c7             	mov    %rax,%rdi
   11b6a:	e8 eb 18 00 00       	call   1345a <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   11b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b73:	48 89 c7             	mov    %rax,%rdi
   11b76:	e8 71 ff ff ff       	call   11aec <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   11b7b:	90                   	nop
   11b7c:	c9                   	leave
   11b7d:	c3                   	ret

0000000000011b7e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11b7e:	55                   	push   %rbp
   11b7f:	48 89 e5             	mov    %rsp,%rbp
   11b82:	48 83 ec 20          	sub    $0x20,%rsp
   11b86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11b8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11b8e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11b92:	48 89 d6             	mov    %rdx,%rsi
   11b95:	48 89 c7             	mov    %rax,%rdi
   11b98:	e8 e7 18 00 00       	call   13484 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ba1:	c9                   	leave
   11ba2:	c3                   	ret
   11ba3:	90                   	nop

0000000000011ba4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11ba4:	55                   	push   %rbp
   11ba5:	48 89 e5             	mov    %rsp,%rbp
   11ba8:	48 83 ec 20          	sub    $0x20,%rsp
   11bac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11bb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bb4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11bb8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11bbc:	48 89 d6             	mov    %rdx,%rsi
   11bbf:	48 89 c7             	mov    %rax,%rdi
   11bc2:	e8 bd 18 00 00       	call   13484 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11bc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bcb:	c9                   	leave
   11bcc:	c3                   	ret

0000000000011bcd <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11bcd:	55                   	push   %rbp
   11bce:	48 89 e5             	mov    %rsp,%rbp
   11bd1:	53                   	push   %rbx
   11bd2:	48 83 ec 18          	sub    $0x18,%rsp
   11bd6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11bda:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11bde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11be2:	48 89 c7             	mov    %rax,%rdi
   11be5:	e8 b8 18 00 00       	call   134a2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   11bea:	48 8b 18             	mov    (%rax),%rbx
   11bed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11bf1:	48 89 c7             	mov    %rax,%rdi
   11bf4:	e8 a9 18 00 00       	call   134a2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   11bf9:	48 8b 00             	mov    (%rax),%rax
   11bfc:	48 39 c3             	cmp    %rax,%rbx
   11bff:	0f 95 c0             	setne  %al
   11c02:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11c06:	c9                   	leave
   11c07:	c3                   	ret

0000000000011c08 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11c08:	55                   	push   %rbp
   11c09:	48 89 e5             	mov    %rsp,%rbp
   11c0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c14:	48 8b 00             	mov    (%rax),%rax
   11c17:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c1f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11c26:	5d                   	pop    %rbp
   11c27:	c3                   	ret

0000000000011c28 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11c28:	55                   	push   %rbp
   11c29:	48 89 e5             	mov    %rsp,%rbp
   11c2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c34:	48 8b 00             	mov    (%rax),%rax
   11c37:	5d                   	pop    %rbp
   11c38:	c3                   	ret
   11c39:	90                   	nop

0000000000011c3a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11c3a:	55                   	push   %rbp
   11c3b:	48 89 e5             	mov    %rsp,%rbp
   11c3e:	48 83 ec 20          	sub    $0x20,%rsp
   11c42:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11c46:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11c4a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11c4e:	48 89 d6             	mov    %rdx,%rsi
   11c51:	48 89 c7             	mov    %rax,%rdi
   11c54:	e8 57 18 00 00       	call   134b0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c5d:	c9                   	leave
   11c5e:	c3                   	ret
   11c5f:	90                   	nop

0000000000011c60 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11c60:	55                   	push   %rbp
   11c61:	48 89 e5             	mov    %rsp,%rbp
   11c64:	48 83 ec 20          	sub    $0x20,%rsp
   11c68:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11c6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c70:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11c74:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11c78:	48 89 d6             	mov    %rdx,%rsi
   11c7b:	48 89 c7             	mov    %rax,%rdi
   11c7e:	e8 2d 18 00 00       	call   134b0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11c83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c87:	c9                   	leave
   11c88:	c3                   	ret

0000000000011c89 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11c89:	55                   	push   %rbp
   11c8a:	48 89 e5             	mov    %rsp,%rbp
   11c8d:	53                   	push   %rbx
   11c8e:	48 83 ec 18          	sub    $0x18,%rsp
   11c92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11c96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11c9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c9e:	48 89 c7             	mov    %rax,%rdi
   11ca1:	e8 28 18 00 00       	call   134ce <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   11ca6:	48 8b 18             	mov    (%rax),%rbx
   11ca9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11cad:	48 89 c7             	mov    %rax,%rdi
   11cb0:	e8 19 18 00 00       	call   134ce <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   11cb5:	48 8b 00             	mov    (%rax),%rax
   11cb8:	48 39 c3             	cmp    %rax,%rbx
   11cbb:	0f 95 c0             	setne  %al
   11cbe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11cc2:	c9                   	leave
   11cc3:	c3                   	ret

0000000000011cc4 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11cc4:	55                   	push   %rbp
   11cc5:	48 89 e5             	mov    %rsp,%rbp
   11cc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cd0:	48 8b 00             	mov    (%rax),%rax
   11cd3:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11cd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cdb:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11ce2:	5d                   	pop    %rbp
   11ce3:	c3                   	ret

0000000000011ce4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11ce4:	55                   	push   %rbp
   11ce5:	48 89 e5             	mov    %rsp,%rbp
   11ce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cf0:	48 8b 00             	mov    (%rax),%rax
   11cf3:	5d                   	pop    %rbp
   11cf4:	c3                   	ret
   11cf5:	90                   	nop

0000000000011cf6 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
   11cf6:	55                   	push   %rbp
   11cf7:	48 89 e5             	mov    %rsp,%rbp
   11cfa:	53                   	push   %rbx
   11cfb:	48 83 ec 18          	sub    $0x18,%rsp
   11cff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11d03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d07:	48 89 c7             	mov    %rax,%rdi
   11d0a:	e8 cd 17 00 00       	call   134dc <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
   11d0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d13:	48 83 c0 08          	add    $0x8,%rax
   11d17:	48 89 c7             	mov    %rax,%rdi
   11d1a:	e8 b1 28 ff ff       	call   45d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
   11d1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d23:	48 83 c0 08          	add    $0x8,%rax
   11d27:	48 8d 15 f0 8f 00 00 	lea    0x8ff0(%rip),%rdx        # 1ad1e <_ZZN9VulkanApp3runEvE11sec_to_mics+0x23e>
   11d2e:	48 89 d6             	mov    %rdx,%rsi
   11d31:	48 89 c7             	mov    %rax,%rdi
   11d34:	e8 67 28 ff ff       	call   45a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
   11d39:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11d3d:	e8 1e 28 ff ff       	call   4560 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11d42:	48 89 03             	mov    %rax,(%rbx)
  }
   11d45:	eb 1e                	jmp    11d65 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
   11d47:	48 89 c3             	mov    %rax,%rbx
   11d4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d4e:	48 83 c0 08          	add    $0x8,%rax
   11d52:	48 89 c7             	mov    %rax,%rdi
   11d55:	e8 96 24 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11d5a:	48 89 d8             	mov    %rbx,%rax
   11d5d:	48 89 c7             	mov    %rax,%rdi
   11d60:	e8 cb 29 ff ff       	call   4730 <_Unwind_Resume@plt>
   11d65:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11d69:	c9                   	leave
   11d6a:	c3                   	ret
   11d6b:	90                   	nop

0000000000011d6c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
   11d6c:	55                   	push   %rbp
   11d6d:	48 89 e5             	mov    %rsp,%rbp
   11d70:	48 83 ec 20          	sub    $0x20,%rsp
   11d74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
   11d78:	e8 e3 27 ff ff       	call   4560 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11d7d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
   11d81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d85:	48 83 c0 08          	add    $0x8,%rax
   11d89:	48 89 c7             	mov    %rax,%rdi
   11d8c:	e8 5f 24 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11d91:	90                   	nop
   11d92:	c9                   	leave
   11d93:	c3                   	ret

0000000000011d94 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   11d94:	55                   	push   %rbp
   11d95:	48 89 e5             	mov    %rsp,%rbp
   11d98:	48 83 ec 20          	sub    $0x20,%rsp
   11d9c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11da0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   11da4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11da8:	48 89 c7             	mov    %rax,%rdi
   11dab:	e8 4c 17 00 00       	call   134fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11db0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11db4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11db8:	48 89 c7             	mov    %rax,%rdi
   11dbb:	e8 3c 17 00 00       	call   134fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11dc0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11dc4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11dc8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11dcc:	48 89 d6             	mov    %rdx,%rsi
   11dcf:	48 89 c7             	mov    %rax,%rdi
   11dd2:	e8 36 17 00 00       	call   1350d <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   11dd7:	c9                   	leave
   11dd8:	c3                   	ret

0000000000011dd9 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   11dd9:	55                   	push   %rbp
   11dda:	48 89 e5             	mov    %rsp,%rbp
   11ddd:	48 83 ec 10          	sub    $0x10,%rsp
   11de1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   11de5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11de9:	48 89 c7             	mov    %rax,%rdi
   11dec:	e8 85 17 00 00       	call   13576 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   11df1:	c9                   	leave
   11df2:	c3                   	ret
   11df3:	90                   	nop

0000000000011df4 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   11df4:	55                   	push   %rbp
   11df5:	48 89 e5             	mov    %rsp,%rbp
   11df8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   11dfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e00:	48 8b 00             	mov    (%rax),%rax
   11e03:	5d                   	pop    %rbp
   11e04:	c3                   	ret
   11e05:	90                   	nop

0000000000011e06 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
   11e06:	55                   	push   %rbp
   11e07:	48 89 e5             	mov    %rsp,%rbp
   11e0a:	53                   	push   %rbx
   11e0b:	48 83 ec 18          	sub    $0x18,%rsp
   11e0f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11e13:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11e17:	e8 44 27 ff ff       	call   4560 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11e1c:	48 89 03             	mov    %rax,(%rbx)
   11e1f:	90                   	nop
   11e20:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11e24:	c9                   	leave
   11e25:	c3                   	ret

0000000000011e26 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   11e26:	55                   	push   %rbp
   11e27:	48 89 e5             	mov    %rsp,%rbp
   11e2a:	48 83 ec 20          	sub    $0x20,%rsp
   11e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11e36:	89 d0                	mov    %edx,%eax
   11e38:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   11e3b:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   11e3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11e43:	be 01 00 00 00       	mov    $0x1,%esi
   11e48:	48 89 c7             	mov    %rax,%rdi
   11e4b:	e8 f0 25 ff ff       	call   4440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   11e50:	48 89 c7             	mov    %rax,%rdi
   11e53:	e8 d3 00 00 00       	call   11f2b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   11e58:	48 89 c2             	mov    %rax,%rdx
   11e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e5f:	48 89 d6             	mov    %rdx,%rsi
   11e62:	48 89 c7             	mov    %rax,%rdi
   11e65:	e8 76 23 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   11e6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e6e:	c9                   	leave
   11e6f:	c3                   	ret

0000000000011e70 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   11e70:	55                   	push   %rbp
   11e71:	48 89 e5             	mov    %rsp,%rbp
   11e74:	48 83 ec 20          	sub    $0x20,%rsp
   11e78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   11e7c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11e80:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11e84:	48 89 d6             	mov    %rdx,%rsi
   11e87:	48 89 c7             	mov    %rax,%rdi
   11e8a:	e8 41 17 00 00       	call   135d0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   11e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e93:	c9                   	leave
   11e94:	c3                   	ret
   11e95:	90                   	nop

0000000000011e96 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   11e96:	55                   	push   %rbp
   11e97:	48 89 e5             	mov    %rsp,%rbp
   11e9a:	48 83 ec 20          	sub    $0x20,%rsp
   11e9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   11ea2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ea6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11eaa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11eae:	48 89 d6             	mov    %rdx,%rsi
   11eb1:	48 89 c7             	mov    %rax,%rdi
   11eb4:	e8 17 17 00 00       	call   135d0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   11eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ebd:	c9                   	leave
   11ebe:	c3                   	ret

0000000000011ebf <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11ebf:	55                   	push   %rbp
   11ec0:	48 89 e5             	mov    %rsp,%rbp
   11ec3:	53                   	push   %rbx
   11ec4:	48 83 ec 18          	sub    $0x18,%rsp
   11ec8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ecc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11ed0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ed4:	48 89 c7             	mov    %rax,%rdi
   11ed7:	e8 12 17 00 00       	call   135ee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11edc:	48 8b 18             	mov    (%rax),%rbx
   11edf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ee3:	48 89 c7             	mov    %rax,%rdi
   11ee6:	e8 03 17 00 00       	call   135ee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11eeb:	48 8b 00             	mov    (%rax),%rax
   11eee:	48 39 c3             	cmp    %rax,%rbx
   11ef1:	0f 95 c0             	setne  %al
   11ef4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11ef8:	c9                   	leave
   11ef9:	c3                   	ret

0000000000011efa <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11efa:	55                   	push   %rbp
   11efb:	48 89 e5             	mov    %rsp,%rbp
   11efe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11f02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f06:	48 8b 00             	mov    (%rax),%rax
   11f09:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f11:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11f14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11f18:	5d                   	pop    %rbp
   11f19:	c3                   	ret

0000000000011f1a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11f1a:	55                   	push   %rbp
   11f1b:	48 89 e5             	mov    %rsp,%rbp
   11f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f26:	48 8b 00             	mov    (%rax),%rax
   11f29:	5d                   	pop    %rbp
   11f2a:	c3                   	ret

0000000000011f2b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   11f2b:	55                   	push   %rbp
   11f2c:	48 89 e5             	mov    %rsp,%rbp
   11f2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   11f33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f37:	5d                   	pop    %rbp
   11f38:	c3                   	ret
   11f39:	90                   	nop

0000000000011f3a <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   11f3a:	55                   	push   %rbp
   11f3b:	48 89 e5             	mov    %rsp,%rbp
   11f3e:	48 83 ec 10          	sub    $0x10,%rsp
   11f42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   11f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11f52:	48 89 d6             	mov    %rdx,%rsi
   11f55:	48 89 c7             	mov    %rax,%rdi
   11f58:	e8 49 80 ff ff       	call   9fa6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   11f5d:	90                   	nop
   11f5e:	c9                   	leave
   11f5f:	c3                   	ret

0000000000011f60 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   11f60:	55                   	push   %rbp
   11f61:	48 89 e5             	mov    %rsp,%rbp
   11f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f6c:	48 8b 00             	mov    (%rax),%rax
   11f6f:	5d                   	pop    %rbp
   11f70:	c3                   	ret
   11f71:	90                   	nop

0000000000011f72 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   11f72:	55                   	push   %rbp
   11f73:	48 89 e5             	mov    %rsp,%rbp
   11f76:	53                   	push   %rbx
   11f77:	48 83 ec 18          	sub    $0x18,%rsp
   11f7b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11f7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f83:	48 89 c7             	mov    %rax,%rdi
   11f86:	e8 d5 ff ff ff       	call   11f60 <_ZNKSt16initializer_listIPKcE5beginEv>
   11f8b:	48 89 c3             	mov    %rax,%rbx
   11f8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f92:	48 89 c7             	mov    %rax,%rdi
   11f95:	e8 62 16 00 00       	call   135fc <_ZNKSt16initializer_listIPKcE4sizeEv>
   11f9a:	48 c1 e0 03          	shl    $0x3,%rax
   11f9e:	48 01 d8             	add    %rbx,%rax
   11fa1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11fa5:	c9                   	leave
   11fa6:	c3                   	ret

0000000000011fa7 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   11fa7:	55                   	push   %rbp
   11fa8:	48 89 e5             	mov    %rsp,%rbp
   11fab:	48 83 ec 10          	sub    $0x10,%rsp
   11faf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11fb3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   11fb7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11fbb:	48 89 c7             	mov    %rax,%rdi
   11fbe:	e8 4b 16 00 00       	call   1360e <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   11fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fc7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11fcb:	48 89 d6             	mov    %rdx,%rsi
   11fce:	48 89 c7             	mov    %rax,%rdi
   11fd1:	e8 43 16 00 00       	call   13619 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   11fd6:	c9                   	leave
   11fd7:	c3                   	ret

0000000000011fd8 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   11fd8:	55                   	push   %rbp
   11fd9:	48 89 e5             	mov    %rsp,%rbp
   11fdc:	53                   	push   %rbx
   11fdd:	48 83 ec 38          	sub    $0x38,%rsp
   11fe1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11fe5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11fe9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   11fed:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11ff1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11ff5:	48 89 d6             	mov    %rdx,%rsi
   11ff8:	48 89 c7             	mov    %rax,%rdi
   11ffb:	e8 a7 ff ff ff       	call   11fa7 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   12000:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   12004:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   12008:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1200c:	48 89 c7             	mov    %rax,%rdi
   1200f:	e8 08 71 ff ff       	call   911c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12014:	48 89 c2             	mov    %rax,%rdx
   12017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1201b:	48 89 d6             	mov    %rdx,%rsi
   1201e:	48 89 c7             	mov    %rax,%rdi
   12021:	e8 f7 6f ff ff       	call   901d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   12026:	48 89 c6             	mov    %rax,%rsi
   12029:	48 89 df             	mov    %rbx,%rdi
   1202c:	e8 01 8b ff ff       	call   ab32 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   12031:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12035:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   12038:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1203c:	48 8b 00             	mov    (%rax),%rax
   1203f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12043:	48 c1 e2 03          	shl    $0x3,%rdx
   12047:	48 01 c2             	add    %rax,%rdx
   1204a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1204e:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   12052:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12056:	48 89 c7             	mov    %rax,%rdi
   12059:	e8 be 70 ff ff       	call   911c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1205e:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   12061:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12065:	48 8b 10             	mov    (%rax),%rdx
   12068:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1206c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12070:	48 89 c7             	mov    %rax,%rdi
   12073:	e8 bb 15 00 00       	call   13633 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   12078:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1207c:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   12080:	90                   	nop
   12081:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12085:	c9                   	leave
   12086:	c3                   	ret

0000000000012087 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12087:	55                   	push   %rbp
   12088:	48 89 e5             	mov    %rsp,%rbp
   1208b:	48 83 ec 20          	sub    $0x20,%rsp
   1208f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12093:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12097:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1209b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1209f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120a3:	48 89 d6             	mov    %rdx,%rsi
   120a6:	48 89 c7             	mov    %rax,%rdi
   120a9:	e8 b6 15 00 00       	call   13664 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   120ae:	90                   	nop
   120af:	c9                   	leave
   120b0:	c3                   	ret
   120b1:	90                   	nop

00000000000120b2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   120b2:	55                   	push   %rbp
   120b3:	48 89 e5             	mov    %rsp,%rbp
   120b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   120be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   120c2:	48 8b 10             	mov    (%rax),%rdx
   120c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120c9:	48 89 10             	mov    %rdx,(%rax)
   120cc:	90                   	nop
   120cd:	5d                   	pop    %rbp
   120ce:	c3                   	ret
   120cf:	90                   	nop

00000000000120d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   120d0:	55                   	push   %rbp
   120d1:	48 89 e5             	mov    %rsp,%rbp
   120d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   120d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120dc:	5d                   	pop    %rbp
   120dd:	c3                   	ret

00000000000120de <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   120de:	55                   	push   %rbp
   120df:	48 89 e5             	mov    %rsp,%rbp
   120e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   120e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120ea:	5d                   	pop    %rbp
   120eb:	c3                   	ret

00000000000120ec <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   120ec:	55                   	push   %rbp
   120ed:	48 89 e5             	mov    %rsp,%rbp
   120f0:	48 83 ec 20          	sub    $0x20,%rsp
   120f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   120fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   12100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12104:	48 89 c7             	mov    %rax,%rdi
   12107:	e8 d2 ff ff ff       	call   120de <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1210c:	48 89 c2             	mov    %rax,%rdx
   1210f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12117:	48 89 ce             	mov    %rcx,%rsi
   1211a:	48 89 c7             	mov    %rax,%rdi
   1211d:	e8 68 15 00 00       	call   1368a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   12122:	90                   	nop
   12123:	c9                   	leave
   12124:	c3                   	ret
   12125:	90                   	nop

0000000000012126 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   12126:	55                   	push   %rbp
   12127:	48 89 e5             	mov    %rsp,%rbp
   1212a:	53                   	push   %rbx
   1212b:	48 83 ec 68          	sub    $0x68,%rsp
   1212f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   12133:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   12137:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   1213b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1213f:	48 8d 15 dc 8b 00 00 	lea    0x8bdc(%rip),%rdx        # 1ad22 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x242>
   12146:	be 01 00 00 00       	mov    $0x1,%esi
   1214b:	48 89 c7             	mov    %rax,%rdi
   1214e:	e8 79 15 00 00       	call   136cc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   12153:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   12157:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1215b:	48 8b 00             	mov    (%rax),%rax
   1215e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   12162:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12166:	48 8b 40 08          	mov    0x8(%rax),%rax
   1216a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   1216e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12172:	48 89 c7             	mov    %rax,%rdi
   12175:	e8 8c ea ff ff       	call   10c06 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1217a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1217e:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   12182:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   12186:	48 89 d6             	mov    %rdx,%rsi
   12189:	48 89 c7             	mov    %rax,%rdi
   1218c:	e8 03 16 00 00       	call   13794 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   12191:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   12195:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12199:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1219d:	48 89 d6             	mov    %rdx,%rsi
   121a0:	48 89 c7             	mov    %rax,%rdi
   121a3:	e8 8a 89 ff ff       	call   ab32 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   121a8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   121ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   121b0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   121b4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   121b8:	48 89 c7             	mov    %rax,%rdi
   121bb:	e8 1e ff ff ff       	call   120de <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   121c0:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   121c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   121c7:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   121ce:	00 
	  _Alloc_traits::construct(this->_M_impl,
   121cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   121d3:	48 01 c1             	add    %rax,%rcx
   121d6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   121da:	48 89 ce             	mov    %rcx,%rsi
   121dd:	48 89 c7             	mov    %rax,%rdi
   121e0:	e8 07 ff ff ff       	call   120ec <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   121e5:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   121ec:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   121ed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   121f1:	48 89 c7             	mov    %rax,%rdi
   121f4:	e8 23 6f ff ff       	call   911c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   121f9:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   121fc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   12200:	48 89 c7             	mov    %rax,%rdi
   12203:	e8 c8 fe ff ff       	call   120d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12208:	48 8b 30             	mov    (%rax),%rsi
   1220b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1220f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12213:	48 89 d9             	mov    %rbx,%rcx
   12216:	48 89 c7             	mov    %rax,%rdi
   12219:	e8 b8 15 00 00       	call   137d6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1221e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   12222:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   12227:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1222b:	48 89 c7             	mov    %rax,%rdi
   1222e:	e8 e9 6e ff ff       	call   911c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12233:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   12236:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1223a:	48 89 c7             	mov    %rax,%rdi
   1223d:	e8 8e fe ff ff       	call   120d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12242:	48 8b 00             	mov    (%rax),%rax
   12245:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12249:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   1224d:	48 89 d9             	mov    %rbx,%rcx
   12250:	48 89 c7             	mov    %rax,%rdi
   12253:	e8 7e 15 00 00       	call   137d6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   12258:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   1225c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   12260:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   12264:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   12268:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   1226c:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   12270:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12274:	48 89 ce             	mov    %rcx,%rsi
   12277:	48 89 c7             	mov    %rax,%rdi
   1227a:	e8 d1 6e ff ff       	call   9150 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   1227f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12283:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12287:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   1228a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1228e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12292:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   12296:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1229a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   122a1:	00 
   122a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   122a6:	48 01 c2             	add    %rax,%rdx
   122a9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   122ad:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   122b1:	90                   	nop
   122b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   122b6:	c9                   	leave
   122b7:	c3                   	ret

00000000000122b8 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   122b8:	55                   	push   %rbp
   122b9:	48 89 e5             	mov    %rsp,%rbp
   122bc:	48 83 ec 20          	sub    $0x20,%rsp
   122c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   122c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122c8:	48 89 c7             	mov    %rax,%rdi
   122cb:	e8 5c e9 ff ff       	call   10c2c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   122d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   122d4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   122d8:	be 01 00 00 00       	mov    $0x1,%esi
   122dd:	48 89 c7             	mov    %rax,%rdi
   122e0:	e8 23 15 00 00       	call   13808 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   122e5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   122e9:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   122ed:	48 89 c7             	mov    %rax,%rdi
   122f0:	e8 bb e9 ff ff       	call   10cb0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   122f5:	c9                   	leave
   122f6:	c3                   	ret
   122f7:	90                   	nop

00000000000122f8 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   122f8:	55                   	push   %rbp
   122f9:	48 89 e5             	mov    %rsp,%rbp
   122fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12300:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   12304:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12308:	5d                   	pop    %rbp
   12309:	c3                   	ret

000000000001230a <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1230a:	55                   	push   %rbp
   1230b:	48 89 e5             	mov    %rsp,%rbp
   1230e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12316:	5d                   	pop    %rbp
   12317:	c3                   	ret

0000000000012318 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12318:	55                   	push   %rbp
   12319:	48 89 e5             	mov    %rsp,%rbp
   1231c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12324:	5d                   	pop    %rbp
   12325:	c3                   	ret

0000000000012326 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12326:	55                   	push   %rbp
   12327:	48 89 e5             	mov    %rsp,%rbp
   1232a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1232e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12332:	5d                   	pop    %rbp
   12333:	c3                   	ret

0000000000012334 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   12334:	55                   	push   %rbp
   12335:	48 89 e5             	mov    %rsp,%rbp
   12338:	48 83 ec 20          	sub    $0x20,%rsp
   1233c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12340:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   12344:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12348:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1234c:	48 89 d6             	mov    %rdx,%rsi
   1234f:	48 89 c7             	mov    %rax,%rdi
   12352:	e8 f3 14 00 00       	call   1384a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   12357:	90                   	nop
   12358:	c9                   	leave
   12359:	c3                   	ret

000000000001235a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   1235a:	55                   	push   %rbp
   1235b:	48 89 e5             	mov    %rsp,%rbp
   1235e:	53                   	push   %rbx
   1235f:	48 83 ec 18          	sub    $0x18,%rsp
   12363:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12367:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   1236b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1236f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12373:	48 89 c7             	mov    %rax,%rdi
   12376:	e8 ab ff ff ff       	call   12326 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1237b:	48 89 c6             	mov    %rax,%rsi
   1237e:	48 89 df             	mov    %rbx,%rdi
   12381:	e8 ae ff ff ff       	call   12334 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   12386:	90                   	nop
   12387:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1238b:	c9                   	leave
   1238c:	c3                   	ret
   1238d:	90                   	nop

000000000001238e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1238e:	55                   	push   %rbp
   1238f:	48 89 e5             	mov    %rsp,%rbp
   12392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12396:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1239a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1239e:	48 8b 10             	mov    (%rax),%rdx
   123a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123a5:	48 89 10             	mov    %rdx,(%rax)
   123a8:	90                   	nop
   123a9:	5d                   	pop    %rbp
   123aa:	c3                   	ret
   123ab:	90                   	nop

00000000000123ac <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   123ac:	55                   	push   %rbp
   123ad:	48 89 e5             	mov    %rsp,%rbp
   123b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   123b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123b8:	5d                   	pop    %rbp
   123b9:	c3                   	ret

00000000000123ba <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   123ba:	55                   	push   %rbp
   123bb:	48 89 e5             	mov    %rsp,%rbp
   123be:	53                   	push   %rbx
   123bf:	48 83 ec 18          	sub    $0x18,%rsp
   123c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   123c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   123cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123cf:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   123d3:	84 c0                	test   %al,%al
   123d5:	74 35                	je     1240c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   123d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   123db:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   123df:	84 c0                	test   %al,%al
   123e1:	74 29                	je     1240c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   123e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   123e7:	48 89 c7             	mov    %rax,%rdi
   123ea:	e8 97 14 00 00       	call   13886 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   123ef:	48 89 c3             	mov    %rax,%rbx
   123f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123f6:	48 89 c7             	mov    %rax,%rdi
   123f9:	e8 4e 00 00 00       	call   1244c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   123fe:	48 89 de             	mov    %rbx,%rsi
   12401:	48 89 c7             	mov    %rax,%rdi
   12404:	e8 8b 14 00 00       	call   13894 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   12409:	90                   	nop
      }
   1240a:	eb 38                	jmp    12444 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   1240c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12410:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   12414:	84 c0                	test   %al,%al
   12416:	74 20                	je     12438 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   12418:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1241c:	48 89 c7             	mov    %rax,%rdi
   1241f:	e8 62 14 00 00       	call   13886 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   12424:	48 89 c2             	mov    %rax,%rdx
   12427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1242b:	48 89 d6             	mov    %rdx,%rsi
   1242e:	48 89 c7             	mov    %rax,%rdi
   12431:	e8 9c 14 00 00       	call   138d2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   12436:	eb 0c                	jmp    12444 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   12438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1243c:	48 89 c7             	mov    %rax,%rdi
   1243f:	e8 d4 14 00 00       	call   13918 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   12444:	90                   	nop
   12445:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12449:	c9                   	leave
   1244a:	c3                   	ret
   1244b:	90                   	nop

000000000001244c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   1244c:	55                   	push   %rbp
   1244d:	48 89 e5             	mov    %rsp,%rbp
   12450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   12454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12458:	5d                   	pop    %rbp
   12459:	c3                   	ret

000000000001245a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1245a:	55                   	push   %rbp
   1245b:	48 89 e5             	mov    %rsp,%rbp
   1245e:	48 83 ec 10          	sub    $0x10,%rsp
   12462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1246a:	48 89 c7             	mov    %rax,%rdi
   1246d:	e8 ce 14 00 00       	call   13940 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   12472:	90                   	nop
   12473:	c9                   	leave
   12474:	c3                   	ret
   12475:	90                   	nop

0000000000012476 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   12476:	55                   	push   %rbp
   12477:	48 89 e5             	mov    %rsp,%rbp
   1247a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   1247e:	90                   	nop
   1247f:	5d                   	pop    %rbp
   12480:	c3                   	ret
   12481:	90                   	nop

0000000000012482 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12482:	55                   	push   %rbp
   12483:	48 89 e5             	mov    %rsp,%rbp
   12486:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1248a:	90                   	nop
   1248b:	5d                   	pop    %rbp
   1248c:	c3                   	ret
   1248d:	90                   	nop

000000000001248e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1248e:	55                   	push   %rbp
   1248f:	48 89 e5             	mov    %rsp,%rbp
   12492:	48 83 ec 20          	sub    $0x20,%rsp
   12496:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1249a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1249e:	eb 49                	jmp    124e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   124a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   124a4:	48 89 c7             	mov    %rax,%rdi
   124a7:	e8 9f 14 00 00       	call   1394b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   124ac:	48 89 c2             	mov    %rax,%rdx
   124af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124b3:	48 89 d6             	mov    %rdx,%rsi
   124b6:	48 89 c7             	mov    %rax,%rdi
   124b9:	e8 d0 ff ff ff       	call   1248e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   124be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   124c2:	48 89 c7             	mov    %rax,%rdi
   124c5:	e8 93 14 00 00       	call   1395d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   124ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   124ce:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   124d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124d6:	48 89 d6             	mov    %rdx,%rsi
   124d9:	48 89 c7             	mov    %rax,%rdi
   124dc:	e8 8f 14 00 00       	call   13970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   124e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   124e9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   124ee:	75 b0                	jne    124a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   124f0:	90                   	nop
   124f1:	90                   	nop
   124f2:	c9                   	leave
   124f3:	c3                   	ret

00000000000124f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   124f4:	55                   	push   %rbp
   124f5:	48 89 e5             	mov    %rsp,%rbp
   124f8:	48 83 ec 10          	sub    $0x10,%rsp
   124fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   12500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12504:	48 89 c7             	mov    %rax,%rdi
   12507:	e8 9e 14 00 00       	call   139aa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   1250c:	c9                   	leave
   1250d:	c3                   	ret

000000000001250e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1250e:	55                   	push   %rbp
   1250f:	48 89 e5             	mov    %rsp,%rbp
   12512:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12516:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1251a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1251e:	48 8b 10             	mov    (%rax),%rdx
   12521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12525:	48 89 10             	mov    %rdx,(%rax)
   12528:	90                   	nop
   12529:	5d                   	pop    %rbp
   1252a:	c3                   	ret
   1252b:	90                   	nop

000000000001252c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1252c:	55                   	push   %rbp
   1252d:	48 89 e5             	mov    %rsp,%rbp
   12530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12538:	5d                   	pop    %rbp
   12539:	c3                   	ret

000000000001253a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   1253a:	55                   	push   %rbp
   1253b:	48 89 e5             	mov    %rsp,%rbp
   1253e:	48 83 ec 10          	sub    $0x10,%rsp
   12542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12546:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   1254a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1254e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12552:	48 89 d6             	mov    %rdx,%rsi
   12555:	48 89 c7             	mov    %rax,%rdi
   12558:	e8 5f 14 00 00       	call   139bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   1255d:	c9                   	leave
   1255e:	c3                   	ret
   1255f:	90                   	nop

0000000000012560 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12560:	55                   	push   %rbp
   12561:	48 89 e5             	mov    %rsp,%rbp
   12564:	48 83 ec 10          	sub    $0x10,%rsp
   12568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   1256c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12570:	48 89 c7             	mov    %rax,%rdi
   12573:	e8 90 14 00 00       	call   13a08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   12578:	c9                   	leave
   12579:	c3                   	ret

000000000001257a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   1257a:	55                   	push   %rbp
   1257b:	48 89 e5             	mov    %rsp,%rbp
   1257e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12582:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   12586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1258a:	48 8b 10             	mov    (%rax),%rdx
   1258d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12591:	48 8b 00             	mov    (%rax),%rax
   12594:	48 39 c2             	cmp    %rax,%rdx
   12597:	0f 94 c0             	sete   %al
   1259a:	5d                   	pop    %rbp
   1259b:	c3                   	ret

000000000001259c <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   1259c:	55                   	push   %rbp
   1259d:	48 89 e5             	mov    %rsp,%rbp
   125a0:	48 83 ec 10          	sub    $0x10,%rsp
   125a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   125a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125ac:	48 89 c7             	mov    %rax,%rdi
   125af:	e8 7e 14 00 00       	call   13a32 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   125b4:	90                   	nop
   125b5:	c9                   	leave
   125b6:	c3                   	ret
   125b7:	90                   	nop

00000000000125b8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   125b8:	55                   	push   %rbp
   125b9:	48 89 e5             	mov    %rsp,%rbp
   125bc:	48 83 ec 10          	sub    $0x10,%rsp
   125c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   125c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125c8:	48 8b 00             	mov    (%rax),%rax
   125cb:	48 89 c7             	mov    %rax,%rdi
   125ce:	e8 6b 14 00 00       	call   13a3e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   125d3:	c9                   	leave
   125d4:	c3                   	ret
   125d5:	90                   	nop

00000000000125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   125d6:	55                   	push   %rbp
   125d7:	48 89 e5             	mov    %rsp,%rbp
   125da:	48 83 ec 20          	sub    $0x20,%rsp
   125de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   125e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   125ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   125ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   125f2:	48 89 d6             	mov    %rdx,%rsi
   125f5:	48 89 c7             	mov    %rax,%rdi
   125f8:	e8 5f 14 00 00       	call   13a5c <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   125fd:	c9                   	leave
   125fe:	c3                   	ret

00000000000125ff <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   125ff:	55                   	push   %rbp
   12600:	48 89 e5             	mov    %rsp,%rbp
   12603:	48 83 ec 10          	sub    $0x10,%rsp
   12607:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1260b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   1260f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12613:	48 89 c7             	mov    %rax,%rdi
   12616:	e8 69 14 00 00       	call   13a84 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1261b:	48 89 c2             	mov    %rax,%rdx
   1261e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12622:	48 89 d6             	mov    %rdx,%rsi
   12625:	48 89 c7             	mov    %rax,%rdi
   12628:	e8 65 14 00 00       	call   13a92 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   1262d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12631:	c9                   	leave
   12632:	c3                   	ret
   12633:	90                   	nop

0000000000012634 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   12634:	55                   	push   %rbp
   12635:	48 89 e5             	mov    %rsp,%rbp
   12638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1263c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   12640:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12644:	48 8b 10             	mov    (%rax),%rdx
   12647:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1264b:	48 89 10             	mov    %rdx,(%rax)
   1264e:	90                   	nop
   1264f:	5d                   	pop    %rbp
   12650:	c3                   	ret
   12651:	90                   	nop

0000000000012652 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12652:	55                   	push   %rbp
   12653:	48 89 e5             	mov    %rsp,%rbp
   12656:	41 54                	push   %r12
   12658:	53                   	push   %rbx
   12659:	48 83 ec 60          	sub    $0x60,%rsp
   1265d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   12661:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   12665:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   12669:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   1266d:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   12671:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12675:	48 89 c7             	mov    %rax,%rdi
   12678:	e8 64 14 00 00       	call   13ae1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1267d:	49 89 c4             	mov    %rax,%r12
   12680:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12684:	48 89 c7             	mov    %rax,%rdi
   12687:	e8 47 14 00 00       	call   13ad3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1268c:	48 89 c3             	mov    %rax,%rbx
   1268f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12693:	48 89 c7             	mov    %rax,%rdi
   12696:	e8 2a 14 00 00       	call   13ac5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1269b:	48 89 c2             	mov    %rax,%rdx
   1269e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   126a2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   126a6:	4d 89 e0             	mov    %r12,%r8
   126a9:	48 89 d9             	mov    %rbx,%rcx
   126ac:	48 89 c7             	mov    %rax,%rdi
   126af:	e8 3c 14 00 00       	call   13af0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   126b4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   126b8:	48 89 c7             	mov    %rax,%rdi
   126bb:	e8 30 19 00 00       	call   13ff0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   126c0:	48 89 c2             	mov    %rax,%rdx
   126c3:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   126c7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   126cb:	48 89 ce             	mov    %rcx,%rsi
   126ce:	48 89 c7             	mov    %rax,%rdi
   126d1:	e8 cc 14 00 00       	call   13ba2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   126d6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   126da:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   126de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126e2:	48 85 c0             	test   %rax,%rax
   126e5:	74 1c                	je     12703 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   126e7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   126eb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   126ef:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   126f3:	48 89 ce             	mov    %rcx,%rsi
   126f6:	48 89 c7             	mov    %rax,%rdi
   126f9:	e8 10 19 00 00       	call   1400e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   126fe:	48 89 c3             	mov    %rax,%rbx
   12701:	eb 17                	jmp    1271a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   12703:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12707:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1270b:	48 89 d6             	mov    %rdx,%rsi
   1270e:	48 89 c7             	mov    %rax,%rdi
   12711:	e8 4e 19 00 00       	call   14064 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   12716:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   1271a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1271e:	48 89 c7             	mov    %rax,%rdi
   12721:	e8 46 14 00 00       	call   13b6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   12726:	48 89 d8             	mov    %rbx,%rax
   12729:	eb 1a                	jmp    12745 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   1272b:	48 89 c3             	mov    %rax,%rbx
   1272e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12732:	48 89 c7             	mov    %rax,%rdi
   12735:	e8 32 14 00 00       	call   13b6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   1273a:	48 89 d8             	mov    %rbx,%rax
   1273d:	48 89 c7             	mov    %rax,%rdi
   12740:	e8 eb 1f ff ff       	call   4730 <_Unwind_Resume@plt>
   12745:	48 83 c4 60          	add    $0x60,%rsp
   12749:	5b                   	pop    %rbx
   1274a:	41 5c                	pop    %r12
   1274c:	5d                   	pop    %rbp
   1274d:	c3                   	ret

000000000001274e <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   1274e:	55                   	push   %rbp
   1274f:	48 89 e5             	mov    %rsp,%rbp
   12752:	48 83 ec 20          	sub    $0x20,%rsp
   12756:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   1275a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1275e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12762:	48 89 d6             	mov    %rdx,%rsi
   12765:	48 89 c7             	mov    %rax,%rdi
   12768:	e8 11 19 00 00       	call   1407e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   1276d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12771:	c9                   	leave
   12772:	c3                   	ret
   12773:	90                   	nop

0000000000012774 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   12774:	55                   	push   %rbp
   12775:	48 89 e5             	mov    %rsp,%rbp
   12778:	48 83 ec 20          	sub    $0x20,%rsp
   1277c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   12780:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12784:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12788:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1278c:	48 89 d6             	mov    %rdx,%rsi
   1278f:	48 89 c7             	mov    %rax,%rdi
   12792:	e8 e7 18 00 00       	call   1407e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   12797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1279b:	c9                   	leave
   1279c:	c3                   	ret

000000000001279d <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   1279d:	55                   	push   %rbp
   1279e:	48 89 e5             	mov    %rsp,%rbp
   127a1:	53                   	push   %rbx
   127a2:	48 83 ec 18          	sub    $0x18,%rsp
   127a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   127aa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   127ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127b2:	48 89 c7             	mov    %rax,%rdi
   127b5:	e8 e2 18 00 00       	call   1409c <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   127ba:	48 8b 18             	mov    (%rax),%rbx
   127bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   127c1:	48 89 c7             	mov    %rax,%rdi
   127c4:	e8 d3 18 00 00       	call   1409c <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   127c9:	48 8b 00             	mov    (%rax),%rax
   127cc:	48 39 c3             	cmp    %rax,%rbx
   127cf:	0f 94 c0             	sete   %al
   127d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   127d6:	c9                   	leave
   127d7:	c3                   	ret

00000000000127d8 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   127d8:	55                   	push   %rbp
   127d9:	48 89 e5             	mov    %rsp,%rbp
   127dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   127e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127e8:	48 8b 10             	mov    (%rax),%rdx
   127eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127ef:	48 89 10             	mov    %rdx,(%rax)
   127f2:	90                   	nop
   127f3:	5d                   	pop    %rbp
   127f4:	c3                   	ret
   127f5:	90                   	nop

00000000000127f6 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   127f6:	55                   	push   %rbp
   127f7:	48 89 e5             	mov    %rsp,%rbp
   127fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   127fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12802:	5d                   	pop    %rbp
   12803:	c3                   	ret

0000000000012804 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12804:	55                   	push   %rbp
   12805:	48 89 e5             	mov    %rsp,%rbp
   12808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1280c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12810:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12814:	48 8b 10             	mov    (%rax),%rdx
   12817:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1281b:	48 89 10             	mov    %rdx,(%rax)
   1281e:	90                   	nop
   1281f:	5d                   	pop    %rbp
   12820:	c3                   	ret
   12821:	90                   	nop

0000000000012822 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12822:	55                   	push   %rbp
   12823:	48 89 e5             	mov    %rsp,%rbp
   12826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1282a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1282e:	5d                   	pop    %rbp
   1282f:	c3                   	ret

0000000000012830 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   12830:	55                   	push   %rbp
   12831:	48 89 e5             	mov    %rsp,%rbp
   12834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   12838:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1283c:	5d                   	pop    %rbp
   1283d:	c3                   	ret

000000000001283e <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   1283e:	55                   	push   %rbp
   1283f:	48 89 e5             	mov    %rsp,%rbp
   12842:	53                   	push   %rbx
   12843:	48 83 ec 38          	sub    $0x38,%rsp
   12847:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1284b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   1284f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12853:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   12857:	48 89 d6             	mov    %rdx,%rsi
   1285a:	48 89 c7             	mov    %rax,%rdi
   1285d:	e8 48 18 00 00       	call   140aa <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   12862:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   12866:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1286a:	48 89 d6             	mov    %rdx,%rsi
   1286d:	48 89 c7             	mov    %rax,%rdi
   12870:	e8 69 18 00 00       	call   140de <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   12875:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   12879:	48 89 c7             	mov    %rax,%rdi
   1287c:	e8 c5 62 ff ff       	call   8b46 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   12881:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12885:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12889:	48 89 d6             	mov    %rdx,%rsi
   1288c:	48 89 c7             	mov    %rax,%rdi
   1288f:	e8 70 18 00 00       	call   14104 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   12894:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12898:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1289c:	48 89 d6             	mov    %rdx,%rsi
   1289f:	48 89 c7             	mov    %rax,%rdi
   128a2:	e8 5d 18 00 00       	call   14104 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   128a7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   128ab:	48 89 c7             	mov    %rax,%rdi
   128ae:	e8 47 73 ff ff       	call   9bfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   128b3:	48 89 c3             	mov    %rax,%rbx
   128b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   128ba:	48 89 c7             	mov    %rax,%rdi
   128bd:	e8 38 73 ff ff       	call   9bfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   128c2:	48 89 de             	mov    %rbx,%rsi
   128c5:	48 89 c7             	mov    %rax,%rdi
   128c8:	e8 8f 18 00 00       	call   1415c <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   128cd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   128d1:	48 89 c7             	mov    %rax,%rdi
   128d4:	e8 ff 62 ff ff       	call   8bd8 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   128d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   128dd:	c9                   	leave
   128de:	c3                   	ret
   128df:	90                   	nop

00000000000128e0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   128e0:	55                   	push   %rbp
   128e1:	48 89 e5             	mov    %rsp,%rbp
   128e4:	53                   	push   %rbx
   128e5:	48 83 ec 38          	sub    $0x38,%rsp
   128e9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   128ed:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   128f1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   128f6:	0f 84 e7 01 00 00    	je     12ae3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   128fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12900:	48 89 c7             	mov    %rax,%rdi
   12903:	e8 10 ef ff ff       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12908:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1290c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12910:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   12914:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12918:	48 8b 40 08          	mov    0x8(%rax),%rax
   1291c:	48 29 c2             	sub    %rax,%rdx
   1291f:	48 89 d0             	mov    %rdx,%rax
   12922:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   12926:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   1292a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1292e:	48 89 c7             	mov    %rax,%rdi
   12931:	e8 46 18 00 00       	call   1417c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   12936:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1293a:	72 16                	jb     12952 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   1293c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12940:	48 89 c7             	mov    %rax,%rdi
   12943:	e8 34 18 00 00       	call   1417c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   12948:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1294c:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   12950:	73 07                	jae    12959 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   12952:	b8 01 00 00 00       	mov    $0x1,%eax
   12957:	eb 05                	jmp    1295e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   12959:	b8 00 00 00 00       	mov    $0x0,%eax
   1295e:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   12960:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12964:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   12968:	72 33                	jb     1299d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   1296a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1296e:	48 89 c7             	mov    %rax,%rdi
   12971:	e8 9c 09 00 00       	call   13312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12976:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   12979:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1297d:	48 8b 40 08          	mov    0x8(%rax),%rax
   12981:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   12985:	48 89 ce             	mov    %rcx,%rsi
   12988:	48 89 c7             	mov    %rax,%rdi
   1298b:	e8 0e 18 00 00       	call   1419e <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   12990:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12994:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   12998:	e9 46 01 00 00       	jmp    12ae3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1299d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   129a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   129a5:	48 8d 15 90 83 00 00 	lea    0x8390(%rip),%rdx        # 1ad3c <_ZZN9VulkanApp3runEvE11sec_to_mics+0x25c>
   129ac:	48 89 ce             	mov    %rcx,%rsi
   129af:	48 89 c7             	mov    %rax,%rdi
   129b2:	e8 11 18 00 00       	call   141c8 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   129b7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   129bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   129bf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   129c3:	48 89 d6             	mov    %rdx,%rsi
   129c6:	48 89 c7             	mov    %rax,%rdi
   129c9:	e8 c2 18 00 00       	call   14290 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   129ce:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   129d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   129d6:	48 89 c7             	mov    %rax,%rdi
   129d9:	e8 34 09 00 00       	call   13312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   129de:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   129e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129e5:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   129ec:	00 
   129ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   129f1:	48 01 c1             	add    %rax,%rcx
   129f4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   129f8:	48 89 c6             	mov    %rax,%rsi
   129fb:	48 89 cf             	mov    %rcx,%rdi
   129fe:	e8 9b 17 00 00       	call   1419e <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   12a03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12a07:	48 89 c7             	mov    %rax,%rdi
   12a0a:	e8 03 09 00 00       	call   13312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12a0f:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   12a12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12a16:	48 8b 70 08          	mov    0x8(%rax),%rsi
   12a1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12a1e:	48 8b 00             	mov    (%rax),%rax
   12a21:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12a25:	48 89 c7             	mov    %rax,%rdi
   12a28:	e8 96 18 00 00       	call   142c3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   12a2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   12a31:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12a35:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   12a39:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12a3d:	48 8b 12             	mov    (%rdx),%rdx
   12a40:	48 29 d1             	sub    %rdx,%rcx
   12a43:	48 c1 f9 03          	sar    $0x3,%rcx
   12a47:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   12a4a:	48 89 d6             	mov    %rdx,%rsi
   12a4d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12a51:	48 8b 0a             	mov    (%rdx),%rcx
   12a54:	48 89 f2             	mov    %rsi,%rdx
   12a57:	48 89 ce             	mov    %rcx,%rsi
   12a5a:	48 89 c7             	mov    %rax,%rdi
   12a5d:	e8 28 09 00 00       	call   1338a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   12a62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12a66:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12a6a:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   12a6d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a71:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12a75:	48 01 d0             	add    %rdx,%rax
   12a78:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12a7f:	00 
   12a80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12a84:	48 01 c2             	add    %rax,%rdx
   12a87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12a8b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   12a8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a93:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12a9a:	00 
   12a9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12a9f:	48 01 c2             	add    %rax,%rdx
   12aa2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12aa6:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   12aaa:	eb 37                	jmp    12ae3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   12aac:	48 89 c7             	mov    %rax,%rdi
   12aaf:	e8 7c 16 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   12ab4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12ab8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12abc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   12ac0:	48 89 ce             	mov    %rcx,%rsi
   12ac3:	48 89 c7             	mov    %rax,%rdi
   12ac6:	e8 bf 08 00 00       	call   1338a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   12acb:	e8 40 1b ff ff       	call   4610 <__cxa_rethrow@plt>
		  __catch(...)
   12ad0:	48 89 c3             	mov    %rax,%rbx
   12ad3:	e8 d8 1b ff ff       	call   46b0 <__cxa_end_catch@plt>
   12ad8:	48 89 d8             	mov    %rbx,%rax
   12adb:	48 89 c7             	mov    %rax,%rdi
   12ade:	e8 4d 1c ff ff       	call   4730 <_Unwind_Resume@plt>
    }
   12ae3:	90                   	nop
   12ae4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12ae8:	c9                   	leave
   12ae9:	c3                   	ret

0000000000012aea <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   12aea:	55                   	push   %rbp
   12aeb:	48 89 e5             	mov    %rsp,%rbp
   12aee:	48 83 ec 20          	sub    $0x20,%rsp
   12af2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12af6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   12afa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12afe:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b02:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   12b06:	48 c1 f8 03          	sar    $0x3,%rax
   12b0a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12b0e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12b13:	74 32                	je     12b47 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   12b15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b19:	48 89 c7             	mov    %rax,%rdi
   12b1c:	e8 f1 07 00 00       	call   13312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12b21:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   12b24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b28:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12b2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12b30:	48 89 ce             	mov    %rcx,%rsi
   12b33:	48 89 c7             	mov    %rax,%rdi
   12b36:	e8 e5 07 00 00       	call   13320 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   12b3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b3f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12b43:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   12b47:	90                   	nop
   12b48:	c9                   	leave
   12b49:	c3                   	ret

0000000000012b4a <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12b4a:	55                   	push   %rbp
   12b4b:	48 89 e5             	mov    %rsp,%rbp
   12b4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b52:	90                   	nop
   12b53:	5d                   	pop    %rbp
   12b54:	c3                   	ret
   12b55:	90                   	nop

0000000000012b56 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12b56:	55                   	push   %rbp
   12b57:	48 89 e5             	mov    %rsp,%rbp
   12b5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b5e:	90                   	nop
   12b5f:	5d                   	pop    %rbp
   12b60:	c3                   	ret
   12b61:	90                   	nop

0000000000012b62 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   12b62:	55                   	push   %rbp
   12b63:	48 89 e5             	mov    %rsp,%rbp
   12b66:	48 83 ec 10          	sub    $0x10,%rsp
   12b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b72:	48 89 c7             	mov    %rax,%rdi
   12b75:	e8 0a ea ff ff       	call   11584 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   12b7a:	90                   	nop
   12b7b:	c9                   	leave
   12b7c:	c3                   	ret
   12b7d:	90                   	nop

0000000000012b7e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   12b7e:	55                   	push   %rbp
   12b7f:	48 89 e5             	mov    %rsp,%rbp
   12b82:	48 83 ec 10          	sub    $0x10,%rsp
   12b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   12b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b96:	48 89 d6             	mov    %rdx,%rsi
   12b99:	48 89 c7             	mov    %rax,%rdi
   12b9c:	e8 55 17 00 00       	call   142f6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   12ba1:	90                   	nop
   12ba2:	c9                   	leave
   12ba3:	c3                   	ret

0000000000012ba4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12ba4:	55                   	push   %rbp
   12ba5:	48 89 e5             	mov    %rsp,%rbp
   12ba8:	48 83 ec 10          	sub    $0x10,%rsp
   12bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bb4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bbc:	48 8b 00             	mov    (%rax),%rax
   12bbf:	48 29 c2             	sub    %rax,%rdx
   12bc2:	48 c1 fa 04          	sar    $0x4,%rdx
   12bc6:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   12bcd:	e3 38 8e 
   12bd0:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   12bd4:	48 89 c2             	mov    %rax,%rdx
   12bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bdb:	48 8b 08             	mov    (%rax),%rcx
   12bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12be2:	48 89 ce             	mov    %rcx,%rsi
   12be5:	48 89 c7             	mov    %rax,%rdi
   12be8:	e8 3b 17 00 00       	call   14328 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   12bed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bf1:	48 89 c7             	mov    %rax,%rdi
   12bf4:	e8 69 ff ff ff       	call   12b62 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   12bf9:	90                   	nop
   12bfa:	c9                   	leave
   12bfb:	c3                   	ret

0000000000012bfc <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   12bfc:	55                   	push   %rbp
   12bfd:	48 89 e5             	mov    %rsp,%rbp
   12c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c08:	48 8b 00             	mov    (%rax),%rax
   12c0b:	5d                   	pop    %rbp
   12c0c:	c3                   	ret
   12c0d:	90                   	nop

0000000000012c0e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   12c0e:	55                   	push   %rbp
   12c0f:	48 89 e5             	mov    %rsp,%rbp
   12c12:	53                   	push   %rbx
   12c13:	48 83 ec 18          	sub    $0x18,%rsp
   12c17:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12c1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c1f:	48 89 c7             	mov    %rax,%rdi
   12c22:	e8 d5 ff ff ff       	call   12bfc <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   12c27:	48 89 c3             	mov    %rax,%rbx
   12c2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c2e:	48 89 c7             	mov    %rax,%rdi
   12c31:	e8 28 17 00 00       	call   1435e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   12c36:	48 89 c2             	mov    %rax,%rdx
   12c39:	48 89 d0             	mov    %rdx,%rax
   12c3c:	48 c1 e0 03          	shl    $0x3,%rax
   12c40:	48 01 d0             	add    %rdx,%rax
   12c43:	48 c1 e0 04          	shl    $0x4,%rax
   12c47:	48 01 d8             	add    %rbx,%rax
   12c4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12c4e:	c9                   	leave
   12c4f:	c3                   	ret

0000000000012c50 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   12c50:	55                   	push   %rbp
   12c51:	48 89 e5             	mov    %rsp,%rbp
   12c54:	48 83 ec 10          	sub    $0x10,%rsp
   12c58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   12c60:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12c64:	48 89 c7             	mov    %rax,%rdi
   12c67:	e8 04 17 00 00       	call   14370 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   12c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12c74:	48 89 d6             	mov    %rdx,%rsi
   12c77:	48 89 c7             	mov    %rax,%rdi
   12c7a:	e8 fc 16 00 00       	call   1437b <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   12c7f:	c9                   	leave
   12c80:	c3                   	ret
   12c81:	90                   	nop

0000000000012c82 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   12c82:	55                   	push   %rbp
   12c83:	48 89 e5             	mov    %rsp,%rbp
   12c86:	53                   	push   %rbx
   12c87:	48 83 ec 38          	sub    $0x38,%rsp
   12c8b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12c8f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12c93:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   12c97:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12c9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12c9f:	48 89 d6             	mov    %rdx,%rsi
   12ca2:	48 89 c7             	mov    %rax,%rdi
   12ca5:	e8 a6 ff ff ff       	call   12c50 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   12caa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   12cae:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   12cb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cb6:	48 89 c7             	mov    %rax,%rdi
   12cb9:	e8 7e 00 00 00       	call   12d3c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   12cbe:	48 89 c2             	mov    %rax,%rdx
   12cc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cc5:	48 89 d6             	mov    %rdx,%rsi
   12cc8:	48 89 c7             	mov    %rax,%rdi
   12ccb:	e8 d6 16 00 00       	call   143a6 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   12cd0:	48 89 c6             	mov    %rax,%rsi
   12cd3:	48 89 df             	mov    %rbx,%rdi
   12cd6:	e8 2b 17 00 00       	call   14406 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   12cdb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12cdf:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   12ce2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ce6:	48 8b 08             	mov    (%rax),%rcx
   12ce9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12ced:	48 89 d0             	mov    %rdx,%rax
   12cf0:	48 c1 e0 03          	shl    $0x3,%rax
   12cf4:	48 01 d0             	add    %rdx,%rax
   12cf7:	48 c1 e0 04          	shl    $0x4,%rax
   12cfb:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   12cff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d03:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   12d07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d0b:	48 89 c7             	mov    %rax,%rdi
   12d0e:	e8 29 00 00 00       	call   12d3c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   12d13:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   12d16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d1a:	48 8b 10             	mov    (%rax),%rdx
   12d1d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   12d21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12d25:	48 89 c7             	mov    %rax,%rdi
   12d28:	e8 0c 17 00 00       	call   14439 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   12d2d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12d31:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   12d35:	90                   	nop
   12d36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12d3a:	c9                   	leave
   12d3b:	c3                   	ret

0000000000012d3c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12d3c:	55                   	push   %rbp
   12d3d:	48 89 e5             	mov    %rsp,%rbp
   12d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d48:	5d                   	pop    %rbp
   12d49:	c3                   	ret

0000000000012d4a <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12d4a:	55                   	push   %rbp
   12d4b:	48 89 e5             	mov    %rsp,%rbp
   12d4e:	48 83 ec 20          	sub    $0x20,%rsp
   12d52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12d5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12d5e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d66:	48 89 d6             	mov    %rdx,%rsi
   12d69:	48 89 c7             	mov    %rax,%rdi
   12d6c:	e8 f9 16 00 00       	call   1446a <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   12d71:	90                   	nop
   12d72:	c9                   	leave
   12d73:	c3                   	ret

0000000000012d74 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12d74:	55                   	push   %rbp
   12d75:	48 89 e5             	mov    %rsp,%rbp
   12d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d80:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d88:	48 8b 00             	mov    (%rax),%rax
   12d8b:	48 29 c2             	sub    %rax,%rdx
   12d8e:	48 c1 fa 04          	sar    $0x4,%rdx
   12d92:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   12d99:	e3 38 8e 
   12d9c:	48 0f af c2          	imul   %rdx,%rax
   12da0:	5d                   	pop    %rbp
   12da1:	c3                   	ret

0000000000012da2 <_ZNSaIP12VkPipeline_TEC1Ev>:
   12da2:	55                   	push   %rbp
   12da3:	48 89 e5             	mov    %rsp,%rbp
   12da6:	48 83 ec 10          	sub    $0x10,%rsp
   12daa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12dae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12db2:	48 89 c7             	mov    %rax,%rdi
   12db5:	e8 d6 16 00 00       	call   14490 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   12dba:	90                   	nop
   12dbb:	c9                   	leave
   12dbc:	c3                   	ret
   12dbd:	90                   	nop

0000000000012dbe <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12dbe:	55                   	push   %rbp
   12dbf:	48 89 e5             	mov    %rsp,%rbp
   12dc2:	48 83 ec 10          	sub    $0x10,%rsp
   12dc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dce:	48 89 c7             	mov    %rax,%rdi
   12dd1:	e8 c6 16 00 00       	call   1449c <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   12dd6:	90                   	nop
   12dd7:	c9                   	leave
   12dd8:	c3                   	ret
   12dd9:	90                   	nop

0000000000012dda <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   12dda:	55                   	push   %rbp
   12ddb:	48 89 e5             	mov    %rsp,%rbp
   12dde:	53                   	push   %rbx
   12ddf:	48 83 ec 28          	sub    $0x28,%rsp
   12de3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12de7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12deb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   12def:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12df3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12df7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12dfb:	48 89 d6             	mov    %rdx,%rsi
   12dfe:	48 89 c7             	mov    %rax,%rdi
   12e01:	e8 a1 16 00 00       	call   144a7 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   12e06:	48 89 c1             	mov    %rax,%rcx
   12e09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e0d:	48 89 c2             	mov    %rax,%rdx
   12e10:	48 89 ce             	mov    %rcx,%rsi
   12e13:	48 89 df             	mov    %rbx,%rdi
   12e16:	e8 ed 16 00 00       	call   14508 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   12e1b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12e1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e23:	48 89 d6             	mov    %rdx,%rsi
   12e26:	48 89 c7             	mov    %rax,%rdi
   12e29:	e8 38 17 00 00       	call   14566 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   12e2e:	eb 1a                	jmp    12e4a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   12e30:	48 89 c3             	mov    %rax,%rbx
   12e33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e37:	48 89 c7             	mov    %rax,%rdi
   12e3a:	e8 59 00 00 00       	call   12e98 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   12e3f:	48 89 d8             	mov    %rbx,%rax
   12e42:	48 89 c7             	mov    %rax,%rdi
   12e45:	e8 e6 18 ff ff       	call   4730 <_Unwind_Resume@plt>
   12e4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12e4e:	c9                   	leave
   12e4f:	c3                   	ret

0000000000012e50 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   12e50:	55                   	push   %rbp
   12e51:	48 89 e5             	mov    %rsp,%rbp
   12e54:	48 83 ec 10          	sub    $0x10,%rsp
   12e58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e60:	48 8b 10             	mov    (%rax),%rdx
   12e63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e67:	48 89 d6             	mov    %rdx,%rsi
   12e6a:	48 89 c7             	mov    %rax,%rdi
   12e6d:	e8 34 17 00 00       	call   145a6 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   12e72:	c9                   	leave
   12e73:	c3                   	ret

0000000000012e74 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   12e74:	55                   	push   %rbp
   12e75:	48 89 e5             	mov    %rsp,%rbp
   12e78:	48 83 ec 10          	sub    $0x10,%rsp
   12e7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12e80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e84:	48 8b 10             	mov    (%rax),%rdx
   12e87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e8b:	48 89 d6             	mov    %rdx,%rsi
   12e8e:	48 89 c7             	mov    %rax,%rdi
   12e91:	e8 22 17 00 00       	call   145b8 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12e96:	c9                   	leave
   12e97:	c3                   	ret

0000000000012e98 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12e98:	55                   	push   %rbp
   12e99:	48 89 e5             	mov    %rsp,%rbp
   12e9c:	48 83 ec 10          	sub    $0x10,%rsp
   12ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ea8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eb0:	48 8b 00             	mov    (%rax),%rax
   12eb3:	48 29 c2             	sub    %rax,%rdx
   12eb6:	48 89 d0             	mov    %rdx,%rax
   12eb9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12ebd:	48 89 c2             	mov    %rax,%rdx
   12ec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ec4:	48 8b 08             	mov    (%rax),%rcx
   12ec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ecb:	48 89 ce             	mov    %rcx,%rsi
   12ece:	48 89 c7             	mov    %rax,%rdi
   12ed1:	e8 1a 17 00 00       	call   145f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   12ed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eda:	48 89 c7             	mov    %rax,%rdi
   12edd:	e8 8a e7 ff ff       	call   1166c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   12ee2:	90                   	nop
   12ee3:	c9                   	leave
   12ee4:	c3                   	ret
   12ee5:	90                   	nop

0000000000012ee6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12ee6:	55                   	push   %rbp
   12ee7:	48 89 e5             	mov    %rsp,%rbp
   12eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ef2:	5d                   	pop    %rbp
   12ef3:	c3                   	ret

0000000000012ef4 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12ef4:	55                   	push   %rbp
   12ef5:	48 89 e5             	mov    %rsp,%rbp
   12ef8:	48 83 ec 20          	sub    $0x20,%rsp
   12efc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12f04:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12f08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f10:	48 89 d6             	mov    %rdx,%rsi
   12f13:	48 89 c7             	mov    %rax,%rdi
   12f16:	e8 0a 17 00 00       	call   14625 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   12f1b:	90                   	nop
   12f1c:	c9                   	leave
   12f1d:	c3                   	ret

0000000000012f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12f1e:	55                   	push   %rbp
   12f1f:	48 89 e5             	mov    %rsp,%rbp
   12f22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f2a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12f2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f32:	48 8b 00             	mov    (%rax),%rax
   12f35:	48 29 c2             	sub    %rax,%rdx
   12f38:	48 89 d0             	mov    %rdx,%rax
   12f3b:	48 c1 f8 03          	sar    $0x3,%rax
   12f3f:	5d                   	pop    %rbp
   12f40:	c3                   	ret
   12f41:	90                   	nop

0000000000012f42 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   12f42:	55                   	push   %rbp
   12f43:	48 89 e5             	mov    %rsp,%rbp
   12f46:	53                   	push   %rbx
   12f47:	48 83 ec 38          	sub    $0x38,%rsp
   12f4b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12f4f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   12f53:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   12f58:	0f 84 e7 01 00 00    	je     13145 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   12f5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12f62:	48 89 c7             	mov    %rax,%rdi
   12f65:	e8 b4 ff ff ff       	call   12f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12f6a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   12f6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12f72:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   12f76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12f7a:	48 8b 40 08          	mov    0x8(%rax),%rax
   12f7e:	48 29 c2             	sub    %rax,%rdx
   12f81:	48 89 d0             	mov    %rdx,%rax
   12f84:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   12f88:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   12f8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12f90:	48 89 c7             	mov    %rax,%rdi
   12f93:	e8 b4 16 00 00       	call   1464c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   12f98:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12f9c:	72 16                	jb     12fb4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   12f9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12fa2:	48 89 c7             	mov    %rax,%rdi
   12fa5:	e8 a2 16 00 00       	call   1464c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   12faa:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   12fae:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   12fb2:	73 07                	jae    12fbb <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   12fb4:	b8 01 00 00 00       	mov    $0x1,%eax
   12fb9:	eb 05                	jmp    12fc0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   12fbb:	b8 00 00 00 00       	mov    $0x0,%eax
   12fc0:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   12fc2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12fc6:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   12fca:	72 33                	jb     12fff <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   12fcc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12fd0:	48 89 c7             	mov    %rax,%rdi
   12fd3:	e8 74 04 00 00       	call   1344c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12fd8:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   12fdb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12fdf:	48 8b 40 08          	mov    0x8(%rax),%rax
   12fe3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   12fe7:	48 89 ce             	mov    %rcx,%rsi
   12fea:	48 89 c7             	mov    %rax,%rdi
   12fed:	e8 7c 16 00 00       	call   1466e <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   12ff2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12ff6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   12ffa:	e9 46 01 00 00       	jmp    13145 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   12fff:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   13003:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13007:	48 8d 15 2e 7d 00 00 	lea    0x7d2e(%rip),%rdx        # 1ad3c <_ZZN9VulkanApp3runEvE11sec_to_mics+0x25c>
   1300e:	48 89 ce             	mov    %rcx,%rsi
   13011:	48 89 c7             	mov    %rax,%rdi
   13014:	e8 7f 16 00 00       	call   14698 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   13019:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1301d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13021:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13025:	48 89 d6             	mov    %rdx,%rsi
   13028:	48 89 c7             	mov    %rax,%rdi
   1302b:	e8 30 17 00 00       	call   14760 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   13030:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   13034:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13038:	48 89 c7             	mov    %rax,%rdi
   1303b:	e8 0c 04 00 00       	call   1344c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13040:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   13043:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13047:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1304e:	00 
   1304f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13053:	48 01 c1             	add    %rax,%rcx
   13056:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1305a:	48 89 c6             	mov    %rax,%rsi
   1305d:	48 89 cf             	mov    %rcx,%rdi
   13060:	e8 09 16 00 00       	call   1466e <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   13065:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13069:	48 89 c7             	mov    %rax,%rdi
   1306c:	e8 db 03 00 00       	call   1344c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13071:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   13074:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13078:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1307c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13080:	48 8b 00             	mov    (%rax),%rax
   13083:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13087:	48 89 c7             	mov    %rax,%rdi
   1308a:	e8 04 17 00 00       	call   14793 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1308f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   13093:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13097:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1309b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1309f:	48 8b 12             	mov    (%rdx),%rdx
   130a2:	48 29 d1             	sub    %rdx,%rcx
   130a5:	48 c1 f9 03          	sar    $0x3,%rcx
   130a9:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   130ac:	48 89 d6             	mov    %rdx,%rsi
   130af:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   130b3:	48 8b 0a             	mov    (%rdx),%rcx
   130b6:	48 89 f2             	mov    %rsi,%rdx
   130b9:	48 89 ce             	mov    %rcx,%rsi
   130bc:	48 89 c7             	mov    %rax,%rdi
   130bf:	e8 52 03 00 00       	call   13416 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   130c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   130c8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   130cc:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   130cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   130d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   130d7:	48 01 d0             	add    %rdx,%rax
   130da:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   130e1:	00 
   130e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   130e6:	48 01 c2             	add    %rax,%rdx
   130e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   130ed:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   130f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   130f5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   130fc:	00 
   130fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13101:	48 01 c2             	add    %rax,%rdx
   13104:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13108:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1310c:	eb 37                	jmp    13145 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1310e:	48 89 c7             	mov    %rax,%rdi
   13111:	e8 1a 10 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   13116:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1311a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1311e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   13122:	48 89 ce             	mov    %rcx,%rsi
   13125:	48 89 c7             	mov    %rax,%rdi
   13128:	e8 e9 02 00 00       	call   13416 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1312d:	e8 de 14 ff ff       	call   4610 <__cxa_rethrow@plt>
		  __catch(...)
   13132:	48 89 c3             	mov    %rax,%rbx
   13135:	e8 76 15 ff ff       	call   46b0 <__cxa_end_catch@plt>
   1313a:	48 89 d8             	mov    %rbx,%rax
   1313d:	48 89 c7             	mov    %rax,%rdi
   13140:	e8 eb 15 ff ff       	call   4730 <_Unwind_Resume@plt>
    }
   13145:	90                   	nop
   13146:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1314a:	c9                   	leave
   1314b:	c3                   	ret

000000000001314c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1314c:	55                   	push   %rbp
   1314d:	48 89 e5             	mov    %rsp,%rbp
   13150:	48 83 ec 20          	sub    $0x20,%rsp
   13154:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13158:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1315c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13160:	48 8b 40 08          	mov    0x8(%rax),%rax
   13164:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   13168:	48 c1 f8 03          	sar    $0x3,%rax
   1316c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13170:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13175:	74 32                	je     131a9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   13177:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1317b:	48 89 c7             	mov    %rax,%rdi
   1317e:	e8 c9 02 00 00       	call   1344c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13183:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   13186:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1318a:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1318e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13192:	48 89 ce             	mov    %rcx,%rsi
   13195:	48 89 c7             	mov    %rax,%rdi
   13198:	e8 bd 02 00 00       	call   1345a <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1319d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   131a5:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   131a9:	90                   	nop
   131aa:	c9                   	leave
   131ab:	c3                   	ret

00000000000131ac <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   131ac:	55                   	push   %rbp
   131ad:	48 89 e5             	mov    %rsp,%rbp
   131b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131b4:	90                   	nop
   131b5:	5d                   	pop    %rbp
   131b6:	c3                   	ret
   131b7:	90                   	nop

00000000000131b8 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   131b8:	55                   	push   %rbp
   131b9:	48 89 e5             	mov    %rsp,%rbp
   131bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131c0:	90                   	nop
   131c1:	5d                   	pop    %rbp
   131c2:	c3                   	ret
   131c3:	90                   	nop

00000000000131c4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   131c4:	55                   	push   %rbp
   131c5:	48 89 e5             	mov    %rsp,%rbp
   131c8:	48 83 ec 10          	sub    $0x10,%rsp
   131cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   131d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   131dc:	48 89 d6             	mov    %rdx,%rsi
   131df:	48 89 c7             	mov    %rax,%rdi
   131e2:	e8 df 15 00 00       	call   147c6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   131e7:	90                   	nop
   131e8:	c9                   	leave
   131e9:	c3                   	ret

00000000000131ea <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   131ea:	55                   	push   %rbp
   131eb:	48 89 e5             	mov    %rsp,%rbp
   131ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131f6:	48 8b 00             	mov    (%rax),%rax
   131f9:	5d                   	pop    %rbp
   131fa:	c3                   	ret
   131fb:	90                   	nop

00000000000131fc <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   131fc:	55                   	push   %rbp
   131fd:	48 89 e5             	mov    %rsp,%rbp
   13200:	53                   	push   %rbx
   13201:	48 83 ec 18          	sub    $0x18,%rsp
   13205:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13209:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1320d:	48 89 c7             	mov    %rax,%rdi
   13210:	e8 d5 ff ff ff       	call   131ea <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   13215:	48 89 c3             	mov    %rax,%rbx
   13218:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1321c:	48 89 c7             	mov    %rax,%rdi
   1321f:	e8 d4 15 00 00       	call   147f8 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   13224:	48 c1 e0 03          	shl    $0x3,%rax
   13228:	48 01 d8             	add    %rbx,%rax
   1322b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1322f:	c9                   	leave
   13230:	c3                   	ret

0000000000013231 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   13231:	55                   	push   %rbp
   13232:	48 89 e5             	mov    %rsp,%rbp
   13235:	48 83 ec 10          	sub    $0x10,%rsp
   13239:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1323d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   13241:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13245:	48 89 c7             	mov    %rax,%rdi
   13248:	e8 bd 15 00 00       	call   1480a <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   1324d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13251:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13255:	48 89 d6             	mov    %rdx,%rsi
   13258:	48 89 c7             	mov    %rax,%rdi
   1325b:	e8 b5 15 00 00       	call   14815 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   13260:	c9                   	leave
   13261:	c3                   	ret

0000000000013262 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   13262:	55                   	push   %rbp
   13263:	48 89 e5             	mov    %rsp,%rbp
   13266:	53                   	push   %rbx
   13267:	48 83 ec 38          	sub    $0x38,%rsp
   1326b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1326f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13273:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   13277:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1327b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1327f:	48 89 d6             	mov    %rdx,%rsi
   13282:	48 89 c7             	mov    %rax,%rdi
   13285:	e8 a7 ff ff ff       	call   13231 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   1328a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1328e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13292:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13296:	48 89 c7             	mov    %rax,%rdi
   13299:	e8 74 00 00 00       	call   13312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1329e:	48 89 c2             	mov    %rax,%rdx
   132a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132a5:	48 89 d6             	mov    %rdx,%rsi
   132a8:	48 89 c7             	mov    %rax,%rdi
   132ab:	e8 7f 15 00 00       	call   1482f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   132b0:	48 89 c6             	mov    %rax,%rsi
   132b3:	48 89 df             	mov    %rbx,%rdi
   132b6:	e8 d5 0f 00 00       	call   14290 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   132bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   132bf:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   132c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132c6:	48 8b 00             	mov    (%rax),%rax
   132c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   132cd:	48 c1 e2 03          	shl    $0x3,%rdx
   132d1:	48 01 c2             	add    %rax,%rdx
   132d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132d8:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   132dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132e0:	48 89 c7             	mov    %rax,%rdi
   132e3:	e8 2a 00 00 00       	call   13312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   132e8:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   132eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132ef:	48 8b 10             	mov    (%rax),%rdx
   132f2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   132f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   132fa:	48 89 c7             	mov    %rax,%rdi
   132fd:	e8 8d 15 00 00       	call   1488f <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   13302:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13306:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1330a:	90                   	nop
   1330b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1330f:	c9                   	leave
   13310:	c3                   	ret
   13311:	90                   	nop

0000000000013312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   13312:	55                   	push   %rbp
   13313:	48 89 e5             	mov    %rsp,%rbp
   13316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1331a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1331e:	5d                   	pop    %rbp
   1331f:	c3                   	ret

0000000000013320 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   13320:	55                   	push   %rbp
   13321:	48 89 e5             	mov    %rsp,%rbp
   13324:	48 83 ec 20          	sub    $0x20,%rsp
   13328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1332c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13330:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   13334:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1333c:	48 89 d6             	mov    %rdx,%rsi
   1333f:	48 89 c7             	mov    %rax,%rdi
   13342:	e8 79 15 00 00       	call   148c0 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   13347:	90                   	nop
   13348:	c9                   	leave
   13349:	c3                   	ret

000000000001334a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1334a:	55                   	push   %rbp
   1334b:	48 89 e5             	mov    %rsp,%rbp
   1334e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13352:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   13356:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1335a:	5d                   	pop    %rbp
   1335b:	c3                   	ret

000000000001335c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1335c:	55                   	push   %rbp
   1335d:	48 89 e5             	mov    %rsp,%rbp
   13360:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   13364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13368:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1336f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13373:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1337a:	00 
   1337b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1337f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13386:	00 
	{ }
   13387:	90                   	nop
   13388:	5d                   	pop    %rbp
   13389:	c3                   	ret

000000000001338a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1338a:	55                   	push   %rbp
   1338b:	48 89 e5             	mov    %rsp,%rbp
   1338e:	48 83 ec 20          	sub    $0x20,%rsp
   13392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13396:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1339a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1339e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   133a3:	74 17                	je     133bc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   133a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   133ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   133b1:	48 89 ce             	mov    %rcx,%rsi
   133b4:	48 89 c7             	mov    %rax,%rdi
   133b7:	e8 2a 15 00 00       	call   148e6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   133bc:	90                   	nop
   133bd:	c9                   	leave
   133be:	c3                   	ret
   133bf:	90                   	nop

00000000000133c0 <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   133c0:	55                   	push   %rbp
   133c1:	48 89 e5             	mov    %rsp,%rbp
   133c4:	48 83 ec 10          	sub    $0x10,%rsp
   133c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133d0:	48 89 c7             	mov    %rax,%rdi
   133d3:	e8 3c 15 00 00       	call   14914 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   133d8:	90                   	nop
   133d9:	c9                   	leave
   133da:	c3                   	ret
   133db:	90                   	nop

00000000000133dc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   133dc:	55                   	push   %rbp
   133dd:	48 89 e5             	mov    %rsp,%rbp
   133e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   133e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133e8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   133ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133f3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   133fa:	00 
   133fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133ff:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13406:	00 
	{ }
   13407:	90                   	nop
   13408:	5d                   	pop    %rbp
   13409:	c3                   	ret

000000000001340a <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
   1340a:	55                   	push   %rbp
   1340b:	48 89 e5             	mov    %rsp,%rbp
   1340e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13412:	90                   	nop
   13413:	5d                   	pop    %rbp
   13414:	c3                   	ret
   13415:	90                   	nop

0000000000013416 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   13416:	55                   	push   %rbp
   13417:	48 89 e5             	mov    %rsp,%rbp
   1341a:	48 83 ec 20          	sub    $0x20,%rsp
   1341e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13422:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13426:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1342a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1342f:	74 17                	je     13448 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   13431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13435:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13439:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1343d:	48 89 ce             	mov    %rcx,%rsi
   13440:	48 89 c7             	mov    %rax,%rdi
   13443:	e8 d7 14 00 00       	call   1491f <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   13448:	90                   	nop
   13449:	c9                   	leave
   1344a:	c3                   	ret
   1344b:	90                   	nop

000000000001344c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1344c:	55                   	push   %rbp
   1344d:	48 89 e5             	mov    %rsp,%rbp
   13450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13458:	5d                   	pop    %rbp
   13459:	c3                   	ret

000000000001345a <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1345a:	55                   	push   %rbp
   1345b:	48 89 e5             	mov    %rsp,%rbp
   1345e:	48 83 ec 20          	sub    $0x20,%rsp
   13462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13466:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1346a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1346e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13476:	48 89 d6             	mov    %rdx,%rsi
   13479:	48 89 c7             	mov    %rax,%rdi
   1347c:	e8 cc 14 00 00       	call   1494d <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   13481:	90                   	nop
   13482:	c9                   	leave
   13483:	c3                   	ret

0000000000013484 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13484:	55                   	push   %rbp
   13485:	48 89 e5             	mov    %rsp,%rbp
   13488:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1348c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13490:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13494:	48 8b 10             	mov    (%rax),%rdx
   13497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1349b:	48 89 10             	mov    %rdx,(%rax)
   1349e:	90                   	nop
   1349f:	5d                   	pop    %rbp
   134a0:	c3                   	ret
   134a1:	90                   	nop

00000000000134a2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   134a2:	55                   	push   %rbp
   134a3:	48 89 e5             	mov    %rsp,%rbp
   134a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   134aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134ae:	5d                   	pop    %rbp
   134af:	c3                   	ret

00000000000134b0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   134b0:	55                   	push   %rbp
   134b1:	48 89 e5             	mov    %rsp,%rbp
   134b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   134bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   134c0:	48 8b 10             	mov    (%rax),%rdx
   134c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134c7:	48 89 10             	mov    %rdx,(%rax)
   134ca:	90                   	nop
   134cb:	5d                   	pop    %rbp
   134cc:	c3                   	ret
   134cd:	90                   	nop

00000000000134ce <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   134ce:	55                   	push   %rbp
   134cf:	48 89 e5             	mov    %rsp,%rbp
   134d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   134d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134da:	5d                   	pop    %rbp
   134db:	c3                   	ret

00000000000134dc <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
   134dc:	55                   	push   %rbp
   134dd:	48 89 e5             	mov    %rsp,%rbp
   134e0:	53                   	push   %rbx
   134e1:	48 83 ec 18          	sub    $0x18,%rsp
   134e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   134e9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   134ed:	e8 5e d2 ff ff       	call   10750 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   134f2:	48 89 03             	mov    %rax,(%rbx)
	{ }
   134f5:	90                   	nop
   134f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   134fa:	c9                   	leave
   134fb:	c3                   	ret

00000000000134fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   134fc:	55                   	push   %rbp
   134fd:	48 89 e5             	mov    %rsp,%rbp
   13500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   13504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13508:	48 8b 00             	mov    (%rax),%rax
   1350b:	5d                   	pop    %rbp
   1350c:	c3                   	ret

000000000001350d <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   1350d:	55                   	push   %rbp
   1350e:	48 89 e5             	mov    %rsp,%rbp
   13511:	53                   	push   %rbx
   13512:	48 83 ec 38          	sub    $0x38,%rsp
   13516:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1351a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   1351e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13522:	48 8b 00             	mov    (%rax),%rax
   13525:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13529:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1352d:	48 89 c7             	mov    %rax,%rdi
   13530:	e8 6d d2 ff ff       	call   107a2 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   13535:	48 89 c3             	mov    %rax,%rbx
   13538:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1353c:	48 8b 00             	mov    (%rax),%rax
   1353f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13543:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   13547:	48 89 c7             	mov    %rax,%rdi
   1354a:	e8 53 d2 ff ff       	call   107a2 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   1354f:	48 29 c3             	sub    %rax,%rbx
   13552:	48 89 da             	mov    %rbx,%rdx
   13555:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13559:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   1355d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13561:	48 89 d6             	mov    %rdx,%rsi
   13564:	48 89 c7             	mov    %rax,%rdi
   13567:	e8 0e d2 ff ff       	call   1077a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   1356c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   13570:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13574:	c9                   	leave
   13575:	c3                   	ret

0000000000013576 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   13576:	55                   	push   %rbp
   13577:	48 89 e5             	mov    %rsp,%rbp
   1357a:	48 83 ec 20          	sub    $0x20,%rsp
   1357e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   13582:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13586:	48 89 c7             	mov    %rax,%rdi
   13589:	e8 14 d2 ff ff       	call   107a2 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   1358e:	48 89 c1             	mov    %rax,%rcx
   13591:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   13598:	9b c4 20 
   1359b:	48 89 c8             	mov    %rcx,%rax
   1359e:	48 f7 ea             	imul   %rdx
   135a1:	48 89 d0             	mov    %rdx,%rax
   135a4:	48 c1 f8 07          	sar    $0x7,%rax
   135a8:	48 c1 f9 3f          	sar    $0x3f,%rcx
   135ac:	48 89 ca             	mov    %rcx,%rdx
   135af:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   135b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   135b6:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   135ba:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   135be:	48 89 d6             	mov    %rdx,%rsi
   135c1:	48 89 c7             	mov    %rax,%rdi
   135c4:	e8 ab 13 00 00       	call   14974 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   135c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   135cd:	c9                   	leave
   135ce:	c3                   	ret
   135cf:	90                   	nop

00000000000135d0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   135d0:	55                   	push   %rbp
   135d1:	48 89 e5             	mov    %rsp,%rbp
   135d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   135dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135e0:	48 8b 10             	mov    (%rax),%rdx
   135e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135e7:	48 89 10             	mov    %rdx,(%rax)
   135ea:	90                   	nop
   135eb:	5d                   	pop    %rbp
   135ec:	c3                   	ret
   135ed:	90                   	nop

00000000000135ee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   135ee:	55                   	push   %rbp
   135ef:	48 89 e5             	mov    %rsp,%rbp
   135f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   135f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135fa:	5d                   	pop    %rbp
   135fb:	c3                   	ret

00000000000135fc <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   135fc:	55                   	push   %rbp
   135fd:	48 89 e5             	mov    %rsp,%rbp
   13600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13608:	48 8b 40 08          	mov    0x8(%rax),%rax
   1360c:	5d                   	pop    %rbp
   1360d:	c3                   	ret

000000000001360e <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1360e:	55                   	push   %rbp
   1360f:	48 89 e5             	mov    %rsp,%rbp
   13612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   13616:	90                   	nop
   13617:	5d                   	pop    %rbp
   13618:	c3                   	ret

0000000000013619 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   13619:	55                   	push   %rbp
   1361a:	48 89 e5             	mov    %rsp,%rbp
   1361d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13621:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   13625:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13629:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1362d:	48 c1 f8 03          	sar    $0x3,%rax
    }
   13631:	5d                   	pop    %rbp
   13632:	c3                   	ret

0000000000013633 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   13633:	55                   	push   %rbp
   13634:	48 89 e5             	mov    %rsp,%rbp
   13637:	48 83 ec 20          	sub    $0x20,%rsp
   1363b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1363f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13643:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13647:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1364b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1364f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13657:	48 89 ce             	mov    %rcx,%rsi
   1365a:	48 89 c7             	mov    %rax,%rdi
   1365d:	e8 5a 13 00 00       	call   149bc <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   13662:	c9                   	leave
   13663:	c3                   	ret

0000000000013664 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13664:	55                   	push   %rbp
   13665:	48 89 e5             	mov    %rsp,%rbp
   13668:	48 83 ec 10          	sub    $0x10,%rsp
   1366c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13670:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13674:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1367c:	48 89 d6             	mov    %rdx,%rsi
   1367f:	48 89 c7             	mov    %rax,%rdi
   13682:	e8 6a 13 00 00       	call   149f1 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   13687:	90                   	nop
   13688:	c9                   	leave
   13689:	c3                   	ret

000000000001368a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1368a:	55                   	push   %rbp
   1368b:	48 89 e5             	mov    %rsp,%rbp
   1368e:	53                   	push   %rbx
   1368f:	48 83 ec 28          	sub    $0x28,%rsp
   13693:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13697:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1369b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1369f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   136a3:	48 89 c6             	mov    %rax,%rsi
   136a6:	bf 08 00 00 00       	mov    $0x8,%edi
   136ab:	e8 19 19 ff ff       	call   4fc9 <_ZnwmPv>
   136b0:	48 89 c3             	mov    %rax,%rbx
   136b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   136b7:	48 89 c7             	mov    %rax,%rdi
   136ba:	e8 1f ea ff ff       	call   120de <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   136bf:	48 8b 00             	mov    (%rax),%rax
   136c2:	48 89 03             	mov    %rax,(%rbx)
   136c5:	90                   	nop
   136c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   136ca:	c9                   	leave
   136cb:	c3                   	ret

00000000000136cc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   136cc:	55                   	push   %rbp
   136cd:	48 89 e5             	mov    %rsp,%rbp
   136d0:	53                   	push   %rbx
   136d1:	48 83 ec 38          	sub    $0x38,%rsp
   136d5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   136d9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   136dd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   136e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   136e5:	48 89 c7             	mov    %rax,%rdi
   136e8:	e8 13 13 00 00       	call   14a00 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   136ed:	48 89 c3             	mov    %rax,%rbx
   136f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   136f4:	48 89 c7             	mov    %rax,%rdi
   136f7:	e8 6a d6 ff ff       	call   10d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   136fc:	48 29 c3             	sub    %rax,%rbx
   136ff:	48 89 da             	mov    %rbx,%rdx
   13702:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13706:	48 39 c2             	cmp    %rax,%rdx
   13709:	0f 92 c0             	setb   %al
   1370c:	84 c0                	test   %al,%al
   1370e:	74 0c                	je     1371c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   13710:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13714:	48 89 c7             	mov    %rax,%rdi
   13717:	e8 74 0a ff ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1371c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13720:	48 89 c7             	mov    %rax,%rdi
   13723:	e8 3e d6 ff ff       	call   10d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13728:	48 89 c3             	mov    %rax,%rbx
   1372b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1372f:	48 89 c7             	mov    %rax,%rdi
   13732:	e8 2f d6 ff ff       	call   10d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13737:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1373b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1373f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13743:	48 89 d6             	mov    %rdx,%rsi
   13746:	48 89 c7             	mov    %rax,%rdi
   13749:	e8 43 12 00 00       	call   14991 <_ZSt3maxImERKT_S2_S2_>
   1374e:	48 8b 00             	mov    (%rax),%rax
   13751:	48 01 d8             	add    %rbx,%rax
   13754:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   13758:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1375c:	48 89 c7             	mov    %rax,%rdi
   1375f:	e8 02 d6 ff ff       	call   10d66 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13764:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   13768:	72 12                	jb     1377c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   1376a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1376e:	48 89 c7             	mov    %rax,%rdi
   13771:	e8 8a 12 00 00       	call   14a00 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   13776:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1377a:	73 0e                	jae    1378a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   1377c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13780:	48 89 c7             	mov    %rax,%rdi
   13783:	e8 78 12 00 00       	call   14a00 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   13788:	eb 04                	jmp    1378e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   1378a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1378e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13792:	c9                   	leave
   13793:	c3                   	ret

0000000000013794 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   13794:	55                   	push   %rbp
   13795:	48 89 e5             	mov    %rsp,%rbp
   13798:	53                   	push   %rbx
   13799:	48 83 ec 18          	sub    $0x18,%rsp
   1379d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   137a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   137a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137a9:	48 89 c7             	mov    %rax,%rdi
   137ac:	e8 1f e9 ff ff       	call   120d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   137b1:	48 8b 18             	mov    (%rax),%rbx
   137b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   137b8:	48 89 c7             	mov    %rax,%rdi
   137bb:	e8 10 e9 ff ff       	call   120d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   137c0:	48 8b 00             	mov    (%rax),%rax
   137c3:	48 89 da             	mov    %rbx,%rdx
   137c6:	48 29 c2             	sub    %rax,%rdx
   137c9:	48 89 d0             	mov    %rdx,%rax
   137cc:	48 c1 f8 03          	sar    $0x3,%rax
   137d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   137d4:	c9                   	leave
   137d5:	c3                   	ret

00000000000137d6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   137d6:	55                   	push   %rbp
   137d7:	48 89 e5             	mov    %rsp,%rbp
   137da:	48 83 ec 20          	sub    $0x20,%rsp
   137de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   137e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   137ea:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   137ee:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   137f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   137f6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   137fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137fe:	48 89 c7             	mov    %rax,%rdi
   13801:	e8 1c 12 00 00       	call   14a22 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   13806:	c9                   	leave
   13807:	c3                   	ret

0000000000013808 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   13808:	55                   	push   %rbp
   13809:	48 89 e5             	mov    %rsp,%rbp
   1380c:	48 83 ec 20          	sub    $0x20,%rsp
   13810:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13814:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   13818:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1381c:	48 8b 00             	mov    (%rax),%rax
   1381f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13823:	48 c1 e2 03          	shl    $0x3,%rdx
   13827:	48 f7 da             	neg    %rdx
   1382a:	48 01 d0             	add    %rdx,%rax
   1382d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13831:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   13835:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   13839:	48 89 d6             	mov    %rdx,%rsi
   1383c:	48 89 c7             	mov    %rax,%rdi
   1383f:	e8 6e e8 ff ff       	call   120b2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13844:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13848:	c9                   	leave
   13849:	c3                   	ret

000000000001384a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   1384a:	55                   	push   %rbp
   1384b:	48 89 e5             	mov    %rsp,%rbp
   1384e:	53                   	push   %rbx
   1384f:	48 83 ec 28          	sub    $0x28,%rsp
   13853:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13857:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   1385b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1385f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13863:	48 89 c7             	mov    %rax,%rdi
   13866:	e8 bb ea ff ff       	call   12326 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1386b:	48 89 c6             	mov    %rax,%rsi
   1386e:	48 89 df             	mov    %rbx,%rdi
   13871:	e8 10 12 00 00       	call   14a86 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   13876:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1387a:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   1387e:	90                   	nop
   1387f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13883:	c9                   	leave
   13884:	c3                   	ret
   13885:	90                   	nop

0000000000013886 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   13886:	55                   	push   %rbp
   13887:	48 89 e5             	mov    %rsp,%rbp
   1388a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1388e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13892:	5d                   	pop    %rbp
   13893:	c3                   	ret

0000000000013894 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   13894:	55                   	push   %rbp
   13895:	48 89 e5             	mov    %rsp,%rbp
   13898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1389c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   138a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   138a4:	8b 10                	mov    (%rax),%edx
   138a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138aa:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   138ac:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   138b0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   138b4:	48 8b 46 04          	mov    0x4(%rsi),%rax
   138b8:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   138bc:	48 89 41 04          	mov    %rax,0x4(%rcx)
   138c0:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   138c4:	48 8b 46 14          	mov    0x14(%rsi),%rax
   138c8:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   138cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   138d0:	5d                   	pop    %rbp
   138d1:	c3                   	ret

00000000000138d2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   138d2:	55                   	push   %rbp
   138d3:	48 89 e5             	mov    %rsp,%rbp
   138d6:	53                   	push   %rbx
   138d7:	48 83 ec 18          	sub    $0x18,%rsp
   138db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   138df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   138e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   138e7:	48 89 c7             	mov    %rax,%rdi
   138ea:	e8 e9 11 00 00       	call   14ad8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   138ef:	48 89 c3             	mov    %rax,%rbx
   138f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138f6:	48 89 c7             	mov    %rax,%rdi
   138f9:	e8 cc 11 00 00       	call   14aca <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   138fe:	48 89 de             	mov    %rbx,%rsi
   13901:	48 89 c7             	mov    %rax,%rdi
   13904:	e8 dd 11 00 00       	call   14ae6 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   13909:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1390d:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   13911:	90                   	nop
   13912:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13916:	c9                   	leave
   13917:	c3                   	ret

0000000000013918 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   13918:	55                   	push   %rbp
   13919:	48 89 e5             	mov    %rsp,%rbp
   1391c:	48 83 ec 10          	sub    $0x10,%rsp
   13920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   13924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13928:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1392c:	84 c0                	test   %al,%al
   1392e:	74 0c                	je     1393c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   13930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13934:	48 89 c7             	mov    %rax,%rdi
   13937:	e8 04 12 00 00       	call   14b40 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   1393c:	90                   	nop
   1393d:	c9                   	leave
   1393e:	c3                   	ret
   1393f:	90                   	nop

0000000000013940 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13940:	55                   	push   %rbp
   13941:	48 89 e5             	mov    %rsp,%rbp
   13944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13948:	90                   	nop
   13949:	5d                   	pop    %rbp
   1394a:	c3                   	ret

000000000001394b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1394b:	55                   	push   %rbp
   1394c:	48 89 e5             	mov    %rsp,%rbp
   1394f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   13953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13957:	48 8b 40 18          	mov    0x18(%rax),%rax
   1395b:	5d                   	pop    %rbp
   1395c:	c3                   	ret

000000000001395d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1395d:	55                   	push   %rbp
   1395e:	48 89 e5             	mov    %rsp,%rbp
   13961:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   13965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13969:	48 8b 40 10          	mov    0x10(%rax),%rax
   1396d:	5d                   	pop    %rbp
   1396e:	c3                   	ret
   1396f:	90                   	nop

0000000000013970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13970:	55                   	push   %rbp
   13971:	48 89 e5             	mov    %rsp,%rbp
   13974:	48 83 ec 10          	sub    $0x10,%rsp
   13978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1397c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   13980:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13988:	48 89 d6             	mov    %rdx,%rsi
   1398b:	48 89 c7             	mov    %rax,%rdi
   1398e:	e8 c1 11 00 00       	call   14b54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   13993:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1399b:	48 89 d6             	mov    %rdx,%rsi
   1399e:	48 89 c7             	mov    %rax,%rdi
   139a1:	e8 ec 11 00 00       	call   14b92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   139a6:	90                   	nop
   139a7:	c9                   	leave
   139a8:	c3                   	ret
   139a9:	90                   	nop

00000000000139aa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   139aa:	55                   	push   %rbp
   139ab:	48 89 e5             	mov    %rsp,%rbp
   139ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   139b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139b6:	48 8b 40 10          	mov    0x10(%rax),%rax
   139ba:	5d                   	pop    %rbp
   139bb:	c3                   	ret

00000000000139bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   139bc:	55                   	push   %rbp
   139bd:	48 89 e5             	mov    %rsp,%rbp
   139c0:	53                   	push   %rbx
   139c1:	48 83 ec 18          	sub    $0x18,%rsp
   139c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   139c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   139cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139d1:	48 89 c7             	mov    %rax,%rdi
   139d4:	e8 ef 11 00 00       	call   14bc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   139d9:	48 89 c3             	mov    %rax,%rbx
   139dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139e0:	48 89 c7             	mov    %rax,%rdi
   139e3:	e8 0c eb ff ff       	call   124f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   139e8:	48 89 c6             	mov    %rax,%rsi
   139eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   139ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139f3:	48 89 d1             	mov    %rdx,%rcx
   139f6:	48 89 da             	mov    %rbx,%rdx
   139f9:	48 89 c7             	mov    %rax,%rdi
   139fc:	e8 d9 11 00 00       	call   14bda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   13a01:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13a05:	c9                   	leave
   13a06:	c3                   	ret
   13a07:	90                   	nop

0000000000013a08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13a08:	55                   	push   %rbp
   13a09:	48 89 e5             	mov    %rsp,%rbp
   13a0c:	48 83 ec 20          	sub    $0x20,%rsp
   13a10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   13a14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a18:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13a1c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a20:	48 89 d6             	mov    %rdx,%rsi
   13a23:	48 89 c7             	mov    %rax,%rdi
   13a26:	e8 39 06 00 00       	call   14064 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13a2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a2f:	c9                   	leave
   13a30:	c3                   	ret
   13a31:	90                   	nop

0000000000013a32 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   13a32:	55                   	push   %rbp
   13a33:	48 89 e5             	mov    %rsp,%rbp
   13a36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   13a3a:	90                   	nop
   13a3b:	5d                   	pop    %rbp
   13a3c:	c3                   	ret
   13a3d:	90                   	nop

0000000000013a3e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   13a3e:	55                   	push   %rbp
   13a3f:	48 89 e5             	mov    %rsp,%rbp
   13a42:	48 83 ec 10          	sub    $0x10,%rsp
   13a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   13a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a4e:	48 83 c0 20          	add    $0x20,%rax
   13a52:	48 89 c7             	mov    %rax,%rdi
   13a55:	e8 16 12 00 00       	call   14c70 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   13a5a:	c9                   	leave
   13a5b:	c3                   	ret

0000000000013a5c <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   13a5c:	55                   	push   %rbp
   13a5d:	48 89 e5             	mov    %rsp,%rbp
   13a60:	48 83 ec 10          	sub    $0x10,%rsp
   13a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   13a6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13a70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a74:	48 89 d6             	mov    %rdx,%rsi
   13a77:	48 89 c7             	mov    %rax,%rdi
   13a7a:	e8 b1 05 ff ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   13a7f:	c1 e8 1f             	shr    $0x1f,%eax
   13a82:	c9                   	leave
   13a83:	c3                   	ret

0000000000013a84 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13a84:	55                   	push   %rbp
   13a85:	48 89 e5             	mov    %rsp,%rbp
   13a88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   13a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a90:	5d                   	pop    %rbp
   13a91:	c3                   	ret

0000000000013a92 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   13a92:	55                   	push   %rbp
   13a93:	48 89 e5             	mov    %rsp,%rbp
   13a96:	53                   	push   %rbx
   13a97:	48 83 ec 18          	sub    $0x18,%rsp
   13a9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13a9f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   13aa3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13aa7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13aab:	48 89 c7             	mov    %rax,%rdi
   13aae:	e8 d1 ff ff ff       	call   13a84 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   13ab3:	48 89 c6             	mov    %rax,%rsi
   13ab6:	48 89 df             	mov    %rbx,%rdi
   13ab9:	e8 cc 11 00 00       	call   14c8a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   13abe:	90                   	nop
   13abf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13ac3:	c9                   	leave
   13ac4:	c3                   	ret

0000000000013ac5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13ac5:	55                   	push   %rbp
   13ac6:	48 89 e5             	mov    %rsp,%rbp
   13ac9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   13acd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ad1:	5d                   	pop    %rbp
   13ad2:	c3                   	ret

0000000000013ad3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13ad3:	55                   	push   %rbp
   13ad4:	48 89 e5             	mov    %rsp,%rbp
   13ad7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   13adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13adf:	5d                   	pop    %rbp
   13ae0:	c3                   	ret

0000000000013ae1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13ae1:	55                   	push   %rbp
   13ae2:	48 89 e5             	mov    %rsp,%rbp
   13ae5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   13ae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aed:	5d                   	pop    %rbp
   13aee:	c3                   	ret
   13aef:	90                   	nop

0000000000013af0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   13af0:	55                   	push   %rbp
   13af1:	48 89 e5             	mov    %rsp,%rbp
   13af4:	41 54                	push   %r12
   13af6:	53                   	push   %rbx
   13af7:	48 83 ec 30          	sub    $0x30,%rsp
   13afb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13aff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13b03:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13b07:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   13b0b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   13b0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b13:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13b17:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   13b1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b1e:	48 89 c7             	mov    %rax,%rdi
   13b21:	e8 bb ff ff ff       	call   13ae1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   13b26:	49 89 c4             	mov    %rax,%r12
   13b29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13b2d:	48 89 c7             	mov    %rax,%rdi
   13b30:	e8 9e ff ff ff       	call   13ad3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   13b35:	48 89 c3             	mov    %rax,%rbx
   13b38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13b3c:	48 89 c7             	mov    %rax,%rdi
   13b3f:	e8 81 ff ff ff       	call   13ac5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   13b44:	48 89 c6             	mov    %rax,%rsi
   13b47:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b4b:	4c 89 e1             	mov    %r12,%rcx
   13b4e:	48 89 da             	mov    %rbx,%rdx
   13b51:	48 89 c7             	mov    %rax,%rdi
   13b54:	e8 65 11 00 00       	call   14cbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   13b59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13b5d:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   13b61:	90                   	nop
   13b62:	48 83 c4 30          	add    $0x30,%rsp
   13b66:	5b                   	pop    %rbx
   13b67:	41 5c                	pop    %r12
   13b69:	5d                   	pop    %rbp
   13b6a:	c3                   	ret
   13b6b:	90                   	nop

0000000000013b6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   13b6c:	55                   	push   %rbp
   13b6d:	48 89 e5             	mov    %rsp,%rbp
   13b70:	48 83 ec 10          	sub    $0x10,%rsp
   13b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   13b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b7c:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b80:	48 85 c0             	test   %rax,%rax
   13b83:	74 1a                	je     13b9f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   13b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b89:	48 8b 00             	mov    (%rax),%rax
   13b8c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13b90:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   13b94:	48 89 d6             	mov    %rdx,%rsi
   13b97:	48 89 c7             	mov    %rax,%rdi
   13b9a:	e8 d1 fd ff ff       	call   13970 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   13b9f:	90                   	nop
   13ba0:	c9                   	leave
   13ba1:	c3                   	ret

0000000000013ba2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13ba2:	55                   	push   %rbp
   13ba3:	48 89 e5             	mov    %rsp,%rbp
   13ba6:	53                   	push   %rbx
   13ba7:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   13bae:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   13bb5:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   13bbc:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   13bc3:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   13bca:	48 89 c7             	mov    %rax,%rdi
   13bcd:	e8 68 11 00 00       	call   14d3a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   13bd2:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   13bd9:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   13be0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13be7:	48 89 c7             	mov    %rax,%rdi
   13bea:	e8 d9 0f 00 00       	call   14bc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   13bef:	48 39 c3             	cmp    %rax,%rbx
   13bf2:	0f 94 c0             	sete   %al
   13bf5:	84 c0                	test   %al,%al
   13bf7:	0f 84 c8 00 00 00    	je     13cc5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   13bfd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13c04:	48 89 c7             	mov    %rax,%rdi
   13c07:	e8 56 11 00 00       	call   14d62 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   13c0c:	48 85 c0             	test   %rax,%rax
   13c0f:	74 44                	je     13c55 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   13c11:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13c18:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13c1f:	48 89 c7             	mov    %rax,%rdi
   13c22:	e8 4d 11 00 00       	call   14d74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13c27:	48 8b 00             	mov    (%rax),%rax
   13c2a:	48 89 c7             	mov    %rax,%rdi
   13c2d:	e8 54 11 00 00       	call   14d86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13c32:	48 89 c1             	mov    %rax,%rcx
   13c35:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13c3c:	48 89 c2             	mov    %rax,%rdx
   13c3f:	48 89 ce             	mov    %rcx,%rsi
   13c42:	48 89 df             	mov    %rbx,%rdi
   13c45:	e8 8c e9 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13c4a:	84 c0                	test   %al,%al
   13c4c:	74 07                	je     13c55 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   13c4e:	b8 01 00 00 00       	mov    $0x1,%eax
   13c53:	eb 05                	jmp    13c5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   13c55:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   13c5a:	84 c0                	test   %al,%al
   13c5c:	74 49                	je     13ca7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   13c5e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13c65:	48 89 c7             	mov    %rax,%rdi
   13c68:	e8 07 11 00 00       	call   14d74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13c6d:	48 89 c2             	mov    %rax,%rdx
   13c70:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   13c77:	00 00 00 00 
   13c7b:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   13c82:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   13c89:	48 89 ce             	mov    %rcx,%rsi
   13c8c:	48 89 c7             	mov    %rax,%rdi
   13c8f:	e8 0c 11 00 00       	call   14da0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13c94:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   13c9b:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   13ca2:	e9 43 03 00 00       	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   13ca7:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13cae:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13cb5:	48 89 d6             	mov    %rdx,%rsi
   13cb8:	48 89 c7             	mov    %rax,%rdi
   13cbb:	e8 10 11 00 00       	call   14dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13cc0:	e9 25 03 00 00       	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   13cc5:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13ccc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13cd3:	48 89 c7             	mov    %rax,%rdi
   13cd6:	e8 ab 10 00 00       	call   14d86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13cdb:	48 89 c2             	mov    %rax,%rdx
   13cde:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13ce5:	48 89 c6             	mov    %rax,%rsi
   13ce8:	48 89 df             	mov    %rbx,%rdi
   13ceb:	e8 e6 e8 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13cf0:	84 c0                	test   %al,%al
   13cf2:	0f 84 66 01 00 00    	je     13e5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   13cf8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13cff:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   13d06:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   13d0d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13d14:	48 89 c7             	mov    %rax,%rdi
   13d17:	e8 2a 12 00 00       	call   14f46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   13d1c:	48 8b 00             	mov    (%rax),%rax
   13d1f:	48 39 c3             	cmp    %rax,%rbx
   13d22:	0f 94 c0             	sete   %al
   13d25:	84 c0                	test   %al,%al
   13d27:	74 4c                	je     13d75 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   13d29:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13d30:	48 89 c7             	mov    %rax,%rdi
   13d33:	e8 0e 12 00 00       	call   14f46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   13d38:	48 89 c3             	mov    %rax,%rbx
   13d3b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13d42:	48 89 c7             	mov    %rax,%rdi
   13d45:	e8 fc 11 00 00       	call   14f46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   13d4a:	48 89 c1             	mov    %rax,%rcx
   13d4d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   13d54:	48 89 da             	mov    %rbx,%rdx
   13d57:	48 89 ce             	mov    %rcx,%rsi
   13d5a:	48 89 c7             	mov    %rax,%rdi
   13d5d:	e8 f6 11 00 00       	call   14f58 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   13d62:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   13d69:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   13d70:	e9 75 02 00 00       	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   13d75:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13d7c:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   13d83:	48 89 c7             	mov    %rax,%rdi
   13d86:	e8 11 12 00 00       	call   14f9c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   13d8b:	48 8b 00             	mov    (%rax),%rax
   13d8e:	48 89 c7             	mov    %rax,%rdi
   13d91:	e8 f0 0f 00 00       	call   14d86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13d96:	48 89 c1             	mov    %rax,%rcx
   13d99:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13da0:	48 89 c2             	mov    %rax,%rdx
   13da3:	48 89 ce             	mov    %rcx,%rsi
   13da6:	48 89 df             	mov    %rbx,%rdi
   13da9:	e8 28 e8 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13dae:	84 c0                	test   %al,%al
   13db0:	0f 84 8a 00 00 00    	je     13e40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   13db6:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   13dbd:	48 89 c7             	mov    %rax,%rdi
   13dc0:	e8 86 fb ff ff       	call   1394b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13dc5:	48 85 c0             	test   %rax,%rax
   13dc8:	0f 94 c0             	sete   %al
   13dcb:	84 c0                	test   %al,%al
   13dcd:	74 3e                	je     13e0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   13dcf:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   13dd6:	00 00 00 00 
   13dda:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   13de1:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   13de8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   13def:	48 89 ce             	mov    %rcx,%rsi
   13df2:	48 89 c7             	mov    %rax,%rdi
   13df5:	e8 a6 0f 00 00       	call   14da0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13dfa:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   13e01:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   13e08:	e9 dd 01 00 00       	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   13e0d:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   13e14:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   13e1b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   13e22:	48 89 ce             	mov    %rcx,%rsi
   13e25:	48 89 c7             	mov    %rax,%rdi
   13e28:	e8 2b 11 00 00       	call   14f58 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   13e2d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   13e34:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   13e3b:	e9 aa 01 00 00       	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   13e40:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13e47:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13e4e:	48 89 d6             	mov    %rdx,%rsi
   13e51:	48 89 c7             	mov    %rax,%rdi
   13e54:	e8 77 0f 00 00       	call   14dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13e59:	e9 8c 01 00 00       	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   13e5e:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13e65:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13e6c:	48 89 c7             	mov    %rax,%rdi
   13e6f:	e8 12 0f 00 00       	call   14d86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13e74:	48 89 c1             	mov    %rax,%rcx
   13e77:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13e7e:	48 89 c2             	mov    %rax,%rdx
   13e81:	48 89 ce             	mov    %rcx,%rsi
   13e84:	48 89 df             	mov    %rbx,%rdi
   13e87:	e8 4a e7 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13e8c:	84 c0                	test   %al,%al
   13e8e:	0f 84 2c 01 00 00    	je     13fc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   13e94:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13e9b:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   13ea2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   13ea9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13eb0:	48 89 c7             	mov    %rax,%rdi
   13eb3:	e8 bc 0e 00 00       	call   14d74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13eb8:	48 8b 00             	mov    (%rax),%rax
   13ebb:	48 39 c3             	cmp    %rax,%rbx
   13ebe:	0f 94 c0             	sete   %al
   13ec1:	84 c0                	test   %al,%al
   13ec3:	74 3a                	je     13eff <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   13ec5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13ecc:	48 89 c7             	mov    %rax,%rdi
   13ecf:	e8 a0 0e 00 00       	call   14d74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13ed4:	48 89 c2             	mov    %rax,%rdx
   13ed7:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   13ede:	00 
   13edf:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   13ee3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   13ee7:	48 89 ce             	mov    %rcx,%rsi
   13eea:	48 89 c7             	mov    %rax,%rdi
   13eed:	e8 ae 0e 00 00       	call   14da0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13ef2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13ef6:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   13efa:	e9 eb 00 00 00       	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   13eff:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13f06:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   13f0d:	48 89 c7             	mov    %rax,%rdi
   13f10:	e8 af 10 00 00       	call   14fc4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   13f15:	48 8b 00             	mov    (%rax),%rax
   13f18:	48 89 c7             	mov    %rax,%rdi
   13f1b:	e8 66 0e 00 00       	call   14d86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13f20:	48 89 c2             	mov    %rax,%rdx
   13f23:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13f2a:	48 89 c6             	mov    %rax,%rsi
   13f2d:	48 89 df             	mov    %rbx,%rdi
   13f30:	e8 a1 e6 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13f35:	84 c0                	test   %al,%al
   13f37:	74 6c                	je     13fa5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   13f39:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13f40:	48 89 c7             	mov    %rax,%rdi
   13f43:	e8 03 fa ff ff       	call   1394b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13f48:	48 85 c0             	test   %rax,%rax
   13f4b:	0f 94 c0             	sete   %al
   13f4e:	84 c0                	test   %al,%al
   13f50:	74 2c                	je     13f7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   13f52:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   13f59:	00 
   13f5a:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   13f61:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   13f65:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13f69:	48 89 ce             	mov    %rcx,%rsi
   13f6c:	48 89 c7             	mov    %rax,%rdi
   13f6f:	e8 2c 0e 00 00       	call   14da0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13f74:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13f78:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13f7c:	eb 6c                	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   13f7e:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   13f85:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   13f8c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13f90:	48 89 ce             	mov    %rcx,%rsi
   13f93:	48 89 c7             	mov    %rax,%rdi
   13f96:	e8 bd 0f 00 00       	call   14f58 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   13f9b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13f9f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13fa3:	eb 45                	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   13fa5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13fac:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13fb3:	48 89 d6             	mov    %rdx,%rsi
   13fb6:	48 89 c7             	mov    %rax,%rdi
   13fb9:	e8 12 0e 00 00       	call   14dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13fbe:	eb 2a                	jmp    13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   13fc0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   13fc7:	00 
   13fc8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   13fcc:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   13fd3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13fd7:	48 89 ce             	mov    %rcx,%rsi
   13fda:	48 89 c7             	mov    %rax,%rdi
   13fdd:	e8 be 0d 00 00       	call   14da0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13fe2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13fe6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   13fea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13fee:	c9                   	leave
   13fef:	c3                   	ret

0000000000013ff0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   13ff0:	55                   	push   %rbp
   13ff1:	48 89 e5             	mov    %rsp,%rbp
   13ff4:	48 83 ec 10          	sub    $0x10,%rsp
   13ff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   13ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14000:	48 8b 40 08          	mov    0x8(%rax),%rax
   14004:	48 89 c7             	mov    %rax,%rdi
   14007:	e8 e0 0f 00 00       	call   14fec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1400c:	c9                   	leave
   1400d:	c3                   	ret

000000000001400e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   1400e:	55                   	push   %rbp
   1400f:	48 89 e5             	mov    %rsp,%rbp
   14012:	48 83 ec 30          	sub    $0x30,%rsp
   14016:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1401a:	48 89 d1             	mov    %rdx,%rcx
   1401d:	48 89 f0             	mov    %rsi,%rax
   14020:	48 89 fa             	mov    %rdi,%rdx
   14023:	48 89 ca             	mov    %rcx,%rdx
   14026:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1402a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   1402e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14032:	48 8b 00             	mov    (%rax),%rax
   14035:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14039:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1403d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14041:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   14045:	48 89 c7             	mov    %rax,%rdi
   14048:	e8 cb 0f 00 00       	call   15018 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   1404d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   14051:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14055:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1405c:	00 
	  return __it;
   1405d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   14061:	c9                   	leave
   14062:	c3                   	ret
   14063:	90                   	nop

0000000000014064 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   14064:	55                   	push   %rbp
   14065:	48 89 e5             	mov    %rsp,%rbp
   14068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1406c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   14070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14074:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14078:	48 89 10             	mov    %rdx,(%rax)
   1407b:	90                   	nop
   1407c:	5d                   	pop    %rbp
   1407d:	c3                   	ret

000000000001407e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1407e:	55                   	push   %rbp
   1407f:	48 89 e5             	mov    %rsp,%rbp
   14082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14086:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1408a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1408e:	48 8b 10             	mov    (%rax),%rdx
   14091:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14095:	48 89 10             	mov    %rdx,(%rax)
   14098:	90                   	nop
   14099:	5d                   	pop    %rbp
   1409a:	c3                   	ret
   1409b:	90                   	nop

000000000001409c <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1409c:	55                   	push   %rbp
   1409d:	48 89 e5             	mov    %rsp,%rbp
   140a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   140a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140a8:	5d                   	pop    %rbp
   140a9:	c3                   	ret

00000000000140aa <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   140aa:	55                   	push   %rbp
   140ab:	48 89 e5             	mov    %rsp,%rbp
   140ae:	48 83 ec 10          	sub    $0x10,%rsp
   140b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   140ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   140be:	48 89 c7             	mov    %rax,%rdi
   140c1:	e8 16 10 00 00       	call   150dc <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   140c6:	48 89 c2             	mov    %rax,%rdx
   140c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140cd:	48 89 d6             	mov    %rdx,%rsi
   140d0:	48 89 c7             	mov    %rax,%rdi
   140d3:	e8 6c 5b ff ff       	call   9c44 <_ZNSaIP9VkImage_TEC1ERKS1_>
   140d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140dc:	c9                   	leave
   140dd:	c3                   	ret

00000000000140de <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   140de:	55                   	push   %rbp
   140df:	48 89 e5             	mov    %rsp,%rbp
   140e2:	48 83 ec 10          	sub    $0x10,%rsp
   140e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   140ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   140f6:	48 89 d6             	mov    %rdx,%rsi
   140f9:	48 89 c7             	mov    %rax,%rdi
   140fc:	e8 e9 0f 00 00       	call   150ea <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   14101:	90                   	nop
   14102:	c9                   	leave
   14103:	c3                   	ret

0000000000014104 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   14104:	55                   	push   %rbp
   14105:	48 89 e5             	mov    %rsp,%rbp
   14108:	48 83 ec 30          	sub    $0x30,%rsp
   1410c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14110:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   14114:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   14118:	48 89 c7             	mov    %rax,%rdi
   1411b:	e8 a6 6f ff ff       	call   b0c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   14120:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14124:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   14128:	48 89 d6             	mov    %rdx,%rsi
   1412b:	48 89 c7             	mov    %rax,%rdi
   1412e:	e8 dd 0f 00 00       	call   15110 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   14133:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14137:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1413b:	48 89 d6             	mov    %rdx,%rsi
   1413e:	48 89 c7             	mov    %rax,%rdi
   14141:	e8 ca 0f 00 00       	call   15110 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   14146:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1414a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1414e:	48 89 d6             	mov    %rdx,%rsi
   14151:	48 89 c7             	mov    %rax,%rdi
   14154:	e8 b7 0f 00 00       	call   15110 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   14159:	90                   	nop
   1415a:	c9                   	leave
   1415b:	c3                   	ret

000000000001415c <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   1415c:	55                   	push   %rbp
   1415d:	48 89 e5             	mov    %rsp,%rbp
   14160:	48 83 ec 10          	sub    $0x10,%rsp
   14164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14168:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   1416c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14170:	48 89 c7             	mov    %rax,%rdi
   14173:	e8 d5 0f 00 00       	call   1514d <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   14178:	90                   	nop
   14179:	c9                   	leave
   1417a:	c3                   	ret
   1417b:	90                   	nop

000000000001417c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1417c:	55                   	push   %rbp
   1417d:	48 89 e5             	mov    %rsp,%rbp
   14180:	48 83 ec 10          	sub    $0x10,%rsp
   14184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   14188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1418c:	48 89 c7             	mov    %rax,%rdi
   1418f:	e8 0a 10 00 00       	call   1519e <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14194:	48 89 c7             	mov    %rax,%rdi
   14197:	e8 bf 0f 00 00       	call   1515b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   1419c:	c9                   	leave
   1419d:	c3                   	ret

000000000001419e <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1419e:	55                   	push   %rbp
   1419f:	48 89 e5             	mov    %rsp,%rbp
   141a2:	48 83 ec 20          	sub    $0x20,%rsp
   141a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   141ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   141b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   141b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141ba:	48 89 d6             	mov    %rdx,%rsi
   141bd:	48 89 c7             	mov    %rax,%rdi
   141c0:	e8 e7 0f 00 00       	call   151ac <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   141c5:	c9                   	leave
   141c6:	c3                   	ret
   141c7:	90                   	nop

00000000000141c8 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   141c8:	55                   	push   %rbp
   141c9:	48 89 e5             	mov    %rsp,%rbp
   141cc:	53                   	push   %rbx
   141cd:	48 83 ec 38          	sub    $0x38,%rsp
   141d1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   141d5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   141d9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   141dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141e1:	48 89 c7             	mov    %rax,%rdi
   141e4:	e8 93 ff ff ff       	call   1417c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   141e9:	48 89 c3             	mov    %rax,%rbx
   141ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141f0:	48 89 c7             	mov    %rax,%rdi
   141f3:	e8 20 d6 ff ff       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   141f8:	48 29 c3             	sub    %rax,%rbx
   141fb:	48 89 da             	mov    %rbx,%rdx
   141fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14202:	48 39 c2             	cmp    %rax,%rdx
   14205:	0f 92 c0             	setb   %al
   14208:	84 c0                	test   %al,%al
   1420a:	74 0c                	je     14218 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1420c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14210:	48 89 c7             	mov    %rax,%rdi
   14213:	e8 78 ff fe ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   14218:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1421c:	48 89 c7             	mov    %rax,%rdi
   1421f:	e8 f4 d5 ff ff       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14224:	48 89 c3             	mov    %rax,%rbx
   14227:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1422b:	48 89 c7             	mov    %rax,%rdi
   1422e:	e8 e5 d5 ff ff       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14233:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14237:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1423b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1423f:	48 89 d6             	mov    %rdx,%rsi
   14242:	48 89 c7             	mov    %rax,%rdi
   14245:	e8 47 07 00 00       	call   14991 <_ZSt3maxImERKT_S2_S2_>
   1424a:	48 8b 00             	mov    (%rax),%rax
   1424d:	48 01 d8             	add    %rbx,%rax
   14250:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   14254:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14258:	48 89 c7             	mov    %rax,%rdi
   1425b:	e8 b8 d5 ff ff       	call   11818 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14260:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   14264:	72 12                	jb     14278 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   14266:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1426a:	48 89 c7             	mov    %rax,%rdi
   1426d:	e8 0a ff ff ff       	call   1417c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   14272:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   14276:	73 0e                	jae    14286 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   14278:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1427c:	48 89 c7             	mov    %rax,%rdi
   1427f:	e8 f8 fe ff ff       	call   1417c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   14284:	eb 04                	jmp    1428a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   14286:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1428a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1428e:	c9                   	leave
   1428f:	c3                   	ret

0000000000014290 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   14290:	55                   	push   %rbp
   14291:	48 89 e5             	mov    %rsp,%rbp
   14294:	48 83 ec 10          	sub    $0x10,%rsp
   14298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1429c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   142a0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   142a5:	74 15                	je     142bc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   142a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   142af:	48 89 d6             	mov    %rdx,%rsi
   142b2:	48 89 c7             	mov    %rax,%rdi
   142b5:	e8 1b 0f 00 00       	call   151d5 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   142ba:	eb 05                	jmp    142c1 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   142bc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   142c1:	c9                   	leave
   142c2:	c3                   	ret

00000000000142c3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   142c3:	55                   	push   %rbp
   142c4:	48 89 e5             	mov    %rsp,%rbp
   142c7:	48 83 ec 20          	sub    $0x20,%rsp
   142cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   142d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   142d7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   142db:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   142df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   142e3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   142e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142eb:	48 89 c7             	mov    %rax,%rdi
   142ee:	e8 0c 0f 00 00       	call   151ff <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   142f3:	c9                   	leave
   142f4:	c3                   	ret
   142f5:	90                   	nop

00000000000142f6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   142f6:	55                   	push   %rbp
   142f7:	48 89 e5             	mov    %rsp,%rbp
   142fa:	48 83 ec 10          	sub    $0x10,%rsp
   142fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14302:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   14306:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1430a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1430e:	48 89 d6             	mov    %rdx,%rsi
   14311:	48 89 c7             	mov    %rax,%rdi
   14314:	e8 49 0f 00 00       	call   15262 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   14319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1431d:	48 89 c7             	mov    %rax,%rdi
   14320:	e8 63 0f 00 00       	call   15288 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   14325:	90                   	nop
   14326:	c9                   	leave
   14327:	c3                   	ret

0000000000014328 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   14328:	55                   	push   %rbp
   14329:	48 89 e5             	mov    %rsp,%rbp
   1432c:	48 83 ec 20          	sub    $0x20,%rsp
   14330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14334:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14338:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1433c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14341:	74 17                	je     1435a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   14343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14347:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1434b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1434f:	48 89 ce             	mov    %rcx,%rsi
   14352:	48 89 c7             	mov    %rax,%rdi
   14355:	e8 5c 0f 00 00       	call   152b6 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   1435a:	90                   	nop
   1435b:	c9                   	leave
   1435c:	c3                   	ret
   1435d:	90                   	nop

000000000001435e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   1435e:	55                   	push   %rbp
   1435f:	48 89 e5             	mov    %rsp,%rbp
   14362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1436a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1436e:	5d                   	pop    %rbp
   1436f:	c3                   	ret

0000000000014370 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   14370:	55                   	push   %rbp
   14371:	48 89 e5             	mov    %rsp,%rbp
   14374:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   14378:	90                   	nop
   14379:	5d                   	pop    %rbp
   1437a:	c3                   	ret

000000000001437b <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1437b:	55                   	push   %rbp
   1437c:	48 89 e5             	mov    %rsp,%rbp
   1437f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14383:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   14387:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1438b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1438f:	48 c1 f8 04          	sar    $0x4,%rax
   14393:	48 89 c2             	mov    %rax,%rdx
   14396:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1439d:	e3 38 8e 
   143a0:	48 0f af c2          	imul   %rdx,%rax
    }
   143a4:	5d                   	pop    %rbp
   143a5:	c3                   	ret

00000000000143a6 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   143a6:	55                   	push   %rbp
   143a7:	48 89 e5             	mov    %rsp,%rbp
   143aa:	53                   	push   %rbx
   143ab:	48 83 ec 28          	sub    $0x28,%rsp
   143af:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   143b3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   143b7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   143bb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   143bf:	48 89 d6             	mov    %rdx,%rsi
   143c2:	48 89 c7             	mov    %rax,%rdi
   143c5:	e8 98 0e 00 00       	call   15262 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   143ca:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   143ce:	48 89 c7             	mov    %rax,%rdi
   143d1:	e8 0e 0f 00 00       	call   152e4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   143d6:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   143da:	0f 92 c3             	setb   %bl
   143dd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   143e1:	48 89 c7             	mov    %rax,%rdi
   143e4:	e8 9b d1 ff ff       	call   11584 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   143e9:	84 db                	test   %bl,%bl
   143eb:	74 0f                	je     143fc <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   143ed:	48 8d 05 64 69 00 00 	lea    0x6964(%rip),%rax        # 1ad58 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x278>
   143f4:	48 89 c7             	mov    %rax,%rdi
   143f7:	e8 94 fd fe ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   143fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   14400:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14404:	c9                   	leave
   14405:	c3                   	ret

0000000000014406 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   14406:	55                   	push   %rbp
   14407:	48 89 e5             	mov    %rsp,%rbp
   1440a:	48 83 ec 10          	sub    $0x10,%rsp
   1440e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14412:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   14416:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1441b:	74 15                	je     14432 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   1441d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14421:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14425:	48 89 d6             	mov    %rdx,%rsi
   14428:	48 89 c7             	mov    %rax,%rdi
   1442b:	e8 f6 0e 00 00       	call   15326 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   14430:	eb 05                	jmp    14437 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   14432:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   14437:	c9                   	leave
   14438:	c3                   	ret

0000000000014439 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   14439:	55                   	push   %rbp
   1443a:	48 89 e5             	mov    %rsp,%rbp
   1443d:	48 83 ec 20          	sub    $0x20,%rsp
   14441:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14445:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14449:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1444d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   14451:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14455:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14459:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1445d:	48 89 ce             	mov    %rcx,%rsi
   14460:	48 89 c7             	mov    %rax,%rdi
   14463:	e8 e8 0e 00 00       	call   15350 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   14468:	c9                   	leave
   14469:	c3                   	ret

000000000001446a <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1446a:	55                   	push   %rbp
   1446b:	48 89 e5             	mov    %rsp,%rbp
   1446e:	48 83 ec 10          	sub    $0x10,%rsp
   14472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14476:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1447a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1447e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14482:	48 89 d6             	mov    %rdx,%rsi
   14485:	48 89 c7             	mov    %rax,%rdi
   14488:	e8 f8 0e 00 00       	call   15385 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   1448d:	90                   	nop
   1448e:	c9                   	leave
   1448f:	c3                   	ret

0000000000014490 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   14490:	55                   	push   %rbp
   14491:	48 89 e5             	mov    %rsp,%rbp
   14494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14498:	90                   	nop
   14499:	5d                   	pop    %rbp
   1449a:	c3                   	ret
   1449b:	90                   	nop

000000000001449c <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1449c:	55                   	push   %rbp
   1449d:	48 89 e5             	mov    %rsp,%rbp
   144a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144a4:	90                   	nop
   144a5:	5d                   	pop    %rbp
   144a6:	c3                   	ret

00000000000144a7 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   144a7:	55                   	push   %rbp
   144a8:	48 89 e5             	mov    %rsp,%rbp
   144ab:	53                   	push   %rbx
   144ac:	48 83 ec 28          	sub    $0x28,%rsp
   144b0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   144b4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   144b8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   144bc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   144c0:	48 89 d6             	mov    %rdx,%rsi
   144c3:	48 89 c7             	mov    %rax,%rdi
   144c6:	e8 ff 00 00 00       	call   145ca <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   144cb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   144cf:	48 89 c7             	mov    %rax,%rdi
   144d2:	e8 bd 0e 00 00       	call   15394 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   144d7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   144db:	0f 92 c3             	setb   %bl
   144de:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   144e2:	48 89 c7             	mov    %rax,%rdi
   144e5:	e8 d4 e8 ff ff       	call   12dbe <_ZNSaIP12VkPipeline_TED1Ev>
   144ea:	84 db                	test   %bl,%bl
   144ec:	74 0f                	je     144fd <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   144ee:	48 8d 05 63 68 00 00 	lea    0x6863(%rip),%rax        # 1ad58 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x278>
   144f5:	48 89 c7             	mov    %rax,%rdi
   144f8:	e8 93 fc fe ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   144fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   14501:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14505:	c9                   	leave
   14506:	c3                   	ret
   14507:	90                   	nop

0000000000014508 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   14508:	55                   	push   %rbp
   14509:	48 89 e5             	mov    %rsp,%rbp
   1450c:	53                   	push   %rbx
   1450d:	48 83 ec 28          	sub    $0x28,%rsp
   14511:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14515:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14519:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   1451d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14521:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14525:	48 89 d6             	mov    %rdx,%rsi
   14528:	48 89 c7             	mov    %rax,%rdi
   1452b:	e8 a6 0e 00 00       	call   153d6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   14530:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14538:	48 89 d6             	mov    %rdx,%rsi
   1453b:	48 89 c7             	mov    %rax,%rdi
   1453e:	e8 c5 0e 00 00       	call   15408 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   14543:	eb 1a                	jmp    1455f <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   14545:	48 89 c3             	mov    %rax,%rbx
   14548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1454c:	48 89 c7             	mov    %rax,%rdi
   1454f:	e8 18 d1 ff ff       	call   1166c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   14554:	48 89 d8             	mov    %rbx,%rax
   14557:	48 89 c7             	mov    %rax,%rdi
   1455a:	e8 d1 01 ff ff       	call   4730 <_Unwind_Resume@plt>
   1455f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14563:	c9                   	leave
   14564:	c3                   	ret
   14565:	90                   	nop

0000000000014566 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   14566:	55                   	push   %rbp
   14567:	48 89 e5             	mov    %rsp,%rbp
   1456a:	48 83 ec 10          	sub    $0x10,%rsp
   1456e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14572:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   14576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1457a:	48 89 c7             	mov    %rax,%rdi
   1457d:	e8 64 e9 ff ff       	call   12ee6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14582:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   14585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14589:	48 8b 00             	mov    (%rax),%rax
   1458c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14590:	48 89 ce             	mov    %rcx,%rsi
   14593:	48 89 c7             	mov    %rax,%rdi
   14596:	e8 c3 0e 00 00       	call   1545e <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   1459b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1459f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   145a3:	90                   	nop
   145a4:	c9                   	leave
   145a5:	c3                   	ret

00000000000145a6 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   145a6:	55                   	push   %rbp
   145a7:	48 89 e5             	mov    %rsp,%rbp
   145aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   145b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   145b6:	5d                   	pop    %rbp
   145b7:	c3                   	ret

00000000000145b8 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   145b8:	55                   	push   %rbp
   145b9:	48 89 e5             	mov    %rsp,%rbp
   145bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   145c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   145c8:	5d                   	pop    %rbp
   145c9:	c3                   	ret

00000000000145ca <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   145ca:	55                   	push   %rbp
   145cb:	48 89 e5             	mov    %rsp,%rbp
   145ce:	48 83 ec 10          	sub    $0x10,%rsp
   145d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   145da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   145de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145e2:	48 89 d6             	mov    %rdx,%rsi
   145e5:	48 89 c7             	mov    %rax,%rdi
   145e8:	e8 9b 0e 00 00       	call   15488 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   145ed:	90                   	nop
   145ee:	c9                   	leave
   145ef:	c3                   	ret

00000000000145f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   145f0:	55                   	push   %rbp
   145f1:	48 89 e5             	mov    %rsp,%rbp
   145f4:	48 83 ec 20          	sub    $0x20,%rsp
   145f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14600:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   14604:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14609:	74 17                	je     14622 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1460b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1460f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14613:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14617:	48 89 ce             	mov    %rcx,%rsi
   1461a:	48 89 c7             	mov    %rax,%rdi
   1461d:	e8 75 0e 00 00       	call   15497 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   14622:	90                   	nop
   14623:	c9                   	leave
   14624:	c3                   	ret

0000000000014625 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   14625:	55                   	push   %rbp
   14626:	48 89 e5             	mov    %rsp,%rbp
   14629:	48 83 ec 10          	sub    $0x10,%rsp
   1462d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14631:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   14635:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1463d:	48 89 d6             	mov    %rdx,%rsi
   14640:	48 89 c7             	mov    %rax,%rdi
   14643:	e8 7d 0e 00 00       	call   154c5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   14648:	90                   	nop
   14649:	c9                   	leave
   1464a:	c3                   	ret
   1464b:	90                   	nop

000000000001464c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1464c:	55                   	push   %rbp
   1464d:	48 89 e5             	mov    %rsp,%rbp
   14650:	48 83 ec 10          	sub    $0x10,%rsp
   14654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   14658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1465c:	48 89 c7             	mov    %rax,%rdi
   1465f:	e8 b2 0e 00 00       	call   15516 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14664:	48 89 c7             	mov    %rax,%rdi
   14667:	e8 68 0e 00 00       	call   154d4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   1466c:	c9                   	leave
   1466d:	c3                   	ret

000000000001466e <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1466e:	55                   	push   %rbp
   1466f:	48 89 e5             	mov    %rsp,%rbp
   14672:	48 83 ec 20          	sub    $0x20,%rsp
   14676:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1467a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1467e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   14682:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1468a:	48 89 d6             	mov    %rdx,%rsi
   1468d:	48 89 c7             	mov    %rax,%rdi
   14690:	e8 8f 0e 00 00       	call   15524 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   14695:	c9                   	leave
   14696:	c3                   	ret
   14697:	90                   	nop

0000000000014698 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   14698:	55                   	push   %rbp
   14699:	48 89 e5             	mov    %rsp,%rbp
   1469c:	53                   	push   %rbx
   1469d:	48 83 ec 38          	sub    $0x38,%rsp
   146a1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   146a5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   146a9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   146ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146b1:	48 89 c7             	mov    %rax,%rdi
   146b4:	e8 93 ff ff ff       	call   1464c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   146b9:	48 89 c3             	mov    %rax,%rbx
   146bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146c0:	48 89 c7             	mov    %rax,%rdi
   146c3:	e8 56 e8 ff ff       	call   12f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   146c8:	48 29 c3             	sub    %rax,%rbx
   146cb:	48 89 da             	mov    %rbx,%rdx
   146ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   146d2:	48 39 c2             	cmp    %rax,%rdx
   146d5:	0f 92 c0             	setb   %al
   146d8:	84 c0                	test   %al,%al
   146da:	74 0c                	je     146e8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   146dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146e0:	48 89 c7             	mov    %rax,%rdi
   146e3:	e8 a8 fa fe ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   146e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146ec:	48 89 c7             	mov    %rax,%rdi
   146ef:	e8 2a e8 ff ff       	call   12f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   146f4:	48 89 c3             	mov    %rax,%rbx
   146f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146fb:	48 89 c7             	mov    %rax,%rdi
   146fe:	e8 1b e8 ff ff       	call   12f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   14703:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14707:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1470b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1470f:	48 89 d6             	mov    %rdx,%rsi
   14712:	48 89 c7             	mov    %rax,%rdi
   14715:	e8 77 02 00 00       	call   14991 <_ZSt3maxImERKT_S2_S2_>
   1471a:	48 8b 00             	mov    (%rax),%rax
   1471d:	48 01 d8             	add    %rbx,%rax
   14720:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   14724:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14728:	48 89 c7             	mov    %rax,%rdi
   1472b:	e8 ee e7 ff ff       	call   12f1e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   14730:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   14734:	72 12                	jb     14748 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   14736:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1473a:	48 89 c7             	mov    %rax,%rdi
   1473d:	e8 0a ff ff ff       	call   1464c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   14742:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   14746:	73 0e                	jae    14756 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   14748:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1474c:	48 89 c7             	mov    %rax,%rdi
   1474f:	e8 f8 fe ff ff       	call   1464c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   14754:	eb 04                	jmp    1475a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   14756:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1475a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1475e:	c9                   	leave
   1475f:	c3                   	ret

0000000000014760 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   14760:	55                   	push   %rbp
   14761:	48 89 e5             	mov    %rsp,%rbp
   14764:	48 83 ec 10          	sub    $0x10,%rsp
   14768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1476c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   14770:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14775:	74 15                	je     1478c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   14777:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1477b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1477f:	48 89 d6             	mov    %rdx,%rsi
   14782:	48 89 c7             	mov    %rax,%rdi
   14785:	e8 c3 0d 00 00       	call   1554d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   1478a:	eb 05                	jmp    14791 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   1478c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   14791:	c9                   	leave
   14792:	c3                   	ret

0000000000014793 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   14793:	55                   	push   %rbp
   14794:	48 89 e5             	mov    %rsp,%rbp
   14797:	48 83 ec 20          	sub    $0x20,%rsp
   1479b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1479f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   147a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   147a7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   147ab:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   147af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   147b3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   147b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147bb:	48 89 c7             	mov    %rax,%rdi
   147be:	e8 b4 0d 00 00       	call   15577 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   147c3:	c9                   	leave
   147c4:	c3                   	ret
   147c5:	90                   	nop

00000000000147c6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   147c6:	55                   	push   %rbp
   147c7:	48 89 e5             	mov    %rsp,%rbp
   147ca:	48 83 ec 10          	sub    $0x10,%rsp
   147ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   147d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   147d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   147da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147de:	48 89 d6             	mov    %rdx,%rsi
   147e1:	48 89 c7             	mov    %rax,%rdi
   147e4:	e8 f1 0d 00 00       	call   155da <_ZNSaIP13VkImageView_TEC1ERKS1_>
   147e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147ed:	48 89 c7             	mov    %rax,%rdi
   147f0:	e8 67 eb ff ff       	call   1335c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   147f5:	90                   	nop
   147f6:	c9                   	leave
   147f7:	c3                   	ret

00000000000147f8 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   147f8:	55                   	push   %rbp
   147f9:	48 89 e5             	mov    %rsp,%rbp
   147fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14804:	48 8b 40 08          	mov    0x8(%rax),%rax
   14808:	5d                   	pop    %rbp
   14809:	c3                   	ret

000000000001480a <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1480a:	55                   	push   %rbp
   1480b:	48 89 e5             	mov    %rsp,%rbp
   1480e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   14812:	90                   	nop
   14813:	5d                   	pop    %rbp
   14814:	c3                   	ret

0000000000014815 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   14815:	55                   	push   %rbp
   14816:	48 89 e5             	mov    %rsp,%rbp
   14819:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1481d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   14821:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14825:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   14829:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1482d:	5d                   	pop    %rbp
   1482e:	c3                   	ret

000000000001482f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1482f:	55                   	push   %rbp
   14830:	48 89 e5             	mov    %rsp,%rbp
   14833:	53                   	push   %rbx
   14834:	48 83 ec 28          	sub    $0x28,%rsp
   14838:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1483c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   14840:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14844:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14848:	48 89 d6             	mov    %rdx,%rsi
   1484b:	48 89 c7             	mov    %rax,%rdi
   1484e:	e8 87 0d 00 00       	call   155da <_ZNSaIP13VkImageView_TEC1ERKS1_>
   14853:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14857:	48 89 c7             	mov    %rax,%rdi
   1485a:	e8 fc 08 00 00       	call   1515b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   1485f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   14863:	0f 92 c3             	setb   %bl
   14866:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1486a:	48 89 c7             	mov    %rax,%rdi
   1486d:	e8 6c d0 ff ff       	call   118de <_ZNSaIP13VkImageView_TED1Ev>
   14872:	84 db                	test   %bl,%bl
   14874:	74 0f                	je     14885 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   14876:	48 8d 05 db 64 00 00 	lea    0x64db(%rip),%rax        # 1ad58 <_ZZN9VulkanApp3runEvE11sec_to_mics+0x278>
   1487d:	48 89 c7             	mov    %rax,%rdi
   14880:	e8 0b f9 fe ff       	call   4190 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   14885:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   14889:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1488d:	c9                   	leave
   1488e:	c3                   	ret

000000000001488f <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1488f:	55                   	push   %rbp
   14890:	48 89 e5             	mov    %rsp,%rbp
   14893:	48 83 ec 20          	sub    $0x20,%rsp
   14897:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1489b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1489f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   148a3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   148a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   148ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   148af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148b3:	48 89 ce             	mov    %rcx,%rsi
   148b6:	48 89 c7             	mov    %rax,%rdi
   148b9:	e8 42 0d 00 00       	call   15600 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   148be:	c9                   	leave
   148bf:	c3                   	ret

00000000000148c0 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   148c0:	55                   	push   %rbp
   148c1:	48 89 e5             	mov    %rsp,%rbp
   148c4:	48 83 ec 10          	sub    $0x10,%rsp
   148c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   148d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   148d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148d8:	48 89 d6             	mov    %rdx,%rsi
   148db:	48 89 c7             	mov    %rax,%rdi
   148de:	e8 52 0d 00 00       	call   15635 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   148e3:	90                   	nop
   148e4:	c9                   	leave
   148e5:	c3                   	ret

00000000000148e6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   148e6:	55                   	push   %rbp
   148e7:	48 89 e5             	mov    %rsp,%rbp
   148ea:	48 83 ec 20          	sub    $0x20,%rsp
   148ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   148f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   148fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   148fe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14906:	48 89 ce             	mov    %rcx,%rsi
   14909:	48 89 c7             	mov    %rax,%rdi
   1490c:	e8 33 0d 00 00       	call   15644 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   14911:	90                   	nop
   14912:	c9                   	leave
   14913:	c3                   	ret

0000000000014914 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14914:	55                   	push   %rbp
   14915:	48 89 e5             	mov    %rsp,%rbp
   14918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1491c:	90                   	nop
   1491d:	5d                   	pop    %rbp
   1491e:	c3                   	ret

000000000001491f <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1491f:	55                   	push   %rbp
   14920:	48 89 e5             	mov    %rsp,%rbp
   14923:	48 83 ec 20          	sub    $0x20,%rsp
   14927:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1492b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1492f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   14933:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14937:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1493b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1493f:	48 89 ce             	mov    %rcx,%rsi
   14942:	48 89 c7             	mov    %rax,%rdi
   14945:	e8 2c 0d 00 00       	call   15676 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   1494a:	90                   	nop
   1494b:	c9                   	leave
   1494c:	c3                   	ret

000000000001494d <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1494d:	55                   	push   %rbp
   1494e:	48 89 e5             	mov    %rsp,%rbp
   14951:	48 83 ec 10          	sub    $0x10,%rsp
   14955:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14959:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1495d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14965:	48 89 d6             	mov    %rdx,%rsi
   14968:	48 89 c7             	mov    %rax,%rdi
   1496b:	e8 37 0d 00 00       	call   156a7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   14970:	90                   	nop
   14971:	c9                   	leave
   14972:	c3                   	ret
   14973:	90                   	nop

0000000000014974 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   14974:	55                   	push   %rbp
   14975:	48 89 e5             	mov    %rsp,%rbp
   14978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1497c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   14980:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14984:	48 8b 10             	mov    (%rax),%rdx
   14987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1498b:	48 89 10             	mov    %rdx,(%rax)
   1498e:	90                   	nop
   1498f:	5d                   	pop    %rbp
   14990:	c3                   	ret

0000000000014991 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   14991:	55                   	push   %rbp
   14992:	48 89 e5             	mov    %rsp,%rbp
   14995:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14999:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   1499d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149a1:	48 8b 10             	mov    (%rax),%rdx
   149a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149a8:	48 8b 00             	mov    (%rax),%rax
   149ab:	48 39 c2             	cmp    %rax,%rdx
   149ae:	73 06                	jae    149b6 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   149b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149b4:	eb 04                	jmp    149ba <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   149b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   149ba:	5d                   	pop    %rbp
   149bb:	c3                   	ret

00000000000149bc <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   149bc:	55                   	push   %rbp
   149bd:	48 89 e5             	mov    %rsp,%rbp
   149c0:	48 83 ec 30          	sub    $0x30,%rsp
   149c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   149c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   149cc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   149d0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   149d4:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   149d8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   149dc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   149e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149e4:	48 89 ce             	mov    %rcx,%rsi
   149e7:	48 89 c7             	mov    %rax,%rdi
   149ea:	e8 c7 0c 00 00       	call   156b6 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   149ef:	c9                   	leave
   149f0:	c3                   	ret

00000000000149f1 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   149f1:	55                   	push   %rbp
   149f2:	48 89 e5             	mov    %rsp,%rbp
   149f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   149fd:	90                   	nop
   149fe:	5d                   	pop    %rbp
   149ff:	c3                   	ret

0000000000014a00 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   14a00:	55                   	push   %rbp
   14a01:	48 89 e5             	mov    %rsp,%rbp
   14a04:	48 83 ec 10          	sub    $0x10,%rsp
   14a08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   14a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a10:	48 89 c7             	mov    %rax,%rdi
   14a13:	e8 cc 0c 00 00       	call   156e4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   14a18:	48 89 c7             	mov    %rax,%rdi
   14a1b:	e8 43 55 ff ff       	call   9f63 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   14a20:	c9                   	leave
   14a21:	c3                   	ret

0000000000014a22 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14a22:	55                   	push   %rbp
   14a23:	48 89 e5             	mov    %rsp,%rbp
   14a26:	41 54                	push   %r12
   14a28:	53                   	push   %rbx
   14a29:	48 83 ec 20          	sub    $0x20,%rsp
   14a2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14a31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14a35:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14a39:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   14a3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a41:	48 89 c7             	mov    %rax,%rdi
   14a44:	e8 a9 0c 00 00       	call   156f2 <_ZSt12__niter_baseIPPKcET_S3_>
   14a49:	49 89 c4             	mov    %rax,%r12
   14a4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14a50:	48 89 c7             	mov    %rax,%rdi
   14a53:	e8 9a 0c 00 00       	call   156f2 <_ZSt12__niter_baseIPPKcET_S3_>
   14a58:	48 89 c3             	mov    %rax,%rbx
   14a5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a5f:	48 89 c7             	mov    %rax,%rdi
   14a62:	e8 8b 0c 00 00       	call   156f2 <_ZSt12__niter_baseIPPKcET_S3_>
   14a67:	48 89 c7             	mov    %rax,%rdi
   14a6a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14a6e:	48 89 c1             	mov    %rax,%rcx
   14a71:	4c 89 e2             	mov    %r12,%rdx
   14a74:	48 89 de             	mov    %rbx,%rsi
   14a77:	e8 84 0c 00 00       	call   15700 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   14a7c:	48 83 c4 20          	add    $0x20,%rsp
   14a80:	5b                   	pop    %rbx
   14a81:	41 5c                	pop    %r12
   14a83:	5d                   	pop    %rbp
   14a84:	c3                   	ret
   14a85:	90                   	nop

0000000000014a86 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   14a86:	55                   	push   %rbp
   14a87:	48 89 e5             	mov    %rsp,%rbp
   14a8a:	48 83 ec 10          	sub    $0x10,%rsp
   14a8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   14a96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a9a:	48 89 c7             	mov    %rax,%rdi
   14a9d:	e8 84 d8 ff ff       	call   12326 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   14aa2:	48 89 c1             	mov    %rax,%rcx
   14aa5:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   14aa9:	48 8b 01             	mov    (%rcx),%rax
   14aac:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   14ab0:	48 89 06             	mov    %rax,(%rsi)
   14ab3:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   14ab7:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   14abb:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   14abf:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   14ac3:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   14ac7:	90                   	nop
   14ac8:	c9                   	leave
   14ac9:	c3                   	ret

0000000000014aca <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   14aca:	55                   	push   %rbp
   14acb:	48 89 e5             	mov    %rsp,%rbp
   14ace:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   14ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ad6:	5d                   	pop    %rbp
   14ad7:	c3                   	ret

0000000000014ad8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14ad8:	55                   	push   %rbp
   14ad9:	48 89 e5             	mov    %rsp,%rbp
   14adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14ae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ae4:	5d                   	pop    %rbp
   14ae5:	c3                   	ret

0000000000014ae6 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   14ae6:	55                   	push   %rbp
   14ae7:	48 89 e5             	mov    %rsp,%rbp
   14aea:	53                   	push   %rbx
   14aeb:	48 83 ec 18          	sub    $0x18,%rsp
   14aef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14af3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   14af7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14afb:	48 89 c6             	mov    %rax,%rsi
   14afe:	bf 1c 00 00 00       	mov    $0x1c,%edi
   14b03:	e8 c1 04 ff ff       	call   4fc9 <_ZnwmPv>
   14b08:	48 89 c3             	mov    %rax,%rbx
   14b0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14b0f:	48 89 c7             	mov    %rax,%rdi
   14b12:	e8 c1 ff ff ff       	call   14ad8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   14b17:	48 89 c1             	mov    %rax,%rcx
   14b1a:	48 8b 01             	mov    (%rcx),%rax
   14b1d:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   14b21:	48 89 03             	mov    %rax,(%rbx)
   14b24:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   14b28:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   14b2c:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   14b30:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   14b34:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   14b38:	90                   	nop
   14b39:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14b3d:	c9                   	leave
   14b3e:	c3                   	ret
   14b3f:	90                   	nop

0000000000014b40 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   14b40:	55                   	push   %rbp
   14b41:	48 89 e5             	mov    %rsp,%rbp
   14b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   14b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b4c:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   14b50:	90                   	nop
   14b51:	5d                   	pop    %rbp
   14b52:	c3                   	ret
   14b53:	90                   	nop

0000000000014b54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   14b54:	55                   	push   %rbp
   14b55:	48 89 e5             	mov    %rsp,%rbp
   14b58:	53                   	push   %rbx
   14b59:	48 83 ec 18          	sub    $0x18,%rsp
   14b5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14b61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   14b65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14b69:	48 89 c7             	mov    %rax,%rdi
   14b6c:	e8 cd ee ff ff       	call   13a3e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   14b71:	48 89 c3             	mov    %rax,%rbx
   14b74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b78:	48 89 c7             	mov    %rax,%rdi
   14b7b:	e8 e4 0b 00 00       	call   15764 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   14b80:	48 89 de             	mov    %rbx,%rsi
   14b83:	48 89 c7             	mov    %rax,%rdi
   14b86:	e8 e7 0b 00 00       	call   15772 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   14b8b:	90                   	nop
   14b8c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14b90:	c9                   	leave
   14b91:	c3                   	ret

0000000000014b92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   14b92:	55                   	push   %rbp
   14b93:	48 89 e5             	mov    %rsp,%rbp
   14b96:	48 83 ec 10          	sub    $0x10,%rsp
   14b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14b9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   14ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ba6:	48 89 c7             	mov    %rax,%rdi
   14ba9:	e8 b6 0b 00 00       	call   15764 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   14bae:	48 89 c1             	mov    %rax,%rcx
   14bb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14bb5:	ba 01 00 00 00       	mov    $0x1,%edx
   14bba:	48 89 c6             	mov    %rax,%rsi
   14bbd:	48 89 cf             	mov    %rcx,%rdi
   14bc0:	e8 d3 0b 00 00       	call   15798 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   14bc5:	90                   	nop
   14bc6:	c9                   	leave
   14bc7:	c3                   	ret

0000000000014bc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   14bc8:	55                   	push   %rbp
   14bc9:	48 89 e5             	mov    %rsp,%rbp
   14bcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   14bd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bd4:	48 83 c0 08          	add    $0x8,%rax
   14bd8:	5d                   	pop    %rbp
   14bd9:	c3                   	ret

0000000000014bda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14bda:	55                   	push   %rbp
   14bdb:	48 89 e5             	mov    %rsp,%rbp
   14bde:	53                   	push   %rbx
   14bdf:	48 83 ec 38          	sub    $0x38,%rsp
   14be3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14be7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14beb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14bef:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   14bf3:	eb 56                	jmp    14c4b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   14bf5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   14bf9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14bfd:	48 89 c7             	mov    %rax,%rdi
   14c00:	e8 e7 03 00 00       	call   14fec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   14c05:	48 89 c1             	mov    %rax,%rcx
   14c08:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14c0c:	48 89 c2             	mov    %rax,%rdx
   14c0f:	48 89 ce             	mov    %rcx,%rsi
   14c12:	48 89 df             	mov    %rbx,%rdi
   14c15:	e8 bc d9 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14c1a:	83 f0 01             	xor    $0x1,%eax
   14c1d:	84 c0                	test   %al,%al
   14c1f:	74 1a                	je     14c3b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   14c21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14c25:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   14c29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14c2d:	48 89 c7             	mov    %rax,%rdi
   14c30:	e8 28 ed ff ff       	call   1395d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   14c35:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14c39:	eb 10                	jmp    14c4b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   14c3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14c3f:	48 89 c7             	mov    %rax,%rdi
   14c42:	e8 04 ed ff ff       	call   1394b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   14c47:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   14c4b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   14c50:	75 a3                	jne    14bf5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   14c52:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14c56:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   14c5a:	48 89 d6             	mov    %rdx,%rsi
   14c5d:	48 89 c7             	mov    %rax,%rdi
   14c60:	e8 ff f3 ff ff       	call   14064 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14c65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   14c69:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14c6d:	c9                   	leave
   14c6e:	c3                   	ret
   14c6f:	90                   	nop

0000000000014c70 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   14c70:	55                   	push   %rbp
   14c71:	48 89 e5             	mov    %rsp,%rbp
   14c74:	48 83 ec 10          	sub    $0x10,%rsp
   14c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   14c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c80:	48 89 c7             	mov    %rax,%rdi
   14c83:	e8 3e 0b 00 00       	call   157c6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   14c88:	c9                   	leave
   14c89:	c3                   	ret

0000000000014c8a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   14c8a:	55                   	push   %rbp
   14c8b:	48 89 e5             	mov    %rsp,%rbp
   14c8e:	53                   	push   %rbx
   14c8f:	48 83 ec 18          	sub    $0x18,%rsp
   14c93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   14c9b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   14c9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14ca3:	48 89 c7             	mov    %rax,%rdi
   14ca6:	e8 d9 ed ff ff       	call   13a84 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   14cab:	48 89 c6             	mov    %rax,%rsi
   14cae:	48 89 df             	mov    %rbx,%rdi
   14cb1:	e8 1e 0b 00 00       	call   157d4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   14cb6:	90                   	nop
   14cb7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14cbb:	c9                   	leave
   14cbc:	c3                   	ret
   14cbd:	90                   	nop

0000000000014cbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   14cbe:	55                   	push   %rbp
   14cbf:	48 89 e5             	mov    %rsp,%rbp
   14cc2:	41 54                	push   %r12
   14cc4:	53                   	push   %rbx
   14cc5:	48 83 ec 30          	sub    $0x30,%rsp
   14cc9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14ccd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14cd1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14cd5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   14cd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14cdd:	48 89 c7             	mov    %rax,%rdi
   14ce0:	e8 15 0b 00 00       	call   157fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   14ce5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   14ce9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14ced:	48 89 c7             	mov    %rax,%rdi
   14cf0:	e8 ec ed ff ff       	call   13ae1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14cf5:	49 89 c4             	mov    %rax,%r12
   14cf8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14cfc:	48 89 c7             	mov    %rax,%rdi
   14cff:	e8 cf ed ff ff       	call   13ad3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   14d04:	48 89 c3             	mov    %rax,%rbx
   14d07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d0b:	48 89 c7             	mov    %rax,%rdi
   14d0e:	e8 b2 ed ff ff       	call   13ac5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   14d13:	48 89 c2             	mov    %rax,%rdx
   14d16:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   14d1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d1e:	4d 89 e0             	mov    %r12,%r8
   14d21:	48 89 d9             	mov    %rbx,%rcx
   14d24:	48 89 c7             	mov    %rax,%rdi
   14d27:	e8 f6 0a 00 00       	call   15822 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   14d2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14d30:	48 83 c4 30          	add    $0x30,%rsp
   14d34:	5b                   	pop    %rbx
   14d35:	41 5c                	pop    %r12
   14d37:	5d                   	pop    %rbp
   14d38:	c3                   	ret
   14d39:	90                   	nop

0000000000014d3a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   14d3a:	55                   	push   %rbp
   14d3b:	48 89 e5             	mov    %rsp,%rbp
   14d3e:	48 83 ec 20          	sub    $0x20,%rsp
   14d42:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   14d46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d4a:	48 8b 10             	mov    (%rax),%rdx
   14d4d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14d51:	48 89 d6             	mov    %rdx,%rsi
   14d54:	48 89 c7             	mov    %rax,%rdi
   14d57:	e8 08 f3 ff ff       	call   14064 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d60:	c9                   	leave
   14d61:	c3                   	ret

0000000000014d62 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14d62:	55                   	push   %rbp
   14d63:	48 89 e5             	mov    %rsp,%rbp
   14d66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   14d6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d6e:	48 8b 40 28          	mov    0x28(%rax),%rax
   14d72:	5d                   	pop    %rbp
   14d73:	c3                   	ret

0000000000014d74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   14d74:	55                   	push   %rbp
   14d75:	48 89 e5             	mov    %rsp,%rbp
   14d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   14d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d80:	48 83 c0 20          	add    $0x20,%rax
   14d84:	5d                   	pop    %rbp
   14d85:	c3                   	ret

0000000000014d86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   14d86:	55                   	push   %rbp
   14d87:	48 89 e5             	mov    %rsp,%rbp
   14d8a:	48 83 ec 10          	sub    $0x10,%rsp
   14d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   14d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d96:	48 89 c7             	mov    %rax,%rdi
   14d99:	e8 4e 02 00 00       	call   14fec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   14d9e:	c9                   	leave
   14d9f:	c3                   	ret

0000000000014da0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   14da0:	55                   	push   %rbp
   14da1:	48 89 e5             	mov    %rsp,%rbp
   14da4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14da8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14dac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   14db0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14db4:	48 8b 10             	mov    (%rax),%rdx
   14db7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dbb:	48 89 10             	mov    %rdx,(%rax)
   14dbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14dc2:	48 8b 10             	mov    (%rax),%rdx
   14dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dc9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14dcd:	90                   	nop
   14dce:	5d                   	pop    %rbp
   14dcf:	c3                   	ret

0000000000014dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14dd0:	55                   	push   %rbp
   14dd1:	48 89 e5             	mov    %rsp,%rbp
   14dd4:	53                   	push   %rbx
   14dd5:	48 83 ec 78          	sub    $0x78,%rsp
   14dd9:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   14ddd:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   14de1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14de5:	48 89 c7             	mov    %rax,%rdi
   14de8:	e8 07 d7 ff ff       	call   124f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   14ded:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   14df1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14df5:	48 89 c7             	mov    %rax,%rdi
   14df8:	e8 cb fd ff ff       	call   14bc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   14dfd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   14e01:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   14e05:	eb 51                	jmp    14e58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   14e07:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14e0b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   14e0f:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   14e13:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14e17:	48 89 c7             	mov    %rax,%rdi
   14e1a:	e8 cd 01 00 00       	call   14fec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   14e1f:	48 89 c2             	mov    %rax,%rdx
   14e22:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14e26:	48 89 c6             	mov    %rax,%rsi
   14e29:	48 89 df             	mov    %rbx,%rdi
   14e2c:	e8 a5 d7 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14e31:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   14e34:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   14e38:	74 0e                	je     14e48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   14e3a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14e3e:	48 89 c7             	mov    %rax,%rdi
   14e41:	e8 17 eb ff ff       	call   1395d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   14e46:	eb 0c                	jmp    14e54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   14e48:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14e4c:	48 89 c7             	mov    %rax,%rdi
   14e4f:	e8 f7 ea ff ff       	call   1394b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   14e54:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   14e58:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14e5c:	48 85 c0             	test   %rax,%rax
   14e5f:	75 a6                	jne    14e07 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   14e61:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   14e65:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   14e69:	48 89 d6             	mov    %rdx,%rsi
   14e6c:	48 89 c7             	mov    %rax,%rdi
   14e6f:	e8 f0 f1 ff ff       	call   14064 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   14e74:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   14e78:	74 54                	je     14ece <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   14e7a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14e7e:	48 89 c7             	mov    %rax,%rdi
   14e81:	e8 6e 0a 00 00       	call   158f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   14e86:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14e8a:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   14e8e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   14e92:	48 89 d6             	mov    %rdx,%rsi
   14e95:	48 89 c7             	mov    %rax,%rdi
   14e98:	e8 dd d6 ff ff       	call   1257a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   14e9d:	84 c0                	test   %al,%al
   14e9f:	74 21                	je     14ec2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   14ea1:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   14ea5:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   14ea9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   14ead:	48 89 ce             	mov    %rcx,%rsi
   14eb0:	48 89 c7             	mov    %rax,%rdi
   14eb3:	e8 66 0a 00 00       	call   1591e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   14eb8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14ebc:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   14ec0:	eb 7d                	jmp    14f3f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   14ec2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   14ec6:	48 89 c7             	mov    %rax,%rdi
   14ec9:	e8 ce 00 00 00       	call   14f9c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   14ece:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   14ed2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14ed6:	48 89 c7             	mov    %rax,%rdi
   14ed9:	e8 a8 fe ff ff       	call   14d86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   14ede:	48 89 c1             	mov    %rax,%rcx
   14ee1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14ee5:	48 89 c2             	mov    %rax,%rdx
   14ee8:	48 89 ce             	mov    %rcx,%rsi
   14eeb:	48 89 df             	mov    %rbx,%rdi
   14eee:	e8 e3 d6 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14ef3:	84 c0                	test   %al,%al
   14ef5:	74 21                	je     14f18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   14ef7:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   14efb:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   14eff:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14f03:	48 89 ce             	mov    %rcx,%rsi
   14f06:	48 89 c7             	mov    %rax,%rdi
   14f09:	e8 10 0a 00 00       	call   1591e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   14f0e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14f12:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14f16:	eb 27                	jmp    14f3f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   14f18:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   14f1f:	00 
   14f20:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   14f24:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   14f28:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14f2c:	48 89 ce             	mov    %rcx,%rsi
   14f2f:	48 89 c7             	mov    %rax,%rdi
   14f32:	e8 69 fe ff ff       	call   14da0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14f37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14f3b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   14f3f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14f43:	c9                   	leave
   14f44:	c3                   	ret
   14f45:	90                   	nop

0000000000014f46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   14f46:	55                   	push   %rbp
   14f47:	48 89 e5             	mov    %rsp,%rbp
   14f4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   14f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f52:	48 83 c0 18          	add    $0x18,%rax
   14f56:	5d                   	pop    %rbp
   14f57:	c3                   	ret

0000000000014f58 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   14f58:	55                   	push   %rbp
   14f59:	48 89 e5             	mov    %rsp,%rbp
   14f5c:	48 83 ec 20          	sub    $0x20,%rsp
   14f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14f68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   14f6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f70:	48 89 c7             	mov    %rax,%rdi
   14f73:	e8 ea 09 00 00       	call   15962 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14f78:	48 8b 10             	mov    (%rax),%rdx
   14f7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f7f:	48 89 10             	mov    %rdx,(%rax)
   14f82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f86:	48 89 c7             	mov    %rax,%rdi
   14f89:	e8 d4 09 00 00       	call   15962 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14f8e:	48 8b 10             	mov    (%rax),%rdx
   14f91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f95:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14f99:	90                   	nop
   14f9a:	c9                   	leave
   14f9b:	c3                   	ret

0000000000014f9c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   14f9c:	55                   	push   %rbp
   14f9d:	48 89 e5             	mov    %rsp,%rbp
   14fa0:	48 83 ec 10          	sub    $0x10,%rsp
   14fa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   14fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fac:	48 8b 00             	mov    (%rax),%rax
   14faf:	48 89 c7             	mov    %rax,%rdi
   14fb2:	e8 49 f4 fe ff       	call   4400 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   14fb7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14fbb:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   14fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14fc2:	c9                   	leave
   14fc3:	c3                   	ret

0000000000014fc4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   14fc4:	55                   	push   %rbp
   14fc5:	48 89 e5             	mov    %rsp,%rbp
   14fc8:	48 83 ec 10          	sub    $0x10,%rsp
   14fcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   14fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fd4:	48 8b 00             	mov    (%rax),%rax
   14fd7:	48 89 c7             	mov    %rax,%rdi
   14fda:	e8 41 f2 fe ff       	call   4220 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   14fdf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14fe3:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   14fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14fea:	c9                   	leave
   14feb:	c3                   	ret

0000000000014fec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   14fec:	55                   	push   %rbp
   14fed:	48 89 e5             	mov    %rsp,%rbp
   14ff0:	48 83 ec 20          	sub    $0x20,%rsp
   14ff4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   14ff8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ffc:	48 89 c7             	mov    %rax,%rdi
   14fff:	e8 6c 09 00 00       	call   15970 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   15004:	48 89 c2             	mov    %rax,%rdx
   15007:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1500b:	48 89 d6             	mov    %rdx,%rsi
   1500e:	48 89 c7             	mov    %rax,%rdi
   15011:	e8 78 09 00 00       	call   1598e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   15016:	c9                   	leave
   15017:	c3                   	ret

0000000000015018 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   15018:	55                   	push   %rbp
   15019:	48 89 e5             	mov    %rsp,%rbp
   1501c:	41 54                	push   %r12
   1501e:	53                   	push   %rbx
   1501f:	48 83 ec 30          	sub    $0x30,%rsp
   15023:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15027:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1502b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1502f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   15033:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15038:	75 43                	jne    1507d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   1503a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1503e:	48 89 c7             	mov    %rax,%rdi
   15041:	e8 82 fb ff ff       	call   14bc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   15046:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1504a:	74 31                	je     1507d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   1504c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15050:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15054:	48 89 c7             	mov    %rax,%rdi
   15057:	e8 2a fd ff ff       	call   14d86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1505c:	49 89 c4             	mov    %rax,%r12
   1505f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15063:	48 89 c7             	mov    %rax,%rdi
   15066:	e8 81 ff ff ff       	call   14fec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1506b:	4c 89 e2             	mov    %r12,%rdx
   1506e:	48 89 c6             	mov    %rax,%rsi
   15071:	48 89 df             	mov    %rbx,%rdi
   15074:	e8 5d d5 ff ff       	call   125d6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15079:	84 c0                	test   %al,%al
   1507b:	74 07                	je     15084 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   1507d:	b8 01 00 00 00       	mov    $0x1,%eax
   15082:	eb 05                	jmp    15089 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   15084:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   15089:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   1508c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15090:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   15094:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   15098:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1509c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   150a0:	89 c7                	mov    %eax,%edi
   150a2:	e8 b9 ef fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   150a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   150ab:	48 8b 40 28          	mov    0x28(%rax),%rax
   150af:	48 8d 50 01          	lea    0x1(%rax),%rdx
   150b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   150b7:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   150bb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   150bf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   150c3:	48 89 d6             	mov    %rdx,%rsi
   150c6:	48 89 c7             	mov    %rax,%rdi
   150c9:	e8 96 ef ff ff       	call   14064 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   150ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   150d2:	48 83 c4 30          	add    $0x30,%rsp
   150d6:	5b                   	pop    %rbx
   150d7:	41 5c                	pop    %r12
   150d9:	5d                   	pop    %rbp
   150da:	c3                   	ret
   150db:	90                   	nop

00000000000150dc <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   150dc:	55                   	push   %rbp
   150dd:	48 89 e5             	mov    %rsp,%rbp
   150e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   150e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150e8:	5d                   	pop    %rbp
   150e9:	c3                   	ret

00000000000150ea <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   150ea:	55                   	push   %rbp
   150eb:	48 89 e5             	mov    %rsp,%rbp
   150ee:	48 83 ec 10          	sub    $0x10,%rsp
   150f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   150fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15102:	48 89 d6             	mov    %rdx,%rsi
   15105:	48 89 c7             	mov    %rax,%rdi
   15108:	e8 eb 56 ff ff       	call   a7f8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   1510d:	90                   	nop
   1510e:	c9                   	leave
   1510f:	c3                   	ret

0000000000015110 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   15110:	55                   	push   %rbp
   15111:	48 89 e5             	mov    %rsp,%rbp
   15114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15118:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   1511c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15120:	48 8b 10             	mov    (%rax),%rdx
   15123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15127:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   1512a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1512e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15136:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   1513a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1513e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15146:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   1514a:	90                   	nop
   1514b:	5d                   	pop    %rbp
   1514c:	c3                   	ret

000000000001514d <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1514d:	55                   	push   %rbp
   1514e:	48 89 e5             	mov    %rsp,%rbp
   15151:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   15155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15159:	5d                   	pop    %rbp
   1515a:	c3                   	ret

000000000001515b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1515b:	55                   	push   %rbp
   1515c:	48 89 e5             	mov    %rsp,%rbp
   1515f:	48 83 ec 20          	sub    $0x20,%rsp
   15163:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   15167:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1516e:	ff ff 0f 
   15171:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   15175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15179:	48 89 c7             	mov    %rax,%rdi
   1517c:	e8 1f 08 00 00       	call   159a0 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   15181:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   15185:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15189:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1518d:	48 89 d6             	mov    %rdx,%rsi
   15190:	48 89 c7             	mov    %rax,%rdi
   15193:	e8 ff 02 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
   15198:	48 8b 00             	mov    (%rax),%rax
      }
   1519b:	c9                   	leave
   1519c:	c3                   	ret
   1519d:	90                   	nop

000000000001519e <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1519e:	55                   	push   %rbp
   1519f:	48 89 e5             	mov    %rsp,%rbp
   151a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   151a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151aa:	5d                   	pop    %rbp
   151ab:	c3                   	ret

00000000000151ac <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   151ac:	55                   	push   %rbp
   151ad:	48 89 e5             	mov    %rsp,%rbp
   151b0:	48 83 ec 20          	sub    $0x20,%rsp
   151b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   151b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   151bc:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   151c0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   151c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151c8:	48 89 d6             	mov    %rdx,%rsi
   151cb:	48 89 c7             	mov    %rax,%rdi
   151ce:	e8 e7 07 00 00       	call   159ba <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   151d3:	c9                   	leave
   151d4:	c3                   	ret

00000000000151d5 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   151d5:	55                   	push   %rbp
   151d6:	48 89 e5             	mov    %rsp,%rbp
   151d9:	48 83 ec 10          	sub    $0x10,%rsp
   151dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   151e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   151e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151ed:	ba 00 00 00 00       	mov    $0x0,%edx
   151f2:	48 89 ce             	mov    %rcx,%rsi
   151f5:	48 89 c7             	mov    %rax,%rdi
   151f8:	e8 1b 08 00 00       	call   15a18 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   151fd:	c9                   	leave
   151fe:	c3                   	ret

00000000000151ff <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   151ff:	55                   	push   %rbp
   15200:	48 89 e5             	mov    %rsp,%rbp
   15203:	41 54                	push   %r12
   15205:	53                   	push   %rbx
   15206:	48 83 ec 20          	sub    $0x20,%rsp
   1520a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1520e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15212:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15216:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1521a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1521e:	48 89 c7             	mov    %rax,%rdi
   15221:	e8 53 08 00 00       	call   15a79 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   15226:	49 89 c4             	mov    %rax,%r12
   15229:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1522d:	48 89 c7             	mov    %rax,%rdi
   15230:	e8 44 08 00 00       	call   15a79 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   15235:	48 89 c3             	mov    %rax,%rbx
   15238:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1523c:	48 89 c7             	mov    %rax,%rdi
   1523f:	e8 35 08 00 00       	call   15a79 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   15244:	48 89 c7             	mov    %rax,%rdi
   15247:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1524b:	48 89 c1             	mov    %rax,%rcx
   1524e:	4c 89 e2             	mov    %r12,%rdx
   15251:	48 89 de             	mov    %rbx,%rsi
   15254:	e8 2e 08 00 00       	call   15a87 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   15259:	48 83 c4 20          	add    $0x20,%rsp
   1525d:	5b                   	pop    %rbx
   1525e:	41 5c                	pop    %r12
   15260:	5d                   	pop    %rbp
   15261:	c3                   	ret

0000000000015262 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   15262:	55                   	push   %rbp
   15263:	48 89 e5             	mov    %rsp,%rbp
   15266:	48 83 ec 10          	sub    $0x10,%rsp
   1526a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1526e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   15272:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1527a:	48 89 d6             	mov    %rdx,%rsi
   1527d:	48 89 c7             	mov    %rax,%rdi
   15280:	e8 65 08 00 00       	call   15aea <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   15285:	90                   	nop
   15286:	c9                   	leave
   15287:	c3                   	ret

0000000000015288 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   15288:	55                   	push   %rbp
   15289:	48 89 e5             	mov    %rsp,%rbp
   1528c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   15290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15294:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1529b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1529f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   152a6:	00 
   152a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152ab:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   152b2:	00 
	{ }
   152b3:	90                   	nop
   152b4:	5d                   	pop    %rbp
   152b5:	c3                   	ret

00000000000152b6 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   152b6:	55                   	push   %rbp
   152b7:	48 89 e5             	mov    %rsp,%rbp
   152ba:	48 83 ec 20          	sub    $0x20,%rsp
   152be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   152c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   152c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   152ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   152ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   152d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152d6:	48 89 ce             	mov    %rcx,%rsi
   152d9:	48 89 c7             	mov    %rax,%rdi
   152dc:	e8 19 08 00 00       	call   15afa <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   152e1:	90                   	nop
   152e2:	c9                   	leave
   152e3:	c3                   	ret

00000000000152e4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   152e4:	55                   	push   %rbp
   152e5:	48 89 e5             	mov    %rsp,%rbp
   152e8:	48 83 ec 20          	sub    $0x20,%rsp
   152ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   152f0:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   152f7:	8e e3 00 
   152fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   152fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15302:	48 89 c7             	mov    %rax,%rdi
   15305:	e8 2a 08 00 00       	call   15b34 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   1530a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1530e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15312:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15316:	48 89 d6             	mov    %rdx,%rsi
   15319:	48 89 c7             	mov    %rax,%rdi
   1531c:	e8 76 01 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
   15321:	48 8b 00             	mov    (%rax),%rax
      }
   15324:	c9                   	leave
   15325:	c3                   	ret

0000000000015326 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   15326:	55                   	push   %rbp
   15327:	48 89 e5             	mov    %rsp,%rbp
   1532a:	48 83 ec 10          	sub    $0x10,%rsp
   1532e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15332:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15336:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1533a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1533e:	ba 00 00 00 00       	mov    $0x0,%edx
   15343:	48 89 ce             	mov    %rcx,%rsi
   15346:	48 89 c7             	mov    %rax,%rdi
   15349:	e8 00 08 00 00       	call   15b4e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   1534e:	c9                   	leave
   1534f:	c3                   	ret

0000000000015350 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   15350:	55                   	push   %rbp
   15351:	48 89 e5             	mov    %rsp,%rbp
   15354:	48 83 ec 30          	sub    $0x30,%rsp
   15358:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1535c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15360:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   15364:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   15368:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1536c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15370:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   15374:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15378:	48 89 ce             	mov    %rcx,%rsi
   1537b:	48 89 c7             	mov    %rax,%rdi
   1537e:	e8 36 08 00 00       	call   15bb9 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   15383:	c9                   	leave
   15384:	c3                   	ret

0000000000015385 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   15385:	55                   	push   %rbp
   15386:	48 89 e5             	mov    %rsp,%rbp
   15389:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1538d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15391:	90                   	nop
   15392:	5d                   	pop    %rbp
   15393:	c3                   	ret

0000000000015394 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   15394:	55                   	push   %rbp
   15395:	48 89 e5             	mov    %rsp,%rbp
   15398:	48 83 ec 20          	sub    $0x20,%rsp
   1539c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   153a0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   153a7:	ff ff 0f 
   153aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   153ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153b2:	48 89 c7             	mov    %rax,%rdi
   153b5:	e8 2c 08 00 00       	call   15be6 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   153ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   153be:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   153c2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   153c6:	48 89 d6             	mov    %rdx,%rsi
   153c9:	48 89 c7             	mov    %rax,%rdi
   153cc:	e8 c6 00 ff ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
   153d1:	48 8b 00             	mov    (%rax),%rax
      }
   153d4:	c9                   	leave
   153d5:	c3                   	ret

00000000000153d6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   153d6:	55                   	push   %rbp
   153d7:	48 89 e5             	mov    %rsp,%rbp
   153da:	48 83 ec 10          	sub    $0x10,%rsp
   153de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   153e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   153ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ee:	48 89 d6             	mov    %rdx,%rsi
   153f1:	48 89 c7             	mov    %rax,%rdi
   153f4:	e8 d1 f1 ff ff       	call   145ca <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   153f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153fd:	48 89 c7             	mov    %rax,%rdi
   15400:	e8 fb 07 00 00       	call   15c00 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   15405:	90                   	nop
   15406:	c9                   	leave
   15407:	c3                   	ret

0000000000015408 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   15408:	55                   	push   %rbp
   15409:	48 89 e5             	mov    %rsp,%rbp
   1540c:	48 83 ec 10          	sub    $0x10,%rsp
   15410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15414:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   15418:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1541c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15420:	48 89 d6             	mov    %rdx,%rsi
   15423:	48 89 c7             	mov    %rax,%rdi
   15426:	e8 03 08 00 00       	call   15c2e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   1542b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1542f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   15432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15436:	48 8b 10             	mov    (%rax),%rdx
   15439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1543d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   15441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15445:	48 8b 00             	mov    (%rax),%rax
   15448:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1544c:	48 c1 e2 03          	shl    $0x3,%rdx
   15450:	48 01 c2             	add    %rax,%rdx
   15453:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15457:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1545b:	90                   	nop
   1545c:	c9                   	leave
   1545d:	c3                   	ret

000000000001545e <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1545e:	55                   	push   %rbp
   1545f:	48 89 e5             	mov    %rsp,%rbp
   15462:	48 83 ec 20          	sub    $0x20,%rsp
   15466:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1546a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1546e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   15472:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15476:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1547a:	48 89 d6             	mov    %rdx,%rsi
   1547d:	48 89 c7             	mov    %rax,%rdi
   15480:	e8 dc 07 00 00       	call   15c61 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   15485:	c9                   	leave
   15486:	c3                   	ret
   15487:	90                   	nop

0000000000015488 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   15488:	55                   	push   %rbp
   15489:	48 89 e5             	mov    %rsp,%rbp
   1548c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15490:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15494:	90                   	nop
   15495:	5d                   	pop    %rbp
   15496:	c3                   	ret

0000000000015497 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   15497:	55                   	push   %rbp
   15498:	48 89 e5             	mov    %rsp,%rbp
   1549b:	48 83 ec 20          	sub    $0x20,%rsp
   1549f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   154a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   154ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   154af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   154b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154b7:	48 89 ce             	mov    %rcx,%rsi
   154ba:	48 89 c7             	mov    %rax,%rdi
   154bd:	e8 c8 07 00 00       	call   15c8a <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   154c2:	90                   	nop
   154c3:	c9                   	leave
   154c4:	c3                   	ret

00000000000154c5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   154c5:	55                   	push   %rbp
   154c6:	48 89 e5             	mov    %rsp,%rbp
   154c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   154d1:	90                   	nop
   154d2:	5d                   	pop    %rbp
   154d3:	c3                   	ret

00000000000154d4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   154d4:	55                   	push   %rbp
   154d5:	48 89 e5             	mov    %rsp,%rbp
   154d8:	48 83 ec 20          	sub    $0x20,%rsp
   154dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   154e0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   154e7:	ff ff 0f 
   154ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   154ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154f2:	48 89 c7             	mov    %rax,%rdi
   154f5:	e8 c1 07 00 00       	call   15cbb <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   154fa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   154fe:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15502:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15506:	48 89 d6             	mov    %rdx,%rsi
   15509:	48 89 c7             	mov    %rax,%rdi
   1550c:	e8 86 ff fe ff       	call   5497 <_ZSt3minImERKT_S2_S2_>
   15511:	48 8b 00             	mov    (%rax),%rax
      }
   15514:	c9                   	leave
   15515:	c3                   	ret

0000000000015516 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   15516:	55                   	push   %rbp
   15517:	48 89 e5             	mov    %rsp,%rbp
   1551a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1551e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15522:	5d                   	pop    %rbp
   15523:	c3                   	ret

0000000000015524 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   15524:	55                   	push   %rbp
   15525:	48 89 e5             	mov    %rsp,%rbp
   15528:	48 83 ec 20          	sub    $0x20,%rsp
   1552c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15530:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   15534:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   15538:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1553c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15540:	48 89 d6             	mov    %rdx,%rsi
   15543:	48 89 c7             	mov    %rax,%rdi
   15546:	e8 8a 07 00 00       	call   15cd5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   1554b:	c9                   	leave
   1554c:	c3                   	ret

000000000001554d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1554d:	55                   	push   %rbp
   1554e:	48 89 e5             	mov    %rsp,%rbp
   15551:	48 83 ec 10          	sub    $0x10,%rsp
   15555:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15559:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1555d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15565:	ba 00 00 00 00       	mov    $0x0,%edx
   1556a:	48 89 ce             	mov    %rcx,%rsi
   1556d:	48 89 c7             	mov    %rax,%rdi
   15570:	e8 bd 07 00 00       	call   15d32 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   15575:	c9                   	leave
   15576:	c3                   	ret

0000000000015577 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   15577:	55                   	push   %rbp
   15578:	48 89 e5             	mov    %rsp,%rbp
   1557b:	41 54                	push   %r12
   1557d:	53                   	push   %rbx
   1557e:	48 83 ec 20          	sub    $0x20,%rsp
   15582:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15586:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1558a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1558e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   15592:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15596:	48 89 c7             	mov    %rax,%rdi
   15599:	e8 f5 07 00 00       	call   15d93 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   1559e:	49 89 c4             	mov    %rax,%r12
   155a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   155a5:	48 89 c7             	mov    %rax,%rdi
   155a8:	e8 e6 07 00 00       	call   15d93 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   155ad:	48 89 c3             	mov    %rax,%rbx
   155b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155b4:	48 89 c7             	mov    %rax,%rdi
   155b7:	e8 d7 07 00 00       	call   15d93 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   155bc:	48 89 c7             	mov    %rax,%rdi
   155bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   155c3:	48 89 c1             	mov    %rax,%rcx
   155c6:	4c 89 e2             	mov    %r12,%rdx
   155c9:	48 89 de             	mov    %rbx,%rsi
   155cc:	e8 d0 07 00 00       	call   15da1 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   155d1:	48 83 c4 20          	add    $0x20,%rsp
   155d5:	5b                   	pop    %rbx
   155d6:	41 5c                	pop    %r12
   155d8:	5d                   	pop    %rbp
   155d9:	c3                   	ret

00000000000155da <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   155da:	55                   	push   %rbp
   155db:	48 89 e5             	mov    %rsp,%rbp
   155de:	48 83 ec 10          	sub    $0x10,%rsp
   155e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   155e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   155ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   155ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155f2:	48 89 d6             	mov    %rdx,%rsi
   155f5:	48 89 c7             	mov    %rax,%rdi
   155f8:	e8 07 08 00 00       	call   15e04 <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   155fd:	90                   	nop
   155fe:	c9                   	leave
   155ff:	c3                   	ret

0000000000015600 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   15600:	55                   	push   %rbp
   15601:	48 89 e5             	mov    %rsp,%rbp
   15604:	48 83 ec 30          	sub    $0x30,%rsp
   15608:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1560c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15610:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   15614:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   15618:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1561c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15620:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   15624:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15628:	48 89 ce             	mov    %rcx,%rsi
   1562b:	48 89 c7             	mov    %rax,%rdi
   1562e:	e8 e0 07 00 00       	call   15e13 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   15633:	c9                   	leave
   15634:	c3                   	ret

0000000000015635 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   15635:	55                   	push   %rbp
   15636:	48 89 e5             	mov    %rsp,%rbp
   15639:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1563d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15641:	90                   	nop
   15642:	5d                   	pop    %rbp
   15643:	c3                   	ret

0000000000015644 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15644:	55                   	push   %rbp
   15645:	48 89 e5             	mov    %rsp,%rbp
   15648:	48 83 ec 20          	sub    $0x20,%rsp
   1564c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15650:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15654:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15658:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1565c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15663:	00 
   15664:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15668:	48 89 d6             	mov    %rdx,%rsi
   1566b:	48 89 c7             	mov    %rax,%rdi
   1566e:	e8 4d ed fe ff       	call   43c0 <_ZdlPvm@plt>
      }
   15673:	c9                   	leave
   15674:	c3                   	ret
   15675:	90                   	nop

0000000000015676 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15676:	55                   	push   %rbp
   15677:	48 89 e5             	mov    %rsp,%rbp
   1567a:	48 83 ec 20          	sub    $0x20,%rsp
   1567e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15682:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15686:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1568a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1568e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15695:	00 
   15696:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1569a:	48 89 d6             	mov    %rdx,%rsi
   1569d:	48 89 c7             	mov    %rax,%rdi
   156a0:	e8 1b ed fe ff       	call   43c0 <_ZdlPvm@plt>
      }
   156a5:	c9                   	leave
   156a6:	c3                   	ret

00000000000156a7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   156a7:	55                   	push   %rbp
   156a8:	48 89 e5             	mov    %rsp,%rbp
   156ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   156b3:	90                   	nop
   156b4:	5d                   	pop    %rbp
   156b5:	c3                   	ret

00000000000156b6 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   156b6:	55                   	push   %rbp
   156b7:	48 89 e5             	mov    %rsp,%rbp
   156ba:	48 83 ec 20          	sub    $0x20,%rsp
   156be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   156c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   156ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   156ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   156d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156d6:	48 89 ce             	mov    %rcx,%rsi
   156d9:	48 89 c7             	mov    %rax,%rdi
   156dc:	e8 5f 07 00 00       	call   15e40 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   156e1:	c9                   	leave
   156e2:	c3                   	ret
   156e3:	90                   	nop

00000000000156e4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   156e4:	55                   	push   %rbp
   156e5:	48 89 e5             	mov    %rsp,%rbp
   156e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   156ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156f0:	5d                   	pop    %rbp
   156f1:	c3                   	ret

00000000000156f2 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   156f2:	55                   	push   %rbp
   156f3:	48 89 e5             	mov    %rsp,%rbp
   156f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   156fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156fe:	5d                   	pop    %rbp
   156ff:	c3                   	ret

0000000000015700 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   15700:	55                   	push   %rbp
   15701:	48 89 e5             	mov    %rsp,%rbp
   15704:	48 83 ec 30          	sub    $0x30,%rsp
   15708:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1570c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15710:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15714:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15718:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1571c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15720:	48 c1 f8 03          	sar    $0x3,%rax
   15724:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15728:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1572d:	7e 1f                	jle    1574e <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1572f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15733:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1573a:	00 
   1573b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1573f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15743:	48 89 ce             	mov    %rcx,%rsi
   15746:	48 89 c7             	mov    %rax,%rdi
   15749:	e8 52 ef fe ff       	call   46a0 <memmove@plt>
      return __result + __count;
   1574e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15752:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15759:	00 
   1575a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1575e:	48 01 d0             	add    %rdx,%rax
    }
   15761:	c9                   	leave
   15762:	c3                   	ret
   15763:	90                   	nop

0000000000015764 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   15764:	55                   	push   %rbp
   15765:	48 89 e5             	mov    %rsp,%rbp
   15768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1576c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15770:	5d                   	pop    %rbp
   15771:	c3                   	ret

0000000000015772 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   15772:	55                   	push   %rbp
   15773:	48 89 e5             	mov    %rsp,%rbp
   15776:	48 83 ec 10          	sub    $0x10,%rsp
   1577a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1577e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   15782:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1578a:	48 89 d6             	mov    %rdx,%rsi
   1578d:	48 89 c7             	mov    %rax,%rdi
   15790:	e8 13 07 00 00       	call   15ea8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   15795:	90                   	nop
   15796:	c9                   	leave
   15797:	c3                   	ret

0000000000015798 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   15798:	55                   	push   %rbp
   15799:	48 89 e5             	mov    %rsp,%rbp
   1579c:	48 83 ec 20          	sub    $0x20,%rsp
   157a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   157ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157b0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   157b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157b8:	48 89 ce             	mov    %rcx,%rsi
   157bb:	48 89 c7             	mov    %rax,%rdi
   157be:	e8 05 07 00 00       	call   15ec8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   157c3:	90                   	nop
   157c4:	c9                   	leave
   157c5:	c3                   	ret

00000000000157c6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   157c6:	55                   	push   %rbp
   157c7:	48 89 e5             	mov    %rsp,%rbp
   157ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   157ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157d2:	5d                   	pop    %rbp
   157d3:	c3                   	ret

00000000000157d4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   157d4:	55                   	push   %rbp
   157d5:	48 89 e5             	mov    %rsp,%rbp
   157d8:	48 83 ec 10          	sub    $0x10,%rsp
   157dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   157e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157e8:	48 89 c7             	mov    %rax,%rdi
   157eb:	e8 94 e2 ff ff       	call   13a84 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   157f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   157f4:	48 89 02             	mov    %rax,(%rdx)
   157f7:	90                   	nop
   157f8:	c9                   	leave
   157f9:	c3                   	ret

00000000000157fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   157fa:	55                   	push   %rbp
   157fb:	48 89 e5             	mov    %rsp,%rbp
   157fe:	48 83 ec 10          	sub    $0x10,%rsp
   15802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   15806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1580a:	48 89 c7             	mov    %rax,%rdi
   1580d:	e8 52 ff ff ff       	call   15764 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   15812:	be 01 00 00 00       	mov    $0x1,%esi
   15817:	48 89 c7             	mov    %rax,%rdi
   1581a:	e8 e3 06 00 00       	call   15f02 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   1581f:	c9                   	leave
   15820:	c3                   	ret
   15821:	90                   	nop

0000000000015822 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   15822:	55                   	push   %rbp
   15823:	48 89 e5             	mov    %rsp,%rbp
   15826:	41 56                	push   %r14
   15828:	41 55                	push   %r13
   1582a:	41 54                	push   %r12
   1582c:	53                   	push   %rbx
   1582d:	48 83 ec 30          	sub    $0x30,%rsp
   15831:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15835:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15839:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1583d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   15841:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   15845:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15849:	48 89 c6             	mov    %rax,%rsi
   1584c:	bf 48 00 00 00       	mov    $0x48,%edi
   15851:	e8 73 f7 fe ff       	call   4fc9 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   15856:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1585a:	48 89 c7             	mov    %rax,%rdi
   1585d:	e8 7f e2 ff ff       	call   13ae1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   15862:	49 89 c6             	mov    %rax,%r14
   15865:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15869:	48 89 c7             	mov    %rax,%rdi
   1586c:	e8 62 e2 ff ff       	call   13ad3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   15871:	49 89 c5             	mov    %rax,%r13
   15874:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15878:	48 89 c7             	mov    %rax,%rdi
   1587b:	e8 45 e2 ff ff       	call   13ac5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   15880:	49 89 c4             	mov    %rax,%r12
   15883:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15887:	48 89 c7             	mov    %rax,%rdi
   1588a:	e8 af e1 ff ff       	call   13a3e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1588f:	48 89 c3             	mov    %rax,%rbx
   15892:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15896:	48 89 c7             	mov    %rax,%rdi
   15899:	e8 c6 fe ff ff       	call   15764 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1589e:	4d 89 f0             	mov    %r14,%r8
   158a1:	4c 89 e9             	mov    %r13,%rcx
   158a4:	4c 89 e2             	mov    %r12,%rdx
   158a7:	48 89 de             	mov    %rbx,%rsi
   158aa:	48 89 c7             	mov    %rax,%rdi
   158ad:	e8 7a 06 00 00       	call   15f2c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   158b2:	eb 33                	jmp    158e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   158b4:	48 89 c7             	mov    %rax,%rdi
   158b7:	e8 74 e8 fe ff       	call   4130 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   158bc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   158c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   158c4:	48 89 d6             	mov    %rdx,%rsi
   158c7:	48 89 c7             	mov    %rax,%rdi
   158ca:	e8 c3 f2 ff ff       	call   14b92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   158cf:	e8 3c ed fe ff       	call   4610 <__cxa_rethrow@plt>
	  __catch(...)
   158d4:	48 89 c3             	mov    %rax,%rbx
   158d7:	e8 d4 ed fe ff       	call   46b0 <__cxa_end_catch@plt>
   158dc:	48 89 d8             	mov    %rbx,%rax
   158df:	48 89 c7             	mov    %rax,%rdi
   158e2:	e8 49 ee fe ff       	call   4730 <_Unwind_Resume@plt>
	}
   158e7:	48 83 c4 30          	add    $0x30,%rsp
   158eb:	5b                   	pop    %rbx
   158ec:	41 5c                	pop    %r12
   158ee:	41 5d                	pop    %r13
   158f0:	41 5e                	pop    %r14
   158f2:	5d                   	pop    %rbp
   158f3:	c3                   	ret

00000000000158f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   158f4:	55                   	push   %rbp
   158f5:	48 89 e5             	mov    %rsp,%rbp
   158f8:	48 83 ec 20          	sub    $0x20,%rsp
   158fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   15900:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15904:	48 8b 50 18          	mov    0x18(%rax),%rdx
   15908:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1590c:	48 89 d6             	mov    %rdx,%rsi
   1590f:	48 89 c7             	mov    %rax,%rdi
   15912:	e8 4d e7 ff ff       	call   14064 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   15917:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1591b:	c9                   	leave
   1591c:	c3                   	ret
   1591d:	90                   	nop

000000000001591e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1591e:	55                   	push   %rbp
   1591f:	48 89 e5             	mov    %rsp,%rbp
   15922:	48 83 ec 20          	sub    $0x20,%rsp
   15926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1592a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1592e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   15932:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15936:	48 89 c7             	mov    %rax,%rdi
   15939:	e8 5a 06 00 00       	call   15f98 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   1593e:	48 8b 10             	mov    (%rax),%rdx
   15941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15945:	48 89 10             	mov    %rdx,(%rax)
   15948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1594c:	48 89 c7             	mov    %rax,%rdi
   1594f:	e8 0e 00 00 00       	call   15962 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   15954:	48 8b 10             	mov    (%rax),%rdx
   15957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1595b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1595f:	90                   	nop
   15960:	c9                   	leave
   15961:	c3                   	ret

0000000000015962 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15962:	55                   	push   %rbp
   15963:	48 89 e5             	mov    %rsp,%rbp
   15966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1596a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1596e:	5d                   	pop    %rbp
   1596f:	c3                   	ret

0000000000015970 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   15970:	55                   	push   %rbp
   15971:	48 89 e5             	mov    %rsp,%rbp
   15974:	48 83 ec 10          	sub    $0x10,%rsp
   15978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1597c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15980:	48 83 c0 20          	add    $0x20,%rax
   15984:	48 89 c7             	mov    %rax,%rdi
   15987:	e8 1a 06 00 00       	call   15fa6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1598c:	c9                   	leave
   1598d:	c3                   	ret

000000000001598e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   1598e:	55                   	push   %rbp
   1598f:	48 89 e5             	mov    %rsp,%rbp
   15992:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15996:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   1599a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1599e:	5d                   	pop    %rbp
   1599f:	c3                   	ret

00000000000159a0 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   159a0:	55                   	push   %rbp
   159a1:	48 89 e5             	mov    %rsp,%rbp
   159a4:	48 83 ec 10          	sub    $0x10,%rsp
   159a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   159ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159b0:	48 89 c7             	mov    %rax,%rdi
   159b3:	e8 08 06 00 00       	call   15fc0 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   159b8:	c9                   	leave
   159b9:	c3                   	ret

00000000000159ba <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   159ba:	55                   	push   %rbp
   159bb:	48 89 e5             	mov    %rsp,%rbp
   159be:	48 83 ec 20          	sub    $0x20,%rsp
   159c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   159c6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   159ca:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   159cf:	74 40                	je     15a11 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   159d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159d5:	48 89 c7             	mov    %rax,%rdi
   159d8:	e8 fd 05 00 00       	call   15fda <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   159dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   159e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159e5:	48 89 c7             	mov    %rax,%rdi
   159e8:	e8 fb 05 00 00       	call   15fe8 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   159ed:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   159f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   159f6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   159fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   159fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a02:	48 89 ce             	mov    %rcx,%rsi
   15a05:	48 89 c7             	mov    %rax,%rdi
   15a08:	e8 02 06 00 00       	call   1600f <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   15a0d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15a11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15a15:	c9                   	leave
   15a16:	c3                   	ret
   15a17:	90                   	nop

0000000000015a18 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15a18:	55                   	push   %rbp
   15a19:	48 89 e5             	mov    %rsp,%rbp
   15a1c:	48 83 ec 20          	sub    $0x20,%rsp
   15a20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15a28:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a30:	48 89 c7             	mov    %rax,%rdi
   15a33:	e8 1c 06 00 00       	call   16054 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   15a38:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15a3c:	0f 92 c0             	setb   %al
   15a3f:	0f b6 c0             	movzbl %al,%eax
   15a42:	48 85 c0             	test   %rax,%rax
   15a45:	0f 95 c0             	setne  %al
   15a48:	84 c0                	test   %al,%al
   15a4a:	74 1a                	je     15a66 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15a4c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15a53:	ff ff 1f 
   15a56:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15a5a:	73 05                	jae    15a61 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15a5c:	e8 1f e8 fe ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15a61:	e8 8a e6 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15a66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a6a:	48 c1 e0 03          	shl    $0x3,%rax
   15a6e:	48 89 c7             	mov    %rax,%rdi
   15a71:	e8 2a e9 fe ff       	call   43a0 <_Znwm@plt>
   15a76:	90                   	nop
      }
   15a77:	c9                   	leave
   15a78:	c3                   	ret

0000000000015a79 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   15a79:	55                   	push   %rbp
   15a7a:	48 89 e5             	mov    %rsp,%rbp
   15a7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a85:	5d                   	pop    %rbp
   15a86:	c3                   	ret

0000000000015a87 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   15a87:	55                   	push   %rbp
   15a88:	48 89 e5             	mov    %rsp,%rbp
   15a8b:	48 83 ec 30          	sub    $0x30,%rsp
   15a8f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15a93:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15a97:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15a9b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15a9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15aa3:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15aa7:	48 c1 f8 03          	sar    $0x3,%rax
   15aab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15aaf:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15ab4:	7e 1f                	jle    15ad5 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   15ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ac1:	00 
   15ac2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15ac6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15aca:	48 89 ce             	mov    %rcx,%rsi
   15acd:	48 89 c7             	mov    %rax,%rdi
   15ad0:	e8 cb eb fe ff       	call   46a0 <memmove@plt>
      return __result + __count;
   15ad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ad9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ae0:	00 
   15ae1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ae5:	48 01 d0             	add    %rdx,%rax
    }
   15ae8:	c9                   	leave
   15ae9:	c3                   	ret

0000000000015aea <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   15aea:	55                   	push   %rbp
   15aeb:	48 89 e5             	mov    %rsp,%rbp
   15aee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15af2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15af6:	90                   	nop
   15af7:	5d                   	pop    %rbp
   15af8:	c3                   	ret
   15af9:	90                   	nop

0000000000015afa <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15afa:	55                   	push   %rbp
   15afb:	48 89 e5             	mov    %rsp,%rbp
   15afe:	48 83 ec 20          	sub    $0x20,%rsp
   15b02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15b0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15b0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15b12:	48 89 d0             	mov    %rdx,%rax
   15b15:	48 c1 e0 03          	shl    $0x3,%rax
   15b19:	48 01 d0             	add    %rdx,%rax
   15b1c:	48 c1 e0 04          	shl    $0x4,%rax
   15b20:	48 89 c2             	mov    %rax,%rdx
   15b23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15b27:	48 89 d6             	mov    %rdx,%rsi
   15b2a:	48 89 c7             	mov    %rax,%rdi
   15b2d:	e8 8e e8 fe ff       	call   43c0 <_ZdlPvm@plt>
      }
   15b32:	c9                   	leave
   15b33:	c3                   	ret

0000000000015b34 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15b34:	55                   	push   %rbp
   15b35:	48 89 e5             	mov    %rsp,%rbp
   15b38:	48 83 ec 10          	sub    $0x10,%rsp
   15b3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b44:	48 89 c7             	mov    %rax,%rdi
   15b47:	e8 1c 05 00 00       	call   16068 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   15b4c:	c9                   	leave
   15b4d:	c3                   	ret

0000000000015b4e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15b4e:	55                   	push   %rbp
   15b4f:	48 89 e5             	mov    %rsp,%rbp
   15b52:	48 83 ec 20          	sub    $0x20,%rsp
   15b56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15b5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b66:	48 89 c7             	mov    %rax,%rdi
   15b69:	e8 14 05 00 00       	call   16082 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   15b6e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15b72:	0f 92 c0             	setb   %al
   15b75:	0f b6 c0             	movzbl %al,%eax
   15b78:	48 85 c0             	test   %rax,%rax
   15b7b:	0f 95 c0             	setne  %al
   15b7e:	84 c0                	test   %al,%al
   15b80:	74 1a                	je     15b9c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15b82:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   15b89:	1c c7 01 
   15b8c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15b90:	73 05                	jae    15b97 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15b92:	e8 e9 e6 fe ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15b97:	e8 54 e5 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15b9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15ba0:	48 89 d0             	mov    %rdx,%rax
   15ba3:	48 c1 e0 03          	shl    $0x3,%rax
   15ba7:	48 01 d0             	add    %rdx,%rax
   15baa:	48 c1 e0 04          	shl    $0x4,%rax
   15bae:	48 89 c7             	mov    %rax,%rdi
   15bb1:	e8 ea e7 fe ff       	call   43a0 <_Znwm@plt>
   15bb6:	90                   	nop
      }
   15bb7:	c9                   	leave
   15bb8:	c3                   	ret

0000000000015bb9 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   15bb9:	55                   	push   %rbp
   15bba:	48 89 e5             	mov    %rsp,%rbp
   15bbd:	48 83 ec 20          	sub    $0x20,%rsp
   15bc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15bc5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15bc9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   15bcd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15bd1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15bd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bd9:	48 89 ce             	mov    %rcx,%rsi
   15bdc:	48 89 c7             	mov    %rax,%rdi
   15bdf:	e8 b2 04 00 00       	call   16096 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   15be4:	c9                   	leave
   15be5:	c3                   	ret

0000000000015be6 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15be6:	55                   	push   %rbp
   15be7:	48 89 e5             	mov    %rsp,%rbp
   15bea:	48 83 ec 10          	sub    $0x10,%rsp
   15bee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bf6:	48 89 c7             	mov    %rax,%rdi
   15bf9:	e8 e4 04 00 00       	call   160e2 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   15bfe:	c9                   	leave
   15bff:	c3                   	ret

0000000000015c00 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   15c00:	55                   	push   %rbp
   15c01:	48 89 e5             	mov    %rsp,%rbp
   15c04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   15c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c0c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15c13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c17:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15c1e:	00 
   15c1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c23:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15c2a:	00 
	{ }
   15c2b:	90                   	nop
   15c2c:	5d                   	pop    %rbp
   15c2d:	c3                   	ret

0000000000015c2e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   15c2e:	55                   	push   %rbp
   15c2f:	48 89 e5             	mov    %rsp,%rbp
   15c32:	48 83 ec 10          	sub    $0x10,%rsp
   15c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   15c3e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15c43:	74 15                	je     15c5a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   15c45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15c4d:	48 89 d6             	mov    %rdx,%rsi
   15c50:	48 89 c7             	mov    %rax,%rdi
   15c53:	e8 a4 04 00 00       	call   160fc <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   15c58:	eb 05                	jmp    15c5f <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   15c5a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   15c5f:	c9                   	leave
   15c60:	c3                   	ret

0000000000015c61 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   15c61:	55                   	push   %rbp
   15c62:	48 89 e5             	mov    %rsp,%rbp
   15c65:	48 83 ec 20          	sub    $0x20,%rsp
   15c69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15c6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   15c71:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   15c75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15c79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c7d:	48 89 d6             	mov    %rdx,%rsi
   15c80:	48 89 c7             	mov    %rax,%rdi
   15c83:	e8 9e 04 00 00       	call   16126 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   15c88:	c9                   	leave
   15c89:	c3                   	ret

0000000000015c8a <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15c8a:	55                   	push   %rbp
   15c8b:	48 89 e5             	mov    %rsp,%rbp
   15c8e:	48 83 ec 20          	sub    $0x20,%rsp
   15c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15c9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15c9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ca2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ca9:	00 
   15caa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15cae:	48 89 d6             	mov    %rdx,%rsi
   15cb1:	48 89 c7             	mov    %rax,%rdi
   15cb4:	e8 07 e7 fe ff       	call   43c0 <_ZdlPvm@plt>
      }
   15cb9:	c9                   	leave
   15cba:	c3                   	ret

0000000000015cbb <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15cbb:	55                   	push   %rbp
   15cbc:	48 89 e5             	mov    %rsp,%rbp
   15cbf:	48 83 ec 10          	sub    $0x10,%rsp
   15cc3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ccb:	48 89 c7             	mov    %rax,%rdi
   15cce:	e8 b1 04 00 00       	call   16184 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   15cd3:	c9                   	leave
   15cd4:	c3                   	ret

0000000000015cd5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   15cd5:	55                   	push   %rbp
   15cd6:	48 89 e5             	mov    %rsp,%rbp
   15cd9:	48 83 ec 20          	sub    $0x20,%rsp
   15cdd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15ce1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   15ce5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15cea:	74 40                	je     15d2c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   15cec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15cf0:	48 89 c7             	mov    %rax,%rdi
   15cf3:	e8 a6 04 00 00       	call   1619e <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   15cf8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d00:	48 89 c7             	mov    %rax,%rdi
   15d03:	e8 a4 04 00 00       	call   161ac <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   15d08:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   15d0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d11:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15d15:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15d19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d1d:	48 89 ce             	mov    %rcx,%rsi
   15d20:	48 89 c7             	mov    %rax,%rdi
   15d23:	e8 ab 04 00 00       	call   161d3 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   15d28:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15d2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15d30:	c9                   	leave
   15d31:	c3                   	ret

0000000000015d32 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15d32:	55                   	push   %rbp
   15d33:	48 89 e5             	mov    %rsp,%rbp
   15d36:	48 83 ec 20          	sub    $0x20,%rsp
   15d3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15d42:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15d46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d4a:	48 89 c7             	mov    %rax,%rdi
   15d4d:	e8 c6 04 00 00       	call   16218 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   15d52:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15d56:	0f 92 c0             	setb   %al
   15d59:	0f b6 c0             	movzbl %al,%eax
   15d5c:	48 85 c0             	test   %rax,%rax
   15d5f:	0f 95 c0             	setne  %al
   15d62:	84 c0                	test   %al,%al
   15d64:	74 1a                	je     15d80 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15d66:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15d6d:	ff ff 1f 
   15d70:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15d74:	73 05                	jae    15d7b <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15d76:	e8 05 e5 fe ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15d7b:	e8 70 e3 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15d80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15d84:	48 c1 e0 03          	shl    $0x3,%rax
   15d88:	48 89 c7             	mov    %rax,%rdi
   15d8b:	e8 10 e6 fe ff       	call   43a0 <_Znwm@plt>
   15d90:	90                   	nop
      }
   15d91:	c9                   	leave
   15d92:	c3                   	ret

0000000000015d93 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   15d93:	55                   	push   %rbp
   15d94:	48 89 e5             	mov    %rsp,%rbp
   15d97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15d9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d9f:	5d                   	pop    %rbp
   15da0:	c3                   	ret

0000000000015da1 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   15da1:	55                   	push   %rbp
   15da2:	48 89 e5             	mov    %rsp,%rbp
   15da5:	48 83 ec 30          	sub    $0x30,%rsp
   15da9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15dad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15db1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15db5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15db9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15dbd:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15dc1:	48 c1 f8 03          	sar    $0x3,%rax
   15dc5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15dc9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15dce:	7e 1f                	jle    15def <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   15dd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dd4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ddb:	00 
   15ddc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15de0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15de4:	48 89 ce             	mov    %rcx,%rsi
   15de7:	48 89 c7             	mov    %rax,%rdi
   15dea:	e8 b1 e8 fe ff       	call   46a0 <memmove@plt>
      return __result + __count;
   15def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15df3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15dfa:	00 
   15dfb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15dff:	48 01 d0             	add    %rdx,%rax
    }
   15e02:	c9                   	leave
   15e03:	c3                   	ret

0000000000015e04 <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   15e04:	55                   	push   %rbp
   15e05:	48 89 e5             	mov    %rsp,%rbp
   15e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15e10:	90                   	nop
   15e11:	5d                   	pop    %rbp
   15e12:	c3                   	ret

0000000000015e13 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   15e13:	55                   	push   %rbp
   15e14:	48 89 e5             	mov    %rsp,%rbp
   15e17:	48 83 ec 20          	sub    $0x20,%rsp
   15e1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15e23:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   15e27:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15e2b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e33:	48 89 ce             	mov    %rcx,%rsi
   15e36:	48 89 c7             	mov    %rax,%rdi
   15e39:	e8 ee 03 00 00       	call   1622c <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   15e3e:	c9                   	leave
   15e3f:	c3                   	ret

0000000000015e40 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   15e40:	55                   	push   %rbp
   15e41:	48 89 e5             	mov    %rsp,%rbp
   15e44:	53                   	push   %rbx
   15e45:	48 83 ec 28          	sub    $0x28,%rsp
   15e49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15e4d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15e51:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   15e55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15e59:	48 89 c7             	mov    %rax,%rdi
   15e5c:	e8 16 04 00 00       	call   16277 <_ZSt12__miter_baseIPKPKcET_S4_>
   15e61:	48 89 c3             	mov    %rax,%rbx
   15e64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e68:	48 89 c7             	mov    %rax,%rdi
   15e6b:	e8 07 04 00 00       	call   16277 <_ZSt12__miter_baseIPKPKcET_S4_>
   15e70:	48 89 c1             	mov    %rax,%rcx
   15e73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e77:	48 89 c2             	mov    %rax,%rdx
   15e7a:	48 89 de             	mov    %rbx,%rsi
   15e7d:	48 89 cf             	mov    %rcx,%rdi
   15e80:	e8 00 04 00 00       	call   16285 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   15e85:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15e89:	c9                   	leave
   15e8a:	c3                   	ret
   15e8b:	90                   	nop

0000000000015e8c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   15e8c:	55                   	push   %rbp
   15e8d:	48 89 e5             	mov    %rsp,%rbp
   15e90:	48 83 ec 10          	sub    $0x10,%rsp
   15e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e9c:	48 89 c7             	mov    %rax,%rdi
   15e9f:	e8 4c e3 fe ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   15ea4:	90                   	nop
   15ea5:	c9                   	leave
   15ea6:	c3                   	ret
   15ea7:	90                   	nop

0000000000015ea8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   15ea8:	55                   	push   %rbp
   15ea9:	48 89 e5             	mov    %rsp,%rbp
   15eac:	48 83 ec 10          	sub    $0x10,%rsp
   15eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15eb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   15eb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ebc:	48 89 c7             	mov    %rax,%rdi
   15ebf:	e8 c8 ff ff ff       	call   15e8c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   15ec4:	90                   	nop
   15ec5:	c9                   	leave
   15ec6:	c3                   	ret
   15ec7:	90                   	nop

0000000000015ec8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15ec8:	55                   	push   %rbp
   15ec9:	48 89 e5             	mov    %rsp,%rbp
   15ecc:	48 83 ec 20          	sub    $0x20,%rsp
   15ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ed4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15ed8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15edc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ee0:	48 89 d0             	mov    %rdx,%rax
   15ee3:	48 c1 e0 03          	shl    $0x3,%rax
   15ee7:	48 01 d0             	add    %rdx,%rax
   15eea:	48 c1 e0 03          	shl    $0x3,%rax
   15eee:	48 89 c2             	mov    %rax,%rdx
   15ef1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ef5:	48 89 d6             	mov    %rdx,%rsi
   15ef8:	48 89 c7             	mov    %rax,%rdi
   15efb:	e8 c0 e4 fe ff       	call   43c0 <_ZdlPvm@plt>
      }
   15f00:	c9                   	leave
   15f01:	c3                   	ret

0000000000015f02 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   15f02:	55                   	push   %rbp
   15f03:	48 89 e5             	mov    %rsp,%rbp
   15f06:	48 83 ec 10          	sub    $0x10,%rsp
   15f0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15f12:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f1a:	ba 00 00 00 00       	mov    $0x0,%edx
   15f1f:	48 89 ce             	mov    %rcx,%rsi
   15f22:	48 89 c7             	mov    %rax,%rdi
   15f25:	e8 c6 03 00 00       	call   162f0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   15f2a:	c9                   	leave
   15f2b:	c3                   	ret

0000000000015f2c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   15f2c:	55                   	push   %rbp
   15f2d:	48 89 e5             	mov    %rsp,%rbp
   15f30:	41 54                	push   %r12
   15f32:	53                   	push   %rbx
   15f33:	48 83 ec 30          	sub    $0x30,%rsp
   15f37:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15f3b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15f3f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15f43:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   15f47:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   15f4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15f4f:	48 89 c7             	mov    %rax,%rdi
   15f52:	e8 8a db ff ff       	call   13ae1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   15f57:	49 89 c4             	mov    %rax,%r12
   15f5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15f5e:	48 89 c7             	mov    %rax,%rdi
   15f61:	e8 6d db ff ff       	call   13ad3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   15f66:	48 89 c3             	mov    %rax,%rbx
   15f69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f6d:	48 89 c7             	mov    %rax,%rdi
   15f70:	e8 50 db ff ff       	call   13ac5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   15f75:	48 89 c2             	mov    %rax,%rdx
   15f78:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   15f7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f80:	4d 89 e0             	mov    %r12,%r8
   15f83:	48 89 d9             	mov    %rbx,%rcx
   15f86:	48 89 c7             	mov    %rax,%rdi
   15f89:	e8 f4 03 00 00       	call   16382 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   15f8e:	90                   	nop
   15f8f:	48 83 c4 30          	add    $0x30,%rsp
   15f93:	5b                   	pop    %rbx
   15f94:	41 5c                	pop    %r12
   15f96:	5d                   	pop    %rbp
   15f97:	c3                   	ret

0000000000015f98 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15f98:	55                   	push   %rbp
   15f99:	48 89 e5             	mov    %rsp,%rbp
   15f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fa4:	5d                   	pop    %rbp
   15fa5:	c3                   	ret

0000000000015fa6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   15fa6:	55                   	push   %rbp
   15fa7:	48 89 e5             	mov    %rsp,%rbp
   15faa:	48 83 ec 10          	sub    $0x10,%rsp
   15fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   15fb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fb6:	48 89 c7             	mov    %rax,%rdi
   15fb9:	e8 74 04 00 00       	call   16432 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   15fbe:	c9                   	leave
   15fbf:	c3                   	ret

0000000000015fc0 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15fc0:	55                   	push   %rbp
   15fc1:	48 89 e5             	mov    %rsp,%rbp
   15fc4:	48 83 ec 10          	sub    $0x10,%rsp
   15fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fd0:	48 89 c7             	mov    %rax,%rdi
   15fd3:	e8 7c 00 00 00       	call   16054 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   15fd8:	c9                   	leave
   15fd9:	c3                   	ret

0000000000015fda <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   15fda:	55                   	push   %rbp
   15fdb:	48 89 e5             	mov    %rsp,%rbp
   15fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   15fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fe6:	5d                   	pop    %rbp
   15fe7:	c3                   	ret

0000000000015fe8 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   15fe8:	55                   	push   %rbp
   15fe9:	48 89 e5             	mov    %rsp,%rbp
   15fec:	48 83 ec 10          	sub    $0x10,%rsp
   15ff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   15ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ff8:	48 89 c6             	mov    %rax,%rsi
   15ffb:	bf 08 00 00 00       	mov    $0x8,%edi
   16000:	e8 c4 ef fe ff       	call   4fc9 <_ZnwmPv>
   16005:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1600c:	90                   	nop
   1600d:	c9                   	leave
   1600e:	c3                   	ret

000000000001600f <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1600f:	55                   	push   %rbp
   16010:	48 89 e5             	mov    %rsp,%rbp
   16013:	48 83 ec 20          	sub    $0x20,%rsp
   16017:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1601b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1601f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   16023:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16027:	48 89 c7             	mov    %rax,%rdi
   1602a:	e8 11 04 00 00       	call   16440 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1602f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16033:	48 89 c7             	mov    %rax,%rdi
   16036:	e8 a0 ef fe ff       	call   4fdb <_ZSt17__size_to_integerm>
   1603b:	48 89 c1             	mov    %rax,%rcx
   1603e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16042:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16046:	48 89 ce             	mov    %rcx,%rsi
   16049:	48 89 c7             	mov    %rax,%rdi
   1604c:	e8 fa 03 00 00       	call   1644b <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   16051:	c9                   	leave
   16052:	c3                   	ret
   16053:	90                   	nop

0000000000016054 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16054:	55                   	push   %rbp
   16055:	48 89 e5             	mov    %rsp,%rbp
   16058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1605c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   16063:	ff ff 0f 
      }
   16066:	5d                   	pop    %rbp
   16067:	c3                   	ret

0000000000016068 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   16068:	55                   	push   %rbp
   16069:	48 89 e5             	mov    %rsp,%rbp
   1606c:	48 83 ec 10          	sub    $0x10,%rsp
   16070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   16074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16078:	48 89 c7             	mov    %rax,%rdi
   1607b:	e8 02 00 00 00       	call   16082 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   16080:	c9                   	leave
   16081:	c3                   	ret

0000000000016082 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16082:	55                   	push   %rbp
   16083:	48 89 e5             	mov    %rsp,%rbp
   16086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1608a:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   16091:	8e e3 00 
      }
   16094:	5d                   	pop    %rbp
   16095:	c3                   	ret

0000000000016096 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   16096:	55                   	push   %rbp
   16097:	48 89 e5             	mov    %rsp,%rbp
   1609a:	53                   	push   %rbx
   1609b:	48 83 ec 28          	sub    $0x28,%rsp
   1609f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   160a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   160a7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   160ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   160af:	48 89 c7             	mov    %rax,%rdi
   160b2:	e8 f1 03 00 00       	call   164a8 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   160b7:	48 89 c3             	mov    %rax,%rbx
   160ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160be:	48 89 c7             	mov    %rax,%rdi
   160c1:	e8 e2 03 00 00       	call   164a8 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   160c6:	48 89 c1             	mov    %rax,%rcx
   160c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160cd:	48 89 c2             	mov    %rax,%rdx
   160d0:	48 89 de             	mov    %rbx,%rsi
   160d3:	48 89 cf             	mov    %rcx,%rdi
   160d6:	e8 db 03 00 00       	call   164b6 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   160db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   160df:	c9                   	leave
   160e0:	c3                   	ret
   160e1:	90                   	nop

00000000000160e2 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   160e2:	55                   	push   %rbp
   160e3:	48 89 e5             	mov    %rsp,%rbp
   160e6:	48 83 ec 10          	sub    $0x10,%rsp
   160ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   160ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160f2:	48 89 c7             	mov    %rax,%rdi
   160f5:	e8 26 04 00 00       	call   16520 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   160fa:	c9                   	leave
   160fb:	c3                   	ret

00000000000160fc <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   160fc:	55                   	push   %rbp
   160fd:	48 89 e5             	mov    %rsp,%rbp
   16100:	48 83 ec 10          	sub    $0x10,%rsp
   16104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16108:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1610c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16114:	ba 00 00 00 00       	mov    $0x0,%edx
   16119:	48 89 ce             	mov    %rcx,%rsi
   1611c:	48 89 c7             	mov    %rax,%rdi
   1611f:	e8 10 04 00 00       	call   16534 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   16124:	c9                   	leave
   16125:	c3                   	ret

0000000000016126 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16126:	55                   	push   %rbp
   16127:	48 89 e5             	mov    %rsp,%rbp
   1612a:	48 83 ec 20          	sub    $0x20,%rsp
   1612e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16132:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16136:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1613b:	74 40                	je     1617d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1613d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16141:	48 89 c7             	mov    %rax,%rdi
   16144:	e8 4c 04 00 00       	call   16595 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   16149:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1614d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16151:	48 89 c7             	mov    %rax,%rdi
   16154:	e8 4a 04 00 00       	call   165a3 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   16159:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1615e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16162:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16166:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1616a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1616e:	48 89 ce             	mov    %rcx,%rsi
   16171:	48 89 c7             	mov    %rax,%rdi
   16174:	e8 51 04 00 00       	call   165ca <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   16179:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1617d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16181:	c9                   	leave
   16182:	c3                   	ret
   16183:	90                   	nop

0000000000016184 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   16184:	55                   	push   %rbp
   16185:	48 89 e5             	mov    %rsp,%rbp
   16188:	48 83 ec 10          	sub    $0x10,%rsp
   1618c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   16190:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16194:	48 89 c7             	mov    %rax,%rdi
   16197:	e8 7c 00 00 00       	call   16218 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   1619c:	c9                   	leave
   1619d:	c3                   	ret

000000000001619e <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1619e:	55                   	push   %rbp
   1619f:	48 89 e5             	mov    %rsp,%rbp
   161a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   161a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161aa:	5d                   	pop    %rbp
   161ab:	c3                   	ret

00000000000161ac <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   161ac:	55                   	push   %rbp
   161ad:	48 89 e5             	mov    %rsp,%rbp
   161b0:	48 83 ec 10          	sub    $0x10,%rsp
   161b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   161b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161bc:	48 89 c6             	mov    %rax,%rsi
   161bf:	bf 08 00 00 00       	mov    $0x8,%edi
   161c4:	e8 00 ee fe ff       	call   4fc9 <_ZnwmPv>
   161c9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   161d0:	90                   	nop
   161d1:	c9                   	leave
   161d2:	c3                   	ret

00000000000161d3 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   161d3:	55                   	push   %rbp
   161d4:	48 89 e5             	mov    %rsp,%rbp
   161d7:	48 83 ec 20          	sub    $0x20,%rsp
   161db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   161e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   161e7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   161eb:	48 89 c7             	mov    %rax,%rdi
   161ee:	e8 1b 04 00 00       	call   1660e <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   161f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161f7:	48 89 c7             	mov    %rax,%rdi
   161fa:	e8 dc ed fe ff       	call   4fdb <_ZSt17__size_to_integerm>
   161ff:	48 89 c1             	mov    %rax,%rcx
   16202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16206:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1620a:	48 89 ce             	mov    %rcx,%rsi
   1620d:	48 89 c7             	mov    %rax,%rdi
   16210:	e8 04 04 00 00       	call   16619 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   16215:	c9                   	leave
   16216:	c3                   	ret
   16217:	90                   	nop

0000000000016218 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16218:	55                   	push   %rbp
   16219:	48 89 e5             	mov    %rsp,%rbp
   1621c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16220:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   16227:	ff ff 0f 
      }
   1622a:	5d                   	pop    %rbp
   1622b:	c3                   	ret

000000000001622c <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1622c:	55                   	push   %rbp
   1622d:	48 89 e5             	mov    %rsp,%rbp
   16230:	53                   	push   %rbx
   16231:	48 83 ec 28          	sub    $0x28,%rsp
   16235:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16239:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1623d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   16241:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16245:	48 89 c7             	mov    %rax,%rdi
   16248:	e8 29 04 00 00       	call   16676 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   1624d:	48 89 c3             	mov    %rax,%rbx
   16250:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16254:	48 89 c7             	mov    %rax,%rdi
   16257:	e8 1a 04 00 00       	call   16676 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   1625c:	48 89 c1             	mov    %rax,%rcx
   1625f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16263:	48 89 c2             	mov    %rax,%rdx
   16266:	48 89 de             	mov    %rbx,%rsi
   16269:	48 89 cf             	mov    %rcx,%rdi
   1626c:	e8 13 04 00 00       	call   16684 <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   16271:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16275:	c9                   	leave
   16276:	c3                   	ret

0000000000016277 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   16277:	55                   	push   %rbp
   16278:	48 89 e5             	mov    %rsp,%rbp
   1627b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1627f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16283:	5d                   	pop    %rbp
   16284:	c3                   	ret

0000000000016285 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   16285:	55                   	push   %rbp
   16286:	48 89 e5             	mov    %rsp,%rbp
   16289:	41 54                	push   %r12
   1628b:	53                   	push   %rbx
   1628c:	48 83 ec 20          	sub    $0x20,%rsp
   16290:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16294:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16298:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1629c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   162a0:	48 89 c7             	mov    %rax,%rdi
   162a3:	e8 4a f4 ff ff       	call   156f2 <_ZSt12__niter_baseIPPKcET_S3_>
   162a8:	49 89 c4             	mov    %rax,%r12
   162ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   162af:	48 89 c7             	mov    %rax,%rdi
   162b2:	e8 37 04 00 00       	call   166ee <_ZSt12__niter_baseIPKPKcET_S4_>
   162b7:	48 89 c3             	mov    %rax,%rbx
   162ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162be:	48 89 c7             	mov    %rax,%rdi
   162c1:	e8 28 04 00 00       	call   166ee <_ZSt12__niter_baseIPKPKcET_S4_>
   162c6:	4c 89 e2             	mov    %r12,%rdx
   162c9:	48 89 de             	mov    %rbx,%rsi
   162cc:	48 89 c7             	mov    %rax,%rdi
   162cf:	e8 28 04 00 00       	call   166fc <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   162d4:	48 89 c2             	mov    %rax,%rdx
   162d7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   162db:	48 89 d6             	mov    %rdx,%rsi
   162de:	48 89 c7             	mov    %rax,%rdi
   162e1:	e8 43 04 00 00       	call   16729 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   162e6:	48 83 c4 20          	add    $0x20,%rsp
   162ea:	5b                   	pop    %rbx
   162eb:	41 5c                	pop    %r12
   162ed:	5d                   	pop    %rbp
   162ee:	c3                   	ret
   162ef:	90                   	nop

00000000000162f0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   162f0:	55                   	push   %rbp
   162f1:	48 89 e5             	mov    %rsp,%rbp
   162f4:	48 83 ec 20          	sub    $0x20,%rsp
   162f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   162fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16300:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16308:	48 89 c7             	mov    %rax,%rdi
   1630b:	e8 2c 04 00 00       	call   1673c <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   16310:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16314:	0f 92 c0             	setb   %al
   16317:	0f b6 c0             	movzbl %al,%eax
   1631a:	48 85 c0             	test   %rax,%rax
   1631d:	0f 95 c0             	setne  %al
   16320:	84 c0                	test   %al,%al
   16322:	74 1a                	je     1633e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16324:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   1632b:	38 8e 03 
   1632e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16332:	73 05                	jae    16339 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16334:	e8 47 df fe ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16339:	e8 b2 dd fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1633e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16342:	48 89 d0             	mov    %rdx,%rax
   16345:	48 c1 e0 03          	shl    $0x3,%rax
   16349:	48 01 d0             	add    %rdx,%rax
   1634c:	48 c1 e0 03          	shl    $0x3,%rax
   16350:	48 89 c7             	mov    %rax,%rdi
   16353:	e8 48 e0 fe ff       	call   43a0 <_Znwm@plt>
   16358:	90                   	nop
      }
   16359:	c9                   	leave
   1635a:	c3                   	ret
   1635b:	90                   	nop

000000000001635c <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   1635c:	55                   	push   %rbp
   1635d:	48 89 e5             	mov    %rsp,%rbp
   16360:	48 83 ec 10          	sub    $0x10,%rsp
   16364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16368:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1636c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16370:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16374:	48 89 d6             	mov    %rdx,%rsi
   16377:	48 89 c7             	mov    %rax,%rdi
   1637a:	e8 d1 03 00 00       	call   16750 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1637f:	90                   	nop
   16380:	c9                   	leave
   16381:	c3                   	ret

0000000000016382 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   16382:	55                   	push   %rbp
   16383:	48 89 e5             	mov    %rsp,%rbp
   16386:	41 56                	push   %r14
   16388:	41 55                	push   %r13
   1638a:	41 54                	push   %r12
   1638c:	53                   	push   %rbx
   1638d:	48 83 ec 40          	sub    $0x40,%rsp
   16391:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16395:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16399:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1639d:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   163a1:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   163a5:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   163a9:	48 89 de             	mov    %rbx,%rsi
   163ac:	bf 28 00 00 00       	mov    $0x28,%edi
   163b1:	e8 13 ec fe ff       	call   4fc9 <_ZnwmPv>
   163b6:	49 89 c4             	mov    %rax,%r12
   163b9:	41 be 01 00 00 00    	mov    $0x1,%r14d
   163bf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   163c3:	48 89 c7             	mov    %rax,%rdi
   163c6:	e8 16 d7 ff ff       	call   13ae1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   163cb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   163cf:	48 89 c7             	mov    %rax,%rdi
   163d2:	e8 fc d6 ff ff       	call   13ad3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   163d7:	48 89 c2             	mov    %rax,%rdx
   163da:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   163de:	48 89 d6             	mov    %rdx,%rsi
   163e1:	48 89 c7             	mov    %rax,%rdi
   163e4:	e8 73 ff ff ff       	call   1635c <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   163e9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   163ed:	48 89 c7             	mov    %rax,%rdi
   163f0:	e8 d0 d6 ff ff       	call   13ac5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   163f5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   163f9:	48 89 c6             	mov    %rax,%rsi
   163fc:	4c 89 e7             	mov    %r12,%rdi
   163ff:	e8 6a 03 00 00       	call   1676e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   16404:	eb 1e                	jmp    16424 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   16406:	49 89 c5             	mov    %rax,%r13
   16409:	45 84 f6             	test   %r14b,%r14b
   1640c:	74 0b                	je     16419 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   1640e:	48 89 de             	mov    %rbx,%rsi
   16411:	4c 89 e7             	mov    %r12,%rdi
   16414:	e8 ac a2 ff ff       	call   106c5 <_ZdlPvS_>
   16419:	4c 89 e8             	mov    %r13,%rax
   1641c:	48 89 c7             	mov    %rax,%rdi
   1641f:	e8 0c e3 fe ff       	call   4730 <_Unwind_Resume@plt>
   16424:	48 83 c4 40          	add    $0x40,%rsp
   16428:	5b                   	pop    %rbx
   16429:	41 5c                	pop    %r12
   1642b:	41 5d                	pop    %r13
   1642d:	41 5e                	pop    %r14
   1642f:	5d                   	pop    %rbp
   16430:	c3                   	ret
   16431:	90                   	nop

0000000000016432 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   16432:	55                   	push   %rbp
   16433:	48 89 e5             	mov    %rsp,%rbp
   16436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   1643a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1643e:	5d                   	pop    %rbp
   1643f:	c3                   	ret

0000000000016440 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   16440:	55                   	push   %rbp
   16441:	48 89 e5             	mov    %rsp,%rbp
   16444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16448:	90                   	nop
   16449:	5d                   	pop    %rbp
   1644a:	c3                   	ret

000000000001644b <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1644b:	55                   	push   %rbp
   1644c:	48 89 e5             	mov    %rsp,%rbp
   1644f:	48 83 ec 20          	sub    $0x20,%rsp
   16453:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16457:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1645b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1645f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16464:	75 06                	jne    1646c <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   16466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1646a:	eb 3a                	jmp    164a6 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1646c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16470:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16477:	00 
   16478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1647c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   16480:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16488:	48 89 ce             	mov    %rcx,%rsi
   1648b:	48 89 c7             	mov    %rax,%rdi
   1648e:	e8 05 03 00 00       	call   16798 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   16493:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16497:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1649e:	00 
   1649f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164a3:	48 01 d0             	add    %rdx,%rax
    }
   164a6:	c9                   	leave
   164a7:	c3                   	ret

00000000000164a8 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   164a8:	55                   	push   %rbp
   164a9:	48 89 e5             	mov    %rsp,%rbp
   164ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   164b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164b4:	5d                   	pop    %rbp
   164b5:	c3                   	ret

00000000000164b6 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   164b6:	55                   	push   %rbp
   164b7:	48 89 e5             	mov    %rsp,%rbp
   164ba:	41 54                	push   %r12
   164bc:	53                   	push   %rbx
   164bd:	48 83 ec 20          	sub    $0x20,%rsp
   164c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   164c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   164c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   164cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   164d1:	48 89 c7             	mov    %rax,%rdi
   164d4:	e8 fb 02 00 00       	call   167d4 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   164d9:	49 89 c4             	mov    %rax,%r12
   164dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   164e0:	48 89 c7             	mov    %rax,%rdi
   164e3:	e8 de 02 00 00       	call   167c6 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   164e8:	48 89 c3             	mov    %rax,%rbx
   164eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164ef:	48 89 c7             	mov    %rax,%rdi
   164f2:	e8 cf 02 00 00       	call   167c6 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   164f7:	4c 89 e2             	mov    %r12,%rdx
   164fa:	48 89 de             	mov    %rbx,%rsi
   164fd:	48 89 c7             	mov    %rax,%rdi
   16500:	e8 dd 02 00 00       	call   167e2 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   16505:	48 89 c2             	mov    %rax,%rdx
   16508:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1650c:	48 89 d6             	mov    %rdx,%rsi
   1650f:	48 89 c7             	mov    %rax,%rdi
   16512:	e8 f8 02 00 00       	call   1680f <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   16517:	48 83 c4 20          	add    $0x20,%rsp
   1651b:	5b                   	pop    %rbx
   1651c:	41 5c                	pop    %r12
   1651e:	5d                   	pop    %rbp
   1651f:	c3                   	ret

0000000000016520 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16520:	55                   	push   %rbp
   16521:	48 89 e5             	mov    %rsp,%rbp
   16524:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16528:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1652f:	ff ff 0f 
      }
   16532:	5d                   	pop    %rbp
   16533:	c3                   	ret

0000000000016534 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16534:	55                   	push   %rbp
   16535:	48 89 e5             	mov    %rsp,%rbp
   16538:	48 83 ec 20          	sub    $0x20,%rsp
   1653c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16540:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16544:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1654c:	48 89 c7             	mov    %rax,%rdi
   1654f:	e8 cc ff ff ff       	call   16520 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   16554:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16558:	0f 92 c0             	setb   %al
   1655b:	0f b6 c0             	movzbl %al,%eax
   1655e:	48 85 c0             	test   %rax,%rax
   16561:	0f 95 c0             	setne  %al
   16564:	84 c0                	test   %al,%al
   16566:	74 1a                	je     16582 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16568:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1656f:	ff ff 1f 
   16572:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16576:	73 05                	jae    1657d <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16578:	e8 03 dd fe ff       	call   4280 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1657d:	e8 6e db fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16582:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16586:	48 c1 e0 03          	shl    $0x3,%rax
   1658a:	48 89 c7             	mov    %rax,%rdi
   1658d:	e8 0e de fe ff       	call   43a0 <_Znwm@plt>
   16592:	90                   	nop
      }
   16593:	c9                   	leave
   16594:	c3                   	ret

0000000000016595 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   16595:	55                   	push   %rbp
   16596:	48 89 e5             	mov    %rsp,%rbp
   16599:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1659d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165a1:	5d                   	pop    %rbp
   165a2:	c3                   	ret

00000000000165a3 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   165a3:	55                   	push   %rbp
   165a4:	48 89 e5             	mov    %rsp,%rbp
   165a7:	48 83 ec 10          	sub    $0x10,%rsp
   165ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   165af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165b3:	48 89 c6             	mov    %rax,%rsi
   165b6:	bf 08 00 00 00       	mov    $0x8,%edi
   165bb:	e8 09 ea fe ff       	call   4fc9 <_ZnwmPv>
   165c0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   165c7:	90                   	nop
   165c8:	c9                   	leave
   165c9:	c3                   	ret

00000000000165ca <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   165ca:	55                   	push   %rbp
   165cb:	48 89 e5             	mov    %rsp,%rbp
   165ce:	48 83 ec 20          	sub    $0x20,%rsp
   165d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   165da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   165de:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   165e2:	48 89 c7             	mov    %rax,%rdi
   165e5:	e8 37 02 00 00       	call   16821 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   165ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   165ee:	48 89 c7             	mov    %rax,%rdi
   165f1:	e8 e5 e9 fe ff       	call   4fdb <_ZSt17__size_to_integerm>
   165f6:	48 89 c1             	mov    %rax,%rcx
   165f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16601:	48 89 ce             	mov    %rcx,%rsi
   16604:	48 89 c7             	mov    %rax,%rdi
   16607:	e8 20 02 00 00       	call   1682c <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1660c:	c9                   	leave
   1660d:	c3                   	ret

000000000001660e <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1660e:	55                   	push   %rbp
   1660f:	48 89 e5             	mov    %rsp,%rbp
   16612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16616:	90                   	nop
   16617:	5d                   	pop    %rbp
   16618:	c3                   	ret

0000000000016619 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   16619:	55                   	push   %rbp
   1661a:	48 89 e5             	mov    %rsp,%rbp
   1661d:	48 83 ec 20          	sub    $0x20,%rsp
   16621:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16625:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16629:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1662d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16632:	75 06                	jne    1663a <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   16634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16638:	eb 3a                	jmp    16674 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1663a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1663e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16645:	00 
   16646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1664a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1664e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16656:	48 89 ce             	mov    %rcx,%rsi
   16659:	48 89 c7             	mov    %rax,%rdi
   1665c:	e8 28 02 00 00       	call   16889 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   16661:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16665:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1666c:	00 
   1666d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16671:	48 01 d0             	add    %rdx,%rax
    }
   16674:	c9                   	leave
   16675:	c3                   	ret

0000000000016676 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   16676:	55                   	push   %rbp
   16677:	48 89 e5             	mov    %rsp,%rbp
   1667a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1667e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16682:	5d                   	pop    %rbp
   16683:	c3                   	ret

0000000000016684 <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   16684:	55                   	push   %rbp
   16685:	48 89 e5             	mov    %rsp,%rbp
   16688:	41 54                	push   %r12
   1668a:	53                   	push   %rbx
   1668b:	48 83 ec 20          	sub    $0x20,%rsp
   1668f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16693:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16697:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1669b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1669f:	48 89 c7             	mov    %rax,%rdi
   166a2:	e8 d2 f3 ff ff       	call   15a79 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   166a7:	49 89 c4             	mov    %rax,%r12
   166aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   166ae:	48 89 c7             	mov    %rax,%rdi
   166b1:	e8 01 02 00 00       	call   168b7 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   166b6:	48 89 c3             	mov    %rax,%rbx
   166b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166bd:	48 89 c7             	mov    %rax,%rdi
   166c0:	e8 f2 01 00 00       	call   168b7 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   166c5:	4c 89 e2             	mov    %r12,%rdx
   166c8:	48 89 de             	mov    %rbx,%rsi
   166cb:	48 89 c7             	mov    %rax,%rdi
   166ce:	e8 f2 01 00 00       	call   168c5 <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   166d3:	48 89 c2             	mov    %rax,%rdx
   166d6:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   166da:	48 89 d6             	mov    %rdx,%rsi
   166dd:	48 89 c7             	mov    %rax,%rdi
   166e0:	e8 0d 02 00 00       	call   168f2 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   166e5:	48 83 c4 20          	add    $0x20,%rsp
   166e9:	5b                   	pop    %rbx
   166ea:	41 5c                	pop    %r12
   166ec:	5d                   	pop    %rbp
   166ed:	c3                   	ret

00000000000166ee <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   166ee:	55                   	push   %rbp
   166ef:	48 89 e5             	mov    %rsp,%rbp
   166f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   166f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166fa:	5d                   	pop    %rbp
   166fb:	c3                   	ret

00000000000166fc <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   166fc:	55                   	push   %rbp
   166fd:	48 89 e5             	mov    %rsp,%rbp
   16700:	48 83 ec 20          	sub    $0x20,%rsp
   16704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16708:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1670c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   16710:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16714:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1671c:	48 89 ce             	mov    %rcx,%rsi
   1671f:	48 89 c7             	mov    %rax,%rdi
   16722:	e8 dd 01 00 00       	call   16904 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   16727:	c9                   	leave
   16728:	c3                   	ret

0000000000016729 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   16729:	55                   	push   %rbp
   1672a:	48 89 e5             	mov    %rsp,%rbp
   1672d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16731:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   16735:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16739:	5d                   	pop    %rbp
   1673a:	c3                   	ret
   1673b:	90                   	nop

000000000001673c <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1673c:	55                   	push   %rbp
   1673d:	48 89 e5             	mov    %rsp,%rbp
   16740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16744:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1674b:	1c c7 01 
      }
   1674e:	5d                   	pop    %rbp
   1674f:	c3                   	ret

0000000000016750 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   16750:	55                   	push   %rbp
   16751:	48 89 e5             	mov    %rsp,%rbp
   16754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16758:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1675c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16760:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16764:	48 8b 12             	mov    (%rdx),%rdx
   16767:	48 89 10             	mov    %rdx,(%rax)
      { }
   1676a:	90                   	nop
   1676b:	5d                   	pop    %rbp
   1676c:	c3                   	ret
   1676d:	90                   	nop

000000000001676e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   1676e:	55                   	push   %rbp
   1676f:	48 89 e5             	mov    %rsp,%rbp
   16772:	48 83 ec 20          	sub    $0x20,%rsp
   16776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1677a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   1677e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   16782:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1678a:	48 89 ce             	mov    %rcx,%rsi
   1678d:	48 89 c7             	mov    %rax,%rdi
   16790:	e8 9d 01 00 00       	call   16932 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   16795:	90                   	nop
   16796:	c9                   	leave
   16797:	c3                   	ret

0000000000016798 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   16798:	55                   	push   %rbp
   16799:	48 89 e5             	mov    %rsp,%rbp
   1679c:	48 83 ec 20          	sub    $0x20,%rsp
   167a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   167a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   167ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   167b0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   167b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167b8:	48 89 ce             	mov    %rcx,%rsi
   167bb:	48 89 c7             	mov    %rax,%rdi
   167be:	e8 b9 01 00 00       	call   1697c <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   167c3:	90                   	nop
   167c4:	c9                   	leave
   167c5:	c3                   	ret

00000000000167c6 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   167c6:	55                   	push   %rbp
   167c7:	48 89 e5             	mov    %rsp,%rbp
   167ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   167ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167d2:	5d                   	pop    %rbp
   167d3:	c3                   	ret

00000000000167d4 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   167d4:	55                   	push   %rbp
   167d5:	48 89 e5             	mov    %rsp,%rbp
   167d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   167dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167e0:	5d                   	pop    %rbp
   167e1:	c3                   	ret

00000000000167e2 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   167e2:	55                   	push   %rbp
   167e3:	48 89 e5             	mov    %rsp,%rbp
   167e6:	48 83 ec 20          	sub    $0x20,%rsp
   167ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   167f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   167f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   167fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   167fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16802:	48 89 ce             	mov    %rcx,%rsi
   16805:	48 89 c7             	mov    %rax,%rdi
   16808:	e8 aa 01 00 00       	call   169b7 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1680d:	c9                   	leave
   1680e:	c3                   	ret

000000000001680f <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1680f:	55                   	push   %rbp
   16810:	48 89 e5             	mov    %rsp,%rbp
   16813:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16817:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1681b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1681f:	5d                   	pop    %rbp
   16820:	c3                   	ret

0000000000016821 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   16821:	55                   	push   %rbp
   16822:	48 89 e5             	mov    %rsp,%rbp
   16825:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16829:	90                   	nop
   1682a:	5d                   	pop    %rbp
   1682b:	c3                   	ret

000000000001682c <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1682c:	55                   	push   %rbp
   1682d:	48 89 e5             	mov    %rsp,%rbp
   16830:	48 83 ec 20          	sub    $0x20,%rsp
   16834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16838:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1683c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   16840:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16845:	75 06                	jne    1684d <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   16847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1684b:	eb 3a                	jmp    16887 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1684d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16851:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16858:	00 
   16859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1685d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   16861:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16869:	48 89 ce             	mov    %rcx,%rsi
   1686c:	48 89 c7             	mov    %rax,%rdi
   1686f:	e8 70 01 00 00       	call   169e4 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   16874:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16878:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1687f:	00 
   16880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16884:	48 01 d0             	add    %rdx,%rax
    }
   16887:	c9                   	leave
   16888:	c3                   	ret

0000000000016889 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   16889:	55                   	push   %rbp
   1688a:	48 89 e5             	mov    %rsp,%rbp
   1688d:	48 83 ec 20          	sub    $0x20,%rsp
   16891:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16895:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16899:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1689d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   168a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   168a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168a9:	48 89 ce             	mov    %rcx,%rsi
   168ac:	48 89 c7             	mov    %rax,%rdi
   168af:	e8 5e 01 00 00       	call   16a12 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   168b4:	90                   	nop
   168b5:	c9                   	leave
   168b6:	c3                   	ret

00000000000168b7 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   168b7:	55                   	push   %rbp
   168b8:	48 89 e5             	mov    %rsp,%rbp
   168bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   168bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168c3:	5d                   	pop    %rbp
   168c4:	c3                   	ret

00000000000168c5 <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   168c5:	55                   	push   %rbp
   168c6:	48 89 e5             	mov    %rsp,%rbp
   168c9:	48 83 ec 20          	sub    $0x20,%rsp
   168cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   168d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   168d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   168d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   168dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   168e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168e5:	48 89 ce             	mov    %rcx,%rsi
   168e8:	48 89 c7             	mov    %rax,%rdi
   168eb:	e8 5d 01 00 00       	call   16a4d <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   168f0:	c9                   	leave
   168f1:	c3                   	ret

00000000000168f2 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   168f2:	55                   	push   %rbp
   168f3:	48 89 e5             	mov    %rsp,%rbp
   168f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   168fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   168fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16902:	5d                   	pop    %rbp
   16903:	c3                   	ret

0000000000016904 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   16904:	55                   	push   %rbp
   16905:	48 89 e5             	mov    %rsp,%rbp
   16908:	48 83 ec 20          	sub    $0x20,%rsp
   1690c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16910:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16914:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   16918:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1691c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16924:	48 89 ce             	mov    %rcx,%rsi
   16927:	48 89 c7             	mov    %rax,%rdi
   1692a:	e8 4b 01 00 00       	call   16a7a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   1692f:	c9                   	leave
   16930:	c3                   	ret
   16931:	90                   	nop

0000000000016932 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   16932:	55                   	push   %rbp
   16933:	48 89 e5             	mov    %rsp,%rbp
   16936:	53                   	push   %rbx
   16937:	48 83 ec 28          	sub    $0x28,%rsp
   1693b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1693f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16943:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   16947:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1694b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1694f:	48 89 c7             	mov    %rax,%rdi
   16952:	e8 82 01 00 00       	call   16ad9 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   16957:	48 89 c7             	mov    %rax,%rdi
   1695a:	e8 94 01 00 00       	call   16af3 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   1695f:	48 89 c6             	mov    %rax,%rsi
   16962:	48 89 df             	mov    %rbx,%rdi
   16965:	e8 76 d8 fe ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   1696a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1696e:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   16975:	90                   	nop
   16976:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1697a:	c9                   	leave
   1697b:	c3                   	ret

000000000001697c <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1697c:	55                   	push   %rbp
   1697d:	48 89 e5             	mov    %rsp,%rbp
   16980:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16984:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16988:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1698c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16990:	48 8b 00             	mov    (%rax),%rax
   16993:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   16997:	eb 10                	jmp    169a9 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   16999:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1699d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   169a1:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   169a4:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   169a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169ad:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   169b1:	75 e6                	jne    16999 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   169b3:	90                   	nop
   169b4:	90                   	nop
   169b5:	5d                   	pop    %rbp
   169b6:	c3                   	ret

00000000000169b7 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   169b7:	55                   	push   %rbp
   169b8:	48 89 e5             	mov    %rsp,%rbp
   169bb:	48 83 ec 20          	sub    $0x20,%rsp
   169bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   169c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   169c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   169cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   169cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   169d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169d7:	48 89 ce             	mov    %rcx,%rsi
   169da:	48 89 c7             	mov    %rax,%rdi
   169dd:	e8 1f 01 00 00       	call   16b01 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   169e2:	c9                   	leave
   169e3:	c3                   	ret

00000000000169e4 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   169e4:	55                   	push   %rbp
   169e5:	48 89 e5             	mov    %rsp,%rbp
   169e8:	48 83 ec 20          	sub    $0x20,%rsp
   169ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   169f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   169f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   169f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   169fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a04:	48 89 ce             	mov    %rcx,%rsi
   16a07:	48 89 c7             	mov    %rax,%rdi
   16a0a:	e8 74 01 00 00       	call   16b83 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   16a0f:	90                   	nop
   16a10:	c9                   	leave
   16a11:	c3                   	ret

0000000000016a12 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   16a12:	55                   	push   %rbp
   16a13:	48 89 e5             	mov    %rsp,%rbp
   16a16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16a1a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16a1e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   16a22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16a26:	48 8b 00             	mov    (%rax),%rax
   16a29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   16a2d:	eb 10                	jmp    16a3f <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   16a2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16a37:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   16a3a:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   16a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a43:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16a47:	75 e6                	jne    16a2f <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   16a49:	90                   	nop
   16a4a:	90                   	nop
   16a4b:	5d                   	pop    %rbp
   16a4c:	c3                   	ret

0000000000016a4d <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   16a4d:	55                   	push   %rbp
   16a4e:	48 89 e5             	mov    %rsp,%rbp
   16a51:	48 83 ec 20          	sub    $0x20,%rsp
   16a55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16a5d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   16a61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16a65:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16a69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a6d:	48 89 ce             	mov    %rcx,%rsi
   16a70:	48 89 c7             	mov    %rax,%rdi
   16a73:	e8 46 01 00 00       	call   16bbe <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   16a78:	c9                   	leave
   16a79:	c3                   	ret

0000000000016a7a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   16a7a:	55                   	push   %rbp
   16a7b:	48 89 e5             	mov    %rsp,%rbp
   16a7e:	48 83 ec 30          	sub    $0x30,%rsp
   16a82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16a86:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16a8a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   16a8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16a92:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16a96:	48 c1 f8 03          	sar    $0x3,%rax
   16a9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   16a9e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16aa3:	74 1f                	je     16ac4 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   16aa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16aa9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16ab0:	00 
   16ab1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16ab5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ab9:	48 89 ce             	mov    %rcx,%rsi
   16abc:	48 89 c7             	mov    %rax,%rdi
   16abf:	e8 dc db fe ff       	call   46a0 <memmove@plt>
	  return __result + _Num;
   16ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ac8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16acf:	00 
   16ad0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ad4:	48 01 d0             	add    %rdx,%rax
	}
   16ad7:	c9                   	leave
   16ad8:	c3                   	ret

0000000000016ad9 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   16ad9:	55                   	push   %rbp
   16ada:	48 89 e5             	mov    %rsp,%rbp
   16add:	48 83 ec 10          	sub    $0x10,%rsp
   16ae1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   16ae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ae9:	48 89 c7             	mov    %rax,%rdi
   16aec:	e8 2c 01 00 00       	call   16c1d <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   16af1:	c9                   	leave
   16af2:	c3                   	ret

0000000000016af3 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   16af3:	55                   	push   %rbp
   16af4:	48 89 e5             	mov    %rsp,%rbp
   16af7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   16afb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16aff:	5d                   	pop    %rbp
   16b00:	c3                   	ret

0000000000016b01 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   16b01:	55                   	push   %rbp
   16b02:	48 89 e5             	mov    %rsp,%rbp
   16b05:	48 83 ec 30          	sub    $0x30,%rsp
   16b09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16b0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16b11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   16b15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b19:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16b1d:	48 c1 f8 04          	sar    $0x4,%rax
   16b21:	48 89 c2             	mov    %rax,%rdx
   16b24:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   16b2b:	e3 38 8e 
   16b2e:	48 0f af c2          	imul   %rdx,%rax
   16b32:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   16b36:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16b3b:	74 28                	je     16b65 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   16b3d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16b41:	48 89 d0             	mov    %rdx,%rax
   16b44:	48 c1 e0 03          	shl    $0x3,%rax
   16b48:	48 01 d0             	add    %rdx,%rax
   16b4b:	48 c1 e0 04          	shl    $0x4,%rax
   16b4f:	48 89 c2             	mov    %rax,%rdx
   16b52:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16b56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b5a:	48 89 ce             	mov    %rcx,%rsi
   16b5d:	48 89 c7             	mov    %rax,%rdi
   16b60:	e8 3b db fe ff       	call   46a0 <memmove@plt>
	  return __result + _Num;
   16b65:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16b69:	48 89 d0             	mov    %rdx,%rax
   16b6c:	48 c1 e0 03          	shl    $0x3,%rax
   16b70:	48 01 d0             	add    %rdx,%rax
   16b73:	48 c1 e0 04          	shl    $0x4,%rax
   16b77:	48 89 c2             	mov    %rax,%rdx
   16b7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b7e:	48 01 d0             	add    %rdx,%rax
	}
   16b81:	c9                   	leave
   16b82:	c3                   	ret

0000000000016b83 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   16b83:	55                   	push   %rbp
   16b84:	48 89 e5             	mov    %rsp,%rbp
   16b87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16b8b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16b8f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   16b93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b97:	48 8b 00             	mov    (%rax),%rax
   16b9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   16b9e:	eb 10                	jmp    16bb0 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   16ba0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ba4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16ba8:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   16bab:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   16bb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bb4:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16bb8:	75 e6                	jne    16ba0 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   16bba:	90                   	nop
   16bbb:	90                   	nop
   16bbc:	5d                   	pop    %rbp
   16bbd:	c3                   	ret

0000000000016bbe <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   16bbe:	55                   	push   %rbp
   16bbf:	48 89 e5             	mov    %rsp,%rbp
   16bc2:	48 83 ec 30          	sub    $0x30,%rsp
   16bc6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16bca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16bce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   16bd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16bd6:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16bda:	48 c1 f8 03          	sar    $0x3,%rax
   16bde:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   16be2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16be7:	74 1f                	je     16c08 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   16be9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bed:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16bf4:	00 
   16bf5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16bf9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16bfd:	48 89 ce             	mov    %rcx,%rsi
   16c00:	48 89 c7             	mov    %rax,%rdi
   16c03:	e8 98 da fe ff       	call   46a0 <memmove@plt>
	  return __result + _Num;
   16c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c0c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16c13:	00 
   16c14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16c18:	48 01 d0             	add    %rdx,%rax
	}
   16c1b:	c9                   	leave
   16c1c:	c3                   	ret

0000000000016c1d <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   16c1d:	55                   	push   %rbp
   16c1e:	48 89 e5             	mov    %rsp,%rbp
   16c21:	48 83 ec 10          	sub    $0x10,%rsp
   16c25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   16c29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c2d:	48 89 c7             	mov    %rax,%rdi
   16c30:	e8 02 00 00 00       	call   16c37 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   16c35:	c9                   	leave
   16c36:	c3                   	ret

0000000000016c37 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   16c37:	55                   	push   %rbp
   16c38:	48 89 e5             	mov    %rsp,%rbp
   16c3b:	48 83 ec 10          	sub    $0x10,%rsp
   16c3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c47:	48 89 c7             	mov    %rax,%rdi
   16c4a:	e8 02 00 00 00       	call   16c51 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   16c4f:	c9                   	leave
   16c50:	c3                   	ret

0000000000016c51 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   16c51:	55                   	push   %rbp
   16c52:	48 89 e5             	mov    %rsp,%rbp
   16c55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c5d:	48 8b 00             	mov    (%rax),%rax
   16c60:	5d                   	pop    %rbp
   16c61:	c3                   	ret

0000000000016c62 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   16c62:	55                   	push   %rbp
   16c63:	48 89 e5             	mov    %rsp,%rbp
   16c66:	48 83 ec 10          	sub    $0x10,%rsp
   16c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c6e:	48 8d 15 4b 10 01 00 	lea    0x1104b(%rip),%rdx        # 27cc0 <_ZTVSt19bad_optional_access+0x10>
   16c75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c79:	48 89 10             	mov    %rdx,(%rax)
   16c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c80:	48 89 c7             	mov    %rax,%rdi
   16c83:	e8 e8 da fe ff       	call   4770 <_ZNSt9exceptionD2Ev@plt>
   16c88:	90                   	nop
   16c89:	c9                   	leave
   16c8a:	c3                   	ret
   16c8b:	90                   	nop

0000000000016c8c <_ZNSt19bad_optional_accessD0Ev>:
   16c8c:	55                   	push   %rbp
   16c8d:	48 89 e5             	mov    %rsp,%rbp
   16c90:	48 83 ec 10          	sub    $0x10,%rsp
   16c94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c9c:	48 89 c7             	mov    %rax,%rdi
   16c9f:	e8 be ff ff ff       	call   16c62 <_ZNSt19bad_optional_accessD1Ev>
   16ca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ca8:	be 08 00 00 00       	mov    $0x8,%esi
   16cad:	48 89 c7             	mov    %rax,%rdi
   16cb0:	e8 0b d7 fe ff       	call   43c0 <_ZdlPvm@plt>
   16cb5:	c9                   	leave
   16cb6:	c3                   	ret

Disassembly of section .fini:

0000000000016cb8 <_fini>:
   16cb8:	48 83 ec 08          	sub    $0x8,%rsp
   16cbc:	48 83 c4 08          	add    $0x8,%rsp
   16cc0:	c3                   	ret
