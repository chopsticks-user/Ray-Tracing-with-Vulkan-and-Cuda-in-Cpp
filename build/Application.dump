
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 ad 0f 01 00 	mov    0x10fad(%rip),%rax        # 13fb8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca 0f 01 00    	push   0x10fca(%rip)        # 13ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc 0f 01 00    	jmp    *0x10fcc(%rip)        # 13ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca 0f 01 00    	jmp    *0x10fca(%rip)        # 14000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 0f 01 00    	jmp    *0x10fc2(%rip)        # 14008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba 0f 01 00    	jmp    *0x10fba(%rip)        # 14010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <glfwDestroyWindow@plt>:
    3060:	ff 25 b2 0f 01 00    	jmp    *0x10fb2(%rip)        # 14018 <glfwDestroyWindow@Base>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZSt17__throw_bad_allocv@plt>:
    3070:	ff 25 aa 0f 01 00    	jmp    *0x10faa(%rip)        # 14020 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <_ZNSt13runtime_errorC1EPKc@plt>:
    3080:	ff 25 a2 0f 01 00    	jmp    *0x10fa2(%rip)        # 14028 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <vkGetPhysicalDeviceProperties@plt>:
    3090:	ff 25 9a 0f 01 00    	jmp    *0x10f9a(%rip)        # 14030 <vkGetPhysicalDeviceProperties@Base>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <__cxa_begin_catch@plt>:
    30a0:	ff 25 92 0f 01 00    	jmp    *0x10f92(%rip)        # 14038 <__cxa_begin_catch@CXXABI_1.3>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    30b0:	ff 25 8a 0f 01 00    	jmp    *0x10f8a(%rip)        # 14040 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <strlen@plt>:
    30c0:	ff 25 82 0f 01 00    	jmp    *0x10f82(%rip)        # 14048 <strlen@GLIBC_2.2.5>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <__cxa_allocate_exception@plt>:
    30d0:	ff 25 7a 0f 01 00    	jmp    *0x10f7a(%rip)        # 14050 <__cxa_allocate_exception@CXXABI_1.3>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <_ZSt20__throw_length_errorPKc@plt>:
    30e0:	ff 25 72 0f 01 00    	jmp    *0x10f72(%rip)        # 14058 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <vkEnumeratePhysicalDevices@plt>:
    30f0:	ff 25 6a 0f 01 00    	jmp    *0x10f6a(%rip)        # 14060 <vkEnumeratePhysicalDevices@Base>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3100:	ff 25 62 0f 01 00    	jmp    *0x10f62(%rip)        # 14068 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3110:	ff 25 5a 0f 01 00    	jmp    *0x10f5a(%rip)        # 14070 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3120:	ff 25 52 0f 01 00    	jmp    *0x10f52(%rip)        # 14078 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    3130:	ff 25 4a 0f 01 00    	jmp    *0x10f4a(%rip)        # 14080 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <_ZSt19__throw_logic_errorPKc@plt>:
    3140:	ff 25 42 0f 01 00    	jmp    *0x10f42(%rip)        # 14088 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <__cxa_free_exception@plt>:
    3150:	ff 25 3a 0f 01 00    	jmp    *0x10f3a(%rip)        # 14090 <__cxa_free_exception@CXXABI_1.3>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    3160:	ff 25 32 0f 01 00    	jmp    *0x10f32(%rip)        # 14098 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <vkGetPhysicalDeviceFeatures@plt>:
    3170:	ff 25 2a 0f 01 00    	jmp    *0x10f2a(%rip)        # 140a0 <vkGetPhysicalDeviceFeatures@Base>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <glfwGetRequiredInstanceExtensions@plt>:
    3180:	ff 25 22 0f 01 00    	jmp    *0x10f22(%rip)        # 140a8 <glfwGetRequiredInstanceExtensions@Base>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3190:	ff 25 1a 0f 01 00    	jmp    *0x10f1a(%rip)        # 140b0 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    31a0:	ff 25 12 0f 01 00    	jmp    *0x10f12(%rip)        # 140b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <vkDestroyDevice@plt>:
    31b0:	ff 25 0a 0f 01 00    	jmp    *0x10f0a(%rip)        # 140c0 <vkDestroyDevice@Base>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    31c0:	ff 25 02 0f 01 00    	jmp    *0x10f02(%rip)        # 140c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <glfwWindowHint@plt>:
    31d0:	ff 25 fa 0e 01 00    	jmp    *0x10efa(%rip)        # 140d0 <glfwWindowHint@Base>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <__cxa_atexit@plt>:
    31e0:	ff 25 f2 0e 01 00    	jmp    *0x10ef2(%rip)        # 140d8 <__cxa_atexit@GLIBC_2.2.5>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <vkGetInstanceProcAddr@plt>:
    31f0:	ff 25 ea 0e 01 00    	jmp    *0x10eea(%rip)        # 140e0 <vkGetInstanceProcAddr@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <glfwPollEvents@plt>:
    3200:	ff 25 e2 0e 01 00    	jmp    *0x10ee2(%rip)        # 140e8 <glfwPollEvents@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    3210:	ff 25 da 0e 01 00    	jmp    *0x10eda(%rip)        # 140f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <_Znwm@plt>:
    3220:	ff 25 d2 0e 01 00    	jmp    *0x10ed2(%rip)        # 140f8 <_Znwm@GLIBCXX_3.4>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <_ZdlPvm@plt>:
    3230:	ff 25 ca 0e 01 00    	jmp    *0x10eca(%rip)        # 14100 <_ZdlPvm@CXXABI_1.3.9>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <vkDestroyInstance@plt>:
    3240:	ff 25 c2 0e 01 00    	jmp    *0x10ec2(%rip)        # 14108 <vkDestroyInstance@Base>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <glfwTerminate@plt>:
    3250:	ff 25 ba 0e 01 00    	jmp    *0x10eba(%rip)        # 14110 <glfwTerminate@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    3260:	ff 25 b2 0e 01 00    	jmp    *0x10eb2(%rip)        # 14118 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <_ZNSolsEPFRSoS_E@plt>:
    3270:	ff 25 aa 0e 01 00    	jmp    *0x10eaa(%rip)        # 14120 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    3280:	ff 25 a2 0e 01 00    	jmp    *0x10ea2(%rip)        # 14128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3290:	ff 25 9a 0e 01 00    	jmp    *0x10e9a(%rip)        # 14130 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <_ZNSaIcED1Ev@plt>:
    32a0:	ff 25 92 0e 01 00    	jmp    *0x10e92(%rip)        # 14138 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    32b0:	ff 25 8a 0e 01 00    	jmp    *0x10e8a(%rip)        # 14140 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    32c0:	ff 25 82 0e 01 00    	jmp    *0x10e82(%rip)        # 14148 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <glfwInit@plt>:
    32d0:	ff 25 7a 0e 01 00    	jmp    *0x10e7a(%rip)        # 14150 <glfwInit@Base>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    32e0:	ff 25 72 0e 01 00    	jmp    *0x10e72(%rip)        # 14158 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <vkCreateInstance@plt>:
    32f0:	ff 25 6a 0e 01 00    	jmp    *0x10e6a(%rip)        # 14160 <vkCreateInstance@Base>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    3300:	ff 25 62 0e 01 00    	jmp    *0x10e62(%rip)        # 14168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <vkEnumerateInstanceVersion@plt>:
    3310:	ff 25 5a 0e 01 00    	jmp    *0x10e5a(%rip)        # 14170 <vkEnumerateInstanceVersion@Base>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <vkGetDeviceQueue@plt>:
    3320:	ff 25 52 0e 01 00    	jmp    *0x10e52(%rip)        # 14178 <vkGetDeviceQueue@Base>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <vkEnumerateDeviceExtensionProperties@plt>:
    3330:	ff 25 4a 0e 01 00    	jmp    *0x10e4a(%rip)        # 14180 <vkEnumerateDeviceExtensionProperties@Base>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <__cxa_rethrow@plt>:
    3340:	ff 25 42 0e 01 00    	jmp    *0x10e42(%rip)        # 14188 <__cxa_rethrow@CXXABI_1.3>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <vkCreateDevice@plt>:
    3350:	ff 25 3a 0e 01 00    	jmp    *0x10e3a(%rip)        # 14190 <vkCreateDevice@Base>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSt8ios_base4InitC1Ev@plt>:
    3360:	ff 25 32 0e 01 00    	jmp    *0x10e32(%rip)        # 14198 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <glfwCreateWindowSurface@plt>:
    3370:	ff 25 2a 0e 01 00    	jmp    *0x10e2a(%rip)        # 141a0 <glfwCreateWindowSurface@Base>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <glfwCreateWindow@plt>:
    3380:	ff 25 22 0e 01 00    	jmp    *0x10e22(%rip)        # 141a8 <glfwCreateWindow@Base>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <memmove@plt>:
    3390:	ff 25 1a 0e 01 00    	jmp    *0x10e1a(%rip)        # 141b0 <memmove@GLIBC_2.2.5>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <__cxa_end_catch@plt>:
    33a0:	ff 25 12 0e 01 00    	jmp    *0x10e12(%rip)        # 141b8 <__cxa_end_catch@CXXABI_1.3>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <__cxa_throw@plt>:
    33b0:	ff 25 0a 0e 01 00    	jmp    *0x10e0a(%rip)        # 141c0 <__cxa_throw@CXXABI_1.3>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <vkDestroySurfaceKHR@plt>:
    33c0:	ff 25 02 0e 01 00    	jmp    *0x10e02(%rip)        # 141c8 <vkDestroySurfaceKHR@Base>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <_Unwind_Resume@plt>:
    33d0:	ff 25 fa 0d 01 00    	jmp    *0x10dfa(%rip)        # 141d0 <_Unwind_Resume@GCC_3.0>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <_ZNSaIcEC1Ev@plt>:
    33e0:	ff 25 f2 0d 01 00    	jmp    *0x10df2(%rip)        # 141d8 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    33f0:	ff 25 ea 0d 01 00    	jmp    *0x10dea(%rip)        # 141e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <glfwWindowShouldClose@plt>:
    3400:	ff 25 e2 0d 01 00    	jmp    *0x10de2(%rip)        # 141e8 <glfwWindowShouldClose@Base>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3410:	ff 25 da 0d 01 00    	jmp    *0x10dda(%rip)        # 141f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003420 <__cxa_finalize@plt>:
    3420:	ff 25 6a 0b 01 00    	jmp    *0x10b6a(%rip)        # 13f90 <__cxa_finalize@GLIBC_2.2.5>
    3426:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003430 <_start>:
    3430:	31 ed                	xor    %ebp,%ebp
    3432:	49 89 d1             	mov    %rdx,%r9
    3435:	5e                   	pop    %rsi
    3436:	48 89 e2             	mov    %rsp,%rdx
    3439:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    343d:	50                   	push   %rax
    343e:	54                   	push   %rsp
    343f:	45 31 c0             	xor    %r8d,%r8d
    3442:	31 c9                	xor    %ecx,%ecx
    3444:	48 8d 3d 66 01 00 00 	lea    0x166(%rip),%rdi        # 35b1 <main>
    344b:	ff 15 4f 0b 01 00    	call   *0x10b4f(%rip)        # 13fa0 <__libc_start_main@GLIBC_2.34>
    3451:	f4                   	hlt
    3452:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3459:	00 00 00 
    345c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003460 <deregister_tm_clones>:
    3460:	48 8d 3d b1 0d 01 00 	lea    0x10db1(%rip),%rdi        # 14218 <__TMC_END__>
    3467:	48 8d 05 aa 0d 01 00 	lea    0x10daa(%rip),%rax        # 14218 <__TMC_END__>
    346e:	48 39 f8             	cmp    %rdi,%rax
    3471:	74 15                	je     3488 <deregister_tm_clones+0x28>
    3473:	48 8b 05 36 0b 01 00 	mov    0x10b36(%rip),%rax        # 13fb0 <_ITM_deregisterTMCloneTable@Base>
    347a:	48 85 c0             	test   %rax,%rax
    347d:	74 09                	je     3488 <deregister_tm_clones+0x28>
    347f:	ff e0                	jmp    *%rax
    3481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3488:	c3                   	ret
    3489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003490 <register_tm_clones>:
    3490:	48 8d 3d 81 0d 01 00 	lea    0x10d81(%rip),%rdi        # 14218 <__TMC_END__>
    3497:	48 8d 35 7a 0d 01 00 	lea    0x10d7a(%rip),%rsi        # 14218 <__TMC_END__>
    349e:	48 29 fe             	sub    %rdi,%rsi
    34a1:	48 89 f0             	mov    %rsi,%rax
    34a4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    34a8:	48 c1 f8 03          	sar    $0x3,%rax
    34ac:	48 01 c6             	add    %rax,%rsi
    34af:	48 d1 fe             	sar    %rsi
    34b2:	74 14                	je     34c8 <register_tm_clones+0x38>
    34b4:	48 8b 05 05 0b 01 00 	mov    0x10b05(%rip),%rax        # 13fc0 <_ITM_registerTMCloneTable@Base>
    34bb:	48 85 c0             	test   %rax,%rax
    34be:	74 08                	je     34c8 <register_tm_clones+0x38>
    34c0:	ff e0                	jmp    *%rax
    34c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34c8:	c3                   	ret
    34c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000034d0 <__do_global_dtors_aux>:
    34d0:	f3 0f 1e fa          	endbr64
    34d4:	80 3d 55 0e 01 00 00 	cmpb   $0x0,0x10e55(%rip)        # 14330 <completed.0>
    34db:	75 2b                	jne    3508 <__do_global_dtors_aux+0x38>
    34dd:	55                   	push   %rbp
    34de:	48 83 3d aa 0a 01 00 	cmpq   $0x0,0x10aaa(%rip)        # 13f90 <__cxa_finalize@GLIBC_2.2.5>
    34e5:	00 
    34e6:	48 89 e5             	mov    %rsp,%rbp
    34e9:	74 0c                	je     34f7 <__do_global_dtors_aux+0x27>
    34eb:	48 8b 3d 0e 0d 01 00 	mov    0x10d0e(%rip),%rdi        # 14200 <__dso_handle>
    34f2:	e8 29 ff ff ff       	call   3420 <__cxa_finalize@plt>
    34f7:	e8 64 ff ff ff       	call   3460 <deregister_tm_clones>
    34fc:	c6 05 2d 0e 01 00 01 	movb   $0x1,0x10e2d(%rip)        # 14330 <completed.0>
    3503:	5d                   	pop    %rbp
    3504:	c3                   	ret
    3505:	0f 1f 00             	nopl   (%rax)
    3508:	c3                   	ret
    3509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003510 <frame_dummy>:
    3510:	f3 0f 1e fa          	endbr64
    3514:	e9 77 ff ff ff       	jmp    3490 <register_tm_clones>

0000000000003519 <_Z14protected_mainv>:
#include <neko.hpp>

#include <iostream>

int protected_main() {
    3519:	55                   	push   %rbp
    351a:	48 89 e5             	mov    %rsp,%rbp
    351d:	41 55                	push   %r13
    351f:	41 54                	push   %r12
    3521:	53                   	push   %rbx
    3522:	48 83 ec 18          	sub    $0x18,%rsp
  auto engine = new neko::Engine();
    3526:	bf f8 00 00 00       	mov    $0xf8,%edi
    352b:	e8 f0 fc ff ff       	call   3220 <_Znwm@plt>
    3530:	48 89 c3             	mov    %rax,%rbx
    3533:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    3539:	48 89 de             	mov    %rbx,%rsi
    353c:	b8 00 00 00 00       	mov    $0x0,%eax
    3541:	ba 1f 00 00 00       	mov    $0x1f,%edx
    3546:	48 89 f7             	mov    %rsi,%rdi
    3549:	48 89 d1             	mov    %rdx,%rcx
    354c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    354f:	48 89 df             	mov    %rbx,%rdi
    3552:	e8 05 05 00 00       	call   3a5c <_ZN4neko6EngineC1Ev>
    3557:	48 89 5d d8          	mov    %rbx,-0x28(%rbp)
  engine->start();
    355b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    355f:	48 89 c7             	mov    %rax,%rdi
    3562:	e8 8d 04 00 00       	call   39f4 <_ZN4neko6Engine5startEv>
  delete engine;
    3567:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    356b:	48 85 c0             	test   %rax,%rax
    356e:	74 0f                	je     357f <_Z14protected_mainv+0x66>
    3570:	48 8b 10             	mov    (%rax),%rdx
    3573:	48 83 c2 08          	add    $0x8,%rdx
    3577:	48 8b 12             	mov    (%rdx),%rdx
    357a:	48 89 c7             	mov    %rax,%rdi
    357d:	ff d2                	call   *%rdx
  return EXIT_SUCCESS;
    357f:	b8 00 00 00 00       	mov    $0x0,%eax
    3584:	eb 20                	jmp    35a6 <_Z14protected_mainv+0x8d>
  auto engine = new neko::Engine();
    3586:	49 89 c4             	mov    %rax,%r12
    3589:	45 84 ed             	test   %r13b,%r13b
    358c:	74 0d                	je     359b <_Z14protected_mainv+0x82>
    358e:	be f8 00 00 00       	mov    $0xf8,%esi
    3593:	48 89 df             	mov    %rbx,%rdi
    3596:	e8 95 fc ff ff       	call   3230 <_ZdlPvm@plt>
    359b:	4c 89 e0             	mov    %r12,%rax
    359e:	48 89 c7             	mov    %rax,%rdi
    35a1:	e8 2a fe ff ff       	call   33d0 <_Unwind_Resume@plt>
}
    35a6:	48 83 c4 18          	add    $0x18,%rsp
    35aa:	5b                   	pop    %rbx
    35ab:	41 5c                	pop    %r12
    35ad:	41 5d                	pop    %r13
    35af:	5d                   	pop    %rbp
    35b0:	c3                   	ret

00000000000035b1 <main>:

int main() {
    35b1:	55                   	push   %rbp
    35b2:	48 89 e5             	mov    %rsp,%rbp
    35b5:	53                   	push   %rbx
    35b6:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    35ba:	e8 5a ff ff ff       	call   3519 <_Z14protected_mainv>
    35bf:	e9 c1 00 00 00       	jmp    3685 <main+0xd4>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    35c4:	b8 01 00 00 00       	mov    $0x1,%eax
    35c9:	e9 b7 00 00 00       	jmp    3685 <main+0xd4>
  } catch (std::exception &e) {
    35ce:	48 83 fa 01          	cmp    $0x1,%rdx
    35d2:	75 4e                	jne    3622 <main+0x71>
    35d4:	48 89 c7             	mov    %rax,%rdi
    35d7:	e8 c4 fa ff ff       	call   30a0 <__cxa_begin_catch@plt>
    35dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    35e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35e4:	48 8b 00             	mov    (%rax),%rax
    35e7:	48 83 c0 10          	add    $0x10,%rax
    35eb:	48 8b 10             	mov    (%rax),%rdx
    35ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35f2:	48 89 c7             	mov    %rax,%rdi
    35f5:	ff d2                	call   *%rdx
    35f7:	48 89 c6             	mov    %rax,%rsi
    35fa:	48 8d 05 1f 0c 01 00 	lea    0x10c1f(%rip),%rax        # 14220 <_ZSt4cerr@GLIBCXX_3.4>
    3601:	48 89 c7             	mov    %rax,%rdi
    3604:	e8 07 fc ff ff       	call   3210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3609:	48 8b 15 88 09 01 00 	mov    0x10988(%rip),%rdx        # 13f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    3610:	48 89 d6             	mov    %rdx,%rsi
    3613:	48 89 c7             	mov    %rax,%rdi
    3616:	e8 55 fc ff ff       	call   3270 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    361b:	e8 80 fd ff ff       	call   33a0 <__cxa_end_catch@plt>
    3620:	eb a2                	jmp    35c4 <main+0x13>
    3622:	48 89 c7             	mov    %rax,%rdi
    3625:	e8 76 fa ff ff       	call   30a0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    362a:	48 8d 05 a6 80 00 00 	lea    0x80a6(%rip),%rax        # b6d7 <_ZN6__pstl9execution2v1L5unseqE+0x20>
    3631:	48 89 c6             	mov    %rax,%rsi
    3634:	48 8d 05 e5 0b 01 00 	lea    0x10be5(%rip),%rax        # 14220 <_ZSt4cerr@GLIBCXX_3.4>
    363b:	48 89 c7             	mov    %rax,%rdi
    363e:	e8 cd fb ff ff       	call   3210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3643:	48 8b 15 4e 09 01 00 	mov    0x1094e(%rip),%rdx        # 13f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    364a:	48 89 d6             	mov    %rdx,%rsi
    364d:	48 89 c7             	mov    %rax,%rdi
    3650:	e8 1b fc ff ff       	call   3270 <_ZNSolsEPFRSoS_E@plt>
  }
    3655:	e8 46 fd ff ff       	call   33a0 <__cxa_end_catch@plt>
    365a:	e9 65 ff ff ff       	jmp    35c4 <main+0x13>
  } catch (...) {
    365f:	48 89 c3             	mov    %rax,%rbx
    3662:	e8 39 fd ff ff       	call   33a0 <__cxa_end_catch@plt>
    3667:	48 89 d8             	mov    %rbx,%rax
    366a:	48 89 c7             	mov    %rax,%rdi
    366d:	e8 5e fd ff ff       	call   33d0 <_Unwind_Resume@plt>
  }
    3672:	48 89 c3             	mov    %rax,%rbx
    3675:	e8 26 fd ff ff       	call   33a0 <__cxa_end_catch@plt>
    367a:	48 89 d8             	mov    %rbx,%rax
    367d:	48 89 c7             	mov    %rax,%rdi
    3680:	e8 4b fd ff ff       	call   33d0 <_Unwind_Resume@plt>
    3685:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3689:	c9                   	leave
    368a:	c3                   	ret

000000000000368b <_Z41__static_initialization_and_destruction_0ii>:
    368b:	55                   	push   %rbp
    368c:	48 89 e5             	mov    %rsp,%rbp
    368f:	48 83 ec 10          	sub    $0x10,%rsp
    3693:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3696:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3699:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    369d:	75 3b                	jne    36da <_Z41__static_initialization_and_destruction_0ii+0x4f>
    369f:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    36a6:	75 32                	jne    36da <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    36a8:	48 8d 05 82 0c 01 00 	lea    0x10c82(%rip),%rax        # 14331 <_ZStL8__ioinit>
    36af:	48 89 c7             	mov    %rax,%rdi
    36b2:	e8 a9 fc ff ff       	call   3360 <_ZNSt8ios_base4InitC1Ev@plt>
    36b7:	48 8d 05 42 0b 01 00 	lea    0x10b42(%rip),%rax        # 14200 <__dso_handle>
    36be:	48 89 c2             	mov    %rax,%rdx
    36c1:	48 8d 05 69 0c 01 00 	lea    0x10c69(%rip),%rax        # 14331 <_ZStL8__ioinit>
    36c8:	48 89 c6             	mov    %rax,%rsi
    36cb:	48 8b 05 f6 08 01 00 	mov    0x108f6(%rip),%rax        # 13fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    36d2:	48 89 c7             	mov    %rax,%rdi
    36d5:	e8 06 fb ff ff       	call   31e0 <__cxa_atexit@plt>
    36da:	90                   	nop
    36db:	c9                   	leave
    36dc:	c3                   	ret

00000000000036dd <_GLOBAL__sub_I__Z14protected_mainv>:
    36dd:	55                   	push   %rbp
    36de:	48 89 e5             	mov    %rsp,%rbp
    36e1:	be ff ff 00 00       	mov    $0xffff,%esi
    36e6:	bf 01 00 00 00       	mov    $0x1,%edi
    36eb:	e8 9b ff ff ff       	call   368b <_Z41__static_initialization_and_destruction_0ii>
    36f0:	5d                   	pop    %rbp
    36f1:	c3                   	ret

00000000000036f2 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    36f2:	55                   	push   %rbp
    36f3:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    36f6:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    36fb:	5d                   	pop    %rbp
    36fc:	c3                   	ret

00000000000036fd <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    36fd:	55                   	push   %rbp
    36fe:	48 89 e5             	mov    %rsp,%rbp
    3701:	48 83 ec 10          	sub    $0x10,%rsp
    3705:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    3709:	e8 e4 ff ff ff       	call   36f2 <_ZSt23__is_constant_evaluatedv>
    370e:	84 c0                	test   %al,%al
    3710:	74 0e                	je     3720 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    3712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3716:	48 89 c7             	mov    %rax,%rdi
    3719:	e8 b6 04 00 00       	call   3bd4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    371e:	eb 0d                	jmp    372d <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    3720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3724:	48 89 c7             	mov    %rax,%rdi
    3727:	e8 94 f9 ff ff       	call   30c0 <strlen@plt>
    372c:	90                   	nop
      }
    372d:	c9                   	leave
    372e:	c3                   	ret
    372f:	90                   	nop

0000000000003730 <_ZN4neko12StaticObjectC1Ev>:
#else
inline constexpr bool debugMode = false;
#endif /* NDEBUG */

struct StaticObject {
  StaticObject() = default;
    3730:	55                   	push   %rbp
    3731:	48 89 e5             	mov    %rsp,%rbp
    3734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3738:	48 8d 15 d1 04 01 00 	lea    0x104d1(%rip),%rdx        # 13c10 <_ZTVN4neko12StaticObjectE+0x10>
    373f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3743:	48 89 10             	mov    %rdx,(%rax)
    3746:	90                   	nop
    3747:	5d                   	pop    %rbp
    3748:	c3                   	ret
    3749:	90                   	nop

000000000000374a <_ZN4neko12StaticObjectD1Ev>:
  StaticObject(const StaticObject &) = delete;
  StaticObject(StaticObject &&) = delete;
  StaticObject &operator=(const StaticObject &) = delete;
  StaticObject &operator=(StaticObject &&) = delete;
  virtual ~StaticObject() = default;
    374a:	55                   	push   %rbp
    374b:	48 89 e5             	mov    %rsp,%rbp
    374e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3752:	48 8d 15 b7 04 01 00 	lea    0x104b7(%rip),%rdx        # 13c10 <_ZTVN4neko12StaticObjectE+0x10>
    3759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    375d:	48 89 10             	mov    %rdx,(%rax)
    3760:	90                   	nop
    3761:	5d                   	pop    %rbp
    3762:	c3                   	ret
    3763:	90                   	nop

0000000000003764 <_ZN4neko12StaticObjectD0Ev>:
    3764:	55                   	push   %rbp
    3765:	48 89 e5             	mov    %rsp,%rbp
    3768:	48 83 ec 10          	sub    $0x10,%rsp
    376c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3774:	48 89 c7             	mov    %rax,%rdi
    3777:	e8 ce ff ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    377c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3780:	be 08 00 00 00       	mov    $0x8,%esi
    3785:	48 89 c7             	mov    %rax,%rdi
    3788:	e8 a3 fa ff ff       	call   3230 <_ZdlPvm@plt>
    378d:	c9                   	leave
    378e:	c3                   	ret
    378f:	90                   	nop

0000000000003790 <_ZN4neko7ContextC1Ev>:

class Context : public StaticObject {
public:
  using StaticObject::StaticObject;

  Context() {
    3790:	55                   	push   %rbp
    3791:	48 89 e5             	mov    %rsp,%rbp
    3794:	41 54                	push   %r12
    3796:	53                   	push   %rbx
    3797:	48 83 ec 10          	sub    $0x10,%rsp
    379b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    379f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37a3:	48 89 c7             	mov    %rax,%rdi
    37a6:	e8 85 ff ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    37ab:	48 8d 15 3e 04 01 00 	lea    0x1043e(%rip),%rdx        # 13bf0 <_ZTVN4neko7ContextE+0x10>
    37b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37b6:	48 89 10             	mov    %rdx,(%rax)
    if (glfwInit() != GLFW_TRUE) {
    37b9:	e8 12 fb ff ff       	call   32d0 <glfwInit@plt>
    37be:	83 f8 01             	cmp    $0x1,%eax
    37c1:	0f 95 c0             	setne  %al
    37c4:	84 c0                	test   %al,%al
    37c6:	74 65                	je     382d <_ZN4neko7ContextC1Ev+0x9d>
      throw std::runtime_error(
          "A bug or configuration error in GLFW, the underlying operating "
          "system or its drivers, or a lack of required resources.");
    37c8:	bf 10 00 00 00       	mov    $0x10,%edi
    37cd:	e8 fe f8 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    37d2:	48 89 c3             	mov    %rax,%rbx
      throw std::runtime_error(
    37d5:	48 8d 05 5c 7e 00 00 	lea    0x7e5c(%rip),%rax        # b638 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    37dc:	48 89 c6             	mov    %rax,%rsi
    37df:	48 89 df             	mov    %rbx,%rdi
    37e2:	e8 99 f8 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
          "system or its drivers, or a lack of required resources.");
    37e7:	48 8b 05 ba 07 01 00 	mov    0x107ba(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    37ee:	48 89 c2             	mov    %rax,%rdx
    37f1:	48 8d 05 a8 04 01 00 	lea    0x104a8(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    37f8:	48 89 c6             	mov    %rax,%rsi
    37fb:	48 89 df             	mov    %rbx,%rdi
    37fe:	e8 ad fb ff ff       	call   33b0 <__cxa_throw@plt>
    3803:	49 89 c4             	mov    %rax,%r12
    3806:	48 89 df             	mov    %rbx,%rdi
    3809:	e8 42 f9 ff ff       	call   3150 <__cxa_free_exception@plt>
    380e:	4c 89 e3             	mov    %r12,%rbx
    3811:	eb 03                	jmp    3816 <_ZN4neko7ContextC1Ev+0x86>
    }
  }
    3813:	48 89 c3             	mov    %rax,%rbx
    3816:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    381a:	48 89 c7             	mov    %rax,%rdi
    381d:	e8 28 ff ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3822:	48 89 d8             	mov    %rbx,%rax
    3825:	48 89 c7             	mov    %rax,%rdi
    3828:	e8 a3 fb ff ff       	call   33d0 <_Unwind_Resume@plt>
    382d:	90                   	nop
    382e:	48 83 c4 10          	add    $0x10,%rsp
    3832:	5b                   	pop    %rbx
    3833:	41 5c                	pop    %r12
    3835:	5d                   	pop    %rbp
    3836:	c3                   	ret
    3837:	90                   	nop

0000000000003838 <_ZN4neko7ContextD1Ev>:

  virtual ~Context() { glfwTerminate(); }
    3838:	55                   	push   %rbp
    3839:	48 89 e5             	mov    %rsp,%rbp
    383c:	48 83 ec 10          	sub    $0x10,%rsp
    3840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3844:	48 8d 15 a5 03 01 00 	lea    0x103a5(%rip),%rdx        # 13bf0 <_ZTVN4neko7ContextE+0x10>
    384b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    384f:	48 89 10             	mov    %rdx,(%rax)
    3852:	e8 f9 f9 ff ff       	call   3250 <glfwTerminate@plt>
    3857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    385b:	48 89 c7             	mov    %rax,%rdi
    385e:	e8 e7 fe ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3863:	90                   	nop
    3864:	c9                   	leave
    3865:	c3                   	ret

0000000000003866 <_ZN4neko7ContextD0Ev>:
    3866:	55                   	push   %rbp
    3867:	48 89 e5             	mov    %rsp,%rbp
    386a:	48 83 ec 10          	sub    $0x10,%rsp
    386e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3872:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3876:	48 89 c7             	mov    %rax,%rdi
    3879:	e8 ba ff ff ff       	call   3838 <_ZN4neko7ContextD1Ev>
    387e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3882:	be 08 00 00 00       	mov    $0x8,%esi
    3887:	48 89 c7             	mov    %rax,%rdi
    388a:	e8 a1 f9 ff ff       	call   3230 <_ZdlPvm@plt>
    388f:	c9                   	leave
    3890:	c3                   	ret
    3891:	90                   	nop

0000000000003892 <_ZN4neko8RendererC1ERKNS_8SettingsE>:

class Renderer : public StaticObject {
public:
  using StaticObject::StaticObject;

  explicit Renderer(const Settings &settings) : mSettings{settings} {}
    3892:	55                   	push   %rbp
    3893:	48 89 e5             	mov    %rsp,%rbp
    3896:	53                   	push   %rbx
    3897:	48 83 ec 18          	sub    $0x18,%rsp
    389b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    389f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    38a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38a7:	48 89 c7             	mov    %rax,%rdi
    38aa:	e8 81 fe ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    38af:	48 8d 15 1a 03 01 00 	lea    0x1031a(%rip),%rdx        # 13bd0 <_ZTVN4neko8RendererE+0x10>
    38b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38ba:	48 89 10             	mov    %rdx,(%rax)
    38bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    38c5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    38c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38cd:	48 83 c0 10          	add    $0x10,%rax
    38d1:	48 89 c7             	mov    %rax,%rdi
    38d4:	e8 b7 fe ff ff       	call   3790 <_ZN4neko7ContextC1Ev>
    38d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38dd:	48 8d 48 18          	lea    0x18(%rax),%rcx
    38e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38e5:	48 8b 40 08          	mov    0x8(%rax),%rax
    38e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    38ed:	48 83 c2 10          	add    $0x10,%rdx
    38f1:	48 89 c6             	mov    %rax,%rsi
    38f4:	48 89 cf             	mov    %rcx,%rdi
    38f7:	e8 82 53 00 00       	call   8c7e <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE>
    38fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3900:	48 8d 50 38          	lea    0x38(%rax),%rdx
    3904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3908:	48 8b 40 08          	mov    0x8(%rax),%rax
    390c:	48 89 c6             	mov    %rax,%rsi
    390f:	48 89 d7             	mov    %rdx,%rdi
    3912:	e8 19 65 00 00       	call   9e30 <_ZN4neko6WindowC1ERKNS_8SettingsE>
    3917:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    391b:	48 83 c0 50          	add    $0x50,%rax
    391f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3923:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
    3927:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    392b:	48 83 c2 38          	add    $0x38,%rdx
    392f:	48 89 ce             	mov    %rcx,%rsi
    3932:	48 89 c7             	mov    %rax,%rdi
    3935:	e8 4c 66 00 00       	call   9f86 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>
    393a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    393e:	48 83 c0 68          	add    $0x68,%rax
    3942:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3946:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
    394a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    394e:	48 83 c2 50          	add    $0x50,%rdx
    3952:	48 89 ce             	mov    %rcx,%rsi
    3955:	48 89 c7             	mov    %rax,%rdi
    3958:	e8 35 06 00 00       	call   3f92 <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE>
    395d:	eb 6e                	jmp    39cd <_ZN4neko8RendererC1ERKNS_8SettingsE+0x13b>
    395f:	48 89 c3             	mov    %rax,%rbx
    3962:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3966:	48 83 c0 50          	add    $0x50,%rax
    396a:	48 89 c7             	mov    %rax,%rdi
    396d:	e8 02 67 00 00       	call   a074 <_ZN4neko7SurfaceD1Ev>
    3972:	eb 03                	jmp    3977 <_ZN4neko8RendererC1ERKNS_8SettingsE+0xe5>
    3974:	48 89 c3             	mov    %rax,%rbx
    3977:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    397b:	48 83 c0 38          	add    $0x38,%rax
    397f:	48 89 c7             	mov    %rax,%rdi
    3982:	e8 69 65 00 00       	call   9ef0 <_ZN4neko6WindowD1Ev>
    3987:	eb 03                	jmp    398c <_ZN4neko8RendererC1ERKNS_8SettingsE+0xfa>
    3989:	48 89 c3             	mov    %rax,%rbx
    398c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3990:	48 83 c0 18          	add    $0x18,%rax
    3994:	48 89 c7             	mov    %rax,%rdi
    3997:	e8 9e 56 00 00       	call   903a <_ZN4neko8InstanceD1Ev>
    399c:	eb 03                	jmp    39a1 <_ZN4neko8RendererC1ERKNS_8SettingsE+0x10f>
    399e:	48 89 c3             	mov    %rax,%rbx
    39a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39a5:	48 83 c0 10          	add    $0x10,%rax
    39a9:	48 89 c7             	mov    %rax,%rdi
    39ac:	e8 87 fe ff ff       	call   3838 <_ZN4neko7ContextD1Ev>
    39b1:	eb 03                	jmp    39b6 <_ZN4neko8RendererC1ERKNS_8SettingsE+0x124>
    39b3:	48 89 c3             	mov    %rax,%rbx
    39b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39ba:	48 89 c7             	mov    %rax,%rdi
    39bd:	e8 88 fd ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    39c2:	48 89 d8             	mov    %rbx,%rax
    39c5:	48 89 c7             	mov    %rax,%rdi
    39c8:	e8 03 fa ff ff       	call   33d0 <_Unwind_Resume@plt>
    39cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    39d1:	c9                   	leave
    39d2:	c3                   	ret
    39d3:	90                   	nop

00000000000039d4 <_ZN4neko8Renderer5startEv>:

  virtual ~Renderer() = default;

  void start() { mWindow.open(); };
    39d4:	55                   	push   %rbp
    39d5:	48 89 e5             	mov    %rsp,%rbp
    39d8:	48 83 ec 10          	sub    $0x10,%rsp
    39dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39e4:	48 83 c0 38          	add    $0x38,%rax
    39e8:	48 89 c7             	mov    %rax,%rdi
    39eb:	e8 66 65 00 00       	call   9f56 <_ZN4neko6Window4openEv>
    39f0:	90                   	nop
    39f1:	c9                   	leave
    39f2:	c3                   	ret
    39f3:	90                   	nop

00000000000039f4 <_ZN4neko6Engine5startEv>:
public:
  using StaticObject::StaticObject;

  virtual ~Engine() = default;

  void start() { mRenderer.start(); };
    39f4:	55                   	push   %rbp
    39f5:	48 89 e5             	mov    %rsp,%rbp
    39f8:	48 83 ec 10          	sub    $0x10,%rsp
    39fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a04:	48 83 c0 68          	add    $0x68,%rax
    3a08:	48 89 c7             	mov    %rax,%rdi
    3a0b:	e8 c4 ff ff ff       	call   39d4 <_ZN4neko8Renderer5startEv>
    3a10:	90                   	nop
    3a11:	c9                   	leave
    3a12:	c3                   	ret
    3a13:	90                   	nop

0000000000003a14 <_ZN4neko8SettingsUt_D1Ev>:
  MoveOnlyObject &operator=(MoveOnlyObject &&) = default;
  virtual ~MoveOnlyObject() = default;
};

struct Settings {
  struct {
    3a14:	55                   	push   %rbp
    3a15:	48 89 e5             	mov    %rsp,%rbp
    3a18:	48 83 ec 10          	sub    $0x10,%rsp
    3a1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a24:	48 83 c0 28          	add    $0x28,%rax
    3a28:	48 89 c7             	mov    %rax,%rdi
    3a2b:	e8 e0 f6 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    3a30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a34:	48 89 c7             	mov    %rax,%rdi
    3a37:	e8 d4 f6 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    3a3c:	90                   	nop
    3a3d:	c9                   	leave
    3a3e:	c3                   	ret
    3a3f:	90                   	nop

0000000000003a40 <_ZN4neko8SettingsD1Ev>:
struct Settings {
    3a40:	55                   	push   %rbp
    3a41:	48 89 e5             	mov    %rsp,%rbp
    3a44:	48 83 ec 10          	sub    $0x10,%rsp
    3a48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a50:	48 89 c7             	mov    %rax,%rdi
    3a53:	e8 bc ff ff ff       	call   3a14 <_ZN4neko8SettingsUt_D1Ev>
    3a58:	90                   	nop
    3a59:	c9                   	leave
    3a5a:	c3                   	ret
    3a5b:	90                   	nop

0000000000003a5c <_ZN4neko6EngineC1Ev>:
class Engine : public StaticObject {
    3a5c:	55                   	push   %rbp
    3a5d:	48 89 e5             	mov    %rsp,%rbp
    3a60:	41 54                	push   %r12
    3a62:	53                   	push   %rbx
    3a63:	48 83 ec 20          	sub    $0x20,%rsp
    3a67:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3a6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a6f:	48 89 c7             	mov    %rax,%rdi
    3a72:	e8 b9 fc ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    3a77:	48 8d 15 32 01 01 00 	lea    0x10132(%rip),%rdx        # 13bb0 <_ZTVN4neko6EngineE+0x10>
    3a7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a82:	48 89 10             	mov    %rdx,(%rax)
    3a85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a89:	48 8d 50 08          	lea    0x8(%rax),%rdx
    3a8d:	b8 00 00 00 00       	mov    $0x0,%eax
    3a92:	b9 0c 00 00 00       	mov    $0xc,%ecx
    3a97:	48 89 d7             	mov    %rdx,%rdi
    3a9a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    3a9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aa1:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
    3aa8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aac:	c7 40 50 00 00 40 00 	movl   $0x400000,0x50(%rax)
    3ab3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ab7:	c7 40 54 00 30 40 00 	movl   $0x403000,0x54(%rax)
    3abe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ac2:	c7 40 58 20 03 00 00 	movl   $0x320,0x58(%rax)
    3ac9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3acd:	c7 40 5c 58 02 00 00 	movl   $0x258,0x5c(%rax)
    3ad4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ad8:	48 8d 58 08          	lea    0x8(%rax),%rbx
    3adc:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    3ae0:	48 89 c7             	mov    %rax,%rdi
    3ae3:	e8 f8 f8 ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    3ae8:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    3aec:	48 89 c2             	mov    %rax,%rdx
    3aef:	48 8d 05 c2 7b 00 00 	lea    0x7bc2(%rip),%rax        # b6b8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    3af6:	48 89 c6             	mov    %rax,%rsi
    3af9:	48 89 df             	mov    %rbx,%rdi
    3afc:	e8 35 01 00 00       	call   3c36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    3b01:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3b07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b0b:	48 8d 58 30          	lea    0x30(%rax),%rbx
    3b0f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b13:	48 89 c7             	mov    %rax,%rdi
    3b16:	e8 c5 f8 ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    3b1b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b1f:	48 89 c2             	mov    %rax,%rdx
    3b22:	48 8d 05 a2 7b 00 00 	lea    0x7ba2(%rip),%rax        # b6cb <_ZN6__pstl9execution2v1L5unseqE+0x14>
    3b29:	48 89 c6             	mov    %rax,%rsi
    3b2c:	48 89 df             	mov    %rbx,%rdi
    3b2f:	e8 02 01 00 00       	call   3c36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    3b34:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b38:	48 89 c7             	mov    %rax,%rdi
    3b3b:	e8 60 f7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    3b40:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    3b44:	48 89 c7             	mov    %rax,%rdi
    3b47:	e8 54 f7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    3b4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b50:	48 83 c0 68          	add    $0x68,%rax
    3b54:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3b58:	48 83 c2 08          	add    $0x8,%rdx
    3b5c:	48 89 d6             	mov    %rdx,%rsi
    3b5f:	48 89 c7             	mov    %rax,%rdi
    3b62:	e8 2b fd ff ff       	call   3892 <_ZN4neko8RendererC1ERKNS_8SettingsE>
    3b67:	eb 61                	jmp    3bca <_ZN4neko6EngineC1Ev+0x16e>
    3b69:	48 89 c3             	mov    %rax,%rbx
    3b6c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b70:	48 89 c7             	mov    %rax,%rdi
    3b73:	e8 28 f7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    3b78:	45 84 e4             	test   %r12b,%r12b
    3b7b:	74 15                	je     3b92 <_ZN4neko6EngineC1Ev+0x136>
    3b7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b81:	48 83 c0 08          	add    $0x8,%rax
    3b85:	48 89 c7             	mov    %rax,%rdi
    3b88:	e8 83 f5 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    3b8d:	eb 03                	jmp    3b92 <_ZN4neko6EngineC1Ev+0x136>
    3b8f:	48 89 c3             	mov    %rax,%rbx
    3b92:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    3b96:	48 89 c7             	mov    %rax,%rdi
    3b99:	e8 02 f7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    3b9e:	eb 13                	jmp    3bb3 <_ZN4neko6EngineC1Ev+0x157>
    3ba0:	48 89 c3             	mov    %rax,%rbx
    3ba3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ba7:	48 83 c0 08          	add    $0x8,%rax
    3bab:	48 89 c7             	mov    %rax,%rdi
    3bae:	e8 8d fe ff ff       	call   3a40 <_ZN4neko8SettingsD1Ev>
    3bb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3bb7:	48 89 c7             	mov    %rax,%rdi
    3bba:	e8 8b fb ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3bbf:	48 89 d8             	mov    %rbx,%rax
    3bc2:	48 89 c7             	mov    %rax,%rdi
    3bc5:	e8 06 f8 ff ff       	call   33d0 <_Unwind_Resume@plt>
    3bca:	48 83 c4 20          	add    $0x20,%rsp
    3bce:	5b                   	pop    %rbx
    3bcf:	41 5c                	pop    %r12
    3bd1:	5d                   	pop    %rbp
    3bd2:	c3                   	ret
    3bd3:	90                   	nop

0000000000003bd4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    3bd4:	55                   	push   %rbp
    3bd5:	48 89 e5             	mov    %rsp,%rbp
    3bd8:	48 83 ec 20          	sub    $0x20,%rsp
    3bdc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    3be0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3be7:	00 
      while (!eq(__p[__i], char_type()))
    3be8:	eb 05                	jmp    3bef <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    3bea:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    3bef:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    3bf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bfb:	48 01 c2             	add    %rax,%rdx
    3bfe:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    3c02:	48 89 c6             	mov    %rax,%rsi
    3c05:	48 89 d7             	mov    %rdx,%rdi
    3c08:	e8 c9 00 00 00       	call   3cd6 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    3c0d:	83 f0 01             	xor    $0x1,%eax
    3c10:	84 c0                	test   %al,%al
    3c12:	75 d6                	jne    3bea <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    3c14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3c18:	c9                   	leave
    3c19:	c3                   	ret

0000000000003c1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    3c1a:	55                   	push   %rbp
    3c1b:	48 89 e5             	mov    %rsp,%rbp
    3c1e:	48 83 ec 10          	sub    $0x10,%rsp
    3c22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c2a:	48 89 c7             	mov    %rax,%rdi
    3c2d:	e8 1e f4 ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    3c32:	90                   	nop
    3c33:	c9                   	leave
    3c34:	c3                   	ret
    3c35:	90                   	nop

0000000000003c36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    3c36:	55                   	push   %rbp
    3c37:	48 89 e5             	mov    %rsp,%rbp
    3c3a:	53                   	push   %rbx
    3c3b:	48 83 ec 38          	sub    $0x38,%rsp
    3c3f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3c43:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3c47:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    3c4b:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    3c4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c53:	48 89 c7             	mov    %rax,%rdi
    3c56:	e8 45 f5 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    3c5b:	48 89 c1             	mov    %rax,%rcx
    3c5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3c62:	48 89 c2             	mov    %rax,%rdx
    3c65:	48 89 ce             	mov    %rcx,%rsi
    3c68:	48 89 df             	mov    %rbx,%rdi
    3c6b:	e8 10 f6 ff ff       	call   3280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    3c70:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    3c75:	75 0f                	jne    3c86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    3c77:	48 8d 05 72 7a 00 00 	lea    0x7a72(%rip),%rax        # b6f0 <_ZN6__pstl9execution2v1L5unseqE+0x39>
    3c7e:	48 89 c7             	mov    %rax,%rdi
    3c81:	e8 ba f4 ff ff       	call   3140 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    3c86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c8a:	48 89 c7             	mov    %rax,%rdi
    3c8d:	e8 6b fa ff ff       	call   36fd <_ZNSt11char_traitsIcE6lengthEPKc>
    3c92:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3c96:	48 01 d0             	add    %rdx,%rax
    3c99:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    3c9d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ca1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3ca5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ca9:	48 89 ce             	mov    %rcx,%rsi
    3cac:	48 89 c7             	mov    %rax,%rdi
    3caf:	e8 88 00 00 00       	call   3d3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    3cb4:	eb 1a                	jmp    3cd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    3cb6:	48 89 c3             	mov    %rax,%rbx
    3cb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3cbd:	48 89 c7             	mov    %rax,%rdi
    3cc0:	e8 55 ff ff ff       	call   3c1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    3cc5:	48 89 d8             	mov    %rbx,%rax
    3cc8:	48 89 c7             	mov    %rax,%rdi
    3ccb:	e8 00 f7 ff ff       	call   33d0 <_Unwind_Resume@plt>
    3cd0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3cd4:	c9                   	leave
    3cd5:	c3                   	ret

0000000000003cd6 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    3cd6:	55                   	push   %rbp
    3cd7:	48 89 e5             	mov    %rsp,%rbp
    3cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    3ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ce6:	0f b6 10             	movzbl (%rax),%edx
    3ce9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3ced:	0f b6 00             	movzbl (%rax),%eax
    3cf0:	38 c2                	cmp    %al,%dl
    3cf2:	0f 94 c0             	sete   %al
    3cf5:	5d                   	pop    %rbp
    3cf6:	c3                   	ret
    3cf7:	90                   	nop

0000000000003cf8 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    3cf8:	55                   	push   %rbp
    3cf9:	48 89 e5             	mov    %rsp,%rbp
    3cfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d0c:	48 89 10             	mov    %rdx,(%rax)
    3d0f:	90                   	nop
    3d10:	5d                   	pop    %rbp
    3d11:	c3                   	ret

0000000000003d12 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    3d12:	55                   	push   %rbp
    3d13:	48 89 e5             	mov    %rsp,%rbp
    3d16:	48 83 ec 10          	sub    $0x10,%rsp
    3d1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d22:	48 8b 00             	mov    (%rax),%rax
    3d25:	48 85 c0             	test   %rax,%rax
    3d28:	74 0f                	je     3d39 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    3d2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d2e:	48 8b 00             	mov    (%rax),%rax
    3d31:	48 89 c7             	mov    %rax,%rdi
    3d34:	e8 c7 f5 ff ff       	call   3300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    3d39:	90                   	nop
    3d3a:	c9                   	leave
    3d3b:	c3                   	ret

0000000000003d3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    3d3c:	55                   	push   %rbp
    3d3d:	48 89 e5             	mov    %rsp,%rbp
    3d40:	48 83 ec 40          	sub    $0x40,%rsp
    3d44:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3d48:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3d4c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    3d50:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3d54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3d58:	48 89 d6             	mov    %rdx,%rsi
    3d5b:	48 89 c7             	mov    %rax,%rdi
    3d5e:	e8 c0 00 00 00       	call   3e23 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    3d63:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    3d67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d6b:	48 83 f8 0f          	cmp    $0xf,%rax
    3d6f:	76 3f                	jbe    3db0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    3d71:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    3d75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d79:	ba 00 00 00 00       	mov    $0x0,%edx
    3d7e:	48 89 ce             	mov    %rcx,%rsi
    3d81:	48 89 c7             	mov    %rax,%rdi
    3d84:	e8 67 f6 ff ff       	call   33f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    3d89:	48 89 c2             	mov    %rax,%rdx
    3d8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d90:	48 89 d6             	mov    %rdx,%rsi
    3d93:	48 89 c7             	mov    %rax,%rdi
    3d96:	e8 25 f4 ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    3d9b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3da3:	48 89 d6             	mov    %rdx,%rsi
    3da6:	48 89 c7             	mov    %rax,%rdi
    3da9:	e8 62 f6 ff ff       	call   3410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    3dae:	eb 15                	jmp    3dc5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    3db0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3db4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    3db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dbc:	48 89 c7             	mov    %rax,%rdi
    3dbf:	e8 dc f3 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    3dc4:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    3dc5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3dc9:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3dcd:	48 89 d6             	mov    %rdx,%rsi
    3dd0:	48 89 c7             	mov    %rax,%rdi
    3dd3:	e8 20 ff ff ff       	call   3cf8 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    3dd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ddc:	48 89 c7             	mov    %rax,%rdi
    3ddf:	e8 cc f4 ff ff       	call   32b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    3de4:	48 89 c1             	mov    %rax,%rcx
    3de7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3deb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3def:	48 89 c6             	mov    %rax,%rsi
    3df2:	48 89 cf             	mov    %rcx,%rdi
    3df5:	e8 c6 f4 ff ff       	call   32c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    3dfa:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3e01:	00 

	_M_set_length(__dnew);
    3e02:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e0a:	48 89 d6             	mov    %rdx,%rsi
    3e0d:	48 89 c7             	mov    %rax,%rdi
    3e10:	e8 0b f3 ff ff       	call   3120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    3e15:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3e19:	48 89 c7             	mov    %rax,%rdi
    3e1c:	e8 f1 fe ff ff       	call   3d12 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    3e21:	c9                   	leave
    3e22:	c3                   	ret

0000000000003e23 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    3e23:	55                   	push   %rbp
    3e24:	48 89 e5             	mov    %rsp,%rbp
    3e27:	48 83 ec 10          	sub    $0x10,%rsp
    3e2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    3e33:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3e37:	48 89 c7             	mov    %rax,%rdi
    3e3a:	e8 15 00 00 00       	call   3e54 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    3e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e47:	48 89 d6             	mov    %rdx,%rsi
    3e4a:	48 89 c7             	mov    %rax,%rdi
    3e4d:	e8 0d 00 00 00       	call   3e5f <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    3e52:	c9                   	leave
    3e53:	c3                   	ret

0000000000003e54 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    3e54:	55                   	push   %rbp
    3e55:	48 89 e5             	mov    %rsp,%rbp
    3e58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    3e5c:	90                   	nop
    3e5d:	5d                   	pop    %rbp
    3e5e:	c3                   	ret

0000000000003e5f <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    3e5f:	55                   	push   %rbp
    3e60:	48 89 e5             	mov    %rsp,%rbp
    3e63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    3e6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3e6f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    3e73:	5d                   	pop    %rbp
    3e74:	c3                   	ret
    3e75:	90                   	nop

0000000000003e76 <_ZN4neko6EngineD1Ev>:
  virtual ~Engine() = default;
    3e76:	55                   	push   %rbp
    3e77:	48 89 e5             	mov    %rsp,%rbp
    3e7a:	48 83 ec 10          	sub    $0x10,%rsp
    3e7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e82:	48 8d 15 27 fd 00 00 	lea    0xfd27(%rip),%rdx        # 13bb0 <_ZTVN4neko6EngineE+0x10>
    3e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e8d:	48 89 10             	mov    %rdx,(%rax)
    3e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e94:	48 83 c0 68          	add    $0x68,%rax
    3e98:	48 89 c7             	mov    %rax,%rdi
    3e9b:	e8 4c 00 00 00       	call   3eec <_ZN4neko8RendererD1Ev>
    3ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ea4:	48 83 c0 08          	add    $0x8,%rax
    3ea8:	48 89 c7             	mov    %rax,%rdi
    3eab:	e8 90 fb ff ff       	call   3a40 <_ZN4neko8SettingsD1Ev>
    3eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3eb4:	48 89 c7             	mov    %rax,%rdi
    3eb7:	e8 8e f8 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3ebc:	90                   	nop
    3ebd:	c9                   	leave
    3ebe:	c3                   	ret
    3ebf:	90                   	nop

0000000000003ec0 <_ZN4neko6EngineD0Ev>:
    3ec0:	55                   	push   %rbp
    3ec1:	48 89 e5             	mov    %rsp,%rbp
    3ec4:	48 83 ec 10          	sub    $0x10,%rsp
    3ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ed0:	48 89 c7             	mov    %rax,%rdi
    3ed3:	e8 9e ff ff ff       	call   3e76 <_ZN4neko6EngineD1Ev>
    3ed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3edc:	be f8 00 00 00       	mov    $0xf8,%esi
    3ee1:	48 89 c7             	mov    %rax,%rdi
    3ee4:	e8 47 f3 ff ff       	call   3230 <_ZdlPvm@plt>
    3ee9:	c9                   	leave
    3eea:	c3                   	ret
    3eeb:	90                   	nop

0000000000003eec <_ZN4neko8RendererD1Ev>:
  virtual ~Renderer() = default;
    3eec:	55                   	push   %rbp
    3eed:	48 89 e5             	mov    %rsp,%rbp
    3ef0:	48 83 ec 10          	sub    $0x10,%rsp
    3ef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ef8:	48 8d 15 d1 fc 00 00 	lea    0xfcd1(%rip),%rdx        # 13bd0 <_ZTVN4neko8RendererE+0x10>
    3eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f03:	48 89 10             	mov    %rdx,(%rax)
    3f06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f0a:	48 83 c0 68          	add    $0x68,%rax
    3f0e:	48 89 c7             	mov    %rax,%rdi
    3f11:	e8 1c 03 00 00       	call   4232 <_ZN4neko13LogicalDeviceD1Ev>
    3f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f1a:	48 83 c0 50          	add    $0x50,%rax
    3f1e:	48 89 c7             	mov    %rax,%rdi
    3f21:	e8 4e 61 00 00       	call   a074 <_ZN4neko7SurfaceD1Ev>
    3f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f2a:	48 83 c0 38          	add    $0x38,%rax
    3f2e:	48 89 c7             	mov    %rax,%rdi
    3f31:	e8 ba 5f 00 00       	call   9ef0 <_ZN4neko6WindowD1Ev>
    3f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f3a:	48 83 c0 18          	add    $0x18,%rax
    3f3e:	48 89 c7             	mov    %rax,%rdi
    3f41:	e8 f4 50 00 00       	call   903a <_ZN4neko8InstanceD1Ev>
    3f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f4a:	48 83 c0 10          	add    $0x10,%rax
    3f4e:	48 89 c7             	mov    %rax,%rdi
    3f51:	e8 e2 f8 ff ff       	call   3838 <_ZN4neko7ContextD1Ev>
    3f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f5a:	48 89 c7             	mov    %rax,%rdi
    3f5d:	e8 e8 f7 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3f62:	90                   	nop
    3f63:	c9                   	leave
    3f64:	c3                   	ret
    3f65:	90                   	nop

0000000000003f66 <_ZN4neko8RendererD0Ev>:
    3f66:	55                   	push   %rbp
    3f67:	48 89 e5             	mov    %rsp,%rbp
    3f6a:	48 83 ec 10          	sub    $0x10,%rsp
    3f6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f76:	48 89 c7             	mov    %rax,%rdi
    3f79:	e8 6e ff ff ff       	call   3eec <_ZN4neko8RendererD1Ev>
    3f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f82:	be 90 00 00 00       	mov    $0x90,%esi
    3f87:	48 89 c7             	mov    %rax,%rdi
    3f8a:	e8 a1 f2 ff ff       	call   3230 <_ZdlPvm@plt>
    3f8f:	c9                   	leave
    3f90:	c3                   	ret
    3f91:	90                   	nop

0000000000003f92 <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE>:
#include <map>
#include <optional>

namespace neko {

LogicalDevice::LogicalDevice(const Instance &crInstance,
    3f92:	55                   	push   %rbp
    3f93:	48 89 e5             	mov    %rsp,%rbp
    3f96:	41 54                	push   %r12
    3f98:	53                   	push   %rbx
    3f99:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    3fa0:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
    3fa7:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
    3fae:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
                             const Surface &crSurface) {
    3fb5:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3fbc:	48 89 c7             	mov    %rax,%rdi
    3fbf:	e8 6c f7 ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    3fc4:	48 8d 15 65 fc 00 00 	lea    0xfc65(%rip),%rdx        # 13c30 <_ZTVN4neko13LogicalDeviceE+0x10>
    3fcb:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3fd2:	48 89 10             	mov    %rdx,(%rax)
  VkPhysicalDevice selectedPhysicalDevice =
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    3fd5:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    3fdc:	48 89 c7             	mov    %rax,%rdi
    3fdf:	e8 f4 0d 00 00       	call   4dd8 <_ZNK4neko8InstancedeEv>
    3fe4:	48 8b 10             	mov    (%rax),%rdx
    3fe7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3feb:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    3ff2:	48 89 ce             	mov    %rcx,%rsi
    3ff5:	48 89 c7             	mov    %rax,%rdi
    3ff8:	e8 cf 0b 00 00       	call   4bcc <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T>
    3ffd:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    4001:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    4008:	48 89 d6             	mov    %rdx,%rsi
    400b:	48 89 c7             	mov    %rax,%rdi
    400e:	e8 b1 04 00 00       	call   44c4 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>
    4013:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4017:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    401b:	48 89 c7             	mov    %rax,%rdi
    401e:	e8 c7 0e 00 00       	call   4eea <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>

  uint32_t selectedQueueFamilyIndex =
      selectUniversalQueueFamily(selectedPhysicalDevice, *crSurface);
    4023:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    402a:	48 89 c7             	mov    %rax,%rdi
    402d:	e8 b8 0d 00 00       	call   4dea <_ZNK4neko7SurfacedeEv>
    4032:	48 8b 10             	mov    (%rax),%rdx
    4035:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    4039:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    4040:	48 89 ce             	mov    %rcx,%rsi
    4043:	48 89 c7             	mov    %rax,%rdi
    4046:	e8 51 02 00 00       	call   429c <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
    404b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  uint32_t selectedQueueIndex = 0;
    404e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)

  float queuePriority = 1.0f;
    4055:	f3 0f 10 05 df 7e 00 	movss  0x7edf(%rip),%xmm0        # bf3c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x18c>
    405c:	00 
    405d:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)

  /* Populate the selected queue family's creation info */
  VkDeviceQueueCreateInfo queueInfo{};
    4062:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4066:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    406d:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    4074:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    407b:	ff 
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    407c:	c7 85 50 fe ff ff 02 	movl   $0x2,-0x1b0(%rbp)
    4083:	00 00 00 
  queueInfo.pNext = nullptr;
    4086:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    408d:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedQueueFamilyIndex;
    4091:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4094:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  queueInfo.queueCount = 1;
    409a:	c7 85 68 fe ff ff 01 	movl   $0x1,-0x198(%rbp)
    40a1:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    40a4:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    40a8:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)

  VkPhysicalDeviceFeatures deviceFeatures{};
    40af:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    40b6:	b8 00 00 00 00       	mov    $0x0,%eax
    40bb:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    40c0:	48 89 d7             	mov    %rdx,%rdi
    40c3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    40c6:	48 89 fa             	mov    %rdi,%rdx
    40c9:	89 02                	mov    %eax,(%rdx)
    40cb:	48 83 c2 04          	add    $0x4,%rdx
  //   deviceFeatures.samplerAnisotropy = VK_TRUE;
  //   deviceFeatures.sampleRateShading = VK_TRUE;

  /* Populate the logical device's creation info */
  VkDeviceCreateInfo deviceInfo{};
    40cf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    40d3:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    40da:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    40e1:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
    40e8:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    40ef:	66 0f d6 85 c0 fe ff 	movq   %xmm0,-0x140(%rbp)
    40f6:	ff 
  deviceInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    40f7:	c7 85 80 fe ff ff 03 	movl   $0x3,-0x180(%rbp)
    40fe:	00 00 00 
  deviceInfo.queueCreateInfoCount = 1;
    4101:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    4108:	00 00 00 
  deviceInfo.pQueueCreateInfos = &queueInfo;
    410b:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    4112:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  deviceInfo.pEnabledFeatures = &deviceFeatures;
    4119:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    4120:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)

  /* Create a logical device */
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    4127:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    412e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4132:	48 8d b5 80 fe ff ff 	lea    -0x180(%rbp),%rsi
    4139:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    413d:	48 89 d1             	mov    %rdx,%rcx
    4140:	ba 00 00 00 00       	mov    $0x0,%edx
    4145:	48 89 c7             	mov    %rax,%rdi
    4148:	e8 03 f2 ff ff       	call   3350 <vkCreateDevice@plt>
                     &mLogicalDevice) != VK_SUCCESS) {
    414d:	85 c0                	test   %eax,%eax
    414f:	0f 95 c0             	setne  %al
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    4152:	84 c0                	test   %al,%al
    4154:	74 3b                	je     4191 <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x1ff>
    throw std::runtime_error("Failed to create logical device.");
    4156:	bf 10 00 00 00       	mov    $0x10,%edi
    415b:	e8 70 ef ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4160:	48 89 c3             	mov    %rax,%rbx
    4163:	48 8d 05 4e 7c 00 00 	lea    0x7c4e(%rip),%rax        # bdb8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    416a:	48 89 c6             	mov    %rax,%rsi
    416d:	48 89 df             	mov    %rbx,%rdi
    4170:	e8 0b ef ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4175:	48 8b 05 2c fe 00 00 	mov    0xfe2c(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    417c:	48 89 c2             	mov    %rax,%rdx
    417f:	48 8d 05 1a fb 00 00 	lea    0xfb1a(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4186:	48 89 c6             	mov    %rax,%rsi
    4189:	48 89 df             	mov    %rbx,%rdi
    418c:	e8 1f f2 ff ff       	call   33b0 <__cxa_throw@plt>
  }

  /* Get handles */
  mPhysicalDevice = selectedPhysicalDevice;
    4191:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    4198:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    419c:	48 89 50 10          	mov    %rdx,0x10(%rax)

  VkQueue queueHandle;
  vkGetDeviceQueue(mLogicalDevice, selectedQueueFamilyIndex, selectedQueueIndex,
    41a0:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    41a7:	48 8b 40 08          	mov    0x8(%rax),%rax
    41ab:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    41af:	8b 55 e0             	mov    -0x20(%rbp),%edx
    41b2:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    41b5:	48 89 c7             	mov    %rax,%rdi
    41b8:	e8 63 f1 ff ff       	call   3320 <vkGetDeviceQueue@plt>
                   &queueHandle);
  mQueue = {selectedQueueFamilyIndex, selectedQueueIndex, queueHandle};
    41bd:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    41c1:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    41c8:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    41cb:	89 48 18             	mov    %ecx,0x18(%rax)
    41ce:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    41d5:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    41d8:	89 48 1c             	mov    %ecx,0x1c(%rax)
    41db:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    41e2:	48 89 50 20          	mov    %rdx,0x20(%rax)
}
    41e6:	eb 3e                	jmp    4226 <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x294>
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    41e8:	48 89 c3             	mov    %rax,%rbx
    41eb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    41ef:	48 89 c7             	mov    %rax,%rdi
    41f2:	e8 f3 0c 00 00       	call   4eea <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    41f7:	eb 13                	jmp    420c <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x27a>
    throw std::runtime_error("Failed to create logical device.");
    41f9:	49 89 c4             	mov    %rax,%r12
    41fc:	48 89 df             	mov    %rbx,%rdi
    41ff:	e8 4c ef ff ff       	call   3150 <__cxa_free_exception@plt>
    4204:	4c 89 e3             	mov    %r12,%rbx
    4207:	eb 03                	jmp    420c <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x27a>
}
    4209:	48 89 c3             	mov    %rax,%rbx
    420c:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    4213:	48 89 c7             	mov    %rax,%rdi
    4216:	e8 2f f5 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    421b:	48 89 d8             	mov    %rbx,%rax
    421e:	48 89 c7             	mov    %rax,%rdi
    4221:	e8 aa f1 ff ff       	call   33d0 <_Unwind_Resume@plt>
    4226:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
    422d:	5b                   	pop    %rbx
    422e:	41 5c                	pop    %r12
    4230:	5d                   	pop    %rbp
    4231:	c3                   	ret

0000000000004232 <_ZN4neko13LogicalDeviceD1Ev>:

LogicalDevice::~LogicalDevice() { vkDestroyDevice(mLogicalDevice, nullptr); }
    4232:	55                   	push   %rbp
    4233:	48 89 e5             	mov    %rsp,%rbp
    4236:	48 83 ec 10          	sub    $0x10,%rsp
    423a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    423e:	48 8d 15 eb f9 00 00 	lea    0xf9eb(%rip),%rdx        # 13c30 <_ZTVN4neko13LogicalDeviceE+0x10>
    4245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4249:	48 89 10             	mov    %rdx,(%rax)
    424c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4250:	48 8b 40 08          	mov    0x8(%rax),%rax
    4254:	be 00 00 00 00       	mov    $0x0,%esi
    4259:	48 89 c7             	mov    %rax,%rdi
    425c:	e8 4f ef ff ff       	call   31b0 <vkDestroyDevice@plt>
    4261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4265:	48 89 c7             	mov    %rax,%rdi
    4268:	e8 dd f4 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    426d:	90                   	nop
    426e:	c9                   	leave
    426f:	c3                   	ret

0000000000004270 <_ZN4neko13LogicalDeviceD0Ev>:
    4270:	55                   	push   %rbp
    4271:	48 89 e5             	mov    %rsp,%rbp
    4274:	48 83 ec 10          	sub    $0x10,%rsp
    4278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    427c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4280:	48 89 c7             	mov    %rax,%rdi
    4283:	e8 aa ff ff ff       	call   4232 <_ZN4neko13LogicalDeviceD1Ev>
    4288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    428c:	be 28 00 00 00       	mov    $0x28,%esi
    4291:	48 89 c7             	mov    %rax,%rdi
    4294:	e8 97 ef ff ff       	call   3230 <_ZdlPvm@plt>
    4299:	c9                   	leave
    429a:	c3                   	ret
    429b:	90                   	nop

000000000000429c <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

uint32_t
LogicalDevice::selectUniversalQueueFamily(VkPhysicalDevice physicalDevice,
                                          VkSurfaceKHR surface) {
    429c:	55                   	push   %rbp
    429d:	48 89 e5             	mov    %rsp,%rbp
    42a0:	41 54                	push   %r12
    42a2:	53                   	push   %rbx
    42a3:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    42a7:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    42ab:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    42af:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  uint32_t queueFamilyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    42b6:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    42ba:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    42be:	ba 00 00 00 00       	mov    $0x0,%edx
    42c3:	48 89 ce             	mov    %rcx,%rsi
    42c6:	48 89 c7             	mov    %rax,%rdi
    42c9:	e8 92 ee ff ff       	call   3160 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           nullptr);
  if (queueFamilyCount == 0) {
    42ce:	8b 45 d0             	mov    -0x30(%rbp),%eax
    42d1:	85 c0                	test   %eax,%eax
    42d3:	75 3b                	jne    4310 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("No queue family available.");
    42d5:	bf 10 00 00 00       	mov    $0x10,%edi
    42da:	e8 f1 ed ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    42df:	48 89 c3             	mov    %rax,%rbx
    42e2:	48 8d 05 f0 7a 00 00 	lea    0x7af0(%rip),%rax        # bdd9 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29>
    42e9:	48 89 c6             	mov    %rax,%rsi
    42ec:	48 89 df             	mov    %rbx,%rdi
    42ef:	e8 8c ed ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    42f4:	48 8b 05 ad fc 00 00 	mov    0xfcad(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    42fb:	48 89 c2             	mov    %rax,%rdx
    42fe:	48 8d 05 9b f9 00 00 	lea    0xf99b(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4305:	48 89 c6             	mov    %rax,%rsi
    4308:	48 89 df             	mov    %rbx,%rdi
    430b:	e8 a0 f0 ff ff       	call   33b0 <__cxa_throw@plt>
  }

  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    4310:	8b 45 d0             	mov    -0x30(%rbp),%eax
    4313:	89 c3                	mov    %eax,%ebx
    4315:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4319:	48 89 c7             	mov    %rax,%rdi
    431c:	e8 0d 0c 00 00       	call   4f2e <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    4321:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    4325:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4329:	48 89 de             	mov    %rbx,%rsi
    432c:	48 89 c7             	mov    %rax,%rdi
    432f:	e8 32 0c 00 00       	call   4f66 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    4334:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4338:	48 89 c7             	mov    %rax,%rdi
    433b:	e8 0a 0c 00 00       	call   4f4a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    4340:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4344:	48 89 c7             	mov    %rax,%rdi
    4347:	e8 d4 0c 00 00       	call   5020 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    434c:	48 89 c2             	mov    %rax,%rdx
    434f:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    4353:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4357:	48 89 ce             	mov    %rcx,%rsi
    435a:	48 89 c7             	mov    %rax,%rdi
    435d:	e8 fe ed ff ff       	call   3160 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  uint32_t iQueueFamily = 0;
    4362:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    4369:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    436d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4371:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4375:	48 89 c7             	mov    %rax,%rdi
    4378:	e8 c7 0c 00 00       	call   5044 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    437d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4381:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4385:	48 89 c7             	mov    %rax,%rdi
    4388:	e8 dd 0c 00 00       	call   506a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    438d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4391:	eb 78                	jmp    440b <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x16f>
    4393:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4397:	48 89 c7             	mov    %rax,%rdi
    439a:	e8 4f 0d 00 00       	call   50ee <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    439f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    43a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43a7:	8b 00                	mov    (%rax),%eax
    43a9:	83 e0 01             	and    $0x1,%eax
    43ac:	85 c0                	test   %eax,%eax
    43ae:	74 4f                	je     43ff <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
        (queueFamily.queueFlags & VK_QUEUE_COMPUTE_BIT)) {
    43b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43b4:	8b 00                	mov    (%rax),%eax
    43b6:	83 e0 02             	and    $0x2,%eax
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    43b9:	85 c0                	test   %eax,%eax
    43bb:	74 42                	je     43ff <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
      VkBool32 presentSupport = false;
    43bd:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
      vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, iQueueFamily,
    43c4:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    43c8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    43cf:	8b 75 ec             	mov    -0x14(%rbp),%esi
    43d2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    43d6:	48 89 c7             	mov    %rax,%rdi
    43d9:	e8 b2 ee ff ff       	call   3290 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                           surface, &presentSupport);
      if (presentSupport) {
    43de:	8b 45 9c             	mov    -0x64(%rbp),%eax
    43e1:	85 c0                	test   %eax,%eax
    43e3:	74 16                	je     43fb <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x15f>
        return iQueueFamily;
    43e5:	8b 5d ec             	mov    -0x14(%rbp),%ebx
      }
      ++iQueueFamily;
    }
  }
  throw std::runtime_error("Failed to select a queue family.");
}
    43e8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    43ec:	48 89 c7             	mov    %rax,%rdi
    43ef:	e8 e8 0b 00 00       	call   4fdc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
        return iQueueFamily;
    43f4:	89 d8                	mov    %ebx,%eax
    43f6:	e9 c0 00 00 00       	jmp    44bb <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x21f>
      ++iQueueFamily;
    43fb:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    43ff:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4403:	48 89 c7             	mov    %rax,%rdi
    4406:	e8 c3 0c 00 00       	call   50ce <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    440b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    440f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4413:	48 89 d6             	mov    %rdx,%rsi
    4416:	48 89 c7             	mov    %rax,%rdi
    4419:	e8 75 0c 00 00       	call   5093 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    441e:	84 c0                	test   %al,%al
    4420:	0f 85 6d ff ff ff    	jne    4393 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf7>
  throw std::runtime_error("Failed to select a queue family.");
    4426:	bf 10 00 00 00       	mov    $0x10,%edi
    442b:	e8 a0 ec ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4430:	48 89 c3             	mov    %rax,%rbx
    4433:	48 8d 05 be 79 00 00 	lea    0x79be(%rip),%rax        # bdf8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    443a:	48 89 c6             	mov    %rax,%rsi
    443d:	48 89 df             	mov    %rbx,%rdi
    4440:	e8 3b ec ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4445:	48 8b 05 5c fb 00 00 	mov    0xfb5c(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    444c:	48 89 c2             	mov    %rax,%rdx
    444f:	48 8d 05 4a f8 00 00 	lea    0xf84a(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4456:	48 89 c6             	mov    %rax,%rsi
    4459:	48 89 df             	mov    %rbx,%rdi
    445c:	e8 4f ef ff ff       	call   33b0 <__cxa_throw@plt>
    throw std::runtime_error("No queue family available.");
    4461:	49 89 c4             	mov    %rax,%r12
    4464:	48 89 df             	mov    %rbx,%rdi
    4467:	e8 e4 ec ff ff       	call   3150 <__cxa_free_exception@plt>
    446c:	4c 89 e0             	mov    %r12,%rax
    446f:	48 89 c7             	mov    %rax,%rdi
    4472:	e8 59 ef ff ff       	call   33d0 <_Unwind_Resume@plt>
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    4477:	48 89 c3             	mov    %rax,%rbx
    447a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    447e:	48 89 c7             	mov    %rax,%rdi
    4481:	e8 c4 0a 00 00       	call   4f4a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    4486:	48 89 d8             	mov    %rbx,%rax
    4489:	48 89 c7             	mov    %rax,%rdi
    448c:	e8 3f ef ff ff       	call   33d0 <_Unwind_Resume@plt>
  throw std::runtime_error("Failed to select a queue family.");
    4491:	49 89 c4             	mov    %rax,%r12
    4494:	48 89 df             	mov    %rbx,%rdi
    4497:	e8 b4 ec ff ff       	call   3150 <__cxa_free_exception@plt>
    449c:	4c 89 e3             	mov    %r12,%rbx
    449f:	eb 03                	jmp    44a4 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x208>
}
    44a1:	48 89 c3             	mov    %rax,%rbx
    44a4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    44a8:	48 89 c7             	mov    %rax,%rdi
    44ab:	e8 2c 0b 00 00       	call   4fdc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    44b0:	48 89 d8             	mov    %rbx,%rax
    44b3:	48 89 c7             	mov    %rax,%rdi
    44b6:	e8 15 ef ff ff       	call   33d0 <_Unwind_Resume@plt>
    44bb:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    44bf:	5b                   	pop    %rbx
    44c0:	41 5c                	pop    %r12
    44c2:	5d                   	pop    %rbp
    44c3:	c3                   	ret

00000000000044c4 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>:

VkPhysicalDevice LogicalDevice::selectPhysicalDevice(
    std::vector<VkPhysicalDevice> &&rrPhysicalDevices) {
    44c4:	55                   	push   %rbp
    44c5:	48 89 e5             	mov    %rsp,%rbp
    44c8:	41 54                	push   %r12
    44ca:	53                   	push   %rbx
    44cb:	48 83 ec 20          	sub    $0x20,%rsp
    44cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    44d3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (rrPhysicalDevices.size() == 1) {
    44d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    44db:	48 89 c7             	mov    %rax,%rdi
    44de:	e8 1d 0c 00 00       	call   5100 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    44e3:	48 83 f8 01          	cmp    $0x1,%rax
    44e7:	0f 94 c0             	sete   %al
    44ea:	84 c0                	test   %al,%al
    44ec:	74 19                	je     4507 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x43>
    return rrPhysicalDevices[0];
    44ee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    44f2:	be 00 00 00 00       	mov    $0x0,%esi
    44f7:	48 89 c7             	mov    %rax,%rdi
    44fa:	e8 25 0c 00 00       	call   5124 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    44ff:	48 8b 00             	mov    (%rax),%rax
    4502:	e9 b8 00 00 00       	jmp    45bf <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  }
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    4507:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    450e:	00 
    450f:	eb 46                	jmp    4557 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x93>
    if (checkRequirements(rrPhysicalDevices[iDevice])) {
    4511:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4515:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4519:	48 89 d6             	mov    %rdx,%rsi
    451c:	48 89 c7             	mov    %rax,%rdi
    451f:	e8 00 0c 00 00       	call   5124 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    4524:	48 8b 10             	mov    (%rax),%rdx
    4527:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    452b:	48 89 d6             	mov    %rdx,%rsi
    452e:	48 89 c7             	mov    %rax,%rdi
    4531:	e8 92 00 00 00       	call   45c8 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T>
    4536:	84 c0                	test   %al,%al
    4538:	74 18                	je     4552 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x8e>
      return rrPhysicalDevices[iDevice];
    453a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    453e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4542:	48 89 d6             	mov    %rdx,%rsi
    4545:	48 89 c7             	mov    %rax,%rdi
    4548:	e8 d7 0b 00 00       	call   5124 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    454d:	48 8b 00             	mov    (%rax),%rax
    4550:	eb 6d                	jmp    45bf <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    4552:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    4557:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    455b:	48 89 c7             	mov    %rax,%rdi
    455e:	e8 9d 0b 00 00       	call   5100 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    4563:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    4567:	0f 92 c0             	setb   %al
    456a:	84 c0                	test   %al,%al
    456c:	75 a3                	jne    4511 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x4d>
    }
  }
  throw std::runtime_error("No suitable physical device found.");
    456e:	bf 10 00 00 00       	mov    $0x10,%edi
    4573:	e8 58 eb ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4578:	48 89 c3             	mov    %rax,%rbx
    457b:	48 8d 05 9e 78 00 00 	lea    0x789e(%rip),%rax        # be20 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    4582:	48 89 c6             	mov    %rax,%rsi
    4585:	48 89 df             	mov    %rbx,%rdi
    4588:	e8 f3 ea ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    458d:	48 8b 05 14 fa 00 00 	mov    0xfa14(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4594:	48 89 c2             	mov    %rax,%rdx
    4597:	48 8d 05 02 f7 00 00 	lea    0xf702(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    459e:	48 89 c6             	mov    %rax,%rsi
    45a1:	48 89 df             	mov    %rbx,%rdi
    45a4:	e8 07 ee ff ff       	call   33b0 <__cxa_throw@plt>
    45a9:	49 89 c4             	mov    %rax,%r12
    45ac:	48 89 df             	mov    %rbx,%rdi
    45af:	e8 9c eb ff ff       	call   3150 <__cxa_free_exception@plt>
    45b4:	4c 89 e0             	mov    %r12,%rax
    45b7:	48 89 c7             	mov    %rax,%rdi
    45ba:	e8 11 ee ff ff       	call   33d0 <_Unwind_Resume@plt>
}
    45bf:	48 83 c4 20          	add    $0x20,%rsp
    45c3:	5b                   	pop    %rbx
    45c4:	41 5c                	pop    %r12
    45c6:	5d                   	pop    %rbp
    45c7:	c3                   	ret

00000000000045c8 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T>:

bool LogicalDevice::checkRequirements(VkPhysicalDevice physicalDevice) {
    45c8:	55                   	push   %rbp
    45c9:	48 89 e5             	mov    %rsp,%rbp
    45cc:	48 83 ec 10          	sub    $0x10,%rsp
    45d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    45d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45e0:	48 89 d6             	mov    %rdx,%rsi
    45e3:	48 89 c7             	mov    %rax,%rdi
    45e6:	e8 41 00 00 00       	call   462c <_ZN4neko13LogicalDevice15checkPropertiesEP18VkPhysicalDevice_T>
    45eb:	84 c0                	test   %al,%al
    45ed:	74 35                	je     4624 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    45ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45f7:	48 89 d6             	mov    %rdx,%rsi
    45fa:	48 89 c7             	mov    %rax,%rdi
    45fd:	e8 6a 00 00 00       	call   466c <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T>
    4602:	84 c0                	test   %al,%al
    4604:	74 1e                	je     4624 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
         checkFeatures(physicalDevice);
    4606:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    460a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    460e:	48 89 d6             	mov    %rdx,%rsi
    4611:	48 89 c7             	mov    %rax,%rdi
    4614:	e8 73 05 00 00       	call   4b8c <_ZN4neko13LogicalDevice13checkFeaturesEP18VkPhysicalDevice_T>
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    4619:	84 c0                	test   %al,%al
    461b:	74 07                	je     4624 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    461d:	b8 01 00 00 00       	mov    $0x1,%eax
    4622:	eb 05                	jmp    4629 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T+0x61>
    4624:	b8 00 00 00 00       	mov    $0x0,%eax
}
    4629:	c9                   	leave
    462a:	c3                   	ret
    462b:	90                   	nop

000000000000462c <_ZN4neko13LogicalDevice15checkPropertiesEP18VkPhysicalDevice_T>:

bool LogicalDevice::checkProperties(VkPhysicalDevice physicalDevice) {
    462c:	55                   	push   %rbp
    462d:	48 89 e5             	mov    %rsp,%rbp
    4630:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    4637:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    463e:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    4645:	48 8d 95 c0 fc ff ff 	lea    -0x340(%rbp),%rdx
    464c:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
    4653:	48 89 d6             	mov    %rdx,%rsi
    4656:	48 89 c7             	mov    %rax,%rdi
    4659:	e8 32 ea ff ff       	call   3090 <vkGetPhysicalDeviceProperties@plt>
  return properties.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    465e:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    4664:	83 f8 02             	cmp    $0x2,%eax
    4667:	0f 94 c0             	sete   %al
}
    466a:	c9                   	leave
    466b:	c3                   	ret

000000000000466c <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T>:

bool LogicalDevice::checkExtensions(VkPhysicalDevice physicalDevice) {
    466c:	55                   	push   %rbp
    466d:	48 89 e5             	mov    %rsp,%rbp
    4670:	41 55                	push   %r13
    4672:	41 54                	push   %r12
    4674:	53                   	push   %rbx
    4675:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    467c:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
    4683:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  const std::vector<const char *> requiredExtensions = {
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    468a:	48 8d 05 b2 77 00 00 	lea    0x77b2(%rip),%rax        # be43 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    4691:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    4698:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    469f:	49 89 c4             	mov    %rax,%r12
    46a2:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    46a8:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    46af:	48 89 c7             	mov    %rax,%rdi
    46b2:	e8 8d 0a 00 00       	call   5144 <_ZNSaIPKcEC1Ev>
    46b7:	48 8d 95 2e ff ff ff 	lea    -0xd2(%rbp),%rdx
    46be:	4c 89 e6             	mov    %r12,%rsi
    46c1:	4c 89 ef             	mov    %r13,%rdi
    46c4:	4c 89 e1             	mov    %r12,%rcx
    46c7:	4c 89 eb             	mov    %r13,%rbx
    46ca:	48 89 df             	mov    %rbx,%rdi
    46cd:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    46d4:	48 89 d1             	mov    %rdx,%rcx
    46d7:	48 89 fa             	mov    %rdi,%rdx
    46da:	48 89 c7             	mov    %rax,%rdi
    46dd:	e8 9a 0a 00 00       	call   517c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    46e2:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    46e9:	48 89 c7             	mov    %rax,%rdi
    46ec:	e8 6f 0a 00 00       	call   5160 <_ZNSaIPKcED1Ev>

  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    46f1:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    46f8:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    46ff:	b9 00 00 00 00       	mov    $0x0,%ecx
    4704:	be 00 00 00 00       	mov    $0x0,%esi
    4709:	48 89 c7             	mov    %rax,%rdi
    470c:	e8 1f ec ff ff       	call   3330 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount, nullptr) != VK_SUCCESS) {
    4711:	85 c0                	test   %eax,%eax
    4713:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    4716:	84 c0                	test   %al,%al
    4718:	74 3b                	je     4755 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0xe9>
    throw std::runtime_error("Failed to get device extension list.");
    471a:	bf 10 00 00 00       	mov    $0x10,%edi
    471f:	e8 ac e9 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4724:	48 89 c3             	mov    %rax,%rbx
    4727:	48 8d 05 2a 77 00 00 	lea    0x772a(%rip),%rax        # be58 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    472e:	48 89 c6             	mov    %rax,%rsi
    4731:	48 89 df             	mov    %rbx,%rdi
    4734:	e8 47 e9 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4739:	48 8b 05 68 f8 00 00 	mov    0xf868(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4740:	48 89 c2             	mov    %rax,%rdx
    4743:	48 8d 05 56 f5 00 00 	lea    0xf556(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    474a:	48 89 c6             	mov    %rax,%rsi
    474d:	48 89 df             	mov    %rbx,%rdi
    4750:	e8 5b ec ff ff       	call   33b0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    4755:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    475b:	89 c3                	mov    %eax,%ebx
    475d:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    4764:	48 89 c7             	mov    %rax,%rdi
    4767:	e8 dc 0a 00 00       	call   5248 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    476c:	48 8d 95 2f ff ff ff 	lea    -0xd1(%rbp),%rdx
    4773:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    477a:	48 89 de             	mov    %rbx,%rsi
    477d:	48 89 c7             	mov    %rax,%rdi
    4780:	e8 fb 0a 00 00       	call   5280 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    4785:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    478c:	48 89 c7             	mov    %rax,%rdi
    478f:	e8 d0 0a 00 00       	call   5264 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    4794:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    479b:	48 89 c7             	mov    %rax,%rdi
    479e:	e8 97 0b 00 00       	call   533a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    47a3:	48 89 c1             	mov    %rax,%rcx
    47a6:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    47ad:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    47b4:	be 00 00 00 00       	mov    $0x0,%esi
    47b9:	48 89 c7             	mov    %rax,%rdi
    47bc:	e8 6f eb ff ff       	call   3330 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount,
          availableExtensions.data()) != VK_SUCCESS) {
    47c1:	85 c0                	test   %eax,%eax
    47c3:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    47c6:	84 c0                	test   %al,%al
    47c8:	74 3b                	je     4805 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x199>
    throw std::runtime_error("Failed to get device extension list.");
    47ca:	bf 10 00 00 00       	mov    $0x10,%edi
    47cf:	e8 fc e8 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    47d4:	48 89 c3             	mov    %rax,%rbx
    47d7:	48 8d 05 7a 76 00 00 	lea    0x767a(%rip),%rax        # be58 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    47de:	48 89 c6             	mov    %rax,%rsi
    47e1:	48 89 df             	mov    %rbx,%rdi
    47e4:	e8 97 e8 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    47e9:	48 8b 05 b8 f7 00 00 	mov    0xf7b8(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    47f0:	48 89 c2             	mov    %rax,%rdx
    47f3:	48 8d 05 a6 f4 00 00 	lea    0xf4a6(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    47fa:	48 89 c6             	mov    %rax,%rsi
    47fd:	48 89 df             	mov    %rbx,%rdi
    4800:	e8 ab eb ff ff       	call   33b0 <__cxa_throw@plt>
  }

  /* Check if all required extension are supported */
  std::map<std::string, uint32_t> helper;
    4805:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    480c:	48 89 c7             	mov    %rax,%rdi
    480f:	e8 82 06 00 00       	call   4e96 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensions) {
    4814:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    481b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    481f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4823:	48 89 c7             	mov    %rax,%rdi
    4826:	e8 c1 0b 00 00       	call   53ec <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    482b:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    4832:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4836:	48 89 c7             	mov    %rax,%rdi
    4839:	e8 d4 0b 00 00       	call   5412 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    483e:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    4845:	e9 8c 00 00 00       	jmp    48d6 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x26a>
    484a:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    4851:	48 89 c7             	mov    %rax,%rdi
    4854:	e8 41 0c 00 00       	call   549a <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    4859:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    helper[availableExtension.extensionName]++;
    485d:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    4864:	48 89 c7             	mov    %rax,%rdi
    4867:	e8 74 eb ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    486c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    4870:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    4877:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    487e:	48 89 ce             	mov    %rcx,%rsi
    4881:	48 89 c7             	mov    %rax,%rdi
    4884:	e8 ad f3 ff ff       	call   3c36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4889:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    4890:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4897:	48 89 d6             	mov    %rdx,%rsi
    489a:	48 89 c7             	mov    %rax,%rdi
    489d:	e8 0a 0c 00 00       	call   54ac <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    48a2:	8b 10                	mov    (%rax),%edx
    48a4:	83 c2 01             	add    $0x1,%edx
    48a7:	89 10                	mov    %edx,(%rax)
    48a9:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    48b0:	48 89 c7             	mov    %rax,%rdi
    48b3:	e8 58 e8 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48b8:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    48bf:	48 89 c7             	mov    %rax,%rdi
    48c2:	e8 d9 e9 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensions) {
    48c7:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    48ce:	48 89 c7             	mov    %rax,%rdi
    48d1:	e8 a0 0b 00 00       	call   5476 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    48d6:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
    48dd:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    48e4:	48 89 d6             	mov    %rdx,%rsi
    48e7:	48 89 c7             	mov    %rax,%rdi
    48ea:	e8 4c 0b 00 00       	call   543b <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    48ef:	84 c0                	test   %al,%al
    48f1:	0f 85 53 ff ff ff    	jne    484a <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x1de>
  }
  for (const auto &requiredExtension : requiredExtensions) {
    48f7:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    48fe:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4902:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4906:	48 89 c7             	mov    %rax,%rdi
    4909:	e8 a2 0c 00 00       	call   55b0 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    490e:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    4915:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4919:	48 89 c7             	mov    %rax,%rdi
    491c:	e8 b5 0c 00 00       	call   55d6 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    4921:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    4928:	e9 ed 00 00 00       	jmp    4a1a <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x3ae>
    492d:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    4934:	48 89 c7             	mov    %rax,%rdi
    4937:	e8 1e 0d 00 00       	call   565a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    493c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    helper[requiredExtension]++;
    4940:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    4944:	48 89 c7             	mov    %rax,%rdi
    4947:	e8 94 ea ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    494c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4950:	48 8b 08             	mov    (%rax),%rcx
    4953:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    4957:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    495e:	48 89 ce             	mov    %rcx,%rsi
    4961:	48 89 c7             	mov    %rax,%rdi
    4964:	e8 cd f2 ff ff       	call   3c36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4969:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    4970:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4977:	48 89 d6             	mov    %rdx,%rsi
    497a:	48 89 c7             	mov    %rax,%rdi
    497d:	e8 2a 0b 00 00       	call   54ac <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    4982:	8b 10                	mov    (%rax),%edx
    4984:	83 c2 01             	add    $0x1,%edx
    4987:	89 10                	mov    %edx,(%rax)
    4989:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    4990:	48 89 c7             	mov    %rax,%rdi
    4993:	e8 78 e7 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4998:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    499c:	48 89 c7             	mov    %rax,%rdi
    499f:	e8 fc e8 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    if (helper[requiredExtension] < 2) {
    49a4:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    49a8:	48 89 c7             	mov    %rax,%rdi
    49ab:	e8 30 ea ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    49b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    49b4:	48 8b 08             	mov    (%rax),%rcx
    49b7:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    49bb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    49bf:	48 89 ce             	mov    %rcx,%rsi
    49c2:	48 89 c7             	mov    %rax,%rdi
    49c5:	e8 6c f2 ff ff       	call   3c36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    49ca:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    49ce:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    49d5:	48 89 d6             	mov    %rdx,%rsi
    49d8:	48 89 c7             	mov    %rax,%rdi
    49db:	e8 cc 0a 00 00       	call   54ac <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    49e0:	8b 00                	mov    (%rax),%eax
    49e2:	83 f8 01             	cmp    $0x1,%eax
    49e5:	0f 96 c3             	setbe  %bl
    49e8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    49ec:	48 89 c7             	mov    %rax,%rdi
    49ef:	e8 1c e7 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    49f4:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    49f8:	48 89 c7             	mov    %rax,%rdi
    49fb:	e8 a0 e8 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    4a00:	84 db                	test   %bl,%bl
    4a02:	74 07                	je     4a0b <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x39f>
      return false;
    4a04:	bb 00 00 00 00       	mov    $0x0,%ebx
    4a09:	eb 35                	jmp    4a40 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x3d4>
  for (const auto &requiredExtension : requiredExtensions) {
    4a0b:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    4a12:	48 89 c7             	mov    %rax,%rdi
    4a15:	e8 20 0c 00 00       	call   563a <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    4a1a:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
    4a21:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    4a28:	48 89 d6             	mov    %rdx,%rsi
    4a2b:	48 89 c7             	mov    %rax,%rdi
    4a2e:	e8 cc 0b 00 00       	call   55ff <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    4a33:	84 c0                	test   %al,%al
    4a35:	0f 85 f2 fe ff ff    	jne    492d <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x2c1>
    }
  }
  return true;
    4a3b:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    4a40:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4a47:	48 89 c7             	mov    %rax,%rdi
    4a4a:	e8 63 04 00 00       	call   4eb2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    4a4f:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4a56:	48 89 c7             	mov    %rax,%rdi
    4a59:	e8 98 08 00 00       	call   52f6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    4a5e:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    4a65:	48 89 c7             	mov    %rax,%rdi
    4a68:	e8 97 07 00 00       	call   5204 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    4a6d:	89 d8                	mov    %ebx,%eax
    4a6f:	e9 09 01 00 00       	jmp    4b7d <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x511>
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    4a74:	48 89 c3             	mov    %rax,%rbx
    4a77:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    4a7e:	48 89 c7             	mov    %rax,%rdi
    4a81:	e8 da 06 00 00       	call   5160 <_ZNSaIPKcED1Ev>
    4a86:	48 89 d8             	mov    %rbx,%rax
    4a89:	48 89 c7             	mov    %rax,%rdi
    4a8c:	e8 3f e9 ff ff       	call   33d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    4a91:	49 89 c4             	mov    %rax,%r12
    4a94:	48 89 df             	mov    %rbx,%rdi
    4a97:	e8 b4 e6 ff ff       	call   3150 <__cxa_free_exception@plt>
    4a9c:	4c 89 e3             	mov    %r12,%rbx
    4a9f:	e9 bf 00 00 00       	jmp    4b63 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    4aa4:	48 89 c3             	mov    %rax,%rbx
    4aa7:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    4aae:	48 89 c7             	mov    %rax,%rdi
    4ab1:	e8 ae 07 00 00       	call   5264 <_ZNSaI21VkExtensionPropertiesED1Ev>
    4ab6:	e9 a8 00 00 00       	jmp    4b63 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    throw std::runtime_error("Failed to get device extension list.");
    4abb:	49 89 c4             	mov    %rax,%r12
    4abe:	48 89 df             	mov    %rbx,%rdi
    4ac1:	e8 8a e6 ff ff       	call   3150 <__cxa_free_exception@plt>
    4ac6:	4c 89 e3             	mov    %r12,%rbx
    4ac9:	e9 81 00 00 00       	jmp    4b4f <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    helper[availableExtension.extensionName]++;
    4ace:	48 89 c3             	mov    %rax,%rbx
    4ad1:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    4ad8:	48 89 c7             	mov    %rax,%rdi
    4adb:	e8 30 e6 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4ae0:	eb 03                	jmp    4ae5 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x479>
    4ae2:	48 89 c3             	mov    %rax,%rbx
    4ae5:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    4aec:	48 89 c7             	mov    %rax,%rdi
    4aef:	e8 ac e7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    4af4:	eb 45                	jmp    4b3b <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    helper[requiredExtension]++;
    4af6:	48 89 c3             	mov    %rax,%rbx
    4af9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    4b00:	48 89 c7             	mov    %rax,%rdi
    4b03:	e8 08 e6 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4b08:	eb 03                	jmp    4b0d <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4a1>
    4b0a:	48 89 c3             	mov    %rax,%rbx
    4b0d:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    4b11:	48 89 c7             	mov    %rax,%rdi
    4b14:	e8 87 e7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    4b19:	eb 20                	jmp    4b3b <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    if (helper[requiredExtension] < 2) {
    4b1b:	48 89 c3             	mov    %rax,%rbx
    4b1e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    4b22:	48 89 c7             	mov    %rax,%rdi
    4b25:	e8 e6 e5 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4b2a:	eb 03                	jmp    4b2f <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4c3>
    4b2c:	48 89 c3             	mov    %rax,%rbx
    4b2f:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    4b33:	48 89 c7             	mov    %rax,%rdi
    4b36:	e8 65 e7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
}
    4b3b:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4b42:	48 89 c7             	mov    %rax,%rdi
    4b45:	e8 68 03 00 00       	call   4eb2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    4b4a:	eb 03                	jmp    4b4f <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    4b4c:	48 89 c3             	mov    %rax,%rbx
    4b4f:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4b56:	48 89 c7             	mov    %rax,%rdi
    4b59:	e8 98 07 00 00       	call   52f6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    4b5e:	eb 03                	jmp    4b63 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    4b60:	48 89 c3             	mov    %rax,%rbx
    4b63:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    4b6a:	48 89 c7             	mov    %rax,%rdi
    4b6d:	e8 92 06 00 00       	call   5204 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    4b72:	48 89 d8             	mov    %rbx,%rax
    4b75:	48 89 c7             	mov    %rax,%rdi
    4b78:	e8 53 e8 ff ff       	call   33d0 <_Unwind_Resume@plt>
    4b7d:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    4b84:	5b                   	pop    %rbx
    4b85:	41 5c                	pop    %r12
    4b87:	41 5d                	pop    %r13
    4b89:	5d                   	pop    %rbp
    4b8a:	c3                   	ret
    4b8b:	90                   	nop

0000000000004b8c <_ZN4neko13LogicalDevice13checkFeaturesEP18VkPhysicalDevice_T>:

bool LogicalDevice::checkFeatures(VkPhysicalDevice physicalDevice) {
    4b8c:	55                   	push   %rbp
    4b8d:	48 89 e5             	mov    %rsp,%rbp
    4b90:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    4b97:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    4b9e:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  VkPhysicalDeviceFeatures supportedFeatures;
  vkGetPhysicalDeviceFeatures(physicalDevice, &supportedFeatures);
    4ba5:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    4bac:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    4bb3:	48 89 d6             	mov    %rdx,%rsi
    4bb6:	48 89 c7             	mov    %rax,%rdi
    4bb9:	e8 b2 e5 ff ff       	call   3170 <vkGetPhysicalDeviceFeatures@plt>
  return supportedFeatures.samplerAnisotropy;
    4bbe:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    4bc4:	85 c0                	test   %eax,%eax
    4bc6:	0f 95 c0             	setne  %al
}
    4bc9:	c9                   	leave
    4bca:	c3                   	ret
    4bcb:	90                   	nop

0000000000004bcc <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T>:

std::vector<VkPhysicalDevice>
LogicalDevice::getPhysicalDevices(VkInstance instance) {
    4bcc:	55                   	push   %rbp
    4bcd:	48 89 e5             	mov    %rsp,%rbp
    4bd0:	41 54                	push   %r12
    4bd2:	53                   	push   %rbx
    4bd3:	48 83 ec 30          	sub    $0x30,%rsp
    4bd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4bdb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4bdf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t physicalDeviceCount;
  VkResult result;
  if (result =
          vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    4be3:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    4be7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4beb:	ba 00 00 00 00       	mov    $0x0,%edx
    4bf0:	48 89 ce             	mov    %rcx,%rsi
    4bf3:	48 89 c7             	mov    %rax,%rdi
    4bf6:	e8 f5 e4 ff ff       	call   30f0 <vkEnumeratePhysicalDevices@plt>
    4bfb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result =
    4bfe:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    4c02:	74 41                	je     4c45 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x79>
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    4c04:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    4c08:	74 3b                	je     4c45 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x79>
    throw std::runtime_error("Failed to enumerate physical devices.");
    4c0a:	bf 10 00 00 00       	mov    $0x10,%edi
    4c0f:	e8 bc e4 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4c14:	48 89 c3             	mov    %rax,%rbx
    4c17:	48 8d 05 62 72 00 00 	lea    0x7262(%rip),%rax        # be80 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    4c1e:	48 89 c6             	mov    %rax,%rsi
    4c21:	48 89 df             	mov    %rbx,%rdi
    4c24:	e8 57 e4 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4c29:	48 8b 05 78 f3 00 00 	mov    0xf378(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4c30:	48 89 c2             	mov    %rax,%rdx
    4c33:	48 8d 05 66 f0 00 00 	lea    0xf066(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4c3a:	48 89 c6             	mov    %rax,%rsi
    4c3d:	48 89 df             	mov    %rbx,%rdi
    4c40:	e8 6b e7 ff ff       	call   33b0 <__cxa_throw@plt>
  }
  if (physicalDeviceCount == 0) {
    4c45:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4c48:	85 c0                	test   %eax,%eax
    4c4a:	75 3b                	jne    4c87 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0xbb>
    throw std::runtime_error("Failed to find any physical device.");
    4c4c:	bf 10 00 00 00       	mov    $0x10,%edi
    4c51:	e8 7a e4 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4c56:	48 89 c3             	mov    %rax,%rbx
    4c59:	48 8d 05 48 72 00 00 	lea    0x7248(%rip),%rax        # bea8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xf8>
    4c60:	48 89 c6             	mov    %rax,%rsi
    4c63:	48 89 df             	mov    %rbx,%rdi
    4c66:	e8 15 e4 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4c6b:	48 8b 05 36 f3 00 00 	mov    0xf336(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4c72:	48 89 c2             	mov    %rax,%rdx
    4c75:	48 8d 05 24 f0 00 00 	lea    0xf024(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4c7c:	48 89 c6             	mov    %rax,%rsi
    4c7f:	48 89 df             	mov    %rbx,%rdi
    4c82:	e8 29 e7 ff ff       	call   33b0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    4c87:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4c8a:	89 c3                	mov    %eax,%ebx
    4c8c:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    4c90:	48 89 c7             	mov    %rax,%rdi
    4c93:	e8 d4 09 00 00       	call   566c <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    4c98:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
    4c9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ca0:	48 89 de             	mov    %rbx,%rsi
    4ca3:	48 89 c7             	mov    %rax,%rdi
    4ca6:	e8 f9 09 00 00       	call   56a4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    4cab:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    4caf:	48 89 c7             	mov    %rax,%rdi
    4cb2:	e8 d1 09 00 00       	call   5688 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (result = vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    4cb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cbb:	48 89 c7             	mov    %rax,%rdi
    4cbe:	e8 57 0a 00 00       	call   571a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    4cc3:	48 89 c2             	mov    %rax,%rdx
    4cc6:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    4cca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4cce:	48 89 ce             	mov    %rcx,%rsi
    4cd1:	48 89 c7             	mov    %rax,%rdi
    4cd4:	e8 17 e4 ff ff       	call   30f0 <vkEnumeratePhysicalDevices@plt>
    4cd9:	89 45 ec             	mov    %eax,-0x14(%rbp)
    4cdc:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    4ce0:	0f 84 b5 00 00 00    	je     4d9b <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x1cf>
                                          physicalDevices.data());
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    4ce6:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    4cea:	0f 84 ab 00 00 00    	je     4d9b <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x1cf>
    throw std::runtime_error("Failed to enumerate physical devices.");
    4cf0:	bf 10 00 00 00       	mov    $0x10,%edi
    4cf5:	e8 d6 e3 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4cfa:	48 89 c3             	mov    %rax,%rbx
    4cfd:	48 8d 05 7c 71 00 00 	lea    0x717c(%rip),%rax        # be80 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    4d04:	48 89 c6             	mov    %rax,%rsi
    4d07:	48 89 df             	mov    %rbx,%rdi
    4d0a:	e8 71 e3 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4d0f:	48 8b 05 92 f2 00 00 	mov    0xf292(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4d16:	48 89 c2             	mov    %rax,%rdx
    4d19:	48 8d 05 80 ef 00 00 	lea    0xef80(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4d20:	48 89 c6             	mov    %rax,%rsi
    4d23:	48 89 df             	mov    %rbx,%rdi
    4d26:	e8 85 e6 ff ff       	call   33b0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    4d2b:	49 89 c4             	mov    %rax,%r12
    4d2e:	48 89 df             	mov    %rbx,%rdi
    4d31:	e8 1a e4 ff ff       	call   3150 <__cxa_free_exception@plt>
    4d36:	4c 89 e0             	mov    %r12,%rax
    4d39:	48 89 c7             	mov    %rax,%rdi
    4d3c:	e8 8f e6 ff ff       	call   33d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find any physical device.");
    4d41:	49 89 c4             	mov    %rax,%r12
    4d44:	48 89 df             	mov    %rbx,%rdi
    4d47:	e8 04 e4 ff ff       	call   3150 <__cxa_free_exception@plt>
    4d4c:	4c 89 e0             	mov    %r12,%rax
    4d4f:	48 89 c7             	mov    %rax,%rdi
    4d52:	e8 79 e6 ff ff       	call   33d0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    4d57:	48 89 c3             	mov    %rax,%rbx
    4d5a:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    4d5e:	48 89 c7             	mov    %rax,%rdi
    4d61:	e8 22 09 00 00       	call   5688 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4d66:	48 89 d8             	mov    %rbx,%rax
    4d69:	48 89 c7             	mov    %rax,%rdi
    4d6c:	e8 5f e6 ff ff       	call   33d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    4d71:	49 89 c4             	mov    %rax,%r12
    4d74:	48 89 df             	mov    %rbx,%rdi
    4d77:	e8 d4 e3 ff ff       	call   3150 <__cxa_free_exception@plt>
    4d7c:	4c 89 e3             	mov    %r12,%rbx
    4d7f:	eb 03                	jmp    4d84 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x1b8>
  }
  return physicalDevices;
}
    4d81:	48 89 c3             	mov    %rax,%rbx
    4d84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d88:	48 89 c7             	mov    %rax,%rdi
    4d8b:	e8 5a 01 00 00       	call   4eea <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4d90:	48 89 d8             	mov    %rbx,%rax
    4d93:	48 89 c7             	mov    %rax,%rdi
    4d96:	e8 35 e6 ff ff       	call   33d0 <_Unwind_Resume@plt>
  return physicalDevices;
    4d9b:	90                   	nop
}
    4d9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4da0:	48 83 c4 30          	add    $0x30,%rsp
    4da4:	5b                   	pop    %rbx
    4da5:	41 5c                	pop    %r12
    4da7:	5d                   	pop    %rbp
    4da8:	c3                   	ret

0000000000004da9 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4da9:	55                   	push   %rbp
    4daa:	48 89 e5             	mov    %rsp,%rbp
    4dad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4db1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4db5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4db9:	5d                   	pop    %rbp
    4dba:	c3                   	ret

0000000000004dbb <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    4dbb:	55                   	push   %rbp
    4dbc:	48 89 e5             	mov    %rsp,%rbp
    4dbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dc3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4dc7:	90                   	nop
    4dc8:	5d                   	pop    %rbp
    4dc9:	c3                   	ret

0000000000004dca <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4dca:	55                   	push   %rbp
    4dcb:	48 89 e5             	mov    %rsp,%rbp
    4dce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dd6:	5d                   	pop    %rbp
    4dd7:	c3                   	ret

0000000000004dd8 <_ZNK4neko8InstancedeEv>:

  Instance(const Settings &settings, const Context &context);

  virtual ~Instance();

  const VkInstance &operator*() const noexcept { return mInstance; }
    4dd8:	55                   	push   %rbp
    4dd9:	48 89 e5             	mov    %rsp,%rbp
    4ddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4de0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4de4:	48 83 c0 10          	add    $0x10,%rax
    4de8:	5d                   	pop    %rbp
    4de9:	c3                   	ret

0000000000004dea <_ZNK4neko7SurfacedeEv>:

  Surface(const Instance &crInstance, const Window &crWindow);

  virtual ~Surface();

  const VkSurfaceKHR &operator*() const noexcept { return mSurface; }
    4dea:	55                   	push   %rbp
    4deb:	48 89 e5             	mov    %rsp,%rbp
    4dee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4df2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4df6:	48 83 c0 10          	add    $0x10,%rax
    4dfa:	5d                   	pop    %rbp
    4dfb:	c3                   	ret

0000000000004dfc <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    4dfc:	55                   	push   %rbp
    4dfd:	48 89 e5             	mov    %rsp,%rbp
    4e00:	48 83 ec 10          	sub    $0x10,%rsp
    4e04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    4e08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e0c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    4e12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e16:	48 89 c7             	mov    %rax,%rdi
    4e19:	e8 04 00 00 00       	call   4e22 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    4e1e:	90                   	nop
    4e1f:	c9                   	leave
    4e20:	c3                   	ret
    4e21:	90                   	nop

0000000000004e22 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    4e22:	55                   	push   %rbp
    4e23:	48 89 e5             	mov    %rsp,%rbp
    4e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    4e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e2e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4e35:	00 
      _M_header._M_left = &_M_header;
    4e36:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4e3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e3e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    4e42:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4e46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e4a:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    4e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e52:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    4e59:	00 
    }
    4e5a:	90                   	nop
    4e5b:	5d                   	pop    %rbp
    4e5c:	c3                   	ret
    4e5d:	90                   	nop

0000000000004e5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    4e5e:	55                   	push   %rbp
    4e5f:	48 89 e5             	mov    %rsp,%rbp
    4e62:	48 83 ec 10          	sub    $0x10,%rsp
    4e66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e6e:	48 89 c7             	mov    %rax,%rdi
    4e71:	e8 20 05 00 00       	call   5396 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    4e76:	90                   	nop
    4e77:	c9                   	leave
    4e78:	c3                   	ret
    4e79:	90                   	nop

0000000000004e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    4e7a:	55                   	push   %rbp
    4e7b:	48 89 e5             	mov    %rsp,%rbp
    4e7e:	48 83 ec 10          	sub    $0x10,%rsp
    4e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e8a:	48 89 c7             	mov    %rax,%rdi
    4e8d:	e8 cc 04 00 00       	call   535e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    4e92:	90                   	nop
    4e93:	c9                   	leave
    4e94:	c3                   	ret
    4e95:	90                   	nop

0000000000004e96 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    4e96:	55                   	push   %rbp
    4e97:	48 89 e5             	mov    %rsp,%rbp
    4e9a:	48 83 ec 10          	sub    $0x10,%rsp
    4e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ea6:	48 89 c7             	mov    %rax,%rdi
    4ea9:	e8 cc ff ff ff       	call   4e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    4eae:	90                   	nop
    4eaf:	c9                   	leave
    4eb0:	c3                   	ret
    4eb1:	90                   	nop

0000000000004eb2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    4eb2:	55                   	push   %rbp
    4eb3:	48 89 e5             	mov    %rsp,%rbp
    4eb6:	48 83 ec 10          	sub    $0x10,%rsp
    4eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ec2:	48 89 c7             	mov    %rax,%rdi
    4ec5:	e8 e8 04 00 00       	call   53b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    4eca:	90                   	nop
    4ecb:	c9                   	leave
    4ecc:	c3                   	ret
    4ecd:	90                   	nop

0000000000004ece <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4ece:	55                   	push   %rbp
    4ecf:	48 89 e5             	mov    %rsp,%rbp
    4ed2:	48 83 ec 10          	sub    $0x10,%rsp
    4ed6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ede:	48 89 c7             	mov    %rax,%rdi
    4ee1:	e8 a2 07 00 00       	call   5688 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4ee6:	90                   	nop
    4ee7:	c9                   	leave
    4ee8:	c3                   	ret
    4ee9:	90                   	nop

0000000000004eea <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4eea:	55                   	push   %rbp
    4eeb:	48 89 e5             	mov    %rsp,%rbp
    4eee:	48 83 ec 10          	sub    $0x10,%rsp
    4ef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4efa:	48 89 c7             	mov    %rax,%rdi
    4efd:	e8 8a 08 00 00       	call   578c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4f02:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f09:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f11:	48 8b 00             	mov    (%rax),%rax
    4f14:	48 89 ce             	mov    %rcx,%rsi
    4f17:	48 89 c7             	mov    %rax,%rdi
    4f1a:	e8 7b 08 00 00       	call   579a <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4f1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f23:	48 89 c7             	mov    %rax,%rdi
    4f26:	e8 13 08 00 00       	call   573e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4f2b:	90                   	nop
    4f2c:	c9                   	leave
    4f2d:	c3                   	ret

0000000000004f2e <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4f2e:	55                   	push   %rbp
    4f2f:	48 89 e5             	mov    %rsp,%rbp
    4f32:	48 83 ec 10          	sub    $0x10,%rsp
    4f36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f3e:	48 89 c7             	mov    %rax,%rdi
    4f41:	e8 7e 08 00 00       	call   57c4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    4f46:	90                   	nop
    4f47:	c9                   	leave
    4f48:	c3                   	ret
    4f49:	90                   	nop

0000000000004f4a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4f4a:	55                   	push   %rbp
    4f4b:	48 89 e5             	mov    %rsp,%rbp
    4f4e:	48 83 ec 10          	sub    $0x10,%rsp
    4f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5a:	48 89 c7             	mov    %rax,%rdi
    4f5d:	e8 6e 08 00 00       	call   57d0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    4f62:	90                   	nop
    4f63:	c9                   	leave
    4f64:	c3                   	ret
    4f65:	90                   	nop

0000000000004f66 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4f66:	55                   	push   %rbp
    4f67:	48 89 e5             	mov    %rsp,%rbp
    4f6a:	53                   	push   %rbx
    4f6b:	48 83 ec 28          	sub    $0x28,%rsp
    4f6f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4f73:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4f77:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4f7b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4f7f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4f83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4f87:	48 89 d6             	mov    %rdx,%rsi
    4f8a:	48 89 c7             	mov    %rax,%rdi
    4f8d:	e8 49 08 00 00       	call   57db <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4f92:	48 89 c1             	mov    %rax,%rcx
    4f95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f99:	48 89 c2             	mov    %rax,%rdx
    4f9c:	48 89 ce             	mov    %rcx,%rsi
    4f9f:	48 89 df             	mov    %rbx,%rdi
    4fa2:	e8 b1 08 00 00       	call   5858 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4fa7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4fab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4faf:	48 89 d6             	mov    %rdx,%rsi
    4fb2:	48 89 c7             	mov    %rax,%rdi
    4fb5:	e8 54 09 00 00       	call   590e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    4fba:	eb 1a                	jmp    4fd6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4fbc:	48 89 c3             	mov    %rax,%rbx
    4fbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fc3:	48 89 c7             	mov    %rax,%rdi
    4fc6:	e8 eb 08 00 00       	call   58b6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    4fcb:	48 89 d8             	mov    %rbx,%rax
    4fce:	48 89 c7             	mov    %rax,%rdi
    4fd1:	e8 fa e3 ff ff       	call   33d0 <_Unwind_Resume@plt>
    4fd6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4fda:	c9                   	leave
    4fdb:	c3                   	ret

0000000000004fdc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4fdc:	55                   	push   %rbp
    4fdd:	48 89 e5             	mov    %rsp,%rbp
    4fe0:	48 83 ec 10          	sub    $0x10,%rsp
    4fe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4fe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fec:	48 89 c7             	mov    %rax,%rdi
    4fef:	e8 5a 09 00 00       	call   594e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4ff4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4ff7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ffb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4fff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5003:	48 8b 00             	mov    (%rax),%rax
    5006:	48 89 ce             	mov    %rcx,%rsi
    5009:	48 89 c7             	mov    %rax,%rdi
    500c:	e8 4b 09 00 00       	call   595c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    5011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5015:	48 89 c7             	mov    %rax,%rdi
    5018:	e8 99 08 00 00       	call   58b6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    501d:	90                   	nop
    501e:	c9                   	leave
    501f:	c3                   	ret

0000000000005020 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    5020:	55                   	push   %rbp
    5021:	48 89 e5             	mov    %rsp,%rbp
    5024:	48 83 ec 10          	sub    $0x10,%rsp
    5028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    502c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5030:	48 8b 10             	mov    (%rax),%rdx
    5033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5037:	48 89 d6             	mov    %rdx,%rsi
    503a:	48 89 c7             	mov    %rax,%rdi
    503d:	e8 44 09 00 00       	call   5986 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    5042:	c9                   	leave
    5043:	c3                   	ret

0000000000005044 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    5044:	55                   	push   %rbp
    5045:	48 89 e5             	mov    %rsp,%rbp
    5048:	48 83 ec 20          	sub    $0x20,%rsp
    504c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    5050:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5054:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5058:	48 89 d6             	mov    %rdx,%rsi
    505b:	48 89 c7             	mov    %rax,%rdi
    505e:	e8 35 09 00 00       	call   5998 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5067:	c9                   	leave
    5068:	c3                   	ret
    5069:	90                   	nop

000000000000506a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    506a:	55                   	push   %rbp
    506b:	48 89 e5             	mov    %rsp,%rbp
    506e:	48 83 ec 20          	sub    $0x20,%rsp
    5072:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    5076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    507a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    507e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5082:	48 89 d6             	mov    %rdx,%rsi
    5085:	48 89 c7             	mov    %rax,%rdi
    5088:	e8 0b 09 00 00       	call   5998 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    508d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5091:	c9                   	leave
    5092:	c3                   	ret

0000000000005093 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5093:	55                   	push   %rbp
    5094:	48 89 e5             	mov    %rsp,%rbp
    5097:	53                   	push   %rbx
    5098:	48 83 ec 18          	sub    $0x18,%rsp
    509c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    50a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    50a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50a8:	48 89 c7             	mov    %rax,%rdi
    50ab:	e8 06 09 00 00       	call   59b6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    50b0:	48 8b 18             	mov    (%rax),%rbx
    50b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50b7:	48 89 c7             	mov    %rax,%rdi
    50ba:	e8 f7 08 00 00       	call   59b6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    50bf:	48 8b 00             	mov    (%rax),%rax
    50c2:	48 39 c3             	cmp    %rax,%rbx
    50c5:	0f 95 c0             	setne  %al
    50c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50cc:	c9                   	leave
    50cd:	c3                   	ret

00000000000050ce <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    50ce:	55                   	push   %rbp
    50cf:	48 89 e5             	mov    %rsp,%rbp
    50d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    50d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50da:	48 8b 00             	mov    (%rax),%rax
    50dd:	48 8d 50 18          	lea    0x18(%rax),%rdx
    50e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50e5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    50e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    50ec:	5d                   	pop    %rbp
    50ed:	c3                   	ret

00000000000050ee <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    50ee:	55                   	push   %rbp
    50ef:	48 89 e5             	mov    %rsp,%rbp
    50f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    50f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50fa:	48 8b 00             	mov    (%rax),%rax
    50fd:	5d                   	pop    %rbp
    50fe:	c3                   	ret
    50ff:	90                   	nop

0000000000005100 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5100:	55                   	push   %rbp
    5101:	48 89 e5             	mov    %rsp,%rbp
    5104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    510c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5114:	48 8b 00             	mov    (%rax),%rax
    5117:	48 29 c2             	sub    %rax,%rdx
    511a:	48 89 d0             	mov    %rdx,%rax
    511d:	48 c1 f8 03          	sar    $0x3,%rax
    5121:	5d                   	pop    %rbp
    5122:	c3                   	ret
    5123:	90                   	nop

0000000000005124 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    5124:	55                   	push   %rbp
    5125:	48 89 e5             	mov    %rsp,%rbp
    5128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    512c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    5130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5134:	48 8b 00             	mov    (%rax),%rax
    5137:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    513b:	48 c1 e2 03          	shl    $0x3,%rdx
    513f:	48 01 d0             	add    %rdx,%rax
      }
    5142:	5d                   	pop    %rbp
    5143:	c3                   	ret

0000000000005144 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5144:	55                   	push   %rbp
    5145:	48 89 e5             	mov    %rsp,%rbp
    5148:	48 83 ec 10          	sub    $0x10,%rsp
    514c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5154:	48 89 c7             	mov    %rax,%rdi
    5157:	e8 68 08 00 00       	call   59c4 <_ZNSt15__new_allocatorIPKcEC1Ev>
    515c:	90                   	nop
    515d:	c9                   	leave
    515e:	c3                   	ret
    515f:	90                   	nop

0000000000005160 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5160:	55                   	push   %rbp
    5161:	48 89 e5             	mov    %rsp,%rbp
    5164:	48 83 ec 10          	sub    $0x10,%rsp
    5168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    516c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5170:	48 89 c7             	mov    %rax,%rdi
    5173:	e8 58 08 00 00       	call   59d0 <_ZNSt15__new_allocatorIPKcED1Ev>
    5178:	90                   	nop
    5179:	c9                   	leave
    517a:	c3                   	ret
    517b:	90                   	nop

000000000000517c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    517c:	55                   	push   %rbp
    517d:	48 89 e5             	mov    %rsp,%rbp
    5180:	53                   	push   %rbx
    5181:	48 83 ec 38          	sub    $0x38,%rsp
    5185:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5189:	48 89 f0             	mov    %rsi,%rax
    518c:	48 89 d6             	mov    %rdx,%rsi
    518f:	48 89 f2             	mov    %rsi,%rdx
    5192:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5196:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    519a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    519e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51a2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    51a6:	48 89 d6             	mov    %rdx,%rsi
    51a9:	48 89 c7             	mov    %rax,%rdi
    51ac:	e8 47 08 00 00       	call   59f8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    51b1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    51b5:	48 89 c7             	mov    %rax,%rdi
    51b8:	e8 c1 08 00 00       	call   5a7e <_ZNKSt16initializer_listIPKcE3endEv>
    51bd:	48 89 c3             	mov    %rax,%rbx
    51c0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    51c4:	48 89 c7             	mov    %rax,%rdi
    51c7:	e8 a0 08 00 00       	call   5a6c <_ZNKSt16initializer_listIPKcE5beginEv>
    51cc:	48 89 c1             	mov    %rax,%rcx
    51cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51d3:	48 89 da             	mov    %rbx,%rdx
    51d6:	48 89 ce             	mov    %rcx,%rsi
    51d9:	48 89 c7             	mov    %rax,%rdi
    51dc:	e8 03 09 00 00       	call   5ae4 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    51e1:	eb 1a                	jmp    51fd <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    51e3:	48 89 c3             	mov    %rax,%rbx
    51e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51ea:	48 89 c7             	mov    %rax,%rdi
    51ed:	e8 2c 08 00 00       	call   5a1e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    51f2:	48 89 d8             	mov    %rbx,%rax
    51f5:	48 89 c7             	mov    %rax,%rdi
    51f8:	e8 d3 e1 ff ff       	call   33d0 <_Unwind_Resume@plt>
    51fd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5201:	c9                   	leave
    5202:	c3                   	ret
    5203:	90                   	nop

0000000000005204 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5204:	55                   	push   %rbp
    5205:	48 89 e5             	mov    %rsp,%rbp
    5208:	48 83 ec 10          	sub    $0x10,%rsp
    520c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5214:	48 89 c7             	mov    %rax,%rdi
    5217:	e8 78 09 00 00       	call   5b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    521c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    521f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5223:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    522b:	48 8b 00             	mov    (%rax),%rax
    522e:	48 89 ce             	mov    %rcx,%rsi
    5231:	48 89 c7             	mov    %rax,%rdi
    5234:	e8 69 09 00 00       	call   5ba2 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    5239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    523d:	48 89 c7             	mov    %rax,%rdi
    5240:	e8 d9 07 00 00       	call   5a1e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    5245:	90                   	nop
    5246:	c9                   	leave
    5247:	c3                   	ret

0000000000005248 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5248:	55                   	push   %rbp
    5249:	48 89 e5             	mov    %rsp,%rbp
    524c:	48 83 ec 10          	sub    $0x10,%rsp
    5250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5258:	48 89 c7             	mov    %rax,%rdi
    525b:	e8 6c 09 00 00       	call   5bcc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    5260:	90                   	nop
    5261:	c9                   	leave
    5262:	c3                   	ret
    5263:	90                   	nop

0000000000005264 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5264:	55                   	push   %rbp
    5265:	48 89 e5             	mov    %rsp,%rbp
    5268:	48 83 ec 10          	sub    $0x10,%rsp
    526c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5274:	48 89 c7             	mov    %rax,%rdi
    5277:	e8 5c 09 00 00       	call   5bd8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    527c:	90                   	nop
    527d:	c9                   	leave
    527e:	c3                   	ret
    527f:	90                   	nop

0000000000005280 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5280:	55                   	push   %rbp
    5281:	48 89 e5             	mov    %rsp,%rbp
    5284:	53                   	push   %rbx
    5285:	48 83 ec 28          	sub    $0x28,%rsp
    5289:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    528d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5291:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5295:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5299:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    529d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    52a1:	48 89 d6             	mov    %rdx,%rsi
    52a4:	48 89 c7             	mov    %rax,%rdi
    52a7:	e8 37 09 00 00       	call   5be3 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    52ac:	48 89 c1             	mov    %rax,%rcx
    52af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52b3:	48 89 c2             	mov    %rax,%rdx
    52b6:	48 89 ce             	mov    %rcx,%rsi
    52b9:	48 89 df             	mov    %rbx,%rdi
    52bc:	e8 9f 09 00 00       	call   5c60 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    52c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    52c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52c9:	48 89 d6             	mov    %rdx,%rsi
    52cc:	48 89 c7             	mov    %rax,%rdi
    52cf:	e8 42 0a 00 00       	call   5d16 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    52d4:	eb 1a                	jmp    52f0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    52d6:	48 89 c3             	mov    %rax,%rbx
    52d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52dd:	48 89 c7             	mov    %rax,%rdi
    52e0:	e8 d9 09 00 00       	call   5cbe <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    52e5:	48 89 d8             	mov    %rbx,%rax
    52e8:	48 89 c7             	mov    %rax,%rdi
    52eb:	e8 e0 e0 ff ff       	call   33d0 <_Unwind_Resume@plt>
    52f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52f4:	c9                   	leave
    52f5:	c3                   	ret

00000000000052f6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    52f6:	55                   	push   %rbp
    52f7:	48 89 e5             	mov    %rsp,%rbp
    52fa:	48 83 ec 10          	sub    $0x10,%rsp
    52fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5306:	48 89 c7             	mov    %rax,%rdi
    5309:	e8 48 0a 00 00       	call   5d56 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    530e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5315:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    531d:	48 8b 00             	mov    (%rax),%rax
    5320:	48 89 ce             	mov    %rcx,%rsi
    5323:	48 89 c7             	mov    %rax,%rdi
    5326:	e8 39 0a 00 00       	call   5d64 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    532b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    532f:	48 89 c7             	mov    %rax,%rdi
    5332:	e8 87 09 00 00       	call   5cbe <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    5337:	90                   	nop
    5338:	c9                   	leave
    5339:	c3                   	ret

000000000000533a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    533a:	55                   	push   %rbp
    533b:	48 89 e5             	mov    %rsp,%rbp
    533e:	48 83 ec 10          	sub    $0x10,%rsp
    5342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    534a:	48 8b 10             	mov    (%rax),%rdx
    534d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5351:	48 89 d6             	mov    %rdx,%rsi
    5354:	48 89 c7             	mov    %rax,%rdi
    5357:	e8 32 0a 00 00       	call   5d8e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    535c:	c9                   	leave
    535d:	c3                   	ret

000000000000535e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    535e:	55                   	push   %rbp
    535f:	48 89 e5             	mov    %rsp,%rbp
    5362:	48 83 ec 10          	sub    $0x10,%rsp
    5366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    536a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    536e:	48 89 c7             	mov    %rax,%rdi
    5371:	e8 2a 0a 00 00       	call   5da0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    5376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    537a:	48 89 c7             	mov    %rax,%rdi
    537d:	e8 3a 0a 00 00       	call   5dbc <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    5382:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5386:	48 83 c0 08          	add    $0x8,%rax
    538a:	48 89 c7             	mov    %rax,%rdi
    538d:	e8 6a fa ff ff       	call   4dfc <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    5392:	90                   	nop
    5393:	c9                   	leave
    5394:	c3                   	ret
    5395:	90                   	nop

0000000000005396 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    5396:	55                   	push   %rbp
    5397:	48 89 e5             	mov    %rsp,%rbp
    539a:	48 83 ec 10          	sub    $0x10,%rsp
    539e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a6:	48 89 c7             	mov    %rax,%rdi
    53a9:	e8 1a 0a 00 00       	call   5dc8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    53ae:	90                   	nop
    53af:	c9                   	leave
    53b0:	c3                   	ret
    53b1:	90                   	nop

00000000000053b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    53b2:	55                   	push   %rbp
    53b3:	48 89 e5             	mov    %rsp,%rbp
    53b6:	48 83 ec 10          	sub    $0x10,%rsp
    53ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    53be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53c2:	48 89 c7             	mov    %rax,%rdi
    53c5:	e8 70 0a 00 00       	call   5e3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    53ca:	48 89 c2             	mov    %rax,%rdx
    53cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53d1:	48 89 d6             	mov    %rdx,%rsi
    53d4:	48 89 c7             	mov    %rax,%rdi
    53d7:	e8 f8 09 00 00       	call   5dd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    53dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e0:	48 89 c7             	mov    %rax,%rdi
    53e3:	e8 76 fa ff ff       	call   4e5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    53e8:	90                   	nop
    53e9:	c9                   	leave
    53ea:	c3                   	ret
    53eb:	90                   	nop

00000000000053ec <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    53ec:	55                   	push   %rbp
    53ed:	48 89 e5             	mov    %rsp,%rbp
    53f0:	48 83 ec 20          	sub    $0x20,%rsp
    53f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    53f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    53fc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5400:	48 89 d6             	mov    %rdx,%rsi
    5403:	48 89 c7             	mov    %rax,%rdi
    5406:	e8 49 0a 00 00       	call   5e54 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    540b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    540f:	c9                   	leave
    5410:	c3                   	ret
    5411:	90                   	nop

0000000000005412 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    5412:	55                   	push   %rbp
    5413:	48 89 e5             	mov    %rsp,%rbp
    5416:	48 83 ec 20          	sub    $0x20,%rsp
    541a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    541e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5422:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5426:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    542a:	48 89 d6             	mov    %rdx,%rsi
    542d:	48 89 c7             	mov    %rax,%rdi
    5430:	e8 1f 0a 00 00       	call   5e54 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5439:	c9                   	leave
    543a:	c3                   	ret

000000000000543b <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    543b:	55                   	push   %rbp
    543c:	48 89 e5             	mov    %rsp,%rbp
    543f:	53                   	push   %rbx
    5440:	48 83 ec 18          	sub    $0x18,%rsp
    5444:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5448:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    544c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5450:	48 89 c7             	mov    %rax,%rdi
    5453:	e8 1a 0a 00 00       	call   5e72 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    5458:	48 8b 18             	mov    (%rax),%rbx
    545b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    545f:	48 89 c7             	mov    %rax,%rdi
    5462:	e8 0b 0a 00 00       	call   5e72 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    5467:	48 8b 00             	mov    (%rax),%rax
    546a:	48 39 c3             	cmp    %rax,%rbx
    546d:	0f 95 c0             	setne  %al
    5470:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5474:	c9                   	leave
    5475:	c3                   	ret

0000000000005476 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    5476:	55                   	push   %rbp
    5477:	48 89 e5             	mov    %rsp,%rbp
    547a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    547e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5482:	48 8b 00             	mov    (%rax),%rax
    5485:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    548c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5490:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    5493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5497:	5d                   	pop    %rbp
    5498:	c3                   	ret
    5499:	90                   	nop

000000000000549a <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    549a:	55                   	push   %rbp
    549b:	48 89 e5             	mov    %rsp,%rbp
    549e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    54a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54a6:	48 8b 00             	mov    (%rax),%rax
    54a9:	5d                   	pop    %rbp
    54aa:	c3                   	ret
    54ab:	90                   	nop

00000000000054ac <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    54ac:	55                   	push   %rbp
    54ad:	48 89 e5             	mov    %rsp,%rbp
    54b0:	53                   	push   %rbx
    54b1:	48 83 ec 48          	sub    $0x48,%rsp
    54b5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    54b9:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    54bd:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    54c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    54c5:	48 89 d6             	mov    %rdx,%rsi
    54c8:	48 89 c7             	mov    %rax,%rdi
    54cb:	e8 b0 09 00 00       	call   5e80 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    54d0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    54d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    54d8:	48 89 c7             	mov    %rax,%rdi
    54db:	e8 c6 09 00 00       	call   5ea6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    54e0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    54e4:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    54e8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    54ec:	48 89 d6             	mov    %rdx,%rsi
    54ef:	48 89 c7             	mov    %rax,%rdi
    54f2:	e8 c9 09 00 00       	call   5ec0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    54f7:	84 c0                	test   %al,%al
    54f9:	75 32                	jne    552d <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    54fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    54ff:	48 89 c7             	mov    %rax,%rdi
    5502:	e8 db 09 00 00       	call   5ee2 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    5507:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    550b:	48 89 c7             	mov    %rax,%rdi
    550e:	e8 eb 09 00 00       	call   5efe <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    5513:	48 89 c2             	mov    %rax,%rdx
    5516:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    551a:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    551e:	48 89 ce             	mov    %rcx,%rsi
    5521:	48 89 c7             	mov    %rax,%rdi
    5524:	e8 f3 09 00 00       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    5529:	84 c0                	test   %al,%al
    552b:	74 07                	je     5534 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    552d:	b8 01 00 00 00       	mov    $0x1,%eax
    5532:	eb 05                	jmp    5539 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    5534:	b8 00 00 00 00       	mov    $0x0,%eax
    5539:	84 c0                	test   %al,%al
    553b:	74 5d                	je     559a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    553d:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    5541:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5545:	48 89 c7             	mov    %rax,%rdi
    5548:	e8 f8 09 00 00       	call   5f45 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    554d:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    5550:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5554:	48 89 d6             	mov    %rdx,%rsi
    5557:	48 89 c7             	mov    %rax,%rdi
    555a:	e8 f4 09 00 00       	call   5f53 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    555f:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    5563:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5567:	48 89 d6             	mov    %rdx,%rsi
    556a:	48 89 c7             	mov    %rax,%rdi
    556d:	e8 16 0a 00 00       	call   5f88 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    5572:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    5576:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    557a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    557e:	49 89 c8             	mov    %rcx,%r8
    5581:	48 89 d1             	mov    %rdx,%rcx
    5584:	48 8d 15 b5 69 00 00 	lea    0x69b5(%rip),%rdx        # bf40 <_ZSt19piecewise_construct>
    558b:	48 89 c6             	mov    %rax,%rsi
    558e:	48 89 df             	mov    %rbx,%rdi
    5591:	e8 10 0a 00 00       	call   5fa6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    5596:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    559a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    559e:	48 89 c7             	mov    %rax,%rdi
    55a1:	e8 58 09 00 00       	call   5efe <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    55a6:	48 83 c0 20          	add    $0x20,%rax
      }
    55aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55ae:	c9                   	leave
    55af:	c3                   	ret

00000000000055b0 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    55b0:	55                   	push   %rbp
    55b1:	48 89 e5             	mov    %rsp,%rbp
    55b4:	48 83 ec 20          	sub    $0x20,%rsp
    55b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    55bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55c0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    55c4:	48 89 d6             	mov    %rdx,%rsi
    55c7:	48 89 c7             	mov    %rax,%rdi
    55ca:	e8 d3 0a 00 00       	call   60a2 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    55cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d3:	c9                   	leave
    55d4:	c3                   	ret
    55d5:	90                   	nop

00000000000055d6 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    55d6:	55                   	push   %rbp
    55d7:	48 89 e5             	mov    %rsp,%rbp
    55da:	48 83 ec 20          	sub    $0x20,%rsp
    55de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    55e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55e6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    55ea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    55ee:	48 89 d6             	mov    %rdx,%rsi
    55f1:	48 89 c7             	mov    %rax,%rdi
    55f4:	e8 a9 0a 00 00       	call   60a2 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    55f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fd:	c9                   	leave
    55fe:	c3                   	ret

00000000000055ff <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    55ff:	55                   	push   %rbp
    5600:	48 89 e5             	mov    %rsp,%rbp
    5603:	53                   	push   %rbx
    5604:	48 83 ec 18          	sub    $0x18,%rsp
    5608:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    560c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    5610:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5614:	48 89 c7             	mov    %rax,%rdi
    5617:	e8 a4 0a 00 00       	call   60c0 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    561c:	48 8b 18             	mov    (%rax),%rbx
    561f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5623:	48 89 c7             	mov    %rax,%rdi
    5626:	e8 95 0a 00 00       	call   60c0 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    562b:	48 8b 00             	mov    (%rax),%rax
    562e:	48 39 c3             	cmp    %rax,%rbx
    5631:	0f 95 c0             	setne  %al
    5634:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5638:	c9                   	leave
    5639:	c3                   	ret

000000000000563a <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    563a:	55                   	push   %rbp
    563b:	48 89 e5             	mov    %rsp,%rbp
    563e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    5642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5646:	48 8b 00             	mov    (%rax),%rax
    5649:	48 8d 50 08          	lea    0x8(%rax),%rdx
    564d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5651:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    5654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5658:	5d                   	pop    %rbp
    5659:	c3                   	ret

000000000000565a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    565a:	55                   	push   %rbp
    565b:	48 89 e5             	mov    %rsp,%rbp
    565e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    5662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5666:	48 8b 00             	mov    (%rax),%rax
    5669:	5d                   	pop    %rbp
    566a:	c3                   	ret
    566b:	90                   	nop

000000000000566c <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    566c:	55                   	push   %rbp
    566d:	48 89 e5             	mov    %rsp,%rbp
    5670:	48 83 ec 10          	sub    $0x10,%rsp
    5674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    567c:	48 89 c7             	mov    %rax,%rdi
    567f:	e8 4a 0a 00 00       	call   60ce <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    5684:	90                   	nop
    5685:	c9                   	leave
    5686:	c3                   	ret
    5687:	90                   	nop

0000000000005688 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5688:	55                   	push   %rbp
    5689:	48 89 e5             	mov    %rsp,%rbp
    568c:	48 83 ec 10          	sub    $0x10,%rsp
    5690:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5694:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5698:	48 89 c7             	mov    %rax,%rdi
    569b:	e8 3a 0a 00 00       	call   60da <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    56a0:	90                   	nop
    56a1:	c9                   	leave
    56a2:	c3                   	ret
    56a3:	90                   	nop

00000000000056a4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    56a4:	55                   	push   %rbp
    56a5:	48 89 e5             	mov    %rsp,%rbp
    56a8:	53                   	push   %rbx
    56a9:	48 83 ec 28          	sub    $0x28,%rsp
    56ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    56b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    56b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    56b9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    56bd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    56c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    56c5:	48 89 d6             	mov    %rdx,%rsi
    56c8:	48 89 c7             	mov    %rax,%rdi
    56cb:	e8 15 0a 00 00       	call   60e5 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    56d0:	48 89 c1             	mov    %rax,%rcx
    56d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56d7:	48 89 c2             	mov    %rax,%rdx
    56da:	48 89 ce             	mov    %rcx,%rsi
    56dd:	48 89 df             	mov    %rbx,%rdi
    56e0:	e8 61 0a 00 00       	call   6146 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    56e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    56e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56ed:	48 89 d6             	mov    %rdx,%rsi
    56f0:	48 89 c7             	mov    %rax,%rdi
    56f3:	e8 ac 0a 00 00       	call   61a4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    56f8:	eb 1a                	jmp    5714 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    56fa:	48 89 c3             	mov    %rax,%rbx
    56fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5701:	48 89 c7             	mov    %rax,%rdi
    5704:	e8 35 00 00 00       	call   573e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    5709:	48 89 d8             	mov    %rbx,%rax
    570c:	48 89 c7             	mov    %rax,%rdi
    570f:	e8 bc dc ff ff       	call   33d0 <_Unwind_Resume@plt>
    5714:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5718:	c9                   	leave
    5719:	c3                   	ret

000000000000571a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    571a:	55                   	push   %rbp
    571b:	48 89 e5             	mov    %rsp,%rbp
    571e:	48 83 ec 10          	sub    $0x10,%rsp
    5722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    572a:	48 8b 10             	mov    (%rax),%rdx
    572d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5731:	48 89 d6             	mov    %rdx,%rsi
    5734:	48 89 c7             	mov    %rax,%rdi
    5737:	e8 a8 0a 00 00       	call   61e4 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    573c:	c9                   	leave
    573d:	c3                   	ret

000000000000573e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    573e:	55                   	push   %rbp
    573f:	48 89 e5             	mov    %rsp,%rbp
    5742:	48 83 ec 10          	sub    $0x10,%rsp
    5746:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    574a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    574e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5756:	48 8b 00             	mov    (%rax),%rax
    5759:	48 29 c2             	sub    %rax,%rdx
    575c:	48 89 d0             	mov    %rdx,%rax
    575f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5763:	48 89 c2             	mov    %rax,%rdx
    5766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    576a:	48 8b 08             	mov    (%rax),%rcx
    576d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5771:	48 89 ce             	mov    %rcx,%rsi
    5774:	48 89 c7             	mov    %rax,%rdi
    5777:	e8 a0 0a 00 00       	call   621c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    577c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5780:	48 89 c7             	mov    %rax,%rdi
    5783:	e8 46 f7 ff ff       	call   4ece <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    5788:	90                   	nop
    5789:	c9                   	leave
    578a:	c3                   	ret
    578b:	90                   	nop

000000000000578c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    578c:	55                   	push   %rbp
    578d:	48 89 e5             	mov    %rsp,%rbp
    5790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5798:	5d                   	pop    %rbp
    5799:	c3                   	ret

000000000000579a <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    579a:	55                   	push   %rbp
    579b:	48 89 e5             	mov    %rsp,%rbp
    579e:	48 83 ec 20          	sub    $0x20,%rsp
    57a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    57ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    57b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57b6:	48 89 d6             	mov    %rdx,%rsi
    57b9:	48 89 c7             	mov    %rax,%rdi
    57bc:	e8 90 0a 00 00       	call   6251 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    57c1:	90                   	nop
    57c2:	c9                   	leave
    57c3:	c3                   	ret

00000000000057c4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    57c4:	55                   	push   %rbp
    57c5:	48 89 e5             	mov    %rsp,%rbp
    57c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57cc:	90                   	nop
    57cd:	5d                   	pop    %rbp
    57ce:	c3                   	ret
    57cf:	90                   	nop

00000000000057d0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    57d0:	55                   	push   %rbp
    57d1:	48 89 e5             	mov    %rsp,%rbp
    57d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57d8:	90                   	nop
    57d9:	5d                   	pop    %rbp
    57da:	c3                   	ret

00000000000057db <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    57db:	55                   	push   %rbp
    57dc:	48 89 e5             	mov    %rsp,%rbp
    57df:	53                   	push   %rbx
    57e0:	48 83 ec 28          	sub    $0x28,%rsp
    57e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    57e8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    57ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    57f0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57f4:	48 89 d6             	mov    %rdx,%rsi
    57f7:	48 89 c7             	mov    %rax,%rdi
    57fa:	e8 bb 0a 00 00       	call   62ba <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    57ff:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5803:	48 89 c7             	mov    %rax,%rdi
    5806:	e8 6c 0a 00 00       	call   6277 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    580b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    580f:	0f 92 c3             	setb   %bl
    5812:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5816:	48 89 c7             	mov    %rax,%rdi
    5819:	e8 2c f7 ff ff       	call   4f4a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    581e:	84 db                	test   %bl,%bl
    5820:	74 0f                	je     5831 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5822:	48 8d 05 df 66 00 00 	lea    0x66df(%rip),%rax        # bf08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    5829:	48 89 c7             	mov    %rax,%rdi
    582c:	e8 af d8 ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    5831:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5835:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5839:	c9                   	leave
    583a:	c3                   	ret
    583b:	90                   	nop

000000000000583c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    583c:	55                   	push   %rbp
    583d:	48 89 e5             	mov    %rsp,%rbp
    5840:	48 83 ec 10          	sub    $0x10,%rsp
    5844:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    584c:	48 89 c7             	mov    %rax,%rdi
    584f:	e8 f6 f6 ff ff       	call   4f4a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    5854:	90                   	nop
    5855:	c9                   	leave
    5856:	c3                   	ret
    5857:	90                   	nop

0000000000005858 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5858:	55                   	push   %rbp
    5859:	48 89 e5             	mov    %rsp,%rbp
    585c:	53                   	push   %rbx
    585d:	48 83 ec 28          	sub    $0x28,%rsp
    5861:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5865:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5869:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    586d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5871:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5875:	48 89 d6             	mov    %rdx,%rsi
    5878:	48 89 c7             	mov    %rax,%rdi
    587b:	e8 60 0a 00 00       	call   62e0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5880:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5888:	48 89 d6             	mov    %rdx,%rsi
    588b:	48 89 c7             	mov    %rax,%rdi
    588e:	e8 7f 0a 00 00       	call   6312 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    5893:	eb 1a                	jmp    58af <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5895:	48 89 c3             	mov    %rax,%rbx
    5898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    589c:	48 89 c7             	mov    %rax,%rdi
    589f:	e8 98 ff ff ff       	call   583c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    58a4:	48 89 d8             	mov    %rbx,%rax
    58a7:	48 89 c7             	mov    %rax,%rdi
    58aa:	e8 21 db ff ff       	call   33d0 <_Unwind_Resume@plt>
    58af:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    58b3:	c9                   	leave
    58b4:	c3                   	ret
    58b5:	90                   	nop

00000000000058b6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    58b6:	55                   	push   %rbp
    58b7:	48 89 e5             	mov    %rsp,%rbp
    58ba:	48 83 ec 10          	sub    $0x10,%rsp
    58be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    58c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    58ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ce:	48 8b 00             	mov    (%rax),%rax
    58d1:	48 29 c2             	sub    %rax,%rdx
    58d4:	48 c1 fa 03          	sar    $0x3,%rdx
    58d8:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    58df:	aa aa aa 
    58e2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    58e6:	48 89 c2             	mov    %rax,%rdx
    58e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ed:	48 8b 08             	mov    (%rax),%rcx
    58f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58f4:	48 89 ce             	mov    %rcx,%rsi
    58f7:	48 89 c7             	mov    %rax,%rdi
    58fa:	e8 73 0a 00 00       	call   6372 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    58ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5903:	48 89 c7             	mov    %rax,%rdi
    5906:	e8 31 ff ff ff       	call   583c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    590b:	90                   	nop
    590c:	c9                   	leave
    590d:	c3                   	ret

000000000000590e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    590e:	55                   	push   %rbp
    590f:	48 89 e5             	mov    %rsp,%rbp
    5912:	48 83 ec 10          	sub    $0x10,%rsp
    5916:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    591a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    591e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5922:	48 89 c7             	mov    %rax,%rdi
    5925:	e8 24 00 00 00       	call   594e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    592a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    592d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5931:	48 8b 00             	mov    (%rax),%rax
    5934:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5938:	48 89 ce             	mov    %rcx,%rsi
    593b:	48 89 c7             	mov    %rax,%rdi
    593e:	e8 64 0a 00 00       	call   63a7 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5943:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5947:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    594b:	90                   	nop
    594c:	c9                   	leave
    594d:	c3                   	ret

000000000000594e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    594e:	55                   	push   %rbp
    594f:	48 89 e5             	mov    %rsp,%rbp
    5952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    595a:	5d                   	pop    %rbp
    595b:	c3                   	ret

000000000000595c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    595c:	55                   	push   %rbp
    595d:	48 89 e5             	mov    %rsp,%rbp
    5960:	48 83 ec 20          	sub    $0x20,%rsp
    5964:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5968:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    596c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5970:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5978:	48 89 d6             	mov    %rdx,%rsi
    597b:	48 89 c7             	mov    %rax,%rdi
    597e:	e8 4d 0a 00 00       	call   63d0 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    5983:	90                   	nop
    5984:	c9                   	leave
    5985:	c3                   	ret

0000000000005986 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5986:	55                   	push   %rbp
    5987:	48 89 e5             	mov    %rsp,%rbp
    598a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    598e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5992:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5996:	5d                   	pop    %rbp
    5997:	c3                   	ret

0000000000005998 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5998:	55                   	push   %rbp
    5999:	48 89 e5             	mov    %rsp,%rbp
    599c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    59a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59a8:	48 8b 10             	mov    (%rax),%rdx
    59ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59af:	48 89 10             	mov    %rdx,(%rax)
    59b2:	90                   	nop
    59b3:	5d                   	pop    %rbp
    59b4:	c3                   	ret
    59b5:	90                   	nop

00000000000059b6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    59b6:	55                   	push   %rbp
    59b7:	48 89 e5             	mov    %rsp,%rbp
    59ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    59be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59c2:	5d                   	pop    %rbp
    59c3:	c3                   	ret

00000000000059c4 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    59c4:	55                   	push   %rbp
    59c5:	48 89 e5             	mov    %rsp,%rbp
    59c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59cc:	90                   	nop
    59cd:	5d                   	pop    %rbp
    59ce:	c3                   	ret
    59cf:	90                   	nop

00000000000059d0 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    59d0:	55                   	push   %rbp
    59d1:	48 89 e5             	mov    %rsp,%rbp
    59d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59d8:	90                   	nop
    59d9:	5d                   	pop    %rbp
    59da:	c3                   	ret
    59db:	90                   	nop

00000000000059dc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    59dc:	55                   	push   %rbp
    59dd:	48 89 e5             	mov    %rsp,%rbp
    59e0:	48 83 ec 10          	sub    $0x10,%rsp
    59e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59ec:	48 89 c7             	mov    %rax,%rdi
    59ef:	e8 6c f7 ff ff       	call   5160 <_ZNSaIPKcED1Ev>
    59f4:	90                   	nop
    59f5:	c9                   	leave
    59f6:	c3                   	ret
    59f7:	90                   	nop

00000000000059f8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    59f8:	55                   	push   %rbp
    59f9:	48 89 e5             	mov    %rsp,%rbp
    59fc:	48 83 ec 10          	sub    $0x10,%rsp
    5a00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    5a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a10:	48 89 d6             	mov    %rdx,%rsi
    5a13:	48 89 c7             	mov    %rax,%rdi
    5a16:	e8 db 09 00 00       	call   63f6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    5a1b:	90                   	nop
    5a1c:	c9                   	leave
    5a1d:	c3                   	ret

0000000000005a1e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5a1e:	55                   	push   %rbp
    5a1f:	48 89 e5             	mov    %rsp,%rbp
    5a22:	48 83 ec 10          	sub    $0x10,%rsp
    5a26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a2e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a36:	48 8b 00             	mov    (%rax),%rax
    5a39:	48 29 c2             	sub    %rax,%rdx
    5a3c:	48 89 d0             	mov    %rdx,%rax
    5a3f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5a43:	48 89 c2             	mov    %rax,%rdx
    5a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a4a:	48 8b 08             	mov    (%rax),%rcx
    5a4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a51:	48 89 ce             	mov    %rcx,%rsi
    5a54:	48 89 c7             	mov    %rax,%rdi
    5a57:	e8 cc 09 00 00       	call   6428 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    5a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a60:	48 89 c7             	mov    %rax,%rdi
    5a63:	e8 74 ff ff ff       	call   59dc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    5a68:	90                   	nop
    5a69:	c9                   	leave
    5a6a:	c3                   	ret
    5a6b:	90                   	nop

0000000000005a6c <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    5a6c:	55                   	push   %rbp
    5a6d:	48 89 e5             	mov    %rsp,%rbp
    5a70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a78:	48 8b 00             	mov    (%rax),%rax
    5a7b:	5d                   	pop    %rbp
    5a7c:	c3                   	ret
    5a7d:	90                   	nop

0000000000005a7e <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    5a7e:	55                   	push   %rbp
    5a7f:	48 89 e5             	mov    %rsp,%rbp
    5a82:	53                   	push   %rbx
    5a83:	48 83 ec 18          	sub    $0x18,%rsp
    5a87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5a8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a8f:	48 89 c7             	mov    %rax,%rdi
    5a92:	e8 d5 ff ff ff       	call   5a6c <_ZNKSt16initializer_listIPKcE5beginEv>
    5a97:	48 89 c3             	mov    %rax,%rbx
    5a9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a9e:	48 89 c7             	mov    %rax,%rdi
    5aa1:	e8 b8 09 00 00       	call   645e <_ZNKSt16initializer_listIPKcE4sizeEv>
    5aa6:	48 c1 e0 03          	shl    $0x3,%rax
    5aaa:	48 01 d8             	add    %rbx,%rax
    5aad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5ab1:	c9                   	leave
    5ab2:	c3                   	ret

0000000000005ab3 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    5ab3:	55                   	push   %rbp
    5ab4:	48 89 e5             	mov    %rsp,%rbp
    5ab7:	48 83 ec 10          	sub    $0x10,%rsp
    5abb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5abf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    5ac3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5ac7:	48 89 c7             	mov    %rax,%rdi
    5aca:	e8 a1 09 00 00       	call   6470 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    5acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ad3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ad7:	48 89 d6             	mov    %rdx,%rsi
    5ada:	48 89 c7             	mov    %rax,%rdi
    5add:	e8 99 09 00 00       	call   647b <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    5ae2:	c9                   	leave
    5ae3:	c3                   	ret

0000000000005ae4 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5ae4:	55                   	push   %rbp
    5ae5:	48 89 e5             	mov    %rsp,%rbp
    5ae8:	53                   	push   %rbx
    5ae9:	48 83 ec 38          	sub    $0x38,%rsp
    5aed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5af1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5af5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    5af9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5afd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5b01:	48 89 d6             	mov    %rdx,%rsi
    5b04:	48 89 c7             	mov    %rax,%rdi
    5b07:	e8 a7 ff ff ff       	call   5ab3 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    5b0c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    5b10:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5b14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b18:	48 89 c7             	mov    %rax,%rdi
    5b1b:	e8 74 00 00 00       	call   5b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5b20:	48 89 c2             	mov    %rax,%rdx
    5b23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b27:	48 89 d6             	mov    %rdx,%rsi
    5b2a:	48 89 c7             	mov    %rax,%rdi
    5b2d:	e8 63 09 00 00       	call   6495 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    5b32:	48 89 c6             	mov    %rax,%rsi
    5b35:	48 89 df             	mov    %rbx,%rdi
    5b38:	e8 b9 09 00 00       	call   64f6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    5b3d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b41:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5b44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b48:	48 8b 00             	mov    (%rax),%rax
    5b4b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5b4f:	48 c1 e2 03          	shl    $0x3,%rdx
    5b53:	48 01 c2             	add    %rax,%rdx
    5b56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b5a:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    5b5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b62:	48 89 c7             	mov    %rax,%rdi
    5b65:	e8 2a 00 00 00       	call   5b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5b6a:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    5b6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b71:	48 8b 10             	mov    (%rax),%rdx
    5b74:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5b78:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5b7c:	48 89 c7             	mov    %rax,%rdi
    5b7f:	e8 a5 09 00 00       	call   6529 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    5b84:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b88:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    5b8c:	90                   	nop
    5b8d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5b91:	c9                   	leave
    5b92:	c3                   	ret
    5b93:	90                   	nop

0000000000005b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5b94:	55                   	push   %rbp
    5b95:	48 89 e5             	mov    %rsp,%rbp
    5b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ba0:	5d                   	pop    %rbp
    5ba1:	c3                   	ret

0000000000005ba2 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5ba2:	55                   	push   %rbp
    5ba3:	48 89 e5             	mov    %rsp,%rbp
    5ba6:	48 83 ec 20          	sub    $0x20,%rsp
    5baa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5bb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bbe:	48 89 d6             	mov    %rdx,%rsi
    5bc1:	48 89 c7             	mov    %rax,%rdi
    5bc4:	e8 91 09 00 00       	call   655a <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    5bc9:	90                   	nop
    5bca:	c9                   	leave
    5bcb:	c3                   	ret

0000000000005bcc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5bcc:	55                   	push   %rbp
    5bcd:	48 89 e5             	mov    %rsp,%rbp
    5bd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bd4:	90                   	nop
    5bd5:	5d                   	pop    %rbp
    5bd6:	c3                   	ret
    5bd7:	90                   	nop

0000000000005bd8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5bd8:	55                   	push   %rbp
    5bd9:	48 89 e5             	mov    %rsp,%rbp
    5bdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5be0:	90                   	nop
    5be1:	5d                   	pop    %rbp
    5be2:	c3                   	ret

0000000000005be3 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5be3:	55                   	push   %rbp
    5be4:	48 89 e5             	mov    %rsp,%rbp
    5be7:	53                   	push   %rbx
    5be8:	48 83 ec 28          	sub    $0x28,%rsp
    5bec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5bf0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5bf4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5bf8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5bfc:	48 89 d6             	mov    %rdx,%rsi
    5bff:	48 89 c7             	mov    %rax,%rdi
    5c02:	e8 bb 09 00 00       	call   65c2 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    5c07:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c0b:	48 89 c7             	mov    %rax,%rdi
    5c0e:	e8 6d 09 00 00       	call   6580 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5c13:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5c17:	0f 92 c3             	setb   %bl
    5c1a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c1e:	48 89 c7             	mov    %rax,%rdi
    5c21:	e8 3e f6 ff ff       	call   5264 <_ZNSaI21VkExtensionPropertiesED1Ev>
    5c26:	84 db                	test   %bl,%bl
    5c28:	74 0f                	je     5c39 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5c2a:	48 8d 05 d7 62 00 00 	lea    0x62d7(%rip),%rax        # bf08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    5c31:	48 89 c7             	mov    %rax,%rdi
    5c34:	e8 a7 d4 ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5c39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5c3d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c41:	c9                   	leave
    5c42:	c3                   	ret
    5c43:	90                   	nop

0000000000005c44 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5c44:	55                   	push   %rbp
    5c45:	48 89 e5             	mov    %rsp,%rbp
    5c48:	48 83 ec 10          	sub    $0x10,%rsp
    5c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c54:	48 89 c7             	mov    %rax,%rdi
    5c57:	e8 08 f6 ff ff       	call   5264 <_ZNSaI21VkExtensionPropertiesED1Ev>
    5c5c:	90                   	nop
    5c5d:	c9                   	leave
    5c5e:	c3                   	ret
    5c5f:	90                   	nop

0000000000005c60 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5c60:	55                   	push   %rbp
    5c61:	48 89 e5             	mov    %rsp,%rbp
    5c64:	53                   	push   %rbx
    5c65:	48 83 ec 28          	sub    $0x28,%rsp
    5c69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5c71:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5c75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c79:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5c7d:	48 89 d6             	mov    %rdx,%rsi
    5c80:	48 89 c7             	mov    %rax,%rdi
    5c83:	e8 60 09 00 00       	call   65e8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5c88:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5c8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c90:	48 89 d6             	mov    %rdx,%rsi
    5c93:	48 89 c7             	mov    %rax,%rdi
    5c96:	e8 7f 09 00 00       	call   661a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    5c9b:	eb 1a                	jmp    5cb7 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5c9d:	48 89 c3             	mov    %rax,%rbx
    5ca0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ca4:	48 89 c7             	mov    %rax,%rdi
    5ca7:	e8 98 ff ff ff       	call   5c44 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    5cac:	48 89 d8             	mov    %rbx,%rax
    5caf:	48 89 c7             	mov    %rax,%rdi
    5cb2:	e8 19 d7 ff ff       	call   33d0 <_Unwind_Resume@plt>
    5cb7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5cbb:	c9                   	leave
    5cbc:	c3                   	ret
    5cbd:	90                   	nop

0000000000005cbe <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5cbe:	55                   	push   %rbp
    5cbf:	48 89 e5             	mov    %rsp,%rbp
    5cc2:	48 83 ec 10          	sub    $0x10,%rsp
    5cc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cce:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5cd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cd6:	48 8b 00             	mov    (%rax),%rax
    5cd9:	48 29 c2             	sub    %rax,%rdx
    5cdc:	48 c1 fa 02          	sar    $0x2,%rdx
    5ce0:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    5ce7:	fc c0 0f 
    5cea:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5cee:	48 89 c2             	mov    %rax,%rdx
    5cf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cf5:	48 8b 08             	mov    (%rax),%rcx
    5cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cfc:	48 89 ce             	mov    %rcx,%rsi
    5cff:	48 89 c7             	mov    %rax,%rdi
    5d02:	e8 75 09 00 00       	call   667c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    5d07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d0b:	48 89 c7             	mov    %rax,%rdi
    5d0e:	e8 31 ff ff ff       	call   5c44 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    5d13:	90                   	nop
    5d14:	c9                   	leave
    5d15:	c3                   	ret

0000000000005d16 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5d16:	55                   	push   %rbp
    5d17:	48 89 e5             	mov    %rsp,%rbp
    5d1a:	48 83 ec 10          	sub    $0x10,%rsp
    5d1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d2a:	48 89 c7             	mov    %rax,%rdi
    5d2d:	e8 24 00 00 00       	call   5d56 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5d32:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5d35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d39:	48 8b 00             	mov    (%rax),%rax
    5d3c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d40:	48 89 ce             	mov    %rcx,%rsi
    5d43:	48 89 c7             	mov    %rax,%rdi
    5d46:	e8 66 09 00 00       	call   66b1 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5d4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5d4f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5d53:	90                   	nop
    5d54:	c9                   	leave
    5d55:	c3                   	ret

0000000000005d56 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5d56:	55                   	push   %rbp
    5d57:	48 89 e5             	mov    %rsp,%rbp
    5d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d62:	5d                   	pop    %rbp
    5d63:	c3                   	ret

0000000000005d64 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5d64:	55                   	push   %rbp
    5d65:	48 89 e5             	mov    %rsp,%rbp
    5d68:	48 83 ec 20          	sub    $0x20,%rsp
    5d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5d78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d80:	48 89 d6             	mov    %rdx,%rsi
    5d83:	48 89 c7             	mov    %rax,%rdi
    5d86:	e8 4f 09 00 00       	call   66da <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    5d8b:	90                   	nop
    5d8c:	c9                   	leave
    5d8d:	c3                   	ret

0000000000005d8e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5d8e:	55                   	push   %rbp
    5d8f:	48 89 e5             	mov    %rsp,%rbp
    5d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5d9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d9e:	5d                   	pop    %rbp
    5d9f:	c3                   	ret

0000000000005da0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5da0:	55                   	push   %rbp
    5da1:	48 89 e5             	mov    %rsp,%rbp
    5da4:	48 83 ec 10          	sub    $0x10,%rsp
    5da8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5db0:	48 89 c7             	mov    %rax,%rdi
    5db3:	e8 48 09 00 00       	call   6700 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    5db8:	90                   	nop
    5db9:	c9                   	leave
    5dba:	c3                   	ret
    5dbb:	90                   	nop

0000000000005dbc <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    5dbc:	55                   	push   %rbp
    5dbd:	48 89 e5             	mov    %rsp,%rbp
    5dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    5dc4:	90                   	nop
    5dc5:	5d                   	pop    %rbp
    5dc6:	c3                   	ret
    5dc7:	90                   	nop

0000000000005dc8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    5dc8:	55                   	push   %rbp
    5dc9:	48 89 e5             	mov    %rsp,%rbp
    5dcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dd0:	90                   	nop
    5dd1:	5d                   	pop    %rbp
    5dd2:	c3                   	ret
    5dd3:	90                   	nop

0000000000005dd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    5dd4:	55                   	push   %rbp
    5dd5:	48 89 e5             	mov    %rsp,%rbp
    5dd8:	48 83 ec 20          	sub    $0x20,%rsp
    5ddc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5de0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    5de4:	eb 49                	jmp    5e2f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    5de6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5dea:	48 89 c7             	mov    %rax,%rdi
    5ded:	e8 19 09 00 00       	call   670b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    5df2:	48 89 c2             	mov    %rax,%rdx
    5df5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5df9:	48 89 d6             	mov    %rdx,%rsi
    5dfc:	48 89 c7             	mov    %rax,%rdi
    5dff:	e8 d0 ff ff ff       	call   5dd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    5e04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5e08:	48 89 c7             	mov    %rax,%rdi
    5e0b:	e8 0d 09 00 00       	call   671d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    5e10:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    5e14:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5e18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e1c:	48 89 d6             	mov    %rdx,%rsi
    5e1f:	48 89 c7             	mov    %rax,%rdi
    5e22:	e8 09 09 00 00       	call   6730 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    5e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e2b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    5e2f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5e34:	75 b0                	jne    5de6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
    5e36:	90                   	nop
    5e37:	90                   	nop
    5e38:	c9                   	leave
    5e39:	c3                   	ret

0000000000005e3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    5e3a:	55                   	push   %rbp
    5e3b:	48 89 e5             	mov    %rsp,%rbp
    5e3e:	48 83 ec 10          	sub    $0x10,%rsp
    5e42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    5e46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e4a:	48 89 c7             	mov    %rax,%rdi
    5e4d:	e8 18 09 00 00       	call   676a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    5e52:	c9                   	leave
    5e53:	c3                   	ret

0000000000005e54 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5e54:	55                   	push   %rbp
    5e55:	48 89 e5             	mov    %rsp,%rbp
    5e58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5e60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5e64:	48 8b 10             	mov    (%rax),%rdx
    5e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e6b:	48 89 10             	mov    %rdx,(%rax)
    5e6e:	90                   	nop
    5e6f:	5d                   	pop    %rbp
    5e70:	c3                   	ret
    5e71:	90                   	nop

0000000000005e72 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5e72:	55                   	push   %rbp
    5e73:	48 89 e5             	mov    %rsp,%rbp
    5e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e7e:	5d                   	pop    %rbp
    5e7f:	c3                   	ret

0000000000005e80 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    5e80:	55                   	push   %rbp
    5e81:	48 89 e5             	mov    %rsp,%rbp
    5e84:	48 83 ec 10          	sub    $0x10,%rsp
    5e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    5e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e98:	48 89 d6             	mov    %rdx,%rsi
    5e9b:	48 89 c7             	mov    %rax,%rdi
    5e9e:	e8 d9 08 00 00       	call   677c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    5ea3:	c9                   	leave
    5ea4:	c3                   	ret
    5ea5:	90                   	nop

0000000000005ea6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    5ea6:	55                   	push   %rbp
    5ea7:	48 89 e5             	mov    %rsp,%rbp
    5eaa:	48 83 ec 10          	sub    $0x10,%rsp
    5eae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    5eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb6:	48 89 c7             	mov    %rax,%rdi
    5eb9:	e8 0a 09 00 00       	call   67c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    5ebe:	c9                   	leave
    5ebf:	c3                   	ret

0000000000005ec0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    5ec0:	55                   	push   %rbp
    5ec1:	48 89 e5             	mov    %rsp,%rbp
    5ec4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ec8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    5ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed0:	48 8b 10             	mov    (%rax),%rdx
    5ed3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ed7:	48 8b 00             	mov    (%rax),%rax
    5eda:	48 39 c2             	cmp    %rax,%rdx
    5edd:	0f 94 c0             	sete   %al
    5ee0:	5d                   	pop    %rbp
    5ee1:	c3                   	ret

0000000000005ee2 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    5ee2:	55                   	push   %rbp
    5ee3:	48 89 e5             	mov    %rsp,%rbp
    5ee6:	48 83 ec 10          	sub    $0x10,%rsp
    5eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    5eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef2:	48 89 c7             	mov    %rax,%rdi
    5ef5:	e8 f8 08 00 00       	call   67f2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    5efa:	90                   	nop
    5efb:	c9                   	leave
    5efc:	c3                   	ret
    5efd:	90                   	nop

0000000000005efe <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    5efe:	55                   	push   %rbp
    5eff:	48 89 e5             	mov    %rsp,%rbp
    5f02:	48 83 ec 10          	sub    $0x10,%rsp
    5f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    5f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f0e:	48 8b 00             	mov    (%rax),%rax
    5f11:	48 89 c7             	mov    %rax,%rdi
    5f14:	e8 e5 08 00 00       	call   67fe <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    5f19:	c9                   	leave
    5f1a:	c3                   	ret
    5f1b:	90                   	nop

0000000000005f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    5f1c:	55                   	push   %rbp
    5f1d:	48 89 e5             	mov    %rsp,%rbp
    5f20:	48 83 ec 20          	sub    $0x20,%rsp
    5f24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    5f30:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f38:	48 89 d6             	mov    %rdx,%rsi
    5f3b:	48 89 c7             	mov    %rax,%rdi
    5f3e:	e8 d9 08 00 00       	call   681c <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    5f43:	c9                   	leave
    5f44:	c3                   	ret

0000000000005f45 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    5f45:	55                   	push   %rbp
    5f46:	48 89 e5             	mov    %rsp,%rbp
    5f49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    5f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f51:	5d                   	pop    %rbp
    5f52:	c3                   	ret

0000000000005f53 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    5f53:	55                   	push   %rbp
    5f54:	48 89 e5             	mov    %rsp,%rbp
    5f57:	48 83 ec 10          	sub    $0x10,%rsp
    5f5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    5f63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f67:	48 89 c7             	mov    %rax,%rdi
    5f6a:	e8 d5 08 00 00       	call   6844 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    5f6f:	48 89 c2             	mov    %rax,%rdx
    5f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f76:	48 89 d6             	mov    %rdx,%rsi
    5f79:	48 89 c7             	mov    %rax,%rdi
    5f7c:	e8 d1 08 00 00       	call   6852 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    5f81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f85:	c9                   	leave
    5f86:	c3                   	ret
    5f87:	90                   	nop

0000000000005f88 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    5f88:	55                   	push   %rbp
    5f89:	48 89 e5             	mov    %rsp,%rbp
    5f8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    5f94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f98:	48 8b 10             	mov    (%rax),%rdx
    5f9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f9f:	48 89 10             	mov    %rdx,(%rax)
    5fa2:	90                   	nop
    5fa3:	5d                   	pop    %rbp
    5fa4:	c3                   	ret
    5fa5:	90                   	nop

0000000000005fa6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    5fa6:	55                   	push   %rbp
    5fa7:	48 89 e5             	mov    %rsp,%rbp
    5faa:	41 54                	push   %r12
    5fac:	53                   	push   %rbx
    5fad:	48 83 ec 60          	sub    $0x60,%rsp
    5fb1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5fb5:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    5fb9:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    5fbd:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    5fc1:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    5fc5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5fc9:	48 89 c7             	mov    %rax,%rdi
    5fcc:	e8 d0 08 00 00       	call   68a1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    5fd1:	49 89 c4             	mov    %rax,%r12
    5fd4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5fd8:	48 89 c7             	mov    %rax,%rdi
    5fdb:	e8 b3 08 00 00       	call   6893 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    5fe0:	48 89 c3             	mov    %rax,%rbx
    5fe3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5fe7:	48 89 c7             	mov    %rax,%rdi
    5fea:	e8 96 08 00 00       	call   6885 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    5fef:	48 89 c2             	mov    %rax,%rdx
    5ff2:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    5ff6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5ffa:	4d 89 e0             	mov    %r12,%r8
    5ffd:	48 89 d9             	mov    %rbx,%rcx
    6000:	48 89 c7             	mov    %rax,%rdi
    6003:	e8 a8 08 00 00       	call   68b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    6008:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    600c:	48 89 c7             	mov    %rax,%rdi
    600f:	e8 9c 0d 00 00       	call   6db0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    6014:	48 89 c2             	mov    %rax,%rdx
    6017:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    601b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    601f:	48 89 ce             	mov    %rcx,%rsi
    6022:	48 89 c7             	mov    %rax,%rdi
    6025:	e8 38 09 00 00       	call   6962 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    602a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    602e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    6032:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6036:	48 85 c0             	test   %rax,%rax
    6039:	74 1c                	je     6057 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    603b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    603f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6043:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6047:	48 89 ce             	mov    %rcx,%rsi
    604a:	48 89 c7             	mov    %rax,%rdi
    604d:	e8 7c 0d 00 00       	call   6dce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    6052:	48 89 c3             	mov    %rax,%rbx
    6055:	eb 17                	jmp    606e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    6057:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    605b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    605f:	48 89 d6             	mov    %rdx,%rsi
    6062:	48 89 c7             	mov    %rax,%rdi
    6065:	e8 ba 0d 00 00       	call   6e24 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    606a:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    606e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6072:	48 89 c7             	mov    %rax,%rdi
    6075:	e8 b2 08 00 00       	call   692c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    607a:	48 89 d8             	mov    %rbx,%rax
    607d:	eb 1a                	jmp    6099 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    607f:	48 89 c3             	mov    %rax,%rbx
    6082:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6086:	48 89 c7             	mov    %rax,%rdi
    6089:	e8 9e 08 00 00       	call   692c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    608e:	48 89 d8             	mov    %rbx,%rax
    6091:	48 89 c7             	mov    %rax,%rdi
    6094:	e8 37 d3 ff ff       	call   33d0 <_Unwind_Resume@plt>
    6099:	48 83 c4 60          	add    $0x60,%rsp
    609d:	5b                   	pop    %rbx
    609e:	41 5c                	pop    %r12
    60a0:	5d                   	pop    %rbp
    60a1:	c3                   	ret

00000000000060a2 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    60a2:	55                   	push   %rbp
    60a3:	48 89 e5             	mov    %rsp,%rbp
    60a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    60ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    60b2:	48 8b 10             	mov    (%rax),%rdx
    60b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b9:	48 89 10             	mov    %rdx,(%rax)
    60bc:	90                   	nop
    60bd:	5d                   	pop    %rbp
    60be:	c3                   	ret
    60bf:	90                   	nop

00000000000060c0 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    60c0:	55                   	push   %rbp
    60c1:	48 89 e5             	mov    %rsp,%rbp
    60c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    60c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60cc:	5d                   	pop    %rbp
    60cd:	c3                   	ret

00000000000060ce <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    60ce:	55                   	push   %rbp
    60cf:	48 89 e5             	mov    %rsp,%rbp
    60d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60d6:	90                   	nop
    60d7:	5d                   	pop    %rbp
    60d8:	c3                   	ret
    60d9:	90                   	nop

00000000000060da <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    60da:	55                   	push   %rbp
    60db:	48 89 e5             	mov    %rsp,%rbp
    60de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60e2:	90                   	nop
    60e3:	5d                   	pop    %rbp
    60e4:	c3                   	ret

00000000000060e5 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    60e5:	55                   	push   %rbp
    60e6:	48 89 e5             	mov    %rsp,%rbp
    60e9:	53                   	push   %rbx
    60ea:	48 83 ec 28          	sub    $0x28,%rsp
    60ee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    60f2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    60f6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    60fa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    60fe:	48 89 d6             	mov    %rdx,%rsi
    6101:	48 89 c7             	mov    %rax,%rdi
    6104:	e8 ed 00 00 00       	call   61f6 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    6109:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    610d:	48 89 c7             	mov    %rax,%rdi
    6110:	e8 29 0d 00 00       	call   6e3e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    6115:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6119:	0f 92 c3             	setb   %bl
    611c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6120:	48 89 c7             	mov    %rax,%rdi
    6123:	e8 60 f5 ff ff       	call   5688 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    6128:	84 db                	test   %bl,%bl
    612a:	74 0f                	je     613b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    612c:	48 8d 05 d5 5d 00 00 	lea    0x5dd5(%rip),%rax        # bf08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    6133:	48 89 c7             	mov    %rax,%rdi
    6136:	e8 a5 cf ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    613b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    613f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6143:	c9                   	leave
    6144:	c3                   	ret
    6145:	90                   	nop

0000000000006146 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6146:	55                   	push   %rbp
    6147:	48 89 e5             	mov    %rsp,%rbp
    614a:	53                   	push   %rbx
    614b:	48 83 ec 28          	sub    $0x28,%rsp
    614f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6153:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6157:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    615b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    615f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6163:	48 89 d6             	mov    %rdx,%rsi
    6166:	48 89 c7             	mov    %rax,%rdi
    6169:	e8 12 0d 00 00       	call   6e80 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    616e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6172:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6176:	48 89 d6             	mov    %rdx,%rsi
    6179:	48 89 c7             	mov    %rax,%rdi
    617c:	e8 31 0d 00 00       	call   6eb2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    6181:	eb 1a                	jmp    619d <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    6183:	48 89 c3             	mov    %rax,%rbx
    6186:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    618a:	48 89 c7             	mov    %rax,%rdi
    618d:	e8 3c ed ff ff       	call   4ece <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    6192:	48 89 d8             	mov    %rbx,%rax
    6195:	48 89 c7             	mov    %rax,%rdi
    6198:	e8 33 d2 ff ff       	call   33d0 <_Unwind_Resume@plt>
    619d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    61a1:	c9                   	leave
    61a2:	c3                   	ret
    61a3:	90                   	nop

00000000000061a4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    61a4:	55                   	push   %rbp
    61a5:	48 89 e5             	mov    %rsp,%rbp
    61a8:	48 83 ec 10          	sub    $0x10,%rsp
    61ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    61b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b8:	48 89 c7             	mov    %rax,%rdi
    61bb:	e8 cc f5 ff ff       	call   578c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    61c0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    61c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61c7:	48 8b 00             	mov    (%rax),%rax
    61ca:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    61ce:	48 89 ce             	mov    %rcx,%rsi
    61d1:	48 89 c7             	mov    %rax,%rdi
    61d4:	e8 2f 0d 00 00       	call   6f08 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    61d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    61dd:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    61e1:	90                   	nop
    61e2:	c9                   	leave
    61e3:	c3                   	ret

00000000000061e4 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    61e4:	55                   	push   %rbp
    61e5:	48 89 e5             	mov    %rsp,%rbp
    61e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    61f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61f4:	5d                   	pop    %rbp
    61f5:	c3                   	ret

00000000000061f6 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    61f6:	55                   	push   %rbp
    61f7:	48 89 e5             	mov    %rsp,%rbp
    61fa:	48 83 ec 10          	sub    $0x10,%rsp
    61fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6202:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6206:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    620a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    620e:	48 89 d6             	mov    %rdx,%rsi
    6211:	48 89 c7             	mov    %rax,%rdi
    6214:	e8 19 0d 00 00       	call   6f32 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    6219:	90                   	nop
    621a:	c9                   	leave
    621b:	c3                   	ret

000000000000621c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    621c:	55                   	push   %rbp
    621d:	48 89 e5             	mov    %rsp,%rbp
    6220:	48 83 ec 20          	sub    $0x20,%rsp
    6224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6228:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    622c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6230:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6235:	74 17                	je     624e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    623b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    623f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6243:	48 89 ce             	mov    %rcx,%rsi
    6246:	48 89 c7             	mov    %rax,%rdi
    6249:	e8 f3 0c 00 00       	call   6f41 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    624e:	90                   	nop
    624f:	c9                   	leave
    6250:	c3                   	ret

0000000000006251 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6251:	55                   	push   %rbp
    6252:	48 89 e5             	mov    %rsp,%rbp
    6255:	48 83 ec 10          	sub    $0x10,%rsp
    6259:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    625d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    6261:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6269:	48 89 d6             	mov    %rdx,%rsi
    626c:	48 89 c7             	mov    %rax,%rdi
    626f:	e8 fb 0c 00 00       	call   6f6f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    6274:	90                   	nop
    6275:	c9                   	leave
    6276:	c3                   	ret

0000000000006277 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6277:	55                   	push   %rbp
    6278:	48 89 e5             	mov    %rsp,%rbp
    627b:	48 83 ec 20          	sub    $0x20,%rsp
    627f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6283:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    628a:	55 55 05 
    628d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6295:	48 89 c7             	mov    %rax,%rdi
    6298:	e8 e1 0c 00 00       	call   6f7e <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    629d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    62a1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    62a5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    62a9:	48 89 d6             	mov    %rdx,%rsi
    62ac:	48 89 c7             	mov    %rax,%rdi
    62af:	e8 e4 0c 00 00       	call   6f98 <_ZSt3minImERKT_S2_S2_>
    62b4:	48 8b 00             	mov    (%rax),%rax
      }
    62b7:	c9                   	leave
    62b8:	c3                   	ret
    62b9:	90                   	nop

00000000000062ba <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    62ba:	55                   	push   %rbp
    62bb:	48 89 e5             	mov    %rsp,%rbp
    62be:	48 83 ec 10          	sub    $0x10,%rsp
    62c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    62ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d2:	48 89 d6             	mov    %rdx,%rsi
    62d5:	48 89 c7             	mov    %rax,%rdi
    62d8:	e8 e7 0c 00 00       	call   6fc4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    62dd:	90                   	nop
    62de:	c9                   	leave
    62df:	c3                   	ret

00000000000062e0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    62e0:	55                   	push   %rbp
    62e1:	48 89 e5             	mov    %rsp,%rbp
    62e4:	48 83 ec 10          	sub    $0x10,%rsp
    62e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    62f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f8:	48 89 d6             	mov    %rdx,%rsi
    62fb:	48 89 c7             	mov    %rax,%rdi
    62fe:	e8 b7 ff ff ff       	call   62ba <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    6303:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6307:	48 89 c7             	mov    %rax,%rdi
    630a:	e8 c5 0c 00 00       	call   6fd4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    630f:	90                   	nop
    6310:	c9                   	leave
    6311:	c3                   	ret

0000000000006312 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6312:	55                   	push   %rbp
    6313:	48 89 e5             	mov    %rsp,%rbp
    6316:	48 83 ec 10          	sub    $0x10,%rsp
    631a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    631e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6322:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    632a:	48 89 d6             	mov    %rdx,%rsi
    632d:	48 89 c7             	mov    %rax,%rdi
    6330:	e8 cd 0c 00 00       	call   7002 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    6335:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6339:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    633c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6340:	48 8b 10             	mov    (%rax),%rdx
    6343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6347:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    634b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    634f:	48 8b 08             	mov    (%rax),%rcx
    6352:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6356:	48 89 d0             	mov    %rdx,%rax
    6359:	48 01 c0             	add    %rax,%rax
    635c:	48 01 d0             	add    %rdx,%rax
    635f:	48 c1 e0 03          	shl    $0x3,%rax
    6363:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6367:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    636f:	90                   	nop
    6370:	c9                   	leave
    6371:	c3                   	ret

0000000000006372 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    6372:	55                   	push   %rbp
    6373:	48 89 e5             	mov    %rsp,%rbp
    6376:	48 83 ec 20          	sub    $0x20,%rsp
    637a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    637e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6382:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6386:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    638b:	74 17                	je     63a4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    638d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6391:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6395:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6399:	48 89 ce             	mov    %rcx,%rsi
    639c:	48 89 c7             	mov    %rax,%rdi
    639f:	e8 91 0c 00 00       	call   7035 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    63a4:	90                   	nop
    63a5:	c9                   	leave
    63a6:	c3                   	ret

00000000000063a7 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    63a7:	55                   	push   %rbp
    63a8:	48 89 e5             	mov    %rsp,%rbp
    63ab:	48 83 ec 20          	sub    $0x20,%rsp
    63af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    63bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63c3:	48 89 d6             	mov    %rdx,%rsi
    63c6:	48 89 c7             	mov    %rax,%rdi
    63c9:	e8 95 0c 00 00       	call   7063 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    63ce:	c9                   	leave
    63cf:	c3                   	ret

00000000000063d0 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    63d0:	55                   	push   %rbp
    63d1:	48 89 e5             	mov    %rsp,%rbp
    63d4:	48 83 ec 10          	sub    $0x10,%rsp
    63d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    63e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63e8:	48 89 d6             	mov    %rdx,%rsi
    63eb:	48 89 c7             	mov    %rax,%rdi
    63ee:	e8 99 0c 00 00       	call   708c <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    63f3:	90                   	nop
    63f4:	c9                   	leave
    63f5:	c3                   	ret

00000000000063f6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    63f6:	55                   	push   %rbp
    63f7:	48 89 e5             	mov    %rsp,%rbp
    63fa:	48 83 ec 10          	sub    $0x10,%rsp
    63fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6402:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6406:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    640a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    640e:	48 89 d6             	mov    %rdx,%rsi
    6411:	48 89 c7             	mov    %rax,%rdi
    6414:	e8 83 0c 00 00       	call   709c <_ZNSaIPKcEC1ERKS1_>
    6419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    641d:	48 89 c7             	mov    %rax,%rdi
    6420:	e8 9d 0c 00 00       	call   70c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6425:	90                   	nop
    6426:	c9                   	leave
    6427:	c3                   	ret

0000000000006428 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    6428:	55                   	push   %rbp
    6429:	48 89 e5             	mov    %rsp,%rbp
    642c:	48 83 ec 20          	sub    $0x20,%rsp
    6430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6434:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6438:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    643c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6441:	74 17                	je     645a <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6447:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    644b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    644f:	48 89 ce             	mov    %rcx,%rsi
    6452:	48 89 c7             	mov    %rax,%rdi
    6455:	e8 96 0c 00 00       	call   70f0 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    645a:	90                   	nop
    645b:	c9                   	leave
    645c:	c3                   	ret
    645d:	90                   	nop

000000000000645e <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    645e:	55                   	push   %rbp
    645f:	48 89 e5             	mov    %rsp,%rbp
    6462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646a:	48 8b 40 08          	mov    0x8(%rax),%rax
    646e:	5d                   	pop    %rbp
    646f:	c3                   	ret

0000000000006470 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    6470:	55                   	push   %rbp
    6471:	48 89 e5             	mov    %rsp,%rbp
    6474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6478:	90                   	nop
    6479:	5d                   	pop    %rbp
    647a:	c3                   	ret

000000000000647b <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    647b:	55                   	push   %rbp
    647c:	48 89 e5             	mov    %rsp,%rbp
    647f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6483:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    6487:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    648b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    648f:	48 c1 f8 03          	sar    $0x3,%rax
    }
    6493:	5d                   	pop    %rbp
    6494:	c3                   	ret

0000000000006495 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6495:	55                   	push   %rbp
    6496:	48 89 e5             	mov    %rsp,%rbp
    6499:	53                   	push   %rbx
    649a:	48 83 ec 28          	sub    $0x28,%rsp
    649e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    64a2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    64a6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    64aa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    64ae:	48 89 d6             	mov    %rdx,%rsi
    64b1:	48 89 c7             	mov    %rax,%rdi
    64b4:	e8 e3 0b 00 00       	call   709c <_ZNSaIPKcEC1ERKS1_>
    64b9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    64bd:	48 89 c7             	mov    %rax,%rdi
    64c0:	e8 59 0c 00 00       	call   711e <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    64c5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    64c9:	0f 92 c3             	setb   %bl
    64cc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    64d0:	48 89 c7             	mov    %rax,%rdi
    64d3:	e8 88 ec ff ff       	call   5160 <_ZNSaIPKcED1Ev>
    64d8:	84 db                	test   %bl,%bl
    64da:	74 0f                	je     64eb <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    64dc:	48 8d 05 25 5a 00 00 	lea    0x5a25(%rip),%rax        # bf08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    64e3:	48 89 c7             	mov    %rax,%rdi
    64e6:	e8 f5 cb ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    64eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    64ef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    64f3:	c9                   	leave
    64f4:	c3                   	ret
    64f5:	90                   	nop

00000000000064f6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    64f6:	55                   	push   %rbp
    64f7:	48 89 e5             	mov    %rsp,%rbp
    64fa:	48 83 ec 10          	sub    $0x10,%rsp
    64fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6502:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6506:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    650b:	74 15                	je     6522 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    650d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6511:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6515:	48 89 d6             	mov    %rdx,%rsi
    6518:	48 89 c7             	mov    %rax,%rdi
    651b:	e8 40 0c 00 00       	call   7160 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    6520:	eb 05                	jmp    6527 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    6522:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6527:	c9                   	leave
    6528:	c3                   	ret

0000000000006529 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    6529:	55                   	push   %rbp
    652a:	48 89 e5             	mov    %rsp,%rbp
    652d:	48 83 ec 20          	sub    $0x20,%rsp
    6531:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6535:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6539:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    653d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    6541:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6545:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    654d:	48 89 ce             	mov    %rcx,%rsi
    6550:	48 89 c7             	mov    %rax,%rdi
    6553:	e8 32 0c 00 00       	call   718a <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    6558:	c9                   	leave
    6559:	c3                   	ret

000000000000655a <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    655a:	55                   	push   %rbp
    655b:	48 89 e5             	mov    %rsp,%rbp
    655e:	48 83 ec 10          	sub    $0x10,%rsp
    6562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6566:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    656a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    656e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6572:	48 89 d6             	mov    %rdx,%rsi
    6575:	48 89 c7             	mov    %rax,%rdi
    6578:	e8 42 0c 00 00       	call   71bf <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    657d:	90                   	nop
    657e:	c9                   	leave
    657f:	c3                   	ret

0000000000006580 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6580:	55                   	push   %rbp
    6581:	48 89 e5             	mov    %rsp,%rbp
    6584:	48 83 ec 20          	sub    $0x20,%rsp
    6588:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    658c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    6593:	07 7e 00 
    6596:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    659a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    659e:	48 89 c7             	mov    %rax,%rdi
    65a1:	e8 28 0c 00 00       	call   71ce <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    65a6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    65aa:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    65ae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    65b2:	48 89 d6             	mov    %rdx,%rsi
    65b5:	48 89 c7             	mov    %rax,%rdi
    65b8:	e8 db 09 00 00       	call   6f98 <_ZSt3minImERKT_S2_S2_>
    65bd:	48 8b 00             	mov    (%rax),%rax
      }
    65c0:	c9                   	leave
    65c1:	c3                   	ret

00000000000065c2 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    65c2:	55                   	push   %rbp
    65c3:	48 89 e5             	mov    %rsp,%rbp
    65c6:	48 83 ec 10          	sub    $0x10,%rsp
    65ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    65d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    65d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65da:	48 89 d6             	mov    %rdx,%rsi
    65dd:	48 89 c7             	mov    %rax,%rdi
    65e0:	e8 03 0c 00 00       	call   71e8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    65e5:	90                   	nop
    65e6:	c9                   	leave
    65e7:	c3                   	ret

00000000000065e8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    65e8:	55                   	push   %rbp
    65e9:	48 89 e5             	mov    %rsp,%rbp
    65ec:	48 83 ec 10          	sub    $0x10,%rsp
    65f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    65f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    65fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6600:	48 89 d6             	mov    %rdx,%rsi
    6603:	48 89 c7             	mov    %rax,%rdi
    6606:	e8 b7 ff ff ff       	call   65c2 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    660b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    660f:	48 89 c7             	mov    %rax,%rdi
    6612:	e8 e1 0b 00 00       	call   71f8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6617:	90                   	nop
    6618:	c9                   	leave
    6619:	c3                   	ret

000000000000661a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    661a:	55                   	push   %rbp
    661b:	48 89 e5             	mov    %rsp,%rbp
    661e:	48 83 ec 10          	sub    $0x10,%rsp
    6622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6626:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    662a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    662e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6632:	48 89 d6             	mov    %rdx,%rsi
    6635:	48 89 c7             	mov    %rax,%rdi
    6638:	e8 e9 0b 00 00       	call   7226 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    663d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6641:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6648:	48 8b 10             	mov    (%rax),%rdx
    664b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    664f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6657:	48 8b 08             	mov    (%rax),%rcx
    665a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    665e:	48 89 d0             	mov    %rdx,%rax
    6661:	48 c1 e0 06          	shl    $0x6,%rax
    6665:	48 01 d0             	add    %rdx,%rax
    6668:	48 c1 e0 02          	shl    $0x2,%rax
    666c:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6674:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6678:	90                   	nop
    6679:	c9                   	leave
    667a:	c3                   	ret
    667b:	90                   	nop

000000000000667c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    667c:	55                   	push   %rbp
    667d:	48 89 e5             	mov    %rsp,%rbp
    6680:	48 83 ec 20          	sub    $0x20,%rsp
    6684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6688:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    668c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6690:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6695:	74 17                	je     66ae <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    669b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    669f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    66a3:	48 89 ce             	mov    %rcx,%rsi
    66a6:	48 89 c7             	mov    %rax,%rdi
    66a9:	e8 ab 0b 00 00       	call   7259 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    66ae:	90                   	nop
    66af:	c9                   	leave
    66b0:	c3                   	ret

00000000000066b1 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    66b1:	55                   	push   %rbp
    66b2:	48 89 e5             	mov    %rsp,%rbp
    66b5:	48 83 ec 20          	sub    $0x20,%rsp
    66b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    66c5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66cd:	48 89 d6             	mov    %rdx,%rsi
    66d0:	48 89 c7             	mov    %rax,%rdi
    66d3:	e8 af 0b 00 00       	call   7287 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    66d8:	c9                   	leave
    66d9:	c3                   	ret

00000000000066da <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    66da:	55                   	push   %rbp
    66db:	48 89 e5             	mov    %rsp,%rbp
    66de:	48 83 ec 10          	sub    $0x10,%rsp
    66e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    66ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66f2:	48 89 d6             	mov    %rdx,%rsi
    66f5:	48 89 c7             	mov    %rax,%rdi
    66f8:	e8 b3 0b 00 00       	call   72b0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    66fd:	90                   	nop
    66fe:	c9                   	leave
    66ff:	c3                   	ret

0000000000006700 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6700:	55                   	push   %rbp
    6701:	48 89 e5             	mov    %rsp,%rbp
    6704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6708:	90                   	nop
    6709:	5d                   	pop    %rbp
    670a:	c3                   	ret

000000000000670b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    670b:	55                   	push   %rbp
    670c:	48 89 e5             	mov    %rsp,%rbp
    670f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    6713:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6717:	48 8b 40 18          	mov    0x18(%rax),%rax
    671b:	5d                   	pop    %rbp
    671c:	c3                   	ret

000000000000671d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    671d:	55                   	push   %rbp
    671e:	48 89 e5             	mov    %rsp,%rbp
    6721:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    6725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6729:	48 8b 40 10          	mov    0x10(%rax),%rax
    672d:	5d                   	pop    %rbp
    672e:	c3                   	ret
    672f:	90                   	nop

0000000000006730 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    6730:	55                   	push   %rbp
    6731:	48 89 e5             	mov    %rsp,%rbp
    6734:	48 83 ec 10          	sub    $0x10,%rsp
    6738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    673c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    6740:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6748:	48 89 d6             	mov    %rdx,%rsi
    674b:	48 89 c7             	mov    %rax,%rdi
    674e:	e8 6d 0b 00 00       	call   72c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    6753:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6757:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    675b:	48 89 d6             	mov    %rdx,%rsi
    675e:	48 89 c7             	mov    %rax,%rdi
    6761:	e8 98 0b 00 00       	call   72fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    6766:	90                   	nop
    6767:	c9                   	leave
    6768:	c3                   	ret
    6769:	90                   	nop

000000000000676a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    676a:	55                   	push   %rbp
    676b:	48 89 e5             	mov    %rsp,%rbp
    676e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    6772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6776:	48 8b 40 10          	mov    0x10(%rax),%rax
    677a:	5d                   	pop    %rbp
    677b:	c3                   	ret

000000000000677c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    677c:	55                   	push   %rbp
    677d:	48 89 e5             	mov    %rsp,%rbp
    6780:	53                   	push   %rbx
    6781:	48 83 ec 18          	sub    $0x18,%rsp
    6785:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6789:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    678d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6791:	48 89 c7             	mov    %rax,%rdi
    6794:	e8 9b 0b 00 00       	call   7334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    6799:	48 89 c3             	mov    %rax,%rbx
    679c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67a0:	48 89 c7             	mov    %rax,%rdi
    67a3:	e8 92 f6 ff ff       	call   5e3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    67a8:	48 89 c6             	mov    %rax,%rsi
    67ab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    67af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67b3:	48 89 d1             	mov    %rdx,%rcx
    67b6:	48 89 da             	mov    %rbx,%rdx
    67b9:	48 89 c7             	mov    %rax,%rdi
    67bc:	e8 85 0b 00 00       	call   7346 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    67c1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    67c5:	c9                   	leave
    67c6:	c3                   	ret
    67c7:	90                   	nop

00000000000067c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    67c8:	55                   	push   %rbp
    67c9:	48 89 e5             	mov    %rsp,%rbp
    67cc:	48 83 ec 20          	sub    $0x20,%rsp
    67d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    67d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67d8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    67dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    67e0:	48 89 d6             	mov    %rdx,%rsi
    67e3:	48 89 c7             	mov    %rax,%rdi
    67e6:	e8 39 06 00 00       	call   6e24 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    67eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67ef:	c9                   	leave
    67f0:	c3                   	ret
    67f1:	90                   	nop

00000000000067f2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    67f2:	55                   	push   %rbp
    67f3:	48 89 e5             	mov    %rsp,%rbp
    67f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    67fa:	90                   	nop
    67fb:	5d                   	pop    %rbp
    67fc:	c3                   	ret
    67fd:	90                   	nop

00000000000067fe <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    67fe:	55                   	push   %rbp
    67ff:	48 89 e5             	mov    %rsp,%rbp
    6802:	48 83 ec 10          	sub    $0x10,%rsp
    6806:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    680a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    680e:	48 83 c0 20          	add    $0x20,%rax
    6812:	48 89 c7             	mov    %rax,%rdi
    6815:	e8 c2 0b 00 00       	call   73dc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    681a:	c9                   	leave
    681b:	c3                   	ret

000000000000681c <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    681c:	55                   	push   %rbp
    681d:	48 89 e5             	mov    %rsp,%rbp
    6820:	48 83 ec 10          	sub    $0x10,%rsp
    6824:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6828:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    682c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6834:	48 89 d6             	mov    %rdx,%rsi
    6837:	48 89 c7             	mov    %rax,%rdi
    683a:	e8 f1 c7 ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    683f:	c1 e8 1f             	shr    $0x1f,%eax
    6842:	c9                   	leave
    6843:	c3                   	ret

0000000000006844 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6844:	55                   	push   %rbp
    6845:	48 89 e5             	mov    %rsp,%rbp
    6848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    684c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6850:	5d                   	pop    %rbp
    6851:	c3                   	ret

0000000000006852 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    6852:	55                   	push   %rbp
    6853:	48 89 e5             	mov    %rsp,%rbp
    6856:	53                   	push   %rbx
    6857:	48 83 ec 18          	sub    $0x18,%rsp
    685b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    685f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    6863:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6867:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    686b:	48 89 c7             	mov    %rax,%rdi
    686e:	e8 d1 ff ff ff       	call   6844 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    6873:	48 89 c6             	mov    %rax,%rsi
    6876:	48 89 df             	mov    %rbx,%rdi
    6879:	e8 78 0b 00 00       	call   73f6 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    687e:	90                   	nop
    687f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6883:	c9                   	leave
    6884:	c3                   	ret

0000000000006885 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6885:	55                   	push   %rbp
    6886:	48 89 e5             	mov    %rsp,%rbp
    6889:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    688d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6891:	5d                   	pop    %rbp
    6892:	c3                   	ret

0000000000006893 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6893:	55                   	push   %rbp
    6894:	48 89 e5             	mov    %rsp,%rbp
    6897:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    689b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    689f:	5d                   	pop    %rbp
    68a0:	c3                   	ret

00000000000068a1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    68a1:	55                   	push   %rbp
    68a2:	48 89 e5             	mov    %rsp,%rbp
    68a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    68a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ad:	5d                   	pop    %rbp
    68ae:	c3                   	ret
    68af:	90                   	nop

00000000000068b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    68b0:	55                   	push   %rbp
    68b1:	48 89 e5             	mov    %rsp,%rbp
    68b4:	41 54                	push   %r12
    68b6:	53                   	push   %rbx
    68b7:	48 83 ec 30          	sub    $0x30,%rsp
    68bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    68bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    68c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    68c7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    68cb:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    68cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68d3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    68d7:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    68da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    68de:	48 89 c7             	mov    %rax,%rdi
    68e1:	e8 bb ff ff ff       	call   68a1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    68e6:	49 89 c4             	mov    %rax,%r12
    68e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    68ed:	48 89 c7             	mov    %rax,%rdi
    68f0:	e8 9e ff ff ff       	call   6893 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    68f5:	48 89 c3             	mov    %rax,%rbx
    68f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    68fc:	48 89 c7             	mov    %rax,%rdi
    68ff:	e8 81 ff ff ff       	call   6885 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    6904:	48 89 c6             	mov    %rax,%rsi
    6907:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    690b:	4c 89 e1             	mov    %r12,%rcx
    690e:	48 89 da             	mov    %rbx,%rdx
    6911:	48 89 c7             	mov    %rax,%rdi
    6914:	e8 11 0b 00 00       	call   742a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    6919:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    691d:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    6921:	90                   	nop
    6922:	48 83 c4 30          	add    $0x30,%rsp
    6926:	5b                   	pop    %rbx
    6927:	41 5c                	pop    %r12
    6929:	5d                   	pop    %rbp
    692a:	c3                   	ret
    692b:	90                   	nop

000000000000692c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    692c:	55                   	push   %rbp
    692d:	48 89 e5             	mov    %rsp,%rbp
    6930:	48 83 ec 10          	sub    $0x10,%rsp
    6934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    6938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    693c:	48 8b 40 08          	mov    0x8(%rax),%rax
    6940:	48 85 c0             	test   %rax,%rax
    6943:	74 1a                	je     695f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    6945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6949:	48 8b 00             	mov    (%rax),%rax
    694c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6950:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    6954:	48 89 d6             	mov    %rdx,%rsi
    6957:	48 89 c7             	mov    %rax,%rdi
    695a:	e8 d1 fd ff ff       	call   6730 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    695f:	90                   	nop
    6960:	c9                   	leave
    6961:	c3                   	ret

0000000000006962 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    6962:	55                   	push   %rbp
    6963:	48 89 e5             	mov    %rsp,%rbp
    6966:	53                   	push   %rbx
    6967:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    696e:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    6975:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    697c:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    6983:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    698a:	48 89 c7             	mov    %rax,%rdi
    698d:	e8 14 0b 00 00       	call   74a6 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    6992:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    6999:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    69a0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    69a7:	48 89 c7             	mov    %rax,%rdi
    69aa:	e8 85 09 00 00       	call   7334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    69af:	48 39 c3             	cmp    %rax,%rbx
    69b2:	0f 94 c0             	sete   %al
    69b5:	84 c0                	test   %al,%al
    69b7:	0f 84 c8 00 00 00    	je     6a85 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    69bd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    69c4:	48 89 c7             	mov    %rax,%rdi
    69c7:	e8 02 0b 00 00       	call   74ce <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    69cc:	48 85 c0             	test   %rax,%rax
    69cf:	74 44                	je     6a15 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    69d1:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    69d8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    69df:	48 89 c7             	mov    %rax,%rdi
    69e2:	e8 f9 0a 00 00       	call   74e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    69e7:	48 8b 00             	mov    (%rax),%rax
    69ea:	48 89 c7             	mov    %rax,%rdi
    69ed:	e8 00 0b 00 00       	call   74f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    69f2:	48 89 c1             	mov    %rax,%rcx
    69f5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    69fc:	48 89 c2             	mov    %rax,%rdx
    69ff:	48 89 ce             	mov    %rcx,%rsi
    6a02:	48 89 df             	mov    %rbx,%rdi
    6a05:	e8 12 f5 ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6a0a:	84 c0                	test   %al,%al
    6a0c:	74 07                	je     6a15 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    6a0e:	b8 01 00 00 00       	mov    $0x1,%eax
    6a13:	eb 05                	jmp    6a1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    6a15:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    6a1a:	84 c0                	test   %al,%al
    6a1c:	74 49                	je     6a67 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    6a1e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6a25:	48 89 c7             	mov    %rax,%rdi
    6a28:	e8 b3 0a 00 00       	call   74e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6a2d:	48 89 c2             	mov    %rax,%rdx
    6a30:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    6a37:	00 00 00 00 
    6a3b:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    6a42:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    6a49:	48 89 ce             	mov    %rcx,%rsi
    6a4c:	48 89 c7             	mov    %rax,%rdi
    6a4f:	e8 b8 0a 00 00       	call   750c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6a54:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    6a5b:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    6a62:	e9 43 03 00 00       	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    6a67:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6a6e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6a75:	48 89 d6             	mov    %rdx,%rsi
    6a78:	48 89 c7             	mov    %rax,%rdi
    6a7b:	e8 bc 0a 00 00       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    6a80:	e9 25 03 00 00       	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    6a85:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6a8c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6a93:	48 89 c7             	mov    %rax,%rdi
    6a96:	e8 57 0a 00 00       	call   74f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6a9b:	48 89 c2             	mov    %rax,%rdx
    6a9e:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6aa5:	48 89 c6             	mov    %rax,%rsi
    6aa8:	48 89 df             	mov    %rbx,%rdi
    6aab:	e8 6c f4 ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6ab0:	84 c0                	test   %al,%al
    6ab2:	0f 84 66 01 00 00    	je     6c1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    6ab8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6abf:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    6ac6:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    6acd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6ad4:	48 89 c7             	mov    %rax,%rdi
    6ad7:	e8 d6 0b 00 00       	call   76b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    6adc:	48 8b 00             	mov    (%rax),%rax
    6adf:	48 39 c3             	cmp    %rax,%rbx
    6ae2:	0f 94 c0             	sete   %al
    6ae5:	84 c0                	test   %al,%al
    6ae7:	74 4c                	je     6b35 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    6ae9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6af0:	48 89 c7             	mov    %rax,%rdi
    6af3:	e8 ba 0b 00 00       	call   76b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    6af8:	48 89 c3             	mov    %rax,%rbx
    6afb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6b02:	48 89 c7             	mov    %rax,%rdi
    6b05:	e8 a8 0b 00 00       	call   76b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    6b0a:	48 89 c1             	mov    %rax,%rcx
    6b0d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    6b14:	48 89 da             	mov    %rbx,%rdx
    6b17:	48 89 ce             	mov    %rcx,%rsi
    6b1a:	48 89 c7             	mov    %rax,%rdi
    6b1d:	e8 a2 0b 00 00       	call   76c4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    6b22:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    6b29:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    6b30:	e9 75 02 00 00       	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    6b35:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6b3c:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    6b43:	48 89 c7             	mov    %rax,%rdi
    6b46:	e8 bd 0b 00 00       	call   7708 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    6b4b:	48 8b 00             	mov    (%rax),%rax
    6b4e:	48 89 c7             	mov    %rax,%rdi
    6b51:	e8 9c 09 00 00       	call   74f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6b56:	48 89 c1             	mov    %rax,%rcx
    6b59:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6b60:	48 89 c2             	mov    %rax,%rdx
    6b63:	48 89 ce             	mov    %rcx,%rsi
    6b66:	48 89 df             	mov    %rbx,%rdi
    6b69:	e8 ae f3 ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6b6e:	84 c0                	test   %al,%al
    6b70:	0f 84 8a 00 00 00    	je     6c00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    6b76:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    6b7d:	48 89 c7             	mov    %rax,%rdi
    6b80:	e8 86 fb ff ff       	call   670b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    6b85:	48 85 c0             	test   %rax,%rax
    6b88:	0f 94 c0             	sete   %al
    6b8b:	84 c0                	test   %al,%al
    6b8d:	74 3e                	je     6bcd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    6b8f:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    6b96:	00 00 00 00 
    6b9a:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    6ba1:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    6ba8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    6baf:	48 89 ce             	mov    %rcx,%rsi
    6bb2:	48 89 c7             	mov    %rax,%rdi
    6bb5:	e8 52 09 00 00       	call   750c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6bba:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    6bc1:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    6bc8:	e9 dd 01 00 00       	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    6bcd:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    6bd4:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    6bdb:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    6be2:	48 89 ce             	mov    %rcx,%rsi
    6be5:	48 89 c7             	mov    %rax,%rdi
    6be8:	e8 d7 0a 00 00       	call   76c4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    6bed:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6bf4:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6bfb:	e9 aa 01 00 00       	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    6c00:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6c07:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6c0e:	48 89 d6             	mov    %rdx,%rsi
    6c11:	48 89 c7             	mov    %rax,%rdi
    6c14:	e8 23 09 00 00       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    6c19:	e9 8c 01 00 00       	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    6c1e:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6c25:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6c2c:	48 89 c7             	mov    %rax,%rdi
    6c2f:	e8 be 08 00 00       	call   74f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6c34:	48 89 c1             	mov    %rax,%rcx
    6c37:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6c3e:	48 89 c2             	mov    %rax,%rdx
    6c41:	48 89 ce             	mov    %rcx,%rsi
    6c44:	48 89 df             	mov    %rbx,%rdi
    6c47:	e8 d0 f2 ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6c4c:	84 c0                	test   %al,%al
    6c4e:	0f 84 2c 01 00 00    	je     6d80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    6c54:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6c5b:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    6c62:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    6c69:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6c70:	48 89 c7             	mov    %rax,%rdi
    6c73:	e8 68 08 00 00       	call   74e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6c78:	48 8b 00             	mov    (%rax),%rax
    6c7b:	48 39 c3             	cmp    %rax,%rbx
    6c7e:	0f 94 c0             	sete   %al
    6c81:	84 c0                	test   %al,%al
    6c83:	74 3a                	je     6cbf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    6c85:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6c8c:	48 89 c7             	mov    %rax,%rdi
    6c8f:	e8 4c 08 00 00       	call   74e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6c94:	48 89 c2             	mov    %rax,%rdx
    6c97:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    6c9e:	00 
    6c9f:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    6ca3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6ca7:	48 89 ce             	mov    %rcx,%rsi
    6caa:	48 89 c7             	mov    %rax,%rdi
    6cad:	e8 5a 08 00 00       	call   750c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6cb2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    6cb6:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    6cba:	e9 eb 00 00 00       	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    6cbf:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6cc6:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    6ccd:	48 89 c7             	mov    %rax,%rdi
    6cd0:	e8 5b 0a 00 00       	call   7730 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    6cd5:	48 8b 00             	mov    (%rax),%rax
    6cd8:	48 89 c7             	mov    %rax,%rdi
    6cdb:	e8 12 08 00 00       	call   74f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6ce0:	48 89 c2             	mov    %rax,%rdx
    6ce3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6cea:	48 89 c6             	mov    %rax,%rsi
    6ced:	48 89 df             	mov    %rbx,%rdi
    6cf0:	e8 27 f2 ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6cf5:	84 c0                	test   %al,%al
    6cf7:	74 6c                	je     6d65 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    6cf9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6d00:	48 89 c7             	mov    %rax,%rdi
    6d03:	e8 03 fa ff ff       	call   670b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    6d08:	48 85 c0             	test   %rax,%rax
    6d0b:	0f 94 c0             	sete   %al
    6d0e:	84 c0                	test   %al,%al
    6d10:	74 2c                	je     6d3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    6d12:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    6d19:	00 
    6d1a:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    6d21:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    6d25:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6d29:	48 89 ce             	mov    %rcx,%rsi
    6d2c:	48 89 c7             	mov    %rax,%rdi
    6d2f:	e8 d8 07 00 00       	call   750c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6d34:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6d38:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6d3c:	eb 6c                	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    6d3e:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    6d45:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    6d4c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6d50:	48 89 ce             	mov    %rcx,%rsi
    6d53:	48 89 c7             	mov    %rax,%rdi
    6d56:	e8 69 09 00 00       	call   76c4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    6d5b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6d5f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6d63:	eb 45                	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    6d65:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6d6c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6d73:	48 89 d6             	mov    %rdx,%rsi
    6d76:	48 89 c7             	mov    %rax,%rdi
    6d79:	e8 be 07 00 00       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    6d7e:	eb 2a                	jmp    6daa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    6d80:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    6d87:	00 
    6d88:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6d8c:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    6d93:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6d97:	48 89 ce             	mov    %rcx,%rsi
    6d9a:	48 89 c7             	mov    %rax,%rdi
    6d9d:	e8 6a 07 00 00       	call   750c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6da2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6da6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    6daa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6dae:	c9                   	leave
    6daf:	c3                   	ret

0000000000006db0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    6db0:	55                   	push   %rbp
    6db1:	48 89 e5             	mov    %rsp,%rbp
    6db4:	48 83 ec 10          	sub    $0x10,%rsp
    6db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    6dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dc0:	48 8b 40 08          	mov    0x8(%rax),%rax
    6dc4:	48 89 c7             	mov    %rax,%rdi
    6dc7:	e8 8c 09 00 00       	call   7758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    6dcc:	c9                   	leave
    6dcd:	c3                   	ret

0000000000006dce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    6dce:	55                   	push   %rbp
    6dcf:	48 89 e5             	mov    %rsp,%rbp
    6dd2:	48 83 ec 30          	sub    $0x30,%rsp
    6dd6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6dda:	48 89 d1             	mov    %rdx,%rcx
    6ddd:	48 89 f0             	mov    %rsi,%rax
    6de0:	48 89 fa             	mov    %rdi,%rdx
    6de3:	48 89 ca             	mov    %rcx,%rdx
    6de6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6dea:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    6dee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6df2:	48 8b 00             	mov    (%rax),%rax
    6df5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6df9:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    6dfd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6e01:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6e05:	48 89 c7             	mov    %rax,%rdi
    6e08:	e8 77 09 00 00       	call   7784 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    6e0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    6e11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e15:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6e1c:	00 
	  return __it;
    6e1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    6e21:	c9                   	leave
    6e22:	c3                   	ret
    6e23:	90                   	nop

0000000000006e24 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    6e24:	55                   	push   %rbp
    6e25:	48 89 e5             	mov    %rsp,%rbp
    6e28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    6e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e38:	48 89 10             	mov    %rdx,(%rax)
    6e3b:	90                   	nop
    6e3c:	5d                   	pop    %rbp
    6e3d:	c3                   	ret

0000000000006e3e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6e3e:	55                   	push   %rbp
    6e3f:	48 89 e5             	mov    %rsp,%rbp
    6e42:	48 83 ec 20          	sub    $0x20,%rsp
    6e46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6e4a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6e51:	ff ff 0f 
    6e54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6e58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e5c:	48 89 c7             	mov    %rax,%rdi
    6e5f:	e8 e3 09 00 00       	call   7847 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    6e64:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6e68:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6e6c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6e70:	48 89 d6             	mov    %rdx,%rsi
    6e73:	48 89 c7             	mov    %rax,%rdi
    6e76:	e8 1d 01 00 00       	call   6f98 <_ZSt3minImERKT_S2_S2_>
    6e7b:	48 8b 00             	mov    (%rax),%rax
      }
    6e7e:	c9                   	leave
    6e7f:	c3                   	ret

0000000000006e80 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6e80:	55                   	push   %rbp
    6e81:	48 89 e5             	mov    %rsp,%rbp
    6e84:	48 83 ec 10          	sub    $0x10,%rsp
    6e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6e90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e98:	48 89 d6             	mov    %rdx,%rsi
    6e9b:	48 89 c7             	mov    %rax,%rdi
    6e9e:	e8 53 f3 ff ff       	call   61f6 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    6ea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ea7:	48 89 c7             	mov    %rax,%rdi
    6eaa:	e8 b3 09 00 00       	call   7862 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6eaf:	90                   	nop
    6eb0:	c9                   	leave
    6eb1:	c3                   	ret

0000000000006eb2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6eb2:	55                   	push   %rbp
    6eb3:	48 89 e5             	mov    %rsp,%rbp
    6eb6:	48 83 ec 10          	sub    $0x10,%rsp
    6eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ebe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6ec2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eca:	48 89 d6             	mov    %rdx,%rsi
    6ecd:	48 89 c7             	mov    %rax,%rdi
    6ed0:	e8 bb 09 00 00       	call   7890 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    6ed5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6ed9:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ee0:	48 8b 10             	mov    (%rax),%rdx
    6ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ee7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6eeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eef:	48 8b 00             	mov    (%rax),%rax
    6ef2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ef6:	48 c1 e2 03          	shl    $0x3,%rdx
    6efa:	48 01 c2             	add    %rax,%rdx
    6efd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f01:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6f05:	90                   	nop
    6f06:	c9                   	leave
    6f07:	c3                   	ret

0000000000006f08 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6f08:	55                   	push   %rbp
    6f09:	48 89 e5             	mov    %rsp,%rbp
    6f0c:	48 83 ec 20          	sub    $0x20,%rsp
    6f10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f18:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6f1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f24:	48 89 d6             	mov    %rdx,%rsi
    6f27:	48 89 c7             	mov    %rax,%rdi
    6f2a:	e8 94 09 00 00       	call   78c3 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    6f2f:	c9                   	leave
    6f30:	c3                   	ret
    6f31:	90                   	nop

0000000000006f32 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6f32:	55                   	push   %rbp
    6f33:	48 89 e5             	mov    %rsp,%rbp
    6f36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f3e:	90                   	nop
    6f3f:	5d                   	pop    %rbp
    6f40:	c3                   	ret

0000000000006f41 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6f41:	55                   	push   %rbp
    6f42:	48 89 e5             	mov    %rsp,%rbp
    6f45:	48 83 ec 20          	sub    $0x20,%rsp
    6f49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f51:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6f55:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6f5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f61:	48 89 ce             	mov    %rcx,%rsi
    6f64:	48 89 c7             	mov    %rax,%rdi
    6f67:	e8 80 09 00 00       	call   78ec <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    6f6c:	90                   	nop
    6f6d:	c9                   	leave
    6f6e:	c3                   	ret

0000000000006f6f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6f6f:	55                   	push   %rbp
    6f70:	48 89 e5             	mov    %rsp,%rbp
    6f73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f7b:	90                   	nop
    6f7c:	5d                   	pop    %rbp
    6f7d:	c3                   	ret

0000000000006f7e <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6f7e:	55                   	push   %rbp
    6f7f:	48 89 e5             	mov    %rsp,%rbp
    6f82:	48 83 ec 10          	sub    $0x10,%rsp
    6f86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f8e:	48 89 c7             	mov    %rax,%rdi
    6f91:	e8 88 09 00 00       	call   791e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    6f96:	c9                   	leave
    6f97:	c3                   	ret

0000000000006f98 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    6f98:	55                   	push   %rbp
    6f99:	48 89 e5             	mov    %rsp,%rbp
    6f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    6fa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6fa8:	48 8b 10             	mov    (%rax),%rdx
    6fab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6faf:	48 8b 00             	mov    (%rax),%rax
    6fb2:	48 39 c2             	cmp    %rax,%rdx
    6fb5:	73 06                	jae    6fbd <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    6fb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6fbb:	eb 04                	jmp    6fc1 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    6fbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    6fc1:	5d                   	pop    %rbp
    6fc2:	c3                   	ret
    6fc3:	90                   	nop

0000000000006fc4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    6fc4:	55                   	push   %rbp
    6fc5:	48 89 e5             	mov    %rsp,%rbp
    6fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6fd0:	90                   	nop
    6fd1:	5d                   	pop    %rbp
    6fd2:	c3                   	ret
    6fd3:	90                   	nop

0000000000006fd4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6fd4:	55                   	push   %rbp
    6fd5:	48 89 e5             	mov    %rsp,%rbp
    6fd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6fdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fe0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6fe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6feb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6ff2:	00 
    6ff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ff7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6ffe:	00 
	{ }
    6fff:	90                   	nop
    7000:	5d                   	pop    %rbp
    7001:	c3                   	ret

0000000000007002 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7002:	55                   	push   %rbp
    7003:	48 89 e5             	mov    %rsp,%rbp
    7006:	48 83 ec 10          	sub    $0x10,%rsp
    700a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    700e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7012:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7017:	74 15                	je     702e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    7019:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    701d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7021:	48 89 d6             	mov    %rdx,%rsi
    7024:	48 89 c7             	mov    %rax,%rdi
    7027:	e8 0c 09 00 00       	call   7938 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    702c:	eb 05                	jmp    7033 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    702e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7033:	c9                   	leave
    7034:	c3                   	ret

0000000000007035 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7035:	55                   	push   %rbp
    7036:	48 89 e5             	mov    %rsp,%rbp
    7039:	48 83 ec 20          	sub    $0x20,%rsp
    703d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7041:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7045:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7049:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    704d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7055:	48 89 ce             	mov    %rcx,%rsi
    7058:	48 89 c7             	mov    %rax,%rdi
    705b:	e8 02 09 00 00       	call   7962 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    7060:	90                   	nop
    7061:	c9                   	leave
    7062:	c3                   	ret

0000000000007063 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7063:	55                   	push   %rbp
    7064:	48 89 e5             	mov    %rsp,%rbp
    7067:	48 83 ec 20          	sub    $0x20,%rsp
    706b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    706f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7073:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7077:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    707b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    707f:	48 89 d6             	mov    %rdx,%rsi
    7082:	48 89 c7             	mov    %rax,%rdi
    7085:	e8 11 09 00 00       	call   799b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    708a:	c9                   	leave
    708b:	c3                   	ret

000000000000708c <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    708c:	55                   	push   %rbp
    708d:	48 89 e5             	mov    %rsp,%rbp
    7090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7094:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7098:	90                   	nop
    7099:	5d                   	pop    %rbp
    709a:	c3                   	ret
    709b:	90                   	nop

000000000000709c <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    709c:	55                   	push   %rbp
    709d:	48 89 e5             	mov    %rsp,%rbp
    70a0:	48 83 ec 10          	sub    $0x10,%rsp
    70a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    70ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    70b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70b4:	48 89 d6             	mov    %rdx,%rsi
    70b7:	48 89 c7             	mov    %rax,%rdi
    70ba:	e8 39 09 00 00       	call   79f8 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    70bf:	90                   	nop
    70c0:	c9                   	leave
    70c1:	c3                   	ret

00000000000070c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    70c2:	55                   	push   %rbp
    70c3:	48 89 e5             	mov    %rsp,%rbp
    70c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    70ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70ce:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    70d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70d9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    70e0:	00 
    70e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70e5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    70ec:	00 
	{ }
    70ed:	90                   	nop
    70ee:	5d                   	pop    %rbp
    70ef:	c3                   	ret

00000000000070f0 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    70f0:	55                   	push   %rbp
    70f1:	48 89 e5             	mov    %rsp,%rbp
    70f4:	48 83 ec 20          	sub    $0x20,%rsp
    70f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7100:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7104:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7108:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    710c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7110:	48 89 ce             	mov    %rcx,%rsi
    7113:	48 89 c7             	mov    %rax,%rdi
    7116:	e8 ed 08 00 00       	call   7a08 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    711b:	90                   	nop
    711c:	c9                   	leave
    711d:	c3                   	ret

000000000000711e <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    711e:	55                   	push   %rbp
    711f:	48 89 e5             	mov    %rsp,%rbp
    7122:	48 83 ec 20          	sub    $0x20,%rsp
    7126:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    712a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7131:	ff ff 0f 
    7134:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    713c:	48 89 c7             	mov    %rax,%rdi
    713f:	e8 f5 08 00 00       	call   7a39 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    7144:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7148:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    714c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7150:	48 89 d6             	mov    %rdx,%rsi
    7153:	48 89 c7             	mov    %rax,%rdi
    7156:	e8 3d fe ff ff       	call   6f98 <_ZSt3minImERKT_S2_S2_>
    715b:	48 8b 00             	mov    (%rax),%rax
      }
    715e:	c9                   	leave
    715f:	c3                   	ret

0000000000007160 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    7160:	55                   	push   %rbp
    7161:	48 89 e5             	mov    %rsp,%rbp
    7164:	48 83 ec 10          	sub    $0x10,%rsp
    7168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    716c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7170:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7178:	ba 00 00 00 00       	mov    $0x0,%edx
    717d:	48 89 ce             	mov    %rcx,%rsi
    7180:	48 89 c7             	mov    %rax,%rdi
    7183:	e8 cc 08 00 00       	call   7a54 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    7188:	c9                   	leave
    7189:	c3                   	ret

000000000000718a <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    718a:	55                   	push   %rbp
    718b:	48 89 e5             	mov    %rsp,%rbp
    718e:	48 83 ec 30          	sub    $0x30,%rsp
    7192:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7196:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    719a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    719e:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    71a2:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    71a6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    71aa:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    71ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    71b2:	48 89 ce             	mov    %rcx,%rsi
    71b5:	48 89 c7             	mov    %rax,%rdi
    71b8:	e8 f8 08 00 00       	call   7ab5 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    71bd:	c9                   	leave
    71be:	c3                   	ret

00000000000071bf <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    71bf:	55                   	push   %rbp
    71c0:	48 89 e5             	mov    %rsp,%rbp
    71c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    71cb:	90                   	nop
    71cc:	5d                   	pop    %rbp
    71cd:	c3                   	ret

00000000000071ce <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    71ce:	55                   	push   %rbp
    71cf:	48 89 e5             	mov    %rsp,%rbp
    71d2:	48 83 ec 10          	sub    $0x10,%rsp
    71d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    71da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71de:	48 89 c7             	mov    %rax,%rdi
    71e1:	e8 fc 08 00 00       	call   7ae2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    71e6:	c9                   	leave
    71e7:	c3                   	ret

00000000000071e8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    71e8:	55                   	push   %rbp
    71e9:	48 89 e5             	mov    %rsp,%rbp
    71ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    71f4:	90                   	nop
    71f5:	5d                   	pop    %rbp
    71f6:	c3                   	ret
    71f7:	90                   	nop

00000000000071f8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    71f8:	55                   	push   %rbp
    71f9:	48 89 e5             	mov    %rsp,%rbp
    71fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7204:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    720b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    720f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7216:	00 
    7217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    721b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7222:	00 
	{ }
    7223:	90                   	nop
    7224:	5d                   	pop    %rbp
    7225:	c3                   	ret

0000000000007226 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7226:	55                   	push   %rbp
    7227:	48 89 e5             	mov    %rsp,%rbp
    722a:	48 83 ec 10          	sub    $0x10,%rsp
    722e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7232:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7236:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    723b:	74 15                	je     7252 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    723d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7241:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7245:	48 89 d6             	mov    %rdx,%rsi
    7248:	48 89 c7             	mov    %rax,%rdi
    724b:	e8 ac 08 00 00       	call   7afc <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    7250:	eb 05                	jmp    7257 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    7252:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7257:	c9                   	leave
    7258:	c3                   	ret

0000000000007259 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7259:	55                   	push   %rbp
    725a:	48 89 e5             	mov    %rsp,%rbp
    725d:	48 83 ec 20          	sub    $0x20,%rsp
    7261:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7265:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7269:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    726d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7271:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7279:	48 89 ce             	mov    %rcx,%rsi
    727c:	48 89 c7             	mov    %rax,%rdi
    727f:	e8 a2 08 00 00       	call   7b26 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    7284:	90                   	nop
    7285:	c9                   	leave
    7286:	c3                   	ret

0000000000007287 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7287:	55                   	push   %rbp
    7288:	48 89 e5             	mov    %rsp,%rbp
    728b:	48 83 ec 20          	sub    $0x20,%rsp
    728f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7293:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7297:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    729b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    729f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72a3:	48 89 d6             	mov    %rdx,%rsi
    72a6:	48 89 c7             	mov    %rax,%rdi
    72a9:	e8 b2 08 00 00       	call   7b60 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    72ae:	c9                   	leave
    72af:	c3                   	ret

00000000000072b0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    72b0:	55                   	push   %rbp
    72b1:	48 89 e5             	mov    %rsp,%rbp
    72b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72bc:	90                   	nop
    72bd:	5d                   	pop    %rbp
    72be:	c3                   	ret
    72bf:	90                   	nop

00000000000072c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    72c0:	55                   	push   %rbp
    72c1:	48 89 e5             	mov    %rsp,%rbp
    72c4:	53                   	push   %rbx
    72c5:	48 83 ec 18          	sub    $0x18,%rsp
    72c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    72cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    72d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72d5:	48 89 c7             	mov    %rax,%rdi
    72d8:	e8 21 f5 ff ff       	call   67fe <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    72dd:	48 89 c3             	mov    %rax,%rbx
    72e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72e4:	48 89 c7             	mov    %rax,%rdi
    72e7:	e8 d4 08 00 00       	call   7bc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    72ec:	48 89 de             	mov    %rbx,%rsi
    72ef:	48 89 c7             	mov    %rax,%rdi
    72f2:	e8 d7 08 00 00       	call   7bce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    72f7:	90                   	nop
    72f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    72fc:	c9                   	leave
    72fd:	c3                   	ret

00000000000072fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    72fe:	55                   	push   %rbp
    72ff:	48 89 e5             	mov    %rsp,%rbp
    7302:	48 83 ec 10          	sub    $0x10,%rsp
    7306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    730a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    730e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7312:	48 89 c7             	mov    %rax,%rdi
    7315:	e8 a6 08 00 00       	call   7bc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    731a:	48 89 c1             	mov    %rax,%rcx
    731d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7321:	ba 01 00 00 00       	mov    $0x1,%edx
    7326:	48 89 c6             	mov    %rax,%rsi
    7329:	48 89 cf             	mov    %rcx,%rdi
    732c:	e8 c3 08 00 00       	call   7bf4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    7331:	90                   	nop
    7332:	c9                   	leave
    7333:	c3                   	ret

0000000000007334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    7334:	55                   	push   %rbp
    7335:	48 89 e5             	mov    %rsp,%rbp
    7338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    733c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7340:	48 83 c0 08          	add    $0x8,%rax
    7344:	5d                   	pop    %rbp
    7345:	c3                   	ret

0000000000007346 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    7346:	55                   	push   %rbp
    7347:	48 89 e5             	mov    %rsp,%rbp
    734a:	53                   	push   %rbx
    734b:	48 83 ec 38          	sub    $0x38,%rsp
    734f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7353:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7357:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    735b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    735f:	eb 56                	jmp    73b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    7361:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    7365:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7369:	48 89 c7             	mov    %rax,%rdi
    736c:	e8 e7 03 00 00       	call   7758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    7371:	48 89 c1             	mov    %rax,%rcx
    7374:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7378:	48 89 c2             	mov    %rax,%rdx
    737b:	48 89 ce             	mov    %rcx,%rsi
    737e:	48 89 df             	mov    %rbx,%rdi
    7381:	e8 96 eb ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    7386:	83 f0 01             	xor    $0x1,%eax
    7389:	84 c0                	test   %al,%al
    738b:	74 1a                	je     73a7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    738d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7391:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7395:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7399:	48 89 c7             	mov    %rax,%rdi
    739c:	e8 7c f3 ff ff       	call   671d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    73a1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    73a5:	eb 10                	jmp    73b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    73a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73ab:	48 89 c7             	mov    %rax,%rdi
    73ae:	e8 58 f3 ff ff       	call   670b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    73b3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    73b7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    73bc:	75 a3                	jne    7361 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    73be:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    73c2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    73c6:	48 89 d6             	mov    %rdx,%rsi
    73c9:	48 89 c7             	mov    %rax,%rdi
    73cc:	e8 53 fa ff ff       	call   6e24 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    73d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    73d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    73d9:	c9                   	leave
    73da:	c3                   	ret
    73db:	90                   	nop

00000000000073dc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    73dc:	55                   	push   %rbp
    73dd:	48 89 e5             	mov    %rsp,%rbp
    73e0:	48 83 ec 10          	sub    $0x10,%rsp
    73e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    73e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73ec:	48 89 c7             	mov    %rax,%rdi
    73ef:	e8 2e 08 00 00       	call   7c22 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    73f4:	c9                   	leave
    73f5:	c3                   	ret

00000000000073f6 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    73f6:	55                   	push   %rbp
    73f7:	48 89 e5             	mov    %rsp,%rbp
    73fa:	53                   	push   %rbx
    73fb:	48 83 ec 18          	sub    $0x18,%rsp
    73ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7403:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    7407:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    740b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    740f:	48 89 c7             	mov    %rax,%rdi
    7412:	e8 2d f4 ff ff       	call   6844 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    7417:	48 89 c6             	mov    %rax,%rsi
    741a:	48 89 df             	mov    %rbx,%rdi
    741d:	e8 0e 08 00 00       	call   7c30 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    7422:	90                   	nop
    7423:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7427:	c9                   	leave
    7428:	c3                   	ret
    7429:	90                   	nop

000000000000742a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    742a:	55                   	push   %rbp
    742b:	48 89 e5             	mov    %rsp,%rbp
    742e:	41 54                	push   %r12
    7430:	53                   	push   %rbx
    7431:	48 83 ec 30          	sub    $0x30,%rsp
    7435:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7439:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    743d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    7441:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    7445:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7449:	48 89 c7             	mov    %rax,%rdi
    744c:	e8 05 08 00 00       	call   7c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    7451:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    7455:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7459:	48 89 c7             	mov    %rax,%rdi
    745c:	e8 40 f4 ff ff       	call   68a1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    7461:	49 89 c4             	mov    %rax,%r12
    7464:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7468:	48 89 c7             	mov    %rax,%rdi
    746b:	e8 23 f4 ff ff       	call   6893 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    7470:	48 89 c3             	mov    %rax,%rbx
    7473:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7477:	48 89 c7             	mov    %rax,%rdi
    747a:	e8 06 f4 ff ff       	call   6885 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    747f:	48 89 c2             	mov    %rax,%rdx
    7482:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    7486:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    748a:	4d 89 e0             	mov    %r12,%r8
    748d:	48 89 d9             	mov    %rbx,%rcx
    7490:	48 89 c7             	mov    %rax,%rdi
    7493:	e8 e6 07 00 00       	call   7c7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    7498:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    749c:	48 83 c4 30          	add    $0x30,%rsp
    74a0:	5b                   	pop    %rbx
    74a1:	41 5c                	pop    %r12
    74a3:	5d                   	pop    %rbp
    74a4:	c3                   	ret
    74a5:	90                   	nop

00000000000074a6 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    74a6:	55                   	push   %rbp
    74a7:	48 89 e5             	mov    %rsp,%rbp
    74aa:	48 83 ec 20          	sub    $0x20,%rsp
    74ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    74b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74b6:	48 8b 10             	mov    (%rax),%rdx
    74b9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    74bd:	48 89 d6             	mov    %rdx,%rsi
    74c0:	48 89 c7             	mov    %rax,%rdi
    74c3:	e8 5c f9 ff ff       	call   6e24 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    74c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74cc:	c9                   	leave
    74cd:	c3                   	ret

00000000000074ce <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    74ce:	55                   	push   %rbp
    74cf:	48 89 e5             	mov    %rsp,%rbp
    74d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    74d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74da:	48 8b 40 28          	mov    0x28(%rax),%rax
    74de:	5d                   	pop    %rbp
    74df:	c3                   	ret

00000000000074e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    74e0:	55                   	push   %rbp
    74e1:	48 89 e5             	mov    %rsp,%rbp
    74e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    74e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74ec:	48 83 c0 20          	add    $0x20,%rax
    74f0:	5d                   	pop    %rbp
    74f1:	c3                   	ret

00000000000074f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    74f2:	55                   	push   %rbp
    74f3:	48 89 e5             	mov    %rsp,%rbp
    74f6:	48 83 ec 10          	sub    $0x10,%rsp
    74fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    74fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7502:	48 89 c7             	mov    %rax,%rdi
    7505:	e8 4e 02 00 00       	call   7758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    750a:	c9                   	leave
    750b:	c3                   	ret

000000000000750c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
	       enable_if<_PCCP::template
			   _ConstructiblePair<_U1, _U2>()
	                 && _PCCP::template
			   _ImplicitlyConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
      constexpr pair(const _T1& __a, const _T2& __b)
    750c:	55                   	push   %rbp
    750d:	48 89 e5             	mov    %rsp,%rbp
    7510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7514:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7518:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    751c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7520:	48 8b 10             	mov    (%rax),%rdx
    7523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7527:	48 89 10             	mov    %rdx,(%rax)
    752a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    752e:	48 8b 10             	mov    (%rax),%rdx
    7531:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7535:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7539:	90                   	nop
    753a:	5d                   	pop    %rbp
    753b:	c3                   	ret

000000000000753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    753c:	55                   	push   %rbp
    753d:	48 89 e5             	mov    %rsp,%rbp
    7540:	53                   	push   %rbx
    7541:	48 83 ec 78          	sub    $0x78,%rsp
    7545:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    7549:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    754d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7551:	48 89 c7             	mov    %rax,%rdi
    7554:	e8 e1 e8 ff ff       	call   5e3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    7559:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    755d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7561:	48 89 c7             	mov    %rax,%rdi
    7564:	e8 cb fd ff ff       	call   7334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    7569:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    756d:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    7571:	eb 51                	jmp    75c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    7573:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7577:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    757b:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    757f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7583:	48 89 c7             	mov    %rax,%rdi
    7586:	e8 cd 01 00 00       	call   7758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    758b:	48 89 c2             	mov    %rax,%rdx
    758e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7592:	48 89 c6             	mov    %rax,%rsi
    7595:	48 89 df             	mov    %rbx,%rdi
    7598:	e8 7f e9 ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    759d:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    75a0:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    75a4:	74 0e                	je     75b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    75a6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    75aa:	48 89 c7             	mov    %rax,%rdi
    75ad:	e8 6b f1 ff ff       	call   671d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    75b2:	eb 0c                	jmp    75c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    75b4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    75b8:	48 89 c7             	mov    %rax,%rdi
    75bb:	e8 4b f1 ff ff       	call   670b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    75c0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    75c4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    75c8:	48 85 c0             	test   %rax,%rax
    75cb:	75 a6                	jne    7573 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    75cd:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    75d1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    75d5:	48 89 d6             	mov    %rdx,%rsi
    75d8:	48 89 c7             	mov    %rax,%rdi
    75db:	e8 44 f8 ff ff       	call   6e24 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    75e0:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    75e4:	74 54                	je     763a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    75e6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    75ea:	48 89 c7             	mov    %rax,%rdi
    75ed:	e8 5e 07 00 00       	call   7d50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    75f2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    75f6:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    75fa:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    75fe:	48 89 d6             	mov    %rdx,%rsi
    7601:	48 89 c7             	mov    %rax,%rdi
    7604:	e8 b7 e8 ff ff       	call   5ec0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    7609:	84 c0                	test   %al,%al
    760b:	74 21                	je     762e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    760d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    7611:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    7615:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7619:	48 89 ce             	mov    %rcx,%rsi
    761c:	48 89 c7             	mov    %rax,%rdi
    761f:	e8 56 07 00 00       	call   7d7a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    7624:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7628:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    762c:	eb 7d                	jmp    76ab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    762e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7632:	48 89 c7             	mov    %rax,%rdi
    7635:	e8 ce 00 00 00       	call   7708 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    763a:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    763e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7642:	48 89 c7             	mov    %rax,%rdi
    7645:	e8 a8 fe ff ff       	call   74f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    764a:	48 89 c1             	mov    %rax,%rcx
    764d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7651:	48 89 c2             	mov    %rax,%rdx
    7654:	48 89 ce             	mov    %rcx,%rsi
    7657:	48 89 df             	mov    %rbx,%rdi
    765a:	e8 bd e8 ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    765f:	84 c0                	test   %al,%al
    7661:	74 21                	je     7684 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    7663:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    7667:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    766b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    766f:	48 89 ce             	mov    %rcx,%rsi
    7672:	48 89 c7             	mov    %rax,%rdi
    7675:	e8 00 07 00 00       	call   7d7a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    767a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    767e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7682:	eb 27                	jmp    76ab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    7684:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    768b:	00 
    768c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    7690:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    7694:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7698:	48 89 ce             	mov    %rcx,%rsi
    769b:	48 89 c7             	mov    %rax,%rdi
    769e:	e8 69 fe ff ff       	call   750c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    76a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    76a7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    76ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    76af:	c9                   	leave
    76b0:	c3                   	ret
    76b1:	90                   	nop

00000000000076b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    76b2:	55                   	push   %rbp
    76b3:	48 89 e5             	mov    %rsp,%rbp
    76b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    76ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76be:	48 83 c0 18          	add    $0x18,%rax
    76c2:	5d                   	pop    %rbp
    76c3:	c3                   	ret

00000000000076c4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    76c4:	55                   	push   %rbp
    76c5:	48 89 e5             	mov    %rsp,%rbp
    76c8:	48 83 ec 20          	sub    $0x20,%rsp
    76cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    76d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    76d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    76dc:	48 89 c7             	mov    %rax,%rdi
    76df:	e8 da 06 00 00       	call   7dbe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    76e4:	48 8b 10             	mov    (%rax),%rdx
    76e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76eb:	48 89 10             	mov    %rdx,(%rax)
    76ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76f2:	48 89 c7             	mov    %rax,%rdi
    76f5:	e8 c4 06 00 00       	call   7dbe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    76fa:	48 8b 10             	mov    (%rax),%rdx
    76fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7701:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7705:	90                   	nop
    7706:	c9                   	leave
    7707:	c3                   	ret

0000000000007708 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    7708:	55                   	push   %rbp
    7709:	48 89 e5             	mov    %rsp,%rbp
    770c:	48 83 ec 10          	sub    $0x10,%rsp
    7710:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    7714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7718:	48 8b 00             	mov    (%rax),%rax
    771b:	48 89 c7             	mov    %rax,%rdi
    771e:	e8 3d bb ff ff       	call   3260 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    7723:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7727:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    772a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    772e:	c9                   	leave
    772f:	c3                   	ret

0000000000007730 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    7730:	55                   	push   %rbp
    7731:	48 89 e5             	mov    %rsp,%rbp
    7734:	48 83 ec 10          	sub    $0x10,%rsp
    7738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    773c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7740:	48 8b 00             	mov    (%rax),%rax
    7743:	48 89 c7             	mov    %rax,%rdi
    7746:	e8 e5 b9 ff ff       	call   3130 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    774b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    774f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    7752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7756:	c9                   	leave
    7757:	c3                   	ret

0000000000007758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    7758:	55                   	push   %rbp
    7759:	48 89 e5             	mov    %rsp,%rbp
    775c:	48 83 ec 20          	sub    $0x20,%rsp
    7760:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    7764:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7768:	48 89 c7             	mov    %rax,%rdi
    776b:	e8 5c 06 00 00       	call   7dcc <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    7770:	48 89 c2             	mov    %rax,%rdx
    7773:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    7777:	48 89 d6             	mov    %rdx,%rsi
    777a:	48 89 c7             	mov    %rax,%rdi
    777d:	e8 68 06 00 00       	call   7dea <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    7782:	c9                   	leave
    7783:	c3                   	ret

0000000000007784 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    7784:	55                   	push   %rbp
    7785:	48 89 e5             	mov    %rsp,%rbp
    7788:	41 54                	push   %r12
    778a:	53                   	push   %rbx
    778b:	48 83 ec 30          	sub    $0x30,%rsp
    778f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7793:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7797:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    779b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    779f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    77a4:	75 43                	jne    77e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    77a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77aa:	48 89 c7             	mov    %rax,%rdi
    77ad:	e8 82 fb ff ff       	call   7334 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    77b2:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    77b6:	74 31                	je     77e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    77b8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    77bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    77c0:	48 89 c7             	mov    %rax,%rdi
    77c3:	e8 2a fd ff ff       	call   74f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    77c8:	49 89 c4             	mov    %rax,%r12
    77cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    77cf:	48 89 c7             	mov    %rax,%rdi
    77d2:	e8 81 ff ff ff       	call   7758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    77d7:	4c 89 e2             	mov    %r12,%rdx
    77da:	48 89 c6             	mov    %rax,%rsi
    77dd:	48 89 df             	mov    %rbx,%rdi
    77e0:	e8 37 e7 ff ff       	call   5f1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    77e5:	84 c0                	test   %al,%al
    77e7:	74 07                	je     77f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    77e9:	b8 01 00 00 00       	mov    $0x1,%eax
    77ee:	eb 05                	jmp    77f5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    77f0:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    77f5:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    77f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77fc:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    7800:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    7804:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7808:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    780c:	89 c7                	mov    %eax,%edi
    780e:	e8 2d b8 ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    7813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7817:	48 8b 40 28          	mov    0x28(%rax),%rax
    781b:	48 8d 50 01          	lea    0x1(%rax),%rdx
    781f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7823:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    7827:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    782b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    782f:	48 89 d6             	mov    %rdx,%rsi
    7832:	48 89 c7             	mov    %rax,%rdi
    7835:	e8 ea f5 ff ff       	call   6e24 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    783a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    783e:	48 83 c4 30          	add    $0x30,%rsp
    7842:	5b                   	pop    %rbx
    7843:	41 5c                	pop    %r12
    7845:	5d                   	pop    %rbp
    7846:	c3                   	ret

0000000000007847 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7847:	55                   	push   %rbp
    7848:	48 89 e5             	mov    %rsp,%rbp
    784b:	48 83 ec 10          	sub    $0x10,%rsp
    784f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7853:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7857:	48 89 c7             	mov    %rax,%rdi
    785a:	e8 9d 05 00 00       	call   7dfc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    785f:	c9                   	leave
    7860:	c3                   	ret
    7861:	90                   	nop

0000000000007862 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7862:	55                   	push   %rbp
    7863:	48 89 e5             	mov    %rsp,%rbp
    7866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    786a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    786e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7879:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7880:	00 
    7881:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7885:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    788c:	00 
	{ }
    788d:	90                   	nop
    788e:	5d                   	pop    %rbp
    788f:	c3                   	ret

0000000000007890 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7890:	55                   	push   %rbp
    7891:	48 89 e5             	mov    %rsp,%rbp
    7894:	48 83 ec 10          	sub    $0x10,%rsp
    7898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    789c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    78a0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    78a5:	74 15                	je     78bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    78a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    78af:	48 89 d6             	mov    %rdx,%rsi
    78b2:	48 89 c7             	mov    %rax,%rdi
    78b5:	e8 5c 05 00 00       	call   7e16 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    78ba:	eb 05                	jmp    78c1 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    78bc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    78c1:	c9                   	leave
    78c2:	c3                   	ret

00000000000078c3 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    78c3:	55                   	push   %rbp
    78c4:	48 89 e5             	mov    %rsp,%rbp
    78c7:	48 83 ec 20          	sub    $0x20,%rsp
    78cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    78cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    78d3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    78d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    78db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78df:	48 89 d6             	mov    %rdx,%rsi
    78e2:	48 89 c7             	mov    %rax,%rdi
    78e5:	e8 56 05 00 00       	call   7e40 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    78ea:	c9                   	leave
    78eb:	c3                   	ret

00000000000078ec <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    78ec:	55                   	push   %rbp
    78ed:	48 89 e5             	mov    %rsp,%rbp
    78f0:	48 83 ec 20          	sub    $0x20,%rsp
    78f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7900:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7904:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    790b:	00 
    790c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7910:	48 89 d6             	mov    %rdx,%rsi
    7913:	48 89 c7             	mov    %rax,%rdi
    7916:	e8 15 b9 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    791b:	c9                   	leave
    791c:	c3                   	ret
    791d:	90                   	nop

000000000000791e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    791e:	55                   	push   %rbp
    791f:	48 89 e5             	mov    %rsp,%rbp
    7922:	48 83 ec 10          	sub    $0x10,%rsp
    7926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    792a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    792e:	48 89 c7             	mov    %rax,%rdi
    7931:	e8 68 05 00 00       	call   7e9e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    7936:	c9                   	leave
    7937:	c3                   	ret

0000000000007938 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7938:	55                   	push   %rbp
    7939:	48 89 e5             	mov    %rsp,%rbp
    793c:	48 83 ec 10          	sub    $0x10,%rsp
    7940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7944:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7948:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    794c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7950:	ba 00 00 00 00       	mov    $0x0,%edx
    7955:	48 89 ce             	mov    %rcx,%rsi
    7958:	48 89 c7             	mov    %rax,%rdi
    795b:	e8 52 05 00 00       	call   7eb2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    7960:	c9                   	leave
    7961:	c3                   	ret

0000000000007962 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7962:	55                   	push   %rbp
    7963:	48 89 e5             	mov    %rsp,%rbp
    7966:	48 83 ec 20          	sub    $0x20,%rsp
    796a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    796e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7972:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7976:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    797a:	48 89 d0             	mov    %rdx,%rax
    797d:	48 01 c0             	add    %rax,%rax
    7980:	48 01 d0             	add    %rdx,%rax
    7983:	48 c1 e0 03          	shl    $0x3,%rax
    7987:	48 89 c2             	mov    %rax,%rdx
    798a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    798e:	48 89 d6             	mov    %rdx,%rsi
    7991:	48 89 c7             	mov    %rax,%rdi
    7994:	e8 97 b8 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    7999:	c9                   	leave
    799a:	c3                   	ret

000000000000799b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    799b:	55                   	push   %rbp
    799c:	48 89 e5             	mov    %rsp,%rbp
    799f:	48 83 ec 20          	sub    $0x20,%rsp
    79a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    79ab:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    79b0:	74 40                	je     79f2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    79b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79b6:	48 89 c7             	mov    %rax,%rdi
    79b9:	e8 5e 05 00 00       	call   7f1c <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    79be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    79c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79c6:	48 89 c7             	mov    %rax,%rdi
    79c9:	e8 5c 05 00 00       	call   7f2a <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    79ce:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    79d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79d7:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    79db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    79df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79e3:	48 89 ce             	mov    %rcx,%rsi
    79e6:	48 89 c7             	mov    %rax,%rdi
    79e9:	e8 85 05 00 00       	call   7f73 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    79ee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    79f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    79f6:	c9                   	leave
    79f7:	c3                   	ret

00000000000079f8 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    79f8:	55                   	push   %rbp
    79f9:	48 89 e5             	mov    %rsp,%rbp
    79fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a04:	90                   	nop
    7a05:	5d                   	pop    %rbp
    7a06:	c3                   	ret
    7a07:	90                   	nop

0000000000007a08 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7a08:	55                   	push   %rbp
    7a09:	48 89 e5             	mov    %rsp,%rbp
    7a0c:	48 83 ec 20          	sub    $0x20,%rsp
    7a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a18:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7a1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a20:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7a27:	00 
    7a28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7a2c:	48 89 d6             	mov    %rdx,%rsi
    7a2f:	48 89 c7             	mov    %rax,%rdi
    7a32:	e8 f9 b7 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    7a37:	c9                   	leave
    7a38:	c3                   	ret

0000000000007a39 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7a39:	55                   	push   %rbp
    7a3a:	48 89 e5             	mov    %rsp,%rbp
    7a3d:	48 83 ec 10          	sub    $0x10,%rsp
    7a41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7a45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a49:	48 89 c7             	mov    %rax,%rdi
    7a4c:	e8 67 05 00 00       	call   7fb8 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    7a51:	c9                   	leave
    7a52:	c3                   	ret
    7a53:	90                   	nop

0000000000007a54 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7a54:	55                   	push   %rbp
    7a55:	48 89 e5             	mov    %rsp,%rbp
    7a58:	48 83 ec 20          	sub    $0x20,%rsp
    7a5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a6c:	48 89 c7             	mov    %rax,%rdi
    7a6f:	e8 5e 05 00 00       	call   7fd2 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    7a74:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7a78:	0f 92 c0             	setb   %al
    7a7b:	0f b6 c0             	movzbl %al,%eax
    7a7e:	48 85 c0             	test   %rax,%rax
    7a81:	0f 95 c0             	setne  %al
    7a84:	84 c0                	test   %al,%al
    7a86:	74 1a                	je     7aa2 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7a88:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    7a8f:	ff ff 1f 
    7a92:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7a96:	73 05                	jae    7a9d <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7a98:	e8 f3 b6 ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7a9d:	e8 ce b5 ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7aa2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7aa6:	48 c1 e0 03          	shl    $0x3,%rax
    7aaa:	48 89 c7             	mov    %rax,%rdi
    7aad:	e8 6e b7 ff ff       	call   3220 <_Znwm@plt>
    7ab2:	90                   	nop
      }
    7ab3:	c9                   	leave
    7ab4:	c3                   	ret

0000000000007ab5 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    7ab5:	55                   	push   %rbp
    7ab6:	48 89 e5             	mov    %rsp,%rbp
    7ab9:	48 83 ec 20          	sub    $0x20,%rsp
    7abd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ac1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7ac5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    7ac9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7acd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ad5:	48 89 ce             	mov    %rcx,%rsi
    7ad8:	48 89 c7             	mov    %rax,%rdi
    7adb:	e8 06 05 00 00       	call   7fe6 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    7ae0:	c9                   	leave
    7ae1:	c3                   	ret

0000000000007ae2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7ae2:	55                   	push   %rbp
    7ae3:	48 89 e5             	mov    %rsp,%rbp
    7ae6:	48 83 ec 10          	sub    $0x10,%rsp
    7aea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7af2:	48 89 c7             	mov    %rax,%rdi
    7af5:	e8 38 05 00 00       	call   8032 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    7afa:	c9                   	leave
    7afb:	c3                   	ret

0000000000007afc <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7afc:	55                   	push   %rbp
    7afd:	48 89 e5             	mov    %rsp,%rbp
    7b00:	48 83 ec 10          	sub    $0x10,%rsp
    7b04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7b0c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b14:	ba 00 00 00 00       	mov    $0x0,%edx
    7b19:	48 89 ce             	mov    %rcx,%rsi
    7b1c:	48 89 c7             	mov    %rax,%rdi
    7b1f:	e8 22 05 00 00       	call   8046 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    7b24:	c9                   	leave
    7b25:	c3                   	ret

0000000000007b26 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7b26:	55                   	push   %rbp
    7b27:	48 89 e5             	mov    %rsp,%rbp
    7b2a:	48 83 ec 20          	sub    $0x20,%rsp
    7b2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b36:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7b3a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b3e:	48 89 d0             	mov    %rdx,%rax
    7b41:	48 c1 e0 06          	shl    $0x6,%rax
    7b45:	48 01 d0             	add    %rdx,%rax
    7b48:	48 c1 e0 02          	shl    $0x2,%rax
    7b4c:	48 89 c2             	mov    %rax,%rdx
    7b4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b53:	48 89 d6             	mov    %rdx,%rsi
    7b56:	48 89 c7             	mov    %rax,%rdi
    7b59:	e8 d2 b6 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    7b5e:	c9                   	leave
    7b5f:	c3                   	ret

0000000000007b60 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7b60:	55                   	push   %rbp
    7b61:	48 89 e5             	mov    %rsp,%rbp
    7b64:	48 83 ec 20          	sub    $0x20,%rsp
    7b68:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b6c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7b70:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7b75:	74 43                	je     7bba <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    7b77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b7b:	48 89 c7             	mov    %rax,%rdi
    7b7e:	e8 2e 05 00 00       	call   80b1 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    7b83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b8b:	48 89 c7             	mov    %rax,%rdi
    7b8e:	e8 2c 05 00 00       	call   80bf <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7b93:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    7b9a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    7b9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b9f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7ba3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7ba7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bab:	48 89 ce             	mov    %rcx,%rsi
    7bae:	48 89 c7             	mov    %rax,%rdi
    7bb1:	e8 63 05 00 00       	call   8119 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    7bb6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7bba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7bbe:	c9                   	leave
    7bbf:	c3                   	ret

0000000000007bc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    7bc0:	55                   	push   %rbp
    7bc1:	48 89 e5             	mov    %rsp,%rbp
    7bc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bcc:	5d                   	pop    %rbp
    7bcd:	c3                   	ret

0000000000007bce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    7bce:	55                   	push   %rbp
    7bcf:	48 89 e5             	mov    %rsp,%rbp
    7bd2:	48 83 ec 10          	sub    $0x10,%rsp
    7bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    7bde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7be6:	48 89 d6             	mov    %rdx,%rsi
    7be9:	48 89 c7             	mov    %rax,%rdi
    7bec:	e8 89 05 00 00       	call   817a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    7bf1:	90                   	nop
    7bf2:	c9                   	leave
    7bf3:	c3                   	ret

0000000000007bf4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7bf4:	55                   	push   %rbp
    7bf5:	48 89 e5             	mov    %rsp,%rbp
    7bf8:	48 83 ec 20          	sub    $0x20,%rsp
    7bfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c04:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7c08:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7c0c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c14:	48 89 ce             	mov    %rcx,%rsi
    7c17:	48 89 c7             	mov    %rax,%rdi
    7c1a:	e8 7b 05 00 00       	call   819a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    7c1f:	90                   	nop
    7c20:	c9                   	leave
    7c21:	c3                   	ret

0000000000007c22 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    7c22:	55                   	push   %rbp
    7c23:	48 89 e5             	mov    %rsp,%rbp
    7c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    7c2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c2e:	5d                   	pop    %rbp
    7c2f:	c3                   	ret

0000000000007c30 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    7c30:	55                   	push   %rbp
    7c31:	48 89 e5             	mov    %rsp,%rbp
    7c34:	48 83 ec 10          	sub    $0x10,%rsp
    7c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    7c40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7c44:	48 89 c7             	mov    %rax,%rdi
    7c47:	e8 f8 eb ff ff       	call   6844 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    7c4c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7c50:	48 89 02             	mov    %rax,(%rdx)
    7c53:	90                   	nop
    7c54:	c9                   	leave
    7c55:	c3                   	ret

0000000000007c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    7c56:	55                   	push   %rbp
    7c57:	48 89 e5             	mov    %rsp,%rbp
    7c5a:	48 83 ec 10          	sub    $0x10,%rsp
    7c5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    7c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c66:	48 89 c7             	mov    %rax,%rdi
    7c69:	e8 52 ff ff ff       	call   7bc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    7c6e:	be 01 00 00 00       	mov    $0x1,%esi
    7c73:	48 89 c7             	mov    %rax,%rdi
    7c76:	e8 59 05 00 00       	call   81d4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    7c7b:	c9                   	leave
    7c7c:	c3                   	ret
    7c7d:	90                   	nop

0000000000007c7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    7c7e:	55                   	push   %rbp
    7c7f:	48 89 e5             	mov    %rsp,%rbp
    7c82:	41 56                	push   %r14
    7c84:	41 55                	push   %r13
    7c86:	41 54                	push   %r12
    7c88:	53                   	push   %rbx
    7c89:	48 83 ec 30          	sub    $0x30,%rsp
    7c8d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7c91:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7c95:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    7c99:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    7c9d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    7ca1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7ca5:	48 89 c6             	mov    %rax,%rsi
    7ca8:	bf 48 00 00 00       	mov    $0x48,%edi
    7cad:	e8 f7 d0 ff ff       	call   4da9 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    7cb2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7cb6:	48 89 c7             	mov    %rax,%rdi
    7cb9:	e8 e3 eb ff ff       	call   68a1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    7cbe:	49 89 c6             	mov    %rax,%r14
    7cc1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7cc5:	48 89 c7             	mov    %rax,%rdi
    7cc8:	e8 c6 eb ff ff       	call   6893 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    7ccd:	49 89 c5             	mov    %rax,%r13
    7cd0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7cd4:	48 89 c7             	mov    %rax,%rdi
    7cd7:	e8 a9 eb ff ff       	call   6885 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    7cdc:	49 89 c4             	mov    %rax,%r12
    7cdf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7ce3:	48 89 c7             	mov    %rax,%rdi
    7ce6:	e8 13 eb ff ff       	call   67fe <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    7ceb:	48 89 c3             	mov    %rax,%rbx
    7cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cf2:	48 89 c7             	mov    %rax,%rdi
    7cf5:	e8 c6 fe ff ff       	call   7bc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    7cfa:	4d 89 f0             	mov    %r14,%r8
    7cfd:	4c 89 e9             	mov    %r13,%rcx
    7d00:	4c 89 e2             	mov    %r12,%rdx
    7d03:	48 89 de             	mov    %rbx,%rsi
    7d06:	48 89 c7             	mov    %rax,%rdi
    7d09:	e8 f0 04 00 00       	call   81fe <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    7d0e:	eb 33                	jmp    7d43 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    7d10:	48 89 c7             	mov    %rax,%rdi
    7d13:	e8 88 b3 ff ff       	call   30a0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    7d18:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7d1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d20:	48 89 d6             	mov    %rdx,%rsi
    7d23:	48 89 c7             	mov    %rax,%rdi
    7d26:	e8 d3 f5 ff ff       	call   72fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    7d2b:	e8 10 b6 ff ff       	call   3340 <__cxa_rethrow@plt>
	  __catch(...)
    7d30:	48 89 c3             	mov    %rax,%rbx
    7d33:	e8 68 b6 ff ff       	call   33a0 <__cxa_end_catch@plt>
    7d38:	48 89 d8             	mov    %rbx,%rax
    7d3b:	48 89 c7             	mov    %rax,%rdi
    7d3e:	e8 8d b6 ff ff       	call   33d0 <_Unwind_Resume@plt>
	}
    7d43:	48 83 c4 30          	add    $0x30,%rsp
    7d47:	5b                   	pop    %rbx
    7d48:	41 5c                	pop    %r12
    7d4a:	41 5d                	pop    %r13
    7d4c:	41 5e                	pop    %r14
    7d4e:	5d                   	pop    %rbp
    7d4f:	c3                   	ret

0000000000007d50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    7d50:	55                   	push   %rbp
    7d51:	48 89 e5             	mov    %rsp,%rbp
    7d54:	48 83 ec 20          	sub    $0x20,%rsp
    7d58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    7d5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d60:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7d64:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7d68:	48 89 d6             	mov    %rdx,%rsi
    7d6b:	48 89 c7             	mov    %rax,%rdi
    7d6e:	e8 b1 f0 ff ff       	call   6e24 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    7d73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d77:	c9                   	leave
    7d78:	c3                   	ret
    7d79:	90                   	nop

0000000000007d7a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    7d7a:	55                   	push   %rbp
    7d7b:	48 89 e5             	mov    %rsp,%rbp
    7d7e:	48 83 ec 20          	sub    $0x20,%rsp
    7d82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7d8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    7d8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7d92:	48 89 c7             	mov    %rax,%rdi
    7d95:	e8 d0 04 00 00       	call   826a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    7d9a:	48 8b 10             	mov    (%rax),%rdx
    7d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7da1:	48 89 10             	mov    %rdx,(%rax)
    7da4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7da8:	48 89 c7             	mov    %rax,%rdi
    7dab:	e8 0e 00 00 00       	call   7dbe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    7db0:	48 8b 10             	mov    (%rax),%rdx
    7db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7db7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7dbb:	90                   	nop
    7dbc:	c9                   	leave
    7dbd:	c3                   	ret

0000000000007dbe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7dbe:	55                   	push   %rbp
    7dbf:	48 89 e5             	mov    %rsp,%rbp
    7dc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dca:	5d                   	pop    %rbp
    7dcb:	c3                   	ret

0000000000007dcc <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    7dcc:	55                   	push   %rbp
    7dcd:	48 89 e5             	mov    %rsp,%rbp
    7dd0:	48 83 ec 10          	sub    $0x10,%rsp
    7dd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    7dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ddc:	48 83 c0 20          	add    $0x20,%rax
    7de0:	48 89 c7             	mov    %rax,%rdi
    7de3:	e8 90 04 00 00       	call   8278 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    7de8:	c9                   	leave
    7de9:	c3                   	ret

0000000000007dea <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    7dea:	55                   	push   %rbp
    7deb:	48 89 e5             	mov    %rsp,%rbp
    7dee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7df2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    7df6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7dfa:	5d                   	pop    %rbp
    7dfb:	c3                   	ret

0000000000007dfc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7dfc:	55                   	push   %rbp
    7dfd:	48 89 e5             	mov    %rsp,%rbp
    7e00:	48 83 ec 10          	sub    $0x10,%rsp
    7e04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7e08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e0c:	48 89 c7             	mov    %rax,%rdi
    7e0f:	e8 7e 04 00 00       	call   8292 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    7e14:	c9                   	leave
    7e15:	c3                   	ret

0000000000007e16 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    7e16:	55                   	push   %rbp
    7e17:	48 89 e5             	mov    %rsp,%rbp
    7e1a:	48 83 ec 10          	sub    $0x10,%rsp
    7e1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7e26:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e2e:	ba 00 00 00 00       	mov    $0x0,%edx
    7e33:	48 89 ce             	mov    %rcx,%rsi
    7e36:	48 89 c7             	mov    %rax,%rdi
    7e39:	e8 68 04 00 00       	call   82a6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    7e3e:	c9                   	leave
    7e3f:	c3                   	ret

0000000000007e40 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7e40:	55                   	push   %rbp
    7e41:	48 89 e5             	mov    %rsp,%rbp
    7e44:	48 83 ec 20          	sub    $0x20,%rsp
    7e48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e4c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7e50:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7e55:	74 40                	je     7e97 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    7e57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e5b:	48 89 c7             	mov    %rax,%rdi
    7e5e:	e8 a4 04 00 00       	call   8307 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    7e63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e6b:	48 89 c7             	mov    %rax,%rdi
    7e6e:	e8 a2 04 00 00       	call   8315 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    7e73:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7e78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e7c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7e80:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e88:	48 89 ce             	mov    %rcx,%rsi
    7e8b:	48 89 c7             	mov    %rax,%rdi
    7e8e:	e8 a9 04 00 00       	call   833c <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    7e93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7e9b:	c9                   	leave
    7e9c:	c3                   	ret
    7e9d:	90                   	nop

0000000000007e9e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7e9e:	55                   	push   %rbp
    7e9f:	48 89 e5             	mov    %rsp,%rbp
    7ea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7ea6:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    7ead:	55 55 05 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    7eb0:	5d                   	pop    %rbp
    7eb1:	c3                   	ret

0000000000007eb2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7eb2:	55                   	push   %rbp
    7eb3:	48 89 e5             	mov    %rsp,%rbp
    7eb6:	48 83 ec 20          	sub    $0x20,%rsp
    7eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ebe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7ec2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eca:	48 89 c7             	mov    %rax,%rdi
    7ecd:	e8 cc ff ff ff       	call   7e9e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    7ed2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7ed6:	0f 92 c0             	setb   %al
    7ed9:	0f b6 c0             	movzbl %al,%eax
    7edc:	48 85 c0             	test   %rax,%rax
    7edf:	0f 95 c0             	setne  %al
    7ee2:	84 c0                	test   %al,%al
    7ee4:	74 1a                	je     7f00 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7ee6:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    7eed:	aa aa 0a 
    7ef0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7ef4:	73 05                	jae    7efb <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7ef6:	e8 95 b2 ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7efb:	e8 70 b1 ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7f00:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7f04:	48 89 d0             	mov    %rdx,%rax
    7f07:	48 01 c0             	add    %rax,%rax
    7f0a:	48 01 d0             	add    %rdx,%rax
    7f0d:	48 c1 e0 03          	shl    $0x3,%rax
    7f11:	48 89 c7             	mov    %rax,%rdi
    7f14:	e8 07 b3 ff ff       	call   3220 <_Znwm@plt>
    7f19:	90                   	nop
      }
    7f1a:	c9                   	leave
    7f1b:	c3                   	ret

0000000000007f1c <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7f1c:	55                   	push   %rbp
    7f1d:	48 89 e5             	mov    %rsp,%rbp
    7f20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7f24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f28:	5d                   	pop    %rbp
    7f29:	c3                   	ret

0000000000007f2a <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7f2a:	55                   	push   %rbp
    7f2b:	48 89 e5             	mov    %rsp,%rbp
    7f2e:	48 83 ec 10          	sub    $0x10,%rsp
    7f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f3a:	48 89 c6             	mov    %rax,%rsi
    7f3d:	bf 18 00 00 00       	mov    $0x18,%edi
    7f42:	e8 62 ce ff ff       	call   4da9 <_ZnwmPv>
    7f47:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    7f4d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    7f54:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    7f5b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    7f62:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    7f69:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    7f70:	90                   	nop
    7f71:	c9                   	leave
    7f72:	c3                   	ret

0000000000007f73 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7f73:	55                   	push   %rbp
    7f74:	48 89 e5             	mov    %rsp,%rbp
    7f77:	48 83 ec 20          	sub    $0x20,%rsp
    7f7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    7f87:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7f8b:	48 89 c7             	mov    %rax,%rdi
    7f8e:	e8 ed 03 00 00       	call   8380 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7f93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7f97:	48 89 c7             	mov    %rax,%rdi
    7f9a:	e8 2b ce ff ff       	call   4dca <_ZSt17__size_to_integerm>
    7f9f:	48 89 c1             	mov    %rax,%rcx
    7fa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fa6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7faa:	48 89 ce             	mov    %rcx,%rsi
    7fad:	48 89 c7             	mov    %rax,%rdi
    7fb0:	e8 d6 03 00 00       	call   838b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    7fb5:	c9                   	leave
    7fb6:	c3                   	ret
    7fb7:	90                   	nop

0000000000007fb8 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7fb8:	55                   	push   %rbp
    7fb9:	48 89 e5             	mov    %rsp,%rbp
    7fbc:	48 83 ec 10          	sub    $0x10,%rsp
    7fc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7fc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc8:	48 89 c7             	mov    %rax,%rdi
    7fcb:	e8 02 00 00 00       	call   7fd2 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    7fd0:	c9                   	leave
    7fd1:	c3                   	ret

0000000000007fd2 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7fd2:	55                   	push   %rbp
    7fd3:	48 89 e5             	mov    %rsp,%rbp
    7fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7fda:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7fe1:	ff ff 0f 
      }
    7fe4:	5d                   	pop    %rbp
    7fe5:	c3                   	ret

0000000000007fe6 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    7fe6:	55                   	push   %rbp
    7fe7:	48 89 e5             	mov    %rsp,%rbp
    7fea:	53                   	push   %rbx
    7feb:	48 83 ec 28          	sub    $0x28,%rsp
    7fef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7ff3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7ff7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    7ffb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7fff:	48 89 c7             	mov    %rax,%rdi
    8002:	e8 f1 03 00 00       	call   83f8 <_ZSt12__miter_baseIPKPKcET_S4_>
    8007:	48 89 c3             	mov    %rax,%rbx
    800a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    800e:	48 89 c7             	mov    %rax,%rdi
    8011:	e8 e2 03 00 00       	call   83f8 <_ZSt12__miter_baseIPKPKcET_S4_>
    8016:	48 89 c1             	mov    %rax,%rcx
    8019:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    801d:	48 89 c2             	mov    %rax,%rdx
    8020:	48 89 de             	mov    %rbx,%rsi
    8023:	48 89 cf             	mov    %rcx,%rdi
    8026:	e8 db 03 00 00       	call   8406 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    802b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    802f:	c9                   	leave
    8030:	c3                   	ret
    8031:	90                   	nop

0000000000008032 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8032:	55                   	push   %rbp
    8033:	48 89 e5             	mov    %rsp,%rbp
    8036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    803a:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    8041:	07 7e 00 
      }
    8044:	5d                   	pop    %rbp
    8045:	c3                   	ret

0000000000008046 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8046:	55                   	push   %rbp
    8047:	48 89 e5             	mov    %rsp,%rbp
    804a:	48 83 ec 20          	sub    $0x20,%rsp
    804e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8052:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8056:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    805a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    805e:	48 89 c7             	mov    %rax,%rdi
    8061:	e8 cc ff ff ff       	call   8032 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    8066:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    806a:	0f 92 c0             	setb   %al
    806d:	0f b6 c0             	movzbl %al,%eax
    8070:	48 85 c0             	test   %rax,%rax
    8073:	0f 95 c0             	setne  %al
    8076:	84 c0                	test   %al,%al
    8078:	74 1a                	je     8094 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    807a:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    8081:	0f fc 00 
    8084:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8088:	73 05                	jae    808f <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    808a:	e8 01 b1 ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    808f:	e8 dc af ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8094:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8098:	48 89 d0             	mov    %rdx,%rax
    809b:	48 c1 e0 06          	shl    $0x6,%rax
    809f:	48 01 d0             	add    %rdx,%rax
    80a2:	48 c1 e0 02          	shl    $0x2,%rax
    80a6:	48 89 c7             	mov    %rax,%rdi
    80a9:	e8 72 b1 ff ff       	call   3220 <_Znwm@plt>
    80ae:	90                   	nop
      }
    80af:	c9                   	leave
    80b0:	c3                   	ret

00000000000080b1 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    80b1:	55                   	push   %rbp
    80b2:	48 89 e5             	mov    %rsp,%rbp
    80b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    80b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80bd:	5d                   	pop    %rbp
    80be:	c3                   	ret

00000000000080bf <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    80bf:	55                   	push   %rbp
    80c0:	48 89 e5             	mov    %rsp,%rbp
    80c3:	48 83 ec 10          	sub    $0x10,%rsp
    80c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    80cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80cf:	48 89 c6             	mov    %rax,%rsi
    80d2:	bf 04 01 00 00       	mov    $0x104,%edi
    80d7:	e8 cd cc ff ff       	call   4da9 <_ZnwmPv>
    80dc:	b9 04 01 00 00       	mov    $0x104,%ecx
    80e1:	be 00 00 00 00       	mov    $0x0,%esi
    80e6:	48 89 30             	mov    %rsi,(%rax)
    80e9:	89 ca                	mov    %ecx,%edx
    80eb:	48 01 c2             	add    %rax,%rdx
    80ee:	48 83 c2 08          	add    $0x8,%rdx
    80f2:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    80f6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    80fa:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    80fe:	48 29 d0             	sub    %rdx,%rax
    8101:	01 c1                	add    %eax,%ecx
    8103:	83 e1 f8             	and    $0xfffffff8,%ecx
    8106:	89 c8                	mov    %ecx,%eax
    8108:	c1 e8 03             	shr    $0x3,%eax
    810b:	89 c1                	mov    %eax,%ecx
    810d:	48 89 d7             	mov    %rdx,%rdi
    8110:	48 89 f0             	mov    %rsi,%rax
    8113:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    8116:	90                   	nop
    8117:	c9                   	leave
    8118:	c3                   	ret

0000000000008119 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8119:	55                   	push   %rbp
    811a:	48 89 e5             	mov    %rsp,%rbp
    811d:	48 83 ec 20          	sub    $0x20,%rsp
    8121:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8125:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8129:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    812d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8131:	48 89 c7             	mov    %rax,%rdi
    8134:	e8 37 03 00 00       	call   8470 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    8139:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    813d:	48 89 c7             	mov    %rax,%rdi
    8140:	e8 85 cc ff ff       	call   4dca <_ZSt17__size_to_integerm>
    8145:	48 89 c1             	mov    %rax,%rcx
    8148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    814c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8150:	48 89 ce             	mov    %rcx,%rsi
    8153:	48 89 c7             	mov    %rax,%rdi
    8156:	e8 20 03 00 00       	call   847b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    815b:	c9                   	leave
    815c:	c3                   	ret
    815d:	90                   	nop

000000000000815e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    815e:	55                   	push   %rbp
    815f:	48 89 e5             	mov    %rsp,%rbp
    8162:	48 83 ec 10          	sub    $0x10,%rsp
    8166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    816a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    816e:	48 89 c7             	mov    %rax,%rdi
    8171:	e8 9a af ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    8176:	90                   	nop
    8177:	c9                   	leave
    8178:	c3                   	ret
    8179:	90                   	nop

000000000000817a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    817a:	55                   	push   %rbp
    817b:	48 89 e5             	mov    %rsp,%rbp
    817e:	48 83 ec 10          	sub    $0x10,%rsp
    8182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8186:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    818a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    818e:	48 89 c7             	mov    %rax,%rdi
    8191:	e8 c8 ff ff ff       	call   815e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    8196:	90                   	nop
    8197:	c9                   	leave
    8198:	c3                   	ret
    8199:	90                   	nop

000000000000819a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    819a:	55                   	push   %rbp
    819b:	48 89 e5             	mov    %rsp,%rbp
    819e:	48 83 ec 20          	sub    $0x20,%rsp
    81a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    81aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    81ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    81b2:	48 89 d0             	mov    %rdx,%rax
    81b5:	48 c1 e0 03          	shl    $0x3,%rax
    81b9:	48 01 d0             	add    %rdx,%rax
    81bc:	48 c1 e0 03          	shl    $0x3,%rax
    81c0:	48 89 c2             	mov    %rax,%rdx
    81c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    81c7:	48 89 d6             	mov    %rdx,%rsi
    81ca:	48 89 c7             	mov    %rax,%rdi
    81cd:	e8 5e b0 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    81d2:	c9                   	leave
    81d3:	c3                   	ret

00000000000081d4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    81d4:	55                   	push   %rbp
    81d5:	48 89 e5             	mov    %rsp,%rbp
    81d8:	48 83 ec 10          	sub    $0x10,%rsp
    81dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    81e4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    81e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81ec:	ba 00 00 00 00       	mov    $0x0,%edx
    81f1:	48 89 ce             	mov    %rcx,%rsi
    81f4:	48 89 c7             	mov    %rax,%rdi
    81f7:	e8 ee 02 00 00       	call   84ea <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    81fc:	c9                   	leave
    81fd:	c3                   	ret

00000000000081fe <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    81fe:	55                   	push   %rbp
    81ff:	48 89 e5             	mov    %rsp,%rbp
    8202:	41 54                	push   %r12
    8204:	53                   	push   %rbx
    8205:	48 83 ec 30          	sub    $0x30,%rsp
    8209:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    820d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8211:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8215:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    8219:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    821d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8221:	48 89 c7             	mov    %rax,%rdi
    8224:	e8 78 e6 ff ff       	call   68a1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    8229:	49 89 c4             	mov    %rax,%r12
    822c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8230:	48 89 c7             	mov    %rax,%rdi
    8233:	e8 5b e6 ff ff       	call   6893 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    8238:	48 89 c3             	mov    %rax,%rbx
    823b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    823f:	48 89 c7             	mov    %rax,%rdi
    8242:	e8 3e e6 ff ff       	call   6885 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    8247:	48 89 c2             	mov    %rax,%rdx
    824a:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    824e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8252:	4d 89 e0             	mov    %r12,%r8
    8255:	48 89 d9             	mov    %rbx,%rcx
    8258:	48 89 c7             	mov    %rax,%rdi
    825b:	e8 1c 03 00 00       	call   857c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    8260:	90                   	nop
    8261:	48 83 c4 30          	add    $0x30,%rsp
    8265:	5b                   	pop    %rbx
    8266:	41 5c                	pop    %r12
    8268:	5d                   	pop    %rbp
    8269:	c3                   	ret

000000000000826a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    826a:	55                   	push   %rbp
    826b:	48 89 e5             	mov    %rsp,%rbp
    826e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8276:	5d                   	pop    %rbp
    8277:	c3                   	ret

0000000000008278 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    8278:	55                   	push   %rbp
    8279:	48 89 e5             	mov    %rsp,%rbp
    827c:	48 83 ec 10          	sub    $0x10,%rsp
    8280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    8284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8288:	48 89 c7             	mov    %rax,%rdi
    828b:	e8 9c 03 00 00       	call   862c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    8290:	c9                   	leave
    8291:	c3                   	ret

0000000000008292 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8292:	55                   	push   %rbp
    8293:	48 89 e5             	mov    %rsp,%rbp
    8296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    829a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    82a1:	ff ff 0f 
      }
    82a4:	5d                   	pop    %rbp
    82a5:	c3                   	ret

00000000000082a6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    82a6:	55                   	push   %rbp
    82a7:	48 89 e5             	mov    %rsp,%rbp
    82aa:	48 83 ec 20          	sub    $0x20,%rsp
    82ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    82b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    82ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82be:	48 89 c7             	mov    %rax,%rdi
    82c1:	e8 cc ff ff ff       	call   8292 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    82c6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    82ca:	0f 92 c0             	setb   %al
    82cd:	0f b6 c0             	movzbl %al,%eax
    82d0:	48 85 c0             	test   %rax,%rax
    82d3:	0f 95 c0             	setne  %al
    82d6:	84 c0                	test   %al,%al
    82d8:	74 1a                	je     82f4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    82da:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    82e1:	ff ff 1f 
    82e4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    82e8:	73 05                	jae    82ef <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    82ea:	e8 a1 ae ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    82ef:	e8 7c ad ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    82f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82f8:	48 c1 e0 03          	shl    $0x3,%rax
    82fc:	48 89 c7             	mov    %rax,%rdi
    82ff:	e8 1c af ff ff       	call   3220 <_Znwm@plt>
    8304:	90                   	nop
      }
    8305:	c9                   	leave
    8306:	c3                   	ret

0000000000008307 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8307:	55                   	push   %rbp
    8308:	48 89 e5             	mov    %rsp,%rbp
    830b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    830f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8313:	5d                   	pop    %rbp
    8314:	c3                   	ret

0000000000008315 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8315:	55                   	push   %rbp
    8316:	48 89 e5             	mov    %rsp,%rbp
    8319:	48 83 ec 10          	sub    $0x10,%rsp
    831d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8321:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8325:	48 89 c6             	mov    %rax,%rsi
    8328:	bf 08 00 00 00       	mov    $0x8,%edi
    832d:	e8 77 ca ff ff       	call   4da9 <_ZnwmPv>
    8332:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    8339:	90                   	nop
    833a:	c9                   	leave
    833b:	c3                   	ret

000000000000833c <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    833c:	55                   	push   %rbp
    833d:	48 89 e5             	mov    %rsp,%rbp
    8340:	48 83 ec 20          	sub    $0x20,%rsp
    8344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    834c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8350:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8354:	48 89 c7             	mov    %rax,%rdi
    8357:	e8 de 02 00 00       	call   863a <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    835c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8360:	48 89 c7             	mov    %rax,%rdi
    8363:	e8 62 ca ff ff       	call   4dca <_ZSt17__size_to_integerm>
    8368:	48 89 c1             	mov    %rax,%rcx
    836b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    836f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8373:	48 89 ce             	mov    %rcx,%rsi
    8376:	48 89 c7             	mov    %rax,%rdi
    8379:	e8 c7 02 00 00       	call   8645 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    837e:	c9                   	leave
    837f:	c3                   	ret

0000000000008380 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8380:	55                   	push   %rbp
    8381:	48 89 e5             	mov    %rsp,%rbp
    8384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8388:	90                   	nop
    8389:	5d                   	pop    %rbp
    838a:	c3                   	ret

000000000000838b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    838b:	55                   	push   %rbp
    838c:	48 89 e5             	mov    %rsp,%rbp
    838f:	48 83 ec 20          	sub    $0x20,%rsp
    8393:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8397:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    839b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    839f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    83a4:	75 06                	jne    83ac <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    83a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83aa:	eb 4a                	jmp    83f6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    83ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    83b0:	48 89 d0             	mov    %rdx,%rax
    83b3:	48 01 c0             	add    %rax,%rax
    83b6:	48 01 d0             	add    %rdx,%rax
    83b9:	48 c1 e0 03          	shl    $0x3,%rax
    83bd:	48 89 c2             	mov    %rax,%rdx
    83c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83c4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    83c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83d0:	48 89 ce             	mov    %rcx,%rsi
    83d3:	48 89 c7             	mov    %rax,%rdi
    83d6:	e8 c7 02 00 00       	call   86a2 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    83db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    83df:	48 89 d0             	mov    %rdx,%rax
    83e2:	48 01 c0             	add    %rax,%rax
    83e5:	48 01 d0             	add    %rdx,%rax
    83e8:	48 c1 e0 03          	shl    $0x3,%rax
    83ec:	48 89 c2             	mov    %rax,%rdx
    83ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f3:	48 01 d0             	add    %rdx,%rax
    }
    83f6:	c9                   	leave
    83f7:	c3                   	ret

00000000000083f8 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    83f8:	55                   	push   %rbp
    83f9:	48 89 e5             	mov    %rsp,%rbp
    83fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    8400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8404:	5d                   	pop    %rbp
    8405:	c3                   	ret

0000000000008406 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    8406:	55                   	push   %rbp
    8407:	48 89 e5             	mov    %rsp,%rbp
    840a:	41 54                	push   %r12
    840c:	53                   	push   %rbx
    840d:	48 83 ec 20          	sub    $0x20,%rsp
    8411:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8415:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8419:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    841d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8421:	48 89 c7             	mov    %rax,%rdi
    8424:	e8 b5 02 00 00       	call   86de <_ZSt12__niter_baseIPPKcET_S3_>
    8429:	49 89 c4             	mov    %rax,%r12
    842c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8430:	48 89 c7             	mov    %rax,%rdi
    8433:	e8 98 02 00 00       	call   86d0 <_ZSt12__niter_baseIPKPKcET_S4_>
    8438:	48 89 c3             	mov    %rax,%rbx
    843b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    843f:	48 89 c7             	mov    %rax,%rdi
    8442:	e8 89 02 00 00       	call   86d0 <_ZSt12__niter_baseIPKPKcET_S4_>
    8447:	4c 89 e2             	mov    %r12,%rdx
    844a:	48 89 de             	mov    %rbx,%rsi
    844d:	48 89 c7             	mov    %rax,%rdi
    8450:	e8 97 02 00 00       	call   86ec <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    8455:	48 89 c2             	mov    %rax,%rdx
    8458:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    845c:	48 89 d6             	mov    %rdx,%rsi
    845f:	48 89 c7             	mov    %rax,%rdi
    8462:	e8 b2 02 00 00       	call   8719 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    8467:	48 83 c4 20          	add    $0x20,%rsp
    846b:	5b                   	pop    %rbx
    846c:	41 5c                	pop    %r12
    846e:	5d                   	pop    %rbp
    846f:	c3                   	ret

0000000000008470 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8470:	55                   	push   %rbp
    8471:	48 89 e5             	mov    %rsp,%rbp
    8474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8478:	90                   	nop
    8479:	5d                   	pop    %rbp
    847a:	c3                   	ret

000000000000847b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    847b:	55                   	push   %rbp
    847c:	48 89 e5             	mov    %rsp,%rbp
    847f:	48 83 ec 20          	sub    $0x20,%rsp
    8483:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8487:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    848b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    848f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8494:	75 06                	jne    849c <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    849a:	eb 4c                	jmp    84e8 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    849c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    84a0:	48 89 d0             	mov    %rdx,%rax
    84a3:	48 c1 e0 06          	shl    $0x6,%rax
    84a7:	48 01 d0             	add    %rdx,%rax
    84aa:	48 c1 e0 02          	shl    $0x2,%rax
    84ae:	48 89 c2             	mov    %rax,%rdx
    84b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84b5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    84b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    84bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84c1:	48 89 ce             	mov    %rcx,%rsi
    84c4:	48 89 c7             	mov    %rax,%rdi
    84c7:	e8 5f 02 00 00       	call   872b <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    84cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    84d0:	48 89 d0             	mov    %rdx,%rax
    84d3:	48 c1 e0 06          	shl    $0x6,%rax
    84d7:	48 01 d0             	add    %rdx,%rax
    84da:	48 c1 e0 02          	shl    $0x2,%rax
    84de:	48 89 c2             	mov    %rax,%rdx
    84e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84e5:	48 01 d0             	add    %rdx,%rax
    }
    84e8:	c9                   	leave
    84e9:	c3                   	ret

00000000000084ea <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    84ea:	55                   	push   %rbp
    84eb:	48 89 e5             	mov    %rsp,%rbp
    84ee:	48 83 ec 20          	sub    $0x20,%rsp
    84f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    84fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    84fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8502:	48 89 c7             	mov    %rax,%rdi
    8505:	e8 50 02 00 00       	call   875a <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    850a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    850e:	0f 92 c0             	setb   %al
    8511:	0f b6 c0             	movzbl %al,%eax
    8514:	48 85 c0             	test   %rax,%rax
    8517:	0f 95 c0             	setne  %al
    851a:	84 c0                	test   %al,%al
    851c:	74 1a                	je     8538 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    851e:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    8525:	38 8e 03 
    8528:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    852c:	73 05                	jae    8533 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    852e:	e8 5d ac ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8533:	e8 38 ab ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8538:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    853c:	48 89 d0             	mov    %rdx,%rax
    853f:	48 c1 e0 03          	shl    $0x3,%rax
    8543:	48 01 d0             	add    %rdx,%rax
    8546:	48 c1 e0 03          	shl    $0x3,%rax
    854a:	48 89 c7             	mov    %rax,%rdi
    854d:	e8 ce ac ff ff       	call   3220 <_Znwm@plt>
    8552:	90                   	nop
      }
    8553:	c9                   	leave
    8554:	c3                   	ret
    8555:	90                   	nop

0000000000008556 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    8556:	55                   	push   %rbp
    8557:	48 89 e5             	mov    %rsp,%rbp
    855a:	48 83 ec 10          	sub    $0x10,%rsp
    855e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8562:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    856a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    856e:	48 89 d6             	mov    %rdx,%rsi
    8571:	48 89 c7             	mov    %rax,%rdi
    8574:	e8 f5 01 00 00       	call   876e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    8579:	90                   	nop
    857a:	c9                   	leave
    857b:	c3                   	ret

000000000000857c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    857c:	55                   	push   %rbp
    857d:	48 89 e5             	mov    %rsp,%rbp
    8580:	41 56                	push   %r14
    8582:	41 55                	push   %r13
    8584:	41 54                	push   %r12
    8586:	53                   	push   %rbx
    8587:	48 83 ec 40          	sub    $0x40,%rsp
    858b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    858f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8593:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    8597:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    859b:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    859f:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    85a3:	48 89 de             	mov    %rbx,%rsi
    85a6:	bf 28 00 00 00       	mov    $0x28,%edi
    85ab:	e8 f9 c7 ff ff       	call   4da9 <_ZnwmPv>
    85b0:	49 89 c4             	mov    %rax,%r12
    85b3:	41 be 01 00 00 00    	mov    $0x1,%r14d
    85b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    85bd:	48 89 c7             	mov    %rax,%rdi
    85c0:	e8 dc e2 ff ff       	call   68a1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    85c5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    85c9:	48 89 c7             	mov    %rax,%rdi
    85cc:	e8 c2 e2 ff ff       	call   6893 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    85d1:	48 89 c2             	mov    %rax,%rdx
    85d4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    85d8:	48 89 d6             	mov    %rdx,%rsi
    85db:	48 89 c7             	mov    %rax,%rdi
    85de:	e8 73 ff ff ff       	call   8556 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    85e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    85e7:	48 89 c7             	mov    %rax,%rdi
    85ea:	e8 96 e2 ff ff       	call   6885 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    85ef:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    85f3:	48 89 c6             	mov    %rax,%rsi
    85f6:	4c 89 e7             	mov    %r12,%rdi
    85f9:	e8 8e 01 00 00       	call   878c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    85fe:	eb 1e                	jmp    861e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    8600:	49 89 c5             	mov    %rax,%r13
    8603:	45 84 f6             	test   %r14b,%r14b
    8606:	74 0b                	je     8613 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    8608:	48 89 de             	mov    %rbx,%rsi
    860b:	4c 89 e7             	mov    %r12,%rdi
    860e:	e8 a8 c7 ff ff       	call   4dbb <_ZdlPvS_>
    8613:	4c 89 e8             	mov    %r13,%rax
    8616:	48 89 c7             	mov    %rax,%rdi
    8619:	e8 b2 ad ff ff       	call   33d0 <_Unwind_Resume@plt>
    861e:	48 83 c4 40          	add    $0x40,%rsp
    8622:	5b                   	pop    %rbx
    8623:	41 5c                	pop    %r12
    8625:	41 5d                	pop    %r13
    8627:	41 5e                	pop    %r14
    8629:	5d                   	pop    %rbp
    862a:	c3                   	ret
    862b:	90                   	nop

000000000000862c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    862c:	55                   	push   %rbp
    862d:	48 89 e5             	mov    %rsp,%rbp
    8630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    8634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8638:	5d                   	pop    %rbp
    8639:	c3                   	ret

000000000000863a <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    863a:	55                   	push   %rbp
    863b:	48 89 e5             	mov    %rsp,%rbp
    863e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8642:	90                   	nop
    8643:	5d                   	pop    %rbp
    8644:	c3                   	ret

0000000000008645 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8645:	55                   	push   %rbp
    8646:	48 89 e5             	mov    %rsp,%rbp
    8649:	48 83 ec 20          	sub    $0x20,%rsp
    864d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8651:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8655:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8659:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    865e:	75 06                	jne    8666 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8664:	eb 3a                	jmp    86a0 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8666:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    866a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8671:	00 
    8672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8676:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    867a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    867e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8682:	48 89 ce             	mov    %rcx,%rsi
    8685:	48 89 c7             	mov    %rax,%rdi
    8688:	e8 29 01 00 00       	call   87b6 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    868d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8691:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8698:	00 
    8699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    869d:	48 01 d0             	add    %rdx,%rax
    }
    86a0:	c9                   	leave
    86a1:	c3                   	ret

00000000000086a2 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    86a2:	55                   	push   %rbp
    86a3:	48 89 e5             	mov    %rsp,%rbp
    86a6:	48 83 ec 20          	sub    $0x20,%rsp
    86aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    86b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    86b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    86ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    86be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c2:	48 89 ce             	mov    %rcx,%rsi
    86c5:	48 89 c7             	mov    %rax,%rdi
    86c8:	e8 17 01 00 00       	call   87e4 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    86cd:	90                   	nop
    86ce:	c9                   	leave
    86cf:	c3                   	ret

00000000000086d0 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    86d0:	55                   	push   %rbp
    86d1:	48 89 e5             	mov    %rsp,%rbp
    86d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    86d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86dc:	5d                   	pop    %rbp
    86dd:	c3                   	ret

00000000000086de <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    86de:	55                   	push   %rbp
    86df:	48 89 e5             	mov    %rsp,%rbp
    86e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    86e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ea:	5d                   	pop    %rbp
    86eb:	c3                   	ret

00000000000086ec <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    86ec:	55                   	push   %rbp
    86ed:	48 89 e5             	mov    %rsp,%rbp
    86f0:	48 83 ec 20          	sub    $0x20,%rsp
    86f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    86fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    8700:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8704:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    870c:	48 89 ce             	mov    %rcx,%rsi
    870f:	48 89 c7             	mov    %rax,%rdi
    8712:	e8 10 01 00 00       	call   8827 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    8717:	c9                   	leave
    8718:	c3                   	ret

0000000000008719 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    8719:	55                   	push   %rbp
    871a:	48 89 e5             	mov    %rsp,%rbp
    871d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8721:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    8725:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8729:	5d                   	pop    %rbp
    872a:	c3                   	ret

000000000000872b <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    872b:	55                   	push   %rbp
    872c:	48 89 e5             	mov    %rsp,%rbp
    872f:	48 83 ec 20          	sub    $0x20,%rsp
    8733:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8737:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    873b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    873f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8743:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    874b:	48 89 ce             	mov    %rcx,%rsi
    874e:	48 89 c7             	mov    %rax,%rdi
    8751:	e8 fe 00 00 00       	call   8854 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8756:	90                   	nop
    8757:	c9                   	leave
    8758:	c3                   	ret
    8759:	90                   	nop

000000000000875a <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    875a:	55                   	push   %rbp
    875b:	48 89 e5             	mov    %rsp,%rbp
    875e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8762:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    8769:	1c c7 01 
      }
    876c:	5d                   	pop    %rbp
    876d:	c3                   	ret

000000000000876e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    876e:	55                   	push   %rbp
    876f:	48 89 e5             	mov    %rsp,%rbp
    8772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8776:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    877a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    877e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8782:	48 8b 12             	mov    (%rdx),%rdx
    8785:	48 89 10             	mov    %rdx,(%rax)
      { }
    8788:	90                   	nop
    8789:	5d                   	pop    %rbp
    878a:	c3                   	ret
    878b:	90                   	nop

000000000000878c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    878c:	55                   	push   %rbp
    878d:	48 89 e5             	mov    %rsp,%rbp
    8790:	48 83 ec 20          	sub    $0x20,%rsp
    8794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8798:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    879c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    87a0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    87a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87a8:	48 89 ce             	mov    %rcx,%rsi
    87ab:	48 89 c7             	mov    %rax,%rdi
    87ae:	e8 19 01 00 00       	call   88cc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    87b3:	90                   	nop
    87b4:	c9                   	leave
    87b5:	c3                   	ret

00000000000087b6 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    87b6:	55                   	push   %rbp
    87b7:	48 89 e5             	mov    %rsp,%rbp
    87ba:	48 83 ec 20          	sub    $0x20,%rsp
    87be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    87c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    87ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    87ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    87d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87d6:	48 89 ce             	mov    %rcx,%rsi
    87d9:	48 89 c7             	mov    %rax,%rdi
    87dc:	e8 35 01 00 00       	call   8916 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    87e1:	90                   	nop
    87e2:	c9                   	leave
    87e3:	c3                   	ret

00000000000087e4 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    87e4:	55                   	push   %rbp
    87e5:	48 89 e5             	mov    %rsp,%rbp
    87e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    87f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    87f4:	eb 23                	jmp    8819 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    87f6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    87fa:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    87fe:	48 8b 06             	mov    (%rsi),%rax
    8801:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    8805:	48 89 01             	mov    %rax,(%rcx)
    8808:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    880c:	48 8b 46 10          	mov    0x10(%rsi),%rax
    8810:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    8814:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    8819:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    881d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8821:	75 d3                	jne    87f6 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    8823:	90                   	nop
    8824:	90                   	nop
    8825:	5d                   	pop    %rbp
    8826:	c3                   	ret

0000000000008827 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    8827:	55                   	push   %rbp
    8828:	48 89 e5             	mov    %rsp,%rbp
    882b:	48 83 ec 20          	sub    $0x20,%rsp
    882f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8833:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8837:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    883b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    883f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8847:	48 89 ce             	mov    %rcx,%rsi
    884a:	48 89 c7             	mov    %rax,%rdi
    884d:	e8 ff 00 00 00       	call   8951 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    8852:	c9                   	leave
    8853:	c3                   	ret

0000000000008854 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8854:	55                   	push   %rbp
    8855:	48 89 e5             	mov    %rsp,%rbp
    8858:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    885c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8860:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    8864:	eb 58                	jmp    88be <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    8866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    886e:	b9 04 01 00 00       	mov    $0x104,%ecx
    8873:	48 8b 32             	mov    (%rdx),%rsi
    8876:	48 89 30             	mov    %rsi,(%rax)
    8879:	89 ce                	mov    %ecx,%esi
    887b:	48 01 c6             	add    %rax,%rsi
    887e:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    8882:	89 ce                	mov    %ecx,%esi
    8884:	48 01 d6             	add    %rdx,%rsi
    8887:	48 83 c6 08          	add    $0x8,%rsi
    888b:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    888f:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    8893:	48 8d 78 08          	lea    0x8(%rax),%rdi
    8897:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    889b:	48 29 f8             	sub    %rdi,%rax
    889e:	48 29 c2             	sub    %rax,%rdx
    88a1:	01 c1                	add    %eax,%ecx
    88a3:	83 e1 f8             	and    $0xfffffff8,%ecx
    88a6:	89 c8                	mov    %ecx,%eax
    88a8:	c1 e8 03             	shr    $0x3,%eax
    88ab:	89 c0                	mov    %eax,%eax
    88ad:	48 89 d6             	mov    %rdx,%rsi
    88b0:	48 89 c1             	mov    %rax,%rcx
    88b3:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    88b6:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    88bd:	00 
    88be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88c2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    88c6:	75 9e                	jne    8866 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    88c8:	90                   	nop
    88c9:	90                   	nop
    88ca:	5d                   	pop    %rbp
    88cb:	c3                   	ret

00000000000088cc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    88cc:	55                   	push   %rbp
    88cd:	48 89 e5             	mov    %rsp,%rbp
    88d0:	53                   	push   %rbx
    88d1:	48 83 ec 28          	sub    $0x28,%rsp
    88d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    88d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    88dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    88e1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    88e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    88e9:	48 89 c7             	mov    %rax,%rdi
    88ec:	e8 bf 00 00 00       	call   89b0 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    88f1:	48 89 c7             	mov    %rax,%rdi
    88f4:	e8 d1 00 00 00       	call   89ca <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    88f9:	48 89 c6             	mov    %rax,%rsi
    88fc:	48 89 df             	mov    %rbx,%rdi
    88ff:	e8 fc a7 ff ff       	call   3100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    8904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8908:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    890f:	90                   	nop
    8910:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8914:	c9                   	leave
    8915:	c3                   	ret

0000000000008916 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8916:	55                   	push   %rbp
    8917:	48 89 e5             	mov    %rsp,%rbp
    891a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    891e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8922:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    8926:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    892a:	48 8b 00             	mov    (%rax),%rax
    892d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    8931:	eb 10                	jmp    8943 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    8933:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8937:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    893b:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    893e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    8943:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8947:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    894b:	75 e6                	jne    8933 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    894d:	90                   	nop
    894e:	90                   	nop
    894f:	5d                   	pop    %rbp
    8950:	c3                   	ret

0000000000008951 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    8951:	55                   	push   %rbp
    8952:	48 89 e5             	mov    %rsp,%rbp
    8955:	48 83 ec 30          	sub    $0x30,%rsp
    8959:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    895d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8961:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    8965:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8969:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    896d:	48 c1 f8 03          	sar    $0x3,%rax
    8971:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    8975:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    897a:	74 1f                	je     899b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    897c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8980:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8987:	00 
    8988:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    898c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8990:	48 89 ce             	mov    %rcx,%rsi
    8993:	48 89 c7             	mov    %rax,%rdi
    8996:	e8 f5 a9 ff ff       	call   3390 <memmove@plt>
	  return __result + _Num;
    899b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    899f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    89a6:	00 
    89a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89ab:	48 01 d0             	add    %rdx,%rax
	}
    89ae:	c9                   	leave
    89af:	c3                   	ret

00000000000089b0 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    89b0:	55                   	push   %rbp
    89b1:	48 89 e5             	mov    %rsp,%rbp
    89b4:	48 83 ec 10          	sub    $0x10,%rsp
    89b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    89bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89c0:	48 89 c7             	mov    %rax,%rdi
    89c3:	e8 10 00 00 00       	call   89d8 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    89c8:	c9                   	leave
    89c9:	c3                   	ret

00000000000089ca <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    89ca:	55                   	push   %rbp
    89cb:	48 89 e5             	mov    %rsp,%rbp
    89ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    89d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89d6:	5d                   	pop    %rbp
    89d7:	c3                   	ret

00000000000089d8 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    89d8:	55                   	push   %rbp
    89d9:	48 89 e5             	mov    %rsp,%rbp
    89dc:	48 83 ec 10          	sub    $0x10,%rsp
    89e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    89e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89e8:	48 89 c7             	mov    %rax,%rdi
    89eb:	e8 02 00 00 00       	call   89f2 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    89f0:	c9                   	leave
    89f1:	c3                   	ret

00000000000089f2 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    89f2:	55                   	push   %rbp
    89f3:	48 89 e5             	mov    %rsp,%rbp
    89f6:	48 83 ec 10          	sub    $0x10,%rsp
    89fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a02:	48 89 c7             	mov    %rax,%rdi
    8a05:	e8 02 00 00 00       	call   8a0c <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    8a0a:	c9                   	leave
    8a0b:	c3                   	ret

0000000000008a0c <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    8a0c:	55                   	push   %rbp
    8a0d:	48 89 e5             	mov    %rsp,%rbp
    8a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a18:	48 8b 00             	mov    (%rax),%rax
    8a1b:	5d                   	pop    %rbp
    8a1c:	c3                   	ret
    8a1d:	90                   	nop

0000000000008a1e <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:
namespace neko {

VkResult Context::createDebugMessenger(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pMessenger) const {
    8a1e:	55                   	push   %rbp
    8a1f:	48 89 e5             	mov    %rsp,%rbp
    8a22:	48 83 ec 40          	sub    $0x40,%rsp
    8a26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a2a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a2e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8a32:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    8a36:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  auto pFunc = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    8a3a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a3e:	48 8d 15 53 3b 00 00 	lea    0x3b53(%rip),%rdx        # c598 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    8a45:	48 89 d6             	mov    %rdx,%rsi
    8a48:	48 89 c7             	mov    %rax,%rdi
    8a4b:	e8 a0 a7 ff ff       	call   31f0 <vkGetInstanceProcAddr@plt>
    8a50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (pFunc != nullptr) {
    8a54:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8a59:	74 1c                	je     8a77 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x59>
    return pFunc(instance, pCreateInfo, pAllocator, pMessenger);
    8a5b:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    8a5f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    8a63:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8a67:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    8a6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a6f:	48 89 c7             	mov    %rax,%rdi
    8a72:	41 ff d0             	call   *%r8
    8a75:	eb 05                	jmp    8a7c <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5e>
  } else {
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    8a77:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
  }
}
    8a7c:	c9                   	leave
    8a7d:	c3                   	ret

0000000000008a7e <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void Context::destroyDebugMessenger(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) const noexcept {
    8a7e:	55                   	push   %rbp
    8a7f:	48 89 e5             	mov    %rsp,%rbp
    8a82:	48 83 ec 30          	sub    $0x30,%rsp
    8a86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a8a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a8e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8a92:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    8a96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a9a:	48 8d 15 17 3b 00 00 	lea    0x3b17(%rip),%rdx        # c5b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    8aa1:	48 89 d6             	mov    %rdx,%rsi
    8aa4:	48 89 c7             	mov    %rax,%rdi
    8aa7:	e8 44 a7 ff ff       	call   31f0 <vkGetInstanceProcAddr@plt>
    8aac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    8ab0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8ab5:	74 19                	je     8ad0 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x52>
    func(instance, debugMessenger, pAllocator);
    8ab7:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    8abb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8abf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    8ac3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ac7:	48 89 ce             	mov    %rcx,%rsi
    8aca:	48 89 c7             	mov    %rax,%rdi
    8acd:	41 ff d0             	call   *%r8
  }
}
    8ad0:	90                   	nop
    8ad1:	c9                   	leave
    8ad2:	c3                   	ret
    8ad3:	90                   	nop

0000000000008ad4 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL Instance::debugMessengerCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
    8ad4:	55                   	push   %rbp
    8ad5:	48 89 e5             	mov    %rsp,%rbp
    8ad8:	48 83 ec 20          	sub    $0x20,%rsp
    8adc:	89 7d fc             	mov    %edi,-0x4(%rbp)
    8adf:	89 75 f8             	mov    %esi,-0x8(%rbp)
    8ae2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    8ae6:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    8aea:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8aed:	83 f8 01             	cmp    $0x1,%eax
    8af0:	7e 3c                	jle    8b2e <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    8af2:	be 0a 00 00 00       	mov    $0xa,%esi
    8af7:	48 8d 05 22 b7 00 00 	lea    0xb722(%rip),%rax        # 14220 <_ZSt4cerr@GLIBCXX_3.4>
    8afe:	48 89 c7             	mov    %rax,%rdi
    8b01:	e8 da a7 ff ff       	call   32e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    8b06:	48 89 c2             	mov    %rax,%rdx
    8b09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b0d:	48 8b 40 28          	mov    0x28(%rax),%rax
    8b11:	48 89 c6             	mov    %rax,%rsi
    8b14:	48 89 d7             	mov    %rdx,%rdi
    8b17:	e8 f4 a6 ff ff       	call   3210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    8b1c:	48 8b 15 75 b4 00 00 	mov    0xb475(%rip),%rdx        # 13f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    8b23:	48 89 d6             	mov    %rdx,%rsi
    8b26:	48 89 c7             	mov    %rax,%rdi
    8b29:	e8 42 a7 ff ff       	call   3270 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    8b2e:	b8 00 00 00 00       	mov    $0x0,%eax
}
    8b33:	c9                   	leave
    8b34:	c3                   	ret
    8b35:	90                   	nop

0000000000008b36 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void Instance::populateDebugMessengerInfo(
    VkDebugUtilsMessengerCreateInfoEXT &debugMessengerInfo) {
    8b36:	55                   	push   %rbp
    8b37:	48 89 e5             	mov    %rsp,%rbp
    8b3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  debugMessengerInfo.sType =
    8b42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b46:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
      VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
  debugMessengerInfo.messageSeverity =
    8b4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b50:	c7 40 14 11 11 00 00 	movl   $0x1111,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  debugMessengerInfo.messageType =
    8b57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b5b:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
      VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  debugMessengerInfo.pfnUserCallback = debugMessengerCallback;
    8b62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b66:	48 8d 15 67 ff ff ff 	lea    -0x99(%rip),%rdx        # 8ad4 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    8b6d:	48 89 50 20          	mov    %rdx,0x20(%rax)
  debugMessengerInfo.pUserData = nullptr;
    8b71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b75:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    8b7c:	00 
}
    8b7d:	90                   	nop
    8b7e:	5d                   	pop    %rbp
    8b7f:	c3                   	ret

0000000000008b80 <_ZN4neko8Instance21getRequiredExtensionsEv>:

std::vector<const char *> Instance::getRequiredExtensions() {
    8b80:	55                   	push   %rbp
    8b81:	48 89 e5             	mov    %rsp,%rbp
    8b84:	53                   	push   %rbx
    8b85:	48 83 ec 58          	sub    $0x58,%rsp
    8b89:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    8b8d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  uint32_t requiredExtensionCount;
  const char **pRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    8b91:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    8b95:	48 89 c7             	mov    %rax,%rdi
    8b98:	e8 e3 a5 ff ff       	call   3180 <glfwGetRequiredInstanceExtensions@plt>
    8b9d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    8ba1:	8b 45 c8             	mov    -0x38(%rbp),%eax
    8ba4:	89 c3                	mov    %eax,%ebx
    8ba6:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8baa:	48 89 c7             	mov    %rax,%rdi
    8bad:	e8 92 c5 ff ff       	call   5144 <_ZNSaIPKcEC1Ev>
    8bb2:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    8bb6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8bba:	48 89 de             	mov    %rbx,%rsi
    8bbd:	48 89 c7             	mov    %rax,%rdi
    8bc0:	e8 6b 05 00 00       	call   9130 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    8bc5:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8bc9:	48 89 c7             	mov    %rax,%rdi
    8bcc:	e8 8f c5 ff ff       	call   5160 <_ZNSaIPKcED1Ev>
  size_t iExtension = 0;
    8bd1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8bd8:	00 
  for (auto &extension : requiredExtensions) {
    8bd9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8bdd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8be1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8be5:	48 89 c7             	mov    %rax,%rdi
    8be8:	e8 b9 05 00 00       	call   91a6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    8bed:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    8bf1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8bf5:	48 89 c7             	mov    %rax,%rdi
    8bf8:	e8 cf 05 00 00       	call   91cc <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    8bfd:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    8c01:	eb 3e                	jmp    8c41 <_ZN4neko8Instance21getRequiredExtensionsEv+0xc1>
    8c03:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8c07:	48 89 c7             	mov    %rax,%rdi
    8c0a:	e8 41 06 00 00       	call   9250 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    8c0f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    extension = pRequiredExtensions[iExtension];
    8c13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c17:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8c1e:	00 
    8c1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c23:	48 01 d0             	add    %rdx,%rax
    8c26:	48 8b 10             	mov    (%rax),%rdx
    8c29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c2d:	48 89 10             	mov    %rdx,(%rax)
    ++iExtension;
    8c30:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (auto &extension : requiredExtensions) {
    8c35:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8c39:	48 89 c7             	mov    %rax,%rdi
    8c3c:	e8 ef 05 00 00       	call   9230 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    8c41:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    8c45:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8c49:	48 89 d6             	mov    %rdx,%rsi
    8c4c:	48 89 c7             	mov    %rax,%rdi
    8c4f:	e8 a1 05 00 00       	call   91f5 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    8c54:	84 c0                	test   %al,%al
    8c56:	75 ab                	jne    8c03 <_ZN4neko8Instance21getRequiredExtensionsEv+0x83>
  }
  return requiredExtensions;
    8c58:	eb 1a                	jmp    8c74 <_ZN4neko8Instance21getRequiredExtensionsEv+0xf4>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    8c5a:	48 89 c3             	mov    %rax,%rbx
    8c5d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8c61:	48 89 c7             	mov    %rax,%rdi
    8c64:	e8 f7 c4 ff ff       	call   5160 <_ZNSaIPKcED1Ev>
    8c69:	48 89 d8             	mov    %rbx,%rax
    8c6c:	48 89 c7             	mov    %rax,%rdi
    8c6f:	e8 5c a7 ff ff       	call   33d0 <_Unwind_Resume@plt>
}
    8c74:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8c78:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c7c:	c9                   	leave
    8c7d:	c3                   	ret

0000000000008c7e <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE>:

Instance::Instance(const Settings &settings, const Context &context)
    8c7e:	55                   	push   %rbp
    8c7f:	48 89 e5             	mov    %rsp,%rbp
    8c82:	41 55                	push   %r13
    8c84:	41 54                	push   %r12
    8c86:	53                   	push   %rbx
    8c87:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    8c8e:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    8c95:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    8c9c:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
    : mcrContext{context} {
    8ca3:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8caa:	48 89 c7             	mov    %rax,%rdi
    8cad:	e8 7e aa ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    8cb2:	48 8d 15 97 af 00 00 	lea    0xaf97(%rip),%rdx        # 13c50 <_ZTVN4neko8InstanceE+0x10>
    8cb9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8cc0:	48 89 10             	mov    %rdx,(%rax)
    8cc3:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8cca:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    8cd1:	48 89 50 08          	mov    %rdx,0x8(%rax)
  uint32_t apiVersion;
  vkEnumerateInstanceVersion(&apiVersion);
    8cd5:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    8cd9:	48 89 c7             	mov    %rax,%rdi
    8cdc:	e8 2f a6 ff ff       	call   3310 <vkEnumerateInstanceVersion@plt>

  VkApplicationInfo applicationInfo{};
    8ce1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8ce5:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    8cec:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    8cf3:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
  applicationInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    8cfa:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
    8d01:	00 00 00 
  applicationInfo.pApplicationName = settings.general.appName.c_str();
    8d04:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8d0b:	48 89 c7             	mov    %rax,%rdi
    8d0e:	e8 9d a3 ff ff       	call   30b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    8d13:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  applicationInfo.applicationVersion = settings.general.appVersion;
    8d1a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8d21:	8b 40 20             	mov    0x20(%rax),%eax
    8d24:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  applicationInfo.pEngineName = settings.general.engineName.c_str();
    8d2a:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8d31:	48 83 c0 28          	add    $0x28,%rax
    8d35:	48 89 c7             	mov    %rax,%rdi
    8d38:	e8 73 a3 ff ff       	call   30b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    8d3d:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  applicationInfo.engineVersion = settings.general.engineVersion;
    8d44:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8d4b:	8b 40 48             	mov    0x48(%rax),%eax
    8d4e:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  applicationInfo.apiVersion = apiVersion;
    8d54:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    8d57:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)

  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    8d5d:	48 8d 05 a4 3e 00 00 	lea    0x3ea4(%rip),%rax        # cc08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    8d64:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8d68:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    8d6c:	49 89 c4             	mov    %rax,%r12
    8d6f:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    8d75:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8d79:	48 89 c7             	mov    %rax,%rdi
    8d7c:	e8 c3 c3 ff ff       	call   5144 <_ZNSaIPKcEC1Ev>
    8d81:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8d85:	4c 89 e6             	mov    %r12,%rsi
    8d88:	4c 89 ef             	mov    %r13,%rdi
    8d8b:	4c 89 e1             	mov    %r12,%rcx
    8d8e:	4c 89 eb             	mov    %r13,%rbx
    8d91:	48 89 df             	mov    %rbx,%rdi
    8d94:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8d98:	48 89 d1             	mov    %rdx,%rcx
    8d9b:	48 89 fa             	mov    %rdi,%rdx
    8d9e:	48 89 c7             	mov    %rax,%rdi
    8da1:	e8 d6 c3 ff ff       	call   517c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    8da6:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8daa:	48 89 c7             	mov    %rax,%rdi
    8dad:	e8 ae c3 ff ff       	call   5160 <_ZNSaIPKcED1Ev>
  auto extensions = this->getRequiredExtensions();
    8db2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8db6:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8dbd:	48 89 d6             	mov    %rdx,%rsi
    8dc0:	48 89 c7             	mov    %rax,%rdi
    8dc3:	e8 b8 fd ff ff       	call   8b80 <_ZN4neko8Instance21getRequiredExtensionsEv>

  VkDebugUtilsMessengerCreateInfoEXT *pDebugMessengerInfo = nullptr;
    8dc8:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    8dcf:	00 
  VkDebugUtilsMessengerCreateInfoEXT debugMessengerInfo{};
    8dd0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8dd4:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    8ddb:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    8de2:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)

  if constexpr (neko::debugMode) {
    layers.emplace_back("VK_LAYER_KHRONOS_validation");
    8de9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8ded:	48 8d 15 2e 3e 00 00 	lea    0x3e2e(%rip),%rdx        # cc22 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x22>
    8df4:	48 89 d6             	mov    %rdx,%rsi
    8df7:	48 89 c7             	mov    %rax,%rdi
    8dfa:	e8 63 04 00 00       	call   9262 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>
    extensions.emplace_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    8dff:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8e03:	48 8d 15 34 3e 00 00 	lea    0x3e34(%rip),%rdx        # cc3e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e>
    8e0a:	48 89 d6             	mov    %rdx,%rsi
    8e0d:	48 89 c7             	mov    %rax,%rdi
    8e10:	e8 f1 04 00 00       	call   9306 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>

    this->populateDebugMessengerInfo(debugMessengerInfo);
    8e15:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    8e1c:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8e23:	48 89 d6             	mov    %rdx,%rsi
    8e26:	48 89 c7             	mov    %rax,%rdi
    8e29:	e8 08 fd ff ff       	call   8b36 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    pDebugMessengerInfo = &debugMessengerInfo;
    8e2e:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    8e35:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  }

  VkInstanceCreateInfo instanceInfo{};
    8e39:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8e3d:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    8e44:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    8e4b:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    8e52:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    8e59:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    8e60:	00 00 00 
  instanceInfo.pNext = pDebugMessengerInfo;
    8e63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e67:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.pApplicationInfo = &applicationInfo;
    8e6e:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    8e75:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(layers.size());
    8e7c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8e80:	48 89 c7             	mov    %rax,%rdi
    8e83:	e8 22 05 00 00       	call   93aa <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    8e88:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  instanceInfo.ppEnabledLayerNames = layers.data();
    8e8e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8e92:	48 89 c7             	mov    %rax,%rdi
    8e95:	e8 34 05 00 00       	call   93ce <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    8e9a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  instanceInfo.enabledExtensionCount = static_cast<uint32_t>(extensions.size());
    8ea1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8ea5:	48 89 c7             	mov    %rax,%rdi
    8ea8:	e8 fd 04 00 00       	call   93aa <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    8ead:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  instanceInfo.ppEnabledExtensionNames = extensions.data();
    8eb3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8eb7:	48 89 c7             	mov    %rax,%rdi
    8eba:	e8 0f 05 00 00       	call   93ce <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    8ebf:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  if (vkCreateInstance(&instanceInfo, nullptr, &mInstance) != VK_SUCCESS) {
    8ec6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8ecd:	48 8d 50 10          	lea    0x10(%rax),%rdx
    8ed1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    8ed8:	be 00 00 00 00       	mov    $0x0,%esi
    8edd:	48 89 c7             	mov    %rax,%rdi
    8ee0:	e8 0b a4 ff ff       	call   32f0 <vkCreateInstance@plt>
    8ee5:	85 c0                	test   %eax,%eax
    8ee7:	0f 95 c0             	setne  %al
    8eea:	84 c0                	test   %al,%al
    8eec:	74 3b                	je     8f29 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x2ab>
    throw std::runtime_error("Failed to create instance.");
    8eee:	bf 10 00 00 00       	mov    $0x10,%edi
    8ef3:	e8 d8 a1 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    8ef8:	48 89 c3             	mov    %rax,%rbx
    8efb:	48 8d 05 4f 3d 00 00 	lea    0x3d4f(%rip),%rax        # cc51 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x51>
    8f02:	48 89 c6             	mov    %rax,%rsi
    8f05:	48 89 df             	mov    %rbx,%rdi
    8f08:	e8 73 a1 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    8f0d:	48 8b 05 94 b0 00 00 	mov    0xb094(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8f14:	48 89 c2             	mov    %rax,%rdx
    8f17:	48 8d 05 82 ad 00 00 	lea    0xad82(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8f1e:	48 89 c6             	mov    %rax,%rsi
    8f21:	48 89 df             	mov    %rbx,%rdi
    8f24:	e8 87 a4 ff ff       	call   33b0 <__cxa_throw@plt>
  }

  if constexpr (neko::debugMode) {
    if (mcrContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    8f29:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8f30:	48 8b 40 08          	mov    0x8(%rax),%rax
    8f34:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8f3b:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
    8f3f:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8f46:	48 8b 72 10          	mov    0x10(%rdx),%rsi
    8f4a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f4e:	49 89 c8             	mov    %rcx,%r8
    8f51:	b9 00 00 00 00       	mov    $0x0,%ecx
    8f56:	48 89 c7             	mov    %rax,%rdi
    8f59:	e8 c0 fa ff ff       	call   8a1e <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                        &mDebugMessenger) != VK_SUCCESS) {
    8f5e:	85 c0                	test   %eax,%eax
    8f60:	0f 95 c0             	setne  %al
    if (mcrContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    8f63:	84 c0                	test   %al,%al
    8f65:	74 3b                	je     8fa2 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x324>
      throw std::runtime_error("Failed to create debug messenger");
    8f67:	bf 10 00 00 00       	mov    $0x10,%edi
    8f6c:	e8 5f a1 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    8f71:	48 89 c3             	mov    %rax,%rbx
    8f74:	48 8d 05 f5 3c 00 00 	lea    0x3cf5(%rip),%rax        # cc70 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    8f7b:	48 89 c6             	mov    %rax,%rsi
    8f7e:	48 89 df             	mov    %rbx,%rdi
    8f81:	e8 fa a0 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    8f86:	48 8b 05 1b b0 00 00 	mov    0xb01b(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8f8d:	48 89 c2             	mov    %rax,%rdx
    8f90:	48 8d 05 09 ad 00 00 	lea    0xad09(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8f97:	48 89 c6             	mov    %rax,%rsi
    8f9a:	48 89 df             	mov    %rbx,%rdi
    8f9d:	e8 0e a4 ff ff       	call   33b0 <__cxa_throw@plt>
    }
  }
}
    8fa2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8fa6:	48 89 c7             	mov    %rax,%rdi
    8fa9:	e8 56 c2 ff ff       	call   5204 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8fae:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8fb2:	48 89 c7             	mov    %rax,%rdi
    8fb5:	e8 4a c2 ff ff       	call   5204 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8fba:	eb 70                	jmp    902c <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x3ae>
  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    8fbc:	48 89 c3             	mov    %rax,%rbx
    8fbf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8fc3:	48 89 c7             	mov    %rax,%rdi
    8fc6:	e8 95 c1 ff ff       	call   5160 <_ZNSaIPKcED1Ev>
    8fcb:	eb 45                	jmp    9012 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x394>
    throw std::runtime_error("Failed to create instance.");
    8fcd:	49 89 c4             	mov    %rax,%r12
    8fd0:	48 89 df             	mov    %rbx,%rdi
    8fd3:	e8 78 a1 ff ff       	call   3150 <__cxa_free_exception@plt>
    8fd8:	4c 89 e3             	mov    %r12,%rbx
    8fdb:	eb 13                	jmp    8ff0 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x372>
      throw std::runtime_error("Failed to create debug messenger");
    8fdd:	49 89 c4             	mov    %rax,%r12
    8fe0:	48 89 df             	mov    %rbx,%rdi
    8fe3:	e8 68 a1 ff ff       	call   3150 <__cxa_free_exception@plt>
    8fe8:	4c 89 e3             	mov    %r12,%rbx
    8feb:	eb 03                	jmp    8ff0 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x372>
}
    8fed:	48 89 c3             	mov    %rax,%rbx
    8ff0:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8ff4:	48 89 c7             	mov    %rax,%rdi
    8ff7:	e8 08 c2 ff ff       	call   5204 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8ffc:	eb 03                	jmp    9001 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x383>
    8ffe:	48 89 c3             	mov    %rax,%rbx
    9001:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9005:	48 89 c7             	mov    %rax,%rdi
    9008:	e8 f7 c1 ff ff       	call   5204 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    900d:	eb 03                	jmp    9012 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x394>
    900f:	48 89 c3             	mov    %rax,%rbx
    9012:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    9019:	48 89 c7             	mov    %rax,%rdi
    901c:	e8 29 a7 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    9021:	48 89 d8             	mov    %rbx,%rax
    9024:	48 89 c7             	mov    %rax,%rdi
    9027:	e8 a4 a3 ff ff       	call   33d0 <_Unwind_Resume@plt>
    902c:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    9033:	5b                   	pop    %rbx
    9034:	41 5c                	pop    %r12
    9036:	41 5d                	pop    %r13
    9038:	5d                   	pop    %rbp
    9039:	c3                   	ret

000000000000903a <_ZN4neko8InstanceD1Ev>:

Instance::~Instance() {
    903a:	55                   	push   %rbp
    903b:	48 89 e5             	mov    %rsp,%rbp
    903e:	48 83 ec 10          	sub    $0x10,%rsp
    9042:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9046:	48 8d 15 03 ac 00 00 	lea    0xac03(%rip),%rdx        # 13c50 <_ZTVN4neko8InstanceE+0x10>
    904d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9051:	48 89 10             	mov    %rdx,(%rax)
  mcrContext.destroyDebugMessenger(mInstance, mDebugMessenger, nullptr);
    9054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9058:	48 8b 40 08          	mov    0x8(%rax),%rax
    905c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9060:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    9064:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    9068:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    906c:	b9 00 00 00 00       	mov    $0x0,%ecx
    9071:	48 89 c7             	mov    %rax,%rdi
    9074:	e8 05 fa ff ff       	call   8a7e <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkDestroyInstance(mInstance, nullptr);
    9079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    907d:	48 8b 40 10          	mov    0x10(%rax),%rax
    9081:	be 00 00 00 00       	mov    $0x0,%esi
    9086:	48 89 c7             	mov    %rax,%rdi
    9089:	e8 b2 a1 ff ff       	call   3240 <vkDestroyInstance@plt>
}
    908e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9092:	48 89 c7             	mov    %rax,%rdi
    9095:	e8 b0 a6 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    909a:	90                   	nop
    909b:	c9                   	leave
    909c:	c3                   	ret
    909d:	90                   	nop

000000000000909e <_ZN4neko8InstanceD0Ev>:
Instance::~Instance() {
    909e:	55                   	push   %rbp
    909f:	48 89 e5             	mov    %rsp,%rbp
    90a2:	48 83 ec 10          	sub    $0x10,%rsp
    90a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
}
    90aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ae:	48 89 c7             	mov    %rax,%rdi
    90b1:	e8 84 ff ff ff       	call   903a <_ZN4neko8InstanceD1Ev>
    90b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ba:	be 20 00 00 00       	mov    $0x20,%esi
    90bf:	48 89 c7             	mov    %rax,%rdi
    90c2:	e8 69 a1 ff ff       	call   3230 <_ZdlPvm@plt>
    90c7:	c9                   	leave
    90c8:	c3                   	ret

00000000000090c9 <_Z41__static_initialization_and_destruction_0ii>:

    90c9:	55                   	push   %rbp
    90ca:	48 89 e5             	mov    %rsp,%rbp
    90cd:	48 83 ec 10          	sub    $0x10,%rsp
    90d1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    90d4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    90d7:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    90db:	75 3b                	jne    9118 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    90dd:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    90e4:	75 32                	jne    9118 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    90e6:	48 8d 05 45 b2 00 00 	lea    0xb245(%rip),%rax        # 14332 <_ZStL8__ioinit>
    90ed:	48 89 c7             	mov    %rax,%rdi
    90f0:	e8 6b a2 ff ff       	call   3360 <_ZNSt8ios_base4InitC1Ev@plt>
    90f5:	48 8d 05 04 b1 00 00 	lea    0xb104(%rip),%rax        # 14200 <__dso_handle>
    90fc:	48 89 c2             	mov    %rax,%rdx
    90ff:	48 8d 05 2c b2 00 00 	lea    0xb22c(%rip),%rax        # 14332 <_ZStL8__ioinit>
    9106:	48 89 c6             	mov    %rax,%rsi
    9109:	48 8b 05 b8 ae 00 00 	mov    0xaeb8(%rip),%rax        # 13fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    9110:	48 89 c7             	mov    %rax,%rdi
    9113:	e8 c8 a0 ff ff       	call   31e0 <__cxa_atexit@plt>
    9118:	90                   	nop
    9119:	c9                   	leave
    911a:	c3                   	ret

000000000000911b <_GLOBAL__sub_I__ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    911b:	55                   	push   %rbp
    911c:	48 89 e5             	mov    %rsp,%rbp
    911f:	be ff ff 00 00       	mov    $0xffff,%esi
    9124:	bf 01 00 00 00       	mov    $0x1,%edi
    9129:	e8 9b ff ff ff       	call   90c9 <_Z41__static_initialization_and_destruction_0ii>
    912e:	5d                   	pop    %rbp
    912f:	c3                   	ret

0000000000009130 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9130:	55                   	push   %rbp
    9131:	48 89 e5             	mov    %rsp,%rbp
    9134:	53                   	push   %rbx
    9135:	48 83 ec 28          	sub    $0x28,%rsp
    9139:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    913d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9141:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9145:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9149:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    914d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9151:	48 89 d6             	mov    %rdx,%rsi
    9154:	48 89 c7             	mov    %rax,%rdi
    9157:	e8 39 d3 ff ff       	call   6495 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    915c:	48 89 c1             	mov    %rax,%rcx
    915f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9163:	48 89 c2             	mov    %rax,%rdx
    9166:	48 89 ce             	mov    %rcx,%rsi
    9169:	48 89 df             	mov    %rbx,%rdi
    916c:	e8 81 02 00 00       	call   93f2 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    9171:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9179:	48 89 d6             	mov    %rdx,%rsi
    917c:	48 89 c7             	mov    %rax,%rdi
    917f:	e8 cc 02 00 00       	call   9450 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    9184:	eb 1a                	jmp    91a0 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    9186:	48 89 c3             	mov    %rax,%rbx
    9189:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    918d:	48 89 c7             	mov    %rax,%rdi
    9190:	e8 89 c8 ff ff       	call   5a1e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    9195:	48 89 d8             	mov    %rbx,%rax
    9198:	48 89 c7             	mov    %rax,%rdi
    919b:	e8 30 a2 ff ff       	call   33d0 <_Unwind_Resume@plt>
    91a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91a4:	c9                   	leave
    91a5:	c3                   	ret

00000000000091a6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    91a6:	55                   	push   %rbp
    91a7:	48 89 e5             	mov    %rsp,%rbp
    91aa:	48 83 ec 20          	sub    $0x20,%rsp
    91ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    91b2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    91b6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    91ba:	48 89 d6             	mov    %rdx,%rsi
    91bd:	48 89 c7             	mov    %rax,%rdi
    91c0:	e8 cb 02 00 00       	call   9490 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    91c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c9:	c9                   	leave
    91ca:	c3                   	ret
    91cb:	90                   	nop

00000000000091cc <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    91cc:	55                   	push   %rbp
    91cd:	48 89 e5             	mov    %rsp,%rbp
    91d0:	48 83 ec 20          	sub    $0x20,%rsp
    91d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    91d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91dc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    91e0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    91e4:	48 89 d6             	mov    %rdx,%rsi
    91e7:	48 89 c7             	mov    %rax,%rdi
    91ea:	e8 a1 02 00 00       	call   9490 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    91ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91f3:	c9                   	leave
    91f4:	c3                   	ret

00000000000091f5 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    91f5:	55                   	push   %rbp
    91f6:	48 89 e5             	mov    %rsp,%rbp
    91f9:	53                   	push   %rbx
    91fa:	48 83 ec 18          	sub    $0x18,%rsp
    91fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9202:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    9206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    920a:	48 89 c7             	mov    %rax,%rdi
    920d:	e8 9c 02 00 00       	call   94ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9212:	48 8b 18             	mov    (%rax),%rbx
    9215:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9219:	48 89 c7             	mov    %rax,%rdi
    921c:	e8 8d 02 00 00       	call   94ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9221:	48 8b 00             	mov    (%rax),%rax
    9224:	48 39 c3             	cmp    %rax,%rbx
    9227:	0f 95 c0             	setne  %al
    922a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    922e:	c9                   	leave
    922f:	c3                   	ret

0000000000009230 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9230:	55                   	push   %rbp
    9231:	48 89 e5             	mov    %rsp,%rbp
    9234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    923c:	48 8b 00             	mov    (%rax),%rax
    923f:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9247:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    924a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    924e:	5d                   	pop    %rbp
    924f:	c3                   	ret

0000000000009250 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9250:	55                   	push   %rbp
    9251:	48 89 e5             	mov    %rsp,%rbp
    9254:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    925c:	48 8b 00             	mov    (%rax),%rax
    925f:	5d                   	pop    %rbp
    9260:	c3                   	ret
    9261:	90                   	nop

0000000000009262 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    9262:	55                   	push   %rbp
    9263:	48 89 e5             	mov    %rsp,%rbp
    9266:	53                   	push   %rbx
    9267:	48 83 ec 18          	sub    $0x18,%rsp
    926b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    926f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    9273:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9277:	48 8b 50 08          	mov    0x8(%rax),%rdx
    927b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    927f:	48 8b 40 10          	mov    0x10(%rax),%rax
    9283:	48 39 c2             	cmp    %rax,%rdx
    9286:	74 3c                	je     92c4 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    9288:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    928c:	48 89 c7             	mov    %rax,%rdi
    928f:	e8 28 02 00 00       	call   94bc <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9294:	48 89 c2             	mov    %rax,%rdx
    9297:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    929b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    929f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92a3:	48 89 ce             	mov    %rcx,%rsi
    92a6:	48 89 c7             	mov    %rax,%rdi
    92a9:	e8 1c 02 00 00       	call   94ca <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    92ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92b2:	48 8b 40 08          	mov    0x8(%rax),%rax
    92b6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    92ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92be:	48 89 50 08          	mov    %rdx,0x8(%rax)
    92c2:	eb 30                	jmp    92f4 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    92c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    92c8:	48 89 c7             	mov    %rax,%rdi
    92cb:	e8 ec 01 00 00       	call   94bc <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    92d0:	48 89 c3             	mov    %rax,%rbx
    92d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92d7:	48 89 c7             	mov    %rax,%rdi
    92da:	e8 ed fe ff ff       	call   91cc <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    92df:	48 89 c1             	mov    %rax,%rcx
    92e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92e6:	48 89 da             	mov    %rbx,%rdx
    92e9:	48 89 ce             	mov    %rcx,%rsi
    92ec:	48 89 c7             	mov    %rax,%rdi
    92ef:	e8 10 02 00 00       	call   9504 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    92f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92f8:	48 89 c7             	mov    %rax,%rdi
    92fb:	e8 96 03 00 00       	call   9696 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    9300:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9304:	c9                   	leave
    9305:	c3                   	ret

0000000000009306 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
    9306:	55                   	push   %rbp
    9307:	48 89 e5             	mov    %rsp,%rbp
    930a:	53                   	push   %rbx
    930b:	48 83 ec 18          	sub    $0x18,%rsp
    930f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9313:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    9317:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    931b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    931f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9323:	48 8b 40 10          	mov    0x10(%rax),%rax
    9327:	48 39 c2             	cmp    %rax,%rdx
    932a:	74 3c                	je     9368 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    932c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9330:	48 89 c7             	mov    %rax,%rdi
    9333:	e8 9d 03 00 00       	call   96d5 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9338:	48 89 c2             	mov    %rax,%rdx
    933b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    933f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9347:	48 89 ce             	mov    %rcx,%rsi
    934a:	48 89 c7             	mov    %rax,%rdi
    934d:	e8 91 03 00 00       	call   96e3 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    9352:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9356:	48 8b 40 08          	mov    0x8(%rax),%rax
    935a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    935e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9362:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9366:	eb 30                	jmp    9398 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    9368:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    936c:	48 89 c7             	mov    %rax,%rdi
    936f:	e8 61 03 00 00       	call   96d5 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9374:	48 89 c3             	mov    %rax,%rbx
    9377:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    937b:	48 89 c7             	mov    %rax,%rdi
    937e:	e8 49 fe ff ff       	call   91cc <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    9383:	48 89 c1             	mov    %rax,%rcx
    9386:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    938a:	48 89 da             	mov    %rbx,%rdx
    938d:	48 89 ce             	mov    %rcx,%rsi
    9390:	48 89 c7             	mov    %rax,%rdi
    9393:	e8 84 03 00 00       	call   971c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
    9398:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    939c:	48 89 c7             	mov    %rax,%rdi
    939f:	e8 f2 02 00 00       	call   9696 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
    93a4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    93a8:	c9                   	leave
    93a9:	c3                   	ret

00000000000093aa <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    93aa:	55                   	push   %rbp
    93ab:	48 89 e5             	mov    %rsp,%rbp
    93ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    93b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93b6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    93ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93be:	48 8b 00             	mov    (%rax),%rax
    93c1:	48 29 c2             	sub    %rax,%rdx
    93c4:	48 89 d0             	mov    %rdx,%rax
    93c7:	48 c1 f8 03          	sar    $0x3,%rax
    93cb:	5d                   	pop    %rbp
    93cc:	c3                   	ret
    93cd:	90                   	nop

00000000000093ce <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    93ce:	55                   	push   %rbp
    93cf:	48 89 e5             	mov    %rsp,%rbp
    93d2:	48 83 ec 10          	sub    $0x10,%rsp
    93d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    93da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93de:	48 8b 10             	mov    (%rax),%rdx
    93e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93e5:	48 89 d6             	mov    %rdx,%rsi
    93e8:	48 89 c7             	mov    %rax,%rdi
    93eb:	e8 be 04 00 00       	call   98ae <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    93f0:	c9                   	leave
    93f1:	c3                   	ret

00000000000093f2 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    93f2:	55                   	push   %rbp
    93f3:	48 89 e5             	mov    %rsp,%rbp
    93f6:	53                   	push   %rbx
    93f7:	48 83 ec 28          	sub    $0x28,%rsp
    93fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    93ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9403:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    940b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    940f:	48 89 d6             	mov    %rdx,%rsi
    9412:	48 89 c7             	mov    %rax,%rdi
    9415:	e8 dc cf ff ff       	call   63f6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    941a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    941e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9422:	48 89 d6             	mov    %rdx,%rsi
    9425:	48 89 c7             	mov    %rax,%rdi
    9428:	e8 93 04 00 00       	call   98c0 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    942d:	eb 1a                	jmp    9449 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    942f:	48 89 c3             	mov    %rax,%rbx
    9432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9436:	48 89 c7             	mov    %rax,%rdi
    9439:	e8 9e c5 ff ff       	call   59dc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    943e:	48 89 d8             	mov    %rbx,%rax
    9441:	48 89 c7             	mov    %rax,%rdi
    9444:	e8 87 9f ff ff       	call   33d0 <_Unwind_Resume@plt>
    9449:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    944d:	c9                   	leave
    944e:	c3                   	ret
    944f:	90                   	nop

0000000000009450 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9450:	55                   	push   %rbp
    9451:	48 89 e5             	mov    %rsp,%rbp
    9454:	48 83 ec 10          	sub    $0x10,%rsp
    9458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    945c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9464:	48 89 c7             	mov    %rax,%rdi
    9467:	e8 28 c7 ff ff       	call   5b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    946c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    946f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9473:	48 8b 00             	mov    (%rax),%rax
    9476:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    947a:	48 89 ce             	mov    %rcx,%rsi
    947d:	48 89 c7             	mov    %rax,%rdi
    9480:	e8 91 04 00 00       	call   9916 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9485:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9489:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    948d:	90                   	nop
    948e:	c9                   	leave
    948f:	c3                   	ret

0000000000009490 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    9490:	55                   	push   %rbp
    9491:	48 89 e5             	mov    %rsp,%rbp
    9494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9498:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    949c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94a0:	48 8b 10             	mov    (%rax),%rdx
    94a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94a7:	48 89 10             	mov    %rdx,(%rax)
    94aa:	90                   	nop
    94ab:	5d                   	pop    %rbp
    94ac:	c3                   	ret
    94ad:	90                   	nop

00000000000094ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    94ae:	55                   	push   %rbp
    94af:	48 89 e5             	mov    %rsp,%rbp
    94b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    94b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94ba:	5d                   	pop    %rbp
    94bb:	c3                   	ret

00000000000094bc <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    94bc:	55                   	push   %rbp
    94bd:	48 89 e5             	mov    %rsp,%rbp
    94c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    94c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94c8:	5d                   	pop    %rbp
    94c9:	c3                   	ret

00000000000094ca <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    94ca:	55                   	push   %rbp
    94cb:	48 89 e5             	mov    %rsp,%rbp
    94ce:	48 83 ec 20          	sub    $0x20,%rsp
    94d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    94de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94e2:	48 89 c7             	mov    %rax,%rdi
    94e5:	e8 d2 ff ff ff       	call   94bc <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    94ea:	48 89 c2             	mov    %rax,%rdx
    94ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f5:	48 89 ce             	mov    %rcx,%rsi
    94f8:	48 89 c7             	mov    %rax,%rdi
    94fb:	e8 40 04 00 00       	call   9940 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>
	}
    9500:	90                   	nop
    9501:	c9                   	leave
    9502:	c3                   	ret
    9503:	90                   	nop

0000000000009504 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    9504:	55                   	push   %rbp
    9505:	48 89 e5             	mov    %rsp,%rbp
    9508:	53                   	push   %rbx
    9509:	48 83 ec 68          	sub    $0x68,%rsp
    950d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    9511:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    9515:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    9519:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    951d:	48 8d 15 a5 37 00 00 	lea    0x37a5(%rip),%rdx        # ccc9 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
    9524:	be 01 00 00 00       	mov    $0x1,%esi
    9529:	48 89 c7             	mov    %rax,%rdi
    952c:	e8 4f 04 00 00       	call   9980 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    9531:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    9535:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9539:	48 8b 00             	mov    (%rax),%rax
    953c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    9540:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9544:	48 8b 40 08          	mov    0x8(%rax),%rax
    9548:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    954c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9550:	48 89 c7             	mov    %rax,%rdi
    9553:	e8 4e fc ff ff       	call   91a6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    9558:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    955c:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    9560:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9564:	48 89 d6             	mov    %rdx,%rsi
    9567:	48 89 c7             	mov    %rax,%rdi
    956a:	e8 d9 04 00 00       	call   9a48 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    956f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    9573:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9577:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    957b:	48 89 d6             	mov    %rdx,%rsi
    957e:	48 89 c7             	mov    %rax,%rdi
    9581:	e8 70 cf ff ff       	call   64f6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9586:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    958a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    958e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    9592:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9596:	48 89 c7             	mov    %rax,%rdi
    9599:	e8 1e ff ff ff       	call   94bc <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    959e:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    95a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    95a5:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    95ac:	00 
	  _Alloc_traits::construct(this->_M_impl,
    95ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95b1:	48 01 c1             	add    %rax,%rcx
    95b4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    95b8:	48 89 ce             	mov    %rcx,%rsi
    95bb:	48 89 c7             	mov    %rax,%rdi
    95be:	e8 07 ff ff ff       	call   94ca <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    95c3:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    95ca:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    95cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    95cf:	48 89 c7             	mov    %rax,%rdi
    95d2:	e8 bd c5 ff ff       	call   5b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    95d7:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    95da:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    95de:	48 89 c7             	mov    %rax,%rdi
    95e1:	e8 c8 fe ff ff       	call   94ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    95e6:	48 8b 30             	mov    (%rax),%rsi
    95e9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    95ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    95f1:	48 89 d9             	mov    %rbx,%rcx
    95f4:	48 89 c7             	mov    %rax,%rdi
    95f7:	e8 8e 04 00 00       	call   9a8a <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    95fc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    9600:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    9605:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9609:	48 89 c7             	mov    %rax,%rdi
    960c:	e8 83 c5 ff ff       	call   5b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9611:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    9614:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9618:	48 89 c7             	mov    %rax,%rdi
    961b:	e8 8e fe ff ff       	call   94ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9620:	48 8b 00             	mov    (%rax),%rax
    9623:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9627:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    962b:	48 89 d9             	mov    %rbx,%rcx
    962e:	48 89 c7             	mov    %rax,%rdi
    9631:	e8 54 04 00 00       	call   9a8a <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    9636:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    963a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    963e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9642:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    9646:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    964a:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    964e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9652:	48 89 ce             	mov    %rcx,%rsi
    9655:	48 89 c7             	mov    %rax,%rdi
    9658:	e8 cb cd ff ff       	call   6428 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    965d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9661:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9665:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    9668:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    966c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9670:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    9674:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9678:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    967f:	00 
    9680:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9684:	48 01 c2             	add    %rax,%rdx
    9687:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    968b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    968f:	90                   	nop
    9690:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9694:	c9                   	leave
    9695:	c3                   	ret

0000000000009696 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    9696:	55                   	push   %rbp
    9697:	48 89 e5             	mov    %rsp,%rbp
    969a:	48 83 ec 20          	sub    $0x20,%rsp
    969e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    96a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96a6:	48 89 c7             	mov    %rax,%rdi
    96a9:	e8 1e fb ff ff       	call   91cc <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    96ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    96b2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    96b6:	be 01 00 00 00       	mov    $0x1,%esi
    96bb:	48 89 c7             	mov    %rax,%rdi
    96be:	e8 f9 03 00 00       	call   9abc <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    96c3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    96c7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    96cb:	48 89 c7             	mov    %rax,%rdi
    96ce:	e8 7d fb ff ff       	call   9250 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    96d3:	c9                   	leave
    96d4:	c3                   	ret

00000000000096d5 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    96d5:	55                   	push   %rbp
    96d6:	48 89 e5             	mov    %rsp,%rbp
    96d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    96dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96e1:	5d                   	pop    %rbp
    96e2:	c3                   	ret

00000000000096e3 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    96e3:	55                   	push   %rbp
    96e4:	48 89 e5             	mov    %rsp,%rbp
    96e7:	48 83 ec 20          	sub    $0x20,%rsp
    96eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96f3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    96f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96fb:	48 89 c7             	mov    %rax,%rdi
    96fe:	e8 d2 ff ff ff       	call   96d5 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9703:	48 89 c2             	mov    %rax,%rdx
    9706:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    970a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    970e:	48 89 ce             	mov    %rcx,%rsi
    9711:	48 89 c7             	mov    %rax,%rdi
    9714:	e8 e5 03 00 00       	call   9afe <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>
	}
    9719:	90                   	nop
    971a:	c9                   	leave
    971b:	c3                   	ret

000000000000971c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
    971c:	55                   	push   %rbp
    971d:	48 89 e5             	mov    %rsp,%rbp
    9720:	53                   	push   %rbx
    9721:	48 83 ec 68          	sub    $0x68,%rsp
    9725:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    9729:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    972d:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    9731:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9735:	48 8d 15 8d 35 00 00 	lea    0x358d(%rip),%rdx        # ccc9 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
    973c:	be 01 00 00 00       	mov    $0x1,%esi
    9741:	48 89 c7             	mov    %rax,%rdi
    9744:	e8 37 02 00 00       	call   9980 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    9749:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    974d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9751:	48 8b 00             	mov    (%rax),%rax
    9754:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    9758:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    975c:	48 8b 40 08          	mov    0x8(%rax),%rax
    9760:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    9764:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9768:	48 89 c7             	mov    %rax,%rdi
    976b:	e8 36 fa ff ff       	call   91a6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    9770:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    9774:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    9778:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    977c:	48 89 d6             	mov    %rdx,%rsi
    977f:	48 89 c7             	mov    %rax,%rdi
    9782:	e8 c1 02 00 00       	call   9a48 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    9787:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    978b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    978f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9793:	48 89 d6             	mov    %rdx,%rsi
    9796:	48 89 c7             	mov    %rax,%rdi
    9799:	e8 58 cd ff ff       	call   64f6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    979e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    97a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97a6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    97aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    97ae:	48 89 c7             	mov    %rax,%rdi
    97b1:	e8 1f ff ff ff       	call   96d5 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    97b6:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    97b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    97bd:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    97c4:	00 
	  _Alloc_traits::construct(this->_M_impl,
    97c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97c9:	48 01 c1             	add    %rax,%rcx
    97cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    97d0:	48 89 ce             	mov    %rcx,%rsi
    97d3:	48 89 c7             	mov    %rax,%rdi
    97d6:	e8 08 ff ff ff       	call   96e3 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
    97db:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    97e2:	00 
					 __new_start, _M_get_Tp_allocator());
    97e3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    97e7:	48 89 c7             	mov    %rax,%rdi
    97ea:	e8 a5 c3 ff ff       	call   5b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    97ef:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    97f2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    97f6:	48 89 c7             	mov    %rax,%rdi
    97f9:	e8 b0 fc ff ff       	call   94ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    97fe:	48 8b 30             	mov    (%rax),%rsi
    9801:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9805:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9809:	48 89 d9             	mov    %rbx,%rcx
    980c:	48 89 c7             	mov    %rax,%rdi
    980f:	e8 76 02 00 00       	call   9a8a <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    9814:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    9818:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    981d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9821:	48 89 c7             	mov    %rax,%rdi
    9824:	e8 6b c3 ff ff       	call   5b94 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9829:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    982c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9830:	48 89 c7             	mov    %rax,%rdi
    9833:	e8 76 fc ff ff       	call   94ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9838:	48 8b 00             	mov    (%rax),%rax
    983b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    983f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    9843:	48 89 d9             	mov    %rbx,%rcx
    9846:	48 89 c7             	mov    %rax,%rdi
    9849:	e8 3c 02 00 00       	call   9a8a <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    984e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    9852:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    9856:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    985a:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    985e:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    9862:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    9866:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    986a:	48 89 ce             	mov    %rcx,%rsi
    986d:	48 89 c7             	mov    %rax,%rdi
    9870:	e8 b3 cb ff ff       	call   6428 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    9875:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9879:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    987d:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    9880:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9884:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9888:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    988c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9890:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9897:	00 
    9898:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    989c:	48 01 c2             	add    %rax,%rdx
    989f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    98a3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    98a7:	90                   	nop
    98a8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98ac:	c9                   	leave
    98ad:	c3                   	ret

00000000000098ae <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    98ae:	55                   	push   %rbp
    98af:	48 89 e5             	mov    %rsp,%rbp
    98b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    98ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    98be:	5d                   	pop    %rbp
    98bf:	c3                   	ret

00000000000098c0 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    98c0:	55                   	push   %rbp
    98c1:	48 89 e5             	mov    %rsp,%rbp
    98c4:	48 83 ec 10          	sub    $0x10,%rsp
    98c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    98d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    98d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98d8:	48 89 d6             	mov    %rdx,%rsi
    98db:	48 89 c7             	mov    %rax,%rdi
    98de:	e8 13 cc ff ff       	call   64f6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    98e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    98e7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    98ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ee:	48 8b 10             	mov    (%rax),%rdx
    98f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    98f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98fd:	48 8b 00             	mov    (%rax),%rax
    9900:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9904:	48 c1 e2 03          	shl    $0x3,%rdx
    9908:	48 01 c2             	add    %rax,%rdx
    990b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    990f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9913:	90                   	nop
    9914:	c9                   	leave
    9915:	c3                   	ret

0000000000009916 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9916:	55                   	push   %rbp
    9917:	48 89 e5             	mov    %rsp,%rbp
    991a:	48 83 ec 20          	sub    $0x20,%rsp
    991e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9922:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9926:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    992a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    992e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9932:	48 89 d6             	mov    %rdx,%rsi
    9935:	48 89 c7             	mov    %rax,%rdi
    9938:	e8 00 02 00 00       	call   9b3d <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    993d:	c9                   	leave
    993e:	c3                   	ret
    993f:	90                   	nop

0000000000009940 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    9940:	55                   	push   %rbp
    9941:	48 89 e5             	mov    %rsp,%rbp
    9944:	53                   	push   %rbx
    9945:	48 83 ec 28          	sub    $0x28,%rsp
    9949:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    994d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9951:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    9955:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9959:	48 89 c6             	mov    %rax,%rsi
    995c:	bf 08 00 00 00       	mov    $0x8,%edi
    9961:	e8 43 b4 ff ff       	call   4da9 <_ZnwmPv>
    9966:	48 89 c3             	mov    %rax,%rbx
    9969:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    996d:	48 89 c7             	mov    %rax,%rdi
    9970:	e8 47 fb ff ff       	call   94bc <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9975:	48 89 03             	mov    %rax,(%rbx)
    9978:	90                   	nop
    9979:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    997d:	c9                   	leave
    997e:	c3                   	ret
    997f:	90                   	nop

0000000000009980 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    9980:	55                   	push   %rbp
    9981:	48 89 e5             	mov    %rsp,%rbp
    9984:	53                   	push   %rbx
    9985:	48 83 ec 38          	sub    $0x38,%rsp
    9989:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    998d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9991:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    9995:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9999:	48 89 c7             	mov    %rax,%rdi
    999c:	e8 c5 01 00 00       	call   9b66 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    99a1:	48 89 c3             	mov    %rax,%rbx
    99a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99a8:	48 89 c7             	mov    %rax,%rdi
    99ab:	e8 fa f9 ff ff       	call   93aa <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    99b0:	48 29 c3             	sub    %rax,%rbx
    99b3:	48 89 da             	mov    %rbx,%rdx
    99b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    99ba:	48 39 c2             	cmp    %rax,%rdx
    99bd:	0f 92 c0             	setb   %al
    99c0:	84 c0                	test   %al,%al
    99c2:	74 0c                	je     99d0 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    99c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    99c8:	48 89 c7             	mov    %rax,%rdi
    99cb:	e8 10 97 ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    99d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99d4:	48 89 c7             	mov    %rax,%rdi
    99d7:	e8 ce f9 ff ff       	call   93aa <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    99dc:	48 89 c3             	mov    %rax,%rbx
    99df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99e3:	48 89 c7             	mov    %rax,%rdi
    99e6:	e8 bf f9 ff ff       	call   93aa <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    99eb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    99ef:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    99f3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    99f7:	48 89 d6             	mov    %rdx,%rsi
    99fa:	48 89 c7             	mov    %rax,%rdi
    99fd:	e8 86 01 00 00       	call   9b88 <_ZSt3maxImERKT_S2_S2_>
    9a02:	48 8b 00             	mov    (%rax),%rax
    9a05:	48 01 d8             	add    %rbx,%rax
    9a08:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9a0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a10:	48 89 c7             	mov    %rax,%rdi
    9a13:	e8 92 f9 ff ff       	call   93aa <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    9a18:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    9a1c:	72 12                	jb     9a30 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    9a1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a22:	48 89 c7             	mov    %rax,%rdi
    9a25:	e8 3c 01 00 00       	call   9b66 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    9a2a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    9a2e:	73 0e                	jae    9a3e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    9a30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a34:	48 89 c7             	mov    %rax,%rdi
    9a37:	e8 2a 01 00 00       	call   9b66 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    9a3c:	eb 04                	jmp    9a42 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    9a3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    9a42:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a46:	c9                   	leave
    9a47:	c3                   	ret

0000000000009a48 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    9a48:	55                   	push   %rbp
    9a49:	48 89 e5             	mov    %rsp,%rbp
    9a4c:	53                   	push   %rbx
    9a4d:	48 83 ec 18          	sub    $0x18,%rsp
    9a51:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a55:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    9a59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a5d:	48 89 c7             	mov    %rax,%rdi
    9a60:	e8 49 fa ff ff       	call   94ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9a65:	48 8b 18             	mov    (%rax),%rbx
    9a68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9a6c:	48 89 c7             	mov    %rax,%rdi
    9a6f:	e8 3a fa ff ff       	call   94ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9a74:	48 8b 00             	mov    (%rax),%rax
    9a77:	48 89 da             	mov    %rbx,%rdx
    9a7a:	48 29 c2             	sub    %rax,%rdx
    9a7d:	48 89 d0             	mov    %rdx,%rax
    9a80:	48 c1 f8 03          	sar    $0x3,%rax
    9a84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a88:	c9                   	leave
    9a89:	c3                   	ret

0000000000009a8a <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    9a8a:	55                   	push   %rbp
    9a8b:	48 89 e5             	mov    %rsp,%rbp
    9a8e:	48 83 ec 20          	sub    $0x20,%rsp
    9a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    9a9e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    9aa2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9aa6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9aaa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    9aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab2:	48 89 c7             	mov    %rax,%rdi
    9ab5:	e8 f9 00 00 00       	call   9bb3 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    9aba:	c9                   	leave
    9abb:	c3                   	ret

0000000000009abc <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    9abc:	55                   	push   %rbp
    9abd:	48 89 e5             	mov    %rsp,%rbp
    9ac0:	48 83 ec 20          	sub    $0x20,%rsp
    9ac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9ac8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    9acc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ad0:	48 8b 00             	mov    (%rax),%rax
    9ad3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9ad7:	48 c1 e2 03          	shl    $0x3,%rdx
    9adb:	48 f7 da             	neg    %rdx
    9ade:	48 01 d0             	add    %rdx,%rax
    9ae1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9ae5:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    9ae9:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    9aed:	48 89 d6             	mov    %rdx,%rsi
    9af0:	48 89 c7             	mov    %rax,%rdi
    9af3:	e8 98 f9 ff ff       	call   9490 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9af8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9afc:	c9                   	leave
    9afd:	c3                   	ret

0000000000009afe <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    9afe:	55                   	push   %rbp
    9aff:	48 89 e5             	mov    %rsp,%rbp
    9b02:	53                   	push   %rbx
    9b03:	48 83 ec 28          	sub    $0x28,%rsp
    9b07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b0b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9b0f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    9b13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b17:	48 89 c6             	mov    %rax,%rsi
    9b1a:	bf 08 00 00 00       	mov    $0x8,%edi
    9b1f:	e8 85 b2 ff ff       	call   4da9 <_ZnwmPv>
    9b24:	48 89 c3             	mov    %rax,%rbx
    9b27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b2b:	48 89 c7             	mov    %rax,%rdi
    9b2e:	e8 a2 fb ff ff       	call   96d5 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9b33:	48 89 03             	mov    %rax,(%rbx)
    9b36:	90                   	nop
    9b37:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b3b:	c9                   	leave
    9b3c:	c3                   	ret

0000000000009b3d <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    9b3d:	55                   	push   %rbp
    9b3e:	48 89 e5             	mov    %rsp,%rbp
    9b41:	48 83 ec 20          	sub    $0x20,%rsp
    9b45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b49:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    9b4d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    9b51:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b59:	48 89 d6             	mov    %rdx,%rsi
    9b5c:	48 89 c7             	mov    %rax,%rdi
    9b5f:	e8 b2 00 00 00       	call   9c16 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    9b64:	c9                   	leave
    9b65:	c3                   	ret

0000000000009b66 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    9b66:	55                   	push   %rbp
    9b67:	48 89 e5             	mov    %rsp,%rbp
    9b6a:	48 83 ec 10          	sub    $0x10,%rsp
    9b6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    9b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b76:	48 89 c7             	mov    %rax,%rdi
    9b79:	e8 f6 00 00 00       	call   9c74 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9b7e:	48 89 c7             	mov    %rax,%rdi
    9b81:	e8 98 d5 ff ff       	call   711e <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    9b86:	c9                   	leave
    9b87:	c3                   	ret

0000000000009b88 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    9b88:	55                   	push   %rbp
    9b89:	48 89 e5             	mov    %rsp,%rbp
    9b8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    9b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b98:	48 8b 10             	mov    (%rax),%rdx
    9b9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b9f:	48 8b 00             	mov    (%rax),%rax
    9ba2:	48 39 c2             	cmp    %rax,%rdx
    9ba5:	73 06                	jae    9bad <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    9ba7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9bab:	eb 04                	jmp    9bb1 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    9bad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    9bb1:	5d                   	pop    %rbp
    9bb2:	c3                   	ret

0000000000009bb3 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    9bb3:	55                   	push   %rbp
    9bb4:	48 89 e5             	mov    %rsp,%rbp
    9bb7:	41 54                	push   %r12
    9bb9:	53                   	push   %rbx
    9bba:	48 83 ec 20          	sub    $0x20,%rsp
    9bbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9bc2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9bc6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9bca:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    9bce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bd2:	48 89 c7             	mov    %rax,%rdi
    9bd5:	e8 04 eb ff ff       	call   86de <_ZSt12__niter_baseIPPKcET_S3_>
    9bda:	49 89 c4             	mov    %rax,%r12
    9bdd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9be1:	48 89 c7             	mov    %rax,%rdi
    9be4:	e8 f5 ea ff ff       	call   86de <_ZSt12__niter_baseIPPKcET_S3_>
    9be9:	48 89 c3             	mov    %rax,%rbx
    9bec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bf0:	48 89 c7             	mov    %rax,%rdi
    9bf3:	e8 e6 ea ff ff       	call   86de <_ZSt12__niter_baseIPPKcET_S3_>
    9bf8:	48 89 c7             	mov    %rax,%rdi
    9bfb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9bff:	48 89 c1             	mov    %rax,%rcx
    9c02:	4c 89 e2             	mov    %r12,%rdx
    9c05:	48 89 de             	mov    %rbx,%rsi
    9c08:	e8 75 00 00 00       	call   9c82 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    9c0d:	48 83 c4 20          	add    $0x20,%rsp
    9c11:	5b                   	pop    %rbx
    9c12:	41 5c                	pop    %r12
    9c14:	5d                   	pop    %rbp
    9c15:	c3                   	ret

0000000000009c16 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9c16:	55                   	push   %rbp
    9c17:	48 89 e5             	mov    %rsp,%rbp
    9c1a:	48 83 ec 20          	sub    $0x20,%rsp
    9c1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c22:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9c26:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9c2b:	74 40                	je     9c6d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    9c2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c31:	48 89 c7             	mov    %rax,%rdi
    9c34:	e8 ac 00 00 00       	call   9ce5 <_ZSt11__addressofIPKcEPT_RS2_>
    9c39:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    9c3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c41:	48 89 c7             	mov    %rax,%rdi
    9c44:	e8 aa 00 00 00       	call   9cf3 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    9c49:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    9c4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c52:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    9c56:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9c5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c5e:	48 89 ce             	mov    %rcx,%rsi
    9c61:	48 89 c7             	mov    %rax,%rdi
    9c64:	e8 b1 00 00 00       	call   9d1a <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    9c69:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    9c6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    9c71:	c9                   	leave
    9c72:	c3                   	ret
    9c73:	90                   	nop

0000000000009c74 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    9c74:	55                   	push   %rbp
    9c75:	48 89 e5             	mov    %rsp,%rbp
    9c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c80:	5d                   	pop    %rbp
    9c81:	c3                   	ret

0000000000009c82 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    9c82:	55                   	push   %rbp
    9c83:	48 89 e5             	mov    %rsp,%rbp
    9c86:	48 83 ec 30          	sub    $0x30,%rsp
    9c8a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c8e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9c92:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9c96:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    9c9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c9e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    9ca2:	48 c1 f8 03          	sar    $0x3,%rax
    9ca6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    9caa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9caf:	7e 1f                	jle    9cd0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    9cb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cb5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9cbc:	00 
    9cbd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9cc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cc5:	48 89 ce             	mov    %rcx,%rsi
    9cc8:	48 89 c7             	mov    %rax,%rdi
    9ccb:	e8 c0 96 ff ff       	call   3390 <memmove@plt>
      return __result + __count;
    9cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9cdb:	00 
    9cdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ce0:	48 01 d0             	add    %rdx,%rax
    }
    9ce3:	c9                   	leave
    9ce4:	c3                   	ret

0000000000009ce5 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9ce5:	55                   	push   %rbp
    9ce6:	48 89 e5             	mov    %rsp,%rbp
    9ce9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9ced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cf1:	5d                   	pop    %rbp
    9cf2:	c3                   	ret

0000000000009cf3 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9cf3:	55                   	push   %rbp
    9cf4:	48 89 e5             	mov    %rsp,%rbp
    9cf7:	48 83 ec 10          	sub    $0x10,%rsp
    9cfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9cff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d03:	48 89 c6             	mov    %rax,%rsi
    9d06:	bf 08 00 00 00       	mov    $0x8,%edi
    9d0b:	e8 99 b0 ff ff       	call   4da9 <_ZnwmPv>
    9d10:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    9d17:	90                   	nop
    9d18:	c9                   	leave
    9d19:	c3                   	ret

0000000000009d1a <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9d1a:	55                   	push   %rbp
    9d1b:	48 89 e5             	mov    %rsp,%rbp
    9d1e:	48 83 ec 20          	sub    $0x20,%rsp
    9d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9d2e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9d32:	48 89 c7             	mov    %rax,%rdi
    9d35:	e8 24 00 00 00       	call   9d5e <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9d3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d3e:	48 89 c7             	mov    %rax,%rdi
    9d41:	e8 84 b0 ff ff       	call   4dca <_ZSt17__size_to_integerm>
    9d46:	48 89 c1             	mov    %rax,%rcx
    9d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9d51:	48 89 ce             	mov    %rcx,%rsi
    9d54:	48 89 c7             	mov    %rax,%rdi
    9d57:	e8 0d 00 00 00       	call   9d69 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    9d5c:	c9                   	leave
    9d5d:	c3                   	ret

0000000000009d5e <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    9d5e:	55                   	push   %rbp
    9d5f:	48 89 e5             	mov    %rsp,%rbp
    9d62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9d66:	90                   	nop
    9d67:	5d                   	pop    %rbp
    9d68:	c3                   	ret

0000000000009d69 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    9d69:	55                   	push   %rbp
    9d6a:	48 89 e5             	mov    %rsp,%rbp
    9d6d:	48 83 ec 20          	sub    $0x20,%rsp
    9d71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d79:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    9d7d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9d82:	75 06                	jne    9d8a <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    9d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d88:	eb 3a                	jmp    9dc4 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    9d8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d8e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9d95:	00 
    9d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d9a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9d9e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9da6:	48 89 ce             	mov    %rcx,%rsi
    9da9:	48 89 c7             	mov    %rax,%rdi
    9dac:	e8 15 00 00 00       	call   9dc6 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    9db1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9db5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9dbc:	00 
    9dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc1:	48 01 d0             	add    %rdx,%rax
    }
    9dc4:	c9                   	leave
    9dc5:	c3                   	ret

0000000000009dc6 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    9dc6:	55                   	push   %rbp
    9dc7:	48 89 e5             	mov    %rsp,%rbp
    9dca:	48 83 ec 20          	sub    $0x20,%rsp
    9dce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dd6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    9dda:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9dde:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de6:	48 89 ce             	mov    %rcx,%rsi
    9de9:	48 89 c7             	mov    %rax,%rdi
    9dec:	e8 03 00 00 00       	call   9df4 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    9df1:	90                   	nop
    9df2:	c9                   	leave
    9df3:	c3                   	ret

0000000000009df4 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    9df4:	55                   	push   %rbp
    9df5:	48 89 e5             	mov    %rsp,%rbp
    9df8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9dfc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9e00:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    9e04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e08:	48 8b 00             	mov    (%rax),%rax
    9e0b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    9e0f:	eb 10                	jmp    9e21 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    9e11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e15:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e19:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    9e1c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    9e21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e25:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    9e29:	75 e6                	jne    9e11 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    9e2b:	90                   	nop
    9e2c:	90                   	nop
    9e2d:	5d                   	pop    %rbp
    9e2e:	c3                   	ret
    9e2f:	90                   	nop

0000000000009e30 <_ZN4neko6WindowC1ERKNS_8SettingsE>:
#include "window.hpp"

namespace neko {

Window::Window(const Settings &settings)
    9e30:	55                   	push   %rbp
    9e31:	48 89 e5             	mov    %rsp,%rbp
    9e34:	53                   	push   %rbx
    9e35:	48 83 ec 18          	sub    $0x18,%rsp
    9e39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9e3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    : mWidth{settings.graphics.screenWidth},
      mHeight{settings.graphics.screenHeight} {
    9e41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e45:	48 89 c7             	mov    %rax,%rdi
    9e48:	e8 e3 98 ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    9e4d:	48 8d 15 1c 9e 00 00 	lea    0x9e1c(%rip),%rdx        # 13c70 <_ZTVN4neko6WindowE+0x10>
    9e54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e58:	48 89 10             	mov    %rdx,(%rax)
    : mWidth{settings.graphics.screenWidth},
    9e5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9e5f:	8b 50 50             	mov    0x50(%rax),%edx
    9e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e66:	89 50 10             	mov    %edx,0x10(%rax)
      mHeight{settings.graphics.screenHeight} {
    9e69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9e6d:	8b 50 54             	mov    0x54(%rax),%edx
    9e70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e74:	89 50 14             	mov    %edx,0x14(%rax)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    9e77:	be 00 00 00 00       	mov    $0x0,%esi
    9e7c:	bf 01 20 02 00       	mov    $0x22001,%edi
    9e81:	e8 4a 93 ff ff       	call   31d0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    9e86:	be 00 00 00 00       	mov    $0x0,%esi
    9e8b:	bf 03 00 02 00       	mov    $0x20003,%edi
    9e90:	e8 3b 93 ff ff       	call   31d0 <glfwWindowHint@plt>
  mWindow = glfwCreateWindow(mWidth, mHeight, settings.general.appName.c_str(),
    9e95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9e99:	48 89 c7             	mov    %rax,%rdi
    9e9c:	e8 0f 92 ff ff       	call   30b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    9ea1:	48 89 c2             	mov    %rax,%rdx
    9ea4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ea8:	8b 40 14             	mov    0x14(%rax),%eax
    9eab:	89 c6                	mov    %eax,%esi
    9ead:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9eb1:	8b 40 10             	mov    0x10(%rax),%eax
    9eb4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9eba:	b9 00 00 00 00       	mov    $0x0,%ecx
    9ebf:	89 c7                	mov    %eax,%edi
    9ec1:	e8 ba 94 ff ff       	call   3380 <glfwCreateWindow@plt>
    9ec6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9eca:	48 89 42 08          	mov    %rax,0x8(%rdx)
                             nullptr, nullptr);
}
    9ece:	eb 1a                	jmp    9eea <_ZN4neko6WindowC1ERKNS_8SettingsE+0xba>
    9ed0:	48 89 c3             	mov    %rax,%rbx
    9ed3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ed7:	48 89 c7             	mov    %rax,%rdi
    9eda:	e8 6b 98 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    9edf:	48 89 d8             	mov    %rbx,%rax
    9ee2:	48 89 c7             	mov    %rax,%rdi
    9ee5:	e8 e6 94 ff ff       	call   33d0 <_Unwind_Resume@plt>
    9eea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9eee:	c9                   	leave
    9eef:	c3                   	ret

0000000000009ef0 <_ZN4neko6WindowD1Ev>:

Window::~Window() { glfwDestroyWindow(mWindow); }
    9ef0:	55                   	push   %rbp
    9ef1:	48 89 e5             	mov    %rsp,%rbp
    9ef4:	48 83 ec 10          	sub    $0x10,%rsp
    9ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9efc:	48 8d 15 6d 9d 00 00 	lea    0x9d6d(%rip),%rdx        # 13c70 <_ZTVN4neko6WindowE+0x10>
    9f03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f07:	48 89 10             	mov    %rdx,(%rax)
    9f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f0e:	48 8b 40 08          	mov    0x8(%rax),%rax
    9f12:	48 89 c7             	mov    %rax,%rdi
    9f15:	e8 46 91 ff ff       	call   3060 <glfwDestroyWindow@plt>
    9f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f1e:	48 89 c7             	mov    %rax,%rdi
    9f21:	e8 24 98 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    9f26:	90                   	nop
    9f27:	c9                   	leave
    9f28:	c3                   	ret
    9f29:	90                   	nop

0000000000009f2a <_ZN4neko6WindowD0Ev>:
    9f2a:	55                   	push   %rbp
    9f2b:	48 89 e5             	mov    %rsp,%rbp
    9f2e:	48 83 ec 10          	sub    $0x10,%rsp
    9f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f3a:	48 89 c7             	mov    %rax,%rdi
    9f3d:	e8 ae ff ff ff       	call   9ef0 <_ZN4neko6WindowD1Ev>
    9f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f46:	be 18 00 00 00       	mov    $0x18,%esi
    9f4b:	48 89 c7             	mov    %rax,%rdi
    9f4e:	e8 dd 92 ff ff       	call   3230 <_ZdlPvm@plt>
    9f53:	c9                   	leave
    9f54:	c3                   	ret
    9f55:	90                   	nop

0000000000009f56 <_ZN4neko6Window4openEv>:

void Window::open() {
    9f56:	55                   	push   %rbp
    9f57:	48 89 e5             	mov    %rsp,%rbp
    9f5a:	48 83 ec 10          	sub    $0x10,%rsp
    9f5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(mWindow)) {
    9f62:	eb 05                	jmp    9f69 <_ZN4neko6Window4openEv+0x13>
    glfwPollEvents();
    9f64:	e8 97 92 ff ff       	call   3200 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(mWindow)) {
    9f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f6d:	48 8b 40 08          	mov    0x8(%rax),%rax
    9f71:	48 89 c7             	mov    %rax,%rdi
    9f74:	e8 87 94 ff ff       	call   3400 <glfwWindowShouldClose@plt>
    9f79:	85 c0                	test   %eax,%eax
    9f7b:	0f 94 c0             	sete   %al
    9f7e:	84 c0                	test   %al,%al
    9f80:	75 e2                	jne    9f64 <_ZN4neko6Window4openEv+0xe>
  }
}
    9f82:	90                   	nop
    9f83:	90                   	nop
    9f84:	c9                   	leave
    9f85:	c3                   	ret

0000000000009f86 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>:
#include "renderer/basic/instance/instance.hpp"
#include "renderer/basic/window/window.hpp"

namespace neko {

Surface::Surface(const Instance &crInstance, const Window &crWindow)
    9f86:	55                   	push   %rbp
    9f87:	48 89 e5             	mov    %rsp,%rbp
    9f8a:	41 54                	push   %r12
    9f8c:	53                   	push   %rbx
    9f8d:	48 83 ec 20          	sub    $0x20,%rsp
    9f91:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f95:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9f99:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    : mcrInstance{crInstance} {
    9f9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fa1:	48 89 c7             	mov    %rax,%rdi
    9fa4:	e8 87 97 ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    9fa9:	48 8d 15 e0 9c 00 00 	lea    0x9ce0(%rip),%rdx        # 13c90 <_ZTVN4neko7SurfaceE+0x10>
    9fb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fb4:	48 89 10             	mov    %rdx,(%rax)
    9fb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fbb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9fbf:	48 89 50 08          	mov    %rdx,0x8(%rax)
  if (glfwCreateWindowSurface(*crInstance, *crWindow, nullptr, &mSurface) !=
    9fc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fc7:	4c 8d 60 10          	lea    0x10(%rax),%r12
    9fcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9fcf:	48 89 c7             	mov    %rax,%rdi
    9fd2:	e8 23 01 00 00       	call   a0fa <_ZNK4neko6WindowdeEv>
    9fd7:	48 8b 18             	mov    (%rax),%rbx
    9fda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fde:	48 89 c7             	mov    %rax,%rdi
    9fe1:	e8 f2 ad ff ff       	call   4dd8 <_ZNK4neko8InstancedeEv>
    9fe6:	48 8b 00             	mov    (%rax),%rax
    9fe9:	4c 89 e1             	mov    %r12,%rcx
    9fec:	ba 00 00 00 00       	mov    $0x0,%edx
    9ff1:	48 89 de             	mov    %rbx,%rsi
    9ff4:	48 89 c7             	mov    %rax,%rdi
    9ff7:	e8 74 93 ff ff       	call   3370 <glfwCreateWindowSurface@plt>
    9ffc:	85 c0                	test   %eax,%eax
    9ffe:	0f 95 c0             	setne  %al
    a001:	84 c0                	test   %al,%al
    a003:	74 65                	je     a06a <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xe4>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    a005:	bf 10 00 00 00       	mov    $0x10,%edi
    a00a:	e8 c1 90 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    a00f:	48 89 c3             	mov    %rax,%rbx
    a012:	48 8d 05 5f 39 00 00 	lea    0x395f(%rip),%rax        # d978 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    a019:	48 89 c6             	mov    %rax,%rsi
    a01c:	48 89 df             	mov    %rbx,%rdi
    a01f:	e8 5c 90 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    a024:	48 8b 05 7d 9f 00 00 	mov    0x9f7d(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a02b:	48 89 c2             	mov    %rax,%rdx
    a02e:	48 8d 05 6b 9c 00 00 	lea    0x9c6b(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a035:	48 89 c6             	mov    %rax,%rsi
    a038:	48 89 df             	mov    %rbx,%rdi
    a03b:	e8 70 93 ff ff       	call   33b0 <__cxa_throw@plt>
    a040:	49 89 c4             	mov    %rax,%r12
    a043:	48 89 df             	mov    %rbx,%rdi
    a046:	e8 05 91 ff ff       	call   3150 <__cxa_free_exception@plt>
    a04b:	4c 89 e3             	mov    %r12,%rbx
    a04e:	eb 03                	jmp    a053 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xcd>
  }
}
    a050:	48 89 c3             	mov    %rax,%rbx
    a053:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a057:	48 89 c7             	mov    %rax,%rdi
    a05a:	e8 eb 96 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    a05f:	48 89 d8             	mov    %rbx,%rax
    a062:	48 89 c7             	mov    %rax,%rdi
    a065:	e8 66 93 ff ff       	call   33d0 <_Unwind_Resume@plt>
    a06a:	90                   	nop
    a06b:	48 83 c4 20          	add    $0x20,%rsp
    a06f:	5b                   	pop    %rbx
    a070:	41 5c                	pop    %r12
    a072:	5d                   	pop    %rbp
    a073:	c3                   	ret

000000000000a074 <_ZN4neko7SurfaceD1Ev>:

Surface::~Surface() { vkDestroySurfaceKHR(*mcrInstance, mSurface, nullptr); }
    a074:	55                   	push   %rbp
    a075:	48 89 e5             	mov    %rsp,%rbp
    a078:	53                   	push   %rbx
    a079:	48 83 ec 18          	sub    $0x18,%rsp
    a07d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a081:	48 8d 15 08 9c 00 00 	lea    0x9c08(%rip),%rdx        # 13c90 <_ZTVN4neko7SurfaceE+0x10>
    a088:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a08c:	48 89 10             	mov    %rdx,(%rax)
    a08f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a093:	48 8b 58 10          	mov    0x10(%rax),%rbx
    a097:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a09b:	48 8b 40 08          	mov    0x8(%rax),%rax
    a09f:	48 89 c7             	mov    %rax,%rdi
    a0a2:	e8 31 ad ff ff       	call   4dd8 <_ZNK4neko8InstancedeEv>
    a0a7:	48 8b 00             	mov    (%rax),%rax
    a0aa:	ba 00 00 00 00       	mov    $0x0,%edx
    a0af:	48 89 de             	mov    %rbx,%rsi
    a0b2:	48 89 c7             	mov    %rax,%rdi
    a0b5:	e8 06 93 ff ff       	call   33c0 <vkDestroySurfaceKHR@plt>
    a0ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0be:	48 89 c7             	mov    %rax,%rdi
    a0c1:	e8 84 96 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    a0c6:	90                   	nop
    a0c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a0cb:	c9                   	leave
    a0cc:	c3                   	ret
    a0cd:	90                   	nop

000000000000a0ce <_ZN4neko7SurfaceD0Ev>:
    a0ce:	55                   	push   %rbp
    a0cf:	48 89 e5             	mov    %rsp,%rbp
    a0d2:	48 83 ec 10          	sub    $0x10,%rsp
    a0d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0de:	48 89 c7             	mov    %rax,%rdi
    a0e1:	e8 8e ff ff ff       	call   a074 <_ZN4neko7SurfaceD1Ev>
    a0e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ea:	be 18 00 00 00       	mov    $0x18,%esi
    a0ef:	48 89 c7             	mov    %rax,%rdi
    a0f2:	e8 39 91 ff ff       	call   3230 <_ZdlPvm@plt>
    a0f7:	c9                   	leave
    a0f8:	c3                   	ret
    a0f9:	90                   	nop

000000000000a0fa <_ZNK4neko6WindowdeEv>:

  explicit Window(const Settings &settings);

  virtual ~Window();

  const GLWindow &operator*() const noexcept { return mWindow; }
    a0fa:	55                   	push   %rbp
    a0fb:	48 89 e5             	mov    %rsp,%rbp
    a0fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a106:	48 83 c0 08          	add    $0x8,%rax
    a10a:	5d                   	pop    %rbp
    a10b:	c3                   	ret

Disassembly of section .fini:

000000000000a10c <_fini>:
    a10c:	48 83 ec 08          	sub    $0x8,%rsp
    a110:	48 83 c4 08          	add    $0x8,%rsp
    a114:	c3                   	ret
