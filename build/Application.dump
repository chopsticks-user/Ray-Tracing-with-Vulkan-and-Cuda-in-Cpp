
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	48 83 ec 08          	sub    $0x8,%rsp
    5004:	48 8b 05 ad 3f 01 00 	mov    0x13fad(%rip),%rax        # 18fb8 <__gmon_start__@Base>
    500b:	48 85 c0             	test   %rax,%rax
    500e:	74 02                	je     5012 <_init+0x12>
    5010:	ff d0                	call   *%rax
    5012:	48 83 c4 08          	add    $0x8,%rsp
    5016:	c3                   	ret

Disassembly of section .plt:

0000000000005020 <_Znam@plt-0x10>:
    5020:	ff 35 ca 3f 01 00    	push   0x13fca(%rip)        # 18ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	ff 25 cc 3f 01 00    	jmp    *0x13fcc(%rip)        # 18ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005030 <_Znam@plt>:
    5030:	ff 25 ca 3f 01 00    	jmp    *0x13fca(%rip)        # 19000 <_Znam@GLIBCXX_3.4>
    5036:	68 00 00 00 00       	push   $0x0
    503b:	e9 e0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005040 <_ZNSaIcED2Ev@plt>:
    5040:	ff 25 c2 3f 01 00    	jmp    *0x13fc2(%rip)        # 19008 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    5046:	68 01 00 00 00       	push   $0x1
    504b:	e9 d0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005050 <glfwDestroyWindow@plt>:
    5050:	ff 25 ba 3f 01 00    	jmp    *0x13fba(%rip)        # 19010 <glfwDestroyWindow@Base>
    5056:	68 02 00 00 00       	push   $0x2
    505b:	e9 c0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005060 <_ZNSolsEPFRSt8ios_baseS0_E@plt>:
    5060:	ff 25 b2 3f 01 00    	jmp    *0x13fb2(%rip)        # 19018 <_ZNSolsEPFRSt8ios_baseS0_E@GLIBCXX_3.4>
    5066:	68 03 00 00 00       	push   $0x3
    506b:	e9 b0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005070 <_ZSt17__throw_bad_allocv@plt>:
    5070:	ff 25 aa 3f 01 00    	jmp    *0x13faa(%rip)        # 19020 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    5076:	68 04 00 00 00       	push   $0x4
    507b:	e9 a0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005080 <_ZNSt13runtime_errorC1EPKc@plt>:
    5080:	ff 25 a2 3f 01 00    	jmp    *0x13fa2(%rip)        # 19028 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    5086:	68 05 00 00 00       	push   $0x5
    508b:	e9 90 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005090 <__cxa_begin_catch@plt>:
    5090:	ff 25 9a 3f 01 00    	jmp    *0x13f9a(%rip)        # 19030 <__cxa_begin_catch@CXXABI_1.3>
    5096:	68 06 00 00 00       	push   $0x6
    509b:	e9 80 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050a0 <strlen@plt>:
    50a0:	ff 25 92 3f 01 00    	jmp    *0x13f92(%rip)        # 19038 <strlen@GLIBC_2.2.5>
    50a6:	68 07 00 00 00       	push   $0x7
    50ab:	e9 70 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050b0 <__cxa_allocate_exception@plt>:
    50b0:	ff 25 8a 3f 01 00    	jmp    *0x13f8a(%rip)        # 19040 <__cxa_allocate_exception@CXXABI_1.3>
    50b6:	68 08 00 00 00       	push   $0x8
    50bb:	e9 60 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050c0 <_ZSt20__throw_length_errorPKc@plt>:
    50c0:	ff 25 82 3f 01 00    	jmp    *0x13f82(%rip)        # 19048 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    50c6:	68 09 00 00 00       	push   $0x9
    50cb:	e9 50 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050d0 <__cxa_guard_release@plt>:
    50d0:	ff 25 7a 3f 01 00    	jmp    *0x13f7a(%rip)        # 19050 <__cxa_guard_release@CXXABI_1.3>
    50d6:	68 0a 00 00 00       	push   $0xa
    50db:	e9 40 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050e0 <__assert_fail@plt>:
    50e0:	ff 25 72 3f 01 00    	jmp    *0x13f72(%rip)        # 19058 <__assert_fail@GLIBC_2.2.5>
    50e6:	68 0b 00 00 00       	push   $0xb
    50eb:	e9 30 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    50f0:	ff 25 6a 3f 01 00    	jmp    *0x13f6a(%rip)        # 19060 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.26>
    50f6:	68 0c 00 00 00       	push   $0xc
    50fb:	e9 20 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005100 <_ZSt19__throw_logic_errorPKc@plt>:
    5100:	ff 25 62 3f 01 00    	jmp    *0x13f62(%rip)        # 19068 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    5106:	68 0d 00 00 00       	push   $0xd
    510b:	e9 10 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005110 <__cxa_free_exception@plt>:
    5110:	ff 25 5a 3f 01 00    	jmp    *0x13f5a(%rip)        # 19070 <__cxa_free_exception@CXXABI_1.3>
    5116:	68 0e 00 00 00       	push   $0xe
    511b:	e9 00 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005120 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>:
    5120:	ff 25 52 3f 01 00    	jmp    *0x13f52(%rip)        # 19078 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    5126:	68 0f 00 00 00       	push   $0xf
    512b:	e9 f0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005130 <glfwGetRequiredInstanceExtensions@plt>:
    5130:	ff 25 4a 3f 01 00    	jmp    *0x13f4a(%rip)        # 19080 <glfwGetRequiredInstanceExtensions@Base>
    5136:	68 10 00 00 00       	push   $0x10
    513b:	e9 e0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005140 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    5140:	ff 25 42 3f 01 00    	jmp    *0x13f42(%rip)        # 19088 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    5146:	68 11 00 00 00       	push   $0x11
    514b:	e9 d0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005150 <dlclose@plt>:
    5150:	ff 25 3a 3f 01 00    	jmp    *0x13f3a(%rip)        # 19090 <dlclose@GLIBC_2.34>
    5156:	68 12 00 00 00       	push   $0x12
    515b:	e9 c0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005160 <memcpy@plt>:
    5160:	ff 25 32 3f 01 00    	jmp    *0x13f32(%rip)        # 19098 <memcpy@GLIBC_2.14>
    5166:	68 13 00 00 00       	push   $0x13
    516b:	e9 b0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005170 <glfwWindowHint@plt>:
    5170:	ff 25 2a 3f 01 00    	jmp    *0x13f2a(%rip)        # 190a0 <glfwWindowHint@Base>
    5176:	68 14 00 00 00       	push   $0x14
    517b:	e9 a0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005180 <_ZNSt12system_errorD2Ev@plt>:
    5180:	ff 25 22 3f 01 00    	jmp    *0x13f22(%rip)        # 190a8 <_ZNSt12system_errorD2Ev@GLIBCXX_3.4.11>
    5186:	68 15 00 00 00       	push   $0x15
    518b:	e9 90 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005190 <__cxa_atexit@plt>:
    5190:	ff 25 1a 3f 01 00    	jmp    *0x13f1a(%rip)        # 190b0 <__cxa_atexit@GLIBC_2.2.5>
    5196:	68 16 00 00 00       	push   $0x16
    519b:	e9 80 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051a0 <dlsym@plt>:
    51a0:	ff 25 12 3f 01 00    	jmp    *0x13f12(%rip)        # 190b8 <dlsym@GLIBC_2.34>
    51a6:	68 17 00 00 00       	push   $0x17
    51ab:	e9 70 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051b0 <_ZdlPv@plt>:
    51b0:	ff 25 0a 3f 01 00    	jmp    *0x13f0a(%rip)        # 190c0 <_ZdlPv@GLIBCXX_3.4>
    51b6:	68 18 00 00 00       	push   $0x18
    51bb:	e9 60 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051c0 <glfwPollEvents@plt>:
    51c0:	ff 25 02 3f 01 00    	jmp    *0x13f02(%rip)        # 190c8 <glfwPollEvents@Base>
    51c6:	68 19 00 00 00       	push   $0x19
    51cb:	e9 50 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051d0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    51d0:	ff 25 fa 3e 01 00    	jmp    *0x13efa(%rip)        # 190d0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    51d6:	68 1a 00 00 00       	push   $0x1a
    51db:	e9 40 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051e0 <_Znwm@plt>:
    51e0:	ff 25 f2 3e 01 00    	jmp    *0x13ef2(%rip)        # 190d8 <_Znwm@GLIBCXX_3.4>
    51e6:	68 1b 00 00 00       	push   $0x1b
    51eb:	e9 30 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051f0 <_ZdlPvm@plt>:
    51f0:	ff 25 ea 3e 01 00    	jmp    *0x13eea(%rip)        # 190e0 <_ZdlPvm@CXXABI_1.3.9>
    51f6:	68 1c 00 00 00       	push   $0x1c
    51fb:	e9 20 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005200 <glfwTerminate@plt>:
    5200:	ff 25 e2 3e 01 00    	jmp    *0x13ee2(%rip)        # 190e8 <glfwTerminate@Base>
    5206:	68 1d 00 00 00       	push   $0x1d
    520b:	e9 10 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005210 <_ZNSolsEPFRSoS_E@plt>:
    5210:	ff 25 da 3e 01 00    	jmp    *0x13eda(%rip)        # 190f0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    5216:	68 1e 00 00 00       	push   $0x1e
    521b:	e9 00 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005220 <_ZNSaIcED1Ev@plt>:
    5220:	ff 25 d2 3e 01 00    	jmp    *0x13ed2(%rip)        # 190f8 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    5226:	68 1f 00 00 00       	push   $0x1f
    522b:	e9 f0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005230 <glfwInit@plt>:
    5230:	ff 25 ca 3e 01 00    	jmp    *0x13eca(%rip)        # 19100 <glfwInit@Base>
    5236:	68 20 00 00 00       	push   $0x20
    523b:	e9 e0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005240 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    5240:	ff 25 c2 3e 01 00    	jmp    *0x13ec2(%rip)        # 19108 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    5246:	68 21 00 00 00       	push   $0x21
    524b:	e9 d0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005250 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    5250:	ff 25 ba 3e 01 00    	jmp    *0x13eba(%rip)        # 19110 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    5256:	68 22 00 00 00       	push   $0x22
    525b:	e9 c0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005260 <_ZdaPv@plt>:
    5260:	ff 25 b2 3e 01 00    	jmp    *0x13eb2(%rip)        # 19118 <_ZdaPv@GLIBCXX_3.4>
    5266:	68 23 00 00 00       	push   $0x23
    526b:	e9 b0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005270 <_ZNSolsEj@plt>:
    5270:	ff 25 aa 3e 01 00    	jmp    *0x13eaa(%rip)        # 19120 <_ZNSolsEj@GLIBCXX_3.4>
    5276:	68 24 00 00 00       	push   $0x24
    527b:	e9 a0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005280 <_ZNKSt13runtime_error4whatEv@plt>:
    5280:	ff 25 a2 3e 01 00    	jmp    *0x13ea2(%rip)        # 19128 <_ZNKSt13runtime_error4whatEv@GLIBCXX_3.4>
    5286:	68 25 00 00 00       	push   $0x25
    528b:	e9 90 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005290 <dlopen@plt>:
    5290:	ff 25 9a 3e 01 00    	jmp    *0x13e9a(%rip)        # 19130 <dlopen@GLIBC_2.34>
    5296:	68 26 00 00 00       	push   $0x26
    529b:	e9 80 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052a0 <_ZNSaIcEC2ERKS_@plt>:
    52a0:	ff 25 92 3e 01 00    	jmp    *0x13e92(%rip)        # 19138 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    52a6:	68 27 00 00 00       	push   $0x27
    52ab:	e9 70 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052b0 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    52b0:	ff 25 8a 3e 01 00    	jmp    *0x13e8a(%rip)        # 19140 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
    52b6:	68 28 00 00 00       	push   $0x28
    52bb:	e9 60 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052c0 <_ZNSt8ios_base4InitC1Ev@plt>:
    52c0:	ff 25 82 3e 01 00    	jmp    *0x13e82(%rip)        # 19148 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    52c6:	68 29 00 00 00       	push   $0x29
    52cb:	e9 50 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052d0 <glfwCreateWindow@plt>:
    52d0:	ff 25 7a 3e 01 00    	jmp    *0x13e7a(%rip)        # 19150 <glfwCreateWindow@Base>
    52d6:	68 2a 00 00 00       	push   $0x2a
    52db:	e9 40 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052e0 <memmove@plt>:
    52e0:	ff 25 72 3e 01 00    	jmp    *0x13e72(%rip)        # 19158 <memmove@GLIBC_2.2.5>
    52e6:	68 2b 00 00 00       	push   $0x2b
    52eb:	e9 30 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052f0 <__cxa_end_catch@plt>:
    52f0:	ff 25 6a 3e 01 00    	jmp    *0x13e6a(%rip)        # 19160 <__cxa_end_catch@CXXABI_1.3>
    52f6:	68 2c 00 00 00       	push   $0x2c
    52fb:	e9 20 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005300 <__cxa_throw@plt>:
    5300:	ff 25 62 3e 01 00    	jmp    *0x13e62(%rip)        # 19168 <__cxa_throw@CXXABI_1.3>
    5306:	68 2d 00 00 00       	push   $0x2d
    530b:	e9 10 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005310 <_ZNSt3_V214error_categoryD2Ev@plt>:
    5310:	ff 25 5a 3e 01 00    	jmp    *0x13e5a(%rip)        # 19170 <_ZNSt3_V214error_categoryD2Ev@GLIBCXX_3.4.21>
    5316:	68 2e 00 00 00       	push   $0x2e
    531b:	e9 00 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005320 <_Unwind_Resume@plt>:
    5320:	ff 25 52 3e 01 00    	jmp    *0x13e52(%rip)        # 19178 <_Unwind_Resume@GCC_3.0>
    5326:	68 2f 00 00 00       	push   $0x2f
    532b:	e9 f0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005330 <_ZNSaIcEC1Ev@plt>:
    5330:	ff 25 4a 3e 01 00    	jmp    *0x13e4a(%rip)        # 19180 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    5336:	68 30 00 00 00       	push   $0x30
    533b:	e9 e0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005340 <__cxa_guard_acquire@plt>:
    5340:	ff 25 42 3e 01 00    	jmp    *0x13e42(%rip)        # 19188 <__cxa_guard_acquire@CXXABI_1.3>
    5346:	68 31 00 00 00       	push   $0x31
    534b:	e9 d0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005350 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>:
    5350:	ff 25 3a 3e 01 00    	jmp    *0x13e3a(%rip)        # 19190 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@GLIBCXX_3.4.29>
    5356:	68 32 00 00 00       	push   $0x32
    535b:	e9 c0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005360 <glfwWindowShouldClose@plt>:
    5360:	ff 25 32 3e 01 00    	jmp    *0x13e32(%rip)        # 19198 <glfwWindowShouldClose@Base>
    5366:	68 33 00 00 00       	push   $0x33
    536b:	e9 b0 fc ff ff       	jmp    5020 <_init+0x20>

Disassembly of section .plt.got:

0000000000005370 <__cxa_finalize@plt>:
    5370:	ff 25 1a 3c 01 00    	jmp    *0x13c1a(%rip)        # 18f90 <__cxa_finalize@GLIBC_2.2.5>
    5376:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000005380 <_start>:
    5380:	31 ed                	xor    %ebp,%ebp
    5382:	49 89 d1             	mov    %rdx,%r9
    5385:	5e                   	pop    %rsi
    5386:	48 89 e2             	mov    %rsp,%rdx
    5389:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    538d:	50                   	push   %rax
    538e:	54                   	push   %rsp
    538f:	45 31 c0             	xor    %r8d,%r8d
    5392:	31 c9                	xor    %ecx,%ecx
    5394:	48 8d 3d c3 0b 00 00 	lea    0xbc3(%rip),%rdi        # 5f5e <main>
    539b:	ff 15 ff 3b 01 00    	call   *0x13bff(%rip)        # 18fa0 <__libc_start_main@GLIBC_2.34>
    53a1:	f4                   	hlt
    53a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    53a9:	00 00 00 
    53ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000053b0 <deregister_tm_clones>:
    53b0:	48 8d 3d 19 3e 01 00 	lea    0x13e19(%rip),%rdi        # 191d0 <__TMC_END__>
    53b7:	48 8d 05 12 3e 01 00 	lea    0x13e12(%rip),%rax        # 191d0 <__TMC_END__>
    53be:	48 39 f8             	cmp    %rdi,%rax
    53c1:	74 15                	je     53d8 <deregister_tm_clones+0x28>
    53c3:	48 8b 05 e6 3b 01 00 	mov    0x13be6(%rip),%rax        # 18fb0 <_ITM_deregisterTMCloneTable@Base>
    53ca:	48 85 c0             	test   %rax,%rax
    53cd:	74 09                	je     53d8 <deregister_tm_clones+0x28>
    53cf:	ff e0                	jmp    *%rax
    53d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    53d8:	c3                   	ret
    53d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000053e0 <register_tm_clones>:
    53e0:	48 8d 3d e9 3d 01 00 	lea    0x13de9(%rip),%rdi        # 191d0 <__TMC_END__>
    53e7:	48 8d 35 e2 3d 01 00 	lea    0x13de2(%rip),%rsi        # 191d0 <__TMC_END__>
    53ee:	48 29 fe             	sub    %rdi,%rsi
    53f1:	48 89 f0             	mov    %rsi,%rax
    53f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    53f8:	48 c1 f8 03          	sar    $0x3,%rax
    53fc:	48 01 c6             	add    %rax,%rsi
    53ff:	48 d1 fe             	sar    %rsi
    5402:	74 14                	je     5418 <register_tm_clones+0x38>
    5404:	48 8b 05 b5 3b 01 00 	mov    0x13bb5(%rip),%rax        # 18fc0 <_ITM_registerTMCloneTable@Base>
    540b:	48 85 c0             	test   %rax,%rax
    540e:	74 08                	je     5418 <register_tm_clones+0x38>
    5410:	ff e0                	jmp    *%rax
    5412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5418:	c3                   	ret
    5419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005420 <__do_global_dtors_aux>:
    5420:	f3 0f 1e fa          	endbr64
    5424:	80 3d c5 3e 01 00 00 	cmpb   $0x0,0x13ec5(%rip)        # 192f0 <completed.0>
    542b:	75 2b                	jne    5458 <__do_global_dtors_aux+0x38>
    542d:	55                   	push   %rbp
    542e:	48 83 3d 5a 3b 01 00 	cmpq   $0x0,0x13b5a(%rip)        # 18f90 <__cxa_finalize@GLIBC_2.2.5>
    5435:	00 
    5436:	48 89 e5             	mov    %rsp,%rbp
    5439:	74 0c                	je     5447 <__do_global_dtors_aux+0x27>
    543b:	48 8b 3d 66 3d 01 00 	mov    0x13d66(%rip),%rdi        # 191a8 <__dso_handle>
    5442:	e8 29 ff ff ff       	call   5370 <__cxa_finalize@plt>
    5447:	e8 64 ff ff ff       	call   53b0 <deregister_tm_clones>
    544c:	c6 05 9d 3e 01 00 01 	movb   $0x1,0x13e9d(%rip)        # 192f0 <completed.0>
    5453:	5d                   	pop    %rbp
    5454:	c3                   	ret
    5455:	0f 1f 00             	nopl   (%rax)
    5458:	c3                   	ret
    5459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005460 <frame_dummy>:
    5460:	f3 0f 1e fa          	endbr64
    5464:	e9 77 ff ff ff       	jmp    53e0 <register_tm_clones>

0000000000005469 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
  };

  namespace
  {
    [[noreturn]] void throwResultException( Result result, char const * message )
    {
    5469:	55                   	push   %rbp
    546a:	48 89 e5             	mov    %rsp,%rbp
    546d:	41 54                	push   %r12
    546f:	53                   	push   %rbx
    5470:	48 83 ec 30          	sub    $0x30,%rsp
    5474:	89 7d cc             	mov    %edi,-0x34(%rbp)
    5477:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    547b:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    547f:	0f 89 28 07 00 00    	jns    5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5485:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    5489:	0f 8d 3d 01 00 00    	jge    55cc <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    548f:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    5496:	0f 84 19 05 00 00    	je     59b5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    549c:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    54a3:	0f 8f 04 07 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54a9:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    54b0:	0f 84 37 05 00 00    	je     59ed <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    54b6:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    54bd:	0f 8f ea 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54c3:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    54ca:	0f 84 55 05 00 00    	je     5a25 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    54d0:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    54d7:	0f 8f d0 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54dd:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    54e4:	0f 84 73 05 00 00    	je     5a5d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    54ea:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    54f1:	0f 8f b6 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54f7:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    54fe:	0f 84 91 05 00 00    	je     5a95 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    5504:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    550b:	0f 8f 9c 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5511:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    5518:	0f 84 af 05 00 00    	je     5acd <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    551e:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    5525:	0f 8f 82 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    552b:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    5532:	0f 84 9d 03 00 00    	je     58d5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    5538:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    553f:	0f 8f 68 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5545:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    554c:	0f 84 bb 03 00 00    	je     590d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    5552:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    5559:	0f 8f 4e 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    555f:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    5566:	0f 84 99 05 00 00    	je     5b05 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    556c:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    5573:	0f 8f 34 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5579:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    5580:	0f 84 bf 03 00 00    	je     5945 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    5586:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    558d:	0f 8f 1a 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5593:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    559a:	0f 84 9d 05 00 00    	je     5b3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    55a0:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    55a7:	0f 8f 00 06 00 00    	jg     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55ad:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    55b4:	0f 84 bb 05 00 00    	je     5b75 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    55ba:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    55c1:	0f 84 b6 03 00 00    	je     597d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    55c7:	e9 e1 05 00 00       	jmp    5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55cc:	8b 45 cc             	mov    -0x34(%rbp),%eax
    55cf:	83 c0 0d             	add    $0xd,%eax
    55d2:	83 f8 0c             	cmp    $0xc,%eax
    55d5:	0f 87 d2 05 00 00    	ja     5bad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55db:	89 c0                	mov    %eax,%eax
    55dd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    55e4:	00 
    55e5:	48 8d 05 f4 b3 00 00 	lea    0xb3f4(%rip),%rax        # 109e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    55ec:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    55ef:	48 98                	cltq
    55f1:	48 8d 15 e8 b3 00 00 	lea    0xb3e8(%rip),%rdx        # 109e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    55f8:	48 01 d0             	add    %rdx,%rax
    55fb:	ff e0                	jmp    *%rax
      {
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    55fd:	bf 28 00 00 00       	mov    $0x28,%edi
    5602:	e8 a9 fa ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5607:	48 89 c3             	mov    %rax,%rbx
    560a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    560e:	48 89 c6             	mov    %rax,%rsi
    5611:	48 89 df             	mov    %rbx,%rdi
    5614:	e8 1d 23 00 00       	call   7936 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    5619:	48 8d 05 8a 65 00 00 	lea    0x658a(%rip),%rax        # bbaa <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    5620:	48 89 c2             	mov    %rax,%rdx
    5623:	48 8d 05 de 36 01 00 	lea    0x136de(%rip),%rax        # 18d08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    562a:	48 89 c6             	mov    %rax,%rsi
    562d:	48 89 df             	mov    %rbx,%rdi
    5630:	e8 cb fc ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    5635:	bf 28 00 00 00       	mov    $0x28,%edi
    563a:	e8 71 fa ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    563f:	48 89 c3             	mov    %rax,%rbx
    5642:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5646:	48 89 c6             	mov    %rax,%rsi
    5649:	48 89 df             	mov    %rbx,%rdi
    564c:	e8 b7 23 00 00       	call   7a08 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    5651:	48 8d 05 e2 64 00 00 	lea    0x64e2(%rip),%rax        # bb3a <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    5658:	48 89 c2             	mov    %rax,%rdx
    565b:	48 8d 05 8e 36 01 00 	lea    0x1368e(%rip),%rax        # 18cf0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5662:	48 89 c6             	mov    %rax,%rsi
    5665:	48 89 df             	mov    %rbx,%rdi
    5668:	e8 93 fc ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    566d:	bf 28 00 00 00       	mov    $0x28,%edi
    5672:	e8 39 fa ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5677:	48 89 c3             	mov    %rax,%rbx
    567a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    567e:	48 89 c6             	mov    %rax,%rsi
    5681:	48 89 df             	mov    %rbx,%rdi
    5684:	e8 51 24 00 00       	call   7ada <_ZN2vk25InitializationFailedErrorC1EPKc>
    5689:	48 8d 05 3a 64 00 00 	lea    0x643a(%rip),%rax        # baca <_ZN2vk25InitializationFailedErrorD1Ev>
    5690:	48 89 c2             	mov    %rax,%rdx
    5693:	48 8d 05 3e 36 01 00 	lea    0x1363e(%rip),%rax        # 18cd8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    569a:	48 89 c6             	mov    %rax,%rsi
    569d:	48 89 df             	mov    %rbx,%rdi
    56a0:	e8 5b fc ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    56a5:	bf 28 00 00 00       	mov    $0x28,%edi
    56aa:	e8 01 fa ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    56af:	48 89 c3             	mov    %rax,%rbx
    56b2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56b6:	48 89 c6             	mov    %rax,%rsi
    56b9:	48 89 df             	mov    %rbx,%rdi
    56bc:	e8 eb 24 00 00       	call   7bac <_ZN2vk15DeviceLostErrorC1EPKc>
    56c1:	48 8d 05 92 63 00 00 	lea    0x6392(%rip),%rax        # ba5a <_ZN2vk15DeviceLostErrorD1Ev>
    56c8:	48 89 c2             	mov    %rax,%rdx
    56cb:	48 8d 05 ee 35 01 00 	lea    0x135ee(%rip),%rax        # 18cc0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    56d2:	48 89 c6             	mov    %rax,%rsi
    56d5:	48 89 df             	mov    %rbx,%rdi
    56d8:	e8 23 fc ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    56dd:	bf 28 00 00 00       	mov    $0x28,%edi
    56e2:	e8 c9 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    56e7:	48 89 c3             	mov    %rax,%rbx
    56ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56ee:	48 89 c6             	mov    %rax,%rsi
    56f1:	48 89 df             	mov    %rbx,%rdi
    56f4:	e8 85 25 00 00       	call   7c7e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    56f9:	48 8d 05 ea 62 00 00 	lea    0x62ea(%rip),%rax        # b9ea <_ZN2vk20MemoryMapFailedErrorD1Ev>
    5700:	48 89 c2             	mov    %rax,%rdx
    5703:	48 8d 05 9e 35 01 00 	lea    0x1359e(%rip),%rax        # 18ca8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    570a:	48 89 c6             	mov    %rax,%rsi
    570d:	48 89 df             	mov    %rbx,%rdi
    5710:	e8 eb fb ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    5715:	bf 28 00 00 00       	mov    $0x28,%edi
    571a:	e8 91 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    571f:	48 89 c3             	mov    %rax,%rbx
    5722:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5726:	48 89 c6             	mov    %rax,%rsi
    5729:	48 89 df             	mov    %rbx,%rdi
    572c:	e8 1f 26 00 00       	call   7d50 <_ZN2vk20LayerNotPresentErrorC1EPKc>
    5731:	48 8d 05 42 62 00 00 	lea    0x6242(%rip),%rax        # b97a <_ZN2vk20LayerNotPresentErrorD1Ev>
    5738:	48 89 c2             	mov    %rax,%rdx
    573b:	48 8d 05 4e 35 01 00 	lea    0x1354e(%rip),%rax        # 18c90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5742:	48 89 c6             	mov    %rax,%rsi
    5745:	48 89 df             	mov    %rbx,%rdi
    5748:	e8 b3 fb ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    574d:	bf 28 00 00 00       	mov    $0x28,%edi
    5752:	e8 59 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5757:	48 89 c3             	mov    %rax,%rbx
    575a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    575e:	48 89 c6             	mov    %rax,%rsi
    5761:	48 89 df             	mov    %rbx,%rdi
    5764:	e8 b9 26 00 00       	call   7e22 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    5769:	48 8d 05 9a 61 00 00 	lea    0x619a(%rip),%rax        # b90a <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    5770:	48 89 c2             	mov    %rax,%rdx
    5773:	48 8d 05 fe 34 01 00 	lea    0x134fe(%rip),%rax        # 18c78 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    577a:	48 89 c6             	mov    %rax,%rsi
    577d:	48 89 df             	mov    %rbx,%rdi
    5780:	e8 7b fb ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    5785:	bf 28 00 00 00       	mov    $0x28,%edi
    578a:	e8 21 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    578f:	48 89 c3             	mov    %rax,%rbx
    5792:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5796:	48 89 c6             	mov    %rax,%rsi
    5799:	48 89 df             	mov    %rbx,%rdi
    579c:	e8 53 27 00 00       	call   7ef4 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    57a1:	48 8d 05 f2 60 00 00 	lea    0x60f2(%rip),%rax        # b89a <_ZN2vk22FeatureNotPresentErrorD1Ev>
    57a8:	48 89 c2             	mov    %rax,%rdx
    57ab:	48 8d 05 ae 34 01 00 	lea    0x134ae(%rip),%rax        # 18c60 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    57b2:	48 89 c6             	mov    %rax,%rsi
    57b5:	48 89 df             	mov    %rbx,%rdi
    57b8:	e8 43 fb ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    57bd:	bf 28 00 00 00       	mov    $0x28,%edi
    57c2:	e8 e9 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    57c7:	48 89 c3             	mov    %rax,%rbx
    57ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    57ce:	48 89 c6             	mov    %rax,%rsi
    57d1:	48 89 df             	mov    %rbx,%rdi
    57d4:	e8 ed 27 00 00       	call   7fc6 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    57d9:	48 8d 05 4a 60 00 00 	lea    0x604a(%rip),%rax        # b82a <_ZN2vk23IncompatibleDriverErrorD1Ev>
    57e0:	48 89 c2             	mov    %rax,%rdx
    57e3:	48 8d 05 5e 34 01 00 	lea    0x1345e(%rip),%rax        # 18c48 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    57ea:	48 89 c6             	mov    %rax,%rsi
    57ed:	48 89 df             	mov    %rbx,%rdi
    57f0:	e8 0b fb ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    57f5:	bf 28 00 00 00       	mov    $0x28,%edi
    57fa:	e8 b1 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    57ff:	48 89 c3             	mov    %rax,%rbx
    5802:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5806:	48 89 c6             	mov    %rax,%rsi
    5809:	48 89 df             	mov    %rbx,%rdi
    580c:	e8 87 28 00 00       	call   8098 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    5811:	48 8d 05 a2 5f 00 00 	lea    0x5fa2(%rip),%rax        # b7ba <_ZN2vk19TooManyObjectsErrorD1Ev>
    5818:	48 89 c2             	mov    %rax,%rdx
    581b:	48 8d 05 0e 34 01 00 	lea    0x1340e(%rip),%rax        # 18c30 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5822:	48 89 c6             	mov    %rax,%rsi
    5825:	48 89 df             	mov    %rbx,%rdi
    5828:	e8 d3 fa ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    582d:	bf 28 00 00 00       	mov    $0x28,%edi
    5832:	e8 79 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5837:	48 89 c3             	mov    %rax,%rbx
    583a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    583e:	48 89 c6             	mov    %rax,%rsi
    5841:	48 89 df             	mov    %rbx,%rdi
    5844:	e8 21 29 00 00       	call   816a <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    5849:	48 8d 05 fa 5e 00 00 	lea    0x5efa(%rip),%rax        # b74a <_ZN2vk23FormatNotSupportedErrorD1Ev>
    5850:	48 89 c2             	mov    %rax,%rdx
    5853:	48 8d 05 be 33 01 00 	lea    0x133be(%rip),%rax        # 18c18 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    585a:	48 89 c6             	mov    %rax,%rsi
    585d:	48 89 df             	mov    %rbx,%rdi
    5860:	e8 9b fa ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    5865:	bf 28 00 00 00       	mov    $0x28,%edi
    586a:	e8 41 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    586f:	48 89 c3             	mov    %rax,%rbx
    5872:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5876:	48 89 c6             	mov    %rax,%rsi
    5879:	48 89 df             	mov    %rbx,%rdi
    587c:	e8 bb 29 00 00       	call   823c <_ZN2vk19FragmentedPoolErrorC1EPKc>
    5881:	48 8d 05 52 5e 00 00 	lea    0x5e52(%rip),%rax        # b6da <_ZN2vk19FragmentedPoolErrorD1Ev>
    5888:	48 89 c2             	mov    %rax,%rdx
    588b:	48 8d 05 6e 33 01 00 	lea    0x1336e(%rip),%rax        # 18c00 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5892:	48 89 c6             	mov    %rax,%rsi
    5895:	48 89 df             	mov    %rbx,%rdi
    5898:	e8 63 fa ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    589d:	bf 28 00 00 00       	mov    $0x28,%edi
    58a2:	e8 09 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    58a7:	48 89 c3             	mov    %rax,%rbx
    58aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    58ae:	48 89 c6             	mov    %rax,%rsi
    58b1:	48 89 df             	mov    %rbx,%rdi
    58b4:	e8 55 2a 00 00       	call   830e <_ZN2vk12UnknownErrorC1EPKc>
    58b9:	48 8d 05 aa 5d 00 00 	lea    0x5daa(%rip),%rax        # b66a <_ZN2vk12UnknownErrorD1Ev>
    58c0:	48 89 c2             	mov    %rax,%rdx
    58c3:	48 8d 05 1e 33 01 00 	lea    0x1331e(%rip),%rax        # 18be8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    58ca:	48 89 c6             	mov    %rax,%rsi
    58cd:	48 89 df             	mov    %rbx,%rdi
    58d0:	e8 2b fa ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    58d5:	bf 28 00 00 00       	mov    $0x28,%edi
    58da:	e8 d1 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    58df:	48 89 c3             	mov    %rax,%rbx
    58e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    58e6:	48 89 c6             	mov    %rax,%rsi
    58e9:	48 89 df             	mov    %rbx,%rdi
    58ec:	e8 ef 2a 00 00       	call   83e0 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    58f1:	48 8d 05 02 5d 00 00 	lea    0x5d02(%rip),%rax        # b5fa <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    58f8:	48 89 c2             	mov    %rax,%rdx
    58fb:	48 8d 05 ce 32 01 00 	lea    0x132ce(%rip),%rax        # 18bd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5902:	48 89 c6             	mov    %rax,%rsi
    5905:	48 89 df             	mov    %rbx,%rdi
    5908:	e8 f3 f9 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    590d:	bf 28 00 00 00       	mov    $0x28,%edi
    5912:	e8 99 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5917:	48 89 c3             	mov    %rax,%rbx
    591a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    591e:	48 89 c6             	mov    %rax,%rsi
    5921:	48 89 df             	mov    %rbx,%rdi
    5924:	e8 89 2b 00 00       	call   84b2 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    5929:	48 8d 05 5a 5c 00 00 	lea    0x5c5a(%rip),%rax        # b58a <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    5930:	48 89 c2             	mov    %rax,%rdx
    5933:	48 8d 05 7e 32 01 00 	lea    0x1327e(%rip),%rax        # 18bb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    593a:	48 89 c6             	mov    %rax,%rsi
    593d:	48 89 df             	mov    %rbx,%rdi
    5940:	e8 bb f9 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    5945:	bf 28 00 00 00       	mov    $0x28,%edi
    594a:	e8 61 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    594f:	48 89 c3             	mov    %rax,%rbx
    5952:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5956:	48 89 c6             	mov    %rax,%rsi
    5959:	48 89 df             	mov    %rbx,%rdi
    595c:	e8 23 2c 00 00       	call   8584 <_ZN2vk18FragmentationErrorC1EPKc>
    5961:	48 8d 05 b2 5b 00 00 	lea    0x5bb2(%rip),%rax        # b51a <_ZN2vk18FragmentationErrorD1Ev>
    5968:	48 89 c2             	mov    %rax,%rdx
    596b:	48 8d 05 2e 32 01 00 	lea    0x1322e(%rip),%rax        # 18ba0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5972:	48 89 c6             	mov    %rax,%rsi
    5975:	48 89 df             	mov    %rbx,%rdi
    5978:	e8 83 f9 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    597d:	bf 28 00 00 00       	mov    $0x28,%edi
    5982:	e8 29 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5987:	48 89 c3             	mov    %rax,%rbx
    598a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    598e:	48 89 c6             	mov    %rax,%rsi
    5991:	48 89 df             	mov    %rbx,%rdi
    5994:	e8 bd 2c 00 00       	call   8656 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    5999:	48 8d 05 0a 5b 00 00 	lea    0x5b0a(%rip),%rax        # b4aa <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    59a0:	48 89 c2             	mov    %rax,%rdx
    59a3:	48 8d 05 de 31 01 00 	lea    0x131de(%rip),%rax        # 18b88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    59aa:	48 89 c6             	mov    %rax,%rsi
    59ad:	48 89 df             	mov    %rbx,%rdi
    59b0:	e8 4b f9 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    59b5:	bf 28 00 00 00       	mov    $0x28,%edi
    59ba:	e8 f1 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    59bf:	48 89 c3             	mov    %rax,%rbx
    59c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    59c6:	48 89 c6             	mov    %rax,%rsi
    59c9:	48 89 df             	mov    %rbx,%rdi
    59cc:	e8 57 2d 00 00       	call   8728 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    59d1:	48 8d 05 62 5a 00 00 	lea    0x5a62(%rip),%rax        # b43a <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    59d8:	48 89 c2             	mov    %rax,%rdx
    59db:	48 8d 05 8e 31 01 00 	lea    0x1318e(%rip),%rax        # 18b70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    59e2:	48 89 c6             	mov    %rax,%rsi
    59e5:	48 89 df             	mov    %rbx,%rdi
    59e8:	e8 13 f9 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    59ed:	bf 28 00 00 00       	mov    $0x28,%edi
    59f2:	e8 b9 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    59f7:	48 89 c3             	mov    %rax,%rbx
    59fa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    59fe:	48 89 c6             	mov    %rax,%rsi
    5a01:	48 89 df             	mov    %rbx,%rdi
    5a04:	e8 f1 2d 00 00       	call   87fa <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    5a09:	48 8d 05 ba 59 00 00 	lea    0x59ba(%rip),%rax        # b3ca <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    5a10:	48 89 c2             	mov    %rax,%rdx
    5a13:	48 8d 05 3e 31 01 00 	lea    0x1313e(%rip),%rax        # 18b58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a1a:	48 89 c6             	mov    %rax,%rsi
    5a1d:	48 89 df             	mov    %rbx,%rdi
    5a20:	e8 db f8 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    5a25:	bf 28 00 00 00       	mov    $0x28,%edi
    5a2a:	e8 81 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5a2f:	48 89 c3             	mov    %rax,%rbx
    5a32:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a36:	48 89 c6             	mov    %rax,%rsi
    5a39:	48 89 df             	mov    %rbx,%rdi
    5a3c:	e8 8b 2e 00 00       	call   88cc <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    5a41:	48 8d 05 12 59 00 00 	lea    0x5912(%rip),%rax        # b35a <_ZN2vk17OutOfDateKHRErrorD1Ev>
    5a48:	48 89 c2             	mov    %rax,%rdx
    5a4b:	48 8d 05 ee 30 01 00 	lea    0x130ee(%rip),%rax        # 18b40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a52:	48 89 c6             	mov    %rax,%rsi
    5a55:	48 89 df             	mov    %rbx,%rdi
    5a58:	e8 a3 f8 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    5a5d:	bf 28 00 00 00       	mov    $0x28,%edi
    5a62:	e8 49 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5a67:	48 89 c3             	mov    %rax,%rbx
    5a6a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a6e:	48 89 c6             	mov    %rax,%rsi
    5a71:	48 89 df             	mov    %rbx,%rdi
    5a74:	e8 25 2f 00 00       	call   899e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    5a79:	48 8d 05 6a 58 00 00 	lea    0x586a(%rip),%rax        # b2ea <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    5a80:	48 89 c2             	mov    %rax,%rdx
    5a83:	48 8d 05 9e 30 01 00 	lea    0x1309e(%rip),%rax        # 18b28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a8a:	48 89 c6             	mov    %rax,%rsi
    5a8d:	48 89 df             	mov    %rbx,%rdi
    5a90:	e8 6b f8 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    5a95:	bf 28 00 00 00       	mov    $0x28,%edi
    5a9a:	e8 11 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5a9f:	48 89 c3             	mov    %rax,%rbx
    5aa2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5aa6:	48 89 c6             	mov    %rax,%rsi
    5aa9:	48 89 df             	mov    %rbx,%rdi
    5aac:	e8 bf 2f 00 00       	call   8a70 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    5ab1:	48 8d 05 c2 57 00 00 	lea    0x57c2(%rip),%rax        # b27a <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    5ab8:	48 89 c2             	mov    %rax,%rdx
    5abb:	48 8d 05 4e 30 01 00 	lea    0x1304e(%rip),%rax        # 18b10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5ac2:	48 89 c6             	mov    %rax,%rsi
    5ac5:	48 89 df             	mov    %rbx,%rdi
    5ac8:	e8 33 f8 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    5acd:	bf 28 00 00 00       	mov    $0x28,%edi
    5ad2:	e8 d9 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5ad7:	48 89 c3             	mov    %rax,%rbx
    5ada:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5ade:	48 89 c6             	mov    %rax,%rsi
    5ae1:	48 89 df             	mov    %rbx,%rdi
    5ae4:	e8 59 30 00 00       	call   8b42 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    5ae9:	48 8d 05 1a 57 00 00 	lea    0x571a(%rip),%rax        # b20a <_ZN2vk20InvalidShaderNVErrorD1Ev>
    5af0:	48 89 c2             	mov    %rax,%rdx
    5af3:	48 8d 05 fe 2f 01 00 	lea    0x12ffe(%rip),%rax        # 18af8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5afa:	48 89 c6             	mov    %rax,%rsi
    5afd:	48 89 df             	mov    %rbx,%rdi
    5b00:	e8 fb f7 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorVideoProfileCodecNotSupportedKHR: throw VideoProfileCodecNotSupportedKHRError( message );
#  endif /*VK_ENABLE_BETA_EXTENSIONS*/
#  if defined( VK_ENABLE_BETA_EXTENSIONS )
        case Result::eErrorVideoStdVersionNotSupportedKHR: throw VideoStdVersionNotSupportedKHRError( message );
#  endif /*VK_ENABLE_BETA_EXTENSIONS*/
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    5b05:	bf 28 00 00 00       	mov    $0x28,%edi
    5b0a:	e8 a1 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5b0f:	48 89 c3             	mov    %rax,%rbx
    5b12:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5b16:	48 89 c6             	mov    %rax,%rsi
    5b19:	48 89 df             	mov    %rbx,%rdi
    5b1c:	e8 f3 30 00 00       	call   8c14 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    5b21:	48 8d 05 72 56 00 00 	lea    0x5672(%rip),%rax        # b19a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    5b28:	48 89 c2             	mov    %rax,%rdx
    5b2b:	48 8d 05 ae 2f 01 00 	lea    0x12fae(%rip),%rax        # 18ae0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5b32:	48 89 c6             	mov    %rax,%rsi
    5b35:	48 89 df             	mov    %rbx,%rdi
    5b38:	e8 c3 f7 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    5b3d:	bf 28 00 00 00       	mov    $0x28,%edi
    5b42:	e8 69 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5b47:	48 89 c3             	mov    %rax,%rbx
    5b4a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5b4e:	48 89 c6             	mov    %rax,%rsi
    5b51:	48 89 df             	mov    %rbx,%rdi
    5b54:	e8 8d 31 00 00       	call   8ce6 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    5b59:	48 8d 05 ca 55 00 00 	lea    0x55ca(%rip),%rax        # b12a <_ZN2vk20NotPermittedKHRErrorD1Ev>
    5b60:	48 89 c2             	mov    %rax,%rdx
    5b63:	48 8d 05 5e 2f 01 00 	lea    0x12f5e(%rip),%rax        # 18ac8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5b6a:	48 89 c6             	mov    %rax,%rsi
    5b6d:	48 89 df             	mov    %rbx,%rdi
    5b70:	e8 8b f7 ff ff       	call   5300 <__cxa_throw@plt>
#  if defined( VK_USE_PLATFORM_WIN32_KHR )
        case Result::eErrorFullScreenExclusiveModeLostEXT: throw FullScreenExclusiveModeLostEXTError( message );
#  endif /*VK_USE_PLATFORM_WIN32_KHR*/
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    5b75:	bf 28 00 00 00       	mov    $0x28,%edi
    5b7a:	e8 31 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5b7f:	48 89 c3             	mov    %rax,%rbx
    5b82:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5b86:	48 89 c6             	mov    %rax,%rsi
    5b89:	48 89 df             	mov    %rbx,%rdi
    5b8c:	e8 27 32 00 00       	call   8db8 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    5b91:	48 8d 05 22 55 00 00 	lea    0x5522(%rip),%rax        # b0ba <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    5b98:	48 89 c2             	mov    %rax,%rdx
    5b9b:	48 8d 05 0e 2f 01 00 	lea    0x12f0e(%rip),%rax        # 18ab0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5ba2:	48 89 c6             	mov    %rax,%rsi
    5ba5:	48 89 df             	mov    %rbx,%rdi
    5ba8:	e8 53 f7 ff ff       	call   5300 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    5bad:	bf 28 00 00 00       	mov    $0x28,%edi
    5bb2:	e8 f9 f4 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5bb7:	48 89 c3             	mov    %rax,%rbx
    5bba:	8b 45 cc             	mov    -0x34(%rbp),%eax
    5bbd:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    5bc0:	0f b6 05 31 37 01 00 	movzbl 0x13731(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5bc7:	84 c0                	test   %al,%al
    5bc9:	0f 94 c0             	sete   %al
    5bcc:	84 c0                	test   %al,%al
    5bce:	74 4a                	je     5c1a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    5bd0:	48 8d 05 21 37 01 00 	lea    0x13721(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5bd7:	48 89 c7             	mov    %rax,%rdi
    5bda:	e8 61 f7 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    5bdf:	85 c0                	test   %eax,%eax
    5be1:	0f 95 c0             	setne  %al
    5be4:	84 c0                	test   %al,%al
    5be6:	74 32                	je     5c1a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    5be8:	48 8d 05 b9 35 01 00 	lea    0x135b9(%rip),%rax        # 191a8 <__dso_handle>
    5bef:	48 89 c2             	mov    %rax,%rdx
    5bf2:	48 8d 05 b7 35 01 00 	lea    0x135b7(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    5bf9:	48 89 c6             	mov    %rax,%rsi
    5bfc:	48 8d 05 17 60 00 00 	lea    0x6017(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    5c03:	48 89 c7             	mov    %rax,%rdi
    5c06:	e8 85 f5 ff ff       	call   5190 <__cxa_atexit@plt>
    5c0b:	48 8d 05 e6 36 01 00 	lea    0x136e6(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5c12:	48 89 c7             	mov    %rax,%rdi
    5c15:	e8 b6 f4 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    5c1a:	48 8d 15 8f 35 01 00 	lea    0x1358f(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    5c21:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    5c24:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c28:	89 ce                	mov    %ecx,%esi
    5c2a:	48 89 c7             	mov    %rax,%rdi
    5c2d:	e8 46 06 00 00       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    5c32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5c36:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    5c3a:	48 89 c6             	mov    %rax,%rsi
    5c3d:	48 89 d7             	mov    %rdx,%rdi
    5c40:	89 f1                	mov    %esi,%ecx
    5c42:	48 89 d0             	mov    %rdx,%rax
    5c45:	89 ce                	mov    %ecx,%esi
    5c47:	48 89 c2             	mov    %rax,%rdx
    5c4a:	48 89 df             	mov    %rbx,%rdi
    5c4d:	e8 2e 1b 00 00       	call   7780 <_ZN2vk11SystemErrorC1ESt10error_code>
    5c52:	48 8d 05 5d 1c 00 00 	lea    0x1c5d(%rip),%rax        # 78b6 <_ZN2vk11SystemErrorD1Ev>
    5c59:	48 89 c2             	mov    %rax,%rdx
    5c5c:	48 8d 05 bd 30 01 00 	lea    0x130bd(%rip),%rax        # 18d20 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    5c63:	48 89 c6             	mov    %rax,%rsi
    5c66:	48 89 df             	mov    %rbx,%rdi
    5c69:	e8 92 f6 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    5c6e:	49 89 c4             	mov    %rax,%r12
    5c71:	48 89 df             	mov    %rbx,%rdi
    5c74:	e8 97 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5c79:	4c 89 e0             	mov    %r12,%rax
    5c7c:	48 89 c7             	mov    %rax,%rdi
    5c7f:	e8 9c f6 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    5c84:	49 89 c4             	mov    %rax,%r12
    5c87:	48 89 df             	mov    %rbx,%rdi
    5c8a:	e8 81 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5c8f:	4c 89 e0             	mov    %r12,%rax
    5c92:	48 89 c7             	mov    %rax,%rdi
    5c95:	e8 86 f6 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    5c9a:	49 89 c4             	mov    %rax,%r12
    5c9d:	48 89 df             	mov    %rbx,%rdi
    5ca0:	e8 6b f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5ca5:	4c 89 e0             	mov    %r12,%rax
    5ca8:	48 89 c7             	mov    %rax,%rdi
    5cab:	e8 70 f6 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    5cb0:	49 89 c4             	mov    %rax,%r12
    5cb3:	48 89 df             	mov    %rbx,%rdi
    5cb6:	e8 55 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5cbb:	4c 89 e0             	mov    %r12,%rax
    5cbe:	48 89 c7             	mov    %rax,%rdi
    5cc1:	e8 5a f6 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    5cc6:	49 89 c4             	mov    %rax,%r12
    5cc9:	48 89 df             	mov    %rbx,%rdi
    5ccc:	e8 3f f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5cd1:	4c 89 e0             	mov    %r12,%rax
    5cd4:	48 89 c7             	mov    %rax,%rdi
    5cd7:	e8 44 f6 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    5cdc:	49 89 c4             	mov    %rax,%r12
    5cdf:	48 89 df             	mov    %rbx,%rdi
    5ce2:	e8 29 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5ce7:	4c 89 e0             	mov    %r12,%rax
    5cea:	48 89 c7             	mov    %rax,%rdi
    5ced:	e8 2e f6 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    5cf2:	49 89 c4             	mov    %rax,%r12
    5cf5:	48 89 df             	mov    %rbx,%rdi
    5cf8:	e8 13 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5cfd:	4c 89 e0             	mov    %r12,%rax
    5d00:	48 89 c7             	mov    %rax,%rdi
    5d03:	e8 18 f6 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    5d08:	49 89 c4             	mov    %rax,%r12
    5d0b:	48 89 df             	mov    %rbx,%rdi
    5d0e:	e8 fd f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d13:	4c 89 e0             	mov    %r12,%rax
    5d16:	48 89 c7             	mov    %rax,%rdi
    5d19:	e8 02 f6 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    5d1e:	49 89 c4             	mov    %rax,%r12
    5d21:	48 89 df             	mov    %rbx,%rdi
    5d24:	e8 e7 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d29:	4c 89 e0             	mov    %r12,%rax
    5d2c:	48 89 c7             	mov    %rax,%rdi
    5d2f:	e8 ec f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    5d34:	49 89 c4             	mov    %rax,%r12
    5d37:	48 89 df             	mov    %rbx,%rdi
    5d3a:	e8 d1 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d3f:	4c 89 e0             	mov    %r12,%rax
    5d42:	48 89 c7             	mov    %rax,%rdi
    5d45:	e8 d6 f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    5d4a:	49 89 c4             	mov    %rax,%r12
    5d4d:	48 89 df             	mov    %rbx,%rdi
    5d50:	e8 bb f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d55:	4c 89 e0             	mov    %r12,%rax
    5d58:	48 89 c7             	mov    %rax,%rdi
    5d5b:	e8 c0 f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    5d60:	49 89 c4             	mov    %rax,%r12
    5d63:	48 89 df             	mov    %rbx,%rdi
    5d66:	e8 a5 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d6b:	4c 89 e0             	mov    %r12,%rax
    5d6e:	48 89 c7             	mov    %rax,%rdi
    5d71:	e8 aa f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    5d76:	49 89 c4             	mov    %rax,%r12
    5d79:	48 89 df             	mov    %rbx,%rdi
    5d7c:	e8 8f f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d81:	4c 89 e0             	mov    %r12,%rax
    5d84:	48 89 c7             	mov    %rax,%rdi
    5d87:	e8 94 f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    5d8c:	49 89 c4             	mov    %rax,%r12
    5d8f:	48 89 df             	mov    %rbx,%rdi
    5d92:	e8 79 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d97:	4c 89 e0             	mov    %r12,%rax
    5d9a:	48 89 c7             	mov    %rax,%rdi
    5d9d:	e8 7e f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    5da2:	49 89 c4             	mov    %rax,%r12
    5da5:	48 89 df             	mov    %rbx,%rdi
    5da8:	e8 63 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5dad:	4c 89 e0             	mov    %r12,%rax
    5db0:	48 89 c7             	mov    %rax,%rdi
    5db3:	e8 68 f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    5db8:	49 89 c4             	mov    %rax,%r12
    5dbb:	48 89 df             	mov    %rbx,%rdi
    5dbe:	e8 4d f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5dc3:	4c 89 e0             	mov    %r12,%rax
    5dc6:	48 89 c7             	mov    %rax,%rdi
    5dc9:	e8 52 f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    5dce:	49 89 c4             	mov    %rax,%r12
    5dd1:	48 89 df             	mov    %rbx,%rdi
    5dd4:	e8 37 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5dd9:	4c 89 e0             	mov    %r12,%rax
    5ddc:	48 89 c7             	mov    %rax,%rdi
    5ddf:	e8 3c f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    5de4:	49 89 c4             	mov    %rax,%r12
    5de7:	48 89 df             	mov    %rbx,%rdi
    5dea:	e8 21 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5def:	4c 89 e0             	mov    %r12,%rax
    5df2:	48 89 c7             	mov    %rax,%rdi
    5df5:	e8 26 f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    5dfa:	49 89 c4             	mov    %rax,%r12
    5dfd:	48 89 df             	mov    %rbx,%rdi
    5e00:	e8 0b f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e05:	4c 89 e0             	mov    %r12,%rax
    5e08:	48 89 c7             	mov    %rax,%rdi
    5e0b:	e8 10 f5 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    5e10:	49 89 c4             	mov    %rax,%r12
    5e13:	48 89 df             	mov    %rbx,%rdi
    5e16:	e8 f5 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e1b:	4c 89 e0             	mov    %r12,%rax
    5e1e:	48 89 c7             	mov    %rax,%rdi
    5e21:	e8 fa f4 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    5e26:	49 89 c4             	mov    %rax,%r12
    5e29:	48 89 df             	mov    %rbx,%rdi
    5e2c:	e8 df f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e31:	4c 89 e0             	mov    %r12,%rax
    5e34:	48 89 c7             	mov    %rax,%rdi
    5e37:	e8 e4 f4 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    5e3c:	49 89 c4             	mov    %rax,%r12
    5e3f:	48 89 df             	mov    %rbx,%rdi
    5e42:	e8 c9 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e47:	4c 89 e0             	mov    %r12,%rax
    5e4a:	48 89 c7             	mov    %rax,%rdi
    5e4d:	e8 ce f4 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    5e52:	49 89 c4             	mov    %rax,%r12
    5e55:	48 89 df             	mov    %rbx,%rdi
    5e58:	e8 b3 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e5d:	4c 89 e0             	mov    %r12,%rax
    5e60:	48 89 c7             	mov    %rax,%rdi
    5e63:	e8 b8 f4 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    5e68:	49 89 c4             	mov    %rax,%r12
    5e6b:	48 89 df             	mov    %rbx,%rdi
    5e6e:	e8 9d f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e73:	4c 89 e0             	mov    %r12,%rax
    5e76:	48 89 c7             	mov    %rax,%rdi
    5e79:	e8 a2 f4 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    5e7e:	49 89 c4             	mov    %rax,%r12
    5e81:	48 89 df             	mov    %rbx,%rdi
    5e84:	e8 87 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e89:	4c 89 e0             	mov    %r12,%rax
    5e8c:	48 89 c7             	mov    %rax,%rdi
    5e8f:	e8 8c f4 ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    5e94:	49 89 c4             	mov    %rax,%r12
    5e97:	48 89 df             	mov    %rbx,%rdi
    5e9a:	e8 71 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e9f:	4c 89 e0             	mov    %r12,%rax
    5ea2:	48 89 c7             	mov    %rax,%rdi
    5ea5:	e8 76 f4 ff ff       	call   5320 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    5eaa:	49 89 c4             	mov    %rax,%r12
    5ead:	48 89 df             	mov    %rbx,%rdi
    5eb0:	e8 5b f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5eb5:	4c 89 e0             	mov    %r12,%rax
    5eb8:	48 89 c7             	mov    %rax,%rdi
    5ebb:	e8 60 f4 ff ff       	call   5320 <_Unwind_Resume@plt>

0000000000005ec0 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>

int protected_main() {
    5ec0:	55                   	push   %rbp
    5ec1:	48 89 e5             	mov    %rsp,%rbp
    5ec4:	41 55                	push   %r13
    5ec6:	41 54                	push   %r12
    5ec8:	53                   	push   %rbx
    5ec9:	48 83 ec 18          	sub    $0x18,%rsp
  auto app = new rtvc::VulkanApp{};
    5ecd:	bf 58 00 00 00       	mov    $0x58,%edi
    5ed2:	e8 09 f3 ff ff       	call   51e0 <_Znwm@plt>
    5ed7:	48 89 c3             	mov    %rax,%rbx
    5eda:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    5ee0:	48 89 de             	mov    %rbx,%rsi
    5ee3:	b8 00 00 00 00       	mov    $0x0,%eax
    5ee8:	ba 0b 00 00 00       	mov    $0xb,%edx
    5eed:	48 89 f7             	mov    %rsi,%rdi
    5ef0:	48 89 d1             	mov    %rdx,%rcx
    5ef3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5ef6:	48 89 df             	mov    %rbx,%rdi
    5ef9:	e8 0a 36 00 00       	call   9508 <_ZN4rtvc9VulkanAppC1Ev>
    5efe:	48 89 5d d8          	mov    %rbx,-0x28(%rbp)
  app->render();
    5f02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f06:	48 89 c7             	mov    %rax,%rdi
    5f09:	e8 be 35 00 00       	call   94cc <_ZN4rtvc9VulkanApp6renderEv>
  delete app;
    5f0e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5f12:	48 85 db             	test   %rbx,%rbx
    5f15:	74 15                	je     5f2c <_Z14protected_mainv+0x6c>
    5f17:	48 89 df             	mov    %rbx,%rdi
    5f1a:	e8 b5 36 00 00       	call   95d4 <_ZN4rtvc9VulkanAppD1Ev>
    5f1f:	be 58 00 00 00       	mov    $0x58,%esi
    5f24:	48 89 df             	mov    %rbx,%rdi
    5f27:	e8 c4 f2 ff ff       	call   51f0 <_ZdlPvm@plt>
  return EXIT_SUCCESS;
    5f2c:	b8 00 00 00 00       	mov    $0x0,%eax
    5f31:	eb 20                	jmp    5f53 <_Z14protected_mainv+0x93>
  auto app = new rtvc::VulkanApp{};
    5f33:	49 89 c4             	mov    %rax,%r12
    5f36:	45 84 ed             	test   %r13b,%r13b
    5f39:	74 0d                	je     5f48 <_Z14protected_mainv+0x88>
    5f3b:	be 58 00 00 00       	mov    $0x58,%esi
    5f40:	48 89 df             	mov    %rbx,%rdi
    5f43:	e8 a8 f2 ff ff       	call   51f0 <_ZdlPvm@plt>
    5f48:	4c 89 e0             	mov    %r12,%rax
    5f4b:	48 89 c7             	mov    %rax,%rdi
    5f4e:	e8 cd f3 ff ff       	call   5320 <_Unwind_Resume@plt>
}
    5f53:	48 83 c4 18          	add    $0x18,%rsp
    5f57:	5b                   	pop    %rbx
    5f58:	41 5c                	pop    %r12
    5f5a:	41 5d                	pop    %r13
    5f5c:	5d                   	pop    %rbp
    5f5d:	c3                   	ret

0000000000005f5e <main>:

int main() {
    5f5e:	55                   	push   %rbp
    5f5f:	48 89 e5             	mov    %rsp,%rbp
    5f62:	53                   	push   %rbx
    5f63:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    5f67:	e8 54 ff ff ff       	call   5ec0 <_Z14protected_mainv>
    5f6c:	e9 30 01 00 00       	jmp    60a1 <main+0x143>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    5f71:	b8 01 00 00 00       	mov    $0x1,%eax
    5f76:	e9 26 01 00 00       	jmp    60a1 <main+0x143>
  } catch (vk::SystemError &e) {
    5f7b:	48 83 fa 01          	cmp    $0x1,%rdx
    5f7f:	74 0b                	je     5f8c <main+0x2e>
    5f81:	48 83 fa 02          	cmp    $0x2,%rdx
    5f85:	74 53                	je     5fda <main+0x7c>
    5f87:	e9 9f 00 00 00       	jmp    602b <main+0xcd>
    5f8c:	48 89 c7             	mov    %rax,%rdi
    5f8f:	e8 fc f0 ff ff       	call   5090 <__cxa_begin_catch@plt>
    5f94:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    std::cerr << e.what() << std::endl;
    5f98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f9c:	48 8b 00             	mov    (%rax),%rax
    5f9f:	48 83 c0 10          	add    $0x10,%rax
    5fa3:	48 8b 10             	mov    (%rax),%rdx
    5fa6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5faa:	48 89 c7             	mov    %rax,%rdi
    5fad:	ff d2                	call   *%rdx
    5faf:	48 89 c6             	mov    %rax,%rsi
    5fb2:	48 8d 05 27 32 01 00 	lea    0x13227(%rip),%rax        # 191e0 <_ZSt4cerr@GLIBCXX_3.4>
    5fb9:	48 89 c7             	mov    %rax,%rdi
    5fbc:	e8 0f f2 ff ff       	call   51d0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    5fc1:	48 8b 15 d0 2f 01 00 	mov    0x12fd0(%rip),%rdx        # 18f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    5fc8:	48 89 d6             	mov    %rdx,%rsi
    5fcb:	48 89 c7             	mov    %rax,%rdi
    5fce:	e8 3d f2 ff ff       	call   5210 <_ZNSolsEPFRSoS_E@plt>
  } catch (std::exception &e) {
    5fd3:	e8 18 f3 ff ff       	call   52f0 <__cxa_end_catch@plt>
    5fd8:	eb 97                	jmp    5f71 <main+0x13>
    5fda:	48 89 c7             	mov    %rax,%rdi
    5fdd:	e8 ae f0 ff ff       	call   5090 <__cxa_begin_catch@plt>
    5fe2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    5fe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fea:	48 8b 00             	mov    (%rax),%rax
    5fed:	48 83 c0 10          	add    $0x10,%rax
    5ff1:	48 8b 10             	mov    (%rax),%rdx
    5ff4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ff8:	48 89 c7             	mov    %rax,%rdi
    5ffb:	ff d2                	call   *%rdx
    5ffd:	48 89 c6             	mov    %rax,%rsi
    6000:	48 8d 05 d9 31 01 00 	lea    0x131d9(%rip),%rax        # 191e0 <_ZSt4cerr@GLIBCXX_3.4>
    6007:	48 89 c7             	mov    %rax,%rdi
    600a:	e8 c1 f1 ff ff       	call   51d0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    600f:	48 8b 15 82 2f 01 00 	mov    0x12f82(%rip),%rdx        # 18f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    6016:	48 89 d6             	mov    %rdx,%rsi
    6019:	48 89 c7             	mov    %rax,%rdi
    601c:	e8 ef f1 ff ff       	call   5210 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    6021:	e8 ca f2 ff ff       	call   52f0 <__cxa_end_catch@plt>
    6026:	e9 46 ff ff ff       	jmp    5f71 <main+0x13>
    602b:	48 89 c7             	mov    %rax,%rdi
    602e:	e8 5d f0 ff ff       	call   5090 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    6033:	48 8d 05 00 ac 00 00 	lea    0xac00(%rip),%rax        # 10c3a <_ZNSt8__detailL19__atomic_spin_countE+0x1d6>
    603a:	48 89 c6             	mov    %rax,%rsi
    603d:	48 8d 05 9c 31 01 00 	lea    0x1319c(%rip),%rax        # 191e0 <_ZSt4cerr@GLIBCXX_3.4>
    6044:	48 89 c7             	mov    %rax,%rdi
    6047:	e8 84 f1 ff ff       	call   51d0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    604c:	48 8b 15 45 2f 01 00 	mov    0x12f45(%rip),%rdx        # 18f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    6053:	48 89 d6             	mov    %rdx,%rsi
    6056:	48 89 c7             	mov    %rax,%rdi
    6059:	e8 b2 f1 ff ff       	call   5210 <_ZNSolsEPFRSoS_E@plt>
  }
    605e:	e8 8d f2 ff ff       	call   52f0 <__cxa_end_catch@plt>
    6063:	e9 09 ff ff ff       	jmp    5f71 <main+0x13>
  } catch (std::exception &e) {
    6068:	48 89 c3             	mov    %rax,%rbx
    606b:	e8 80 f2 ff ff       	call   52f0 <__cxa_end_catch@plt>
    6070:	48 89 d8             	mov    %rbx,%rax
    6073:	48 89 c7             	mov    %rax,%rdi
    6076:	e8 a5 f2 ff ff       	call   5320 <_Unwind_Resume@plt>
  } catch (...) {
    607b:	48 89 c3             	mov    %rax,%rbx
    607e:	e8 6d f2 ff ff       	call   52f0 <__cxa_end_catch@plt>
    6083:	48 89 d8             	mov    %rbx,%rax
    6086:	48 89 c7             	mov    %rax,%rdi
    6089:	e8 92 f2 ff ff       	call   5320 <_Unwind_Resume@plt>
  }
    608e:	48 89 c3             	mov    %rax,%rbx
    6091:	e8 5a f2 ff ff       	call   52f0 <__cxa_end_catch@plt>
    6096:	48 89 d8             	mov    %rbx,%rax
    6099:	48 89 c7             	mov    %rax,%rdi
    609c:	e8 7f f2 ff ff       	call   5320 <_Unwind_Resume@plt>
    60a1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    60a5:	c9                   	leave
    60a6:	c3                   	ret

00000000000060a7 <_Z41__static_initialization_and_destruction_0ii>:
    60a7:	55                   	push   %rbp
    60a8:	48 89 e5             	mov    %rsp,%rbp
    60ab:	48 83 ec 10          	sub    $0x10,%rsp
    60af:	89 7d fc             	mov    %edi,-0x4(%rbp)
    60b2:	89 75 f8             	mov    %esi,-0x8(%rbp)
    60b5:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    60b9:	75 3b                	jne    60f6 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    60bb:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    60c2:	75 32                	jne    60f6 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    60c4:	48 8d 05 26 32 01 00 	lea    0x13226(%rip),%rax        # 192f1 <_ZStL8__ioinit>
    60cb:	48 89 c7             	mov    %rax,%rdi
    60ce:	e8 ed f1 ff ff       	call   52c0 <_ZNSt8ios_base4InitC1Ev@plt>
    60d3:	48 8d 05 ce 30 01 00 	lea    0x130ce(%rip),%rax        # 191a8 <__dso_handle>
    60da:	48 89 c2             	mov    %rax,%rdx
    60dd:	48 8d 05 0d 32 01 00 	lea    0x1320d(%rip),%rax        # 192f1 <_ZStL8__ioinit>
    60e4:	48 89 c6             	mov    %rax,%rsi
    60e7:	48 8b 05 da 2e 01 00 	mov    0x12eda(%rip),%rax        # 18fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    60ee:	48 89 c7             	mov    %rax,%rdi
    60f1:	e8 9a f0 ff ff       	call   5190 <__cxa_atexit@plt>
    60f6:	90                   	nop
    60f7:	c9                   	leave
    60f8:	c3                   	ret

00000000000060f9 <_GLOBAL__sub_I__Z14protected_mainv>:
    60f9:	55                   	push   %rbp
    60fa:	48 89 e5             	mov    %rsp,%rbp
    60fd:	be ff ff 00 00       	mov    $0xffff,%esi
    6102:	bf 01 00 00 00       	mov    $0x1,%edi
    6107:	e8 9b ff ff ff       	call   60a7 <_Z41__static_initialization_and_destruction_0ii>
    610c:	5d                   	pop    %rbp
    610d:	c3                   	ret

000000000000610e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    610e:	55                   	push   %rbp
    610f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    6112:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    6117:	5d                   	pop    %rbp
    6118:	c3                   	ret

0000000000006119 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    6119:	55                   	push   %rbp
    611a:	48 89 e5             	mov    %rsp,%rbp
    611d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6121:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6125:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6129:	5d                   	pop    %rbp
    612a:	c3                   	ret

000000000000612b <_ZSt21is_constant_evaluatedv>:

  /// Returns true only when called during constant evaluation.
  /// @since C++20
  constexpr inline bool
  is_constant_evaluated() noexcept
  {
    612b:	55                   	push   %rbp
    612c:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
    if consteval { return true; } else { return false; }
#else
    return __builtin_is_constant_evaluated();
    612f:	b8 00 00 00 00       	mov    $0x0,%eax
#endif
  }
    6134:	5d                   	pop    %rbp
    6135:	c3                   	ret

0000000000006136 <_ZNSt11char_traitsIcE6assignERcRKc>:
#if __cpp_lib_three_way_comparison
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    6136:	55                   	push   %rbp
    6137:	48 89 e5             	mov    %rsp,%rbp
    613a:	48 83 ec 10          	sub    $0x10,%rsp
    613e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6142:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
#if __cpp_constexpr_dynamic_alloc
	if (std::__is_constant_evaluated())
    6146:	e8 c3 ff ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    614b:	84 c0                	test   %al,%al
    614d:	74 15                	je     6164 <_ZNSt11char_traitsIcE6assignERcRKc+0x2e>
	  std::construct_at(__builtin_addressof(__c1), __c2);
    614f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6153:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6157:	48 89 d6             	mov    %rdx,%rsi
    615a:	48 89 c7             	mov    %rax,%rdi
    615d:	e8 cd 34 00 00       	call   962f <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	else
#endif
	__c1 = __c2;
      }
    6162:	eb 0d                	jmp    6171 <_ZNSt11char_traitsIcE6assignERcRKc+0x3b>
	__c1 = __c2;
    6164:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6168:	0f b6 10             	movzbl (%rax),%edx
    616b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    616f:	88 10                	mov    %dl,(%rax)
      }
    6171:	90                   	nop
    6172:	c9                   	leave
    6173:	c3                   	ret

0000000000006174 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    6174:	55                   	push   %rbp
    6175:	48 89 e5             	mov    %rsp,%rbp
    6178:	48 83 ec 10          	sub    $0x10,%rsp
    617c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    6180:	e8 89 ff ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    6185:	84 c0                	test   %al,%al
    6187:	74 0e                	je     6197 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    6189:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    618d:	48 89 c7             	mov    %rax,%rdi
    6190:	e8 d9 34 00 00       	call   966e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    6195:	eb 0d                	jmp    61a4 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    6197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    619b:	48 89 c7             	mov    %rax,%rdi
    619e:	e8 fd ee ff ff       	call   50a0 <strlen@plt>
    61a3:	90                   	nop
      }
    61a4:	c9                   	leave
    61a5:	c3                   	ret

00000000000061a6 <_ZNSt11char_traitsIcE4moveEPcPKcm>:
#endif
	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      move(char_type* __s1, const char_type* __s2, size_t __n)
    61a6:	55                   	push   %rbp
    61a7:	48 89 e5             	mov    %rsp,%rbp
    61aa:	48 83 ec 20          	sub    $0x20,%rsp
    61ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    61b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	if (__n == 0)
    61ba:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    61bf:	75 06                	jne    61c7 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x21>
	  return __s1;
    61c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61c5:	eb 3a                	jmp    6201 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x5b>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
    61c7:	e8 42 ff ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    61cc:	84 c0                	test   %al,%al
    61ce:	74 19                	je     61e9 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x43>
	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
    61d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    61d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    61d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61dc:	48 89 ce             	mov    %rcx,%rsi
    61df:	48 89 c7             	mov    %rax,%rdi
    61e2:	e8 cd 34 00 00       	call   96b4 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm>
    61e7:	eb 18                	jmp    6201 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x5b>
#endif
	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
    61e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    61ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    61f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61f5:	48 89 ce             	mov    %rcx,%rsi
    61f8:	48 89 c7             	mov    %rax,%rdi
    61fb:	e8 e0 f0 ff ff       	call   52e0 <memmove@plt>
    6200:	90                   	nop
      }
    6201:	c9                   	leave
    6202:	c3                   	ret

0000000000006203 <_ZNSt11char_traitsIcE4copyEPcPKcm>:

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
    6203:	55                   	push   %rbp
    6204:	48 89 e5             	mov    %rsp,%rbp
    6207:	48 83 ec 20          	sub    $0x20,%rsp
    620b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    620f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6213:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	if (__n == 0)
    6217:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    621c:	75 06                	jne    6224 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x21>
	  return __s1;
    621e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6222:	eb 40                	jmp    6264 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x61>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
    6224:	e8 e5 fe ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    6229:	84 c0                	test   %al,%al
    622b:	74 19                	je     6246 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x43>
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
    622d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6231:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6239:	48 89 ce             	mov    %rcx,%rsi
    623c:	48 89 c7             	mov    %rax,%rdi
    623f:	e8 22 35 00 00       	call   9766 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
    6244:	eb 1e                	jmp    6264 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x61>
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    6246:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    624a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    624e:	48 89 d1             	mov    %rdx,%rcx
    6251:	48 89 c6             	mov    %rax,%rsi
    6254:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6258:	48 89 c2             	mov    %rax,%rdx
    625b:	48 89 cf             	mov    %rcx,%rdi
    625e:	e8 fd ee ff ff       	call   5160 <memcpy@plt>
    6263:	90                   	nop
      }
    6264:	c9                   	leave
    6265:	c3                   	ret

0000000000006266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
      // Capacity:
      ///  Returns the number of characters in the string, not including any
      ///  null-termination.
      _GLIBCXX20_CONSTEXPR
      size_type
      size() const _GLIBCXX_NOEXCEPT
    6266:	55                   	push   %rbp
    6267:	48 89 e5             	mov    %rsp,%rbp
    626a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_string_length; }
    626e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6272:	48 8b 40 08          	mov    0x8(%rax),%rax
    6276:	5d                   	pop    %rbp
    6277:	c3                   	ret

0000000000006278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>:
  {
  public:
    error_code() noexcept
    : _M_value(0), _M_cat(&system_category()) { }

    error_code(int __v, const error_category& __cat) noexcept
    6278:	55                   	push   %rbp
    6279:	48 89 e5             	mov    %rsp,%rbp
    627c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6280:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6283:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    : _M_value(__v), _M_cat(&__cat) { }
    6287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    628b:	8b 55 f4             	mov    -0xc(%rbp),%edx
    628e:	89 10                	mov    %edx,(%rax)
    6290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6294:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6298:	48 89 50 08          	mov    %rdx,0x8(%rax)
    629c:	90                   	nop
    629d:	5d                   	pop    %rbp
    629e:	c3                   	ret
    629f:	90                   	nop

00000000000062a0 <_ZNKSt10error_code5valueEv>:
			 error_code&>::type
      operator=(_ErrorCodeEnum __e) noexcept
      { return *this = make_error_code(__e); }

    int
    value() const noexcept { return _M_value; }
    62a0:	55                   	push   %rbp
    62a1:	48 89 e5             	mov    %rsp,%rbp
    62a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ac:	8b 00                	mov    (%rax),%eax
    62ae:	5d                   	pop    %rbp
    62af:	c3                   	ret

00000000000062b0 <_ZNKSt10error_code8categoryEv>:

    const error_category&
    category() const noexcept { return *_M_cat; }
    62b0:	55                   	push   %rbp
    62b1:	48 89 e5             	mov    %rsp,%rbp
    62b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62bc:	48 8b 40 08          	mov    0x8(%rax),%rax
    62c0:	5d                   	pop    %rbp
    62c1:	c3                   	ret

00000000000062c2 <_ZNKSt10error_code7messageB5cxx11Ev>:
    error_condition
    default_error_condition() const noexcept;

    _GLIBCXX_DEFAULT_ABI_TAG
    string
    message() const
    62c2:	55                   	push   %rbp
    62c3:	48 89 e5             	mov    %rsp,%rbp
    62c6:	41 54                	push   %r12
    62c8:	53                   	push   %rbx
    62c9:	48 83 ec 10          	sub    $0x10,%rsp
    62cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    62d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return category().message(value()); }
    62d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62d9:	48 89 c7             	mov    %rax,%rdi
    62dc:	e8 cf ff ff ff       	call   62b0 <_ZNKSt10error_code8categoryEv>
    62e1:	48 89 c3             	mov    %rax,%rbx
    62e4:	48 8b 03             	mov    (%rbx),%rax
    62e7:	48 83 c0 20          	add    $0x20,%rax
    62eb:	4c 8b 20             	mov    (%rax),%r12
    62ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62f2:	48 89 c7             	mov    %rax,%rdi
    62f5:	e8 a6 ff ff ff       	call   62a0 <_ZNKSt10error_code5valueEv>
    62fa:	89 c2                	mov    %eax,%edx
    62fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6300:	48 89 de             	mov    %rbx,%rsi
    6303:	48 89 c7             	mov    %rax,%rdi
    6306:	41 ff d4             	call   *%r12
    6309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    630d:	48 83 c4 10          	add    $0x10,%rsp
    6311:	5b                   	pop    %rbx
    6312:	41 5c                	pop    %r12
    6314:	5d                   	pop    %rbp
    6315:	c3                   	ret

0000000000006316 <_ZNSt12system_errorC1ESt10error_code>:
  {
  private:
    error_code 	_M_code;

  public:
    system_error(error_code __ec = error_code())
    6316:	55                   	push   %rbp
    6317:	48 89 e5             	mov    %rsp,%rbp
    631a:	53                   	push   %rbx
    631b:	48 83 ec 48          	sub    $0x48,%rsp
    631f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6323:	48 89 d1             	mov    %rdx,%rcx
    6326:	48 89 f0             	mov    %rsi,%rax
    6329:	48 89 fa             	mov    %rdi,%rdx
    632c:	48 89 ca             	mov    %rcx,%rdx
    632f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6333:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    : runtime_error(__ec.message()), _M_code(__ec) { }
    6337:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    633b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    633f:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    6343:	48 89 d6             	mov    %rdx,%rsi
    6346:	48 89 c7             	mov    %rax,%rdi
    6349:	e8 74 ff ff ff       	call   62c2 <_ZNKSt10error_code7messageB5cxx11Ev>
    634e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6352:	48 89 c6             	mov    %rax,%rsi
    6355:	48 89 df             	mov    %rbx,%rdi
    6358:	e8 f3 ee ff ff       	call   5250 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    635d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6361:	48 89 c7             	mov    %rax,%rdi
    6364:	e8 97 34 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6369:	48 8d 15 80 26 01 00 	lea    0x12680(%rip),%rdx        # 189f0 <_ZTVSt12system_error@GLIBCXX_3.4.11+0x10>
    6370:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6374:	48 89 10             	mov    %rdx,(%rax)
    6377:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    637b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    637f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    6383:	48 89 41 10          	mov    %rax,0x10(%rcx)
    6387:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    638b:	eb 1a                	jmp    63a7 <_ZNSt12system_errorC1ESt10error_code+0x91>
    638d:	48 89 c3             	mov    %rax,%rbx
    6390:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6394:	48 89 c7             	mov    %rax,%rdi
    6397:	e8 64 34 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    639c:	48 89 d8             	mov    %rbx,%rax
    639f:	48 89 c7             	mov    %rax,%rdi
    63a2:	e8 79 ef ff ff       	call   5320 <_Unwind_Resume@plt>
    63a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63ab:	c9                   	leave
    63ac:	c3                   	ret
    63ad:	90                   	nop

00000000000063ae <_ZNSt12system_errorC1ESt10error_codePKc>:

    system_error(error_code __ec, const string& __what)
    : runtime_error(__what + ": " + __ec.message()), _M_code(__ec) { }

    system_error(error_code __ec, const char* __what)
    63ae:	55                   	push   %rbp
    63af:	48 89 e5             	mov    %rsp,%rbp
    63b2:	53                   	push   %rbx
    63b3:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    63ba:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    63be:	89 f0                	mov    %esi,%eax
    63c0:	48 89 d6             	mov    %rdx,%rsi
    63c3:	48 89 f2             	mov    %rsi,%rdx
    63c6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    63cd:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    63d4:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    : runtime_error(__what + (": " + __ec.message())), _M_code(__ec) { }
    63d8:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    63dc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63e0:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    63e7:	48 89 d6             	mov    %rdx,%rsi
    63ea:	48 89 c7             	mov    %rax,%rdi
    63ed:	e8 d0 fe ff ff       	call   62c2 <_ZNKSt10error_code7messageB5cxx11Ev>
    63f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    63f6:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    63fa:	48 8d 0d 3f a2 00 00 	lea    0xa23f(%rip),%rcx        # 10640 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    6401:	48 89 ce             	mov    %rcx,%rsi
    6404:	48 89 c7             	mov    %rax,%rdi
    6407:	e8 40 35 00 00       	call   994c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    640c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6410:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    6414:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    6418:	48 89 ce             	mov    %rcx,%rsi
    641b:	48 89 c7             	mov    %rax,%rdi
    641e:	e8 29 35 00 00       	call   994c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    6423:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6427:	48 89 c6             	mov    %rax,%rsi
    642a:	48 89 df             	mov    %rbx,%rdi
    642d:	e8 1e ee ff ff       	call   5250 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    6432:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6436:	48 89 c7             	mov    %rax,%rdi
    6439:	e8 c2 33 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    643e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6442:	48 89 c7             	mov    %rax,%rdi
    6445:	e8 b6 33 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    644a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    644e:	48 89 c7             	mov    %rax,%rdi
    6451:	e8 aa 33 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6456:	48 8d 15 93 25 01 00 	lea    0x12593(%rip),%rdx        # 189f0 <_ZTVSt12system_error@GLIBCXX_3.4.11+0x10>
    645d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6461:	48 89 10             	mov    %rdx,(%rax)
    6464:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    6468:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    646f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6476:	48 89 41 10          	mov    %rax,0x10(%rcx)
    647a:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    647e:	eb 3c                	jmp    64bc <_ZNSt12system_errorC1ESt10error_codePKc+0x10e>
    6480:	48 89 c3             	mov    %rax,%rbx
    6483:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6487:	48 89 c7             	mov    %rax,%rdi
    648a:	e8 71 33 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    648f:	eb 03                	jmp    6494 <_ZNSt12system_errorC1ESt10error_codePKc+0xe6>
    6491:	48 89 c3             	mov    %rax,%rbx
    6494:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6498:	48 89 c7             	mov    %rax,%rdi
    649b:	e8 60 33 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64a0:	eb 03                	jmp    64a5 <_ZNSt12system_errorC1ESt10error_codePKc+0xf7>
    64a2:	48 89 c3             	mov    %rax,%rbx
    64a5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    64a9:	48 89 c7             	mov    %rax,%rdi
    64ac:	e8 4f 33 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64b1:	48 89 d8             	mov    %rbx,%rax
    64b4:	48 89 c7             	mov    %rax,%rdi
    64b7:	e8 64 ee ff ff       	call   5320 <_Unwind_Resume@plt>
    64bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    64c0:	c9                   	leave
    64c1:	c3                   	ret

00000000000064c2 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>:
    size_t getVkHeaderVersion() const
    64c2:	55                   	push   %rbp
    64c3:	48 89 e5             	mov    %rsp,%rbp
    64c6:	48 83 ec 10          	sub    $0x10,%rsp
    64ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      VULKAN_HPP_ASSERT( m_valid );
    64ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d2:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    64d6:	84 c0                	test   %al,%al
    64d8:	75 28                	jne    6502 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv+0x40>
    64da:	48 8d 05 67 a1 00 00 	lea    0xa167(%rip),%rax        # 10648 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x10>
    64e1:	48 89 c1             	mov    %rax,%rcx
    64e4:	ba 16 05 00 00       	mov    $0x516,%edx
    64e9:	48 8d 05 98 a1 00 00 	lea    0xa198(%rip),%rax        # 10688 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    64f0:	48 89 c6             	mov    %rax,%rsi
    64f3:	48 8d 05 ad a1 00 00 	lea    0xa1ad(%rip),%rax        # 106a7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x6f>
    64fa:	48 89 c7             	mov    %rax,%rdi
    64fd:	e8 de eb ff ff       	call   50e0 <__assert_fail@plt>
      return vkHeaderVersion;
    6502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6506:	48 8b 00             	mov    (%rax),%rax
    }
    6509:	c9                   	leave
    650a:	c3                   	ret
    650b:	90                   	nop

000000000000650c <_ZN2vk18DispatchLoaderBaseC1Ev>:
    DispatchLoaderBase() = default;
    650c:	55                   	push   %rbp
    650d:	48 89 e5             	mov    %rsp,%rbp
    6510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6518:	48 c7 00 e7 00 00 00 	movq   $0xe7,(%rax)
    651f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6523:	c6 40 08 01          	movb   $0x1,0x8(%rax)
    6527:	90                   	nop
    6528:	5d                   	pop    %rbp
    6529:	c3                   	ret

000000000000652a <_ZStanSt13_Ios_FmtflagsS_>:
      _S_ios_fmtflags_min = ~__INT_MAX__
    };

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
    652a:	55                   	push   %rbp
    652b:	48 89 e5             	mov    %rsp,%rbp
    652e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6531:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6534:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6537:	23 45 f8             	and    -0x8(%rbp),%eax
    653a:	5d                   	pop    %rbp
    653b:	c3                   	ret

000000000000653c <_ZStorSt13_Ios_FmtflagsS_>:

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
    653c:	55                   	push   %rbp
    653d:	48 89 e5             	mov    %rsp,%rbp
    6540:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6543:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6546:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6549:	0b 45 f8             	or     -0x8(%rbp),%eax
    654c:	5d                   	pop    %rbp
    654d:	c3                   	ret

000000000000654e <_ZStcoSt13_Ios_Fmtflags>:
  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator~(_Ios_Fmtflags __a)
  { return _Ios_Fmtflags(~static_cast<int>(__a)); }
    654e:	55                   	push   %rbp
    654f:	48 89 e5             	mov    %rsp,%rbp
    6552:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6555:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6558:	f7 d0                	not    %eax
    655a:	5d                   	pop    %rbp
    655b:	c3                   	ret

000000000000655c <_ZStoRRSt13_Ios_FmtflagsS_>:

  inline const _Ios_Fmtflags&
  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a | __b; }
    655c:	55                   	push   %rbp
    655d:	48 89 e5             	mov    %rsp,%rbp
    6560:	48 83 ec 10          	sub    $0x10,%rsp
    6564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6568:	89 75 f4             	mov    %esi,-0xc(%rbp)
    656b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    656f:	8b 00                	mov    (%rax),%eax
    6571:	8b 55 f4             	mov    -0xc(%rbp),%edx
    6574:	89 d6                	mov    %edx,%esi
    6576:	89 c7                	mov    %eax,%edi
    6578:	e8 bf ff ff ff       	call   653c <_ZStorSt13_Ios_FmtflagsS_>
    657d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6581:	89 02                	mov    %eax,(%rdx)
    6583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6587:	c9                   	leave
    6588:	c3                   	ret

0000000000006589 <_ZStaNRSt13_Ios_FmtflagsS_>:

  inline const _Ios_Fmtflags&
  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a & __b; }
    6589:	55                   	push   %rbp
    658a:	48 89 e5             	mov    %rsp,%rbp
    658d:	48 83 ec 10          	sub    $0x10,%rsp
    6591:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6595:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6598:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    659c:	8b 00                	mov    (%rax),%eax
    659e:	8b 55 f4             	mov    -0xc(%rbp),%edx
    65a1:	89 d6                	mov    %edx,%esi
    65a3:	89 c7                	mov    %eax,%edi
    65a5:	e8 80 ff ff ff       	call   652a <_ZStanSt13_Ios_FmtflagsS_>
    65aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    65ae:	89 02                	mov    %eax,(%rdx)
    65b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b4:	c9                   	leave
    65b5:	c3                   	ret

00000000000065b6 <_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_>:
     *
     *  This function clears @a mask in the format flags, then sets
     *  @a fmtfl @c & @a mask.  An example mask is @c ios_base::adjustfield.
    */
    fmtflags
    setf(fmtflags __fmtfl, fmtflags __mask)
    65b6:	55                   	push   %rbp
    65b7:	48 89 e5             	mov    %rsp,%rbp
    65ba:	48 83 ec 20          	sub    $0x20,%rsp
    65be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65c2:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    65c5:	89 55 e0             	mov    %edx,-0x20(%rbp)
    {
      fmtflags __old = _M_flags;
    65c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65cc:	8b 40 18             	mov    0x18(%rax),%eax
    65cf:	89 45 fc             	mov    %eax,-0x4(%rbp)
      _M_flags &= ~__mask;
    65d2:	8b 45 e0             	mov    -0x20(%rbp),%eax
    65d5:	89 c7                	mov    %eax,%edi
    65d7:	e8 72 ff ff ff       	call   654e <_ZStcoSt13_Ios_Fmtflags>
    65dc:	89 c2                	mov    %eax,%edx
    65de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65e2:	48 83 c0 18          	add    $0x18,%rax
    65e6:	89 d6                	mov    %edx,%esi
    65e8:	48 89 c7             	mov    %rax,%rdi
    65eb:	e8 99 ff ff ff       	call   6589 <_ZStaNRSt13_Ios_FmtflagsS_>
      _M_flags |= (__fmtfl & __mask);
    65f0:	8b 55 e0             	mov    -0x20(%rbp),%edx
    65f3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    65f6:	89 d6                	mov    %edx,%esi
    65f8:	89 c7                	mov    %eax,%edi
    65fa:	e8 2b ff ff ff       	call   652a <_ZStanSt13_Ios_FmtflagsS_>
    65ff:	89 c2                	mov    %eax,%edx
    6601:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6605:	48 83 c0 18          	add    $0x18,%rax
    6609:	89 d6                	mov    %edx,%esi
    660b:	48 89 c7             	mov    %rax,%rdi
    660e:	e8 49 ff ff ff       	call   655c <_ZStoRRSt13_Ios_FmtflagsS_>
      return __old;
    6613:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
    6616:	c9                   	leave
    6617:	c3                   	ret

0000000000006618 <_ZSt3hexRSt8ios_base>:
  }

  /// Calls base.setf(ios_base::hex, ios_base::basefield).
  inline ios_base&
  hex(ios_base& __base)
  {
    6618:	55                   	push   %rbp
    6619:	48 89 e5             	mov    %rsp,%rbp
    661c:	48 83 ec 10          	sub    $0x10,%rsp
    6620:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    __base.setf(ios_base::hex, ios_base::basefield);
    6624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6628:	ba 4a 00 00 00       	mov    $0x4a,%edx
    662d:	be 08 00 00 00       	mov    $0x8,%esi
    6632:	48 89 c7             	mov    %rax,%rdi
    6635:	e8 7c ff ff ff       	call   65b6 <_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_>
    return __base;
    663a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  }
    663e:	c9                   	leave
    663f:	c3                   	ret

0000000000006640 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      struct _Alloc_hider : allocator_type // TODO check __is_final
    6640:	55                   	push   %rbp
    6641:	48 89 e5             	mov    %rsp,%rbp
    6644:	48 83 ec 10          	sub    $0x10,%rsp
    6648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    664c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6650:	48 89 c7             	mov    %rax,%rdi
    6653:	e8 e8 e9 ff ff       	call   5040 <_ZNSaIcED2Ev@plt>
    6658:	90                   	nop
    6659:	c9                   	leave
    665a:	c3                   	ret
    665b:	90                   	nop

000000000000665c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
      basic_string()
    665c:	55                   	push   %rbp
    665d:	48 89 e5             	mov    %rsp,%rbp
    6660:	53                   	push   %rbx
    6661:	48 83 ec 48          	sub    $0x48,%rsp
    6665:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
      : _M_dataplus(_M_local_data())
    6669:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
    666d:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    6671:	48 89 c7             	mov    %rax,%rdi
    6674:	e8 b7 ec ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6679:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    667d:	48 89 c7             	mov    %rax,%rdi
    6680:	e8 97 00 00 00       	call   671c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6685:	48 89 c1             	mov    %rax,%rcx
    6688:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    668c:	48 89 c2             	mov    %rax,%rdx
    668f:	48 89 ce             	mov    %rcx,%rsi
    6692:	48 89 df             	mov    %rbx,%rdi
    6695:	e8 e2 00 00 00       	call   677c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
    669a:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    669e:	48 89 c7             	mov    %rax,%rdi
    66a1:	e8 7a eb ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    66a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    66aa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::is_constant_evaluated())
    66ae:	e8 78 fa ff ff       	call   612b <_ZSt21is_constant_evaluatedv>
    66b3:	84 c0                	test   %al,%al
    66b5:	74 40                	je     66f7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x9b>
	  for (_CharT& __c : _M_local_buf)
    66b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66bb:	48 83 c0 10          	add    $0x10,%rax
    66bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    66c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66c7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    66cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66cf:	48 83 c0 10          	add    $0x10,%rax
    66d3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    66d7:	eb 14                	jmp    66ed <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x91>
    66d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66dd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	    __c = _CharT();
    66e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    66e5:	c6 00 00             	movb   $0x0,(%rax)
	  for (_CharT& __c : _M_local_buf)
    66e8:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    66ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    66f1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    66f5:	75 e2                	jne    66d9 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x7d>
	return _M_local_data();
    66f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66fb:	48 89 c7             	mov    %rax,%rdi
    66fe:	e8 19 00 00 00       	call   671c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6703:	90                   	nop
	_M_set_length(0);
    6704:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6708:	be 00 00 00 00       	mov    $0x0,%esi
    670d:	48 89 c7             	mov    %rax,%rdi
    6710:	e8 21 33 00 00       	call   9a36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    6715:	90                   	nop
    6716:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    671a:	c9                   	leave
    671b:	c3                   	ret

000000000000671c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      _M_local_data()
    671c:	55                   	push   %rbp
    671d:	48 89 e5             	mov    %rsp,%rbp
    6720:	48 83 ec 10          	sub    $0x10,%rsp
    6724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
    6728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    672c:	48 83 c0 10          	add    $0x10,%rax
    6730:	48 89 c7             	mov    %rax,%rdi
    6733:	e8 02 00 00 00       	call   673a <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>
      }
    6738:	c9                   	leave
    6739:	c3                   	ret

000000000000673a <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>:
       *  @brief  Obtain a pointer to an object
       *  @param  __r  A reference to an object of type `element_type`
       *  @return `addressof(__r)`
      */
      static _GLIBCXX20_CONSTEXPR pointer
      pointer_to(element_type& __r) noexcept
    673a:	55                   	push   %rbp
    673b:	48 89 e5             	mov    %rsp,%rbp
    673e:	48 83 ec 10          	sub    $0x10,%rsp
    6742:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return std::addressof(__r); }
    6746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    674a:	48 89 c7             	mov    %rax,%rdi
    674d:	e8 02 00 00 00       	call   6754 <_ZSt9addressofIcEPT_RS0_>
    6752:	c9                   	leave
    6753:	c3                   	ret

0000000000006754 <_ZSt9addressofIcEPT_RS0_>:
   *  @return   The actual address.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
    6754:	55                   	push   %rbp
    6755:	48 89 e5             	mov    %rsp,%rbp
    6758:	48 83 ec 10          	sub    $0x10,%rsp
    675c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__addressof(__r); }
    6760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6764:	48 89 c7             	mov    %rax,%rdi
    6767:	e8 02 00 00 00       	call   676e <_ZSt11__addressofIcEPT_RS0_>
    676c:	c9                   	leave
    676d:	c3                   	ret

000000000000676e <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    676e:	55                   	push   %rbp
    676f:	48 89 e5             	mov    %rsp,%rbp
    6772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    677a:	5d                   	pop    %rbp
    677b:	c3                   	ret

000000000000677c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>:
	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
    677c:	55                   	push   %rbp
    677d:	48 89 e5             	mov    %rsp,%rbp
    6780:	48 83 ec 20          	sub    $0x20,%rsp
    6784:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6788:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    678c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    6790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6794:	48 89 c7             	mov    %rax,%rdi
    6797:	e8 20 00 00 00       	call   67bc <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>
    679c:	48 89 c2             	mov    %rax,%rdx
    679f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67a3:	48 89 d6             	mov    %rdx,%rsi
    67a6:	48 89 c7             	mov    %rax,%rdi
    67a9:	e8 f2 ea ff ff       	call   52a0 <_ZNSaIcEC2ERKS_@plt>
    67ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67b6:	48 89 10             	mov    %rdx,(%rax)
    67b9:	90                   	nop
    67ba:	c9                   	leave
    67bb:	c3                   	ret

00000000000067bc <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    67bc:	55                   	push   %rbp
    67bd:	48 89 e5             	mov    %rsp,%rbp
    67c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    67c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c8:	5d                   	pop    %rbp
    67c9:	c3                   	ret

00000000000067ca <_ZNK2vk17ErrorCategoryImpl4nameEv>:
    virtual const char * name() const VULKAN_HPP_NOEXCEPT override
    67ca:	55                   	push   %rbp
    67cb:	48 89 e5             	mov    %rsp,%rbp
    67ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return VULKAN_HPP_NAMESPACE_STRING "::Result";
    67d2:	48 8d 05 d6 9e 00 00 	lea    0x9ed6(%rip),%rax        # 106af <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x77>
    }
    67d9:	5d                   	pop    %rbp
    67da:	c3                   	ret
    67db:	90                   	nop

00000000000067dc <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei>:
    virtual std::string message( int ev ) const override
    67dc:	55                   	push   %rbp
    67dd:	48 89 e5             	mov    %rsp,%rbp
    67e0:	41 54                	push   %r12
    67e2:	53                   	push   %rbx
    67e3:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
    67ea:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
    67f1:	48 89 b5 e0 fd ff ff 	mov    %rsi,-0x220(%rbp)
    67f8:	89 95 dc fd ff ff    	mov    %edx,-0x224(%rbp)
    67fe:	8b 85 dc fd ff ff    	mov    -0x224(%rbp),%eax
    6804:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6807:	48 8b 9d e8 fd ff ff 	mov    -0x218(%rbp),%rbx

  //=== VK_VERSION_1_0 ===

  VULKAN_HPP_INLINE std::string to_string( Result value )
  {
    switch ( value )
    680e:	81 7d ec 28 52 9f 3b 	cmpl   $0x3b9f5228,-0x14(%rbp)
    6815:	0f 84 eb 06 00 00    	je     6f06 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x72a>
    681b:	81 7d ec 28 52 9f 3b 	cmpl   $0x3b9f5228,-0x14(%rbp)
    6822:	0f 8f 08 0a 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6828:	81 7d ec e3 e0 9e 3b 	cmpl   $0x3b9ee0e3,-0x14(%rbp)
    682f:	0f 84 8f 09 00 00    	je     71c4 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x9e8>
    6835:	81 7d ec e3 e0 9e 3b 	cmpl   $0x3b9ee0e3,-0x14(%rbp)
    683c:	0f 8f ee 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6842:	81 7d ec e2 e0 9e 3b 	cmpl   $0x3b9ee0e2,-0x14(%rbp)
    6849:	0f 84 3f 09 00 00    	je     718e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x9b2>
    684f:	81 7d ec e2 e0 9e 3b 	cmpl   $0x3b9ee0e2,-0x14(%rbp)
    6856:	0f 8f d4 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    685c:	81 7d ec e1 e0 9e 3b 	cmpl   $0x3b9ee0e1,-0x14(%rbp)
    6863:	0f 84 ef 08 00 00    	je     7158 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x97c>
    6869:	81 7d ec e1 e0 9e 3b 	cmpl   $0x3b9ee0e1,-0x14(%rbp)
    6870:	0f 8f ba 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6876:	81 7d ec e0 e0 9e 3b 	cmpl   $0x3b9ee0e0,-0x14(%rbp)
    687d:	0f 84 9f 08 00 00    	je     7122 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x946>
    6883:	81 7d ec e0 e0 9e 3b 	cmpl   $0x3b9ee0e0,-0x14(%rbp)
    688a:	0f 8f a0 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6890:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    6897:	0f 84 0b 07 00 00    	je     6fa8 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x7cc>
    689d:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    68a4:	0f 8f 86 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68aa:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    68ae:	0f 8f 7c 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68b4:	83 7d ec f3          	cmpl   $0xfffffff3,-0x14(%rbp)
    68b8:	0f 8d 3d 01 00 00    	jge    69fb <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x21f>
    68be:	81 7d ec 00 36 65 c4 	cmpl   $0xc4653600,-0x14(%rbp)
    68c5:	0f 84 71 06 00 00    	je     6f3c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x760>
    68cb:	81 7d ec 00 36 65 c4 	cmpl   $0xc4653600,-0x14(%rbp)
    68d2:	0f 8f 58 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68d8:	81 7d ec ff 35 65 c4 	cmpl   $0xc46535ff,-0x14(%rbp)
    68df:	0f 84 8d 06 00 00    	je     6f72 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x796>
    68e5:	81 7d ec ff 35 65 c4 	cmpl   $0xc46535ff,-0x14(%rbp)
    68ec:	0f 8f 3e 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68f2:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    68f9:	0f 84 df 06 00 00    	je     6fde <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x802>
    68ff:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    6906:	0f 8f 24 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    690c:	81 7d ec 47 2a 65 c4 	cmpl   $0xc4652a47,-0x14(%rbp)
    6913:	0f 84 fb 06 00 00    	je     7014 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x838>
    6919:	81 7d ec 47 2a 65 c4 	cmpl   $0xc4652a47,-0x14(%rbp)
    6920:	0f 8f 0a 09 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6926:	81 7d ec 07 0b 65 c4 	cmpl   $0xc4650b07,-0x14(%rbp)
    692d:	0f 84 17 07 00 00    	je     704a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x86e>
    6933:	81 7d ec 07 0b 65 c4 	cmpl   $0xc4650b07,-0x14(%rbp)
    693a:	0f 8f f0 08 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6940:	81 7d ec 20 07 65 c4 	cmpl   $0xc4650720,-0x14(%rbp)
    6947:	0f 84 33 07 00 00    	je     7080 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x8a4>
    694d:	81 7d ec 20 07 65 c4 	cmpl   $0xc4650720,-0x14(%rbp)
    6954:	0f 8f d6 08 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    695a:	81 7d ec 78 28 64 c4 	cmpl   $0xc4642878,-0x14(%rbp)
    6961:	0f 84 c7 04 00 00    	je     6e2e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x652>
    6967:	81 7d ec 78 28 64 c4 	cmpl   $0xc4642878,-0x14(%rbp)
    696e:	0f 8f bc 08 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6974:	81 7d ec bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x14(%rbp)
    697b:	0f 84 e3 04 00 00    	je     6e64 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x688>
    6981:	81 7d ec bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x14(%rbp)
    6988:	0f 8f a2 08 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    698e:	81 7d ec d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x14(%rbp)
    6995:	0f 84 1b 07 00 00    	je     70b6 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x8da>
    699b:	81 7d ec d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x14(%rbp)
    69a2:	0f 8f 88 08 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69a8:	81 7d ec 18 c1 62 c4 	cmpl   $0xc462c118,-0x14(%rbp)
    69af:	0f 84 e5 04 00 00    	je     6e9a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x6be>
    69b5:	81 7d ec 18 c1 62 c4 	cmpl   $0xc462c118,-0x14(%rbp)
    69bc:	0f 8f 6e 08 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69c2:	81 7d ec 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x14(%rbp)
    69c9:	0f 84 1d 07 00 00    	je     70ec <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x910>
    69cf:	81 7d ec 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x14(%rbp)
    69d6:	0f 8f 54 08 00 00    	jg     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69dc:	81 7d ec b0 0d 60 c4 	cmpl   $0xc4600db0,-0x14(%rbp)
    69e3:	0f 84 11 08 00 00    	je     71fa <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa1e>
    69e9:	81 7d ec 18 4a 61 c4 	cmpl   $0xc4614a18,-0x14(%rbp)
    69f0:	0f 84 da 04 00 00    	je     6ed0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x6f4>
    69f6:	e9 35 08 00 00       	jmp    7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69fb:	8b 45 ec             	mov    -0x14(%rbp),%eax
    69fe:	83 c0 0d             	add    $0xd,%eax
    6a01:	83 f8 12             	cmp    $0x12,%eax
    6a04:	0f 87 26 08 00 00    	ja     7230 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a0a:	89 c0                	mov    %eax,%eax
    6a0c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    6a13:	00 
    6a14:	48 8d 05 fd a2 00 00 	lea    0xa2fd(%rip),%rax        # 10d18 <_ZNSt8__detailL19__atomic_spin_countE+0x2b4>
    6a1b:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    6a1e:	48 98                	cltq
    6a20:	48 8d 15 f1 a2 00 00 	lea    0xa2f1(%rip),%rdx        # 10d18 <_ZNSt8__detailL19__atomic_spin_countE+0x2b4>
    6a27:	48 01 d0             	add    %rdx,%rax
    6a2a:	ff e0                	jmp    *%rax
    {
      case Result::eSuccess: return "Success";
    6a2c:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a30:	48 89 c7             	mov    %rax,%rdi
    6a33:	e8 f8 e8 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6a38:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a3c:	48 89 c2             	mov    %rax,%rdx
    6a3f:	48 8d 05 74 9c 00 00 	lea    0x9c74(%rip),%rax        # 106ba <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x82>
    6a46:	48 89 c6             	mov    %rax,%rsi
    6a49:	48 89 df             	mov    %rbx,%rdi
    6a4c:	e8 45 2f 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6a51:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a55:	48 89 c7             	mov    %rax,%rdi
    6a58:	e8 c3 e7 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
      return VULKAN_HPP_NAMESPACE::to_string( static_cast<VULKAN_HPP_NAMESPACE::Result>( ev ) );
    6a5d:	e9 aa 0c 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eNotReady: return "NotReady";
    6a62:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a66:	48 89 c7             	mov    %rax,%rdi
    6a69:	e8 c2 e8 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6a6e:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a72:	48 89 c2             	mov    %rax,%rdx
    6a75:	48 8d 05 46 9c 00 00 	lea    0x9c46(%rip),%rax        # 106c2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8a>
    6a7c:	48 89 c6             	mov    %rax,%rsi
    6a7f:	48 89 df             	mov    %rbx,%rdi
    6a82:	e8 0f 2f 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6a87:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a8b:	48 89 c7             	mov    %rax,%rdi
    6a8e:	e8 8d e7 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6a93:	e9 74 0c 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eTimeout: return "Timeout";
    6a98:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6a9c:	48 89 c7             	mov    %rax,%rdi
    6a9f:	e8 8c e8 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6aa4:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6aa8:	48 89 c2             	mov    %rax,%rdx
    6aab:	48 8d 05 19 9c 00 00 	lea    0x9c19(%rip),%rax        # 106cb <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    6ab2:	48 89 c6             	mov    %rax,%rsi
    6ab5:	48 89 df             	mov    %rbx,%rdi
    6ab8:	e8 d9 2e 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6abd:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6ac1:	48 89 c7             	mov    %rax,%rdi
    6ac4:	e8 57 e7 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6ac9:	e9 3e 0c 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eEventSet: return "EventSet";
    6ace:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6ad2:	48 89 c7             	mov    %rax,%rdi
    6ad5:	e8 56 e8 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6ada:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6ade:	48 89 c2             	mov    %rax,%rdx
    6ae1:	48 8d 05 eb 9b 00 00 	lea    0x9beb(%rip),%rax        # 106d3 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9b>
    6ae8:	48 89 c6             	mov    %rax,%rsi
    6aeb:	48 89 df             	mov    %rbx,%rdi
    6aee:	e8 a3 2e 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6af3:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6af7:	48 89 c7             	mov    %rax,%rdi
    6afa:	e8 21 e7 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6aff:	e9 08 0c 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eEventReset: return "EventReset";
    6b04:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6b08:	48 89 c7             	mov    %rax,%rdi
    6b0b:	e8 20 e8 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6b10:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6b14:	48 89 c2             	mov    %rax,%rdx
    6b17:	48 8d 05 be 9b 00 00 	lea    0x9bbe(%rip),%rax        # 106dc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa4>
    6b1e:	48 89 c6             	mov    %rax,%rsi
    6b21:	48 89 df             	mov    %rbx,%rdi
    6b24:	e8 6d 2e 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b29:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6b2d:	48 89 c7             	mov    %rax,%rdi
    6b30:	e8 eb e6 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6b35:	e9 d2 0b 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eIncomplete: return "Incomplete";
    6b3a:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b3e:	48 89 c7             	mov    %rax,%rdi
    6b41:	e8 ea e7 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6b46:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b4a:	48 89 c2             	mov    %rax,%rdx
    6b4d:	48 8d 05 93 9b 00 00 	lea    0x9b93(%rip),%rax        # 106e7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xaf>
    6b54:	48 89 c6             	mov    %rax,%rsi
    6b57:	48 89 df             	mov    %rbx,%rdi
    6b5a:	e8 37 2e 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b5f:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b63:	48 89 c7             	mov    %rax,%rdi
    6b66:	e8 b5 e6 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6b6b:	e9 9c 0b 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfHostMemory: return "ErrorOutOfHostMemory";
    6b70:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b74:	48 89 c7             	mov    %rax,%rdi
    6b77:	e8 b4 e7 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6b7c:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b80:	48 89 c2             	mov    %rax,%rdx
    6b83:	48 8d 05 68 9b 00 00 	lea    0x9b68(%rip),%rax        # 106f2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xba>
    6b8a:	48 89 c6             	mov    %rax,%rsi
    6b8d:	48 89 df             	mov    %rbx,%rdi
    6b90:	e8 01 2e 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b95:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b99:	48 89 c7             	mov    %rax,%rdi
    6b9c:	e8 7f e6 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6ba1:	e9 66 0b 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfDeviceMemory: return "ErrorOutOfDeviceMemory";
    6ba6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6baa:	48 89 c7             	mov    %rax,%rdi
    6bad:	e8 7e e7 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6bb2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6bb6:	48 89 c2             	mov    %rax,%rdx
    6bb9:	48 8d 05 47 9b 00 00 	lea    0x9b47(%rip),%rax        # 10707 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xcf>
    6bc0:	48 89 c6             	mov    %rax,%rsi
    6bc3:	48 89 df             	mov    %rbx,%rdi
    6bc6:	e8 cb 2d 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6bcb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6bcf:	48 89 c7             	mov    %rax,%rdi
    6bd2:	e8 49 e6 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6bd7:	e9 30 0b 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInitializationFailed: return "ErrorInitializationFailed";
    6bdc:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6be0:	48 89 c7             	mov    %rax,%rdi
    6be3:	e8 48 e7 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6be8:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6bec:	48 89 c2             	mov    %rax,%rdx
    6bef:	48 8d 05 28 9b 00 00 	lea    0x9b28(%rip),%rax        # 1071e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe6>
    6bf6:	48 89 c6             	mov    %rax,%rsi
    6bf9:	48 89 df             	mov    %rbx,%rdi
    6bfc:	e8 95 2d 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c01:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6c05:	48 89 c7             	mov    %rax,%rdi
    6c08:	e8 13 e6 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6c0d:	e9 fa 0a 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorDeviceLost: return "ErrorDeviceLost";
    6c12:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6c16:	48 89 c7             	mov    %rax,%rdi
    6c19:	e8 12 e7 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6c1e:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6c22:	48 89 c2             	mov    %rax,%rdx
    6c25:	48 8d 05 0c 9b 00 00 	lea    0x9b0c(%rip),%rax        # 10738 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x100>
    6c2c:	48 89 c6             	mov    %rax,%rsi
    6c2f:	48 89 df             	mov    %rbx,%rdi
    6c32:	e8 5f 2d 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c37:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6c3b:	48 89 c7             	mov    %rax,%rdi
    6c3e:	e8 dd e5 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6c43:	e9 c4 0a 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorMemoryMapFailed: return "ErrorMemoryMapFailed";
    6c48:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c4c:	48 89 c7             	mov    %rax,%rdi
    6c4f:	e8 dc e6 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6c54:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c58:	48 89 c2             	mov    %rax,%rdx
    6c5b:	48 8d 05 e6 9a 00 00 	lea    0x9ae6(%rip),%rax        # 10748 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x110>
    6c62:	48 89 c6             	mov    %rax,%rsi
    6c65:	48 89 df             	mov    %rbx,%rdi
    6c68:	e8 29 2d 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c6d:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c71:	48 89 c7             	mov    %rax,%rdi
    6c74:	e8 a7 e5 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6c79:	e9 8e 0a 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorLayerNotPresent: return "ErrorLayerNotPresent";
    6c7e:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6c82:	48 89 c7             	mov    %rax,%rdi
    6c85:	e8 a6 e6 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6c8a:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6c8e:	48 89 c2             	mov    %rax,%rdx
    6c91:	48 8d 05 c5 9a 00 00 	lea    0x9ac5(%rip),%rax        # 1075d <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x125>
    6c98:	48 89 c6             	mov    %rax,%rsi
    6c9b:	48 89 df             	mov    %rbx,%rdi
    6c9e:	e8 f3 2c 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ca3:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6ca7:	48 89 c7             	mov    %rax,%rdi
    6caa:	e8 71 e5 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6caf:	e9 58 0a 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorExtensionNotPresent: return "ErrorExtensionNotPresent";
    6cb4:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6cb8:	48 89 c7             	mov    %rax,%rdi
    6cbb:	e8 70 e6 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6cc0:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6cc4:	48 89 c2             	mov    %rax,%rdx
    6cc7:	48 8d 05 a4 9a 00 00 	lea    0x9aa4(%rip),%rax        # 10772 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x13a>
    6cce:	48 89 c6             	mov    %rax,%rsi
    6cd1:	48 89 df             	mov    %rbx,%rdi
    6cd4:	e8 bd 2c 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6cd9:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6cdd:	48 89 c7             	mov    %rax,%rdi
    6ce0:	e8 3b e5 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6ce5:	e9 22 0a 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFeatureNotPresent: return "ErrorFeatureNotPresent";
    6cea:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6cee:	48 89 c7             	mov    %rax,%rdi
    6cf1:	e8 3a e6 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6cf6:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6cfa:	48 89 c2             	mov    %rax,%rdx
    6cfd:	48 8d 05 87 9a 00 00 	lea    0x9a87(%rip),%rax        # 1078b <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x153>
    6d04:	48 89 c6             	mov    %rax,%rsi
    6d07:	48 89 df             	mov    %rbx,%rdi
    6d0a:	e8 87 2c 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d0f:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6d13:	48 89 c7             	mov    %rax,%rdi
    6d16:	e8 05 e5 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6d1b:	e9 ec 09 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorIncompatibleDriver: return "ErrorIncompatibleDriver";
    6d20:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d24:	48 89 c7             	mov    %rax,%rdi
    6d27:	e8 04 e6 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6d2c:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d30:	48 89 c2             	mov    %rax,%rdx
    6d33:	48 8d 05 68 9a 00 00 	lea    0x9a68(%rip),%rax        # 107a2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x16a>
    6d3a:	48 89 c6             	mov    %rax,%rsi
    6d3d:	48 89 df             	mov    %rbx,%rdi
    6d40:	e8 51 2c 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d45:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d49:	48 89 c7             	mov    %rax,%rdi
    6d4c:	e8 cf e4 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6d51:	e9 b6 09 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorTooManyObjects: return "ErrorTooManyObjects";
    6d56:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d5a:	48 89 c7             	mov    %rax,%rdi
    6d5d:	e8 ce e5 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6d62:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d66:	48 89 c2             	mov    %rax,%rdx
    6d69:	48 8d 05 4a 9a 00 00 	lea    0x9a4a(%rip),%rax        # 107ba <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x182>
    6d70:	48 89 c6             	mov    %rax,%rsi
    6d73:	48 89 df             	mov    %rbx,%rdi
    6d76:	e8 1b 2c 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d7b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d7f:	48 89 c7             	mov    %rax,%rdi
    6d82:	e8 99 e4 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6d87:	e9 80 09 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFormatNotSupported: return "ErrorFormatNotSupported";
    6d8c:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6d90:	48 89 c7             	mov    %rax,%rdi
    6d93:	e8 98 e5 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6d98:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6d9c:	48 89 c2             	mov    %rax,%rdx
    6d9f:	48 8d 05 28 9a 00 00 	lea    0x9a28(%rip),%rax        # 107ce <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x196>
    6da6:	48 89 c6             	mov    %rax,%rsi
    6da9:	48 89 df             	mov    %rbx,%rdi
    6dac:	e8 e5 2b 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6db1:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6db5:	48 89 c7             	mov    %rax,%rdi
    6db8:	e8 63 e4 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6dbd:	e9 4a 09 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFragmentedPool: return "ErrorFragmentedPool";
    6dc2:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6dc6:	48 89 c7             	mov    %rax,%rdi
    6dc9:	e8 62 e5 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6dce:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6dd2:	48 89 c2             	mov    %rax,%rdx
    6dd5:	48 8d 05 0a 9a 00 00 	lea    0x9a0a(%rip),%rax        # 107e6 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1ae>
    6ddc:	48 89 c6             	mov    %rax,%rsi
    6ddf:	48 89 df             	mov    %rbx,%rdi
    6de2:	e8 af 2b 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6de7:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6deb:	48 89 c7             	mov    %rax,%rdi
    6dee:	e8 2d e4 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6df3:	e9 14 09 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorUnknown: return "ErrorUnknown";
    6df8:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6dfc:	48 89 c7             	mov    %rax,%rdi
    6dff:	e8 2c e5 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6e04:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6e08:	48 89 c2             	mov    %rax,%rdx
    6e0b:	48 8d 05 e8 99 00 00 	lea    0x99e8(%rip),%rax        # 107fa <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c2>
    6e12:	48 89 c6             	mov    %rax,%rsi
    6e15:	48 89 df             	mov    %rbx,%rdi
    6e18:	e8 79 2b 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e1d:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6e21:	48 89 c7             	mov    %rax,%rdi
    6e24:	e8 f7 e3 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6e29:	e9 de 08 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfPoolMemory: return "ErrorOutOfPoolMemory";
    6e2e:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e32:	48 89 c7             	mov    %rax,%rdi
    6e35:	e8 f6 e4 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6e3a:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e3e:	48 89 c2             	mov    %rax,%rdx
    6e41:	48 8d 05 bf 99 00 00 	lea    0x99bf(%rip),%rax        # 10807 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1cf>
    6e48:	48 89 c6             	mov    %rax,%rsi
    6e4b:	48 89 df             	mov    %rbx,%rdi
    6e4e:	e8 43 2b 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e53:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e57:	48 89 c7             	mov    %rax,%rdi
    6e5a:	e8 c1 e3 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6e5f:	e9 a8 08 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidExternalHandle: return "ErrorInvalidExternalHandle";
    6e64:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e68:	48 89 c7             	mov    %rax,%rdi
    6e6b:	e8 c0 e4 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6e70:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e74:	48 89 c2             	mov    %rax,%rdx
    6e77:	48 8d 05 9e 99 00 00 	lea    0x999e(%rip),%rax        # 1081c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1e4>
    6e7e:	48 89 c6             	mov    %rax,%rsi
    6e81:	48 89 df             	mov    %rbx,%rdi
    6e84:	e8 0d 2b 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e89:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e8d:	48 89 c7             	mov    %rax,%rdi
    6e90:	e8 8b e3 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6e95:	e9 72 08 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFragmentation: return "ErrorFragmentation";
    6e9a:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6e9e:	48 89 c7             	mov    %rax,%rdi
    6ea1:	e8 8a e4 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6ea6:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6eaa:	48 89 c2             	mov    %rax,%rdx
    6ead:	48 8d 05 83 99 00 00 	lea    0x9983(%rip),%rax        # 10837 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1ff>
    6eb4:	48 89 c6             	mov    %rax,%rsi
    6eb7:	48 89 df             	mov    %rbx,%rdi
    6eba:	e8 d7 2a 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ebf:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6ec3:	48 89 c7             	mov    %rax,%rdi
    6ec6:	e8 55 e3 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6ecb:	e9 3c 08 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidOpaqueCaptureAddress: return "ErrorInvalidOpaqueCaptureAddress";
    6ed0:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6ed4:	48 89 c7             	mov    %rax,%rdi
    6ed7:	e8 54 e4 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6edc:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6ee0:	48 89 c2             	mov    %rax,%rdx
    6ee3:	48 8d 05 66 99 00 00 	lea    0x9966(%rip),%rax        # 10850 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x218>
    6eea:	48 89 c6             	mov    %rax,%rsi
    6eed:	48 89 df             	mov    %rbx,%rdi
    6ef0:	e8 a1 2a 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ef5:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6ef9:	48 89 c7             	mov    %rax,%rdi
    6efc:	e8 1f e3 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6f01:	e9 06 08 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::ePipelineCompileRequired: return "PipelineCompileRequired";
    6f06:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6f0a:	48 89 c7             	mov    %rax,%rdi
    6f0d:	e8 1e e4 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6f12:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6f16:	48 89 c2             	mov    %rax,%rdx
    6f19:	48 8d 05 51 99 00 00 	lea    0x9951(%rip),%rax        # 10871 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x239>
    6f20:	48 89 c6             	mov    %rax,%rsi
    6f23:	48 89 df             	mov    %rbx,%rdi
    6f26:	e8 6b 2a 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f2b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6f2f:	48 89 c7             	mov    %rax,%rdi
    6f32:	e8 e9 e2 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6f37:	e9 d0 07 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorSurfaceLostKHR: return "ErrorSurfaceLostKHR";
    6f3c:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f40:	48 89 c7             	mov    %rax,%rdi
    6f43:	e8 e8 e3 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6f48:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f4c:	48 89 c2             	mov    %rax,%rdx
    6f4f:	48 8d 05 33 99 00 00 	lea    0x9933(%rip),%rax        # 10889 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x251>
    6f56:	48 89 c6             	mov    %rax,%rsi
    6f59:	48 89 df             	mov    %rbx,%rdi
    6f5c:	e8 35 2a 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f61:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f65:	48 89 c7             	mov    %rax,%rdi
    6f68:	e8 b3 e2 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6f6d:	e9 9a 07 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorNativeWindowInUseKHR: return "ErrorNativeWindowInUseKHR";
    6f72:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f76:	48 89 c7             	mov    %rax,%rdi
    6f79:	e8 b2 e3 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6f7e:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f82:	48 89 c2             	mov    %rax,%rdx
    6f85:	48 8d 05 11 99 00 00 	lea    0x9911(%rip),%rax        # 1089d <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x265>
    6f8c:	48 89 c6             	mov    %rax,%rsi
    6f8f:	48 89 df             	mov    %rbx,%rdi
    6f92:	e8 ff 29 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f97:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f9b:	48 89 c7             	mov    %rax,%rdi
    6f9e:	e8 7d e2 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6fa3:	e9 64 07 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eSuboptimalKHR: return "SuboptimalKHR";
    6fa8:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6fac:	48 89 c7             	mov    %rax,%rdi
    6faf:	e8 7c e3 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6fb4:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6fb8:	48 89 c2             	mov    %rax,%rdx
    6fbb:	48 8d 05 f5 98 00 00 	lea    0x98f5(%rip),%rax        # 108b7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x27f>
    6fc2:	48 89 c6             	mov    %rax,%rsi
    6fc5:	48 89 df             	mov    %rbx,%rdi
    6fc8:	e8 c9 29 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6fcd:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6fd1:	48 89 c7             	mov    %rax,%rdi
    6fd4:	e8 47 e2 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    6fd9:	e9 2e 07 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfDateKHR: return "ErrorOutOfDateKHR";
    6fde:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    6fe2:	48 89 c7             	mov    %rax,%rdi
    6fe5:	e8 46 e3 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    6fea:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    6fee:	48 89 c2             	mov    %rax,%rdx
    6ff1:	48 8d 05 cd 98 00 00 	lea    0x98cd(%rip),%rax        # 108c5 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28d>
    6ff8:	48 89 c6             	mov    %rax,%rsi
    6ffb:	48 89 df             	mov    %rbx,%rdi
    6ffe:	e8 93 29 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7003:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    7007:	48 89 c7             	mov    %rax,%rdi
    700a:	e8 11 e2 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    700f:	e9 f8 06 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorIncompatibleDisplayKHR: return "ErrorIncompatibleDisplayKHR";
    7014:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    7018:	48 89 c7             	mov    %rax,%rdi
    701b:	e8 10 e3 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    7020:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    7024:	48 89 c2             	mov    %rax,%rdx
    7027:	48 8d 05 a9 98 00 00 	lea    0x98a9(%rip),%rax        # 108d7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29f>
    702e:	48 89 c6             	mov    %rax,%rsi
    7031:	48 89 df             	mov    %rbx,%rdi
    7034:	e8 5d 29 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7039:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    703d:	48 89 c7             	mov    %rax,%rdi
    7040:	e8 db e1 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7045:	e9 c2 06 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorValidationFailedEXT: return "ErrorValidationFailedEXT";
    704a:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    704e:	48 89 c7             	mov    %rax,%rdi
    7051:	e8 da e2 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    7056:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    705a:	48 89 c2             	mov    %rax,%rdx
    705d:	48 8d 05 8f 98 00 00 	lea    0x988f(%rip),%rax        # 108f3 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2bb>
    7064:	48 89 c6             	mov    %rax,%rsi
    7067:	48 89 df             	mov    %rbx,%rdi
    706a:	e8 27 29 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    706f:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    7073:	48 89 c7             	mov    %rax,%rdi
    7076:	e8 a5 e1 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    707b:	e9 8c 06 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidShaderNV: return "ErrorInvalidShaderNV";
    7080:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7084:	48 89 c7             	mov    %rax,%rdi
    7087:	e8 a4 e2 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    708c:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7090:	48 89 c2             	mov    %rax,%rdx
    7093:	48 8d 05 72 98 00 00 	lea    0x9872(%rip),%rax        # 1090c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2d4>
    709a:	48 89 c6             	mov    %rax,%rsi
    709d:	48 89 df             	mov    %rbx,%rdi
    70a0:	e8 f1 28 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    70a5:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    70a9:	48 89 c7             	mov    %rax,%rdi
    70ac:	e8 6f e1 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    70b1:	e9 56 06 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorVideoProfileOperationNotSupportedKHR: return "ErrorVideoProfileOperationNotSupportedKHR";
      case Result::eErrorVideoProfileFormatNotSupportedKHR: return "ErrorVideoProfileFormatNotSupportedKHR";
      case Result::eErrorVideoProfileCodecNotSupportedKHR: return "ErrorVideoProfileCodecNotSupportedKHR";
      case Result::eErrorVideoStdVersionNotSupportedKHR: return "ErrorVideoStdVersionNotSupportedKHR";
#endif /*VK_ENABLE_BETA_EXTENSIONS*/
      case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: return "ErrorInvalidDrmFormatModifierPlaneLayoutEXT";
    70b6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    70ba:	48 89 c7             	mov    %rax,%rdi
    70bd:	e8 6e e2 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    70c2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    70c6:	48 89 c2             	mov    %rax,%rdx
    70c9:	48 8d 05 58 98 00 00 	lea    0x9858(%rip),%rax        # 10928 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f0>
    70d0:	48 89 c6             	mov    %rax,%rsi
    70d3:	48 89 df             	mov    %rbx,%rdi
    70d6:	e8 bb 28 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    70db:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    70df:	48 89 c7             	mov    %rax,%rdi
    70e2:	e8 39 e1 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    70e7:	e9 20 06 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorNotPermittedKHR: return "ErrorNotPermittedKHR";
    70ec:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70f0:	48 89 c7             	mov    %rax,%rdi
    70f3:	e8 38 e2 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    70f8:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70fc:	48 89 c2             	mov    %rax,%rdx
    70ff:	48 8d 05 4e 98 00 00 	lea    0x984e(%rip),%rax        # 10954 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x31c>
    7106:	48 89 c6             	mov    %rax,%rsi
    7109:	48 89 df             	mov    %rbx,%rdi
    710c:	e8 85 28 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7111:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    7115:	48 89 c7             	mov    %rax,%rdi
    7118:	e8 03 e1 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    711d:	e9 ea 05 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
#if defined( VK_USE_PLATFORM_WIN32_KHR )
      case Result::eErrorFullScreenExclusiveModeLostEXT: return "ErrorFullScreenExclusiveModeLostEXT";
#endif /*VK_USE_PLATFORM_WIN32_KHR*/
      case Result::eThreadIdleKHR: return "ThreadIdleKHR";
    7122:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7126:	48 89 c7             	mov    %rax,%rdi
    7129:	e8 02 e2 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    712e:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7132:	48 89 c2             	mov    %rax,%rdx
    7135:	48 8d 05 2d 98 00 00 	lea    0x982d(%rip),%rax        # 10969 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x331>
    713c:	48 89 c6             	mov    %rax,%rsi
    713f:	48 89 df             	mov    %rbx,%rdi
    7142:	e8 4f 28 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7147:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    714b:	48 89 c7             	mov    %rax,%rdi
    714e:	e8 cd e0 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7153:	e9 b4 05 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eThreadDoneKHR: return "ThreadDoneKHR";
    7158:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    715c:	48 89 c7             	mov    %rax,%rdi
    715f:	e8 cc e1 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    7164:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    7168:	48 89 c2             	mov    %rax,%rdx
    716b:	48 8d 05 05 98 00 00 	lea    0x9805(%rip),%rax        # 10977 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x33f>
    7172:	48 89 c6             	mov    %rax,%rsi
    7175:	48 89 df             	mov    %rbx,%rdi
    7178:	e8 19 28 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    717d:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    7181:	48 89 c7             	mov    %rax,%rdi
    7184:	e8 97 e0 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7189:	e9 7e 05 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eOperationDeferredKHR: return "OperationDeferredKHR";
    718e:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7192:	48 89 c7             	mov    %rax,%rdi
    7195:	e8 96 e1 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    719a:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    719e:	48 89 c2             	mov    %rax,%rdx
    71a1:	48 8d 05 dd 97 00 00 	lea    0x97dd(%rip),%rax        # 10985 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x34d>
    71a8:	48 89 c6             	mov    %rax,%rsi
    71ab:	48 89 df             	mov    %rbx,%rdi
    71ae:	e8 e3 27 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    71b3:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    71b7:	48 89 c7             	mov    %rax,%rdi
    71ba:	e8 61 e0 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    71bf:	e9 48 05 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eOperationNotDeferredKHR: return "OperationNotDeferredKHR";
    71c4:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71c8:	48 89 c7             	mov    %rax,%rdi
    71cb:	e8 60 e1 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    71d0:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71d4:	48 89 c2             	mov    %rax,%rdx
    71d7:	48 8d 05 bc 97 00 00 	lea    0x97bc(%rip),%rax        # 1099a <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x362>
    71de:	48 89 c6             	mov    %rax,%rsi
    71e1:	48 89 df             	mov    %rbx,%rdi
    71e4:	e8 ad 27 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    71e9:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71ed:	48 89 c7             	mov    %rax,%rdi
    71f0:	e8 2b e0 ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    71f5:	e9 12 05 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorCompressionExhaustedEXT: return "ErrorCompressionExhaustedEXT";
    71fa:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    71fe:	48 89 c7             	mov    %rax,%rdi
    7201:	e8 2a e1 ff ff       	call   5330 <_ZNSaIcEC1Ev@plt>
    7206:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    720a:	48 89 c2             	mov    %rax,%rdx
    720d:	48 8d 05 9e 97 00 00 	lea    0x979e(%rip),%rax        # 109b2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x37a>
    7214:	48 89 c6             	mov    %rax,%rsi
    7217:	48 89 df             	mov    %rbx,%rdi
    721a:	e8 77 27 00 00       	call   9996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    721f:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    7223:	48 89 c7             	mov    %rax,%rdi
    7226:	e8 f5 df ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    722b:	e9 dc 04 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    7230:	8b 45 ec             	mov    -0x14(%rbp),%eax
    7233:	89 45 e8             	mov    %eax,-0x18(%rbp)
    7236:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
    std::stringstream stream;
    723a:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    7241:	48 89 c7             	mov    %rax,%rdi
    7244:	e8 a7 de ff ff       	call   50f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    stream << std::hex << value;
    7249:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    7250:	48 83 c0 10          	add    $0x10,%rax
    7254:	48 8d 15 bd f3 ff ff 	lea    -0xc43(%rip),%rdx        # 6618 <_ZSt3hexRSt8ios_base>
    725b:	48 89 d6             	mov    %rdx,%rsi
    725e:	48 89 c7             	mov    %rax,%rdi
    7261:	e8 fa dd ff ff       	call   5060 <_ZNSolsEPFRSt8ios_baseS0_E@plt>
    7266:	48 89 c2             	mov    %rax,%rdx
    7269:	8b 45 e8             	mov    -0x18(%rbp),%eax
    726c:	89 c6                	mov    %eax,%esi
    726e:	48 89 d7             	mov    %rdx,%rdi
    7271:	e8 fa df ff ff       	call   5270 <_ZNSolsEj@plt>
    return stream.str();
    7276:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    727d:	48 89 c6             	mov    %rax,%rsi
    7280:	4c 89 e7             	mov    %r12,%rdi
    7283:	e8 c8 e0 ff ff       	call   5350 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>
    7288:	90                   	nop
  }
    7289:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    7290:	48 89 c7             	mov    %rax,%rdi
    7293:	e8 88 de ff ff       	call   5120 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    return stream.str();
    7298:	90                   	nop
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    7299:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    729d:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    72a1:	48 8d 0d 27 97 00 00 	lea    0x9727(%rip),%rcx        # 109cf <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x397>
    72a8:	48 89 ce             	mov    %rcx,%rsi
    72ab:	48 89 c7             	mov    %rax,%rdi
    72ae:	e8 99 26 00 00       	call   994c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    72b3:	eb 1a                	jmp    72cf <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xaf3>
  }
    72b5:	48 89 c3             	mov    %rax,%rbx
    72b8:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    72bf:	48 89 c7             	mov    %rax,%rdi
    72c2:	e8 59 de ff ff       	call   5120 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    72c7:	48 89 d8             	mov    %rbx,%rax
    72ca:	e9 35 04 00 00       	jmp    7704 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf28>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    72cf:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    72d3:	48 8d 15 00 97 00 00 	lea    0x9700(%rip),%rdx        # 109da <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a2>
    72da:	48 89 c6             	mov    %rax,%rsi
    72dd:	48 89 df             	mov    %rbx,%rdi
    72e0:	e8 9d 27 00 00       	call   9a82 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    72e5:	90                   	nop
    72e6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    72ea:	48 89 c7             	mov    %rax,%rdi
    72ed:	e8 0e 25 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    72f2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    72f6:	48 89 c7             	mov    %rax,%rdi
    72f9:	e8 02 25 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    72fe:	e9 09 04 00 00       	jmp    770c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eSuccess: return "Success";
    7303:	48 89 c3             	mov    %rax,%rbx
    7306:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    730a:	48 89 c7             	mov    %rax,%rdi
    730d:	e8 0e df ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7312:	48 89 d8             	mov    %rbx,%rax
    7315:	48 89 c7             	mov    %rax,%rdi
    7318:	e8 03 e0 ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eNotReady: return "NotReady";
    731d:	48 89 c3             	mov    %rax,%rbx
    7320:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    7324:	48 89 c7             	mov    %rax,%rdi
    7327:	e8 f4 de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    732c:	48 89 d8             	mov    %rbx,%rax
    732f:	48 89 c7             	mov    %rax,%rdi
    7332:	e8 e9 df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eTimeout: return "Timeout";
    7337:	48 89 c3             	mov    %rax,%rbx
    733a:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    733e:	48 89 c7             	mov    %rax,%rdi
    7341:	e8 da de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7346:	48 89 d8             	mov    %rbx,%rax
    7349:	48 89 c7             	mov    %rax,%rdi
    734c:	e8 cf df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eEventSet: return "EventSet";
    7351:	48 89 c3             	mov    %rax,%rbx
    7354:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    7358:	48 89 c7             	mov    %rax,%rdi
    735b:	e8 c0 de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7360:	48 89 d8             	mov    %rbx,%rax
    7363:	48 89 c7             	mov    %rax,%rdi
    7366:	e8 b5 df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eEventReset: return "EventReset";
    736b:	48 89 c3             	mov    %rax,%rbx
    736e:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    7372:	48 89 c7             	mov    %rax,%rdi
    7375:	e8 a6 de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    737a:	48 89 d8             	mov    %rbx,%rax
    737d:	48 89 c7             	mov    %rax,%rdi
    7380:	e8 9b df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eIncomplete: return "Incomplete";
    7385:	48 89 c3             	mov    %rax,%rbx
    7388:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    738c:	48 89 c7             	mov    %rax,%rdi
    738f:	e8 8c de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7394:	48 89 d8             	mov    %rbx,%rax
    7397:	48 89 c7             	mov    %rax,%rdi
    739a:	e8 81 df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorOutOfHostMemory: return "ErrorOutOfHostMemory";
    739f:	48 89 c3             	mov    %rax,%rbx
    73a2:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    73a6:	48 89 c7             	mov    %rax,%rdi
    73a9:	e8 72 de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    73ae:	48 89 d8             	mov    %rbx,%rax
    73b1:	48 89 c7             	mov    %rax,%rdi
    73b4:	e8 67 df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorOutOfDeviceMemory: return "ErrorOutOfDeviceMemory";
    73b9:	48 89 c3             	mov    %rax,%rbx
    73bc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    73c0:	48 89 c7             	mov    %rax,%rdi
    73c3:	e8 58 de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    73c8:	48 89 d8             	mov    %rbx,%rax
    73cb:	48 89 c7             	mov    %rax,%rdi
    73ce:	e8 4d df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorInitializationFailed: return "ErrorInitializationFailed";
    73d3:	48 89 c3             	mov    %rax,%rbx
    73d6:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    73da:	48 89 c7             	mov    %rax,%rdi
    73dd:	e8 3e de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    73e2:	48 89 d8             	mov    %rbx,%rax
    73e5:	48 89 c7             	mov    %rax,%rdi
    73e8:	e8 33 df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorDeviceLost: return "ErrorDeviceLost";
    73ed:	48 89 c3             	mov    %rax,%rbx
    73f0:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    73f4:	48 89 c7             	mov    %rax,%rdi
    73f7:	e8 24 de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    73fc:	48 89 d8             	mov    %rbx,%rax
    73ff:	48 89 c7             	mov    %rax,%rdi
    7402:	e8 19 df ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorMemoryMapFailed: return "ErrorMemoryMapFailed";
    7407:	48 89 c3             	mov    %rax,%rbx
    740a:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    740e:	48 89 c7             	mov    %rax,%rdi
    7411:	e8 0a de ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7416:	48 89 d8             	mov    %rbx,%rax
    7419:	48 89 c7             	mov    %rax,%rdi
    741c:	e8 ff de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorLayerNotPresent: return "ErrorLayerNotPresent";
    7421:	48 89 c3             	mov    %rax,%rbx
    7424:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    7428:	48 89 c7             	mov    %rax,%rdi
    742b:	e8 f0 dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7430:	48 89 d8             	mov    %rbx,%rax
    7433:	48 89 c7             	mov    %rax,%rdi
    7436:	e8 e5 de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorExtensionNotPresent: return "ErrorExtensionNotPresent";
    743b:	48 89 c3             	mov    %rax,%rbx
    743e:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    7442:	48 89 c7             	mov    %rax,%rdi
    7445:	e8 d6 dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    744a:	48 89 d8             	mov    %rbx,%rax
    744d:	48 89 c7             	mov    %rax,%rdi
    7450:	e8 cb de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorFeatureNotPresent: return "ErrorFeatureNotPresent";
    7455:	48 89 c3             	mov    %rax,%rbx
    7458:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    745c:	48 89 c7             	mov    %rax,%rdi
    745f:	e8 bc dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7464:	48 89 d8             	mov    %rbx,%rax
    7467:	48 89 c7             	mov    %rax,%rdi
    746a:	e8 b1 de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorIncompatibleDriver: return "ErrorIncompatibleDriver";
    746f:	48 89 c3             	mov    %rax,%rbx
    7472:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    7476:	48 89 c7             	mov    %rax,%rdi
    7479:	e8 a2 dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    747e:	48 89 d8             	mov    %rbx,%rax
    7481:	48 89 c7             	mov    %rax,%rdi
    7484:	e8 97 de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorTooManyObjects: return "ErrorTooManyObjects";
    7489:	48 89 c3             	mov    %rax,%rbx
    748c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    7490:	48 89 c7             	mov    %rax,%rdi
    7493:	e8 88 dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7498:	48 89 d8             	mov    %rbx,%rax
    749b:	48 89 c7             	mov    %rax,%rdi
    749e:	e8 7d de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorFormatNotSupported: return "ErrorFormatNotSupported";
    74a3:	48 89 c3             	mov    %rax,%rbx
    74a6:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74aa:	48 89 c7             	mov    %rax,%rdi
    74ad:	e8 6e dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    74b2:	48 89 d8             	mov    %rbx,%rax
    74b5:	48 89 c7             	mov    %rax,%rdi
    74b8:	e8 63 de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorFragmentedPool: return "ErrorFragmentedPool";
    74bd:	48 89 c3             	mov    %rax,%rbx
    74c0:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    74c4:	48 89 c7             	mov    %rax,%rdi
    74c7:	e8 54 dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    74cc:	48 89 d8             	mov    %rbx,%rax
    74cf:	48 89 c7             	mov    %rax,%rdi
    74d2:	e8 49 de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorUnknown: return "ErrorUnknown";
    74d7:	48 89 c3             	mov    %rax,%rbx
    74da:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    74de:	48 89 c7             	mov    %rax,%rdi
    74e1:	e8 3a dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    74e6:	48 89 d8             	mov    %rbx,%rax
    74e9:	48 89 c7             	mov    %rax,%rdi
    74ec:	e8 2f de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorOutOfPoolMemory: return "ErrorOutOfPoolMemory";
    74f1:	48 89 c3             	mov    %rax,%rbx
    74f4:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    74f8:	48 89 c7             	mov    %rax,%rdi
    74fb:	e8 20 dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7500:	48 89 d8             	mov    %rbx,%rax
    7503:	48 89 c7             	mov    %rax,%rdi
    7506:	e8 15 de ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorInvalidExternalHandle: return "ErrorInvalidExternalHandle";
    750b:	48 89 c3             	mov    %rax,%rbx
    750e:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    7512:	48 89 c7             	mov    %rax,%rdi
    7515:	e8 06 dd ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    751a:	48 89 d8             	mov    %rbx,%rax
    751d:	48 89 c7             	mov    %rax,%rdi
    7520:	e8 fb dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorFragmentation: return "ErrorFragmentation";
    7525:	48 89 c3             	mov    %rax,%rbx
    7528:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    752c:	48 89 c7             	mov    %rax,%rdi
    752f:	e8 ec dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7534:	48 89 d8             	mov    %rbx,%rax
    7537:	48 89 c7             	mov    %rax,%rdi
    753a:	e8 e1 dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorInvalidOpaqueCaptureAddress: return "ErrorInvalidOpaqueCaptureAddress";
    753f:	48 89 c3             	mov    %rax,%rbx
    7542:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    7546:	48 89 c7             	mov    %rax,%rdi
    7549:	e8 d2 dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    754e:	48 89 d8             	mov    %rbx,%rax
    7551:	48 89 c7             	mov    %rax,%rdi
    7554:	e8 c7 dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::ePipelineCompileRequired: return "PipelineCompileRequired";
    7559:	48 89 c3             	mov    %rax,%rbx
    755c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7560:	48 89 c7             	mov    %rax,%rdi
    7563:	e8 b8 dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7568:	48 89 d8             	mov    %rbx,%rax
    756b:	48 89 c7             	mov    %rax,%rdi
    756e:	e8 ad dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorSurfaceLostKHR: return "ErrorSurfaceLostKHR";
    7573:	48 89 c3             	mov    %rax,%rbx
    7576:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    757a:	48 89 c7             	mov    %rax,%rdi
    757d:	e8 9e dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7582:	48 89 d8             	mov    %rbx,%rax
    7585:	48 89 c7             	mov    %rax,%rdi
    7588:	e8 93 dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorNativeWindowInUseKHR: return "ErrorNativeWindowInUseKHR";
    758d:	48 89 c3             	mov    %rax,%rbx
    7590:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    7594:	48 89 c7             	mov    %rax,%rdi
    7597:	e8 84 dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    759c:	48 89 d8             	mov    %rbx,%rax
    759f:	48 89 c7             	mov    %rax,%rdi
    75a2:	e8 79 dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eSuboptimalKHR: return "SuboptimalKHR";
    75a7:	48 89 c3             	mov    %rax,%rbx
    75aa:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    75ae:	48 89 c7             	mov    %rax,%rdi
    75b1:	e8 6a dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    75b6:	48 89 d8             	mov    %rbx,%rax
    75b9:	48 89 c7             	mov    %rax,%rdi
    75bc:	e8 5f dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorOutOfDateKHR: return "ErrorOutOfDateKHR";
    75c1:	48 89 c3             	mov    %rax,%rbx
    75c4:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    75c8:	48 89 c7             	mov    %rax,%rdi
    75cb:	e8 50 dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    75d0:	48 89 d8             	mov    %rbx,%rax
    75d3:	48 89 c7             	mov    %rax,%rdi
    75d6:	e8 45 dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorIncompatibleDisplayKHR: return "ErrorIncompatibleDisplayKHR";
    75db:	48 89 c3             	mov    %rax,%rbx
    75de:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    75e2:	48 89 c7             	mov    %rax,%rdi
    75e5:	e8 36 dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    75ea:	48 89 d8             	mov    %rbx,%rax
    75ed:	48 89 c7             	mov    %rax,%rdi
    75f0:	e8 2b dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorValidationFailedEXT: return "ErrorValidationFailedEXT";
    75f5:	48 89 c3             	mov    %rax,%rbx
    75f8:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    75fc:	48 89 c7             	mov    %rax,%rdi
    75ff:	e8 1c dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7604:	48 89 d8             	mov    %rbx,%rax
    7607:	48 89 c7             	mov    %rax,%rdi
    760a:	e8 11 dd ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorInvalidShaderNV: return "ErrorInvalidShaderNV";
    760f:	48 89 c3             	mov    %rax,%rbx
    7612:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7616:	48 89 c7             	mov    %rax,%rdi
    7619:	e8 02 dc ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    761e:	48 89 d8             	mov    %rbx,%rax
    7621:	48 89 c7             	mov    %rax,%rdi
    7624:	e8 f7 dc ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: return "ErrorInvalidDrmFormatModifierPlaneLayoutEXT";
    7629:	48 89 c3             	mov    %rax,%rbx
    762c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    7630:	48 89 c7             	mov    %rax,%rdi
    7633:	e8 e8 db ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7638:	48 89 d8             	mov    %rbx,%rax
    763b:	48 89 c7             	mov    %rax,%rdi
    763e:	e8 dd dc ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorNotPermittedKHR: return "ErrorNotPermittedKHR";
    7643:	48 89 c3             	mov    %rax,%rbx
    7646:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    764a:	48 89 c7             	mov    %rax,%rdi
    764d:	e8 ce db ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7652:	48 89 d8             	mov    %rbx,%rax
    7655:	48 89 c7             	mov    %rax,%rdi
    7658:	e8 c3 dc ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eThreadIdleKHR: return "ThreadIdleKHR";
    765d:	48 89 c3             	mov    %rax,%rbx
    7660:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7664:	48 89 c7             	mov    %rax,%rdi
    7667:	e8 b4 db ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    766c:	48 89 d8             	mov    %rbx,%rax
    766f:	48 89 c7             	mov    %rax,%rdi
    7672:	e8 a9 dc ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eThreadDoneKHR: return "ThreadDoneKHR";
    7677:	48 89 c3             	mov    %rax,%rbx
    767a:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    767e:	48 89 c7             	mov    %rax,%rdi
    7681:	e8 9a db ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    7686:	48 89 d8             	mov    %rbx,%rax
    7689:	48 89 c7             	mov    %rax,%rdi
    768c:	e8 8f dc ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eOperationDeferredKHR: return "OperationDeferredKHR";
    7691:	48 89 c3             	mov    %rax,%rbx
    7694:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7698:	48 89 c7             	mov    %rax,%rdi
    769b:	e8 80 db ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    76a0:	48 89 d8             	mov    %rbx,%rax
    76a3:	48 89 c7             	mov    %rax,%rdi
    76a6:	e8 75 dc ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eOperationNotDeferredKHR: return "OperationNotDeferredKHR";
    76ab:	48 89 c3             	mov    %rax,%rbx
    76ae:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    76b2:	48 89 c7             	mov    %rax,%rdi
    76b5:	e8 66 db ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    76ba:	48 89 d8             	mov    %rbx,%rax
    76bd:	48 89 c7             	mov    %rax,%rdi
    76c0:	e8 5b dc ff ff       	call   5320 <_Unwind_Resume@plt>
      case Result::eErrorCompressionExhaustedEXT: return "ErrorCompressionExhaustedEXT";
    76c5:	48 89 c3             	mov    %rax,%rbx
    76c8:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    76cc:	48 89 c7             	mov    %rax,%rdi
    76cf:	e8 4c db ff ff       	call   5220 <_ZNSaIcED1Ev@plt>
    76d4:	48 89 d8             	mov    %rbx,%rax
    76d7:	48 89 c7             	mov    %rax,%rdi
    76da:	e8 41 dc ff ff       	call   5320 <_Unwind_Resume@plt>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    76df:	48 89 c3             	mov    %rax,%rbx
    76e2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    76e6:	48 89 c7             	mov    %rax,%rdi
    76e9:	e8 12 21 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    76ee:	eb 03                	jmp    76f3 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf17>
    76f0:	48 89 c3             	mov    %rax,%rbx
    76f3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    76f7:	48 89 c7             	mov    %rax,%rdi
    76fa:	e8 01 21 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    76ff:	48 89 d8             	mov    %rbx,%rax
    7702:	eb 00                	jmp    7704 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf28>
    7704:	48 89 c7             	mov    %rax,%rdi
    7707:	e8 14 dc ff ff       	call   5320 <_Unwind_Resume@plt>
    }
    770c:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    7713:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
    771a:	5b                   	pop    %rbx
    771b:	41 5c                	pop    %r12
    771d:	5d                   	pop    %rbp
    771e:	c3                   	ret
    771f:	90                   	nop

0000000000007720 <_ZN2vk5ErrorC1Ev>:
    Error() VULKAN_HPP_NOEXCEPT                = default;
    7720:	55                   	push   %rbp
    7721:	48 89 e5             	mov    %rsp,%rbp
    7724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7728:	48 8d 15 19 13 01 00 	lea    0x11319(%rip),%rdx        # 18a48 <_ZTVN2vk5ErrorE+0x10>
    772f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7733:	48 89 10             	mov    %rdx,(%rax)
    7736:	90                   	nop
    7737:	5d                   	pop    %rbp
    7738:	c3                   	ret
    7739:	90                   	nop

000000000000773a <_ZN2vk5ErrorD1Ev>:
    virtual ~Error() VULKAN_HPP_NOEXCEPT       = default;
    773a:	55                   	push   %rbp
    773b:	48 89 e5             	mov    %rsp,%rbp
    773e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7742:	48 8d 15 ff 12 01 00 	lea    0x112ff(%rip),%rdx        # 18a48 <_ZTVN2vk5ErrorE+0x10>
    7749:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    774d:	48 89 10             	mov    %rdx,(%rax)
    7750:	90                   	nop
    7751:	5d                   	pop    %rbp
    7752:	c3                   	ret
    7753:	90                   	nop

0000000000007754 <_ZN2vk5ErrorD0Ev>:
    7754:	55                   	push   %rbp
    7755:	48 89 e5             	mov    %rsp,%rbp
    7758:	48 83 ec 10          	sub    $0x10,%rsp
    775c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7764:	48 89 c7             	mov    %rax,%rdi
    7767:	e8 ce ff ff ff       	call   773a <_ZN2vk5ErrorD1Ev>
    776c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7770:	be 08 00 00 00       	mov    $0x8,%esi
    7775:	48 89 c7             	mov    %rax,%rdi
    7778:	e8 73 da ff ff       	call   51f0 <_ZdlPvm@plt>
    777d:	c9                   	leave
    777e:	c3                   	ret
    777f:	90                   	nop

0000000000007780 <_ZN2vk11SystemErrorC1ESt10error_code>:
    SystemError( std::error_code ec ) : Error(), std::system_error( ec ) {}
    7780:	55                   	push   %rbp
    7781:	48 89 e5             	mov    %rsp,%rbp
    7784:	53                   	push   %rbx
    7785:	48 83 ec 28          	sub    $0x28,%rsp
    7789:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    778d:	48 89 d1             	mov    %rdx,%rcx
    7790:	48 89 f0             	mov    %rsi,%rax
    7793:	48 89 fa             	mov    %rdi,%rdx
    7796:	48 89 ca             	mov    %rcx,%rdx
    7799:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    779d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    77a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77a5:	48 89 c7             	mov    %rax,%rdi
    77a8:	e8 73 ff ff ff       	call   7720 <_ZN2vk5ErrorC1Ev>
    77ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77b1:	48 8d 48 08          	lea    0x8(%rax),%rcx
    77b5:	8b 55 d0             	mov    -0x30(%rbp),%edx
    77b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77bc:	89 d6                	mov    %edx,%esi
    77be:	48 89 c2             	mov    %rax,%rdx
    77c1:	48 89 cf             	mov    %rcx,%rdi
    77c4:	e8 4d eb ff ff       	call   6316 <_ZNSt12system_errorC1ESt10error_code>
    77c9:	48 8d 15 c8 11 01 00 	lea    0x111c8(%rip),%rdx        # 18998 <_ZTVN2vk11SystemErrorE+0x10>
    77d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77d4:	48 89 10             	mov    %rdx,(%rax)
    77d7:	48 8d 15 e2 11 01 00 	lea    0x111e2(%rip),%rdx        # 189c0 <_ZTVN2vk11SystemErrorE+0x38>
    77de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77e2:	48 89 50 08          	mov    %rdx,0x8(%rax)
    77e6:	eb 1a                	jmp    7802 <_ZN2vk11SystemErrorC1ESt10error_code+0x82>
    77e8:	48 89 c3             	mov    %rax,%rbx
    77eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77ef:	48 89 c7             	mov    %rax,%rdi
    77f2:	e8 43 ff ff ff       	call   773a <_ZN2vk5ErrorD1Ev>
    77f7:	48 89 d8             	mov    %rbx,%rax
    77fa:	48 89 c7             	mov    %rax,%rdi
    77fd:	e8 1e db ff ff       	call   5320 <_Unwind_Resume@plt>
    7802:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7806:	c9                   	leave
    7807:	c3                   	ret

0000000000007808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>:
    SystemError( std::error_code ec, char const * what ) : Error(), std::system_error( ec, what ) {}
    7808:	55                   	push   %rbp
    7809:	48 89 e5             	mov    %rsp,%rbp
    780c:	53                   	push   %rbx
    780d:	48 83 ec 28          	sub    $0x28,%rsp
    7811:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7815:	89 f0                	mov    %esi,%eax
    7817:	48 89 d6             	mov    %rdx,%rsi
    781a:	48 89 f2             	mov    %rsi,%rdx
    781d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7821:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7825:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    7829:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    782d:	48 89 c7             	mov    %rax,%rdi
    7830:	e8 eb fe ff ff       	call   7720 <_ZN2vk5ErrorC1Ev>
    7835:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7839:	48 8d 78 08          	lea    0x8(%rax),%rdi
    783d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7841:	8b 55 d0             	mov    -0x30(%rbp),%edx
    7844:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7848:	89 d6                	mov    %edx,%esi
    784a:	48 89 c2             	mov    %rax,%rdx
    784d:	e8 5c eb ff ff       	call   63ae <_ZNSt12system_errorC1ESt10error_codePKc>
    7852:	48 8d 15 3f 11 01 00 	lea    0x1113f(%rip),%rdx        # 18998 <_ZTVN2vk11SystemErrorE+0x10>
    7859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    785d:	48 89 10             	mov    %rdx,(%rax)
    7860:	48 8d 15 59 11 01 00 	lea    0x11159(%rip),%rdx        # 189c0 <_ZTVN2vk11SystemErrorE+0x38>
    7867:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    786b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    786f:	eb 1a                	jmp    788b <_ZN2vk11SystemErrorC1ESt10error_codePKc+0x83>
    7871:	48 89 c3             	mov    %rax,%rbx
    7874:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7878:	48 89 c7             	mov    %rax,%rdi
    787b:	e8 ba fe ff ff       	call   773a <_ZN2vk5ErrorD1Ev>
    7880:	48 89 d8             	mov    %rbx,%rax
    7883:	48 89 c7             	mov    %rax,%rdi
    7886:	e8 95 da ff ff       	call   5320 <_Unwind_Resume@plt>
    788b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    788f:	c9                   	leave
    7890:	c3                   	ret
    7891:	90                   	nop

0000000000007892 <_ZNK2vk11SystemError4whatEv>:
    virtual const char * what() const VULKAN_HPP_NOEXCEPT
    7892:	55                   	push   %rbp
    7893:	48 89 e5             	mov    %rsp,%rbp
    7896:	48 83 ec 10          	sub    $0x10,%rsp
    789a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::system_error::what();
    789e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78a2:	48 83 c0 08          	add    $0x8,%rax
    78a6:	48 89 c7             	mov    %rax,%rdi
    78a9:	e8 d2 d9 ff ff       	call   5280 <_ZNKSt13runtime_error4whatEv@plt>
    }
    78ae:	c9                   	leave
    78af:	c3                   	ret

00000000000078b0 <_ZThn8_NK2vk11SystemError4whatEv>:
    virtual const char * what() const VULKAN_HPP_NOEXCEPT
    78b0:	48 83 ef 08          	sub    $0x8,%rdi
    78b4:	eb dc                	jmp    7892 <_ZNK2vk11SystemError4whatEv>

00000000000078b6 <_ZN2vk11SystemErrorD1Ev>:
  class SystemError
    78b6:	55                   	push   %rbp
    78b7:	48 89 e5             	mov    %rsp,%rbp
    78ba:	48 83 ec 10          	sub    $0x10,%rsp
    78be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78c2:	48 8d 15 cf 10 01 00 	lea    0x110cf(%rip),%rdx        # 18998 <_ZTVN2vk11SystemErrorE+0x10>
    78c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78cd:	48 89 10             	mov    %rdx,(%rax)
    78d0:	48 8d 15 e9 10 01 00 	lea    0x110e9(%rip),%rdx        # 189c0 <_ZTVN2vk11SystemErrorE+0x38>
    78d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78db:	48 89 50 08          	mov    %rdx,0x8(%rax)
    78df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78e3:	48 83 c0 08          	add    $0x8,%rax
    78e7:	48 89 c7             	mov    %rax,%rdi
    78ea:	e8 91 d8 ff ff       	call   5180 <_ZNSt12system_errorD2Ev@plt>
    78ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78f3:	48 89 c7             	mov    %rax,%rdi
    78f6:	e8 3f fe ff ff       	call   773a <_ZN2vk5ErrorD1Ev>
    78fb:	90                   	nop
    78fc:	c9                   	leave
    78fd:	c3                   	ret

00000000000078fe <_ZThn8_N2vk11SystemErrorD1Ev>:
    78fe:	48 83 ef 08          	sub    $0x8,%rdi
    7902:	eb b2                	jmp    78b6 <_ZN2vk11SystemErrorD1Ev>

0000000000007904 <_ZN2vk11SystemErrorD0Ev>:
    7904:	55                   	push   %rbp
    7905:	48 89 e5             	mov    %rsp,%rbp
    7908:	48 83 ec 10          	sub    $0x10,%rsp
    790c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7914:	48 89 c7             	mov    %rax,%rdi
    7917:	e8 9a ff ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    791c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7920:	be 28 00 00 00       	mov    $0x28,%esi
    7925:	48 89 c7             	mov    %rax,%rdi
    7928:	e8 c3 d8 ff ff       	call   51f0 <_ZdlPvm@plt>
    792d:	c9                   	leave
    792e:	c3                   	ret

000000000000792f <_ZThn8_N2vk11SystemErrorD0Ev>:
    792f:	48 83 ef 08          	sub    $0x8,%rdi
    7933:	eb cf                	jmp    7904 <_ZN2vk11SystemErrorD0Ev>
    7935:	90                   	nop

0000000000007936 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>:
    OutOfHostMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfHostMemory ), message ) {}
    7936:	55                   	push   %rbp
    7937:	48 89 e5             	mov    %rsp,%rbp
    793a:	53                   	push   %rbx
    793b:	48 83 ec 38          	sub    $0x38,%rsp
    793f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7943:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7947:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    794b:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7952:	0f b6 05 9f 19 01 00 	movzbl 0x1199f(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7959:	84 c0                	test   %al,%al
    795b:	0f 94 c0             	sete   %al
    795e:	84 c0                	test   %al,%al
    7960:	74 4a                	je     79ac <_ZN2vk20OutOfHostMemoryErrorC1EPKc+0x76>
    7962:	48 8d 05 8f 19 01 00 	lea    0x1198f(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7969:	48 89 c7             	mov    %rax,%rdi
    796c:	e8 cf d9 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    7971:	85 c0                	test   %eax,%eax
    7973:	0f 95 c0             	setne  %al
    7976:	84 c0                	test   %al,%al
    7978:	74 32                	je     79ac <_ZN2vk20OutOfHostMemoryErrorC1EPKc+0x76>
    797a:	48 8d 05 27 18 01 00 	lea    0x11827(%rip),%rax        # 191a8 <__dso_handle>
    7981:	48 89 c2             	mov    %rax,%rdx
    7984:	48 8d 05 25 18 01 00 	lea    0x11825(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    798b:	48 89 c6             	mov    %rax,%rsi
    798e:	48 8d 05 85 42 00 00 	lea    0x4285(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    7995:	48 89 c7             	mov    %rax,%rdi
    7998:	e8 f3 d7 ff ff       	call   5190 <__cxa_atexit@plt>
    799d:	48 8d 05 54 19 01 00 	lea    0x11954(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    79a4:	48 89 c7             	mov    %rax,%rdi
    79a7:	e8 24 d7 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    79ac:	48 8d 15 fd 17 01 00 	lea    0x117fd(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    79b3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    79b6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    79ba:	89 ce                	mov    %ecx,%esi
    79bc:	48 89 c7             	mov    %rax,%rdi
    79bf:	e8 b4 e8 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    79c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    79c8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfHostMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfHostMemory ), message ) {}
    79cc:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    79d0:	48 89 c6             	mov    %rax,%rsi
    79d3:	48 89 d7             	mov    %rdx,%rdi
    79d6:	48 89 d0             	mov    %rdx,%rax
    79d9:	48 89 c2             	mov    %rax,%rdx
    79dc:	48 89 df             	mov    %rbx,%rdi
    79df:	e8 24 fe ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    79e4:	48 8d 15 5d 0f 01 00 	lea    0x10f5d(%rip),%rdx        # 18948 <_ZTVN2vk20OutOfHostMemoryErrorE+0x10>
    79eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    79ef:	48 89 10             	mov    %rdx,(%rax)
    79f2:	48 8d 15 77 0f 01 00 	lea    0x10f77(%rip),%rdx        # 18970 <_ZTVN2vk20OutOfHostMemoryErrorE+0x38>
    79f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    79fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7a01:	90                   	nop
    7a02:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a06:	c9                   	leave
    7a07:	c3                   	ret

0000000000007a08 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>:
    OutOfDeviceMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDeviceMemory ), message ) {}
    7a08:	55                   	push   %rbp
    7a09:	48 89 e5             	mov    %rsp,%rbp
    7a0c:	53                   	push   %rbx
    7a0d:	48 83 ec 38          	sub    $0x38,%rsp
    7a11:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7a15:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7a19:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7a1d:	c7 45 ec fe ff ff ff 	movl   $0xfffffffe,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7a24:	0f b6 05 cd 18 01 00 	movzbl 0x118cd(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a2b:	84 c0                	test   %al,%al
    7a2d:	0f 94 c0             	sete   %al
    7a30:	84 c0                	test   %al,%al
    7a32:	74 4a                	je     7a7e <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc+0x76>
    7a34:	48 8d 05 bd 18 01 00 	lea    0x118bd(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a3b:	48 89 c7             	mov    %rax,%rdi
    7a3e:	e8 fd d8 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    7a43:	85 c0                	test   %eax,%eax
    7a45:	0f 95 c0             	setne  %al
    7a48:	84 c0                	test   %al,%al
    7a4a:	74 32                	je     7a7e <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc+0x76>
    7a4c:	48 8d 05 55 17 01 00 	lea    0x11755(%rip),%rax        # 191a8 <__dso_handle>
    7a53:	48 89 c2             	mov    %rax,%rdx
    7a56:	48 8d 05 53 17 01 00 	lea    0x11753(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    7a5d:	48 89 c6             	mov    %rax,%rsi
    7a60:	48 8d 05 b3 41 00 00 	lea    0x41b3(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    7a67:	48 89 c7             	mov    %rax,%rdi
    7a6a:	e8 21 d7 ff ff       	call   5190 <__cxa_atexit@plt>
    7a6f:	48 8d 05 82 18 01 00 	lea    0x11882(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a76:	48 89 c7             	mov    %rax,%rdi
    7a79:	e8 52 d6 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7a7e:	48 8d 15 2b 17 01 00 	lea    0x1172b(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7a85:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7a88:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7a8c:	89 ce                	mov    %ecx,%esi
    7a8e:	48 89 c7             	mov    %rax,%rdi
    7a91:	e8 e2 e7 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7a96:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a9a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfDeviceMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDeviceMemory ), message ) {}
    7a9e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7aa2:	48 89 c6             	mov    %rax,%rsi
    7aa5:	48 89 d7             	mov    %rdx,%rdi
    7aa8:	48 89 d0             	mov    %rdx,%rax
    7aab:	48 89 c2             	mov    %rax,%rdx
    7aae:	48 89 df             	mov    %rbx,%rdi
    7ab1:	e8 52 fd ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7ab6:	48 8d 15 3b 0e 01 00 	lea    0x10e3b(%rip),%rdx        # 188f8 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x10>
    7abd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ac1:	48 89 10             	mov    %rdx,(%rax)
    7ac4:	48 8d 15 55 0e 01 00 	lea    0x10e55(%rip),%rdx        # 18920 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x38>
    7acb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7acf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7ad3:	90                   	nop
    7ad4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ad8:	c9                   	leave
    7ad9:	c3                   	ret

0000000000007ada <_ZN2vk25InitializationFailedErrorC1EPKc>:
    InitializationFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorInitializationFailed ), message ) {}
    7ada:	55                   	push   %rbp
    7adb:	48 89 e5             	mov    %rsp,%rbp
    7ade:	53                   	push   %rbx
    7adf:	48 83 ec 38          	sub    $0x38,%rsp
    7ae3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7ae7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7aeb:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7aef:	c7 45 ec fd ff ff ff 	movl   $0xfffffffd,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7af6:	0f b6 05 fb 17 01 00 	movzbl 0x117fb(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7afd:	84 c0                	test   %al,%al
    7aff:	0f 94 c0             	sete   %al
    7b02:	84 c0                	test   %al,%al
    7b04:	74 4a                	je     7b50 <_ZN2vk25InitializationFailedErrorC1EPKc+0x76>
    7b06:	48 8d 05 eb 17 01 00 	lea    0x117eb(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7b0d:	48 89 c7             	mov    %rax,%rdi
    7b10:	e8 2b d8 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    7b15:	85 c0                	test   %eax,%eax
    7b17:	0f 95 c0             	setne  %al
    7b1a:	84 c0                	test   %al,%al
    7b1c:	74 32                	je     7b50 <_ZN2vk25InitializationFailedErrorC1EPKc+0x76>
    7b1e:	48 8d 05 83 16 01 00 	lea    0x11683(%rip),%rax        # 191a8 <__dso_handle>
    7b25:	48 89 c2             	mov    %rax,%rdx
    7b28:	48 8d 05 81 16 01 00 	lea    0x11681(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    7b2f:	48 89 c6             	mov    %rax,%rsi
    7b32:	48 8d 05 e1 40 00 00 	lea    0x40e1(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    7b39:	48 89 c7             	mov    %rax,%rdi
    7b3c:	e8 4f d6 ff ff       	call   5190 <__cxa_atexit@plt>
    7b41:	48 8d 05 b0 17 01 00 	lea    0x117b0(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7b48:	48 89 c7             	mov    %rax,%rdi
    7b4b:	e8 80 d5 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7b50:	48 8d 15 59 16 01 00 	lea    0x11659(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7b57:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7b5a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7b5e:	89 ce                	mov    %ecx,%esi
    7b60:	48 89 c7             	mov    %rax,%rdi
    7b63:	e8 10 e7 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7b68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b6c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InitializationFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorInitializationFailed ), message ) {}
    7b70:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7b74:	48 89 c6             	mov    %rax,%rsi
    7b77:	48 89 d7             	mov    %rdx,%rdi
    7b7a:	48 89 d0             	mov    %rdx,%rax
    7b7d:	48 89 c2             	mov    %rax,%rdx
    7b80:	48 89 df             	mov    %rbx,%rdi
    7b83:	e8 80 fc ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7b88:	48 8d 15 19 0d 01 00 	lea    0x10d19(%rip),%rdx        # 188a8 <_ZTVN2vk25InitializationFailedErrorE+0x10>
    7b8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b93:	48 89 10             	mov    %rdx,(%rax)
    7b96:	48 8d 15 33 0d 01 00 	lea    0x10d33(%rip),%rdx        # 188d0 <_ZTVN2vk25InitializationFailedErrorE+0x38>
    7b9d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ba1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7ba5:	90                   	nop
    7ba6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7baa:	c9                   	leave
    7bab:	c3                   	ret

0000000000007bac <_ZN2vk15DeviceLostErrorC1EPKc>:
    DeviceLostError( char const * message ) : SystemError( make_error_code( Result::eErrorDeviceLost ), message ) {}
    7bac:	55                   	push   %rbp
    7bad:	48 89 e5             	mov    %rsp,%rbp
    7bb0:	53                   	push   %rbx
    7bb1:	48 83 ec 38          	sub    $0x38,%rsp
    7bb5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7bb9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7bbd:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7bc1:	c7 45 ec fc ff ff ff 	movl   $0xfffffffc,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7bc8:	0f b6 05 29 17 01 00 	movzbl 0x11729(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7bcf:	84 c0                	test   %al,%al
    7bd1:	0f 94 c0             	sete   %al
    7bd4:	84 c0                	test   %al,%al
    7bd6:	74 4a                	je     7c22 <_ZN2vk15DeviceLostErrorC1EPKc+0x76>
    7bd8:	48 8d 05 19 17 01 00 	lea    0x11719(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7bdf:	48 89 c7             	mov    %rax,%rdi
    7be2:	e8 59 d7 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    7be7:	85 c0                	test   %eax,%eax
    7be9:	0f 95 c0             	setne  %al
    7bec:	84 c0                	test   %al,%al
    7bee:	74 32                	je     7c22 <_ZN2vk15DeviceLostErrorC1EPKc+0x76>
    7bf0:	48 8d 05 b1 15 01 00 	lea    0x115b1(%rip),%rax        # 191a8 <__dso_handle>
    7bf7:	48 89 c2             	mov    %rax,%rdx
    7bfa:	48 8d 05 af 15 01 00 	lea    0x115af(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    7c01:	48 89 c6             	mov    %rax,%rsi
    7c04:	48 8d 05 0f 40 00 00 	lea    0x400f(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    7c0b:	48 89 c7             	mov    %rax,%rdi
    7c0e:	e8 7d d5 ff ff       	call   5190 <__cxa_atexit@plt>
    7c13:	48 8d 05 de 16 01 00 	lea    0x116de(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7c1a:	48 89 c7             	mov    %rax,%rdi
    7c1d:	e8 ae d4 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7c22:	48 8d 15 87 15 01 00 	lea    0x11587(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7c29:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7c2c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7c30:	89 ce                	mov    %ecx,%esi
    7c32:	48 89 c7             	mov    %rax,%rdi
    7c35:	e8 3e e6 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7c3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c3e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    DeviceLostError( char const * message ) : SystemError( make_error_code( Result::eErrorDeviceLost ), message ) {}
    7c42:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7c46:	48 89 c6             	mov    %rax,%rsi
    7c49:	48 89 d7             	mov    %rdx,%rdi
    7c4c:	48 89 d0             	mov    %rdx,%rax
    7c4f:	48 89 c2             	mov    %rax,%rdx
    7c52:	48 89 df             	mov    %rbx,%rdi
    7c55:	e8 ae fb ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7c5a:	48 8d 15 f7 0b 01 00 	lea    0x10bf7(%rip),%rdx        # 18858 <_ZTVN2vk15DeviceLostErrorE+0x10>
    7c61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c65:	48 89 10             	mov    %rdx,(%rax)
    7c68:	48 8d 15 11 0c 01 00 	lea    0x10c11(%rip),%rdx        # 18880 <_ZTVN2vk15DeviceLostErrorE+0x38>
    7c6f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c73:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7c77:	90                   	nop
    7c78:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c7c:	c9                   	leave
    7c7d:	c3                   	ret

0000000000007c7e <_ZN2vk20MemoryMapFailedErrorC1EPKc>:
    MemoryMapFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorMemoryMapFailed ), message ) {}
    7c7e:	55                   	push   %rbp
    7c7f:	48 89 e5             	mov    %rsp,%rbp
    7c82:	53                   	push   %rbx
    7c83:	48 83 ec 38          	sub    $0x38,%rsp
    7c87:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7c8b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7c8f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7c93:	c7 45 ec fb ff ff ff 	movl   $0xfffffffb,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7c9a:	0f b6 05 57 16 01 00 	movzbl 0x11657(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7ca1:	84 c0                	test   %al,%al
    7ca3:	0f 94 c0             	sete   %al
    7ca6:	84 c0                	test   %al,%al
    7ca8:	74 4a                	je     7cf4 <_ZN2vk20MemoryMapFailedErrorC1EPKc+0x76>
    7caa:	48 8d 05 47 16 01 00 	lea    0x11647(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7cb1:	48 89 c7             	mov    %rax,%rdi
    7cb4:	e8 87 d6 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    7cb9:	85 c0                	test   %eax,%eax
    7cbb:	0f 95 c0             	setne  %al
    7cbe:	84 c0                	test   %al,%al
    7cc0:	74 32                	je     7cf4 <_ZN2vk20MemoryMapFailedErrorC1EPKc+0x76>
    7cc2:	48 8d 05 df 14 01 00 	lea    0x114df(%rip),%rax        # 191a8 <__dso_handle>
    7cc9:	48 89 c2             	mov    %rax,%rdx
    7ccc:	48 8d 05 dd 14 01 00 	lea    0x114dd(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    7cd3:	48 89 c6             	mov    %rax,%rsi
    7cd6:	48 8d 05 3d 3f 00 00 	lea    0x3f3d(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    7cdd:	48 89 c7             	mov    %rax,%rdi
    7ce0:	e8 ab d4 ff ff       	call   5190 <__cxa_atexit@plt>
    7ce5:	48 8d 05 0c 16 01 00 	lea    0x1160c(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7cec:	48 89 c7             	mov    %rax,%rdi
    7cef:	e8 dc d3 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7cf4:	48 8d 15 b5 14 01 00 	lea    0x114b5(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7cfb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7cfe:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7d02:	89 ce                	mov    %ecx,%esi
    7d04:	48 89 c7             	mov    %rax,%rdi
    7d07:	e8 6c e5 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7d0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d10:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    MemoryMapFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorMemoryMapFailed ), message ) {}
    7d14:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7d18:	48 89 c6             	mov    %rax,%rsi
    7d1b:	48 89 d7             	mov    %rdx,%rdi
    7d1e:	48 89 d0             	mov    %rdx,%rax
    7d21:	48 89 c2             	mov    %rax,%rdx
    7d24:	48 89 df             	mov    %rbx,%rdi
    7d27:	e8 dc fa ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7d2c:	48 8d 15 d5 0a 01 00 	lea    0x10ad5(%rip),%rdx        # 18808 <_ZTVN2vk20MemoryMapFailedErrorE+0x10>
    7d33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d37:	48 89 10             	mov    %rdx,(%rax)
    7d3a:	48 8d 15 ef 0a 01 00 	lea    0x10aef(%rip),%rdx        # 18830 <_ZTVN2vk20MemoryMapFailedErrorE+0x38>
    7d41:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d45:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7d49:	90                   	nop
    7d4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d4e:	c9                   	leave
    7d4f:	c3                   	ret

0000000000007d50 <_ZN2vk20LayerNotPresentErrorC1EPKc>:
    LayerNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorLayerNotPresent ), message ) {}
    7d50:	55                   	push   %rbp
    7d51:	48 89 e5             	mov    %rsp,%rbp
    7d54:	53                   	push   %rbx
    7d55:	48 83 ec 38          	sub    $0x38,%rsp
    7d59:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7d5d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7d61:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7d65:	c7 45 ec fa ff ff ff 	movl   $0xfffffffa,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7d6c:	0f b6 05 85 15 01 00 	movzbl 0x11585(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d73:	84 c0                	test   %al,%al
    7d75:	0f 94 c0             	sete   %al
    7d78:	84 c0                	test   %al,%al
    7d7a:	74 4a                	je     7dc6 <_ZN2vk20LayerNotPresentErrorC1EPKc+0x76>
    7d7c:	48 8d 05 75 15 01 00 	lea    0x11575(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d83:	48 89 c7             	mov    %rax,%rdi
    7d86:	e8 b5 d5 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    7d8b:	85 c0                	test   %eax,%eax
    7d8d:	0f 95 c0             	setne  %al
    7d90:	84 c0                	test   %al,%al
    7d92:	74 32                	je     7dc6 <_ZN2vk20LayerNotPresentErrorC1EPKc+0x76>
    7d94:	48 8d 05 0d 14 01 00 	lea    0x1140d(%rip),%rax        # 191a8 <__dso_handle>
    7d9b:	48 89 c2             	mov    %rax,%rdx
    7d9e:	48 8d 05 0b 14 01 00 	lea    0x1140b(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    7da5:	48 89 c6             	mov    %rax,%rsi
    7da8:	48 8d 05 6b 3e 00 00 	lea    0x3e6b(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    7daf:	48 89 c7             	mov    %rax,%rdi
    7db2:	e8 d9 d3 ff ff       	call   5190 <__cxa_atexit@plt>
    7db7:	48 8d 05 3a 15 01 00 	lea    0x1153a(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7dbe:	48 89 c7             	mov    %rax,%rdi
    7dc1:	e8 0a d3 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7dc6:	48 8d 15 e3 13 01 00 	lea    0x113e3(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7dcd:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7dd0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7dd4:	89 ce                	mov    %ecx,%esi
    7dd6:	48 89 c7             	mov    %rax,%rdi
    7dd9:	e8 9a e4 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7dde:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7de2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    LayerNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorLayerNotPresent ), message ) {}
    7de6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7dea:	48 89 c6             	mov    %rax,%rsi
    7ded:	48 89 d7             	mov    %rdx,%rdi
    7df0:	48 89 d0             	mov    %rdx,%rax
    7df3:	48 89 c2             	mov    %rax,%rdx
    7df6:	48 89 df             	mov    %rbx,%rdi
    7df9:	e8 0a fa ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7dfe:	48 8d 15 b3 09 01 00 	lea    0x109b3(%rip),%rdx        # 187b8 <_ZTVN2vk20LayerNotPresentErrorE+0x10>
    7e05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e09:	48 89 10             	mov    %rdx,(%rax)
    7e0c:	48 8d 15 cd 09 01 00 	lea    0x109cd(%rip),%rdx        # 187e0 <_ZTVN2vk20LayerNotPresentErrorE+0x38>
    7e13:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e17:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7e1b:	90                   	nop
    7e1c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7e20:	c9                   	leave
    7e21:	c3                   	ret

0000000000007e22 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>:
    ExtensionNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorExtensionNotPresent ), message ) {}
    7e22:	55                   	push   %rbp
    7e23:	48 89 e5             	mov    %rsp,%rbp
    7e26:	53                   	push   %rbx
    7e27:	48 83 ec 38          	sub    $0x38,%rsp
    7e2b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7e2f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7e33:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7e37:	c7 45 ec f9 ff ff ff 	movl   $0xfffffff9,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7e3e:	0f b6 05 b3 14 01 00 	movzbl 0x114b3(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e45:	84 c0                	test   %al,%al
    7e47:	0f 94 c0             	sete   %al
    7e4a:	84 c0                	test   %al,%al
    7e4c:	74 4a                	je     7e98 <_ZN2vk24ExtensionNotPresentErrorC1EPKc+0x76>
    7e4e:	48 8d 05 a3 14 01 00 	lea    0x114a3(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e55:	48 89 c7             	mov    %rax,%rdi
    7e58:	e8 e3 d4 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    7e5d:	85 c0                	test   %eax,%eax
    7e5f:	0f 95 c0             	setne  %al
    7e62:	84 c0                	test   %al,%al
    7e64:	74 32                	je     7e98 <_ZN2vk24ExtensionNotPresentErrorC1EPKc+0x76>
    7e66:	48 8d 05 3b 13 01 00 	lea    0x1133b(%rip),%rax        # 191a8 <__dso_handle>
    7e6d:	48 89 c2             	mov    %rax,%rdx
    7e70:	48 8d 05 39 13 01 00 	lea    0x11339(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    7e77:	48 89 c6             	mov    %rax,%rsi
    7e7a:	48 8d 05 99 3d 00 00 	lea    0x3d99(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    7e81:	48 89 c7             	mov    %rax,%rdi
    7e84:	e8 07 d3 ff ff       	call   5190 <__cxa_atexit@plt>
    7e89:	48 8d 05 68 14 01 00 	lea    0x11468(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e90:	48 89 c7             	mov    %rax,%rdi
    7e93:	e8 38 d2 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7e98:	48 8d 15 11 13 01 00 	lea    0x11311(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7e9f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7ea2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7ea6:	89 ce                	mov    %ecx,%esi
    7ea8:	48 89 c7             	mov    %rax,%rdi
    7eab:	e8 c8 e3 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7eb0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7eb4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ExtensionNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorExtensionNotPresent ), message ) {}
    7eb8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7ebc:	48 89 c6             	mov    %rax,%rsi
    7ebf:	48 89 d7             	mov    %rdx,%rdi
    7ec2:	48 89 d0             	mov    %rdx,%rax
    7ec5:	48 89 c2             	mov    %rax,%rdx
    7ec8:	48 89 df             	mov    %rbx,%rdi
    7ecb:	e8 38 f9 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7ed0:	48 8d 15 91 08 01 00 	lea    0x10891(%rip),%rdx        # 18768 <_ZTVN2vk24ExtensionNotPresentErrorE+0x10>
    7ed7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7edb:	48 89 10             	mov    %rdx,(%rax)
    7ede:	48 8d 15 ab 08 01 00 	lea    0x108ab(%rip),%rdx        # 18790 <_ZTVN2vk24ExtensionNotPresentErrorE+0x38>
    7ee5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ee9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7eed:	90                   	nop
    7eee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ef2:	c9                   	leave
    7ef3:	c3                   	ret

0000000000007ef4 <_ZN2vk22FeatureNotPresentErrorC1EPKc>:
    FeatureNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorFeatureNotPresent ), message ) {}
    7ef4:	55                   	push   %rbp
    7ef5:	48 89 e5             	mov    %rsp,%rbp
    7ef8:	53                   	push   %rbx
    7ef9:	48 83 ec 38          	sub    $0x38,%rsp
    7efd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7f01:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7f05:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7f09:	c7 45 ec f8 ff ff ff 	movl   $0xfffffff8,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7f10:	0f b6 05 e1 13 01 00 	movzbl 0x113e1(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f17:	84 c0                	test   %al,%al
    7f19:	0f 94 c0             	sete   %al
    7f1c:	84 c0                	test   %al,%al
    7f1e:	74 4a                	je     7f6a <_ZN2vk22FeatureNotPresentErrorC1EPKc+0x76>
    7f20:	48 8d 05 d1 13 01 00 	lea    0x113d1(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f27:	48 89 c7             	mov    %rax,%rdi
    7f2a:	e8 11 d4 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    7f2f:	85 c0                	test   %eax,%eax
    7f31:	0f 95 c0             	setne  %al
    7f34:	84 c0                	test   %al,%al
    7f36:	74 32                	je     7f6a <_ZN2vk22FeatureNotPresentErrorC1EPKc+0x76>
    7f38:	48 8d 05 69 12 01 00 	lea    0x11269(%rip),%rax        # 191a8 <__dso_handle>
    7f3f:	48 89 c2             	mov    %rax,%rdx
    7f42:	48 8d 05 67 12 01 00 	lea    0x11267(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    7f49:	48 89 c6             	mov    %rax,%rsi
    7f4c:	48 8d 05 c7 3c 00 00 	lea    0x3cc7(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    7f53:	48 89 c7             	mov    %rax,%rdi
    7f56:	e8 35 d2 ff ff       	call   5190 <__cxa_atexit@plt>
    7f5b:	48 8d 05 96 13 01 00 	lea    0x11396(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f62:	48 89 c7             	mov    %rax,%rdi
    7f65:	e8 66 d1 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7f6a:	48 8d 15 3f 12 01 00 	lea    0x1123f(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7f71:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7f74:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7f78:	89 ce                	mov    %ecx,%esi
    7f7a:	48 89 c7             	mov    %rax,%rdi
    7f7d:	e8 f6 e2 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7f82:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f86:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FeatureNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorFeatureNotPresent ), message ) {}
    7f8a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7f8e:	48 89 c6             	mov    %rax,%rsi
    7f91:	48 89 d7             	mov    %rdx,%rdi
    7f94:	48 89 d0             	mov    %rdx,%rax
    7f97:	48 89 c2             	mov    %rax,%rdx
    7f9a:	48 89 df             	mov    %rbx,%rdi
    7f9d:	e8 66 f8 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7fa2:	48 8d 15 6f 07 01 00 	lea    0x1076f(%rip),%rdx        # 18718 <_ZTVN2vk22FeatureNotPresentErrorE+0x10>
    7fa9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7fad:	48 89 10             	mov    %rdx,(%rax)
    7fb0:	48 8d 15 89 07 01 00 	lea    0x10789(%rip),%rdx        # 18740 <_ZTVN2vk22FeatureNotPresentErrorE+0x38>
    7fb7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7fbb:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7fbf:	90                   	nop
    7fc0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7fc4:	c9                   	leave
    7fc5:	c3                   	ret

0000000000007fc6 <_ZN2vk23IncompatibleDriverErrorC1EPKc>:
    IncompatibleDriverError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDriver ), message ) {}
    7fc6:	55                   	push   %rbp
    7fc7:	48 89 e5             	mov    %rsp,%rbp
    7fca:	53                   	push   %rbx
    7fcb:	48 83 ec 38          	sub    $0x38,%rsp
    7fcf:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7fd3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7fd7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7fdb:	c7 45 ec f7 ff ff ff 	movl   $0xfffffff7,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7fe2:	0f b6 05 0f 13 01 00 	movzbl 0x1130f(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7fe9:	84 c0                	test   %al,%al
    7feb:	0f 94 c0             	sete   %al
    7fee:	84 c0                	test   %al,%al
    7ff0:	74 4a                	je     803c <_ZN2vk23IncompatibleDriverErrorC1EPKc+0x76>
    7ff2:	48 8d 05 ff 12 01 00 	lea    0x112ff(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7ff9:	48 89 c7             	mov    %rax,%rdi
    7ffc:	e8 3f d3 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8001:	85 c0                	test   %eax,%eax
    8003:	0f 95 c0             	setne  %al
    8006:	84 c0                	test   %al,%al
    8008:	74 32                	je     803c <_ZN2vk23IncompatibleDriverErrorC1EPKc+0x76>
    800a:	48 8d 05 97 11 01 00 	lea    0x11197(%rip),%rax        # 191a8 <__dso_handle>
    8011:	48 89 c2             	mov    %rax,%rdx
    8014:	48 8d 05 95 11 01 00 	lea    0x11195(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    801b:	48 89 c6             	mov    %rax,%rsi
    801e:	48 8d 05 f5 3b 00 00 	lea    0x3bf5(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8025:	48 89 c7             	mov    %rax,%rdi
    8028:	e8 63 d1 ff ff       	call   5190 <__cxa_atexit@plt>
    802d:	48 8d 05 c4 12 01 00 	lea    0x112c4(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8034:	48 89 c7             	mov    %rax,%rdi
    8037:	e8 94 d0 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    803c:	48 8d 15 6d 11 01 00 	lea    0x1116d(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8043:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8046:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    804a:	89 ce                	mov    %ecx,%esi
    804c:	48 89 c7             	mov    %rax,%rdi
    804f:	e8 24 e2 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8054:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8058:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    IncompatibleDriverError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDriver ), message ) {}
    805c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8060:	48 89 c6             	mov    %rax,%rsi
    8063:	48 89 d7             	mov    %rdx,%rdi
    8066:	48 89 d0             	mov    %rdx,%rax
    8069:	48 89 c2             	mov    %rax,%rdx
    806c:	48 89 df             	mov    %rbx,%rdi
    806f:	e8 94 f7 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8074:	48 8d 15 4d 06 01 00 	lea    0x1064d(%rip),%rdx        # 186c8 <_ZTVN2vk23IncompatibleDriverErrorE+0x10>
    807b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    807f:	48 89 10             	mov    %rdx,(%rax)
    8082:	48 8d 15 67 06 01 00 	lea    0x10667(%rip),%rdx        # 186f0 <_ZTVN2vk23IncompatibleDriverErrorE+0x38>
    8089:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    808d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8091:	90                   	nop
    8092:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8096:	c9                   	leave
    8097:	c3                   	ret

0000000000008098 <_ZN2vk19TooManyObjectsErrorC1EPKc>:
    TooManyObjectsError( char const * message ) : SystemError( make_error_code( Result::eErrorTooManyObjects ), message ) {}
    8098:	55                   	push   %rbp
    8099:	48 89 e5             	mov    %rsp,%rbp
    809c:	53                   	push   %rbx
    809d:	48 83 ec 38          	sub    $0x38,%rsp
    80a1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    80a5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    80a9:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    80ad:	c7 45 ec f6 ff ff ff 	movl   $0xfffffff6,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    80b4:	0f b6 05 3d 12 01 00 	movzbl 0x1123d(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    80bb:	84 c0                	test   %al,%al
    80bd:	0f 94 c0             	sete   %al
    80c0:	84 c0                	test   %al,%al
    80c2:	74 4a                	je     810e <_ZN2vk19TooManyObjectsErrorC1EPKc+0x76>
    80c4:	48 8d 05 2d 12 01 00 	lea    0x1122d(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    80cb:	48 89 c7             	mov    %rax,%rdi
    80ce:	e8 6d d2 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    80d3:	85 c0                	test   %eax,%eax
    80d5:	0f 95 c0             	setne  %al
    80d8:	84 c0                	test   %al,%al
    80da:	74 32                	je     810e <_ZN2vk19TooManyObjectsErrorC1EPKc+0x76>
    80dc:	48 8d 05 c5 10 01 00 	lea    0x110c5(%rip),%rax        # 191a8 <__dso_handle>
    80e3:	48 89 c2             	mov    %rax,%rdx
    80e6:	48 8d 05 c3 10 01 00 	lea    0x110c3(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    80ed:	48 89 c6             	mov    %rax,%rsi
    80f0:	48 8d 05 23 3b 00 00 	lea    0x3b23(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    80f7:	48 89 c7             	mov    %rax,%rdi
    80fa:	e8 91 d0 ff ff       	call   5190 <__cxa_atexit@plt>
    80ff:	48 8d 05 f2 11 01 00 	lea    0x111f2(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8106:	48 89 c7             	mov    %rax,%rdi
    8109:	e8 c2 cf ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    810e:	48 8d 15 9b 10 01 00 	lea    0x1109b(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8115:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8118:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    811c:	89 ce                	mov    %ecx,%esi
    811e:	48 89 c7             	mov    %rax,%rdi
    8121:	e8 52 e1 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8126:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    812a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    TooManyObjectsError( char const * message ) : SystemError( make_error_code( Result::eErrorTooManyObjects ), message ) {}
    812e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8132:	48 89 c6             	mov    %rax,%rsi
    8135:	48 89 d7             	mov    %rdx,%rdi
    8138:	48 89 d0             	mov    %rdx,%rax
    813b:	48 89 c2             	mov    %rax,%rdx
    813e:	48 89 df             	mov    %rbx,%rdi
    8141:	e8 c2 f6 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8146:	48 8d 15 2b 05 01 00 	lea    0x1052b(%rip),%rdx        # 18678 <_ZTVN2vk19TooManyObjectsErrorE+0x10>
    814d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8151:	48 89 10             	mov    %rdx,(%rax)
    8154:	48 8d 15 45 05 01 00 	lea    0x10545(%rip),%rdx        # 186a0 <_ZTVN2vk19TooManyObjectsErrorE+0x38>
    815b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    815f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8163:	90                   	nop
    8164:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8168:	c9                   	leave
    8169:	c3                   	ret

000000000000816a <_ZN2vk23FormatNotSupportedErrorC1EPKc>:
    FormatNotSupportedError( char const * message ) : SystemError( make_error_code( Result::eErrorFormatNotSupported ), message ) {}
    816a:	55                   	push   %rbp
    816b:	48 89 e5             	mov    %rsp,%rbp
    816e:	53                   	push   %rbx
    816f:	48 83 ec 38          	sub    $0x38,%rsp
    8173:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8177:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    817b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    817f:	c7 45 ec f5 ff ff ff 	movl   $0xfffffff5,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8186:	0f b6 05 6b 11 01 00 	movzbl 0x1116b(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    818d:	84 c0                	test   %al,%al
    818f:	0f 94 c0             	sete   %al
    8192:	84 c0                	test   %al,%al
    8194:	74 4a                	je     81e0 <_ZN2vk23FormatNotSupportedErrorC1EPKc+0x76>
    8196:	48 8d 05 5b 11 01 00 	lea    0x1115b(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    819d:	48 89 c7             	mov    %rax,%rdi
    81a0:	e8 9b d1 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    81a5:	85 c0                	test   %eax,%eax
    81a7:	0f 95 c0             	setne  %al
    81aa:	84 c0                	test   %al,%al
    81ac:	74 32                	je     81e0 <_ZN2vk23FormatNotSupportedErrorC1EPKc+0x76>
    81ae:	48 8d 05 f3 0f 01 00 	lea    0x10ff3(%rip),%rax        # 191a8 <__dso_handle>
    81b5:	48 89 c2             	mov    %rax,%rdx
    81b8:	48 8d 05 f1 0f 01 00 	lea    0x10ff1(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    81bf:	48 89 c6             	mov    %rax,%rsi
    81c2:	48 8d 05 51 3a 00 00 	lea    0x3a51(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    81c9:	48 89 c7             	mov    %rax,%rdi
    81cc:	e8 bf cf ff ff       	call   5190 <__cxa_atexit@plt>
    81d1:	48 8d 05 20 11 01 00 	lea    0x11120(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    81d8:	48 89 c7             	mov    %rax,%rdi
    81db:	e8 f0 ce ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    81e0:	48 8d 15 c9 0f 01 00 	lea    0x10fc9(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    81e7:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    81ea:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    81ee:	89 ce                	mov    %ecx,%esi
    81f0:	48 89 c7             	mov    %rax,%rdi
    81f3:	e8 80 e0 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    81f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    81fc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FormatNotSupportedError( char const * message ) : SystemError( make_error_code( Result::eErrorFormatNotSupported ), message ) {}
    8200:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8204:	48 89 c6             	mov    %rax,%rsi
    8207:	48 89 d7             	mov    %rdx,%rdi
    820a:	48 89 d0             	mov    %rdx,%rax
    820d:	48 89 c2             	mov    %rax,%rdx
    8210:	48 89 df             	mov    %rbx,%rdi
    8213:	e8 f0 f5 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8218:	48 8d 15 09 04 01 00 	lea    0x10409(%rip),%rdx        # 18628 <_ZTVN2vk23FormatNotSupportedErrorE+0x10>
    821f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8223:	48 89 10             	mov    %rdx,(%rax)
    8226:	48 8d 15 23 04 01 00 	lea    0x10423(%rip),%rdx        # 18650 <_ZTVN2vk23FormatNotSupportedErrorE+0x38>
    822d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8231:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8235:	90                   	nop
    8236:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    823a:	c9                   	leave
    823b:	c3                   	ret

000000000000823c <_ZN2vk19FragmentedPoolErrorC1EPKc>:
    FragmentedPoolError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentedPool ), message ) {}
    823c:	55                   	push   %rbp
    823d:	48 89 e5             	mov    %rsp,%rbp
    8240:	53                   	push   %rbx
    8241:	48 83 ec 38          	sub    $0x38,%rsp
    8245:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8249:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    824d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8251:	c7 45 ec f4 ff ff ff 	movl   $0xfffffff4,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8258:	0f b6 05 99 10 01 00 	movzbl 0x11099(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    825f:	84 c0                	test   %al,%al
    8261:	0f 94 c0             	sete   %al
    8264:	84 c0                	test   %al,%al
    8266:	74 4a                	je     82b2 <_ZN2vk19FragmentedPoolErrorC1EPKc+0x76>
    8268:	48 8d 05 89 10 01 00 	lea    0x11089(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    826f:	48 89 c7             	mov    %rax,%rdi
    8272:	e8 c9 d0 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8277:	85 c0                	test   %eax,%eax
    8279:	0f 95 c0             	setne  %al
    827c:	84 c0                	test   %al,%al
    827e:	74 32                	je     82b2 <_ZN2vk19FragmentedPoolErrorC1EPKc+0x76>
    8280:	48 8d 05 21 0f 01 00 	lea    0x10f21(%rip),%rax        # 191a8 <__dso_handle>
    8287:	48 89 c2             	mov    %rax,%rdx
    828a:	48 8d 05 1f 0f 01 00 	lea    0x10f1f(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8291:	48 89 c6             	mov    %rax,%rsi
    8294:	48 8d 05 7f 39 00 00 	lea    0x397f(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    829b:	48 89 c7             	mov    %rax,%rdi
    829e:	e8 ed ce ff ff       	call   5190 <__cxa_atexit@plt>
    82a3:	48 8d 05 4e 10 01 00 	lea    0x1104e(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    82aa:	48 89 c7             	mov    %rax,%rdi
    82ad:	e8 1e ce ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    82b2:	48 8d 15 f7 0e 01 00 	lea    0x10ef7(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    82b9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    82bc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    82c0:	89 ce                	mov    %ecx,%esi
    82c2:	48 89 c7             	mov    %rax,%rdi
    82c5:	e8 ae df ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    82ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    82ce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FragmentedPoolError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentedPool ), message ) {}
    82d2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    82d6:	48 89 c6             	mov    %rax,%rsi
    82d9:	48 89 d7             	mov    %rdx,%rdi
    82dc:	48 89 d0             	mov    %rdx,%rax
    82df:	48 89 c2             	mov    %rax,%rdx
    82e2:	48 89 df             	mov    %rbx,%rdi
    82e5:	e8 1e f5 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    82ea:	48 8d 15 e7 02 01 00 	lea    0x102e7(%rip),%rdx        # 185d8 <_ZTVN2vk19FragmentedPoolErrorE+0x10>
    82f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    82f5:	48 89 10             	mov    %rdx,(%rax)
    82f8:	48 8d 15 01 03 01 00 	lea    0x10301(%rip),%rdx        # 18600 <_ZTVN2vk19FragmentedPoolErrorE+0x38>
    82ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8303:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8307:	90                   	nop
    8308:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    830c:	c9                   	leave
    830d:	c3                   	ret

000000000000830e <_ZN2vk12UnknownErrorC1EPKc>:
    UnknownError( char const * message ) : SystemError( make_error_code( Result::eErrorUnknown ), message ) {}
    830e:	55                   	push   %rbp
    830f:	48 89 e5             	mov    %rsp,%rbp
    8312:	53                   	push   %rbx
    8313:	48 83 ec 38          	sub    $0x38,%rsp
    8317:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    831b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    831f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8323:	c7 45 ec f3 ff ff ff 	movl   $0xfffffff3,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    832a:	0f b6 05 c7 0f 01 00 	movzbl 0x10fc7(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8331:	84 c0                	test   %al,%al
    8333:	0f 94 c0             	sete   %al
    8336:	84 c0                	test   %al,%al
    8338:	74 4a                	je     8384 <_ZN2vk12UnknownErrorC1EPKc+0x76>
    833a:	48 8d 05 b7 0f 01 00 	lea    0x10fb7(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8341:	48 89 c7             	mov    %rax,%rdi
    8344:	e8 f7 cf ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8349:	85 c0                	test   %eax,%eax
    834b:	0f 95 c0             	setne  %al
    834e:	84 c0                	test   %al,%al
    8350:	74 32                	je     8384 <_ZN2vk12UnknownErrorC1EPKc+0x76>
    8352:	48 8d 05 4f 0e 01 00 	lea    0x10e4f(%rip),%rax        # 191a8 <__dso_handle>
    8359:	48 89 c2             	mov    %rax,%rdx
    835c:	48 8d 05 4d 0e 01 00 	lea    0x10e4d(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8363:	48 89 c6             	mov    %rax,%rsi
    8366:	48 8d 05 ad 38 00 00 	lea    0x38ad(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    836d:	48 89 c7             	mov    %rax,%rdi
    8370:	e8 1b ce ff ff       	call   5190 <__cxa_atexit@plt>
    8375:	48 8d 05 7c 0f 01 00 	lea    0x10f7c(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    837c:	48 89 c7             	mov    %rax,%rdi
    837f:	e8 4c cd ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8384:	48 8d 15 25 0e 01 00 	lea    0x10e25(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    838b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    838e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8392:	89 ce                	mov    %ecx,%esi
    8394:	48 89 c7             	mov    %rax,%rdi
    8397:	e8 dc de ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    839c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    83a0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    UnknownError( char const * message ) : SystemError( make_error_code( Result::eErrorUnknown ), message ) {}
    83a4:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    83a8:	48 89 c6             	mov    %rax,%rsi
    83ab:	48 89 d7             	mov    %rdx,%rdi
    83ae:	48 89 d0             	mov    %rdx,%rax
    83b1:	48 89 c2             	mov    %rax,%rdx
    83b4:	48 89 df             	mov    %rbx,%rdi
    83b7:	e8 4c f4 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    83bc:	48 8d 15 c5 01 01 00 	lea    0x101c5(%rip),%rdx        # 18588 <_ZTVN2vk12UnknownErrorE+0x10>
    83c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    83c7:	48 89 10             	mov    %rdx,(%rax)
    83ca:	48 8d 15 df 01 01 00 	lea    0x101df(%rip),%rdx        # 185b0 <_ZTVN2vk12UnknownErrorE+0x38>
    83d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    83d5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    83d9:	90                   	nop
    83da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    83de:	c9                   	leave
    83df:	c3                   	ret

00000000000083e0 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>:
    OutOfPoolMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfPoolMemory ), message ) {}
    83e0:	55                   	push   %rbp
    83e1:	48 89 e5             	mov    %rsp,%rbp
    83e4:	53                   	push   %rbx
    83e5:	48 83 ec 38          	sub    $0x38,%rsp
    83e9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    83ed:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    83f1:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    83f5:	c7 45 ec 78 28 64 c4 	movl   $0xc4642878,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    83fc:	0f b6 05 f5 0e 01 00 	movzbl 0x10ef5(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8403:	84 c0                	test   %al,%al
    8405:	0f 94 c0             	sete   %al
    8408:	84 c0                	test   %al,%al
    840a:	74 4a                	je     8456 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc+0x76>
    840c:	48 8d 05 e5 0e 01 00 	lea    0x10ee5(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8413:	48 89 c7             	mov    %rax,%rdi
    8416:	e8 25 cf ff ff       	call   5340 <__cxa_guard_acquire@plt>
    841b:	85 c0                	test   %eax,%eax
    841d:	0f 95 c0             	setne  %al
    8420:	84 c0                	test   %al,%al
    8422:	74 32                	je     8456 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc+0x76>
    8424:	48 8d 05 7d 0d 01 00 	lea    0x10d7d(%rip),%rax        # 191a8 <__dso_handle>
    842b:	48 89 c2             	mov    %rax,%rdx
    842e:	48 8d 05 7b 0d 01 00 	lea    0x10d7b(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8435:	48 89 c6             	mov    %rax,%rsi
    8438:	48 8d 05 db 37 00 00 	lea    0x37db(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    843f:	48 89 c7             	mov    %rax,%rdi
    8442:	e8 49 cd ff ff       	call   5190 <__cxa_atexit@plt>
    8447:	48 8d 05 aa 0e 01 00 	lea    0x10eaa(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    844e:	48 89 c7             	mov    %rax,%rdi
    8451:	e8 7a cc ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8456:	48 8d 15 53 0d 01 00 	lea    0x10d53(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    845d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8460:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8464:	89 ce                	mov    %ecx,%esi
    8466:	48 89 c7             	mov    %rax,%rdi
    8469:	e8 0a de ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    846e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8472:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfPoolMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfPoolMemory ), message ) {}
    8476:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    847a:	48 89 c6             	mov    %rax,%rsi
    847d:	48 89 d7             	mov    %rdx,%rdi
    8480:	48 89 d0             	mov    %rdx,%rax
    8483:	48 89 c2             	mov    %rax,%rdx
    8486:	48 89 df             	mov    %rbx,%rdi
    8489:	e8 7a f3 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    848e:	48 8d 15 a3 00 01 00 	lea    0x100a3(%rip),%rdx        # 18538 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x10>
    8495:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8499:	48 89 10             	mov    %rdx,(%rax)
    849c:	48 8d 15 bd 00 01 00 	lea    0x100bd(%rip),%rdx        # 18560 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x38>
    84a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    84a7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    84ab:	90                   	nop
    84ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84b0:	c9                   	leave
    84b1:	c3                   	ret

00000000000084b2 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>:
    InvalidExternalHandleError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidExternalHandle ), message ) {}
    84b2:	55                   	push   %rbp
    84b3:	48 89 e5             	mov    %rsp,%rbp
    84b6:	53                   	push   %rbx
    84b7:	48 83 ec 38          	sub    $0x38,%rsp
    84bb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    84bf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    84c3:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    84c7:	c7 45 ec bd 1c 64 c4 	movl   $0xc4641cbd,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    84ce:	0f b6 05 23 0e 01 00 	movzbl 0x10e23(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    84d5:	84 c0                	test   %al,%al
    84d7:	0f 94 c0             	sete   %al
    84da:	84 c0                	test   %al,%al
    84dc:	74 4a                	je     8528 <_ZN2vk26InvalidExternalHandleErrorC1EPKc+0x76>
    84de:	48 8d 05 13 0e 01 00 	lea    0x10e13(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    84e5:	48 89 c7             	mov    %rax,%rdi
    84e8:	e8 53 ce ff ff       	call   5340 <__cxa_guard_acquire@plt>
    84ed:	85 c0                	test   %eax,%eax
    84ef:	0f 95 c0             	setne  %al
    84f2:	84 c0                	test   %al,%al
    84f4:	74 32                	je     8528 <_ZN2vk26InvalidExternalHandleErrorC1EPKc+0x76>
    84f6:	48 8d 05 ab 0c 01 00 	lea    0x10cab(%rip),%rax        # 191a8 <__dso_handle>
    84fd:	48 89 c2             	mov    %rax,%rdx
    8500:	48 8d 05 a9 0c 01 00 	lea    0x10ca9(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8507:	48 89 c6             	mov    %rax,%rsi
    850a:	48 8d 05 09 37 00 00 	lea    0x3709(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8511:	48 89 c7             	mov    %rax,%rdi
    8514:	e8 77 cc ff ff       	call   5190 <__cxa_atexit@plt>
    8519:	48 8d 05 d8 0d 01 00 	lea    0x10dd8(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8520:	48 89 c7             	mov    %rax,%rdi
    8523:	e8 a8 cb ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8528:	48 8d 15 81 0c 01 00 	lea    0x10c81(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    852f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8532:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8536:	89 ce                	mov    %ecx,%esi
    8538:	48 89 c7             	mov    %rax,%rdi
    853b:	e8 38 dd ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8540:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8544:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidExternalHandleError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidExternalHandle ), message ) {}
    8548:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    854c:	48 89 c6             	mov    %rax,%rsi
    854f:	48 89 d7             	mov    %rdx,%rdi
    8552:	48 89 d0             	mov    %rdx,%rax
    8555:	48 89 c2             	mov    %rax,%rdx
    8558:	48 89 df             	mov    %rbx,%rdi
    855b:	e8 a8 f2 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8560:	48 8d 15 81 ff 00 00 	lea    0xff81(%rip),%rdx        # 184e8 <_ZTVN2vk26InvalidExternalHandleErrorE+0x10>
    8567:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    856b:	48 89 10             	mov    %rdx,(%rax)
    856e:	48 8d 15 9b ff 00 00 	lea    0xff9b(%rip),%rdx        # 18510 <_ZTVN2vk26InvalidExternalHandleErrorE+0x38>
    8575:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8579:	48 89 50 08          	mov    %rdx,0x8(%rax)
    857d:	90                   	nop
    857e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8582:	c9                   	leave
    8583:	c3                   	ret

0000000000008584 <_ZN2vk18FragmentationErrorC1EPKc>:
    FragmentationError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentation ), message ) {}
    8584:	55                   	push   %rbp
    8585:	48 89 e5             	mov    %rsp,%rbp
    8588:	53                   	push   %rbx
    8589:	48 83 ec 38          	sub    $0x38,%rsp
    858d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8591:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8595:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8599:	c7 45 ec 18 c1 62 c4 	movl   $0xc462c118,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    85a0:	0f b6 05 51 0d 01 00 	movzbl 0x10d51(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    85a7:	84 c0                	test   %al,%al
    85a9:	0f 94 c0             	sete   %al
    85ac:	84 c0                	test   %al,%al
    85ae:	74 4a                	je     85fa <_ZN2vk18FragmentationErrorC1EPKc+0x76>
    85b0:	48 8d 05 41 0d 01 00 	lea    0x10d41(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    85b7:	48 89 c7             	mov    %rax,%rdi
    85ba:	e8 81 cd ff ff       	call   5340 <__cxa_guard_acquire@plt>
    85bf:	85 c0                	test   %eax,%eax
    85c1:	0f 95 c0             	setne  %al
    85c4:	84 c0                	test   %al,%al
    85c6:	74 32                	je     85fa <_ZN2vk18FragmentationErrorC1EPKc+0x76>
    85c8:	48 8d 05 d9 0b 01 00 	lea    0x10bd9(%rip),%rax        # 191a8 <__dso_handle>
    85cf:	48 89 c2             	mov    %rax,%rdx
    85d2:	48 8d 05 d7 0b 01 00 	lea    0x10bd7(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    85d9:	48 89 c6             	mov    %rax,%rsi
    85dc:	48 8d 05 37 36 00 00 	lea    0x3637(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    85e3:	48 89 c7             	mov    %rax,%rdi
    85e6:	e8 a5 cb ff ff       	call   5190 <__cxa_atexit@plt>
    85eb:	48 8d 05 06 0d 01 00 	lea    0x10d06(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    85f2:	48 89 c7             	mov    %rax,%rdi
    85f5:	e8 d6 ca ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    85fa:	48 8d 15 af 0b 01 00 	lea    0x10baf(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8601:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8604:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8608:	89 ce                	mov    %ecx,%esi
    860a:	48 89 c7             	mov    %rax,%rdi
    860d:	e8 66 dc ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8612:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8616:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FragmentationError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentation ), message ) {}
    861a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    861e:	48 89 c6             	mov    %rax,%rsi
    8621:	48 89 d7             	mov    %rdx,%rdi
    8624:	48 89 d0             	mov    %rdx,%rax
    8627:	48 89 c2             	mov    %rax,%rdx
    862a:	48 89 df             	mov    %rbx,%rdi
    862d:	e8 d6 f1 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8632:	48 8d 15 5f fe 00 00 	lea    0xfe5f(%rip),%rdx        # 18498 <_ZTVN2vk18FragmentationErrorE+0x10>
    8639:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    863d:	48 89 10             	mov    %rdx,(%rax)
    8640:	48 8d 15 79 fe 00 00 	lea    0xfe79(%rip),%rdx        # 184c0 <_ZTVN2vk18FragmentationErrorE+0x38>
    8647:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    864b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    864f:	90                   	nop
    8650:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8654:	c9                   	leave
    8655:	c3                   	ret

0000000000008656 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>:
    InvalidOpaqueCaptureAddressError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidOpaqueCaptureAddress ), message ) {}
    8656:	55                   	push   %rbp
    8657:	48 89 e5             	mov    %rsp,%rbp
    865a:	53                   	push   %rbx
    865b:	48 83 ec 38          	sub    $0x38,%rsp
    865f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8663:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8667:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    866b:	c7 45 ec 18 4a 61 c4 	movl   $0xc4614a18,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8672:	0f b6 05 7f 0c 01 00 	movzbl 0x10c7f(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8679:	84 c0                	test   %al,%al
    867b:	0f 94 c0             	sete   %al
    867e:	84 c0                	test   %al,%al
    8680:	74 4a                	je     86cc <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc+0x76>
    8682:	48 8d 05 6f 0c 01 00 	lea    0x10c6f(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8689:	48 89 c7             	mov    %rax,%rdi
    868c:	e8 af cc ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8691:	85 c0                	test   %eax,%eax
    8693:	0f 95 c0             	setne  %al
    8696:	84 c0                	test   %al,%al
    8698:	74 32                	je     86cc <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc+0x76>
    869a:	48 8d 05 07 0b 01 00 	lea    0x10b07(%rip),%rax        # 191a8 <__dso_handle>
    86a1:	48 89 c2             	mov    %rax,%rdx
    86a4:	48 8d 05 05 0b 01 00 	lea    0x10b05(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    86ab:	48 89 c6             	mov    %rax,%rsi
    86ae:	48 8d 05 65 35 00 00 	lea    0x3565(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    86b5:	48 89 c7             	mov    %rax,%rdi
    86b8:	e8 d3 ca ff ff       	call   5190 <__cxa_atexit@plt>
    86bd:	48 8d 05 34 0c 01 00 	lea    0x10c34(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    86c4:	48 89 c7             	mov    %rax,%rdi
    86c7:	e8 04 ca ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    86cc:	48 8d 15 dd 0a 01 00 	lea    0x10add(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    86d3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    86d6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    86da:	89 ce                	mov    %ecx,%esi
    86dc:	48 89 c7             	mov    %rax,%rdi
    86df:	e8 94 db ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    86e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    86e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidOpaqueCaptureAddressError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidOpaqueCaptureAddress ), message ) {}
    86ec:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    86f0:	48 89 c6             	mov    %rax,%rsi
    86f3:	48 89 d7             	mov    %rdx,%rdi
    86f6:	48 89 d0             	mov    %rdx,%rax
    86f9:	48 89 c2             	mov    %rax,%rdx
    86fc:	48 89 df             	mov    %rbx,%rdi
    86ff:	e8 04 f1 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8704:	48 8d 15 3d fd 00 00 	lea    0xfd3d(%rip),%rdx        # 18448 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x10>
    870b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    870f:	48 89 10             	mov    %rdx,(%rax)
    8712:	48 8d 15 57 fd 00 00 	lea    0xfd57(%rip),%rdx        # 18470 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x38>
    8719:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    871d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8721:	90                   	nop
    8722:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8726:	c9                   	leave
    8727:	c3                   	ret

0000000000008728 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>:
    SurfaceLostKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorSurfaceLostKHR ), message ) {}
    8728:	55                   	push   %rbp
    8729:	48 89 e5             	mov    %rsp,%rbp
    872c:	53                   	push   %rbx
    872d:	48 83 ec 38          	sub    $0x38,%rsp
    8731:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8735:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8739:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    873d:	c7 45 ec 00 36 65 c4 	movl   $0xc4653600,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8744:	0f b6 05 ad 0b 01 00 	movzbl 0x10bad(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    874b:	84 c0                	test   %al,%al
    874d:	0f 94 c0             	sete   %al
    8750:	84 c0                	test   %al,%al
    8752:	74 4a                	je     879e <_ZN2vk19SurfaceLostKHRErrorC1EPKc+0x76>
    8754:	48 8d 05 9d 0b 01 00 	lea    0x10b9d(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    875b:	48 89 c7             	mov    %rax,%rdi
    875e:	e8 dd cb ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8763:	85 c0                	test   %eax,%eax
    8765:	0f 95 c0             	setne  %al
    8768:	84 c0                	test   %al,%al
    876a:	74 32                	je     879e <_ZN2vk19SurfaceLostKHRErrorC1EPKc+0x76>
    876c:	48 8d 05 35 0a 01 00 	lea    0x10a35(%rip),%rax        # 191a8 <__dso_handle>
    8773:	48 89 c2             	mov    %rax,%rdx
    8776:	48 8d 05 33 0a 01 00 	lea    0x10a33(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    877d:	48 89 c6             	mov    %rax,%rsi
    8780:	48 8d 05 93 34 00 00 	lea    0x3493(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8787:	48 89 c7             	mov    %rax,%rdi
    878a:	e8 01 ca ff ff       	call   5190 <__cxa_atexit@plt>
    878f:	48 8d 05 62 0b 01 00 	lea    0x10b62(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8796:	48 89 c7             	mov    %rax,%rdi
    8799:	e8 32 c9 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    879e:	48 8d 15 0b 0a 01 00 	lea    0x10a0b(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    87a5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    87a8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    87ac:	89 ce                	mov    %ecx,%esi
    87ae:	48 89 c7             	mov    %rax,%rdi
    87b1:	e8 c2 da ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    87b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    87ba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    SurfaceLostKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorSurfaceLostKHR ), message ) {}
    87be:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    87c2:	48 89 c6             	mov    %rax,%rsi
    87c5:	48 89 d7             	mov    %rdx,%rdi
    87c8:	48 89 d0             	mov    %rdx,%rax
    87cb:	48 89 c2             	mov    %rax,%rdx
    87ce:	48 89 df             	mov    %rbx,%rdi
    87d1:	e8 32 f0 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    87d6:	48 8d 15 1b fc 00 00 	lea    0xfc1b(%rip),%rdx        # 183f8 <_ZTVN2vk19SurfaceLostKHRErrorE+0x10>
    87dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87e1:	48 89 10             	mov    %rdx,(%rax)
    87e4:	48 8d 15 35 fc 00 00 	lea    0xfc35(%rip),%rdx        # 18420 <_ZTVN2vk19SurfaceLostKHRErrorE+0x38>
    87eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87ef:	48 89 50 08          	mov    %rdx,0x8(%rax)
    87f3:	90                   	nop
    87f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87f8:	c9                   	leave
    87f9:	c3                   	ret

00000000000087fa <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>:
    NativeWindowInUseKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNativeWindowInUseKHR ), message ) {}
    87fa:	55                   	push   %rbp
    87fb:	48 89 e5             	mov    %rsp,%rbp
    87fe:	53                   	push   %rbx
    87ff:	48 83 ec 38          	sub    $0x38,%rsp
    8803:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8807:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    880b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    880f:	c7 45 ec ff 35 65 c4 	movl   $0xc46535ff,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8816:	0f b6 05 db 0a 01 00 	movzbl 0x10adb(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    881d:	84 c0                	test   %al,%al
    881f:	0f 94 c0             	sete   %al
    8822:	84 c0                	test   %al,%al
    8824:	74 4a                	je     8870 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc+0x76>
    8826:	48 8d 05 cb 0a 01 00 	lea    0x10acb(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    882d:	48 89 c7             	mov    %rax,%rdi
    8830:	e8 0b cb ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8835:	85 c0                	test   %eax,%eax
    8837:	0f 95 c0             	setne  %al
    883a:	84 c0                	test   %al,%al
    883c:	74 32                	je     8870 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc+0x76>
    883e:	48 8d 05 63 09 01 00 	lea    0x10963(%rip),%rax        # 191a8 <__dso_handle>
    8845:	48 89 c2             	mov    %rax,%rdx
    8848:	48 8d 05 61 09 01 00 	lea    0x10961(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    884f:	48 89 c6             	mov    %rax,%rsi
    8852:	48 8d 05 c1 33 00 00 	lea    0x33c1(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8859:	48 89 c7             	mov    %rax,%rdi
    885c:	e8 2f c9 ff ff       	call   5190 <__cxa_atexit@plt>
    8861:	48 8d 05 90 0a 01 00 	lea    0x10a90(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8868:	48 89 c7             	mov    %rax,%rdi
    886b:	e8 60 c8 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8870:	48 8d 15 39 09 01 00 	lea    0x10939(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8877:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    887a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    887e:	89 ce                	mov    %ecx,%esi
    8880:	48 89 c7             	mov    %rax,%rdi
    8883:	e8 f0 d9 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8888:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    888c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    NativeWindowInUseKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNativeWindowInUseKHR ), message ) {}
    8890:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8894:	48 89 c6             	mov    %rax,%rsi
    8897:	48 89 d7             	mov    %rdx,%rdi
    889a:	48 89 d0             	mov    %rdx,%rax
    889d:	48 89 c2             	mov    %rax,%rdx
    88a0:	48 89 df             	mov    %rbx,%rdi
    88a3:	e8 60 ef ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    88a8:	48 8d 15 f9 fa 00 00 	lea    0xfaf9(%rip),%rdx        # 183a8 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x10>
    88af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    88b3:	48 89 10             	mov    %rdx,(%rax)
    88b6:	48 8d 15 13 fb 00 00 	lea    0xfb13(%rip),%rdx        # 183d0 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x38>
    88bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    88c1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    88c5:	90                   	nop
    88c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88ca:	c9                   	leave
    88cb:	c3                   	ret

00000000000088cc <_ZN2vk17OutOfDateKHRErrorC1EPKc>:
    OutOfDateKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDateKHR ), message ) {}
    88cc:	55                   	push   %rbp
    88cd:	48 89 e5             	mov    %rsp,%rbp
    88d0:	53                   	push   %rbx
    88d1:	48 83 ec 38          	sub    $0x38,%rsp
    88d5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    88d9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    88dd:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    88e1:	c7 45 ec 14 32 65 c4 	movl   $0xc4653214,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    88e8:	0f b6 05 09 0a 01 00 	movzbl 0x10a09(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    88ef:	84 c0                	test   %al,%al
    88f1:	0f 94 c0             	sete   %al
    88f4:	84 c0                	test   %al,%al
    88f6:	74 4a                	je     8942 <_ZN2vk17OutOfDateKHRErrorC1EPKc+0x76>
    88f8:	48 8d 05 f9 09 01 00 	lea    0x109f9(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    88ff:	48 89 c7             	mov    %rax,%rdi
    8902:	e8 39 ca ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8907:	85 c0                	test   %eax,%eax
    8909:	0f 95 c0             	setne  %al
    890c:	84 c0                	test   %al,%al
    890e:	74 32                	je     8942 <_ZN2vk17OutOfDateKHRErrorC1EPKc+0x76>
    8910:	48 8d 05 91 08 01 00 	lea    0x10891(%rip),%rax        # 191a8 <__dso_handle>
    8917:	48 89 c2             	mov    %rax,%rdx
    891a:	48 8d 05 8f 08 01 00 	lea    0x1088f(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8921:	48 89 c6             	mov    %rax,%rsi
    8924:	48 8d 05 ef 32 00 00 	lea    0x32ef(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    892b:	48 89 c7             	mov    %rax,%rdi
    892e:	e8 5d c8 ff ff       	call   5190 <__cxa_atexit@plt>
    8933:	48 8d 05 be 09 01 00 	lea    0x109be(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    893a:	48 89 c7             	mov    %rax,%rdi
    893d:	e8 8e c7 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8942:	48 8d 15 67 08 01 00 	lea    0x10867(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8949:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    894c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8950:	89 ce                	mov    %ecx,%esi
    8952:	48 89 c7             	mov    %rax,%rdi
    8955:	e8 1e d9 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    895a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    895e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfDateKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDateKHR ), message ) {}
    8962:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8966:	48 89 c6             	mov    %rax,%rsi
    8969:	48 89 d7             	mov    %rdx,%rdi
    896c:	48 89 d0             	mov    %rdx,%rax
    896f:	48 89 c2             	mov    %rax,%rdx
    8972:	48 89 df             	mov    %rbx,%rdi
    8975:	e8 8e ee ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    897a:	48 8d 15 d7 f9 00 00 	lea    0xf9d7(%rip),%rdx        # 18358 <_ZTVN2vk17OutOfDateKHRErrorE+0x10>
    8981:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8985:	48 89 10             	mov    %rdx,(%rax)
    8988:	48 8d 15 f1 f9 00 00 	lea    0xf9f1(%rip),%rdx        # 18380 <_ZTVN2vk17OutOfDateKHRErrorE+0x38>
    898f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8993:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8997:	90                   	nop
    8998:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    899c:	c9                   	leave
    899d:	c3                   	ret

000000000000899e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>:
    IncompatibleDisplayKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDisplayKHR ), message ) {}
    899e:	55                   	push   %rbp
    899f:	48 89 e5             	mov    %rsp,%rbp
    89a2:	53                   	push   %rbx
    89a3:	48 83 ec 38          	sub    $0x38,%rsp
    89a7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    89ab:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    89af:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    89b3:	c7 45 ec 47 2a 65 c4 	movl   $0xc4652a47,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    89ba:	0f b6 05 37 09 01 00 	movzbl 0x10937(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    89c1:	84 c0                	test   %al,%al
    89c3:	0f 94 c0             	sete   %al
    89c6:	84 c0                	test   %al,%al
    89c8:	74 4a                	je     8a14 <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc+0x76>
    89ca:	48 8d 05 27 09 01 00 	lea    0x10927(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    89d1:	48 89 c7             	mov    %rax,%rdi
    89d4:	e8 67 c9 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    89d9:	85 c0                	test   %eax,%eax
    89db:	0f 95 c0             	setne  %al
    89de:	84 c0                	test   %al,%al
    89e0:	74 32                	je     8a14 <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc+0x76>
    89e2:	48 8d 05 bf 07 01 00 	lea    0x107bf(%rip),%rax        # 191a8 <__dso_handle>
    89e9:	48 89 c2             	mov    %rax,%rdx
    89ec:	48 8d 05 bd 07 01 00 	lea    0x107bd(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    89f3:	48 89 c6             	mov    %rax,%rsi
    89f6:	48 8d 05 1d 32 00 00 	lea    0x321d(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    89fd:	48 89 c7             	mov    %rax,%rdi
    8a00:	e8 8b c7 ff ff       	call   5190 <__cxa_atexit@plt>
    8a05:	48 8d 05 ec 08 01 00 	lea    0x108ec(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a0c:	48 89 c7             	mov    %rax,%rdi
    8a0f:	e8 bc c6 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8a14:	48 8d 15 95 07 01 00 	lea    0x10795(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8a1b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8a1e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8a22:	89 ce                	mov    %ecx,%esi
    8a24:	48 89 c7             	mov    %rax,%rdi
    8a27:	e8 4c d8 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8a2c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a30:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    IncompatibleDisplayKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDisplayKHR ), message ) {}
    8a34:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8a38:	48 89 c6             	mov    %rax,%rsi
    8a3b:	48 89 d7             	mov    %rdx,%rdi
    8a3e:	48 89 d0             	mov    %rdx,%rax
    8a41:	48 89 c2             	mov    %rax,%rdx
    8a44:	48 89 df             	mov    %rbx,%rdi
    8a47:	e8 bc ed ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8a4c:	48 8d 15 b5 f8 00 00 	lea    0xf8b5(%rip),%rdx        # 18308 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x10>
    8a53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a57:	48 89 10             	mov    %rdx,(%rax)
    8a5a:	48 8d 15 cf f8 00 00 	lea    0xf8cf(%rip),%rdx        # 18330 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x38>
    8a61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a65:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8a69:	90                   	nop
    8a6a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a6e:	c9                   	leave
    8a6f:	c3                   	ret

0000000000008a70 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>:
    ValidationFailedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorValidationFailedEXT ), message ) {}
    8a70:	55                   	push   %rbp
    8a71:	48 89 e5             	mov    %rsp,%rbp
    8a74:	53                   	push   %rbx
    8a75:	48 83 ec 38          	sub    $0x38,%rsp
    8a79:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8a7d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8a81:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8a85:	c7 45 ec 07 0b 65 c4 	movl   $0xc4650b07,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8a8c:	0f b6 05 65 08 01 00 	movzbl 0x10865(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a93:	84 c0                	test   %al,%al
    8a95:	0f 94 c0             	sete   %al
    8a98:	84 c0                	test   %al,%al
    8a9a:	74 4a                	je     8ae6 <_ZN2vk24ValidationFailedEXTErrorC1EPKc+0x76>
    8a9c:	48 8d 05 55 08 01 00 	lea    0x10855(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8aa3:	48 89 c7             	mov    %rax,%rdi
    8aa6:	e8 95 c8 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8aab:	85 c0                	test   %eax,%eax
    8aad:	0f 95 c0             	setne  %al
    8ab0:	84 c0                	test   %al,%al
    8ab2:	74 32                	je     8ae6 <_ZN2vk24ValidationFailedEXTErrorC1EPKc+0x76>
    8ab4:	48 8d 05 ed 06 01 00 	lea    0x106ed(%rip),%rax        # 191a8 <__dso_handle>
    8abb:	48 89 c2             	mov    %rax,%rdx
    8abe:	48 8d 05 eb 06 01 00 	lea    0x106eb(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8ac5:	48 89 c6             	mov    %rax,%rsi
    8ac8:	48 8d 05 4b 31 00 00 	lea    0x314b(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8acf:	48 89 c7             	mov    %rax,%rdi
    8ad2:	e8 b9 c6 ff ff       	call   5190 <__cxa_atexit@plt>
    8ad7:	48 8d 05 1a 08 01 00 	lea    0x1081a(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8ade:	48 89 c7             	mov    %rax,%rdi
    8ae1:	e8 ea c5 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8ae6:	48 8d 15 c3 06 01 00 	lea    0x106c3(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8aed:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8af0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8af4:	89 ce                	mov    %ecx,%esi
    8af6:	48 89 c7             	mov    %rax,%rdi
    8af9:	e8 7a d7 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8afe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b02:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ValidationFailedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorValidationFailedEXT ), message ) {}
    8b06:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8b0a:	48 89 c6             	mov    %rax,%rsi
    8b0d:	48 89 d7             	mov    %rdx,%rdi
    8b10:	48 89 d0             	mov    %rdx,%rax
    8b13:	48 89 c2             	mov    %rax,%rdx
    8b16:	48 89 df             	mov    %rbx,%rdi
    8b19:	e8 ea ec ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8b1e:	48 8d 15 93 f7 00 00 	lea    0xf793(%rip),%rdx        # 182b8 <_ZTVN2vk24ValidationFailedEXTErrorE+0x10>
    8b25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8b29:	48 89 10             	mov    %rdx,(%rax)
    8b2c:	48 8d 15 ad f7 00 00 	lea    0xf7ad(%rip),%rdx        # 182e0 <_ZTVN2vk24ValidationFailedEXTErrorE+0x38>
    8b33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8b37:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8b3b:	90                   	nop
    8b3c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b40:	c9                   	leave
    8b41:	c3                   	ret

0000000000008b42 <_ZN2vk20InvalidShaderNVErrorC1EPKc>:
    InvalidShaderNVError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidShaderNV ), message ) {}
    8b42:	55                   	push   %rbp
    8b43:	48 89 e5             	mov    %rsp,%rbp
    8b46:	53                   	push   %rbx
    8b47:	48 83 ec 38          	sub    $0x38,%rsp
    8b4b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8b4f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8b53:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8b57:	c7 45 ec 20 07 65 c4 	movl   $0xc4650720,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8b5e:	0f b6 05 93 07 01 00 	movzbl 0x10793(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b65:	84 c0                	test   %al,%al
    8b67:	0f 94 c0             	sete   %al
    8b6a:	84 c0                	test   %al,%al
    8b6c:	74 4a                	je     8bb8 <_ZN2vk20InvalidShaderNVErrorC1EPKc+0x76>
    8b6e:	48 8d 05 83 07 01 00 	lea    0x10783(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b75:	48 89 c7             	mov    %rax,%rdi
    8b78:	e8 c3 c7 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8b7d:	85 c0                	test   %eax,%eax
    8b7f:	0f 95 c0             	setne  %al
    8b82:	84 c0                	test   %al,%al
    8b84:	74 32                	je     8bb8 <_ZN2vk20InvalidShaderNVErrorC1EPKc+0x76>
    8b86:	48 8d 05 1b 06 01 00 	lea    0x1061b(%rip),%rax        # 191a8 <__dso_handle>
    8b8d:	48 89 c2             	mov    %rax,%rdx
    8b90:	48 8d 05 19 06 01 00 	lea    0x10619(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8b97:	48 89 c6             	mov    %rax,%rsi
    8b9a:	48 8d 05 79 30 00 00 	lea    0x3079(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8ba1:	48 89 c7             	mov    %rax,%rdi
    8ba4:	e8 e7 c5 ff ff       	call   5190 <__cxa_atexit@plt>
    8ba9:	48 8d 05 48 07 01 00 	lea    0x10748(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8bb0:	48 89 c7             	mov    %rax,%rdi
    8bb3:	e8 18 c5 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8bb8:	48 8d 15 f1 05 01 00 	lea    0x105f1(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8bbf:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8bc2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8bc6:	89 ce                	mov    %ecx,%esi
    8bc8:	48 89 c7             	mov    %rax,%rdi
    8bcb:	e8 a8 d6 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8bd0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8bd4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidShaderNVError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidShaderNV ), message ) {}
    8bd8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8bdc:	48 89 c6             	mov    %rax,%rsi
    8bdf:	48 89 d7             	mov    %rdx,%rdi
    8be2:	48 89 d0             	mov    %rdx,%rax
    8be5:	48 89 c2             	mov    %rax,%rdx
    8be8:	48 89 df             	mov    %rbx,%rdi
    8beb:	e8 18 ec ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8bf0:	48 8d 15 71 f6 00 00 	lea    0xf671(%rip),%rdx        # 18268 <_ZTVN2vk20InvalidShaderNVErrorE+0x10>
    8bf7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8bfb:	48 89 10             	mov    %rdx,(%rax)
    8bfe:	48 8d 15 8b f6 00 00 	lea    0xf68b(%rip),%rdx        # 18290 <_ZTVN2vk20InvalidShaderNVErrorE+0x38>
    8c05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8c09:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8c0d:	90                   	nop
    8c0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c12:	c9                   	leave
    8c13:	c3                   	ret

0000000000008c14 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>:
    InvalidDrmFormatModifierPlaneLayoutEXTError( char const * message )
    8c14:	55                   	push   %rbp
    8c15:	48 89 e5             	mov    %rsp,%rbp
    8c18:	53                   	push   %rbx
    8c19:	48 83 ec 38          	sub    $0x38,%rsp
    8c1d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8c21:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      : SystemError( make_error_code( Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT ), message )
    8c25:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8c29:	c7 45 ec d0 cc 62 c4 	movl   $0xc462ccd0,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8c30:	0f b6 05 c1 06 01 00 	movzbl 0x106c1(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c37:	84 c0                	test   %al,%al
    8c39:	0f 94 c0             	sete   %al
    8c3c:	84 c0                	test   %al,%al
    8c3e:	74 4a                	je     8c8a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc+0x76>
    8c40:	48 8d 05 b1 06 01 00 	lea    0x106b1(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c47:	48 89 c7             	mov    %rax,%rdi
    8c4a:	e8 f1 c6 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8c4f:	85 c0                	test   %eax,%eax
    8c51:	0f 95 c0             	setne  %al
    8c54:	84 c0                	test   %al,%al
    8c56:	74 32                	je     8c8a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc+0x76>
    8c58:	48 8d 05 49 05 01 00 	lea    0x10549(%rip),%rax        # 191a8 <__dso_handle>
    8c5f:	48 89 c2             	mov    %rax,%rdx
    8c62:	48 8d 05 47 05 01 00 	lea    0x10547(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8c69:	48 89 c6             	mov    %rax,%rsi
    8c6c:	48 8d 05 a7 2f 00 00 	lea    0x2fa7(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8c73:	48 89 c7             	mov    %rax,%rdi
    8c76:	e8 15 c5 ff ff       	call   5190 <__cxa_atexit@plt>
    8c7b:	48 8d 05 76 06 01 00 	lea    0x10676(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c82:	48 89 c7             	mov    %rax,%rdi
    8c85:	e8 46 c4 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8c8a:	48 8d 15 1f 05 01 00 	lea    0x1051f(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8c91:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8c94:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8c98:	89 ce                	mov    %ecx,%esi
    8c9a:	48 89 c7             	mov    %rax,%rdi
    8c9d:	e8 d6 d5 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8ca2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ca6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
      : SystemError( make_error_code( Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT ), message )
    8caa:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8cae:	48 89 c6             	mov    %rax,%rsi
    8cb1:	48 89 d7             	mov    %rdx,%rdi
    8cb4:	48 89 d0             	mov    %rdx,%rax
    8cb7:	48 89 c2             	mov    %rax,%rdx
    8cba:	48 89 df             	mov    %rbx,%rdi
    8cbd:	e8 46 eb ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8cc2:	48 8d 15 4f f5 00 00 	lea    0xf54f(%rip),%rdx        # 18218 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x10>
    8cc9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8ccd:	48 89 10             	mov    %rdx,(%rax)
    8cd0:	48 8d 15 69 f5 00 00 	lea    0xf569(%rip),%rdx        # 18240 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x38>
    8cd7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8cdb:	48 89 50 08          	mov    %rdx,0x8(%rax)
    }
    8cdf:	90                   	nop
    8ce0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ce4:	c9                   	leave
    8ce5:	c3                   	ret

0000000000008ce6 <_ZN2vk20NotPermittedKHRErrorC1EPKc>:
    NotPermittedKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNotPermittedKHR ), message ) {}
    8ce6:	55                   	push   %rbp
    8ce7:	48 89 e5             	mov    %rsp,%rbp
    8cea:	53                   	push   %rbx
    8ceb:	48 83 ec 38          	sub    $0x38,%rsp
    8cef:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8cf3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8cf7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8cfb:	c7 45 ec 4f 8e 62 c4 	movl   $0xc4628e4f,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8d02:	0f b6 05 ef 05 01 00 	movzbl 0x105ef(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d09:	84 c0                	test   %al,%al
    8d0b:	0f 94 c0             	sete   %al
    8d0e:	84 c0                	test   %al,%al
    8d10:	74 4a                	je     8d5c <_ZN2vk20NotPermittedKHRErrorC1EPKc+0x76>
    8d12:	48 8d 05 df 05 01 00 	lea    0x105df(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d19:	48 89 c7             	mov    %rax,%rdi
    8d1c:	e8 1f c6 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8d21:	85 c0                	test   %eax,%eax
    8d23:	0f 95 c0             	setne  %al
    8d26:	84 c0                	test   %al,%al
    8d28:	74 32                	je     8d5c <_ZN2vk20NotPermittedKHRErrorC1EPKc+0x76>
    8d2a:	48 8d 05 77 04 01 00 	lea    0x10477(%rip),%rax        # 191a8 <__dso_handle>
    8d31:	48 89 c2             	mov    %rax,%rdx
    8d34:	48 8d 05 75 04 01 00 	lea    0x10475(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8d3b:	48 89 c6             	mov    %rax,%rsi
    8d3e:	48 8d 05 d5 2e 00 00 	lea    0x2ed5(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8d45:	48 89 c7             	mov    %rax,%rdi
    8d48:	e8 43 c4 ff ff       	call   5190 <__cxa_atexit@plt>
    8d4d:	48 8d 05 a4 05 01 00 	lea    0x105a4(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d54:	48 89 c7             	mov    %rax,%rdi
    8d57:	e8 74 c3 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8d5c:	48 8d 15 4d 04 01 00 	lea    0x1044d(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8d63:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8d66:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8d6a:	89 ce                	mov    %ecx,%esi
    8d6c:	48 89 c7             	mov    %rax,%rdi
    8d6f:	e8 04 d5 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8d74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8d78:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    NotPermittedKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNotPermittedKHR ), message ) {}
    8d7c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8d80:	48 89 c6             	mov    %rax,%rsi
    8d83:	48 89 d7             	mov    %rdx,%rdi
    8d86:	48 89 d0             	mov    %rdx,%rax
    8d89:	48 89 c2             	mov    %rax,%rdx
    8d8c:	48 89 df             	mov    %rbx,%rdi
    8d8f:	e8 74 ea ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8d94:	48 8d 15 2d f4 00 00 	lea    0xf42d(%rip),%rdx        # 181c8 <_ZTVN2vk20NotPermittedKHRErrorE+0x10>
    8d9b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8d9f:	48 89 10             	mov    %rdx,(%rax)
    8da2:	48 8d 15 47 f4 00 00 	lea    0xf447(%rip),%rdx        # 181f0 <_ZTVN2vk20NotPermittedKHRErrorE+0x38>
    8da9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8dad:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8db1:	90                   	nop
    8db2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8db6:	c9                   	leave
    8db7:	c3                   	ret

0000000000008db8 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>:
    CompressionExhaustedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorCompressionExhaustedEXT ), message ) {}
    8db8:	55                   	push   %rbp
    8db9:	48 89 e5             	mov    %rsp,%rbp
    8dbc:	53                   	push   %rbx
    8dbd:	48 83 ec 38          	sub    $0x38,%rsp
    8dc1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8dc5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8dc9:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8dcd:	c7 45 ec b0 0d 60 c4 	movl   $0xc4600db0,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8dd4:	0f b6 05 1d 05 01 00 	movzbl 0x1051d(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8ddb:	84 c0                	test   %al,%al
    8ddd:	0f 94 c0             	sete   %al
    8de0:	84 c0                	test   %al,%al
    8de2:	74 4a                	je     8e2e <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc+0x76>
    8de4:	48 8d 05 0d 05 01 00 	lea    0x1050d(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8deb:	48 89 c7             	mov    %rax,%rdi
    8dee:	e8 4d c5 ff ff       	call   5340 <__cxa_guard_acquire@plt>
    8df3:	85 c0                	test   %eax,%eax
    8df5:	0f 95 c0             	setne  %al
    8df8:	84 c0                	test   %al,%al
    8dfa:	74 32                	je     8e2e <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc+0x76>
    8dfc:	48 8d 05 a5 03 01 00 	lea    0x103a5(%rip),%rax        # 191a8 <__dso_handle>
    8e03:	48 89 c2             	mov    %rax,%rdx
    8e06:	48 8d 05 a3 03 01 00 	lea    0x103a3(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    8e0d:	48 89 c6             	mov    %rax,%rsi
    8e10:	48 8d 05 03 2e 00 00 	lea    0x2e03(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    8e17:	48 89 c7             	mov    %rax,%rdi
    8e1a:	e8 71 c3 ff ff       	call   5190 <__cxa_atexit@plt>
    8e1f:	48 8d 05 d2 04 01 00 	lea    0x104d2(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8e26:	48 89 c7             	mov    %rax,%rdi
    8e29:	e8 a2 c2 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8e2e:	48 8d 15 7b 03 01 00 	lea    0x1037b(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8e35:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8e38:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8e3c:	89 ce                	mov    %ecx,%esi
    8e3e:	48 89 c7             	mov    %rax,%rdi
    8e41:	e8 32 d4 ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8e46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8e4a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    CompressionExhaustedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorCompressionExhaustedEXT ), message ) {}
    8e4e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8e52:	48 89 c6             	mov    %rax,%rsi
    8e55:	48 89 d7             	mov    %rdx,%rdi
    8e58:	48 89 d0             	mov    %rdx,%rax
    8e5b:	48 89 c2             	mov    %rax,%rdx
    8e5e:	48 89 df             	mov    %rbx,%rdi
    8e61:	e8 a2 e9 ff ff       	call   7808 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8e66:	48 8d 15 0b f3 00 00 	lea    0xf30b(%rip),%rdx        # 18178 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x10>
    8e6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8e71:	48 89 10             	mov    %rdx,(%rax)
    8e74:	48 8d 15 25 f3 00 00 	lea    0xf325(%rip),%rdx        # 181a0 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x38>
    8e7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8e7f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8e83:	90                   	nop
    8e84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e88:	c9                   	leave
    8e89:	c3                   	ret

0000000000008e8a <_ZN2vk22DebugUtilsMessengerEXTaSEDn>:
      m_debugUtilsMessengerEXT = debugUtilsMessengerEXT;
      return *this;
    }
#endif

    DebugUtilsMessengerEXT & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    8e8a:	55                   	push   %rbp
    8e8b:	48 89 e5             	mov    %rsp,%rbp
    8e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_debugUtilsMessengerEXT = {};
    8e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e9a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    8ea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8ea5:	5d                   	pop    %rbp
    8ea6:	c3                   	ret
    8ea7:	90                   	nop

0000000000008ea8 <_ZNK2vk22DebugUtilsMessengerEXTcvP26VkDebugUtilsMessengerEXT_TEv>:
    {
      return m_debugUtilsMessengerEXT < rhs.m_debugUtilsMessengerEXT;
    }
#endif

    VULKAN_HPP_TYPESAFE_EXPLICIT operator VkDebugUtilsMessengerEXT() const VULKAN_HPP_NOEXCEPT
    8ea8:	55                   	push   %rbp
    8ea9:	48 89 e5             	mov    %rsp,%rbp
    8eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_debugUtilsMessengerEXT;
    8eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eb4:	48 8b 00             	mov    (%rax),%rax
    }
    8eb7:	5d                   	pop    %rbp
    8eb8:	c3                   	ret
    8eb9:	90                   	nop

0000000000008eba <_ZNK2vk22DebugUtilsMessengerEXTcvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    8eba:	55                   	push   %rbp
    8ebb:	48 89 e5             	mov    %rsp,%rbp
    8ebe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_debugUtilsMessengerEXT != VK_NULL_HANDLE;
    8ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ec6:	48 8b 00             	mov    (%rax),%rax
    8ec9:	48 85 c0             	test   %rax,%rax
    8ecc:	0f 95 c0             	setne  %al
    }
    8ecf:	5d                   	pop    %rbp
    8ed0:	c3                   	ret
    8ed1:	90                   	nop

0000000000008ed2 <_ZN2vk8InstanceaSEDn>:
    {
      m_instance = instance;
      return *this;
    }

    Instance & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    8ed2:	55                   	push   %rbp
    8ed3:	48 89 e5             	mov    %rsp,%rbp
    8ed6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8eda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_instance = {};
    8ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ee2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    8ee9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8eed:	5d                   	pop    %rbp
    8eee:	c3                   	ret
    8eef:	90                   	nop

0000000000008ef0 <_ZNK2vk8InstancecvP12VkInstance_TEv>:
                                    Dispatch const & d                                                  VULKAN_HPP_DEFAULT_DISPATCHER_ASSIGNMENT ) const;
#    endif /*VULKAN_HPP_NO_SMART_HANDLE*/
#  endif   /*VULKAN_HPP_DISABLE_ENHANCED_MODE*/
#endif     /*VK_USE_PLATFORM_SCREEN_QNX*/

    operator VkInstance() const VULKAN_HPP_NOEXCEPT
    8ef0:	55                   	push   %rbp
    8ef1:	48 89 e5             	mov    %rsp,%rbp
    8ef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_instance;
    8ef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8efc:	48 8b 00             	mov    (%rax),%rax
    }
    8eff:	5d                   	pop    %rbp
    8f00:	c3                   	ret
    8f01:	90                   	nop

0000000000008f02 <_ZNK2vk8InstancecvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    8f02:	55                   	push   %rbp
    8f03:	48 89 e5             	mov    %rsp,%rbp
    8f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_instance != VK_NULL_HANDLE;
    8f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f0e:	48 8b 00             	mov    (%rax),%rax
    8f11:	48 85 c0             	test   %rax,%rax
    8f14:	0f 95 c0             	setne  %al
    }
    8f17:	5d                   	pop    %rbp
    8f18:	c3                   	ret
    8f19:	90                   	nop

0000000000008f1a <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
  {
  public:
#  ifdef VULKAN_HPP_NO_EXCEPTIONS
    DynamicLoader( std::string const & vulkanLibraryName = {} ) VULKAN_HPP_NOEXCEPT
#  else
    DynamicLoader( std::string const & vulkanLibraryName = {} )
    8f1a:	55                   	push   %rbp
    8f1b:	48 89 e5             	mov    %rsp,%rbp
    8f1e:	41 54                	push   %r12
    8f20:	53                   	push   %rbx
    8f21:	48 83 ec 10          	sub    $0x10,%rsp
    8f25:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f29:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
#  endif
    {
      if ( !vulkanLibraryName.empty() )
    8f2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8f31:	48 89 c7             	mov    %rax,%rdi
    8f34:	e8 91 0b 00 00       	call   9aca <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>
    8f39:	83 f0 01             	xor    $0x1,%eax
    8f3c:	84 c0                	test   %al,%al
    8f3e:	74 22                	je     8f62 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x48>
      {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        m_library = dlopen( vulkanLibraryName.c_str(), RTLD_NOW | RTLD_LOCAL );
    8f40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8f44:	48 89 c7             	mov    %rax,%rdi
    8f47:	e8 9a 08 00 00       	call   97e6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    8f4c:	be 02 00 00 00       	mov    $0x2,%esi
    8f51:	48 89 c7             	mov    %rax,%rdi
    8f54:	e8 37 c3 ff ff       	call   5290 <dlopen@plt>
    8f59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f5d:	48 89 02             	mov    %rax,(%rdx)
    8f60:	eb 42                	jmp    8fa4 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a>
#  endif
      }
      else
      {
#  if defined( __unix__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        m_library = dlopen( "libvulkan.so", RTLD_NOW | RTLD_LOCAL );
    8f62:	be 02 00 00 00       	mov    $0x2,%esi
    8f67:	48 8d 05 a6 7a 00 00 	lea    0x7aa6(%rip),%rax        # 10a14 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3dc>
    8f6e:	48 89 c7             	mov    %rax,%rdi
    8f71:	e8 1a c3 ff ff       	call   5290 <dlopen@plt>
    8f76:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f7a:	48 89 02             	mov    %rax,(%rdx)
        if ( m_library == nullptr )
    8f7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f81:	48 8b 00             	mov    (%rax),%rax
    8f84:	48 85 c0             	test   %rax,%rax
    8f87:	75 1b                	jne    8fa4 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a>
        {
          m_library = dlopen( "libvulkan.so.1", RTLD_NOW | RTLD_LOCAL );
    8f89:	be 02 00 00 00       	mov    $0x2,%esi
    8f8e:	48 8d 05 8c 7a 00 00 	lea    0x7a8c(%rip),%rax        # 10a21 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e9>
    8f95:	48 89 c7             	mov    %rax,%rdi
    8f98:	e8 f3 c2 ff ff       	call   5290 <dlopen@plt>
    8f9d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8fa1:	48 89 02             	mov    %rax,(%rdx)
#    error unsupported platform
#  endif
      }

#  ifndef VULKAN_HPP_NO_EXCEPTIONS
      if ( m_library == nullptr )
    8fa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fa8:	48 8b 00             	mov    (%rax),%rax
    8fab:	48 85 c0             	test   %rax,%rax
    8fae:	75 51                	jne    9001 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe7>
      {
        // NOTE there should be an InitializationFailedError, but msvc insists on the symbol does not exist within the scope of this function.
        throw std::runtime_error( "Failed to load vulkan library!" );
    8fb0:	bf 10 00 00 00       	mov    $0x10,%edi
    8fb5:	e8 f6 c0 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    8fba:	48 89 c3             	mov    %rax,%rbx
    8fbd:	48 8d 05 6c 7a 00 00 	lea    0x7a6c(%rip),%rax        # 10a30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3f8>
    8fc4:	48 89 c6             	mov    %rax,%rsi
    8fc7:	48 89 df             	mov    %rbx,%rdi
    8fca:	e8 b1 c0 ff ff       	call   5080 <_ZNSt13runtime_errorC1EPKc@plt>
    8fcf:	48 8b 05 d2 ff 00 00 	mov    0xffd2(%rip),%rax        # 18fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8fd6:	48 89 c2             	mov    %rax,%rdx
    8fd9:	48 8d 05 40 fa 00 00 	lea    0xfa40(%rip),%rax        # 18a20 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8fe0:	48 89 c6             	mov    %rax,%rsi
    8fe3:	48 89 df             	mov    %rbx,%rdi
    8fe6:	e8 15 c3 ff ff       	call   5300 <__cxa_throw@plt>
    8feb:	49 89 c4             	mov    %rax,%r12
    8fee:	48 89 df             	mov    %rbx,%rdi
    8ff1:	e8 1a c1 ff ff       	call   5110 <__cxa_free_exception@plt>
    8ff6:	4c 89 e0             	mov    %r12,%rax
    8ff9:	48 89 c7             	mov    %rax,%rdi
    8ffc:	e8 1f c3 ff ff       	call   5320 <_Unwind_Resume@plt>
      }
#  endif
    }
    9001:	90                   	nop
    9002:	48 83 c4 10          	add    $0x10,%rsp
    9006:	5b                   	pop    %rbx
    9007:	41 5c                	pop    %r12
    9009:	5d                   	pop    %rbp
    900a:	c3                   	ret
    900b:	90                   	nop

000000000000900c <_ZN2vk13DynamicLoaderD1Ev>:
    {
      std::swap( m_library, other.m_library );
      return *this;
    }

    ~DynamicLoader() VULKAN_HPP_NOEXCEPT
    900c:	55                   	push   %rbp
    900d:	48 89 e5             	mov    %rsp,%rbp
    9010:	48 83 ec 10          	sub    $0x10,%rsp
    9014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if ( m_library )
    9018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    901c:	48 8b 00             	mov    (%rax),%rax
    901f:	48 85 c0             	test   %rax,%rax
    9022:	74 0f                	je     9033 <_ZN2vk13DynamicLoaderD1Ev+0x27>
      {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        dlclose( m_library );
    9024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9028:	48 8b 00             	mov    (%rax),%rax
    902b:	48 89 c7             	mov    %rax,%rdi
    902e:	e8 1d c1 ff ff       	call   5150 <dlclose@plt>
        ::FreeLibrary( m_library );
#  else
#    error unsupported platform
#  endif
      }
    }
    9033:	90                   	nop
    9034:	c9                   	leave
    9035:	c3                   	ret

0000000000009036 <_ZN2vk4raii17ContextDispatcherC1EPFPFvvEP12VkInstance_TPKcE>:
    }

    class ContextDispatcher : public DispatchLoaderBase
    {
    public:
      ContextDispatcher( PFN_vkGetInstanceProcAddr getProcAddr )
    9036:	55                   	push   %rbp
    9037:	48 89 e5             	mov    %rsp,%rbp
    903a:	48 83 ec 10          	sub    $0x10,%rsp
    903e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9042:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
        //=== VK_VERSION_1_0 ===
        , vkCreateInstance( PFN_vkCreateInstance( getProcAddr( NULL, "vkCreateInstance" ) ) )
        , vkEnumerateInstanceExtensionProperties( PFN_vkEnumerateInstanceExtensionProperties( getProcAddr( NULL, "vkEnumerateInstanceExtensionProperties" ) ) )
        , vkEnumerateInstanceLayerProperties( PFN_vkEnumerateInstanceLayerProperties( getProcAddr( NULL, "vkEnumerateInstanceLayerProperties" ) ) )
        //=== VK_VERSION_1_1 ===
        , vkEnumerateInstanceVersion( PFN_vkEnumerateInstanceVersion( getProcAddr( NULL, "vkEnumerateInstanceVersion" ) ) )
    9046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    904a:	48 89 c7             	mov    %rax,%rdi
    904d:	e8 ba d4 ff ff       	call   650c <_ZN2vk18DispatchLoaderBaseC1Ev>
        : vkGetInstanceProcAddr( getProcAddr )
    9052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9056:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    905a:	48 89 50 10          	mov    %rdx,0x10(%rax)
        , vkCreateInstance( PFN_vkCreateInstance( getProcAddr( NULL, "vkCreateInstance" ) ) )
    905e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9062:	48 8d 15 ff 79 00 00 	lea    0x79ff(%rip),%rdx        # 10a68 <_ZNSt8__detailL19__atomic_spin_countE+0x4>
    9069:	48 89 d6             	mov    %rdx,%rsi
    906c:	bf 00 00 00 00       	mov    $0x0,%edi
    9071:	ff d0                	call   *%rax
    9073:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9077:	48 89 42 18          	mov    %rax,0x18(%rdx)
        , vkEnumerateInstanceExtensionProperties( PFN_vkEnumerateInstanceExtensionProperties( getProcAddr( NULL, "vkEnumerateInstanceExtensionProperties" ) ) )
    907b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    907f:	48 8d 15 fa 79 00 00 	lea    0x79fa(%rip),%rdx        # 10a80 <_ZNSt8__detailL19__atomic_spin_countE+0x1c>
    9086:	48 89 d6             	mov    %rdx,%rsi
    9089:	bf 00 00 00 00       	mov    $0x0,%edi
    908e:	ff d0                	call   *%rax
    9090:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9094:	48 89 42 20          	mov    %rax,0x20(%rdx)
        , vkEnumerateInstanceLayerProperties( PFN_vkEnumerateInstanceLayerProperties( getProcAddr( NULL, "vkEnumerateInstanceLayerProperties" ) ) )
    9098:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    909c:	48 8d 15 05 7a 00 00 	lea    0x7a05(%rip),%rdx        # 10aa8 <_ZNSt8__detailL19__atomic_spin_countE+0x44>
    90a3:	48 89 d6             	mov    %rdx,%rsi
    90a6:	bf 00 00 00 00       	mov    $0x0,%edi
    90ab:	ff d0                	call   *%rax
    90ad:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    90b1:	48 89 42 28          	mov    %rax,0x28(%rdx)
        , vkEnumerateInstanceVersion( PFN_vkEnumerateInstanceVersion( getProcAddr( NULL, "vkEnumerateInstanceVersion" ) ) )
    90b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    90b9:	48 8d 15 0b 7a 00 00 	lea    0x7a0b(%rip),%rdx        # 10acb <_ZNSt8__detailL19__atomic_spin_countE+0x67>
    90c0:	48 89 d6             	mov    %rdx,%rsi
    90c3:	bf 00 00 00 00       	mov    $0x0,%edi
    90c8:	ff d0                	call   *%rax
    90ca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    90ce:	48 89 42 30          	mov    %rax,0x30(%rdx)
      {
      }
    90d2:	90                   	nop
    90d3:	c9                   	leave
    90d4:	c3                   	ret
    90d5:	90                   	nop

00000000000090d6 <_ZN2vk4raii7ContextC1Ev>:

    class Context
    {
    public:
#  if VULKAN_HPP_ENABLE_DYNAMIC_LOADER_TOOL
      Context()
    90d6:	55                   	push   %rbp
    90d7:	48 89 e5             	mov    %rsp,%rbp
    90da:	41 54                	push   %r12
    90dc:	53                   	push   %rbx
    90dd:	48 83 ec 30          	sub    $0x30,%rsp
    90e1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    90e5:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    90e9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    90ed:	48 89 c7             	mov    %rax,%rdi
    90f0:	e8 67 d5 ff ff       	call   665c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
    90f5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    90f9:	48 89 c6             	mov    %rax,%rsi
    90fc:	48 89 df             	mov    %rbx,%rdi
    90ff:	e8 16 fe ff ff       	call   8f1a <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    9104:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    9108:	48 89 c7             	mov    %rax,%rdi
    910b:	e8 f0 06 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    9110:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9114:	48 8d 58 08          	lea    0x8(%rax),%rbx
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    9118:	bf 38 00 00 00       	mov    $0x38,%edi
    911d:	e8 be c0 ff ff       	call   51e0 <_Znwm@plt>
    9122:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    9126:	41 bc 01 00 00 00    	mov    $0x1,%r12d
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    912c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9130:	48 8d 15 af 79 00 00 	lea    0x79af(%rip),%rdx        # 10ae6 <_ZNSt8__detailL19__atomic_spin_countE+0x82>
    9137:	48 89 d6             	mov    %rdx,%rsi
    913a:	48 89 c7             	mov    %rax,%rdi
    913d:	e8 a8 09 00 00       	call   9aea <_ZNK2vk13DynamicLoader14getProcAddressIPFPFvvEP12VkInstance_TPKcEEET_S7_>
    9142:	48 89 c6             	mov    %rax,%rsi
    9145:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    9149:	e8 e8 fe ff ff       	call   9036 <_ZN2vk4raii17ContextDispatcherC1EPFPFvvEP12VkInstance_TPKcE>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    914e:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    9152:	48 89 df             	mov    %rbx,%rdi
    9155:	e8 de 09 00 00       	call   9b38 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1IS4_vEEPS2_>
#  else
      Context( PFN_vkGetInstanceProcAddr getInstanceProcAddr )
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher( getInstanceProcAddr ) )
#  endif
      {
      }
    915a:	eb 4c                	jmp    91a8 <_ZN2vk4raii7ContextC1Ev+0xd2>
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    915c:	48 89 c3             	mov    %rax,%rbx
    915f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    9163:	48 89 c7             	mov    %rax,%rdi
    9166:	e8 95 06 00 00       	call   9800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    916b:	48 89 d8             	mov    %rbx,%rax
    916e:	48 89 c7             	mov    %rax,%rdi
    9171:	e8 aa c1 ff ff       	call   5320 <_Unwind_Resume@plt>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    9176:	48 89 c3             	mov    %rax,%rbx
    9179:	45 84 e4             	test   %r12b,%r12b
    917c:	74 13                	je     9191 <_ZN2vk4raii7ContextC1Ev+0xbb>
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    917e:	be 38 00 00 00       	mov    $0x38,%esi
    9183:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    9187:	e8 64 c0 ff ff       	call   51f0 <_ZdlPvm@plt>
    918c:	eb 03                	jmp    9191 <_ZN2vk4raii7ContextC1Ev+0xbb>
      }
    918e:	48 89 c3             	mov    %rax,%rbx
    9191:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9195:	48 89 c7             	mov    %rax,%rdi
    9198:	e8 6f fe ff ff       	call   900c <_ZN2vk13DynamicLoaderD1Ev>
    919d:	48 89 d8             	mov    %rbx,%rax
    91a0:	48 89 c7             	mov    %rax,%rdi
    91a3:	e8 78 c1 ff ff       	call   5320 <_Unwind_Resume@plt>
    91a8:	48 83 c4 30          	add    $0x30,%rsp
    91ac:	5b                   	pop    %rbx
    91ad:	41 5c                	pop    %r12
    91af:	5d                   	pop    %rbp
    91b0:	c3                   	ret
    91b1:	90                   	nop

00000000000091b2 <_ZN2vk4raii8InstanceD1Ev>:
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
      }

      Instance( std::nullptr_t ) {}

      ~Instance()
    91b2:	55                   	push   %rbp
    91b3:	48 89 e5             	mov    %rsp,%rbp
    91b6:	48 83 ec 10          	sub    $0x10,%rsp
    91ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    91be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c2:	48 89 c7             	mov    %rax,%rdi
    91c5:	e8 14 00 00 00       	call   91de <_ZN2vk4raii8Instance5clearEv>
      }
    91ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91ce:	48 83 c0 10          	add    $0x10,%rax
    91d2:	48 89 c7             	mov    %rax,%rdi
    91d5:	e8 e8 09 00 00       	call   9bc2 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>
    91da:	90                   	nop
    91db:	c9                   	leave
    91dc:	c3                   	ret
    91dd:	90                   	nop

00000000000091de <_ZN2vk4raii8Instance5clearEv>:
      VULKAN_HPP_NAMESPACE::Instance const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_instance;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    91de:	55                   	push   %rbp
    91df:	48 89 e5             	mov    %rsp,%rbp
    91e2:	41 54                	push   %r12
    91e4:	53                   	push   %rbx
    91e5:	48 83 ec 10          	sub    $0x10,%rsp
    91e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
        if ( m_instance )
    91ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91f1:	48 89 c7             	mov    %rax,%rdi
    91f4:	e8 09 fd ff ff       	call   8f02 <_ZNK2vk8InstancecvbEv>
    91f9:	84 c0                	test   %al,%al
    91fb:	74 2d                	je     922a <_ZN2vk4raii8Instance5clearEv+0x4c>
        {
          getDispatcher()->vkDestroyInstance( static_cast<VkInstance>( m_instance ), reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    91fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9201:	48 89 c7             	mov    %rax,%rdi
    9204:	e8 5d 00 00 00       	call   9266 <_ZNK2vk4raii8Instance13getDispatcherEv>
    9209:	4c 8b 60 10          	mov    0x10(%rax),%r12
    920d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9211:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9215:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9219:	48 89 c7             	mov    %rax,%rdi
    921c:	e8 cf fc ff ff       	call   8ef0 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    9221:	48 89 de             	mov    %rbx,%rsi
    9224:	48 89 c7             	mov    %rax,%rdi
    9227:	41 ff d4             	call   *%r12
        }
        m_instance   = nullptr;
    922a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    922e:	be 00 00 00 00       	mov    $0x0,%esi
    9233:	48 89 c7             	mov    %rax,%rdi
    9236:	e8 97 fc ff ff       	call   8ed2 <_ZN2vk8InstanceaSEDn>
        m_allocator  = nullptr;
    923b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    923f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9246:	00 
        m_dispatcher = nullptr;
    9247:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    924b:	48 83 c0 10          	add    $0x10,%rax
    924f:	be 00 00 00 00       	mov    $0x0,%esi
    9254:	48 89 c7             	mov    %rax,%rdi
    9257:	e8 00 0a 00 00       	call   9c5c <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEaSEDn>
      }
    925c:	90                   	nop
    925d:	48 83 c4 10          	add    $0x10,%rsp
    9261:	5b                   	pop    %rbx
    9262:	41 5c                	pop    %r12
    9264:	5d                   	pop    %rbp
    9265:	c3                   	ret

0000000000009266 <_ZNK2vk4raii8Instance13getDispatcherEv>:

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher const * getDispatcher() const
    9266:	55                   	push   %rbp
    9267:	48 89 e5             	mov    %rsp,%rbp
    926a:	48 83 ec 10          	sub    $0x10,%rsp
    926e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    9272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9276:	48 83 c0 10          	add    $0x10,%rax
    927a:	48 89 c7             	mov    %rax,%rdi
    927d:	e8 02 0a 00 00       	call   9c84 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEptEv>
    9282:	48 89 c7             	mov    %rax,%rdi
    9285:	e8 38 d2 ff ff       	call   64c2 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    928a:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    9290:	74 28                	je     92ba <_ZNK2vk4raii8Instance13getDispatcherEv+0x54>
    9292:	48 8d 05 67 78 00 00 	lea    0x7867(%rip),%rax        # 10b00 <_ZNSt8__detailL19__atomic_spin_countE+0x9c>
    9299:	48 89 c1             	mov    %rax,%rcx
    929c:	ba 25 0a 00 00       	mov    $0xa25,%edx
    92a1:	48 8d 05 a8 78 00 00 	lea    0x78a8(%rip),%rax        # 10b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    92a8:	48 89 c6             	mov    %rax,%rsi
    92ab:	48 8d 05 c6 78 00 00 	lea    0x78c6(%rip),%rax        # 10b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    92b2:	48 89 c7             	mov    %rax,%rdi
    92b5:	e8 26 be ff ff       	call   50e0 <__assert_fail@plt>
        return &*m_dispatcher;
    92ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92be:	48 83 c0 10          	add    $0x10,%rax
    92c2:	48 89 c7             	mov    %rax,%rdi
    92c5:	e8 d4 09 00 00       	call   9c9e <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv>
      }
    92ca:	c9                   	leave
    92cb:	c3                   	ret

00000000000092cc <_ZN2vk4raii22DebugUtilsMessengerEXTD1Ev>:
      {
      }

      DebugUtilsMessengerEXT( std::nullptr_t ) {}

      ~DebugUtilsMessengerEXT()
    92cc:	55                   	push   %rbp
    92cd:	48 89 e5             	mov    %rsp,%rbp
    92d0:	48 83 ec 10          	sub    $0x10,%rsp
    92d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    92d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92dc:	48 89 c7             	mov    %rax,%rdi
    92df:	e8 04 00 00 00       	call   92e8 <_ZN2vk4raii22DebugUtilsMessengerEXT5clearEv>
      }
    92e4:	90                   	nop
    92e5:	c9                   	leave
    92e6:	c3                   	ret
    92e7:	90                   	nop

00000000000092e8 <_ZN2vk4raii22DebugUtilsMessengerEXT5clearEv>:
      VULKAN_HPP_NAMESPACE::DebugUtilsMessengerEXT const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_messenger;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    92e8:	55                   	push   %rbp
    92e9:	48 89 e5             	mov    %rsp,%rbp
    92ec:	41 55                	push   %r13
    92ee:	41 54                	push   %r12
    92f0:	53                   	push   %rbx
    92f1:	48 83 ec 18          	sub    $0x18,%rsp
    92f5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
        if ( m_messenger )
    92f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    92fd:	48 83 c0 08          	add    $0x8,%rax
    9301:	48 89 c7             	mov    %rax,%rdi
    9304:	e8 b1 fb ff ff       	call   8eba <_ZNK2vk22DebugUtilsMessengerEXTcvbEv>
    9309:	84 c0                	test   %al,%al
    930b:	74 46                	je     9353 <_ZN2vk4raii22DebugUtilsMessengerEXT5clearEv+0x6b>
        {
          getDispatcher()->vkDestroyDebugUtilsMessengerEXT( static_cast<VkInstance>( m_instance ),
    930d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9311:	48 89 c7             	mov    %rax,%rdi
    9314:	e8 85 00 00 00       	call   939e <_ZNK2vk4raii22DebugUtilsMessengerEXT13getDispatcherEv>
    9319:	4c 8b a0 20 01 00 00 	mov    0x120(%rax),%r12
                                                            static_cast<VkDebugUtilsMessengerEXT>( m_messenger ),
                                                            reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    9320:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9324:	48 8b 58 10          	mov    0x10(%rax),%rbx
          getDispatcher()->vkDestroyDebugUtilsMessengerEXT( static_cast<VkInstance>( m_instance ),
    9328:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    932c:	48 83 c0 08          	add    $0x8,%rax
    9330:	48 89 c7             	mov    %rax,%rdi
    9333:	e8 70 fb ff ff       	call   8ea8 <_ZNK2vk22DebugUtilsMessengerEXTcvP26VkDebugUtilsMessengerEXT_TEv>
    9338:	49 89 c5             	mov    %rax,%r13
    933b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    933f:	48 89 c7             	mov    %rax,%rdi
    9342:	e8 a9 fb ff ff       	call   8ef0 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    9347:	48 89 da             	mov    %rbx,%rdx
    934a:	4c 89 ee             	mov    %r13,%rsi
    934d:	48 89 c7             	mov    %rax,%rdi
    9350:	41 ff d4             	call   *%r12
        }
        m_instance   = nullptr;
    9353:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9357:	be 00 00 00 00       	mov    $0x0,%esi
    935c:	48 89 c7             	mov    %rax,%rdi
    935f:	e8 6e fb ff ff       	call   8ed2 <_ZN2vk8InstanceaSEDn>
        m_messenger  = nullptr;
    9364:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9368:	48 83 c0 08          	add    $0x8,%rax
    936c:	be 00 00 00 00       	mov    $0x0,%esi
    9371:	48 89 c7             	mov    %rax,%rdi
    9374:	e8 11 fb ff ff       	call   8e8a <_ZN2vk22DebugUtilsMessengerEXTaSEDn>
        m_allocator  = nullptr;
    9379:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    937d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    9384:	00 
        m_dispatcher = nullptr;
    9385:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9389:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9390:	00 
      }
    9391:	90                   	nop
    9392:	48 83 c4 18          	add    $0x18,%rsp
    9396:	5b                   	pop    %rbx
    9397:	41 5c                	pop    %r12
    9399:	41 5d                	pop    %r13
    939b:	5d                   	pop    %rbp
    939c:	c3                   	ret
    939d:	90                   	nop

000000000000939e <_ZNK2vk4raii22DebugUtilsMessengerEXT13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::Instance getInstance() const
      {
        return m_instance;
      }

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher const * getDispatcher() const
    939e:	55                   	push   %rbp
    939f:	48 89 e5             	mov    %rsp,%rbp
    93a2:	48 83 ec 10          	sub    $0x10,%rsp
    93a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    93aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ae:	48 8b 40 18          	mov    0x18(%rax),%rax
    93b2:	48 89 c7             	mov    %rax,%rdi
    93b5:	e8 08 d1 ff ff       	call   64c2 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    93ba:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    93c0:	74 28                	je     93ea <_ZNK2vk4raii22DebugUtilsMessengerEXT13getDispatcherEv+0x4c>
    93c2:	48 8d 05 e7 77 00 00 	lea    0x77e7(%rip),%rax        # 10bb0 <_ZNSt8__detailL19__atomic_spin_countE+0x14c>
    93c9:	48 89 c1             	mov    %rax,%rcx
    93cc:	ba f5 17 00 00       	mov    $0x17f5,%edx
    93d1:	48 8d 05 78 77 00 00 	lea    0x7778(%rip),%rax        # 10b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    93d8:	48 89 c6             	mov    %rax,%rsi
    93db:	48 8d 05 96 77 00 00 	lea    0x7796(%rip),%rax        # 10b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    93e2:	48 89 c7             	mov    %rax,%rdi
    93e5:	e8 f6 bc ff ff       	call   50e0 <__assert_fail@plt>
        return m_dispatcher;
    93ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ee:	48 8b 40 18          	mov    0x18(%rax),%rax
      }
    93f2:	c9                   	leave
    93f3:	c3                   	ret

00000000000093f4 <_ZN4rtvc4GLFWC1Ev>:

[[nodiscard]] vk::raii::DebugUtilsMessengerEXT
makeDebugMessenger(const vk::raii::Instance &instance);

struct GLFW {
  GLFW() { glfwInit(); }
    93f4:	55                   	push   %rbp
    93f5:	48 89 e5             	mov    %rsp,%rbp
    93f8:	48 83 ec 10          	sub    $0x10,%rsp
    93fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9400:	e8 2b be ff ff       	call   5230 <glfwInit@plt>
    9405:	90                   	nop
    9406:	c9                   	leave
    9407:	c3                   	ret

0000000000009408 <_ZN4rtvc4GLFWD1Ev>:
  ~GLFW() { glfwTerminate(); }
    9408:	55                   	push   %rbp
    9409:	48 89 e5             	mov    %rsp,%rbp
    940c:	48 83 ec 10          	sub    $0x10,%rsp
    9410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9414:	e8 e7 bd ff ff       	call   5200 <glfwTerminate@plt>
    9419:	90                   	nop
    941a:	c9                   	leave
    941b:	c3                   	ret

000000000000941c <_ZN4rtvc6WindowC1Ev>:

class Window {
  typedef GLFWwindow *pGLFWwindow;

public:
  Window() {
    941c:	55                   	push   %rbp
    941d:	48 89 e5             	mov    %rsp,%rbp
    9420:	48 83 ec 10          	sub    $0x10,%rsp
    9424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    9428:	be 00 00 00 00       	mov    $0x0,%esi
    942d:	bf 01 20 02 00       	mov    $0x22001,%edi
    9432:	e8 39 bd ff ff       	call   5170 <glfwWindowHint@plt>
    glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    9437:	be 00 00 00 00       	mov    $0x0,%esi
    943c:	bf 03 00 02 00       	mov    $0x20003,%edi
    9441:	e8 2a bd ff ff       	call   5170 <glfwWindowHint@plt>
    _window = glfwCreateWindow(800, 600, "VulkanApplication", nullptr, nullptr);
    9446:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    944c:	b9 00 00 00 00       	mov    $0x0,%ecx
    9451:	48 8d 05 d0 77 00 00 	lea    0x77d0(%rip),%rax        # 10c28 <_ZNSt8__detailL19__atomic_spin_countE+0x1c4>
    9458:	48 89 c2             	mov    %rax,%rdx
    945b:	be 58 02 00 00       	mov    $0x258,%esi
    9460:	bf 20 03 00 00       	mov    $0x320,%edi
    9465:	e8 66 be ff ff       	call   52d0 <glfwCreateWindow@plt>
    946a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    946e:	48 89 02             	mov    %rax,(%rdx)
  }
    9471:	90                   	nop
    9472:	c9                   	leave
    9473:	c3                   	ret

0000000000009474 <_ZN4rtvc6WindowD1Ev>:
  ~Window() { glfwDestroyWindow(_window); }
    9474:	55                   	push   %rbp
    9475:	48 89 e5             	mov    %rsp,%rbp
    9478:	48 83 ec 10          	sub    $0x10,%rsp
    947c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9484:	48 8b 00             	mov    (%rax),%rax
    9487:	48 89 c7             	mov    %rax,%rdi
    948a:	e8 c1 bb ff ff       	call   5050 <glfwDestroyWindow@plt>
    948f:	90                   	nop
    9490:	c9                   	leave
    9491:	c3                   	ret

0000000000009492 <_ZN4rtvc6Window3refEv>:
  Window(const Window &) = delete;
  Window(Window &&) = delete;
  Window &operator=(const Window &) = delete;
  Window &operator=(Window &&) = delete;

  const pGLFWwindow &ref() { return _window; }
    9492:	55                   	push   %rbp
    9493:	48 89 e5             	mov    %rsp,%rbp
    9496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    949a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    949e:	5d                   	pop    %rbp
    949f:	c3                   	ret

00000000000094a0 <_ZN2vk4raii7ContextD1Ev>:
      ~Context() = default;
    94a0:	55                   	push   %rbp
    94a1:	48 89 e5             	mov    %rsp,%rbp
    94a4:	48 83 ec 10          	sub    $0x10,%rsp
    94a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b0:	48 83 c0 08          	add    $0x8,%rax
    94b4:	48 89 c7             	mov    %rax,%rdi
    94b7:	e8 a2 06 00 00       	call   9b5e <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev>
    94bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94c0:	48 89 c7             	mov    %rax,%rdi
    94c3:	e8 44 fb ff ff       	call   900c <_ZN2vk13DynamicLoaderD1Ev>
    94c8:	90                   	nop
    94c9:	c9                   	leave
    94ca:	c3                   	ret
    94cb:	90                   	nop

00000000000094cc <_ZN4rtvc9VulkanApp6renderEv>:
  VulkanApp(const VulkanApp &) = delete;
  VulkanApp(VulkanApp &&) = delete;
  VulkanApp &operator=(const VulkanApp &) = delete;
  VulkanApp &operator=(VulkanApp &&) = delete;

  void render() {
    94cc:	55                   	push   %rbp
    94cd:	48 89 e5             	mov    %rsp,%rbp
    94d0:	48 83 ec 10          	sub    $0x10,%rsp
    94d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!glfwWindowShouldClose(_window.ref())) {
    94d8:	eb 05                	jmp    94df <_ZN4rtvc9VulkanApp6renderEv+0x13>
      glfwPollEvents();
    94da:	e8 e1 bc ff ff       	call   51c0 <glfwPollEvents@plt>
    while (!glfwWindowShouldClose(_window.ref())) {
    94df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e3:	48 83 c0 18          	add    $0x18,%rax
    94e7:	48 89 c7             	mov    %rax,%rdi
    94ea:	e8 a3 ff ff ff       	call   9492 <_ZN4rtvc6Window3refEv>
    94ef:	48 8b 00             	mov    (%rax),%rax
    94f2:	48 89 c7             	mov    %rax,%rdi
    94f5:	e8 66 be ff ff       	call   5360 <glfwWindowShouldClose@plt>
    94fa:	85 c0                	test   %eax,%eax
    94fc:	0f 94 c0             	sete   %al
    94ff:	84 c0                	test   %al,%al
    9501:	75 d7                	jne    94da <_ZN4rtvc9VulkanApp6renderEv+0xe>
    }
  }
    9503:	90                   	nop
    9504:	90                   	nop
    9505:	c9                   	leave
    9506:	c3                   	ret
    9507:	90                   	nop

0000000000009508 <_ZN4rtvc9VulkanAppC1Ev>:
  VulkanApp() = default;
    9508:	55                   	push   %rbp
    9509:	48 89 e5             	mov    %rsp,%rbp
    950c:	53                   	push   %rbx
    950d:	48 83 ec 18          	sub    $0x18,%rsp
    9511:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9515:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9519:	48 89 c7             	mov    %rax,%rdi
    951c:	e8 b5 fb ff ff       	call   90d6 <_ZN2vk4raii7ContextC1Ev>
    9521:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9525:	48 83 c0 10          	add    $0x10,%rax
    9529:	48 89 c7             	mov    %rax,%rdi
    952c:	e8 c3 fe ff ff       	call   93f4 <_ZN4rtvc4GLFWC1Ev>
    9531:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9535:	48 83 c0 18          	add    $0x18,%rax
    9539:	48 89 c7             	mov    %rax,%rdi
    953c:	e8 db fe ff ff       	call   941c <_ZN4rtvc6WindowC1Ev>
    9541:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9545:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9549:	48 83 c2 20          	add    $0x20,%rdx
    954d:	48 89 c6             	mov    %rax,%rsi
    9550:	48 89 d7             	mov    %rdx,%rdi
    9553:	e8 cf 31 00 00       	call   c727 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE>
    9558:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    955c:	48 8d 50 20          	lea    0x20(%rax),%rdx
    9560:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9564:	48 83 c0 38          	add    $0x38,%rax
    9568:	48 89 d6             	mov    %rdx,%rsi
    956b:	48 89 c7             	mov    %rax,%rdi
    956e:	e8 63 35 00 00       	call   cad6 <_ZN4rtvc18makeDebugMessengerERKN2vk4raii8InstanceE>
    9573:	eb 59                	jmp    95ce <_ZN4rtvc9VulkanAppC1Ev+0xc6>
    9575:	48 89 c3             	mov    %rax,%rbx
    9578:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    957c:	48 83 c0 20          	add    $0x20,%rax
    9580:	48 89 c7             	mov    %rax,%rdi
    9583:	e8 2a fc ff ff       	call   91b2 <_ZN2vk4raii8InstanceD1Ev>
    9588:	eb 03                	jmp    958d <_ZN4rtvc9VulkanAppC1Ev+0x85>
    958a:	48 89 c3             	mov    %rax,%rbx
    958d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9591:	48 83 c0 18          	add    $0x18,%rax
    9595:	48 89 c7             	mov    %rax,%rdi
    9598:	e8 d7 fe ff ff       	call   9474 <_ZN4rtvc6WindowD1Ev>
    959d:	eb 03                	jmp    95a2 <_ZN4rtvc9VulkanAppC1Ev+0x9a>
    959f:	48 89 c3             	mov    %rax,%rbx
    95a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95a6:	48 83 c0 10          	add    $0x10,%rax
    95aa:	48 89 c7             	mov    %rax,%rdi
    95ad:	e8 56 fe ff ff       	call   9408 <_ZN4rtvc4GLFWD1Ev>
    95b2:	eb 03                	jmp    95b7 <_ZN4rtvc9VulkanAppC1Ev+0xaf>
    95b4:	48 89 c3             	mov    %rax,%rbx
    95b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95bb:	48 89 c7             	mov    %rax,%rdi
    95be:	e8 dd fe ff ff       	call   94a0 <_ZN2vk4raii7ContextD1Ev>
    95c3:	48 89 d8             	mov    %rbx,%rax
    95c6:	48 89 c7             	mov    %rax,%rdi
    95c9:	e8 52 bd ff ff       	call   5320 <_Unwind_Resume@plt>
    95ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95d2:	c9                   	leave
    95d3:	c3                   	ret

00000000000095d4 <_ZN4rtvc9VulkanAppD1Ev>:
  ~VulkanApp() = default;
    95d4:	55                   	push   %rbp
    95d5:	48 89 e5             	mov    %rsp,%rbp
    95d8:	48 83 ec 10          	sub    $0x10,%rsp
    95dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95e4:	48 83 c0 38          	add    $0x38,%rax
    95e8:	48 89 c7             	mov    %rax,%rdi
    95eb:	e8 dc fc ff ff       	call   92cc <_ZN2vk4raii22DebugUtilsMessengerEXTD1Ev>
    95f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95f4:	48 83 c0 20          	add    $0x20,%rax
    95f8:	48 89 c7             	mov    %rax,%rdi
    95fb:	e8 b2 fb ff ff       	call   91b2 <_ZN2vk4raii8InstanceD1Ev>
    9600:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9604:	48 83 c0 18          	add    $0x18,%rax
    9608:	48 89 c7             	mov    %rax,%rdi
    960b:	e8 64 fe ff ff       	call   9474 <_ZN4rtvc6WindowD1Ev>
    9610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9614:	48 83 c0 10          	add    $0x10,%rax
    9618:	48 89 c7             	mov    %rax,%rdi
    961b:	e8 e8 fd ff ff       	call   9408 <_ZN4rtvc4GLFWD1Ev>
    9620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9624:	48 89 c7             	mov    %rax,%rdi
    9627:	e8 74 fe ff ff       	call   94a0 <_ZN2vk4raii7ContextD1Ev>
    962c:	90                   	nop
    962d:	c9                   	leave
    962e:	c3                   	ret

000000000000962f <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    }

#if __cplusplus >= 202002L
  template<typename _Tp, typename... _Args>
    constexpr auto
    construct_at(_Tp* __location, _Args&&... __args)
    962f:	55                   	push   %rbp
    9630:	48 89 e5             	mov    %rsp,%rbp
    9633:	53                   	push   %rbx
    9634:	48 83 ec 18          	sub    $0x18,%rsp
    9638:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    963c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
    -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    9640:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9644:	48 89 c6             	mov    %rax,%rsi
    9647:	bf 01 00 00 00       	mov    $0x1,%edi
    964c:	e8 c8 ca ff ff       	call   6119 <_ZnwmPv>
    9651:	48 89 c3             	mov    %rax,%rbx
    9654:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9658:	48 89 c7             	mov    %rax,%rdi
    965b:	e8 80 06 00 00       	call   9ce0 <_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE>
    9660:	0f b6 00             	movzbl (%rax),%eax
    9663:	88 03                	mov    %al,(%rbx)
    9665:	48 89 d8             	mov    %rbx,%rax
    9668:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    966c:	c9                   	leave
    966d:	c3                   	ret

000000000000966e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    966e:	55                   	push   %rbp
    966f:	48 89 e5             	mov    %rsp,%rbp
    9672:	48 83 ec 20          	sub    $0x20,%rsp
    9676:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    967a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    9681:	00 
      while (!eq(__p[__i], char_type()))
    9682:	eb 05                	jmp    9689 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    9684:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    9689:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    968d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9695:	48 01 c2             	add    %rax,%rdx
    9698:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    969c:	48 89 c6             	mov    %rax,%rsi
    969f:	48 89 d7             	mov    %rdx,%rdi
    96a2:	e8 47 06 00 00       	call   9cee <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    96a7:	83 f0 01             	xor    $0x1,%eax
    96aa:	84 c0                	test   %al,%al
    96ac:	75 d6                	jne    9684 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    96ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    96b2:	c9                   	leave
    96b3:	c3                   	ret

00000000000096b4 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm>:
    char_traits<_CharT>::
    96b4:	55                   	push   %rbp
    96b5:	48 89 e5             	mov    %rsp,%rbp
    96b8:	48 83 ec 30          	sub    $0x30,%rsp
    96bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    96c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    96c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (__n == 0)
    96c8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    96cd:	75 09                	jne    96d8 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x24>
	return __s1;
    96cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96d3:	e9 8b 00 00 00       	jmp    9763 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
      if (std::__is_constant_evaluated())
    96d8:	e8 31 ca ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    96dd:	84 c0                	test   %al,%al
    96df:	74 67                	je     9748 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x94>
	  if (__s1 == __s2) // unlikely, but saves a lot of work
    96e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96e5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    96e9:	75 06                	jne    96f1 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x3d>
	    return __s1;
    96eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96ef:	eb 72                	jmp    9763 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
	  char_type* __tmp = new char_type[__n];
    96f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96f5:	48 89 c7             	mov    %rax,%rdi
    96f8:	e8 33 b9 ff ff       	call   5030 <_Znam@plt>
    96fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  copy(__tmp, __s2, __n);
    9701:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9705:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    970d:	48 89 ce             	mov    %rcx,%rsi
    9710:	48 89 c7             	mov    %rax,%rdi
    9713:	e8 4e 00 00 00       	call   9766 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
	  copy(__s1, __tmp, __n);
    9718:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    971c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    9720:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9724:	48 89 ce             	mov    %rcx,%rsi
    9727:	48 89 c7             	mov    %rax,%rdi
    972a:	e8 37 00 00 00       	call   9766 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
	  delete[] __tmp;
    972f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9734:	74 0c                	je     9742 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x8e>
    9736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    973a:	48 89 c7             	mov    %rax,%rdi
    973d:	e8 1e bb ff ff       	call   5260 <_ZdaPv@plt>
	  return __s1;
    9742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9746:	eb 1b                	jmp    9763 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
      __builtin_memmove(__s1, __s2, __n * sizeof(char_type));
    9748:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    974c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9750:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9754:	48 89 ce             	mov    %rcx,%rsi
    9757:	48 89 c7             	mov    %rax,%rdi
    975a:	e8 81 bb ff ff       	call   52e0 <memmove@plt>
      return __s1;
    975f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    9763:	c9                   	leave
    9764:	c3                   	ret
    9765:	90                   	nop

0000000000009766 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>:
    char_traits<_CharT>::
    9766:	55                   	push   %rbp
    9767:	48 89 e5             	mov    %rsp,%rbp
    976a:	48 83 ec 30          	sub    $0x30,%rsp
    976e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9772:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9776:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (std::__is_constant_evaluated())
    977a:	e8 8f c9 ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    977f:	84 c0                	test   %al,%al
    9781:	74 40                	je     97c3 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x5d>
	  for (std::size_t __i = 0; __i < __n; ++__i)
    9783:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    978a:	00 
    978b:	eb 26                	jmp    97b3 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x4d>
	    std::construct_at(__s1 + __i, __s2[__i]);
    978d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9795:	48 01 c2             	add    %rax,%rdx
    9798:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    979c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a0:	48 01 c8             	add    %rcx,%rax
    97a3:	48 89 d6             	mov    %rdx,%rsi
    97a6:	48 89 c7             	mov    %rax,%rdi
    97a9:	e8 81 fe ff ff       	call   962f <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  for (std::size_t __i = 0; __i < __n; ++__i)
    97ae:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    97b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97b7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    97bb:	72 d0                	jb     978d <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x27>
	  return __s1;
    97bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97c1:	eb 21                	jmp    97e4 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x7e>
      __builtin_memcpy(__s1, __s2, __n * sizeof(char_type));
    97c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    97c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    97cb:	48 89 d1             	mov    %rdx,%rcx
    97ce:	48 89 c6             	mov    %rax,%rsi
    97d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    97d5:	48 89 c2             	mov    %rax,%rdx
    97d8:	48 89 cf             	mov    %rcx,%rdi
    97db:	e8 80 b9 ff ff       	call   5160 <memcpy@plt>
      return __s1;
    97e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    97e4:	c9                   	leave
    97e5:	c3                   	ret

00000000000097e6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
       *  This is a handle to internal data.  Do not modify or dire things may
       *  happen.
      */
      _GLIBCXX20_CONSTEXPR
      const _CharT*
      c_str() const _GLIBCXX_NOEXCEPT
    97e6:	55                   	push   %rbp
    97e7:	48 89 e5             	mov    %rsp,%rbp
    97ea:	48 83 ec 10          	sub    $0x10,%rsp
    97ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data(); }
    97f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97f6:	48 89 c7             	mov    %rax,%rdi
    97f9:	e8 12 05 00 00       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    97fe:	c9                   	leave
    97ff:	c3                   	ret

0000000000009800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
      ~basic_string()
    9800:	55                   	push   %rbp
    9801:	48 89 e5             	mov    %rsp,%rbp
    9804:	48 83 ec 10          	sub    $0x10,%rsp
    9808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_dispose(); }
    980c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9810:	48 89 c7             	mov    %rax,%rdi
    9813:	e8 40 05 00 00       	call   9d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    9818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    981c:	48 89 c7             	mov    %rax,%rdi
    981f:	e8 1c ce ff ff       	call   6640 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    9824:	90                   	nop
    9825:	c9                   	leave
    9826:	c3                   	ret
    9827:	90                   	nop

0000000000009828 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
      basic_string(basic_string&& __str) noexcept
    9828:	55                   	push   %rbp
    9829:	48 89 e5             	mov    %rsp,%rbp
    982c:	41 54                	push   %r12
    982e:	53                   	push   %rbx
    982f:	48 83 ec 10          	sub    $0x10,%rsp
    9833:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9837:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
    983b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    983f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9843:	48 89 c7             	mov    %rax,%rdi
    9846:	e8 47 05 00 00       	call   9d92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    984b:	48 89 c7             	mov    %rax,%rdi
    984e:	e8 69 cf ff ff       	call   67bc <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>
    9853:	49 89 c4             	mov    %rax,%r12
    9856:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    985a:	48 89 c7             	mov    %rax,%rdi
    985d:	e8 ba ce ff ff       	call   671c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9862:	4c 89 e2             	mov    %r12,%rdx
    9865:	48 89 c6             	mov    %rax,%rsi
    9868:	48 89 df             	mov    %rbx,%rdi
    986b:	e8 0c cf ff ff       	call   677c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
	if (__str._M_is_local())
    9870:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9874:	48 89 c7             	mov    %rax,%rdi
    9877:	e8 24 05 00 00       	call   9da0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    987c:	84 c0                	test   %al,%al
    987e:	74 2d                	je     98ad <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x85>
			      __str.length() + 1);
    9880:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9884:	48 89 c7             	mov    %rax,%rdi
    9887:	e8 ae 00 00 00       	call   993a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
	    traits_type::copy(_M_local_buf, __str._M_local_buf,
    988c:	48 8d 50 01          	lea    0x1(%rax),%rdx
    9890:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9894:	48 8d 48 10          	lea    0x10(%rax),%rcx
    9898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    989c:	48 83 c0 10          	add    $0x10,%rax
    98a0:	48 89 ce             	mov    %rcx,%rsi
    98a3:	48 89 c7             	mov    %rax,%rdi
    98a6:	e8 58 c9 ff ff       	call   6203 <_ZNSt11char_traitsIcE4copyEPcPKcm>
    98ab:	eb 35                	jmp    98e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0xba>
	    _M_data(__str._M_data());
    98ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98b1:	48 89 c7             	mov    %rax,%rdi
    98b4:	e8 57 04 00 00       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    98b9:	48 89 c2             	mov    %rax,%rdx
    98bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98c0:	48 89 d6             	mov    %rdx,%rsi
    98c3:	48 89 c7             	mov    %rax,%rdi
    98c6:	e8 09 05 00 00       	call   9dd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__str._M_allocated_capacity);
    98cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98cf:	48 8b 50 10          	mov    0x10(%rax),%rdx
    98d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98d7:	48 89 d6             	mov    %rdx,%rsi
    98da:	48 89 c7             	mov    %rax,%rdi
    98dd:	e8 0c 05 00 00       	call   9dee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	_M_length(__str.length());
    98e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98e6:	48 89 c7             	mov    %rax,%rdi
    98e9:	e8 4c 00 00 00       	call   993a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    98ee:	48 89 c2             	mov    %rax,%rdx
    98f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98f5:	48 89 d6             	mov    %rdx,%rsi
    98f8:	48 89 c7             	mov    %rax,%rdi
    98fb:	e8 0a 05 00 00       	call   9e0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	__str._M_data(__str._M_local_data());
    9900:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9904:	48 89 c7             	mov    %rax,%rdi
    9907:	e8 10 ce ff ff       	call   671c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    990c:	48 89 c2             	mov    %rax,%rdx
    990f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9913:	48 89 d6             	mov    %rdx,%rsi
    9916:	48 89 c7             	mov    %rax,%rdi
    9919:	e8 b6 04 00 00       	call   9dd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	__str._M_set_length(0);
    991e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9922:	be 00 00 00 00       	mov    $0x0,%esi
    9927:	48 89 c7             	mov    %rax,%rdi
    992a:	e8 07 01 00 00       	call   9a36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    992f:	90                   	nop
    9930:	48 83 c4 10          	add    $0x10,%rsp
    9934:	5b                   	pop    %rbx
    9935:	41 5c                	pop    %r12
    9937:	5d                   	pop    %rbp
    9938:	c3                   	ret
    9939:	90                   	nop

000000000000993a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
      length() const _GLIBCXX_NOEXCEPT
    993a:	55                   	push   %rbp
    993b:	48 89 e5             	mov    %rsp,%rbp
    993e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_string_length; }
    9942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9946:	48 8b 40 08          	mov    0x8(%rax),%rax
    994a:	5d                   	pop    %rbp
    994b:	c3                   	ret

000000000000994c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    994c:	55                   	push   %rbp
    994d:	48 89 e5             	mov    %rsp,%rbp
    9950:	48 83 ec 20          	sub    $0x20,%rsp
    9954:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9958:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    995c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
    { return std::move(__rhs.insert(0, __lhs)); }
    9960:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9964:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9968:	be 00 00 00 00       	mov    $0x0,%esi
    996d:	48 89 c7             	mov    %rax,%rdi
    9970:	e8 b7 06 00 00       	call   a02c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc>
    9975:	48 89 c7             	mov    %rax,%rdi
    9978:	e8 a0 06 00 00       	call   a01d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    997d:	48 89 c2             	mov    %rax,%rdx
    9980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9984:	48 89 d6             	mov    %rdx,%rsi
    9987:	48 89 c7             	mov    %rax,%rdi
    998a:	e8 99 fe ff ff       	call   9828 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    998f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9993:	c9                   	leave
    9994:	c3                   	ret
    9995:	90                   	nop

0000000000009996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    9996:	55                   	push   %rbp
    9997:	48 89 e5             	mov    %rsp,%rbp
    999a:	53                   	push   %rbx
    999b:	48 83 ec 38          	sub    $0x38,%rsp
    999f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    99a3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    99a7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    99ab:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    99af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99b3:	48 89 c7             	mov    %rax,%rdi
    99b6:	e8 61 cd ff ff       	call   671c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    99bb:	48 89 c1             	mov    %rax,%rcx
    99be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    99c2:	48 89 c2             	mov    %rax,%rdx
    99c5:	48 89 ce             	mov    %rcx,%rsi
    99c8:	48 89 df             	mov    %rbx,%rdi
    99cb:	e8 52 03 00 00       	call   9d22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
	if (__s == 0)
    99d0:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    99d5:	75 0f                	jne    99e6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    99d7:	48 8d 05 72 72 00 00 	lea    0x7272(%rip),%rax        # 10c50 <_ZNSt8__detailL19__atomic_spin_countE+0x1ec>
    99de:	48 89 c7             	mov    %rax,%rdi
    99e1:	e8 1a b7 ff ff       	call   5100 <_ZSt19__throw_logic_errorPKc@plt>
	const _CharT* __end = __s + traits_type::length(__s);
    99e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    99ea:	48 89 c7             	mov    %rax,%rdi
    99ed:	e8 82 c7 ff ff       	call   6174 <_ZNSt11char_traitsIcE6lengthEPKc>
    99f2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    99f6:	48 01 d0             	add    %rdx,%rax
    99f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    99fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a01:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9a05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a09:	48 89 ce             	mov    %rcx,%rsi
    9a0c:	48 89 c7             	mov    %rax,%rdi
    9a0f:	e8 56 04 00 00       	call   9e6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    9a14:	eb 1a                	jmp    9a30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    9a16:	48 89 c3             	mov    %rax,%rbx
    9a19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a1d:	48 89 c7             	mov    %rax,%rdi
    9a20:	e8 1b cc ff ff       	call   6640 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    9a25:	48 89 d8             	mov    %rbx,%rax
    9a28:	48 89 c7             	mov    %rax,%rdi
    9a2b:	e8 f0 b8 ff ff       	call   5320 <_Unwind_Resume@plt>
    9a30:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a34:	c9                   	leave
    9a35:	c3                   	ret

0000000000009a36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>:
      _M_set_length(size_type __n)
    9a36:	55                   	push   %rbp
    9a37:	48 89 e5             	mov    %rsp,%rbp
    9a3a:	48 83 ec 20          	sub    $0x20,%rsp
    9a3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_length(__n);
    9a46:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a4e:	48 89 d6             	mov    %rdx,%rsi
    9a51:	48 89 c7             	mov    %rax,%rdi
    9a54:	e8 b1 03 00 00       	call   9e0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	traits_type::assign(_M_data()[__n], _CharT());
    9a59:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    9a5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a61:	48 89 c7             	mov    %rax,%rdi
    9a64:	e8 a7 02 00 00       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9a69:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a6d:	48 01 c2             	add    %rax,%rdx
    9a70:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    9a74:	48 89 c6             	mov    %rax,%rsi
    9a77:	48 89 d7             	mov    %rdx,%rdi
    9a7a:	e8 b7 c6 ff ff       	call   6136 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    9a7f:	90                   	nop
    9a80:	c9                   	leave
    9a81:	c3                   	ret

0000000000009a82 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    { return std::move(__rhs.insert(0, 1, __lhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    9a82:	55                   	push   %rbp
    9a83:	48 89 e5             	mov    %rsp,%rbp
    9a86:	48 83 ec 20          	sub    $0x20,%rsp
    9a8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a92:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	      const _CharT* __rhs)
    { return std::move(__lhs.append(__rhs)); }
    9a96:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a9e:	48 89 d6             	mov    %rdx,%rsi
    9aa1:	48 89 c7             	mov    %rax,%rdi
    9aa4:	e8 f1 04 00 00       	call   9f9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    9aa9:	48 89 c7             	mov    %rax,%rdi
    9aac:	e8 6c 05 00 00       	call   a01d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    9ab1:	48 89 c2             	mov    %rax,%rdx
    9ab4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab8:	48 89 d6             	mov    %rdx,%rsi
    9abb:	48 89 c7             	mov    %rax,%rdi
    9abe:	e8 65 fd ff ff       	call   9828 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    9ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac7:	c9                   	leave
    9ac8:	c3                   	ret
    9ac9:	90                   	nop

0000000000009aca <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    9aca:	55                   	push   %rbp
    9acb:	48 89 e5             	mov    %rsp,%rbp
    9ace:	48 83 ec 10          	sub    $0x10,%rsp
    9ad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->size() == 0; }
    9ad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ada:	48 89 c7             	mov    %rax,%rdi
    9add:	e8 84 c7 ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9ae2:	48 85 c0             	test   %rax,%rax
    9ae5:	0f 94 c0             	sete   %al
    9ae8:	c9                   	leave
    9ae9:	c3                   	ret

0000000000009aea <_ZNK2vk13DynamicLoader14getProcAddressIPFPFvvEP12VkInstance_TPKcEEET_S7_>:

    template <typename T>
    T getProcAddress( const char * function ) const VULKAN_HPP_NOEXCEPT
    9aea:	55                   	push   %rbp
    9aeb:	48 89 e5             	mov    %rsp,%rbp
    9aee:	48 83 ec 10          	sub    $0x10,%rsp
    9af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9af6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
      return (T)dlsym( m_library, function );
    9afa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9afe:	48 8b 00             	mov    (%rax),%rax
    9b01:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b05:	48 89 d6             	mov    %rdx,%rsi
    9b08:	48 89 c7             	mov    %rax,%rdi
    9b0b:	e8 90 b6 ff ff       	call   51a0 <dlsym@plt>
#  elif defined( _WIN32 )
      return ( T )::GetProcAddress( m_library, function );
#  else
#    error unsupported platform
#  endif
    }
    9b10:	c9                   	leave
    9b11:	c3                   	ret

0000000000009b12 <_ZNSt15__uniq_ptr_dataIN2vk4raii17ContextDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEPS2_>:
  template <typename _Tp, typename _Dp,
	    bool = is_move_constructible<_Dp>::value,
	    bool = is_move_assignable<_Dp>::value>
    struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>
    {
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    9b12:	55                   	push   %rbp
    9b13:	48 89 e5             	mov    %rsp,%rbp
    9b16:	48 83 ec 10          	sub    $0x10,%rsp
    9b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b2a:	48 89 d6             	mov    %rdx,%rsi
    9b2d:	48 89 c7             	mov    %rax,%rdi
    9b30:	e8 9b 05 00 00       	call   a0d0 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1EPS2_>
    9b35:	90                   	nop
    9b36:	c9                   	leave
    9b37:	c3                   	ret

0000000000009b38 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1IS4_vEEPS2_>:
       * The deleter will be value-initialized.
       */
      template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>
	_GLIBCXX23_CONSTEXPR
	explicit
	unique_ptr(pointer __p) noexcept
    9b38:	55                   	push   %rbp
    9b39:	48 89 e5             	mov    %rsp,%rbp
    9b3c:	48 83 ec 10          	sub    $0x10,%rsp
    9b40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    9b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b50:	48 89 d6             	mov    %rdx,%rsi
    9b53:	48 89 c7             	mov    %rax,%rdi
    9b56:	e8 b7 ff ff ff       	call   9b12 <_ZNSt15__uniq_ptr_dataIN2vk4raii17ContextDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEPS2_>
        { }
    9b5b:	90                   	nop
    9b5c:	c9                   	leave
    9b5d:	c3                   	ret

0000000000009b5e <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev>:

      /// Destructor, invokes the deleter if the stored pointer is not null.
#if __cplusplus > 202002L && __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~unique_ptr() noexcept
    9b5e:	55                   	push   %rbp
    9b5f:	48 89 e5             	mov    %rsp,%rbp
    9b62:	53                   	push   %rbx
    9b63:	48 83 ec 28          	sub    $0x28,%rsp
    9b67:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
	static_assert(__is_invocable<deleter_type&, pointer>::value,
		      "unique_ptr's deleter must be invocable with a pointer");
	auto& __ptr = _M_t._M_ptr();
    9b6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b6f:	48 89 c7             	mov    %rax,%rdi
    9b72:	e8 91 05 00 00       	call   a108 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    9b77:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    9b7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b7f:	48 8b 00             	mov    (%rax),%rax
    9b82:	48 85 c0             	test   %rax,%rax
    9b85:	74 29                	je     9bb0 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    9b87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b8b:	48 89 c7             	mov    %rax,%rdi
    9b8e:	e8 8f 05 00 00       	call   a122 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE11get_deleterEv>
    9b93:	48 89 c3             	mov    %rax,%rbx
    9b96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b9a:	48 89 c7             	mov    %rax,%rdi
    9b9d:	e8 9a 05 00 00       	call   a13c <_ZSt4moveIRPN2vk4raii17ContextDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    9ba2:	48 8b 00             	mov    (%rax),%rax
    9ba5:	48 89 c6             	mov    %rax,%rsi
    9ba8:	48 89 df             	mov    %rbx,%rdi
    9bab:	e8 9a 05 00 00       	call   a14a <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_>
	__ptr = pointer();
    9bb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bb4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    9bbb:	90                   	nop
    9bbc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9bc0:	c9                   	leave
    9bc1:	c3                   	ret

0000000000009bc2 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>:
      ~unique_ptr() noexcept
    9bc2:	55                   	push   %rbp
    9bc3:	48 89 e5             	mov    %rsp,%rbp
    9bc6:	53                   	push   %rbx
    9bc7:	48 83 ec 28          	sub    $0x28,%rsp
    9bcb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    9bcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bd3:	48 89 c7             	mov    %rax,%rdi
    9bd6:	e8 99 05 00 00       	call   a174 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    9bdb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    9bdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9be3:	48 8b 00             	mov    (%rax),%rax
    9be6:	48 85 c0             	test   %rax,%rax
    9be9:	74 29                	je     9c14 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    9beb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bef:	48 89 c7             	mov    %rax,%rdi
    9bf2:	e8 97 05 00 00       	call   a18e <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE11get_deleterEv>
    9bf7:	48 89 c3             	mov    %rax,%rbx
    9bfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bfe:	48 89 c7             	mov    %rax,%rdi
    9c01:	e8 a2 05 00 00       	call   a1a8 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    9c06:	48 8b 00             	mov    (%rax),%rax
    9c09:	48 89 c6             	mov    %rax,%rsi
    9c0c:	48 89 df             	mov    %rbx,%rdi
    9c0f:	e8 a2 05 00 00       	call   a1b6 <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>
	__ptr = pointer();
    9c14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c18:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    9c1f:	90                   	nop
    9c20:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c24:	c9                   	leave
    9c25:	c3                   	ret

0000000000009c26 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>:
       *
       * The deleter will be invoked if a pointer is already owned.
       */
      _GLIBCXX23_CONSTEXPR
      void
      reset(pointer __p = pointer()) noexcept
    9c26:	55                   	push   %rbp
    9c27:	48 89 e5             	mov    %rsp,%rbp
    9c2a:	53                   	push   %rbx
    9c2b:	48 83 ec 18          	sub    $0x18,%rsp
    9c2f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c33:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	static_assert(__is_invocable<deleter_type&, pointer>::value,
		      "unique_ptr's deleter must be invocable with a pointer");
	_M_t.reset(std::move(__p));
    9c37:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9c3b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9c3f:	48 89 c7             	mov    %rax,%rdi
    9c42:	e8 61 05 00 00       	call   a1a8 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    9c47:	48 8b 00             	mov    (%rax),%rax
    9c4a:	48 89 c6             	mov    %rax,%rsi
    9c4d:	48 89 df             	mov    %rbx,%rdi
    9c50:	e8 8b 05 00 00       	call   a1e0 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
      }
    9c55:	90                   	nop
    9c56:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c5a:	c9                   	leave
    9c5b:	c3                   	ret

0000000000009c5c <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEaSEDn>:
      operator=(nullptr_t) noexcept
    9c5c:	55                   	push   %rbp
    9c5d:	48 89 e5             	mov    %rsp,%rbp
    9c60:	48 83 ec 10          	sub    $0x10,%rsp
    9c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset();
    9c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c70:	be 00 00 00 00       	mov    $0x0,%esi
    9c75:	48 89 c7             	mov    %rax,%rdi
    9c78:	e8 a9 ff ff ff       	call   9c26 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
	return *this;
    9c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9c81:	c9                   	leave
    9c82:	c3                   	ret
    9c83:	90                   	nop

0000000000009c84 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEptEv>:
      operator->() const noexcept
    9c84:	55                   	push   %rbp
    9c85:	48 89 e5             	mov    %rsp,%rbp
    9c88:	48 83 ec 10          	sub    $0x10,%rsp
    9c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    9c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c94:	48 89 c7             	mov    %rax,%rdi
    9c97:	e8 a8 05 00 00       	call   a244 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
      }
    9c9c:	c9                   	leave
    9c9d:	c3                   	ret

0000000000009c9e <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    9c9e:	55                   	push   %rbp
    9c9f:	48 89 e5             	mov    %rsp,%rbp
    9ca2:	48 83 ec 10          	sub    $0x10,%rsp
    9ca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    9caa:	e8 5f c4 ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    9caf:	84 c0                	test   %al,%al
    9cb1:	74 18                	je     9ccb <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    9cb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cb7:	48 89 c7             	mov    %rax,%rdi
    9cba:	e8 85 05 00 00       	call   a244 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
    9cbf:	48 85 c0             	test   %rax,%rax
    9cc2:	75 07                	jne    9ccb <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    9cc4:	b8 01 00 00 00       	mov    $0x1,%eax
    9cc9:	eb 05                	jmp    9cd0 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x32>
    9ccb:	b8 00 00 00 00       	mov    $0x0,%eax
    9cd0:	84 c0                	test   %al,%al
	return *get();
    9cd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd6:	48 89 c7             	mov    %rax,%rdi
    9cd9:	e8 66 05 00 00       	call   a244 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
      }
    9cde:	c9                   	leave
    9cdf:	c3                   	ret

0000000000009ce0 <_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9ce0:	55                   	push   %rbp
    9ce1:	48 89 e5             	mov    %rsp,%rbp
    9ce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cec:	5d                   	pop    %rbp
    9ced:	c3                   	ret

0000000000009cee <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    9cee:	55                   	push   %rbp
    9cef:	48 89 e5             	mov    %rsp,%rbp
    9cf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    9cfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cfe:	0f b6 10             	movzbl (%rax),%edx
    9d01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d05:	0f b6 00             	movzbl (%rax),%eax
    9d08:	38 c2                	cmp    %al,%dl
    9d0a:	0f 94 c0             	sete   %al
    9d0d:	5d                   	pop    %rbp
    9d0e:	c3                   	ret
    9d0f:	90                   	nop

0000000000009d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
      _M_data() const
    9d10:	55                   	push   %rbp
    9d11:	48 89 e5             	mov    %rsp,%rbp
    9d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus._M_p; }
    9d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d1c:	48 8b 00             	mov    (%rax),%rax
    9d1f:	5d                   	pop    %rbp
    9d20:	c3                   	ret
    9d21:	90                   	nop

0000000000009d22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
	_Alloc_hider(pointer __dat, const _Alloc& __a)
    9d22:	55                   	push   %rbp
    9d23:	48 89 e5             	mov    %rsp,%rbp
    9d26:	48 83 ec 20          	sub    $0x20,%rsp
    9d2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d32:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: allocator_type(__a), _M_p(__dat) { }
    9d36:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3e:	48 89 d6             	mov    %rdx,%rsi
    9d41:	48 89 c7             	mov    %rax,%rdi
    9d44:	e8 57 b5 ff ff       	call   52a0 <_ZNSaIcEC2ERKS_@plt>
    9d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d51:	48 89 10             	mov    %rdx,(%rax)
    9d54:	90                   	nop
    9d55:	c9                   	leave
    9d56:	c3                   	ret
    9d57:	90                   	nop

0000000000009d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
      _M_dispose()
    9d58:	55                   	push   %rbp
    9d59:	48 89 e5             	mov    %rsp,%rbp
    9d5c:	48 83 ec 10          	sub    $0x10,%rsp
    9d60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (!_M_is_local())
    9d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d68:	48 89 c7             	mov    %rax,%rdi
    9d6b:	e8 30 00 00 00       	call   9da0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    9d70:	83 f0 01             	xor    $0x1,%eax
    9d73:	84 c0                	test   %al,%al
    9d75:	74 17                	je     9d8e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x36>
	  _M_destroy(_M_allocated_capacity);
    9d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d7b:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9d7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d83:	48 89 d6             	mov    %rdx,%rsi
    9d86:	48 89 c7             	mov    %rax,%rdi
    9d89:	e8 98 05 00 00       	call   a326 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>
      }
    9d8e:	90                   	nop
    9d8f:	c9                   	leave
    9d90:	c3                   	ret
    9d91:	90                   	nop

0000000000009d92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      _M_get_allocator()
    9d92:	55                   	push   %rbp
    9d93:	48 89 e5             	mov    %rsp,%rbp
    9d96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus; }
    9d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d9e:	5d                   	pop    %rbp
    9d9f:	c3                   	ret

0000000000009da0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
      _M_is_local() const
    9da0:	55                   	push   %rbp
    9da1:	48 89 e5             	mov    %rsp,%rbp
    9da4:	53                   	push   %rbx
    9da5:	48 83 ec 18          	sub    $0x18,%rsp
    9da9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _M_data() == _M_local_data(); }
    9dad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9db1:	48 89 c7             	mov    %rax,%rdi
    9db4:	e8 57 ff ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9db9:	48 89 c3             	mov    %rax,%rbx
    9dbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9dc0:	48 89 c7             	mov    %rax,%rdi
    9dc3:	e8 ac 05 00 00       	call   a374 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9dc8:	48 39 c3             	cmp    %rax,%rbx
    9dcb:	0f 94 c0             	sete   %al
    9dce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9dd2:	c9                   	leave
    9dd3:	c3                   	ret

0000000000009dd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
      _M_data(pointer __p)
    9dd4:	55                   	push   %rbp
    9dd5:	48 89 e5             	mov    %rsp,%rbp
    9dd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ddc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_dataplus._M_p = __p; }
    9de0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9de8:	48 89 10             	mov    %rdx,(%rax)
    9deb:	90                   	nop
    9dec:	5d                   	pop    %rbp
    9ded:	c3                   	ret

0000000000009dee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>:
      _M_capacity(size_type __capacity)
    9dee:	55                   	push   %rbp
    9def:	48 89 e5             	mov    %rsp,%rbp
    9df2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9df6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_allocated_capacity = __capacity; }
    9dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dfe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e02:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9e06:	90                   	nop
    9e07:	5d                   	pop    %rbp
    9e08:	c3                   	ret
    9e09:	90                   	nop

0000000000009e0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>:
      _M_length(size_type __length)
    9e0a:	55                   	push   %rbp
    9e0b:	48 89 e5             	mov    %rsp,%rbp
    9e0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_string_length = __length; }
    9e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e1e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9e22:	90                   	nop
    9e23:	5d                   	pop    %rbp
    9e24:	c3                   	ret
    9e25:	90                   	nop

0000000000009e26 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    9e26:	55                   	push   %rbp
    9e27:	48 89 e5             	mov    %rsp,%rbp
    9e2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e3a:	48 89 10             	mov    %rdx,(%rax)
    9e3d:	90                   	nop
    9e3e:	5d                   	pop    %rbp
    9e3f:	c3                   	ret

0000000000009e40 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    9e40:	55                   	push   %rbp
    9e41:	48 89 e5             	mov    %rsp,%rbp
    9e44:	48 83 ec 10          	sub    $0x10,%rsp
    9e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e50:	48 8b 00             	mov    (%rax),%rax
    9e53:	48 85 c0             	test   %rax,%rax
    9e56:	74 0f                	je     9e67 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    9e58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e5c:	48 8b 00             	mov    (%rax),%rax
    9e5f:	48 89 c7             	mov    %rax,%rdi
    9e62:	e8 f1 fe ff ff       	call   9d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    9e67:	90                   	nop
    9e68:	c9                   	leave
    9e69:	c3                   	ret

0000000000009e6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    9e6a:	55                   	push   %rbp
    9e6b:	48 89 e5             	mov    %rsp,%rbp
    9e6e:	48 83 ec 60          	sub    $0x60,%rsp
    9e72:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    9e76:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    9e7a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    9e7e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9e82:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9e86:	48 89 d6             	mov    %rdx,%rsi
    9e89:	48 89 c7             	mov    %rax,%rdi
    9e8c:	e8 01 05 00 00       	call   a392 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    9e91:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    9e95:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9e99:	48 83 f8 0f          	cmp    $0xf,%rax
    9e9d:	76 3f                	jbe    9ede <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    9e9f:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    9ea3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9ea7:	ba 00 00 00 00       	mov    $0x0,%edx
    9eac:	48 89 ce             	mov    %rcx,%rsi
    9eaf:	48 89 c7             	mov    %rax,%rdi
    9eb2:	e8 a7 03 00 00       	call   a25e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9eb7:	48 89 c2             	mov    %rax,%rdx
    9eba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9ebe:	48 89 d6             	mov    %rdx,%rsi
    9ec1:	48 89 c7             	mov    %rax,%rdi
    9ec4:	e8 0b ff ff ff       	call   9dd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
    9ec9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9ecd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9ed1:	48 89 d6             	mov    %rdx,%rsi
    9ed4:	48 89 c7             	mov    %rax,%rdi
    9ed7:	e8 12 ff ff ff       	call   9dee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    9edc:	eb 5e                	jmp    9f3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xd2>
    9ede:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9ee2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (std::is_constant_evaluated())
    9ee6:	e8 40 c2 ff ff       	call   612b <_ZSt21is_constant_evaluatedv>
    9eeb:	84 c0                	test   %al,%al
    9eed:	74 40                	je     9f2f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc5>
	  for (_CharT& __c : _M_local_buf)
    9eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef3:	48 83 c0 10          	add    $0x10,%rax
    9ef7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9efb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9eff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9f03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9f07:	48 83 c0 10          	add    $0x10,%rax
    9f0b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9f0f:	eb 14                	jmp    9f25 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xbb>
    9f11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f15:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	    __c = _CharT();
    9f19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f1d:	c6 00 00             	movb   $0x0,(%rax)
	  for (_CharT& __c : _M_local_buf)
    9f20:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    9f25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9f29:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    9f2d:	75 e2                	jne    9f11 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa7>
	return _M_local_data();
    9f2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f33:	48 89 c7             	mov    %rax,%rdi
    9f36:	e8 e1 c7 ff ff       	call   671c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9f3b:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    9f3c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9f40:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    9f44:	48 89 d6             	mov    %rdx,%rsi
    9f47:	48 89 c7             	mov    %rax,%rdi
    9f4a:	e8 d7 fe ff ff       	call   9e26 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    9f4f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9f53:	48 89 c7             	mov    %rax,%rdi
    9f56:	e8 b5 fd ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9f5b:	48 89 c1             	mov    %rax,%rcx
    9f5e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9f62:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9f66:	48 89 c6             	mov    %rax,%rsi
    9f69:	48 89 cf             	mov    %rcx,%rdi
    9f6c:	e8 52 04 00 00       	call   a3c3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>

	__guard._M_guarded = 0;
    9f71:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    9f78:	00 

	_M_set_length(__dnew);
    9f79:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9f7d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9f81:	48 89 d6             	mov    %rdx,%rsi
    9f84:	48 89 c7             	mov    %rax,%rdi
    9f87:	e8 aa fa ff ff       	call   9a36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    9f8c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    9f90:	48 89 c7             	mov    %rax,%rdi
    9f93:	e8 a8 fe ff ff       	call   9e40 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    9f98:	c9                   	leave
    9f99:	c3                   	ret

0000000000009f9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
      append(const _CharT* __s)
    9f9a:	55                   	push   %rbp
    9f9b:	48 89 e5             	mov    %rsp,%rbp
    9f9e:	48 83 ec 20          	sub    $0x20,%rsp
    9fa2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9fa6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const size_type __n = traits_type::length(__s);
    9faa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fae:	48 89 c7             	mov    %rax,%rdi
    9fb1:	e8 be c1 ff ff       	call   6174 <_ZNSt11char_traitsIcE6lengthEPKc>
    9fb6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_check_length(size_type(0), __n, "basic_string::append");
    9fba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9fbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fc2:	48 8d 0d b9 6c 00 00 	lea    0x6cb9(%rip),%rcx        # 10c82 <_ZNSt8__detailL19__atomic_spin_countE+0x21e>
    9fc9:	be 00 00 00 00       	mov    $0x0,%esi
    9fce:	48 89 c7             	mov    %rax,%rdi
    9fd1:	e8 30 04 00 00       	call   a406 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
	return _M_append(__s, __n);
    9fd6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9fda:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9fde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fe2:	48 89 ce             	mov    %rcx,%rsi
    9fe5:	48 89 c7             	mov    %rax,%rdi
    9fe8:	e8 77 04 00 00       	call   a464 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
      }
    9fed:	c9                   	leave
    9fee:	c3                   	ret
    9fef:	90                   	nop

0000000000009ff0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
    9ff0:	55                   	push   %rbp
    9ff1:	48 89 e5             	mov    %rsp,%rbp
    9ff4:	48 83 ec 10          	sub    $0x10,%rsp
    9ff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return _M_is_local() ? size_type(_S_local_capacity)
    9ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a000:	48 89 c7             	mov    %rax,%rdi
    a003:	e8 98 fd ff ff       	call   9da0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    a008:	84 c0                	test   %al,%al
    a00a:	74 07                	je     a013 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x23>
    a00c:	b8 0f 00 00 00       	mov    $0xf,%eax
	                     : _M_allocated_capacity;
    a011:	eb 08                	jmp    a01b <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x2b>
	return _M_is_local() ? size_type(_S_local_capacity)
    a013:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a017:	48 8b 40 10          	mov    0x10(%rax),%rax
      }
    a01b:	c9                   	leave
    a01c:	c3                   	ret

000000000000a01d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    a01d:	55                   	push   %rbp
    a01e:	48 89 e5             	mov    %rsp,%rbp
    a021:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a025:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a029:	5d                   	pop    %rbp
    a02a:	c3                   	ret
    a02b:	90                   	nop

000000000000a02c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc>:
      insert(size_type __pos, const _CharT* __s)
    a02c:	55                   	push   %rbp
    a02d:	48 89 e5             	mov    %rsp,%rbp
    a030:	48 83 ec 20          	sub    $0x20,%rsp
    a034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a038:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a03c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	return this->replace(__pos, size_type(0), __s,
    a040:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a044:	48 89 c7             	mov    %rax,%rdi
    a047:	e8 28 c1 ff ff       	call   6174 <_ZNSt11char_traitsIcE6lengthEPKc>
    a04c:	48 89 c1             	mov    %rax,%rcx
    a04f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a053:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    a057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a05b:	49 89 c8             	mov    %rcx,%r8
    a05e:	48 89 d1             	mov    %rdx,%rcx
    a061:	ba 00 00 00 00       	mov    $0x0,%edx
    a066:	48 89 c7             	mov    %rax,%rdi
    a069:	e8 c0 04 00 00       	call   a52e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
      }
    a06e:	c9                   	leave
    a06f:	c3                   	ret

000000000000a070 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>:
      _M_check(size_type __pos, const char* __s) const
    a070:	55                   	push   %rbp
    a071:	48 89 e5             	mov    %rsp,%rbp
    a074:	48 83 ec 20          	sub    $0x20,%rsp
    a078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a07c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a080:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__pos > this->size())
    a084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a088:	48 89 c7             	mov    %rax,%rdi
    a08b:	e8 d6 c1 ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a090:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a094:	0f 92 c0             	setb   %al
    a097:	84 c0                	test   %al,%al
    a099:	74 2e                	je     a0c9 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc+0x59>
	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
    a09b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a09f:	48 89 c7             	mov    %rax,%rdi
    a0a2:	e8 bf c1 ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a0a7:	48 89 c1             	mov    %rax,%rcx
    a0aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0b2:	48 89 c6             	mov    %rax,%rsi
    a0b5:	48 8d 05 dc 6b 00 00 	lea    0x6bdc(%rip),%rax        # 10c98 <_ZNSt8__detailL19__atomic_spin_countE+0x234>
    a0bc:	48 89 c7             	mov    %rax,%rdi
    a0bf:	b8 00 00 00 00       	mov    $0x0,%eax
    a0c4:	e8 e7 b1 ff ff       	call   52b0 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
	return __pos;
    a0c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
    a0cd:	c9                   	leave
    a0ce:	c3                   	ret
    a0cf:	90                   	nop

000000000000a0d0 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1EPS2_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    a0d0:	55                   	push   %rbp
    a0d1:	48 89 e5             	mov    %rsp,%rbp
    a0d4:	53                   	push   %rbx
    a0d5:	48 83 ec 18          	sub    $0x18,%rsp
    a0d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a0dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a0e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0e5:	48 89 c7             	mov    %rax,%rdi
    a0e8:	e8 05 05 00 00       	call   a5f2 <_ZNSt5tupleIJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>
    a0ed:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    a0f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0f5:	48 89 c7             	mov    %rax,%rdi
    a0f8:	e8 0b 00 00 00       	call   a108 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a0fd:	48 89 18             	mov    %rbx,(%rax)
    a100:	90                   	nop
    a101:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a105:	c9                   	leave
    a106:	c3                   	ret
    a107:	90                   	nop

000000000000a108 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    a108:	55                   	push   %rbp
    a109:	48 89 e5             	mov    %rsp,%rbp
    a10c:	48 83 ec 10          	sub    $0x10,%rsp
    a110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a118:	48 89 c7             	mov    %rax,%rdi
    a11b:	e8 ed 04 00 00       	call   a60d <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    a120:	c9                   	leave
    a121:	c3                   	ret

000000000000a122 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE11get_deleterEv>:
      get_deleter() noexcept
    a122:	55                   	push   %rbp
    a123:	48 89 e5             	mov    %rsp,%rbp
    a126:	48 83 ec 10          	sub    $0x10,%rsp
    a12a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    a12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a132:	48 89 c7             	mov    %rax,%rdi
    a135:	e8 ee 04 00 00       	call   a628 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    a13a:	c9                   	leave
    a13b:	c3                   	ret

000000000000a13c <_ZSt4moveIRPN2vk4raii17ContextDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
    a13c:	55                   	push   %rbp
    a13d:	48 89 e5             	mov    %rsp,%rbp
    a140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a148:	5d                   	pop    %rbp
    a149:	c3                   	ret

000000000000a14a <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_>:
      operator()(_Tp* __ptr) const
    a14a:	55                   	push   %rbp
    a14b:	48 89 e5             	mov    %rsp,%rbp
    a14e:	48 83 ec 10          	sub    $0x10,%rsp
    a152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a156:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    a15a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a15e:	48 85 c0             	test   %rax,%rax
    a161:	74 0d                	je     a170 <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_+0x26>
    a163:	be 38 00 00 00       	mov    $0x38,%esi
    a168:	48 89 c7             	mov    %rax,%rdi
    a16b:	e8 80 b0 ff ff       	call   51f0 <_ZdlPvm@plt>
      }
    a170:	90                   	nop
    a171:	c9                   	leave
    a172:	c3                   	ret
    a173:	90                   	nop

000000000000a174 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    a174:	55                   	push   %rbp
    a175:	48 89 e5             	mov    %rsp,%rbp
    a178:	48 83 ec 10          	sub    $0x10,%rsp
    a17c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a184:	48 89 c7             	mov    %rax,%rdi
    a187:	e8 b6 04 00 00       	call   a642 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    a18c:	c9                   	leave
    a18d:	c3                   	ret

000000000000a18e <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE11get_deleterEv>:
      get_deleter() noexcept
    a18e:	55                   	push   %rbp
    a18f:	48 89 e5             	mov    %rsp,%rbp
    a192:	48 83 ec 10          	sub    $0x10,%rsp
    a196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    a19a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a19e:	48 89 c7             	mov    %rax,%rdi
    a1a1:	e8 b6 04 00 00       	call   a65c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    a1a6:	c9                   	leave
    a1a7:	c3                   	ret

000000000000a1a8 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
    a1a8:	55                   	push   %rbp
    a1a9:	48 89 e5             	mov    %rsp,%rbp
    a1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a1b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1b4:	5d                   	pop    %rbp
    a1b5:	c3                   	ret

000000000000a1b6 <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>:
      operator()(_Tp* __ptr) const
    a1b6:	55                   	push   %rbp
    a1b7:	48 89 e5             	mov    %rsp,%rbp
    a1ba:	48 83 ec 10          	sub    $0x10,%rsp
    a1be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    a1c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a1ca:	48 85 c0             	test   %rax,%rax
    a1cd:	74 0d                	je     a1dc <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_+0x26>
    a1cf:	be 48 03 00 00       	mov    $0x348,%esi
    a1d4:	48 89 c7             	mov    %rax,%rdi
    a1d7:	e8 14 b0 ff ff       	call   51f0 <_ZdlPvm@plt>
      }
    a1dc:	90                   	nop
    a1dd:	c9                   	leave
    a1de:	c3                   	ret
    a1df:	90                   	nop

000000000000a1e0 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>:
      void reset(pointer __p) noexcept
    a1e0:	55                   	push   %rbp
    a1e1:	48 89 e5             	mov    %rsp,%rbp
    a1e4:	53                   	push   %rbx
    a1e5:	48 83 ec 28          	sub    $0x28,%rsp
    a1e9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a1ed:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    a1f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a1f5:	48 89 c7             	mov    %rax,%rdi
    a1f8:	e8 77 ff ff ff       	call   a174 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a1fd:	48 8b 00             	mov    (%rax),%rax
    a200:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    a204:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    a208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a20c:	48 89 c7             	mov    %rax,%rdi
    a20f:	e8 60 ff ff ff       	call   a174 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a214:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    a217:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    a21c:	74 1e                	je     a23c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_+0x5c>
	  _M_deleter()(__old_p);
    a21e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a222:	48 89 c7             	mov    %rax,%rdi
    a225:	e8 32 04 00 00       	call   a65c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    a22a:	48 89 c2             	mov    %rax,%rdx
    a22d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a231:	48 89 c6             	mov    %rax,%rsi
    a234:	48 89 d7             	mov    %rdx,%rdi
    a237:	e8 7a ff ff ff       	call   a1b6 <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>
      }
    a23c:	90                   	nop
    a23d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a241:	c9                   	leave
    a242:	c3                   	ret
    a243:	90                   	nop

000000000000a244 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>:
      get() const noexcept
    a244:	55                   	push   %rbp
    a245:	48 89 e5             	mov    %rsp,%rbp
    a248:	48 83 ec 10          	sub    $0x10,%rsp
    a24c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    a250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a254:	48 89 c7             	mov    %rax,%rdi
    a257:	e8 1a 04 00 00       	call   a676 <_ZNKSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a25c:	c9                   	leave
    a25d:	c3                   	ret

000000000000a25e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>:
    basic_string<_CharT, _Traits, _Alloc>::
    a25e:	55                   	push   %rbp
    a25f:	48 89 e5             	mov    %rsp,%rbp
    a262:	53                   	push   %rbx
    a263:	48 83 ec 28          	sub    $0x28,%rsp
    a267:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a26b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a26f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (__capacity > max_size())
    a273:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a277:	48 8b 18             	mov    (%rax),%rbx
    a27a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a27e:	48 89 c7             	mov    %rax,%rdi
    a281:	e8 0e 04 00 00       	call   a694 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    a286:	48 39 d8             	cmp    %rbx,%rax
    a289:	0f 92 c0             	setb   %al
    a28c:	84 c0                	test   %al,%al
    a28e:	74 0f                	je     a29f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0x41>
	std::__throw_length_error(__N("basic_string::_M_create"));
    a290:	48 8d 05 38 6a 00 00 	lea    0x6a38(%rip),%rax        # 10ccf <_ZNSt8__detailL19__atomic_spin_countE+0x26b>
    a297:	48 89 c7             	mov    %rax,%rdi
    a29a:	e8 21 ae ff ff       	call   50c0 <_ZSt20__throw_length_errorPKc@plt>
      if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
    a29f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a2a3:	48 8b 00             	mov    (%rax),%rax
    a2a6:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    a2aa:	73 52                	jae    a2fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
    a2ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a2b0:	48 8b 10             	mov    (%rax),%rdx
    a2b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2b7:	48 01 c0             	add    %rax,%rax
    a2ba:	48 39 c2             	cmp    %rax,%rdx
    a2bd:	73 3f                	jae    a2fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
	  __capacity = 2 * __old_capacity;
    a2bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2c3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    a2c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a2cb:	48 89 10             	mov    %rdx,(%rax)
	  if (__capacity > max_size())
    a2ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a2d2:	48 8b 18             	mov    (%rax),%rbx
    a2d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2d9:	48 89 c7             	mov    %rax,%rdi
    a2dc:	e8 b3 03 00 00       	call   a694 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    a2e1:	48 39 d8             	cmp    %rbx,%rax
    a2e4:	0f 92 c0             	setb   %al
    a2e7:	84 c0                	test   %al,%al
    a2e9:	74 13                	je     a2fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
	    __capacity = max_size();
    a2eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2ef:	48 89 c7             	mov    %rax,%rdi
    a2f2:	e8 9d 03 00 00       	call   a694 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    a2f7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a2fb:	48 89 02             	mov    %rax,(%rdx)
      return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
    a2fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a302:	48 8b 00             	mov    (%rax),%rax
    a305:	48 8d 58 01          	lea    0x1(%rax),%rbx
    a309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a30d:	48 89 c7             	mov    %rax,%rdi
    a310:	e8 7d fa ff ff       	call   9d92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a315:	48 89 de             	mov    %rbx,%rsi
    a318:	48 89 c7             	mov    %rax,%rdi
    a31b:	e8 9d 03 00 00       	call   a6bd <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    }
    a320:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a324:	c9                   	leave
    a325:	c3                   	ret

000000000000a326 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>:
      _M_destroy(size_type __size) throw()
    a326:	55                   	push   %rbp
    a327:	48 89 e5             	mov    %rsp,%rbp
    a32a:	41 54                	push   %r12
    a32c:	53                   	push   %rbx
    a32d:	48 83 ec 10          	sub    $0x10,%rsp
    a331:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a335:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    a339:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a33d:	48 8d 58 01          	lea    0x1(%rax),%rbx
    a341:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a345:	48 89 c7             	mov    %rax,%rdi
    a348:	e8 c3 f9 ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a34d:	49 89 c4             	mov    %rax,%r12
    a350:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a354:	48 89 c7             	mov    %rax,%rdi
    a357:	e8 36 fa ff ff       	call   9d92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a35c:	48 89 da             	mov    %rbx,%rdx
    a35f:	4c 89 e6             	mov    %r12,%rsi
    a362:	48 89 c7             	mov    %rax,%rdi
    a365:	e8 c1 03 00 00       	call   a72b <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
    a36a:	90                   	nop
    a36b:	48 83 c4 10          	add    $0x10,%rsp
    a36f:	5b                   	pop    %rbx
    a370:	41 5c                	pop    %r12
    a372:	5d                   	pop    %rbp
    a373:	c3                   	ret

000000000000a374 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      _M_local_data() const
    a374:	55                   	push   %rbp
    a375:	48 89 e5             	mov    %rsp,%rbp
    a378:	48 83 ec 10          	sub    $0x10,%rsp
    a37c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    a380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a384:	48 83 c0 10          	add    $0x10,%rax
    a388:	48 89 c7             	mov    %rax,%rdi
    a38b:	e8 f9 03 00 00       	call   a789 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>
      }
    a390:	c9                   	leave
    a391:	c3                   	ret

000000000000a392 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    a392:	55                   	push   %rbp
    a393:	48 89 e5             	mov    %rsp,%rbp
    a396:	48 83 ec 10          	sub    $0x10,%rsp
    a39a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a39e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    a3a2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a3a6:	48 89 c7             	mov    %rax,%rdi
    a3a9:	e8 f5 03 00 00       	call   a7a3 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    a3ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3b6:	48 89 d6             	mov    %rdx,%rsi
    a3b9:	48 89 c7             	mov    %rax,%rdi
    a3bc:	e8 ed 03 00 00       	call   a7ae <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    a3c1:	c9                   	leave
    a3c2:	c3                   	ret

000000000000a3c3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
    a3c3:	55                   	push   %rbp
    a3c4:	48 89 e5             	mov    %rsp,%rbp
    a3c7:	48 83 ec 20          	sub    $0x20,%rsp
    a3cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { _S_copy(__p, __k1, __k2 - __k1); }
    a3d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3db:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    a3df:	48 89 c2             	mov    %rax,%rdx
    a3e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ea:	48 89 ce             	mov    %rcx,%rsi
    a3ed:	48 89 c7             	mov    %rax,%rdi
    a3f0:	e8 cf 03 00 00       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    a3f5:	90                   	nop
    a3f6:	c9                   	leave
    a3f7:	c3                   	ret

000000000000a3f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      _M_get_allocator() const
    a3f8:	55                   	push   %rbp
    a3f9:	48 89 e5             	mov    %rsp,%rbp
    a3fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus; }
    a400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a404:	5d                   	pop    %rbp
    a405:	c3                   	ret

000000000000a406 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>:
      _M_check_length(size_type __n1, size_type __n2, const char* __s) const
    a406:	55                   	push   %rbp
    a407:	48 89 e5             	mov    %rsp,%rbp
    a40a:	53                   	push   %rbx
    a40b:	48 83 ec 28          	sub    $0x28,%rsp
    a40f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a413:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a417:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a41b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	if (this->max_size() - (this->size() - __n1) < __n2)
    a41f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a423:	48 89 c7             	mov    %rax,%rdi
    a426:	e8 69 02 00 00       	call   a694 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    a42b:	48 89 c3             	mov    %rax,%rbx
    a42e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a432:	48 89 c7             	mov    %rax,%rdi
    a435:	e8 2c be ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a43a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a43e:	48 29 c2             	sub    %rax,%rdx
    a441:	48 8d 04 13          	lea    (%rbx,%rdx,1),%rax
    a445:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a449:	0f 92 c0             	setb   %al
    a44c:	84 c0                	test   %al,%al
    a44e:	74 0c                	je     a45c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc+0x56>
	  __throw_length_error(__N(__s));
    a450:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a454:	48 89 c7             	mov    %rax,%rdi
    a457:	e8 64 ac ff ff       	call   50c0 <_ZSt20__throw_length_errorPKc@plt>
      }
    a45c:	90                   	nop
    a45d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a461:	c9                   	leave
    a462:	c3                   	ret
    a463:	90                   	nop

000000000000a464 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    a464:	55                   	push   %rbp
    a465:	48 89 e5             	mov    %rsp,%rbp
    a468:	53                   	push   %rbx
    a469:	48 83 ec 38          	sub    $0x38,%rsp
    a46d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a471:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a475:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    _M_append(const _CharT* __s, size_type __n)
    {
      const size_type __len = __n + this->size();
    a479:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a47d:	48 89 c7             	mov    %rax,%rdi
    a480:	e8 e1 bd ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a485:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a489:	48 01 d0             	add    %rdx,%rax
    a48c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

      if (__len <= this->capacity())
    a490:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a494:	48 89 c7             	mov    %rax,%rdi
    a497:	e8 54 fb ff ff       	call   9ff0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    a49c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    a4a0:	0f 93 c0             	setae  %al
    a4a3:	84 c0                	test   %al,%al
    a4a5:	74 3b                	je     a4e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0x7e>
	{
	  if (__n)
    a4a7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    a4ac:	74 62                	je     a510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
    a4ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4b2:	48 89 c7             	mov    %rax,%rdi
    a4b5:	e8 56 f8 ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a4ba:	48 89 c3             	mov    %rax,%rbx
    a4bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4c1:	48 89 c7             	mov    %rax,%rdi
    a4c4:	e8 9d bd ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a4c9:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    a4cd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a4d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a4d5:	48 89 c6             	mov    %rax,%rsi
    a4d8:	48 89 cf             	mov    %rcx,%rdi
    a4db:	e8 e4 02 00 00       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    a4e0:	eb 2e                	jmp    a510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
	}
      else
	this->_M_mutate(this->size(), size_type(0), __s, __n);
    a4e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4e6:	48 89 c7             	mov    %rax,%rdi
    a4e9:	e8 78 bd ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a4ee:	48 89 c6             	mov    %rax,%rsi
    a4f1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    a4f5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a4f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4fd:	49 89 c8             	mov    %rcx,%r8
    a500:	48 89 d1             	mov    %rdx,%rcx
    a503:	ba 00 00 00 00       	mov    $0x0,%edx
    a508:	48 89 c7             	mov    %rax,%rdi
    a50b:	e8 fe 02 00 00       	call   a80e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>

      this->_M_set_length(__len);
    a510:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a514:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a518:	48 89 d6             	mov    %rdx,%rsi
    a51b:	48 89 c7             	mov    %rax,%rdi
    a51e:	e8 13 f5 ff ff       	call   9a36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      return *this;
    a523:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    }
    a527:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a52b:	c9                   	leave
    a52c:	c3                   	ret
    a52d:	90                   	nop

000000000000a52e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>:
      replace(size_type __pos, size_type __n1, const _CharT* __s,
    a52e:	55                   	push   %rbp
    a52f:	48 89 e5             	mov    %rsp,%rbp
    a532:	53                   	push   %rbx
    a533:	48 83 ec 38          	sub    $0x38,%rsp
    a537:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a53b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a53f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a543:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a547:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	return _M_replace(_M_check(__pos, "basic_string::replace"),
    a54b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a54f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    a553:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a557:	48 89 ce             	mov    %rcx,%rsi
    a55a:	48 89 c7             	mov    %rax,%rdi
    a55d:	e8 44 00 00 00       	call   a5a6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>
    a562:	48 89 c3             	mov    %rax,%rbx
    a565:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    a569:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a56d:	48 8d 15 73 67 00 00 	lea    0x6773(%rip),%rdx        # 10ce7 <_ZNSt8__detailL19__atomic_spin_countE+0x283>
    a574:	48 89 ce             	mov    %rcx,%rsi
    a577:	48 89 c7             	mov    %rax,%rdi
    a57a:	e8 f1 fa ff ff       	call   a070 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
    a57f:	48 89 c6             	mov    %rax,%rsi
    a582:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    a586:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a58a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a58e:	49 89 c8             	mov    %rcx,%r8
    a591:	48 89 d1             	mov    %rdx,%rcx
    a594:	48 89 da             	mov    %rbx,%rdx
    a597:	48 89 c7             	mov    %rax,%rdi
    a59a:	e8 b3 03 00 00       	call   a952 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
      }
    a59f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a5a3:	c9                   	leave
    a5a4:	c3                   	ret
    a5a5:	90                   	nop

000000000000a5a6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>:
      _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
    a5a6:	55                   	push   %rbp
    a5a7:	48 89 e5             	mov    %rsp,%rbp
    a5aa:	48 83 ec 30          	sub    $0x30,%rsp
    a5ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a5b2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a5b6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const bool __testoff =  __off < this->size() - __pos;
    a5ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a5be:	48 89 c7             	mov    %rax,%rdi
    a5c1:	e8 a0 bc ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a5c6:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    a5ca:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    a5ce:	0f 92 c0             	setb   %al
    a5d1:	88 45 ff             	mov    %al,-0x1(%rbp)
	return __testoff ? __off : this->size() - __pos;
    a5d4:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    a5d8:	74 06                	je     a5e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x3a>
    a5da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a5de:	eb 10                	jmp    a5f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x4a>
    a5e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a5e4:	48 89 c7             	mov    %rax,%rdi
    a5e7:	e8 7a bc ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a5ec:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
      }
    a5f0:	c9                   	leave
    a5f1:	c3                   	ret

000000000000a5f2 <_ZNSt5tupleIJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>:

    public:
      template<bool _Dummy = true,
	       _ImplicitDefaultCtor<_Dummy, _T1, _T2> = true>
	constexpr
	tuple()
    a5f2:	55                   	push   %rbp
    a5f3:	48 89 e5             	mov    %rsp,%rbp
    a5f6:	48 83 ec 10          	sub    $0x10,%rsp
    a5fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	noexcept(__nothrow_default_constructible())
	: _Inherited() { }
    a5fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a602:	48 89 c7             	mov    %rax,%rdi
    a605:	e8 f0 06 00 00       	call   acfa <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1Ev>
    a60a:	90                   	nop
    a60b:	c9                   	leave
    a60c:	c3                   	ret

000000000000a60d <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    __get_helper(const tuple<_Types...>&) = delete;

  /// Return a reference to the ith element of a tuple.
  template<size_t __i, typename... _Elements>
    constexpr __tuple_element_t<__i, tuple<_Elements...>>&
    get(tuple<_Elements...>& __t) noexcept
    a60d:	55                   	push   %rbp
    a60e:	48 89 e5             	mov    %rsp,%rbp
    a611:	48 83 ec 10          	sub    $0x10,%rsp
    a615:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    a619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a61d:	48 89 c7             	mov    %rax,%rdi
    a620:	e8 fc 06 00 00       	call   ad21 <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>
    a625:	c9                   	leave
    a626:	c3                   	ret
    a627:	90                   	nop

000000000000a628 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    a628:	55                   	push   %rbp
    a629:	48 89 e5             	mov    %rsp,%rbp
    a62c:	48 83 ec 10          	sub    $0x10,%rsp
    a630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a638:	48 89 c7             	mov    %rax,%rdi
    a63b:	e8 fb 06 00 00       	call   ad3b <_ZSt3getILm1EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    a640:	c9                   	leave
    a641:	c3                   	ret

000000000000a642 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    a642:	55                   	push   %rbp
    a643:	48 89 e5             	mov    %rsp,%rbp
    a646:	48 83 ec 10          	sub    $0x10,%rsp
    a64a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    a64e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a652:	48 89 c7             	mov    %rax,%rdi
    a655:	e8 fb 06 00 00       	call   ad55 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>
    a65a:	c9                   	leave
    a65b:	c3                   	ret

000000000000a65c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>:
    a65c:	55                   	push   %rbp
    a65d:	48 89 e5             	mov    %rsp,%rbp
    a660:	48 83 ec 10          	sub    $0x10,%rsp
    a664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a66c:	48 89 c7             	mov    %rax,%rdi
    a66f:	e8 fb 06 00 00       	call   ad6f <_ZSt3getILm1EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    a674:	c9                   	leave
    a675:	c3                   	ret

000000000000a676 <_ZNKSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    a676:	55                   	push   %rbp
    a677:	48 89 e5             	mov    %rsp,%rbp
    a67a:	48 83 ec 10          	sub    $0x10,%rsp
    a67e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a686:	48 89 c7             	mov    %rax,%rdi
    a689:	e8 fb 06 00 00       	call   ad89 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>
    a68e:	48 8b 00             	mov    (%rax),%rax
    a691:	c9                   	leave
    a692:	c3                   	ret
    a693:	90                   	nop

000000000000a694 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    a694:	55                   	push   %rbp
    a695:	48 89 e5             	mov    %rsp,%rbp
    a698:	48 83 ec 10          	sub    $0x10,%rsp
    a69c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
    a6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6a4:	48 89 c7             	mov    %rax,%rdi
    a6a7:	e8 4c fd ff ff       	call   a3f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a6ac:	48 89 c7             	mov    %rax,%rdi
    a6af:	e8 ef 06 00 00       	call   ada3 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    a6b4:	48 83 e8 01          	sub    $0x1,%rax
    a6b8:	48 d1 e8             	shr    %rax
    a6bb:	c9                   	leave
    a6bc:	c3                   	ret

000000000000a6bd <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
       *  @param  __n  The number of objects to allocate space for.
       *
       *  Calls @c a.allocate(n)
      */
      _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
      allocate(allocator_type& __a, size_type __n)
    a6bd:	55                   	push   %rbp
    a6be:	48 89 e5             	mov    %rsp,%rbp
    a6c1:	48 83 ec 20          	sub    $0x20,%rsp
    a6c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a6c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a6cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a6d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a6d9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
#if __cplusplus > 201703L
      [[nodiscard,__gnu__::__always_inline__]]
      constexpr _Tp*
      allocate(size_t __n)
      {
	if (std::__is_constant_evaluated())
    a6dd:	e8 2c ba ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    a6e2:	84 c0                	test   %al,%al
    a6e4:	74 2a                	je     a710 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x53>
	  {
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
    a6e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a6ea:	ba 00 00 00 00       	mov    $0x0,%edx
    a6ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a6f3:	48 89 d0             	mov    %rdx,%rax
    a6f6:	83 e0 01             	and    $0x1,%eax
    a6f9:	84 c0                	test   %al,%al
    a6fb:	74 05                	je     a702 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x45>
	      std::__throw_bad_array_new_length();
    a6fd:	e8 3e aa ff ff       	call   5140 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
    a702:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a706:	48 89 c7             	mov    %rax,%rdi
    a709:	e8 d2 aa ff ff       	call   51e0 <_Znwm@plt>
    a70e:	eb 19                	jmp    a729 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x6c>
	  }

	return __allocator_base<_Tp>::allocate(__n, 0);
    a710:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a718:	ba 00 00 00 00       	mov    $0x0,%edx
    a71d:	48 89 ce             	mov    %rcx,%rsi
    a720:	48 89 c7             	mov    %rax,%rdi
    a723:	e8 24 08 00 00       	call   af4c <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    a728:	90                   	nop
      { return __a.allocate(__n); }
    a729:	c9                   	leave
    a72a:	c3                   	ret

000000000000a72b <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a72b:	55                   	push   %rbp
    a72c:	48 89 e5             	mov    %rsp,%rbp
    a72f:	48 83 ec 40          	sub    $0x40,%rsp
    a733:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a737:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a73b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a73f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a743:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a747:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a74b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a74f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a753:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

      [[__gnu__::__always_inline__]]
      constexpr void
      deallocate(_Tp* __p, size_t __n)
      {
	if (std::__is_constant_evaluated())
    a757:	e8 b2 b9 ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    a75c:	84 c0                	test   %al,%al
    a75e:	74 0e                	je     a76e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm+0x43>
	  {
	    ::operator delete(__p);
    a760:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a764:	48 89 c7             	mov    %rax,%rdi
    a767:	e8 44 aa ff ff       	call   51b0 <_ZdlPv@plt>
	    return;
    a76c:	eb 18                	jmp    a786 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm+0x5b>
	  }
	__allocator_base<_Tp>::deallocate(__p, __n);
    a76e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a772:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a77a:	48 89 ce             	mov    %rcx,%rsi
    a77d:	48 89 c7             	mov    %rax,%rdi
    a780:	e8 0f 08 00 00       	call   af94 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
      { __a.deallocate(__p, __n); }
    a785:	90                   	nop
    a786:	90                   	nop
    a787:	c9                   	leave
    a788:	c3                   	ret

000000000000a789 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>:
      pointer_to(element_type& __r) noexcept
    a789:	55                   	push   %rbp
    a78a:	48 89 e5             	mov    %rsp,%rbp
    a78d:	48 83 ec 10          	sub    $0x10,%rsp
    a791:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return std::addressof(__r); }
    a795:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a799:	48 89 c7             	mov    %rax,%rdi
    a79c:	e8 13 06 00 00       	call   adb4 <_ZSt9addressofIKcEPT_RS1_>
    a7a1:	c9                   	leave
    a7a2:	c3                   	ret

000000000000a7a3 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    a7a3:	55                   	push   %rbp
    a7a4:	48 89 e5             	mov    %rsp,%rbp
    a7a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    a7ab:	90                   	nop
    a7ac:	5d                   	pop    %rbp
    a7ad:	c3                   	ret

000000000000a7ae <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    a7ae:	55                   	push   %rbp
    a7af:	48 89 e5             	mov    %rsp,%rbp
    a7b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    a7ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7be:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    a7c2:	5d                   	pop    %rbp
    a7c3:	c3                   	ret

000000000000a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>:
      _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
    a7c4:	55                   	push   %rbp
    a7c5:	48 89 e5             	mov    %rsp,%rbp
    a7c8:	48 83 ec 20          	sub    $0x20,%rsp
    a7cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__n == 1)
    a7d8:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    a7dd:	75 15                	jne    a7f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x30>
	  traits_type::assign(*__d, *__s);
    a7df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7e7:	48 89 d6             	mov    %rdx,%rsi
    a7ea:	48 89 c7             	mov    %rax,%rdi
    a7ed:	e8 44 b9 ff ff       	call   6136 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    a7f2:	eb 17                	jmp    a80b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x47>
	  traits_type::copy(__d, __s, __n);
    a7f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a7f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a7fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a800:	48 89 ce             	mov    %rcx,%rsi
    a803:	48 89 c7             	mov    %rax,%rdi
    a806:	e8 f8 b9 ff ff       	call   6203 <_ZNSt11char_traitsIcE4copyEPcPKcm>
      }
    a80b:	90                   	nop
    a80c:	c9                   	leave
    a80d:	c3                   	ret

000000000000a80e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>:
    basic_string<_CharT, _Traits, _Alloc>::
    a80e:	55                   	push   %rbp
    a80f:	48 89 e5             	mov    %rsp,%rbp
    a812:	48 83 ec 50          	sub    $0x50,%rsp
    a816:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a81a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a81e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a822:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    a826:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
      const size_type __how_much = length() - __pos - __len1;
    a82a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a82e:	48 89 c7             	mov    %rax,%rdi
    a831:	e8 04 f1 ff ff       	call   993a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a836:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    a83a:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    a83e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      size_type __new_capacity = length() + __len2 - __len1;
    a842:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a846:	48 89 c7             	mov    %rax,%rdi
    a849:	e8 ec f0 ff ff       	call   993a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a84e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    a852:	48 01 d0             	add    %rdx,%rax
    a855:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    a859:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __r = _M_create(__new_capacity, capacity());
    a85d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a861:	48 89 c7             	mov    %rax,%rdi
    a864:	e8 87 f7 ff ff       	call   9ff0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    a869:	48 89 c2             	mov    %rax,%rdx
    a86c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    a870:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a874:	48 89 ce             	mov    %rcx,%rsi
    a877:	48 89 c7             	mov    %rax,%rdi
    a87a:	e8 df f9 ff ff       	call   a25e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    a87f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      if (__pos)
    a883:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    a888:	74 22                	je     a8ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x9e>
	this->_S_copy(__r, _M_data(), __pos);
    a88a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a88e:	48 89 c7             	mov    %rax,%rdi
    a891:	e8 7a f4 ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a896:	48 89 c1             	mov    %rax,%rcx
    a899:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a89d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8a1:	48 89 ce             	mov    %rcx,%rsi
    a8a4:	48 89 c7             	mov    %rax,%rdi
    a8a7:	e8 18 ff ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__s && __len2)
    a8ac:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    a8b1:	74 26                	je     a8d9 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xcb>
    a8b3:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    a8b8:	74 1f                	je     a8d9 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xcb>
	this->_S_copy(__r + __pos, __s, __len2);
    a8ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a8c2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a8c6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    a8ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a8ce:	48 89 c6             	mov    %rax,%rsi
    a8d1:	48 89 cf             	mov    %rcx,%rdi
    a8d4:	e8 eb fe ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__how_much)
    a8d9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a8de:	74 3d                	je     a91d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x10f>
		      _M_data() + __pos + __len1, __how_much);
    a8e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a8e4:	48 89 c7             	mov    %rax,%rdi
    a8e7:	e8 24 f4 ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a8ec:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a8f0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a8f4:	48 01 ca             	add    %rcx,%rdx
    a8f7:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
	this->_S_copy(__r + __pos + __len2,
    a8fb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a8ff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a903:	48 01 c2             	add    %rax,%rdx
    a906:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a90a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a90e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a912:	48 89 c2             	mov    %rax,%rdx
    a915:	48 89 cf             	mov    %rcx,%rdi
    a918:	e8 a7 fe ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      _M_dispose();
    a91d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a921:	48 89 c7             	mov    %rax,%rdi
    a924:	e8 2f f4 ff ff       	call   9d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
      _M_data(__r);
    a929:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a92d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a931:	48 89 d6             	mov    %rdx,%rsi
    a934:	48 89 c7             	mov    %rax,%rdi
    a937:	e8 98 f4 ff ff       	call   9dd4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
      _M_capacity(__new_capacity);
    a93c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a940:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a944:	48 89 d6             	mov    %rdx,%rsi
    a947:	48 89 c7             	mov    %rax,%rdi
    a94a:	e8 9f f4 ff ff       	call   9dee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    }
    a94f:	90                   	nop
    a950:	c9                   	leave
    a951:	c3                   	ret

000000000000a952 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    a952:	55                   	push   %rbp
    a953:	48 89 e5             	mov    %rsp,%rbp
    a956:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a95a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    a95e:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    a962:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    a966:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    a96a:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
    _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
	       const size_type __len2)
    {
      _M_check_length(__len1, __len2, "basic_string::_M_replace");
    a96e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a972:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    a976:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a97a:	48 8d 0d 7c 63 00 00 	lea    0x637c(%rip),%rcx        # 10cfd <_ZNSt8__detailL19__atomic_spin_countE+0x299>
    a981:	48 89 c7             	mov    %rax,%rdi
    a984:	e8 7d fa ff ff       	call   a406 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>

      const size_type __old_size = this->size();
    a989:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a98d:	48 89 c7             	mov    %rax,%rdi
    a990:	e8 d1 b8 ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a995:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      const size_type __new_size = __old_size + __len2 - __len1;
    a999:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a99d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a9a1:	48 01 d0             	add    %rdx,%rax
    a9a4:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    a9a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)

      if (__new_size <= this->capacity())
    a9ac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a9b0:	48 89 c7             	mov    %rax,%rdi
    a9b3:	e8 38 f6 ff ff       	call   9ff0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    a9b8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a9bc:	0f 93 c0             	setae  %al
    a9bf:	84 c0                	test   %al,%al
    a9c1:	0f 84 fa 02 00 00    	je     acc1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x36f>
	{
	  pointer __p = this->_M_data() + __pos;
    a9c7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a9cb:	48 89 c7             	mov    %rax,%rdi
    a9ce:	e8 3d f3 ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a9d3:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    a9d7:	48 01 d0             	add    %rdx,%rax
    a9da:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

	  const size_type __how_much = __old_size - __pos - __len1;
    a9de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9e2:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
    a9e6:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    a9ea:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
#if __cpp_lib_is_constant_evaluated
	  if (std::is_constant_evaluated())
    a9ee:	e8 38 b7 ff ff       	call   612b <_ZSt21is_constant_evaluatedv>
    a9f3:	84 c0                	test   %al,%al
    a9f5:	0f 84 09 01 00 00    	je     ab04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x1b2>
	    {
	      auto __newp = _Alloc_traits::allocate(_M_get_allocator(),
    a9fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a9ff:	48 89 c7             	mov    %rax,%rdi
    aa02:	e8 8b f3 ff ff       	call   9d92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    aa07:	48 89 c2             	mov    %rax,%rdx
    aa0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa0e:	48 89 c6             	mov    %rax,%rsi
    aa11:	48 89 d7             	mov    %rdx,%rdi
    aa14:	e8 a4 fc ff ff       	call   a6bd <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    aa19:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
						    __new_size);
	      _S_copy(__newp, this->_M_data(), __pos);
    aa1d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa21:	48 89 c7             	mov    %rax,%rdi
    aa24:	e8 e7 f2 ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    aa29:	48 89 c1             	mov    %rax,%rcx
    aa2c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    aa30:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aa34:	48 89 ce             	mov    %rcx,%rsi
    aa37:	48 89 c7             	mov    %rax,%rdi
    aa3a:	e8 85 fd ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(__newp + __pos, __s, __len2);
    aa3f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    aa43:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    aa47:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    aa4b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    aa4f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    aa53:	48 89 c6             	mov    %rax,%rsi
    aa56:	48 89 cf             	mov    %rcx,%rdi
    aa59:	e8 66 fd ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(__newp + __pos + __len2, __p + __len1, __how_much);
    aa5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aa62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    aa66:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    aa6a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    aa6e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    aa72:	48 01 c2             	add    %rax,%rdx
    aa75:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aa79:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    aa7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa81:	48 89 c2             	mov    %rax,%rdx
    aa84:	48 89 cf             	mov    %rcx,%rdi
    aa87:	e8 38 fd ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(this->_M_data(), __newp, __new_size);
    aa8c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa90:	48 89 c7             	mov    %rax,%rdi
    aa93:	e8 78 f2 ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    aa98:	48 89 c1             	mov    %rax,%rcx
    aa9b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aaa3:	48 89 c6             	mov    %rax,%rsi
    aaa6:	48 89 cf             	mov    %rcx,%rdi
    aaa9:	e8 16 fd ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      this->_M_get_allocator().deallocate(__newp, __new_size);
    aaae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aab2:	48 89 c7             	mov    %rax,%rdi
    aab5:	e8 d8 f2 ff ff       	call   9d92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    aaba:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    aabe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aac2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    aac6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aaca:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
	if (std::__is_constant_evaluated())
    aace:	e8 3b b6 ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    aad3:	84 c0                	test   %al,%al
    aad5:	74 11                	je     aae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x196>
	    ::operator delete(__p);
    aad7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    aadb:	48 89 c7             	mov    %rax,%rdi
    aade:	e8 cd a6 ff ff       	call   51b0 <_ZdlPv@plt>
	    return;
    aae3:	e9 f8 01 00 00       	jmp    ace0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	__allocator_base<_Tp>::deallocate(__p, __n);
    aae8:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    aaec:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    aaf0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    aaf4:	48 89 ce             	mov    %rcx,%rsi
    aaf7:	48 89 c7             	mov    %rax,%rdi
    aafa:	e8 95 04 00 00       	call   af94 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    aaff:	e9 dc 01 00 00       	jmp    ace0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	    }
	  else
#endif
	  if (_M_disjunct(__s))
    ab04:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    ab08:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab0c:	48 89 d6             	mov    %rdx,%rsi
    ab0f:	48 89 c7             	mov    %rax,%rdi
    ab12:	e8 b7 02 00 00       	call   adce <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
    ab17:	84 c0                	test   %al,%al
    ab19:	74 5f                	je     ab7a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x228>
	    {
	      if (__how_much && __len1 != __len2)
    ab1b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ab20:	74 31                	je     ab53 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x201>
    ab22:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ab26:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    ab2a:	74 27                	je     ab53 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x201>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    ab2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab30:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ab34:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    ab38:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab3c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ab40:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ab44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab48:	48 89 c2             	mov    %rax,%rdx
    ab4b:	48 89 cf             	mov    %rcx,%rdi
    ab4e:	e8 fa 02 00 00       	call   ae4d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2)
    ab53:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    ab58:	0f 84 82 01 00 00    	je     ace0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		this->_S_copy(__p, __s, __len2);
    ab5e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ab62:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    ab66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab6a:	48 89 ce             	mov    %rcx,%rsi
    ab6d:	48 89 c7             	mov    %rax,%rdi
    ab70:	e8 4f fc ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    ab75:	e9 66 01 00 00       	jmp    ace0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	    }
	  else
	    {
	      // Work in-place.
	      if (__len2 && __len2 <= __len1)
    ab7a:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    ab7f:	74 21                	je     aba2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x250>
    ab81:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ab85:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    ab89:	72 17                	jb     aba2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x250>
		this->_S_move(__p, __s, __len2);
    ab8b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ab8f:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    ab93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab97:	48 89 ce             	mov    %rcx,%rsi
    ab9a:	48 89 c7             	mov    %rax,%rdi
    ab9d:	e8 ab 02 00 00       	call   ae4d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__how_much && __len1 != __len2)
    aba2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    aba7:	74 31                	je     abda <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x288>
    aba9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    abad:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    abb1:	74 27                	je     abda <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x288>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    abb3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    abb7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    abbb:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    abbf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    abc3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    abc7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    abcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    abcf:	48 89 c2             	mov    %rax,%rdx
    abd2:	48 89 cf             	mov    %rcx,%rdi
    abd5:	e8 73 02 00 00       	call   ae4d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2 > __len1)
    abda:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    abde:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    abe2:	0f 83 f8 00 00 00    	jae    ace0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		{
		  if (__s + __len2 <= __p + __len1)
    abe8:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    abec:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    abf0:	48 01 d0             	add    %rdx,%rax
    abf3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    abf7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    abfb:	48 01 ca             	add    %rcx,%rdx
    abfe:	48 39 c2             	cmp    %rax,%rdx
    ac01:	72 1c                	jb     ac1f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x2cd>
		    this->_S_move(__p, __s, __len2);
    ac03:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ac07:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    ac0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac0f:	48 89 ce             	mov    %rcx,%rsi
    ac12:	48 89 c7             	mov    %rax,%rdi
    ac15:	e8 33 02 00 00       	call   ae4d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
    ac1a:	e9 c1 00 00 00       	jmp    ace0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		  else if (__s >= __p + __len1)
    ac1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac23:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ac27:	48 01 d0             	add    %rdx,%rax
    ac2a:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    ac2e:	72 3b                	jb     ac6b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x319>
		    {
		      // Hint to middle end that __p and __s overlap
		      // (PR 98465).
		      const size_type __poff = (__s - __p) + (__len2 - __len1);
    ac30:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ac34:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    ac38:	48 89 c2             	mov    %rax,%rdx
    ac3b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ac3f:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    ac43:	48 01 d0             	add    %rdx,%rax
    ac46:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
		      this->_S_copy(__p, __p + __poff, __len2);
    ac4a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ac52:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ac56:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ac5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac5e:	48 89 ce             	mov    %rcx,%rsi
    ac61:	48 89 c7             	mov    %rax,%rdi
    ac64:	e8 5b fb ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    ac69:	eb 75                	jmp    ace0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		    }
		  else
		    {
		      const size_type __nleft = (__p + __len1) - __s;
    ac6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac6f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ac73:	48 01 d0             	add    %rdx,%rax
    ac76:	48 2b 45 90          	sub    -0x70(%rbp),%rax
    ac7a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
		      this->_S_move(__p, __s, __nleft);
    ac7e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ac82:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    ac86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac8a:	48 89 ce             	mov    %rcx,%rsi
    ac8d:	48 89 c7             	mov    %rax,%rdi
    ac90:	e8 b8 01 00 00       	call   ae4d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
		      this->_S_copy(__p + __nleft, __p + __len2,
    ac95:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ac99:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    ac9d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aca1:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    aca5:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    aca9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    acad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    acb1:	48 01 d1             	add    %rdx,%rcx
    acb4:	48 89 c2             	mov    %rax,%rdx
    acb7:	48 89 cf             	mov    %rcx,%rdi
    acba:	e8 05 fb ff ff       	call   a7c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    acbf:	eb 1f                	jmp    ace0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		    }
		}
	    }
	}
      else
	this->_M_mutate(__pos, __len1, __s, __len2);
    acc1:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    acc5:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    acc9:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    accd:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    acd1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    acd5:	49 89 f8             	mov    %rdi,%r8
    acd8:	48 89 c7             	mov    %rax,%rdi
    acdb:	e8 2e fb ff ff       	call   a80e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>

      this->_M_set_length(__new_size);
    ace0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ace4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ace8:	48 89 d6             	mov    %rdx,%rsi
    aceb:	48 89 c7             	mov    %rax,%rdi
    acee:	e8 43 ed ff ff       	call   9a36 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      return *this;
    acf3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    }
    acf7:	c9                   	leave
    acf8:	c3                   	ret
    acf9:	90                   	nop

000000000000acfa <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1Ev>:
      constexpr _Tuple_impl()
    acfa:	55                   	push   %rbp
    acfb:	48 89 e5             	mov    %rsp,%rbp
    acfe:	48 83 ec 10          	sub    $0x10,%rsp
    ad02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    ad06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad0a:	48 89 c7             	mov    %rax,%rdi
    ad0d:	e8 86 01 00 00       	call   ae98 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEEC1Ev>
    ad12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad16:	48 89 c7             	mov    %rax,%rdi
    ad19:	e8 96 01 00 00       	call   aeb4 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EEC1Ev>
    ad1e:	90                   	nop
    ad1f:	c9                   	leave
    ad20:	c3                   	ret

000000000000ad21 <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ad21:	55                   	push   %rbp
    ad22:	48 89 e5             	mov    %rsp,%rbp
    ad25:	48 83 ec 10          	sub    $0x10,%rsp
    ad29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ad2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad31:	48 89 c7             	mov    %rax,%rdi
    ad34:	e8 91 01 00 00       	call   aeca <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>
    ad39:	c9                   	leave
    ad3a:	c3                   	ret

000000000000ad3b <_ZSt3getILm1EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    ad3b:	55                   	push   %rbp
    ad3c:	48 89 e5             	mov    %rsp,%rbp
    ad3f:	48 83 ec 10          	sub    $0x10,%rsp
    ad43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    ad47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad4b:	48 89 c7             	mov    %rax,%rdi
    ad4e:	e8 91 01 00 00       	call   aee4 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    ad53:	c9                   	leave
    ad54:	c3                   	ret

000000000000ad55 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ad55:	55                   	push   %rbp
    ad56:	48 89 e5             	mov    %rsp,%rbp
    ad59:	48 83 ec 10          	sub    $0x10,%rsp
    ad5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ad61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad65:	48 89 c7             	mov    %rax,%rdi
    ad68:	e8 91 01 00 00       	call   aefe <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>
    ad6d:	c9                   	leave
    ad6e:	c3                   	ret

000000000000ad6f <_ZSt3getILm1EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    ad6f:	55                   	push   %rbp
    ad70:	48 89 e5             	mov    %rsp,%rbp
    ad73:	48 83 ec 10          	sub    $0x10,%rsp
    ad77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    ad7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad7f:	48 89 c7             	mov    %rax,%rdi
    ad82:	e8 91 01 00 00       	call   af18 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    ad87:	c9                   	leave
    ad88:	c3                   	ret

000000000000ad89 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>:

  /// Return a const reference to the ith element of a const tuple.
  template<size_t __i, typename... _Elements>
    constexpr const __tuple_element_t<__i, tuple<_Elements...>>&
    get(const tuple<_Elements...>& __t) noexcept
    ad89:	55                   	push   %rbp
    ad8a:	48 89 e5             	mov    %rsp,%rbp
    ad8d:	48 83 ec 10          	sub    $0x10,%rsp
    ad91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    ad95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad99:	48 89 c7             	mov    %rax,%rdi
    ad9c:	e8 91 01 00 00       	call   af32 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>
    ada1:	c9                   	leave
    ada2:	c3                   	ret

000000000000ada3 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ada3:	55                   	push   %rbp
    ada4:	48 89 e5             	mov    %rsp,%rbp
    ada7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus <= 201703L
	return __a.max_size();
#else
	return size_t(-1) / sizeof(value_type);
    adab:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
#endif
      }
    adb2:	5d                   	pop    %rbp
    adb3:	c3                   	ret

000000000000adb4 <_ZSt9addressofIKcEPT_RS1_>:
    addressof(_Tp& __r) noexcept
    adb4:	55                   	push   %rbp
    adb5:	48 89 e5             	mov    %rsp,%rbp
    adb8:	48 83 ec 10          	sub    $0x10,%rsp
    adbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__addressof(__r); }
    adc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adc4:	48 89 c7             	mov    %rax,%rdi
    adc7:	e8 f1 01 00 00       	call   afbd <_ZSt11__addressofIKcEPT_RS1_>
    adcc:	c9                   	leave
    adcd:	c3                   	ret

000000000000adce <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
      _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
    adce:	55                   	push   %rbp
    adcf:	48 89 e5             	mov    %rsp,%rbp
    add2:	53                   	push   %rbx
    add3:	48 83 ec 28          	sub    $0x28,%rsp
    add7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    addb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	return (less<const _CharT*>()(__s, _M_data())
    addf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ade3:	48 89 c7             	mov    %rax,%rdi
    ade6:	e8 25 ef ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    adeb:	48 89 c2             	mov    %rax,%rdx
    adee:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    adf2:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    adf6:	48 89 ce             	mov    %rcx,%rsi
    adf9:	48 89 c7             	mov    %rax,%rdi
    adfc:	e8 cb 01 00 00       	call   afcc <_ZNKSt4lessIPKcEclES1_S1_>
		|| less<const _CharT*>()(_M_data() + this->size(), __s));
    ae01:	84 c0                	test   %al,%al
    ae03:	75 36                	jne    ae3b <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x6d>
    ae05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ae09:	48 89 c7             	mov    %rax,%rdi
    ae0c:	e8 ff ee ff ff       	call   9d10 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    ae11:	48 89 c3             	mov    %rax,%rbx
    ae14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ae18:	48 89 c7             	mov    %rax,%rdi
    ae1b:	e8 46 b4 ff ff       	call   6266 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    ae20:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    ae24:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ae28:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ae2c:	48 89 ce             	mov    %rcx,%rsi
    ae2f:	48 89 c7             	mov    %rax,%rdi
    ae32:	e8 95 01 00 00       	call   afcc <_ZNKSt4lessIPKcEclES1_S1_>
    ae37:	84 c0                	test   %al,%al
    ae39:	74 07                	je     ae42 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x74>
    ae3b:	b8 01 00 00 00       	mov    $0x1,%eax
    ae40:	eb 05                	jmp    ae47 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x79>
    ae42:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ae47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ae4b:	c9                   	leave
    ae4c:	c3                   	ret

000000000000ae4d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>:
      _S_move(_CharT* __d, const _CharT* __s, size_type __n)
    ae4d:	55                   	push   %rbp
    ae4e:	48 89 e5             	mov    %rsp,%rbp
    ae51:	48 83 ec 20          	sub    $0x20,%rsp
    ae55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae5d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__n == 1)
    ae61:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    ae66:	75 15                	jne    ae7d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x30>
	  traits_type::assign(*__d, *__s);
    ae68:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae70:	48 89 d6             	mov    %rdx,%rsi
    ae73:	48 89 c7             	mov    %rax,%rdi
    ae76:	e8 bb b2 ff ff       	call   6136 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    ae7b:	eb 17                	jmp    ae94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x47>
	  traits_type::move(__d, __s, __n);
    ae7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ae81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ae85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae89:	48 89 ce             	mov    %rcx,%rsi
    ae8c:	48 89 c7             	mov    %rax,%rdi
    ae8f:	e8 12 b3 ff ff       	call   61a6 <_ZNSt11char_traitsIcE4moveEPcPKcm>
      }
    ae94:	90                   	nop
    ae95:	c9                   	leave
    ae96:	c3                   	ret
    ae97:	90                   	nop

000000000000ae98 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEEC1Ev>:
      _Tuple_impl()
    ae98:	55                   	push   %rbp
    ae99:	48 89 e5             	mov    %rsp,%rbp
    ae9c:	48 83 ec 10          	sub    $0x10,%rsp
    aea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    aea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aea8:	48 89 c7             	mov    %rax,%rdi
    aeab:	e8 56 01 00 00       	call   b006 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EEC1Ev>
    aeb0:	90                   	nop
    aeb1:	c9                   	leave
    aeb2:	c3                   	ret
    aeb3:	90                   	nop

000000000000aeb4 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EEC1Ev>:
      constexpr _Head_base()
    aeb4:	55                   	push   %rbp
    aeb5:	48 89 e5             	mov    %rsp,%rbp
    aeb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    aebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aec0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aec7:	90                   	nop
    aec8:	5d                   	pop    %rbp
    aec9:	c3                   	ret

000000000000aeca <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    aeca:	55                   	push   %rbp
    aecb:	48 89 e5             	mov    %rsp,%rbp
    aece:	48 83 ec 10          	sub    $0x10,%rsp
    aed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeda:	48 89 c7             	mov    %rax,%rdi
    aedd:	e8 2f 01 00 00       	call   b011 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERS4_>
    aee2:	c9                   	leave
    aee3:	c3                   	ret

000000000000aee4 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    aee4:	55                   	push   %rbp
    aee5:	48 89 e5             	mov    %rsp,%rbp
    aee8:	48 83 ec 10          	sub    $0x10,%rsp
    aeec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    aef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef4:	48 89 c7             	mov    %rax,%rdi
    aef7:	e8 23 01 00 00       	call   b01f <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEE7_M_headERS5_>
    aefc:	c9                   	leave
    aefd:	c3                   	ret

000000000000aefe <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    aefe:	55                   	push   %rbp
    aeff:	48 89 e5             	mov    %rsp,%rbp
    af02:	48 83 ec 10          	sub    $0x10,%rsp
    af06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af0e:	48 89 c7             	mov    %rax,%rdi
    af11:	e8 23 01 00 00       	call   b039 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERS4_>
    af16:	c9                   	leave
    af17:	c3                   	ret

000000000000af18 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    af18:	55                   	push   %rbp
    af19:	48 89 e5             	mov    %rsp,%rbp
    af1c:	48 83 ec 10          	sub    $0x10,%rsp
    af20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    af24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af28:	48 89 c7             	mov    %rax,%rdi
    af2b:	e8 17 01 00 00       	call   b047 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEE7_M_headERS5_>
    af30:	c9                   	leave
    af31:	c3                   	ret

000000000000af32 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    af32:	55                   	push   %rbp
    af33:	48 89 e5             	mov    %rsp,%rbp
    af36:	48 83 ec 10          	sub    $0x10,%rsp
    af3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    af3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af42:	48 89 c7             	mov    %rax,%rdi
    af45:	e8 17 01 00 00       	call   b061 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>
    af4a:	c9                   	leave
    af4b:	c3                   	ret

000000000000af4c <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
#endif

      // NB: __n is permitted to be 0.  The C++ standard says nothing
      // about what the return value is when __n == 0.
      _GLIBCXX_NODISCARD _Tp*
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    af4c:	55                   	push   %rbp
    af4d:	48 89 e5             	mov    %rsp,%rbp
    af50:	48 83 ec 20          	sub    $0x20,%rsp
    af54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3308. std::allocator<void>().allocate(n)
	static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
#endif

	if (__builtin_expect(__n > this->_M_max_size(), false))
    af60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af64:	48 89 c7             	mov    %rax,%rdi
    af67:	e8 10 01 00 00       	call   b07c <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    af6c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    af70:	0f 92 c0             	setb   %al
    af73:	0f b6 c0             	movzbl %al,%eax
    af76:	48 85 c0             	test   %rax,%rax
    af79:	0f 95 c0             	setne  %al
    af7c:	84 c0                	test   %al,%al
    af7e:	74 05                	je     af85 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	  {
	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
	    // 3190. allocator::allocate sometimes returns too little storage
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
	      std::__throw_bad_array_new_length();
	    std::__throw_bad_alloc();
    af80:	e8 eb a0 ff ff       	call   5070 <_ZSt17__throw_bad_allocv@plt>
	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
	    return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp),
							   __al));
	  }
#endif
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    af85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af89:	48 89 c7             	mov    %rax,%rdi
    af8c:	e8 4f a2 ff ff       	call   51e0 <_Znwm@plt>
    af91:	90                   	nop
      }
    af92:	c9                   	leave
    af93:	c3                   	ret

000000000000af94 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af94:	55                   	push   %rbp
    af95:	48 89 e5             	mov    %rsp,%rbp
    af98:	48 83 ec 20          	sub    $0x20,%rsp
    af9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afa4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    afa8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    afac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    afb0:	48 89 d6             	mov    %rdx,%rsi
    afb3:	48 89 c7             	mov    %rax,%rdi
    afb6:	e8 35 a2 ff ff       	call   51f0 <_ZdlPvm@plt>
      }
    afbb:	c9                   	leave
    afbc:	c3                   	ret

000000000000afbd <_ZSt11__addressofIKcEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    afbd:	55                   	push   %rbp
    afbe:	48 89 e5             	mov    %rsp,%rbp
    afc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    afc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afc9:	5d                   	pop    %rbp
    afca:	c3                   	ret
    afcb:	90                   	nop

000000000000afcc <_ZNKSt4lessIPKcEclES1_S1_>:
  // Partial specialization of std::less for pointers.
  template<typename _Tp>
    struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
    {
      _GLIBCXX14_CONSTEXPR bool
      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
    afcc:	55                   	push   %rbp
    afcd:	48 89 e5             	mov    %rsp,%rbp
    afd0:	48 83 ec 20          	sub    $0x20,%rsp
    afd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afdc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
#if __cplusplus >= 201402L
	if (std::__is_constant_evaluated())
    afe0:	e8 29 b1 ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    afe5:	84 c0                	test   %al,%al
    afe7:	74 0d                	je     aff6 <_ZNKSt4lessIPKcEclES1_S1_+0x2a>
	  return __x < __y;
    afe9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    afed:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    aff1:	0f 92 c0             	setb   %al
    aff4:	eb 0e                	jmp    b004 <_ZNKSt4lessIPKcEclES1_S1_+0x38>
#endif
	return (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;
    aff6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    affa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    affe:	48 39 c2             	cmp    %rax,%rdx
    b001:	0f 92 c0             	setb   %al
      }
    b004:	c9                   	leave
    b005:	c3                   	ret

000000000000b006 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EEC1Ev>:
      constexpr _Head_base()
    b006:	55                   	push   %rbp
    b007:	48 89 e5             	mov    %rsp,%rbp
    b00a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    b00e:	90                   	nop
    b00f:	5d                   	pop    %rbp
    b010:	c3                   	ret

000000000000b011 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    b011:	55                   	push   %rbp
    b012:	48 89 e5             	mov    %rsp,%rbp
    b015:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b019:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b01d:	5d                   	pop    %rbp
    b01e:	c3                   	ret

000000000000b01f <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b01f:	55                   	push   %rbp
    b020:	48 89 e5             	mov    %rsp,%rbp
    b023:	48 83 ec 10          	sub    $0x10,%rsp
    b027:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b02b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b02f:	48 89 c7             	mov    %rax,%rdi
    b032:	e8 59 00 00 00       	call   b090 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EE7_M_headERS5_>
    b037:	c9                   	leave
    b038:	c3                   	ret

000000000000b039 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    b039:	55                   	push   %rbp
    b03a:	48 89 e5             	mov    %rsp,%rbp
    b03d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b045:	5d                   	pop    %rbp
    b046:	c3                   	ret

000000000000b047 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b047:	55                   	push   %rbp
    b048:	48 89 e5             	mov    %rsp,%rbp
    b04b:	48 83 ec 10          	sub    $0x10,%rsp
    b04f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b057:	48 89 c7             	mov    %rax,%rdi
    b05a:	e8 3f 00 00 00       	call   b09e <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EE7_M_headERS5_>
    b05f:	c9                   	leave
    b060:	c3                   	ret

000000000000b061 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    b061:	55                   	push   %rbp
    b062:	48 89 e5             	mov    %rsp,%rbp
    b065:	48 83 ec 10          	sub    $0x10,%rsp
    b069:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b06d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b071:	48 89 c7             	mov    %rax,%rdi
    b074:	e8 33 00 00 00       	call   b0ac <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERKS4_>
    b079:	c9                   	leave
    b07a:	c3                   	ret
    b07b:	90                   	nop

000000000000b07c <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b07c:	55                   	push   %rbp
    b07d:	48 89 e5             	mov    %rsp,%rbp
    b080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b084:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    b08b:	ff ff 7f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    b08e:	5d                   	pop    %rbp
    b08f:	c3                   	ret

000000000000b090 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    b090:	55                   	push   %rbp
    b091:	48 89 e5             	mov    %rsp,%rbp
    b094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b09c:	5d                   	pop    %rbp
    b09d:	c3                   	ret

000000000000b09e <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EE7_M_headERS5_>:
    b09e:	55                   	push   %rbp
    b09f:	48 89 e5             	mov    %rsp,%rbp
    b0a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0aa:	5d                   	pop    %rbp
    b0ab:	c3                   	ret

000000000000b0ac <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERKS4_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    b0ac:	55                   	push   %rbp
    b0ad:	48 89 e5             	mov    %rsp,%rbp
    b0b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0b8:	5d                   	pop    %rbp
    b0b9:	c3                   	ret

000000000000b0ba <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>:
  class CompressionExhaustedEXTError : public SystemError
    b0ba:	55                   	push   %rbp
    b0bb:	48 89 e5             	mov    %rsp,%rbp
    b0be:	48 83 ec 10          	sub    $0x10,%rsp
    b0c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0c6:	48 8d 15 ab d0 00 00 	lea    0xd0ab(%rip),%rdx        # 18178 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x10>
    b0cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0d1:	48 89 10             	mov    %rdx,(%rax)
    b0d4:	48 8d 15 c5 d0 00 00 	lea    0xd0c5(%rip),%rdx        # 181a0 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x38>
    b0db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0df:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b0e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0e7:	48 89 c7             	mov    %rax,%rdi
    b0ea:	e8 c7 c7 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b0ef:	90                   	nop
    b0f0:	c9                   	leave
    b0f1:	c3                   	ret

000000000000b0f2 <_ZThn8_N2vk28CompressionExhaustedEXTErrorD1Ev>:
    b0f2:	48 83 ef 08          	sub    $0x8,%rdi
    b0f6:	eb c2                	jmp    b0ba <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>

000000000000b0f8 <_ZN2vk28CompressionExhaustedEXTErrorD0Ev>:
    b0f8:	55                   	push   %rbp
    b0f9:	48 89 e5             	mov    %rsp,%rbp
    b0fc:	48 83 ec 10          	sub    $0x10,%rsp
    b100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b108:	48 89 c7             	mov    %rax,%rdi
    b10b:	e8 aa ff ff ff       	call   b0ba <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    b110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b114:	be 28 00 00 00       	mov    $0x28,%esi
    b119:	48 89 c7             	mov    %rax,%rdi
    b11c:	e8 cf a0 ff ff       	call   51f0 <_ZdlPvm@plt>
    b121:	c9                   	leave
    b122:	c3                   	ret

000000000000b123 <_ZThn8_N2vk28CompressionExhaustedEXTErrorD0Ev>:
    b123:	48 83 ef 08          	sub    $0x8,%rdi
    b127:	eb cf                	jmp    b0f8 <_ZN2vk28CompressionExhaustedEXTErrorD0Ev>
    b129:	90                   	nop

000000000000b12a <_ZN2vk20NotPermittedKHRErrorD1Ev>:
  class NotPermittedKHRError : public SystemError
    b12a:	55                   	push   %rbp
    b12b:	48 89 e5             	mov    %rsp,%rbp
    b12e:	48 83 ec 10          	sub    $0x10,%rsp
    b132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b136:	48 8d 15 8b d0 00 00 	lea    0xd08b(%rip),%rdx        # 181c8 <_ZTVN2vk20NotPermittedKHRErrorE+0x10>
    b13d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b141:	48 89 10             	mov    %rdx,(%rax)
    b144:	48 8d 15 a5 d0 00 00 	lea    0xd0a5(%rip),%rdx        # 181f0 <_ZTVN2vk20NotPermittedKHRErrorE+0x38>
    b14b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b14f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b153:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b157:	48 89 c7             	mov    %rax,%rdi
    b15a:	e8 57 c7 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b15f:	90                   	nop
    b160:	c9                   	leave
    b161:	c3                   	ret

000000000000b162 <_ZThn8_N2vk20NotPermittedKHRErrorD1Ev>:
    b162:	48 83 ef 08          	sub    $0x8,%rdi
    b166:	eb c2                	jmp    b12a <_ZN2vk20NotPermittedKHRErrorD1Ev>

000000000000b168 <_ZN2vk20NotPermittedKHRErrorD0Ev>:
    b168:	55                   	push   %rbp
    b169:	48 89 e5             	mov    %rsp,%rbp
    b16c:	48 83 ec 10          	sub    $0x10,%rsp
    b170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b178:	48 89 c7             	mov    %rax,%rdi
    b17b:	e8 aa ff ff ff       	call   b12a <_ZN2vk20NotPermittedKHRErrorD1Ev>
    b180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b184:	be 28 00 00 00       	mov    $0x28,%esi
    b189:	48 89 c7             	mov    %rax,%rdi
    b18c:	e8 5f a0 ff ff       	call   51f0 <_ZdlPvm@plt>
    b191:	c9                   	leave
    b192:	c3                   	ret

000000000000b193 <_ZThn8_N2vk20NotPermittedKHRErrorD0Ev>:
    b193:	48 83 ef 08          	sub    $0x8,%rdi
    b197:	eb cf                	jmp    b168 <_ZN2vk20NotPermittedKHRErrorD0Ev>
    b199:	90                   	nop

000000000000b19a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>:
  class InvalidDrmFormatModifierPlaneLayoutEXTError : public SystemError
    b19a:	55                   	push   %rbp
    b19b:	48 89 e5             	mov    %rsp,%rbp
    b19e:	48 83 ec 10          	sub    $0x10,%rsp
    b1a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1a6:	48 8d 15 6b d0 00 00 	lea    0xd06b(%rip),%rdx        # 18218 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x10>
    b1ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1b1:	48 89 10             	mov    %rdx,(%rax)
    b1b4:	48 8d 15 85 d0 00 00 	lea    0xd085(%rip),%rdx        # 18240 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x38>
    b1bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1bf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b1c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1c7:	48 89 c7             	mov    %rax,%rdi
    b1ca:	e8 e7 c6 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b1cf:	90                   	nop
    b1d0:	c9                   	leave
    b1d1:	c3                   	ret

000000000000b1d2 <_ZThn8_N2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>:
    b1d2:	48 83 ef 08          	sub    $0x8,%rdi
    b1d6:	eb c2                	jmp    b19a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>

000000000000b1d8 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>:
    b1d8:	55                   	push   %rbp
    b1d9:	48 89 e5             	mov    %rsp,%rbp
    b1dc:	48 83 ec 10          	sub    $0x10,%rsp
    b1e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1e8:	48 89 c7             	mov    %rax,%rdi
    b1eb:	e8 aa ff ff ff       	call   b19a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    b1f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1f4:	be 28 00 00 00       	mov    $0x28,%esi
    b1f9:	48 89 c7             	mov    %rax,%rdi
    b1fc:	e8 ef 9f ff ff       	call   51f0 <_ZdlPvm@plt>
    b201:	c9                   	leave
    b202:	c3                   	ret

000000000000b203 <_ZThn8_N2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>:
    b203:	48 83 ef 08          	sub    $0x8,%rdi
    b207:	eb cf                	jmp    b1d8 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>
    b209:	90                   	nop

000000000000b20a <_ZN2vk20InvalidShaderNVErrorD1Ev>:
  class InvalidShaderNVError : public SystemError
    b20a:	55                   	push   %rbp
    b20b:	48 89 e5             	mov    %rsp,%rbp
    b20e:	48 83 ec 10          	sub    $0x10,%rsp
    b212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b216:	48 8d 15 4b d0 00 00 	lea    0xd04b(%rip),%rdx        # 18268 <_ZTVN2vk20InvalidShaderNVErrorE+0x10>
    b21d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b221:	48 89 10             	mov    %rdx,(%rax)
    b224:	48 8d 15 65 d0 00 00 	lea    0xd065(%rip),%rdx        # 18290 <_ZTVN2vk20InvalidShaderNVErrorE+0x38>
    b22b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b22f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b237:	48 89 c7             	mov    %rax,%rdi
    b23a:	e8 77 c6 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b23f:	90                   	nop
    b240:	c9                   	leave
    b241:	c3                   	ret

000000000000b242 <_ZThn8_N2vk20InvalidShaderNVErrorD1Ev>:
    b242:	48 83 ef 08          	sub    $0x8,%rdi
    b246:	eb c2                	jmp    b20a <_ZN2vk20InvalidShaderNVErrorD1Ev>

000000000000b248 <_ZN2vk20InvalidShaderNVErrorD0Ev>:
    b248:	55                   	push   %rbp
    b249:	48 89 e5             	mov    %rsp,%rbp
    b24c:	48 83 ec 10          	sub    $0x10,%rsp
    b250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b258:	48 89 c7             	mov    %rax,%rdi
    b25b:	e8 aa ff ff ff       	call   b20a <_ZN2vk20InvalidShaderNVErrorD1Ev>
    b260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b264:	be 28 00 00 00       	mov    $0x28,%esi
    b269:	48 89 c7             	mov    %rax,%rdi
    b26c:	e8 7f 9f ff ff       	call   51f0 <_ZdlPvm@plt>
    b271:	c9                   	leave
    b272:	c3                   	ret

000000000000b273 <_ZThn8_N2vk20InvalidShaderNVErrorD0Ev>:
    b273:	48 83 ef 08          	sub    $0x8,%rdi
    b277:	eb cf                	jmp    b248 <_ZN2vk20InvalidShaderNVErrorD0Ev>
    b279:	90                   	nop

000000000000b27a <_ZN2vk24ValidationFailedEXTErrorD1Ev>:
  class ValidationFailedEXTError : public SystemError
    b27a:	55                   	push   %rbp
    b27b:	48 89 e5             	mov    %rsp,%rbp
    b27e:	48 83 ec 10          	sub    $0x10,%rsp
    b282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b286:	48 8d 15 2b d0 00 00 	lea    0xd02b(%rip),%rdx        # 182b8 <_ZTVN2vk24ValidationFailedEXTErrorE+0x10>
    b28d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b291:	48 89 10             	mov    %rdx,(%rax)
    b294:	48 8d 15 45 d0 00 00 	lea    0xd045(%rip),%rdx        # 182e0 <_ZTVN2vk24ValidationFailedEXTErrorE+0x38>
    b29b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b29f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b2a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2a7:	48 89 c7             	mov    %rax,%rdi
    b2aa:	e8 07 c6 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b2af:	90                   	nop
    b2b0:	c9                   	leave
    b2b1:	c3                   	ret

000000000000b2b2 <_ZThn8_N2vk24ValidationFailedEXTErrorD1Ev>:
    b2b2:	48 83 ef 08          	sub    $0x8,%rdi
    b2b6:	eb c2                	jmp    b27a <_ZN2vk24ValidationFailedEXTErrorD1Ev>

000000000000b2b8 <_ZN2vk24ValidationFailedEXTErrorD0Ev>:
    b2b8:	55                   	push   %rbp
    b2b9:	48 89 e5             	mov    %rsp,%rbp
    b2bc:	48 83 ec 10          	sub    $0x10,%rsp
    b2c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2c8:	48 89 c7             	mov    %rax,%rdi
    b2cb:	e8 aa ff ff ff       	call   b27a <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    b2d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2d4:	be 28 00 00 00       	mov    $0x28,%esi
    b2d9:	48 89 c7             	mov    %rax,%rdi
    b2dc:	e8 0f 9f ff ff       	call   51f0 <_ZdlPvm@plt>
    b2e1:	c9                   	leave
    b2e2:	c3                   	ret

000000000000b2e3 <_ZThn8_N2vk24ValidationFailedEXTErrorD0Ev>:
    b2e3:	48 83 ef 08          	sub    $0x8,%rdi
    b2e7:	eb cf                	jmp    b2b8 <_ZN2vk24ValidationFailedEXTErrorD0Ev>
    b2e9:	90                   	nop

000000000000b2ea <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>:
  class IncompatibleDisplayKHRError : public SystemError
    b2ea:	55                   	push   %rbp
    b2eb:	48 89 e5             	mov    %rsp,%rbp
    b2ee:	48 83 ec 10          	sub    $0x10,%rsp
    b2f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2f6:	48 8d 15 0b d0 00 00 	lea    0xd00b(%rip),%rdx        # 18308 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x10>
    b2fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b301:	48 89 10             	mov    %rdx,(%rax)
    b304:	48 8d 15 25 d0 00 00 	lea    0xd025(%rip),%rdx        # 18330 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x38>
    b30b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b30f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b317:	48 89 c7             	mov    %rax,%rdi
    b31a:	e8 97 c5 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b31f:	90                   	nop
    b320:	c9                   	leave
    b321:	c3                   	ret

000000000000b322 <_ZThn8_N2vk27IncompatibleDisplayKHRErrorD1Ev>:
    b322:	48 83 ef 08          	sub    $0x8,%rdi
    b326:	eb c2                	jmp    b2ea <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>

000000000000b328 <_ZN2vk27IncompatibleDisplayKHRErrorD0Ev>:
    b328:	55                   	push   %rbp
    b329:	48 89 e5             	mov    %rsp,%rbp
    b32c:	48 83 ec 10          	sub    $0x10,%rsp
    b330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b338:	48 89 c7             	mov    %rax,%rdi
    b33b:	e8 aa ff ff ff       	call   b2ea <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    b340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b344:	be 28 00 00 00       	mov    $0x28,%esi
    b349:	48 89 c7             	mov    %rax,%rdi
    b34c:	e8 9f 9e ff ff       	call   51f0 <_ZdlPvm@plt>
    b351:	c9                   	leave
    b352:	c3                   	ret

000000000000b353 <_ZThn8_N2vk27IncompatibleDisplayKHRErrorD0Ev>:
    b353:	48 83 ef 08          	sub    $0x8,%rdi
    b357:	eb cf                	jmp    b328 <_ZN2vk27IncompatibleDisplayKHRErrorD0Ev>
    b359:	90                   	nop

000000000000b35a <_ZN2vk17OutOfDateKHRErrorD1Ev>:
  class OutOfDateKHRError : public SystemError
    b35a:	55                   	push   %rbp
    b35b:	48 89 e5             	mov    %rsp,%rbp
    b35e:	48 83 ec 10          	sub    $0x10,%rsp
    b362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b366:	48 8d 15 eb cf 00 00 	lea    0xcfeb(%rip),%rdx        # 18358 <_ZTVN2vk17OutOfDateKHRErrorE+0x10>
    b36d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b371:	48 89 10             	mov    %rdx,(%rax)
    b374:	48 8d 15 05 d0 00 00 	lea    0xd005(%rip),%rdx        # 18380 <_ZTVN2vk17OutOfDateKHRErrorE+0x38>
    b37b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b37f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b387:	48 89 c7             	mov    %rax,%rdi
    b38a:	e8 27 c5 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b38f:	90                   	nop
    b390:	c9                   	leave
    b391:	c3                   	ret

000000000000b392 <_ZThn8_N2vk17OutOfDateKHRErrorD1Ev>:
    b392:	48 83 ef 08          	sub    $0x8,%rdi
    b396:	eb c2                	jmp    b35a <_ZN2vk17OutOfDateKHRErrorD1Ev>

000000000000b398 <_ZN2vk17OutOfDateKHRErrorD0Ev>:
    b398:	55                   	push   %rbp
    b399:	48 89 e5             	mov    %rsp,%rbp
    b39c:	48 83 ec 10          	sub    $0x10,%rsp
    b3a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3a8:	48 89 c7             	mov    %rax,%rdi
    b3ab:	e8 aa ff ff ff       	call   b35a <_ZN2vk17OutOfDateKHRErrorD1Ev>
    b3b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3b4:	be 28 00 00 00       	mov    $0x28,%esi
    b3b9:	48 89 c7             	mov    %rax,%rdi
    b3bc:	e8 2f 9e ff ff       	call   51f0 <_ZdlPvm@plt>
    b3c1:	c9                   	leave
    b3c2:	c3                   	ret

000000000000b3c3 <_ZThn8_N2vk17OutOfDateKHRErrorD0Ev>:
    b3c3:	48 83 ef 08          	sub    $0x8,%rdi
    b3c7:	eb cf                	jmp    b398 <_ZN2vk17OutOfDateKHRErrorD0Ev>
    b3c9:	90                   	nop

000000000000b3ca <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>:
  class NativeWindowInUseKHRError : public SystemError
    b3ca:	55                   	push   %rbp
    b3cb:	48 89 e5             	mov    %rsp,%rbp
    b3ce:	48 83 ec 10          	sub    $0x10,%rsp
    b3d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3d6:	48 8d 15 cb cf 00 00 	lea    0xcfcb(%rip),%rdx        # 183a8 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x10>
    b3dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3e1:	48 89 10             	mov    %rdx,(%rax)
    b3e4:	48 8d 15 e5 cf 00 00 	lea    0xcfe5(%rip),%rdx        # 183d0 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x38>
    b3eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3ef:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b3f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3f7:	48 89 c7             	mov    %rax,%rdi
    b3fa:	e8 b7 c4 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b3ff:	90                   	nop
    b400:	c9                   	leave
    b401:	c3                   	ret

000000000000b402 <_ZThn8_N2vk25NativeWindowInUseKHRErrorD1Ev>:
    b402:	48 83 ef 08          	sub    $0x8,%rdi
    b406:	eb c2                	jmp    b3ca <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>

000000000000b408 <_ZN2vk25NativeWindowInUseKHRErrorD0Ev>:
    b408:	55                   	push   %rbp
    b409:	48 89 e5             	mov    %rsp,%rbp
    b40c:	48 83 ec 10          	sub    $0x10,%rsp
    b410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b418:	48 89 c7             	mov    %rax,%rdi
    b41b:	e8 aa ff ff ff       	call   b3ca <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    b420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b424:	be 28 00 00 00       	mov    $0x28,%esi
    b429:	48 89 c7             	mov    %rax,%rdi
    b42c:	e8 bf 9d ff ff       	call   51f0 <_ZdlPvm@plt>
    b431:	c9                   	leave
    b432:	c3                   	ret

000000000000b433 <_ZThn8_N2vk25NativeWindowInUseKHRErrorD0Ev>:
    b433:	48 83 ef 08          	sub    $0x8,%rdi
    b437:	eb cf                	jmp    b408 <_ZN2vk25NativeWindowInUseKHRErrorD0Ev>
    b439:	90                   	nop

000000000000b43a <_ZN2vk19SurfaceLostKHRErrorD1Ev>:
  class SurfaceLostKHRError : public SystemError
    b43a:	55                   	push   %rbp
    b43b:	48 89 e5             	mov    %rsp,%rbp
    b43e:	48 83 ec 10          	sub    $0x10,%rsp
    b442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b446:	48 8d 15 ab cf 00 00 	lea    0xcfab(%rip),%rdx        # 183f8 <_ZTVN2vk19SurfaceLostKHRErrorE+0x10>
    b44d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b451:	48 89 10             	mov    %rdx,(%rax)
    b454:	48 8d 15 c5 cf 00 00 	lea    0xcfc5(%rip),%rdx        # 18420 <_ZTVN2vk19SurfaceLostKHRErrorE+0x38>
    b45b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b45f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b467:	48 89 c7             	mov    %rax,%rdi
    b46a:	e8 47 c4 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b46f:	90                   	nop
    b470:	c9                   	leave
    b471:	c3                   	ret

000000000000b472 <_ZThn8_N2vk19SurfaceLostKHRErrorD1Ev>:
    b472:	48 83 ef 08          	sub    $0x8,%rdi
    b476:	eb c2                	jmp    b43a <_ZN2vk19SurfaceLostKHRErrorD1Ev>

000000000000b478 <_ZN2vk19SurfaceLostKHRErrorD0Ev>:
    b478:	55                   	push   %rbp
    b479:	48 89 e5             	mov    %rsp,%rbp
    b47c:	48 83 ec 10          	sub    $0x10,%rsp
    b480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b488:	48 89 c7             	mov    %rax,%rdi
    b48b:	e8 aa ff ff ff       	call   b43a <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    b490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b494:	be 28 00 00 00       	mov    $0x28,%esi
    b499:	48 89 c7             	mov    %rax,%rdi
    b49c:	e8 4f 9d ff ff       	call   51f0 <_ZdlPvm@plt>
    b4a1:	c9                   	leave
    b4a2:	c3                   	ret

000000000000b4a3 <_ZThn8_N2vk19SurfaceLostKHRErrorD0Ev>:
    b4a3:	48 83 ef 08          	sub    $0x8,%rdi
    b4a7:	eb cf                	jmp    b478 <_ZN2vk19SurfaceLostKHRErrorD0Ev>
    b4a9:	90                   	nop

000000000000b4aa <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>:
  class InvalidOpaqueCaptureAddressError : public SystemError
    b4aa:	55                   	push   %rbp
    b4ab:	48 89 e5             	mov    %rsp,%rbp
    b4ae:	48 83 ec 10          	sub    $0x10,%rsp
    b4b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4b6:	48 8d 15 8b cf 00 00 	lea    0xcf8b(%rip),%rdx        # 18448 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x10>
    b4bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4c1:	48 89 10             	mov    %rdx,(%rax)
    b4c4:	48 8d 15 a5 cf 00 00 	lea    0xcfa5(%rip),%rdx        # 18470 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x38>
    b4cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b4d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4d7:	48 89 c7             	mov    %rax,%rdi
    b4da:	e8 d7 c3 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b4df:	90                   	nop
    b4e0:	c9                   	leave
    b4e1:	c3                   	ret

000000000000b4e2 <_ZThn8_N2vk32InvalidOpaqueCaptureAddressErrorD1Ev>:
    b4e2:	48 83 ef 08          	sub    $0x8,%rdi
    b4e6:	eb c2                	jmp    b4aa <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>

000000000000b4e8 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD0Ev>:
    b4e8:	55                   	push   %rbp
    b4e9:	48 89 e5             	mov    %rsp,%rbp
    b4ec:	48 83 ec 10          	sub    $0x10,%rsp
    b4f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f8:	48 89 c7             	mov    %rax,%rdi
    b4fb:	e8 aa ff ff ff       	call   b4aa <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    b500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b504:	be 28 00 00 00       	mov    $0x28,%esi
    b509:	48 89 c7             	mov    %rax,%rdi
    b50c:	e8 df 9c ff ff       	call   51f0 <_ZdlPvm@plt>
    b511:	c9                   	leave
    b512:	c3                   	ret

000000000000b513 <_ZThn8_N2vk32InvalidOpaqueCaptureAddressErrorD0Ev>:
    b513:	48 83 ef 08          	sub    $0x8,%rdi
    b517:	eb cf                	jmp    b4e8 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD0Ev>
    b519:	90                   	nop

000000000000b51a <_ZN2vk18FragmentationErrorD1Ev>:
  class FragmentationError : public SystemError
    b51a:	55                   	push   %rbp
    b51b:	48 89 e5             	mov    %rsp,%rbp
    b51e:	48 83 ec 10          	sub    $0x10,%rsp
    b522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b526:	48 8d 15 6b cf 00 00 	lea    0xcf6b(%rip),%rdx        # 18498 <_ZTVN2vk18FragmentationErrorE+0x10>
    b52d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b531:	48 89 10             	mov    %rdx,(%rax)
    b534:	48 8d 15 85 cf 00 00 	lea    0xcf85(%rip),%rdx        # 184c0 <_ZTVN2vk18FragmentationErrorE+0x38>
    b53b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b53f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b547:	48 89 c7             	mov    %rax,%rdi
    b54a:	e8 67 c3 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b54f:	90                   	nop
    b550:	c9                   	leave
    b551:	c3                   	ret

000000000000b552 <_ZThn8_N2vk18FragmentationErrorD1Ev>:
    b552:	48 83 ef 08          	sub    $0x8,%rdi
    b556:	eb c2                	jmp    b51a <_ZN2vk18FragmentationErrorD1Ev>

000000000000b558 <_ZN2vk18FragmentationErrorD0Ev>:
    b558:	55                   	push   %rbp
    b559:	48 89 e5             	mov    %rsp,%rbp
    b55c:	48 83 ec 10          	sub    $0x10,%rsp
    b560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b568:	48 89 c7             	mov    %rax,%rdi
    b56b:	e8 aa ff ff ff       	call   b51a <_ZN2vk18FragmentationErrorD1Ev>
    b570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b574:	be 28 00 00 00       	mov    $0x28,%esi
    b579:	48 89 c7             	mov    %rax,%rdi
    b57c:	e8 6f 9c ff ff       	call   51f0 <_ZdlPvm@plt>
    b581:	c9                   	leave
    b582:	c3                   	ret

000000000000b583 <_ZThn8_N2vk18FragmentationErrorD0Ev>:
    b583:	48 83 ef 08          	sub    $0x8,%rdi
    b587:	eb cf                	jmp    b558 <_ZN2vk18FragmentationErrorD0Ev>
    b589:	90                   	nop

000000000000b58a <_ZN2vk26InvalidExternalHandleErrorD1Ev>:
  class InvalidExternalHandleError : public SystemError
    b58a:	55                   	push   %rbp
    b58b:	48 89 e5             	mov    %rsp,%rbp
    b58e:	48 83 ec 10          	sub    $0x10,%rsp
    b592:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b596:	48 8d 15 4b cf 00 00 	lea    0xcf4b(%rip),%rdx        # 184e8 <_ZTVN2vk26InvalidExternalHandleErrorE+0x10>
    b59d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a1:	48 89 10             	mov    %rdx,(%rax)
    b5a4:	48 8d 15 65 cf 00 00 	lea    0xcf65(%rip),%rdx        # 18510 <_ZTVN2vk26InvalidExternalHandleErrorE+0x38>
    b5ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5af:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b5b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5b7:	48 89 c7             	mov    %rax,%rdi
    b5ba:	e8 f7 c2 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b5bf:	90                   	nop
    b5c0:	c9                   	leave
    b5c1:	c3                   	ret

000000000000b5c2 <_ZThn8_N2vk26InvalidExternalHandleErrorD1Ev>:
    b5c2:	48 83 ef 08          	sub    $0x8,%rdi
    b5c6:	eb c2                	jmp    b58a <_ZN2vk26InvalidExternalHandleErrorD1Ev>

000000000000b5c8 <_ZN2vk26InvalidExternalHandleErrorD0Ev>:
    b5c8:	55                   	push   %rbp
    b5c9:	48 89 e5             	mov    %rsp,%rbp
    b5cc:	48 83 ec 10          	sub    $0x10,%rsp
    b5d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5d8:	48 89 c7             	mov    %rax,%rdi
    b5db:	e8 aa ff ff ff       	call   b58a <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    b5e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5e4:	be 28 00 00 00       	mov    $0x28,%esi
    b5e9:	48 89 c7             	mov    %rax,%rdi
    b5ec:	e8 ff 9b ff ff       	call   51f0 <_ZdlPvm@plt>
    b5f1:	c9                   	leave
    b5f2:	c3                   	ret

000000000000b5f3 <_ZThn8_N2vk26InvalidExternalHandleErrorD0Ev>:
    b5f3:	48 83 ef 08          	sub    $0x8,%rdi
    b5f7:	eb cf                	jmp    b5c8 <_ZN2vk26InvalidExternalHandleErrorD0Ev>
    b5f9:	90                   	nop

000000000000b5fa <_ZN2vk20OutOfPoolMemoryErrorD1Ev>:
  class OutOfPoolMemoryError : public SystemError
    b5fa:	55                   	push   %rbp
    b5fb:	48 89 e5             	mov    %rsp,%rbp
    b5fe:	48 83 ec 10          	sub    $0x10,%rsp
    b602:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b606:	48 8d 15 2b cf 00 00 	lea    0xcf2b(%rip),%rdx        # 18538 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x10>
    b60d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b611:	48 89 10             	mov    %rdx,(%rax)
    b614:	48 8d 15 45 cf 00 00 	lea    0xcf45(%rip),%rdx        # 18560 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x38>
    b61b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b61f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b627:	48 89 c7             	mov    %rax,%rdi
    b62a:	e8 87 c2 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b62f:	90                   	nop
    b630:	c9                   	leave
    b631:	c3                   	ret

000000000000b632 <_ZThn8_N2vk20OutOfPoolMemoryErrorD1Ev>:
    b632:	48 83 ef 08          	sub    $0x8,%rdi
    b636:	eb c2                	jmp    b5fa <_ZN2vk20OutOfPoolMemoryErrorD1Ev>

000000000000b638 <_ZN2vk20OutOfPoolMemoryErrorD0Ev>:
    b638:	55                   	push   %rbp
    b639:	48 89 e5             	mov    %rsp,%rbp
    b63c:	48 83 ec 10          	sub    $0x10,%rsp
    b640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b648:	48 89 c7             	mov    %rax,%rdi
    b64b:	e8 aa ff ff ff       	call   b5fa <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    b650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b654:	be 28 00 00 00       	mov    $0x28,%esi
    b659:	48 89 c7             	mov    %rax,%rdi
    b65c:	e8 8f 9b ff ff       	call   51f0 <_ZdlPvm@plt>
    b661:	c9                   	leave
    b662:	c3                   	ret

000000000000b663 <_ZThn8_N2vk20OutOfPoolMemoryErrorD0Ev>:
    b663:	48 83 ef 08          	sub    $0x8,%rdi
    b667:	eb cf                	jmp    b638 <_ZN2vk20OutOfPoolMemoryErrorD0Ev>
    b669:	90                   	nop

000000000000b66a <_ZN2vk12UnknownErrorD1Ev>:
  class UnknownError : public SystemError
    b66a:	55                   	push   %rbp
    b66b:	48 89 e5             	mov    %rsp,%rbp
    b66e:	48 83 ec 10          	sub    $0x10,%rsp
    b672:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b676:	48 8d 15 0b cf 00 00 	lea    0xcf0b(%rip),%rdx        # 18588 <_ZTVN2vk12UnknownErrorE+0x10>
    b67d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b681:	48 89 10             	mov    %rdx,(%rax)
    b684:	48 8d 15 25 cf 00 00 	lea    0xcf25(%rip),%rdx        # 185b0 <_ZTVN2vk12UnknownErrorE+0x38>
    b68b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b68f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b693:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b697:	48 89 c7             	mov    %rax,%rdi
    b69a:	e8 17 c2 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b69f:	90                   	nop
    b6a0:	c9                   	leave
    b6a1:	c3                   	ret

000000000000b6a2 <_ZThn8_N2vk12UnknownErrorD1Ev>:
    b6a2:	48 83 ef 08          	sub    $0x8,%rdi
    b6a6:	eb c2                	jmp    b66a <_ZN2vk12UnknownErrorD1Ev>

000000000000b6a8 <_ZN2vk12UnknownErrorD0Ev>:
    b6a8:	55                   	push   %rbp
    b6a9:	48 89 e5             	mov    %rsp,%rbp
    b6ac:	48 83 ec 10          	sub    $0x10,%rsp
    b6b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6b8:	48 89 c7             	mov    %rax,%rdi
    b6bb:	e8 aa ff ff ff       	call   b66a <_ZN2vk12UnknownErrorD1Ev>
    b6c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6c4:	be 28 00 00 00       	mov    $0x28,%esi
    b6c9:	48 89 c7             	mov    %rax,%rdi
    b6cc:	e8 1f 9b ff ff       	call   51f0 <_ZdlPvm@plt>
    b6d1:	c9                   	leave
    b6d2:	c3                   	ret

000000000000b6d3 <_ZThn8_N2vk12UnknownErrorD0Ev>:
    b6d3:	48 83 ef 08          	sub    $0x8,%rdi
    b6d7:	eb cf                	jmp    b6a8 <_ZN2vk12UnknownErrorD0Ev>
    b6d9:	90                   	nop

000000000000b6da <_ZN2vk19FragmentedPoolErrorD1Ev>:
  class FragmentedPoolError : public SystemError
    b6da:	55                   	push   %rbp
    b6db:	48 89 e5             	mov    %rsp,%rbp
    b6de:	48 83 ec 10          	sub    $0x10,%rsp
    b6e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6e6:	48 8d 15 eb ce 00 00 	lea    0xceeb(%rip),%rdx        # 185d8 <_ZTVN2vk19FragmentedPoolErrorE+0x10>
    b6ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6f1:	48 89 10             	mov    %rdx,(%rax)
    b6f4:	48 8d 15 05 cf 00 00 	lea    0xcf05(%rip),%rdx        # 18600 <_ZTVN2vk19FragmentedPoolErrorE+0x38>
    b6fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6ff:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b707:	48 89 c7             	mov    %rax,%rdi
    b70a:	e8 a7 c1 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b70f:	90                   	nop
    b710:	c9                   	leave
    b711:	c3                   	ret

000000000000b712 <_ZThn8_N2vk19FragmentedPoolErrorD1Ev>:
    b712:	48 83 ef 08          	sub    $0x8,%rdi
    b716:	eb c2                	jmp    b6da <_ZN2vk19FragmentedPoolErrorD1Ev>

000000000000b718 <_ZN2vk19FragmentedPoolErrorD0Ev>:
    b718:	55                   	push   %rbp
    b719:	48 89 e5             	mov    %rsp,%rbp
    b71c:	48 83 ec 10          	sub    $0x10,%rsp
    b720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b728:	48 89 c7             	mov    %rax,%rdi
    b72b:	e8 aa ff ff ff       	call   b6da <_ZN2vk19FragmentedPoolErrorD1Ev>
    b730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b734:	be 28 00 00 00       	mov    $0x28,%esi
    b739:	48 89 c7             	mov    %rax,%rdi
    b73c:	e8 af 9a ff ff       	call   51f0 <_ZdlPvm@plt>
    b741:	c9                   	leave
    b742:	c3                   	ret

000000000000b743 <_ZThn8_N2vk19FragmentedPoolErrorD0Ev>:
    b743:	48 83 ef 08          	sub    $0x8,%rdi
    b747:	eb cf                	jmp    b718 <_ZN2vk19FragmentedPoolErrorD0Ev>
    b749:	90                   	nop

000000000000b74a <_ZN2vk23FormatNotSupportedErrorD1Ev>:
  class FormatNotSupportedError : public SystemError
    b74a:	55                   	push   %rbp
    b74b:	48 89 e5             	mov    %rsp,%rbp
    b74e:	48 83 ec 10          	sub    $0x10,%rsp
    b752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b756:	48 8d 15 cb ce 00 00 	lea    0xcecb(%rip),%rdx        # 18628 <_ZTVN2vk23FormatNotSupportedErrorE+0x10>
    b75d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b761:	48 89 10             	mov    %rdx,(%rax)
    b764:	48 8d 15 e5 ce 00 00 	lea    0xcee5(%rip),%rdx        # 18650 <_ZTVN2vk23FormatNotSupportedErrorE+0x38>
    b76b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b76f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b773:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b777:	48 89 c7             	mov    %rax,%rdi
    b77a:	e8 37 c1 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b77f:	90                   	nop
    b780:	c9                   	leave
    b781:	c3                   	ret

000000000000b782 <_ZThn8_N2vk23FormatNotSupportedErrorD1Ev>:
    b782:	48 83 ef 08          	sub    $0x8,%rdi
    b786:	eb c2                	jmp    b74a <_ZN2vk23FormatNotSupportedErrorD1Ev>

000000000000b788 <_ZN2vk23FormatNotSupportedErrorD0Ev>:
    b788:	55                   	push   %rbp
    b789:	48 89 e5             	mov    %rsp,%rbp
    b78c:	48 83 ec 10          	sub    $0x10,%rsp
    b790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b798:	48 89 c7             	mov    %rax,%rdi
    b79b:	e8 aa ff ff ff       	call   b74a <_ZN2vk23FormatNotSupportedErrorD1Ev>
    b7a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7a4:	be 28 00 00 00       	mov    $0x28,%esi
    b7a9:	48 89 c7             	mov    %rax,%rdi
    b7ac:	e8 3f 9a ff ff       	call   51f0 <_ZdlPvm@plt>
    b7b1:	c9                   	leave
    b7b2:	c3                   	ret

000000000000b7b3 <_ZThn8_N2vk23FormatNotSupportedErrorD0Ev>:
    b7b3:	48 83 ef 08          	sub    $0x8,%rdi
    b7b7:	eb cf                	jmp    b788 <_ZN2vk23FormatNotSupportedErrorD0Ev>
    b7b9:	90                   	nop

000000000000b7ba <_ZN2vk19TooManyObjectsErrorD1Ev>:
  class TooManyObjectsError : public SystemError
    b7ba:	55                   	push   %rbp
    b7bb:	48 89 e5             	mov    %rsp,%rbp
    b7be:	48 83 ec 10          	sub    $0x10,%rsp
    b7c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7c6:	48 8d 15 ab ce 00 00 	lea    0xceab(%rip),%rdx        # 18678 <_ZTVN2vk19TooManyObjectsErrorE+0x10>
    b7cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7d1:	48 89 10             	mov    %rdx,(%rax)
    b7d4:	48 8d 15 c5 ce 00 00 	lea    0xcec5(%rip),%rdx        # 186a0 <_ZTVN2vk19TooManyObjectsErrorE+0x38>
    b7db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7df:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7e7:	48 89 c7             	mov    %rax,%rdi
    b7ea:	e8 c7 c0 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b7ef:	90                   	nop
    b7f0:	c9                   	leave
    b7f1:	c3                   	ret

000000000000b7f2 <_ZThn8_N2vk19TooManyObjectsErrorD1Ev>:
    b7f2:	48 83 ef 08          	sub    $0x8,%rdi
    b7f6:	eb c2                	jmp    b7ba <_ZN2vk19TooManyObjectsErrorD1Ev>

000000000000b7f8 <_ZN2vk19TooManyObjectsErrorD0Ev>:
    b7f8:	55                   	push   %rbp
    b7f9:	48 89 e5             	mov    %rsp,%rbp
    b7fc:	48 83 ec 10          	sub    $0x10,%rsp
    b800:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b808:	48 89 c7             	mov    %rax,%rdi
    b80b:	e8 aa ff ff ff       	call   b7ba <_ZN2vk19TooManyObjectsErrorD1Ev>
    b810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b814:	be 28 00 00 00       	mov    $0x28,%esi
    b819:	48 89 c7             	mov    %rax,%rdi
    b81c:	e8 cf 99 ff ff       	call   51f0 <_ZdlPvm@plt>
    b821:	c9                   	leave
    b822:	c3                   	ret

000000000000b823 <_ZThn8_N2vk19TooManyObjectsErrorD0Ev>:
    b823:	48 83 ef 08          	sub    $0x8,%rdi
    b827:	eb cf                	jmp    b7f8 <_ZN2vk19TooManyObjectsErrorD0Ev>
    b829:	90                   	nop

000000000000b82a <_ZN2vk23IncompatibleDriverErrorD1Ev>:
  class IncompatibleDriverError : public SystemError
    b82a:	55                   	push   %rbp
    b82b:	48 89 e5             	mov    %rsp,%rbp
    b82e:	48 83 ec 10          	sub    $0x10,%rsp
    b832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b836:	48 8d 15 8b ce 00 00 	lea    0xce8b(%rip),%rdx        # 186c8 <_ZTVN2vk23IncompatibleDriverErrorE+0x10>
    b83d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b841:	48 89 10             	mov    %rdx,(%rax)
    b844:	48 8d 15 a5 ce 00 00 	lea    0xcea5(%rip),%rdx        # 186f0 <_ZTVN2vk23IncompatibleDriverErrorE+0x38>
    b84b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b84f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b853:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b857:	48 89 c7             	mov    %rax,%rdi
    b85a:	e8 57 c0 ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b85f:	90                   	nop
    b860:	c9                   	leave
    b861:	c3                   	ret

000000000000b862 <_ZThn8_N2vk23IncompatibleDriverErrorD1Ev>:
    b862:	48 83 ef 08          	sub    $0x8,%rdi
    b866:	eb c2                	jmp    b82a <_ZN2vk23IncompatibleDriverErrorD1Ev>

000000000000b868 <_ZN2vk23IncompatibleDriverErrorD0Ev>:
    b868:	55                   	push   %rbp
    b869:	48 89 e5             	mov    %rsp,%rbp
    b86c:	48 83 ec 10          	sub    $0x10,%rsp
    b870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b878:	48 89 c7             	mov    %rax,%rdi
    b87b:	e8 aa ff ff ff       	call   b82a <_ZN2vk23IncompatibleDriverErrorD1Ev>
    b880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b884:	be 28 00 00 00       	mov    $0x28,%esi
    b889:	48 89 c7             	mov    %rax,%rdi
    b88c:	e8 5f 99 ff ff       	call   51f0 <_ZdlPvm@plt>
    b891:	c9                   	leave
    b892:	c3                   	ret

000000000000b893 <_ZThn8_N2vk23IncompatibleDriverErrorD0Ev>:
    b893:	48 83 ef 08          	sub    $0x8,%rdi
    b897:	eb cf                	jmp    b868 <_ZN2vk23IncompatibleDriverErrorD0Ev>
    b899:	90                   	nop

000000000000b89a <_ZN2vk22FeatureNotPresentErrorD1Ev>:
  class FeatureNotPresentError : public SystemError
    b89a:	55                   	push   %rbp
    b89b:	48 89 e5             	mov    %rsp,%rbp
    b89e:	48 83 ec 10          	sub    $0x10,%rsp
    b8a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8a6:	48 8d 15 6b ce 00 00 	lea    0xce6b(%rip),%rdx        # 18718 <_ZTVN2vk22FeatureNotPresentErrorE+0x10>
    b8ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8b1:	48 89 10             	mov    %rdx,(%rax)
    b8b4:	48 8d 15 85 ce 00 00 	lea    0xce85(%rip),%rdx        # 18740 <_ZTVN2vk22FeatureNotPresentErrorE+0x38>
    b8bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8bf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b8c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8c7:	48 89 c7             	mov    %rax,%rdi
    b8ca:	e8 e7 bf ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b8cf:	90                   	nop
    b8d0:	c9                   	leave
    b8d1:	c3                   	ret

000000000000b8d2 <_ZThn8_N2vk22FeatureNotPresentErrorD1Ev>:
    b8d2:	48 83 ef 08          	sub    $0x8,%rdi
    b8d6:	eb c2                	jmp    b89a <_ZN2vk22FeatureNotPresentErrorD1Ev>

000000000000b8d8 <_ZN2vk22FeatureNotPresentErrorD0Ev>:
    b8d8:	55                   	push   %rbp
    b8d9:	48 89 e5             	mov    %rsp,%rbp
    b8dc:	48 83 ec 10          	sub    $0x10,%rsp
    b8e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8e8:	48 89 c7             	mov    %rax,%rdi
    b8eb:	e8 aa ff ff ff       	call   b89a <_ZN2vk22FeatureNotPresentErrorD1Ev>
    b8f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8f4:	be 28 00 00 00       	mov    $0x28,%esi
    b8f9:	48 89 c7             	mov    %rax,%rdi
    b8fc:	e8 ef 98 ff ff       	call   51f0 <_ZdlPvm@plt>
    b901:	c9                   	leave
    b902:	c3                   	ret

000000000000b903 <_ZThn8_N2vk22FeatureNotPresentErrorD0Ev>:
    b903:	48 83 ef 08          	sub    $0x8,%rdi
    b907:	eb cf                	jmp    b8d8 <_ZN2vk22FeatureNotPresentErrorD0Ev>
    b909:	90                   	nop

000000000000b90a <_ZN2vk24ExtensionNotPresentErrorD1Ev>:
  class ExtensionNotPresentError : public SystemError
    b90a:	55                   	push   %rbp
    b90b:	48 89 e5             	mov    %rsp,%rbp
    b90e:	48 83 ec 10          	sub    $0x10,%rsp
    b912:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b916:	48 8d 15 4b ce 00 00 	lea    0xce4b(%rip),%rdx        # 18768 <_ZTVN2vk24ExtensionNotPresentErrorE+0x10>
    b91d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b921:	48 89 10             	mov    %rdx,(%rax)
    b924:	48 8d 15 65 ce 00 00 	lea    0xce65(%rip),%rdx        # 18790 <_ZTVN2vk24ExtensionNotPresentErrorE+0x38>
    b92b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b92f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b933:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b937:	48 89 c7             	mov    %rax,%rdi
    b93a:	e8 77 bf ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b93f:	90                   	nop
    b940:	c9                   	leave
    b941:	c3                   	ret

000000000000b942 <_ZThn8_N2vk24ExtensionNotPresentErrorD1Ev>:
    b942:	48 83 ef 08          	sub    $0x8,%rdi
    b946:	eb c2                	jmp    b90a <_ZN2vk24ExtensionNotPresentErrorD1Ev>

000000000000b948 <_ZN2vk24ExtensionNotPresentErrorD0Ev>:
    b948:	55                   	push   %rbp
    b949:	48 89 e5             	mov    %rsp,%rbp
    b94c:	48 83 ec 10          	sub    $0x10,%rsp
    b950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b958:	48 89 c7             	mov    %rax,%rdi
    b95b:	e8 aa ff ff ff       	call   b90a <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    b960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b964:	be 28 00 00 00       	mov    $0x28,%esi
    b969:	48 89 c7             	mov    %rax,%rdi
    b96c:	e8 7f 98 ff ff       	call   51f0 <_ZdlPvm@plt>
    b971:	c9                   	leave
    b972:	c3                   	ret

000000000000b973 <_ZThn8_N2vk24ExtensionNotPresentErrorD0Ev>:
    b973:	48 83 ef 08          	sub    $0x8,%rdi
    b977:	eb cf                	jmp    b948 <_ZN2vk24ExtensionNotPresentErrorD0Ev>
    b979:	90                   	nop

000000000000b97a <_ZN2vk20LayerNotPresentErrorD1Ev>:
  class LayerNotPresentError : public SystemError
    b97a:	55                   	push   %rbp
    b97b:	48 89 e5             	mov    %rsp,%rbp
    b97e:	48 83 ec 10          	sub    $0x10,%rsp
    b982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b986:	48 8d 15 2b ce 00 00 	lea    0xce2b(%rip),%rdx        # 187b8 <_ZTVN2vk20LayerNotPresentErrorE+0x10>
    b98d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b991:	48 89 10             	mov    %rdx,(%rax)
    b994:	48 8d 15 45 ce 00 00 	lea    0xce45(%rip),%rdx        # 187e0 <_ZTVN2vk20LayerNotPresentErrorE+0x38>
    b99b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b99f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9a7:	48 89 c7             	mov    %rax,%rdi
    b9aa:	e8 07 bf ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    b9af:	90                   	nop
    b9b0:	c9                   	leave
    b9b1:	c3                   	ret

000000000000b9b2 <_ZThn8_N2vk20LayerNotPresentErrorD1Ev>:
    b9b2:	48 83 ef 08          	sub    $0x8,%rdi
    b9b6:	eb c2                	jmp    b97a <_ZN2vk20LayerNotPresentErrorD1Ev>

000000000000b9b8 <_ZN2vk20LayerNotPresentErrorD0Ev>:
    b9b8:	55                   	push   %rbp
    b9b9:	48 89 e5             	mov    %rsp,%rbp
    b9bc:	48 83 ec 10          	sub    $0x10,%rsp
    b9c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9c8:	48 89 c7             	mov    %rax,%rdi
    b9cb:	e8 aa ff ff ff       	call   b97a <_ZN2vk20LayerNotPresentErrorD1Ev>
    b9d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9d4:	be 28 00 00 00       	mov    $0x28,%esi
    b9d9:	48 89 c7             	mov    %rax,%rdi
    b9dc:	e8 0f 98 ff ff       	call   51f0 <_ZdlPvm@plt>
    b9e1:	c9                   	leave
    b9e2:	c3                   	ret

000000000000b9e3 <_ZThn8_N2vk20LayerNotPresentErrorD0Ev>:
    b9e3:	48 83 ef 08          	sub    $0x8,%rdi
    b9e7:	eb cf                	jmp    b9b8 <_ZN2vk20LayerNotPresentErrorD0Ev>
    b9e9:	90                   	nop

000000000000b9ea <_ZN2vk20MemoryMapFailedErrorD1Ev>:
  class MemoryMapFailedError : public SystemError
    b9ea:	55                   	push   %rbp
    b9eb:	48 89 e5             	mov    %rsp,%rbp
    b9ee:	48 83 ec 10          	sub    $0x10,%rsp
    b9f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9f6:	48 8d 15 0b ce 00 00 	lea    0xce0b(%rip),%rdx        # 18808 <_ZTVN2vk20MemoryMapFailedErrorE+0x10>
    b9fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba01:	48 89 10             	mov    %rdx,(%rax)
    ba04:	48 8d 15 25 ce 00 00 	lea    0xce25(%rip),%rdx        # 18830 <_ZTVN2vk20MemoryMapFailedErrorE+0x38>
    ba0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba0f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ba13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba17:	48 89 c7             	mov    %rax,%rdi
    ba1a:	e8 97 be ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    ba1f:	90                   	nop
    ba20:	c9                   	leave
    ba21:	c3                   	ret

000000000000ba22 <_ZThn8_N2vk20MemoryMapFailedErrorD1Ev>:
    ba22:	48 83 ef 08          	sub    $0x8,%rdi
    ba26:	eb c2                	jmp    b9ea <_ZN2vk20MemoryMapFailedErrorD1Ev>

000000000000ba28 <_ZN2vk20MemoryMapFailedErrorD0Ev>:
    ba28:	55                   	push   %rbp
    ba29:	48 89 e5             	mov    %rsp,%rbp
    ba2c:	48 83 ec 10          	sub    $0x10,%rsp
    ba30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba38:	48 89 c7             	mov    %rax,%rdi
    ba3b:	e8 aa ff ff ff       	call   b9ea <_ZN2vk20MemoryMapFailedErrorD1Ev>
    ba40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba44:	be 28 00 00 00       	mov    $0x28,%esi
    ba49:	48 89 c7             	mov    %rax,%rdi
    ba4c:	e8 9f 97 ff ff       	call   51f0 <_ZdlPvm@plt>
    ba51:	c9                   	leave
    ba52:	c3                   	ret

000000000000ba53 <_ZThn8_N2vk20MemoryMapFailedErrorD0Ev>:
    ba53:	48 83 ef 08          	sub    $0x8,%rdi
    ba57:	eb cf                	jmp    ba28 <_ZN2vk20MemoryMapFailedErrorD0Ev>
    ba59:	90                   	nop

000000000000ba5a <_ZN2vk15DeviceLostErrorD1Ev>:
  class DeviceLostError : public SystemError
    ba5a:	55                   	push   %rbp
    ba5b:	48 89 e5             	mov    %rsp,%rbp
    ba5e:	48 83 ec 10          	sub    $0x10,%rsp
    ba62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba66:	48 8d 15 eb cd 00 00 	lea    0xcdeb(%rip),%rdx        # 18858 <_ZTVN2vk15DeviceLostErrorE+0x10>
    ba6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba71:	48 89 10             	mov    %rdx,(%rax)
    ba74:	48 8d 15 05 ce 00 00 	lea    0xce05(%rip),%rdx        # 18880 <_ZTVN2vk15DeviceLostErrorE+0x38>
    ba7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba7f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ba83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba87:	48 89 c7             	mov    %rax,%rdi
    ba8a:	e8 27 be ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    ba8f:	90                   	nop
    ba90:	c9                   	leave
    ba91:	c3                   	ret

000000000000ba92 <_ZThn8_N2vk15DeviceLostErrorD1Ev>:
    ba92:	48 83 ef 08          	sub    $0x8,%rdi
    ba96:	eb c2                	jmp    ba5a <_ZN2vk15DeviceLostErrorD1Ev>

000000000000ba98 <_ZN2vk15DeviceLostErrorD0Ev>:
    ba98:	55                   	push   %rbp
    ba99:	48 89 e5             	mov    %rsp,%rbp
    ba9c:	48 83 ec 10          	sub    $0x10,%rsp
    baa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa8:	48 89 c7             	mov    %rax,%rdi
    baab:	e8 aa ff ff ff       	call   ba5a <_ZN2vk15DeviceLostErrorD1Ev>
    bab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bab4:	be 28 00 00 00       	mov    $0x28,%esi
    bab9:	48 89 c7             	mov    %rax,%rdi
    babc:	e8 2f 97 ff ff       	call   51f0 <_ZdlPvm@plt>
    bac1:	c9                   	leave
    bac2:	c3                   	ret

000000000000bac3 <_ZThn8_N2vk15DeviceLostErrorD0Ev>:
    bac3:	48 83 ef 08          	sub    $0x8,%rdi
    bac7:	eb cf                	jmp    ba98 <_ZN2vk15DeviceLostErrorD0Ev>
    bac9:	90                   	nop

000000000000baca <_ZN2vk25InitializationFailedErrorD1Ev>:
  class InitializationFailedError : public SystemError
    baca:	55                   	push   %rbp
    bacb:	48 89 e5             	mov    %rsp,%rbp
    bace:	48 83 ec 10          	sub    $0x10,%rsp
    bad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bad6:	48 8d 15 cb cd 00 00 	lea    0xcdcb(%rip),%rdx        # 188a8 <_ZTVN2vk25InitializationFailedErrorE+0x10>
    badd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bae1:	48 89 10             	mov    %rdx,(%rax)
    bae4:	48 8d 15 e5 cd 00 00 	lea    0xcde5(%rip),%rdx        # 188d0 <_ZTVN2vk25InitializationFailedErrorE+0x38>
    baeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baef:	48 89 50 08          	mov    %rdx,0x8(%rax)
    baf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baf7:	48 89 c7             	mov    %rax,%rdi
    bafa:	e8 b7 bd ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    baff:	90                   	nop
    bb00:	c9                   	leave
    bb01:	c3                   	ret

000000000000bb02 <_ZThn8_N2vk25InitializationFailedErrorD1Ev>:
    bb02:	48 83 ef 08          	sub    $0x8,%rdi
    bb06:	eb c2                	jmp    baca <_ZN2vk25InitializationFailedErrorD1Ev>

000000000000bb08 <_ZN2vk25InitializationFailedErrorD0Ev>:
    bb08:	55                   	push   %rbp
    bb09:	48 89 e5             	mov    %rsp,%rbp
    bb0c:	48 83 ec 10          	sub    $0x10,%rsp
    bb10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb18:	48 89 c7             	mov    %rax,%rdi
    bb1b:	e8 aa ff ff ff       	call   baca <_ZN2vk25InitializationFailedErrorD1Ev>
    bb20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb24:	be 28 00 00 00       	mov    $0x28,%esi
    bb29:	48 89 c7             	mov    %rax,%rdi
    bb2c:	e8 bf 96 ff ff       	call   51f0 <_ZdlPvm@plt>
    bb31:	c9                   	leave
    bb32:	c3                   	ret

000000000000bb33 <_ZThn8_N2vk25InitializationFailedErrorD0Ev>:
    bb33:	48 83 ef 08          	sub    $0x8,%rdi
    bb37:	eb cf                	jmp    bb08 <_ZN2vk25InitializationFailedErrorD0Ev>
    bb39:	90                   	nop

000000000000bb3a <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>:
  class OutOfDeviceMemoryError : public SystemError
    bb3a:	55                   	push   %rbp
    bb3b:	48 89 e5             	mov    %rsp,%rbp
    bb3e:	48 83 ec 10          	sub    $0x10,%rsp
    bb42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb46:	48 8d 15 ab cd 00 00 	lea    0xcdab(%rip),%rdx        # 188f8 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x10>
    bb4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb51:	48 89 10             	mov    %rdx,(%rax)
    bb54:	48 8d 15 c5 cd 00 00 	lea    0xcdc5(%rip),%rdx        # 18920 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x38>
    bb5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb5f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    bb63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb67:	48 89 c7             	mov    %rax,%rdi
    bb6a:	e8 47 bd ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    bb6f:	90                   	nop
    bb70:	c9                   	leave
    bb71:	c3                   	ret

000000000000bb72 <_ZThn8_N2vk22OutOfDeviceMemoryErrorD1Ev>:
    bb72:	48 83 ef 08          	sub    $0x8,%rdi
    bb76:	eb c2                	jmp    bb3a <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>

000000000000bb78 <_ZN2vk22OutOfDeviceMemoryErrorD0Ev>:
    bb78:	55                   	push   %rbp
    bb79:	48 89 e5             	mov    %rsp,%rbp
    bb7c:	48 83 ec 10          	sub    $0x10,%rsp
    bb80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb88:	48 89 c7             	mov    %rax,%rdi
    bb8b:	e8 aa ff ff ff       	call   bb3a <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    bb90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb94:	be 28 00 00 00       	mov    $0x28,%esi
    bb99:	48 89 c7             	mov    %rax,%rdi
    bb9c:	e8 4f 96 ff ff       	call   51f0 <_ZdlPvm@plt>
    bba1:	c9                   	leave
    bba2:	c3                   	ret

000000000000bba3 <_ZThn8_N2vk22OutOfDeviceMemoryErrorD0Ev>:
    bba3:	48 83 ef 08          	sub    $0x8,%rdi
    bba7:	eb cf                	jmp    bb78 <_ZN2vk22OutOfDeviceMemoryErrorD0Ev>
    bba9:	90                   	nop

000000000000bbaa <_ZN2vk20OutOfHostMemoryErrorD1Ev>:
  class OutOfHostMemoryError : public SystemError
    bbaa:	55                   	push   %rbp
    bbab:	48 89 e5             	mov    %rsp,%rbp
    bbae:	48 83 ec 10          	sub    $0x10,%rsp
    bbb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbb6:	48 8d 15 8b cd 00 00 	lea    0xcd8b(%rip),%rdx        # 18948 <_ZTVN2vk20OutOfHostMemoryErrorE+0x10>
    bbbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc1:	48 89 10             	mov    %rdx,(%rax)
    bbc4:	48 8d 15 a5 cd 00 00 	lea    0xcda5(%rip),%rdx        # 18970 <_ZTVN2vk20OutOfHostMemoryErrorE+0x38>
    bbcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbcf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    bbd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbd7:	48 89 c7             	mov    %rax,%rdi
    bbda:	e8 d7 bc ff ff       	call   78b6 <_ZN2vk11SystemErrorD1Ev>
    bbdf:	90                   	nop
    bbe0:	c9                   	leave
    bbe1:	c3                   	ret

000000000000bbe2 <_ZThn8_N2vk20OutOfHostMemoryErrorD1Ev>:
    bbe2:	48 83 ef 08          	sub    $0x8,%rdi
    bbe6:	eb c2                	jmp    bbaa <_ZN2vk20OutOfHostMemoryErrorD1Ev>

000000000000bbe8 <_ZN2vk20OutOfHostMemoryErrorD0Ev>:
    bbe8:	55                   	push   %rbp
    bbe9:	48 89 e5             	mov    %rsp,%rbp
    bbec:	48 83 ec 10          	sub    $0x10,%rsp
    bbf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf8:	48 89 c7             	mov    %rax,%rdi
    bbfb:	e8 aa ff ff ff       	call   bbaa <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    bc00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc04:	be 28 00 00 00       	mov    $0x28,%esi
    bc09:	48 89 c7             	mov    %rax,%rdi
    bc0c:	e8 df 95 ff ff       	call   51f0 <_ZdlPvm@plt>
    bc11:	c9                   	leave
    bc12:	c3                   	ret

000000000000bc13 <_ZThn8_N2vk20OutOfHostMemoryErrorD0Ev>:
    bc13:	48 83 ef 08          	sub    $0x8,%rdi
    bc17:	eb cf                	jmp    bbe8 <_ZN2vk20OutOfHostMemoryErrorD0Ev>
    bc19:	90                   	nop

000000000000bc1a <_ZN2vk17ErrorCategoryImplD1Ev>:
  class ErrorCategoryImpl : public std::error_category
    bc1a:	55                   	push   %rbp
    bc1b:	48 89 e5             	mov    %rsp,%rbp
    bc1e:	48 83 ec 10          	sub    $0x10,%rsp
    bc22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc26:	48 8d 15 43 ce 00 00 	lea    0xce43(%rip),%rdx        # 18a70 <_ZTVN2vk17ErrorCategoryImplE+0x10>
    bc2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc31:	48 89 10             	mov    %rdx,(%rax)
    bc34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc38:	48 89 c7             	mov    %rax,%rdi
    bc3b:	e8 d0 96 ff ff       	call   5310 <_ZNSt3_V214error_categoryD2Ev@plt>
    bc40:	90                   	nop
    bc41:	c9                   	leave
    bc42:	c3                   	ret
    bc43:	90                   	nop

000000000000bc44 <_ZN2vk17ErrorCategoryImplD0Ev>:
    bc44:	55                   	push   %rbp
    bc45:	48 89 e5             	mov    %rsp,%rbp
    bc48:	48 83 ec 10          	sub    $0x10,%rsp
    bc4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc54:	48 89 c7             	mov    %rax,%rdi
    bc57:	e8 be ff ff ff       	call   bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    bc5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc60:	be 08 00 00 00       	mov    $0x8,%esi
    bc65:	48 89 c7             	mov    %rax,%rdi
    bc68:	e8 83 95 ff ff       	call   51f0 <_ZdlPvm@plt>
    bc6d:	c9                   	leave
    bc6e:	c3                   	ret

000000000000bc6f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
    {
    bc6f:	55                   	push   %rbp
    bc70:	48 89 e5             	mov    %rsp,%rbp
    bc73:	41 54                	push   %r12
    bc75:	53                   	push   %rbx
    bc76:	48 83 ec 30          	sub    $0x30,%rsp
    bc7a:	89 7d cc             	mov    %edi,-0x34(%rbp)
    bc7d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    bc81:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    bc85:	0f 89 28 07 00 00    	jns    c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bc8b:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    bc8f:	0f 8d 3d 01 00 00    	jge    bdd2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    bc95:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    bc9c:	0f 84 19 05 00 00    	je     c1bb <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    bca2:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    bca9:	0f 8f 04 07 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bcaf:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    bcb6:	0f 84 37 05 00 00    	je     c1f3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    bcbc:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    bcc3:	0f 8f ea 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bcc9:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    bcd0:	0f 84 55 05 00 00    	je     c22b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    bcd6:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    bcdd:	0f 8f d0 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bce3:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    bcea:	0f 84 73 05 00 00    	je     c263 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    bcf0:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    bcf7:	0f 8f b6 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bcfd:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    bd04:	0f 84 91 05 00 00    	je     c29b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    bd0a:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    bd11:	0f 8f 9c 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bd17:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    bd1e:	0f 84 af 05 00 00    	je     c2d3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    bd24:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    bd2b:	0f 8f 82 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bd31:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    bd38:	0f 84 9d 03 00 00    	je     c0db <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    bd3e:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    bd45:	0f 8f 68 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bd4b:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    bd52:	0f 84 bb 03 00 00    	je     c113 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    bd58:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    bd5f:	0f 8f 4e 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bd65:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    bd6c:	0f 84 99 05 00 00    	je     c30b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    bd72:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    bd79:	0f 8f 34 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bd7f:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    bd86:	0f 84 bf 03 00 00    	je     c14b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    bd8c:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    bd93:	0f 8f 1a 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bd99:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    bda0:	0f 84 9d 05 00 00    	je     c343 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    bda6:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    bdad:	0f 8f 00 06 00 00    	jg     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bdb3:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    bdba:	0f 84 bb 05 00 00    	je     c37b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    bdc0:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    bdc7:	0f 84 b6 03 00 00    	je     c183 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    bdcd:	e9 e1 05 00 00       	jmp    c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bdd2:	8b 45 cc             	mov    -0x34(%rbp),%eax
    bdd5:	83 c0 0d             	add    $0xd,%eax
    bdd8:	83 f8 0c             	cmp    $0xc,%eax
    bddb:	0f 87 d2 05 00 00    	ja     c3b3 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bde1:	89 c0                	mov    %eax,%eax
    bde3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    bdea:	00 
    bdeb:	48 8d 05 c6 5d 00 00 	lea    0x5dc6(%rip),%rax        # 11bb8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    bdf2:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    bdf5:	48 98                	cltq
    bdf7:	48 8d 15 ba 5d 00 00 	lea    0x5dba(%rip),%rdx        # 11bb8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    bdfe:	48 01 d0             	add    %rdx,%rax
    be01:	ff e0                	jmp    *%rax
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    be03:	bf 28 00 00 00       	mov    $0x28,%edi
    be08:	e8 a3 92 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    be0d:	48 89 c3             	mov    %rax,%rbx
    be10:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    be14:	48 89 c6             	mov    %rax,%rsi
    be17:	48 89 df             	mov    %rbx,%rdi
    be1a:	e8 17 bb ff ff       	call   7936 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    be1f:	48 8d 05 84 fd ff ff 	lea    -0x27c(%rip),%rax        # bbaa <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    be26:	48 89 c2             	mov    %rax,%rdx
    be29:	48 8d 05 d8 ce 00 00 	lea    0xced8(%rip),%rax        # 18d08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    be30:	48 89 c6             	mov    %rax,%rsi
    be33:	48 89 df             	mov    %rbx,%rdi
    be36:	e8 c5 94 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    be3b:	bf 28 00 00 00       	mov    $0x28,%edi
    be40:	e8 6b 92 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    be45:	48 89 c3             	mov    %rax,%rbx
    be48:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    be4c:	48 89 c6             	mov    %rax,%rsi
    be4f:	48 89 df             	mov    %rbx,%rdi
    be52:	e8 b1 bb ff ff       	call   7a08 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    be57:	48 8d 05 dc fc ff ff 	lea    -0x324(%rip),%rax        # bb3a <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    be5e:	48 89 c2             	mov    %rax,%rdx
    be61:	48 8d 05 88 ce 00 00 	lea    0xce88(%rip),%rax        # 18cf0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    be68:	48 89 c6             	mov    %rax,%rsi
    be6b:	48 89 df             	mov    %rbx,%rdi
    be6e:	e8 8d 94 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    be73:	bf 28 00 00 00       	mov    $0x28,%edi
    be78:	e8 33 92 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    be7d:	48 89 c3             	mov    %rax,%rbx
    be80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    be84:	48 89 c6             	mov    %rax,%rsi
    be87:	48 89 df             	mov    %rbx,%rdi
    be8a:	e8 4b bc ff ff       	call   7ada <_ZN2vk25InitializationFailedErrorC1EPKc>
    be8f:	48 8d 05 34 fc ff ff 	lea    -0x3cc(%rip),%rax        # baca <_ZN2vk25InitializationFailedErrorD1Ev>
    be96:	48 89 c2             	mov    %rax,%rdx
    be99:	48 8d 05 38 ce 00 00 	lea    0xce38(%rip),%rax        # 18cd8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bea0:	48 89 c6             	mov    %rax,%rsi
    bea3:	48 89 df             	mov    %rbx,%rdi
    bea6:	e8 55 94 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    beab:	bf 28 00 00 00       	mov    $0x28,%edi
    beb0:	e8 fb 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    beb5:	48 89 c3             	mov    %rax,%rbx
    beb8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bebc:	48 89 c6             	mov    %rax,%rsi
    bebf:	48 89 df             	mov    %rbx,%rdi
    bec2:	e8 e5 bc ff ff       	call   7bac <_ZN2vk15DeviceLostErrorC1EPKc>
    bec7:	48 8d 05 8c fb ff ff 	lea    -0x474(%rip),%rax        # ba5a <_ZN2vk15DeviceLostErrorD1Ev>
    bece:	48 89 c2             	mov    %rax,%rdx
    bed1:	48 8d 05 e8 cd 00 00 	lea    0xcde8(%rip),%rax        # 18cc0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bed8:	48 89 c6             	mov    %rax,%rsi
    bedb:	48 89 df             	mov    %rbx,%rdi
    bede:	e8 1d 94 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    bee3:	bf 28 00 00 00       	mov    $0x28,%edi
    bee8:	e8 c3 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    beed:	48 89 c3             	mov    %rax,%rbx
    bef0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bef4:	48 89 c6             	mov    %rax,%rsi
    bef7:	48 89 df             	mov    %rbx,%rdi
    befa:	e8 7f bd ff ff       	call   7c7e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    beff:	48 8d 05 e4 fa ff ff 	lea    -0x51c(%rip),%rax        # b9ea <_ZN2vk20MemoryMapFailedErrorD1Ev>
    bf06:	48 89 c2             	mov    %rax,%rdx
    bf09:	48 8d 05 98 cd 00 00 	lea    0xcd98(%rip),%rax        # 18ca8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bf10:	48 89 c6             	mov    %rax,%rsi
    bf13:	48 89 df             	mov    %rbx,%rdi
    bf16:	e8 e5 93 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    bf1b:	bf 28 00 00 00       	mov    $0x28,%edi
    bf20:	e8 8b 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bf25:	48 89 c3             	mov    %rax,%rbx
    bf28:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bf2c:	48 89 c6             	mov    %rax,%rsi
    bf2f:	48 89 df             	mov    %rbx,%rdi
    bf32:	e8 19 be ff ff       	call   7d50 <_ZN2vk20LayerNotPresentErrorC1EPKc>
    bf37:	48 8d 05 3c fa ff ff 	lea    -0x5c4(%rip),%rax        # b97a <_ZN2vk20LayerNotPresentErrorD1Ev>
    bf3e:	48 89 c2             	mov    %rax,%rdx
    bf41:	48 8d 05 48 cd 00 00 	lea    0xcd48(%rip),%rax        # 18c90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bf48:	48 89 c6             	mov    %rax,%rsi
    bf4b:	48 89 df             	mov    %rbx,%rdi
    bf4e:	e8 ad 93 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    bf53:	bf 28 00 00 00       	mov    $0x28,%edi
    bf58:	e8 53 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bf5d:	48 89 c3             	mov    %rax,%rbx
    bf60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bf64:	48 89 c6             	mov    %rax,%rsi
    bf67:	48 89 df             	mov    %rbx,%rdi
    bf6a:	e8 b3 be ff ff       	call   7e22 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    bf6f:	48 8d 05 94 f9 ff ff 	lea    -0x66c(%rip),%rax        # b90a <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    bf76:	48 89 c2             	mov    %rax,%rdx
    bf79:	48 8d 05 f8 cc 00 00 	lea    0xccf8(%rip),%rax        # 18c78 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bf80:	48 89 c6             	mov    %rax,%rsi
    bf83:	48 89 df             	mov    %rbx,%rdi
    bf86:	e8 75 93 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    bf8b:	bf 28 00 00 00       	mov    $0x28,%edi
    bf90:	e8 1b 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bf95:	48 89 c3             	mov    %rax,%rbx
    bf98:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bf9c:	48 89 c6             	mov    %rax,%rsi
    bf9f:	48 89 df             	mov    %rbx,%rdi
    bfa2:	e8 4d bf ff ff       	call   7ef4 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    bfa7:	48 8d 05 ec f8 ff ff 	lea    -0x714(%rip),%rax        # b89a <_ZN2vk22FeatureNotPresentErrorD1Ev>
    bfae:	48 89 c2             	mov    %rax,%rdx
    bfb1:	48 8d 05 a8 cc 00 00 	lea    0xcca8(%rip),%rax        # 18c60 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bfb8:	48 89 c6             	mov    %rax,%rsi
    bfbb:	48 89 df             	mov    %rbx,%rdi
    bfbe:	e8 3d 93 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    bfc3:	bf 28 00 00 00       	mov    $0x28,%edi
    bfc8:	e8 e3 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bfcd:	48 89 c3             	mov    %rax,%rbx
    bfd0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bfd4:	48 89 c6             	mov    %rax,%rsi
    bfd7:	48 89 df             	mov    %rbx,%rdi
    bfda:	e8 e7 bf ff ff       	call   7fc6 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    bfdf:	48 8d 05 44 f8 ff ff 	lea    -0x7bc(%rip),%rax        # b82a <_ZN2vk23IncompatibleDriverErrorD1Ev>
    bfe6:	48 89 c2             	mov    %rax,%rdx
    bfe9:	48 8d 05 58 cc 00 00 	lea    0xcc58(%rip),%rax        # 18c48 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bff0:	48 89 c6             	mov    %rax,%rsi
    bff3:	48 89 df             	mov    %rbx,%rdi
    bff6:	e8 05 93 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    bffb:	bf 28 00 00 00       	mov    $0x28,%edi
    c000:	e8 ab 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c005:	48 89 c3             	mov    %rax,%rbx
    c008:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c00c:	48 89 c6             	mov    %rax,%rsi
    c00f:	48 89 df             	mov    %rbx,%rdi
    c012:	e8 81 c0 ff ff       	call   8098 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    c017:	48 8d 05 9c f7 ff ff 	lea    -0x864(%rip),%rax        # b7ba <_ZN2vk19TooManyObjectsErrorD1Ev>
    c01e:	48 89 c2             	mov    %rax,%rdx
    c021:	48 8d 05 08 cc 00 00 	lea    0xcc08(%rip),%rax        # 18c30 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c028:	48 89 c6             	mov    %rax,%rsi
    c02b:	48 89 df             	mov    %rbx,%rdi
    c02e:	e8 cd 92 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    c033:	bf 28 00 00 00       	mov    $0x28,%edi
    c038:	e8 73 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c03d:	48 89 c3             	mov    %rax,%rbx
    c040:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c044:	48 89 c6             	mov    %rax,%rsi
    c047:	48 89 df             	mov    %rbx,%rdi
    c04a:	e8 1b c1 ff ff       	call   816a <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    c04f:	48 8d 05 f4 f6 ff ff 	lea    -0x90c(%rip),%rax        # b74a <_ZN2vk23FormatNotSupportedErrorD1Ev>
    c056:	48 89 c2             	mov    %rax,%rdx
    c059:	48 8d 05 b8 cb 00 00 	lea    0xcbb8(%rip),%rax        # 18c18 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c060:	48 89 c6             	mov    %rax,%rsi
    c063:	48 89 df             	mov    %rbx,%rdi
    c066:	e8 95 92 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    c06b:	bf 28 00 00 00       	mov    $0x28,%edi
    c070:	e8 3b 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c075:	48 89 c3             	mov    %rax,%rbx
    c078:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c07c:	48 89 c6             	mov    %rax,%rsi
    c07f:	48 89 df             	mov    %rbx,%rdi
    c082:	e8 b5 c1 ff ff       	call   823c <_ZN2vk19FragmentedPoolErrorC1EPKc>
    c087:	48 8d 05 4c f6 ff ff 	lea    -0x9b4(%rip),%rax        # b6da <_ZN2vk19FragmentedPoolErrorD1Ev>
    c08e:	48 89 c2             	mov    %rax,%rdx
    c091:	48 8d 05 68 cb 00 00 	lea    0xcb68(%rip),%rax        # 18c00 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c098:	48 89 c6             	mov    %rax,%rsi
    c09b:	48 89 df             	mov    %rbx,%rdi
    c09e:	e8 5d 92 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    c0a3:	bf 28 00 00 00       	mov    $0x28,%edi
    c0a8:	e8 03 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c0ad:	48 89 c3             	mov    %rax,%rbx
    c0b0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c0b4:	48 89 c6             	mov    %rax,%rsi
    c0b7:	48 89 df             	mov    %rbx,%rdi
    c0ba:	e8 4f c2 ff ff       	call   830e <_ZN2vk12UnknownErrorC1EPKc>
    c0bf:	48 8d 05 a4 f5 ff ff 	lea    -0xa5c(%rip),%rax        # b66a <_ZN2vk12UnknownErrorD1Ev>
    c0c6:	48 89 c2             	mov    %rax,%rdx
    c0c9:	48 8d 05 18 cb 00 00 	lea    0xcb18(%rip),%rax        # 18be8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c0d0:	48 89 c6             	mov    %rax,%rsi
    c0d3:	48 89 df             	mov    %rbx,%rdi
    c0d6:	e8 25 92 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    c0db:	bf 28 00 00 00       	mov    $0x28,%edi
    c0e0:	e8 cb 8f ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c0e5:	48 89 c3             	mov    %rax,%rbx
    c0e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c0ec:	48 89 c6             	mov    %rax,%rsi
    c0ef:	48 89 df             	mov    %rbx,%rdi
    c0f2:	e8 e9 c2 ff ff       	call   83e0 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    c0f7:	48 8d 05 fc f4 ff ff 	lea    -0xb04(%rip),%rax        # b5fa <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    c0fe:	48 89 c2             	mov    %rax,%rdx
    c101:	48 8d 05 c8 ca 00 00 	lea    0xcac8(%rip),%rax        # 18bd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c108:	48 89 c6             	mov    %rax,%rsi
    c10b:	48 89 df             	mov    %rbx,%rdi
    c10e:	e8 ed 91 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    c113:	bf 28 00 00 00       	mov    $0x28,%edi
    c118:	e8 93 8f ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c11d:	48 89 c3             	mov    %rax,%rbx
    c120:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c124:	48 89 c6             	mov    %rax,%rsi
    c127:	48 89 df             	mov    %rbx,%rdi
    c12a:	e8 83 c3 ff ff       	call   84b2 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    c12f:	48 8d 05 54 f4 ff ff 	lea    -0xbac(%rip),%rax        # b58a <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    c136:	48 89 c2             	mov    %rax,%rdx
    c139:	48 8d 05 78 ca 00 00 	lea    0xca78(%rip),%rax        # 18bb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c140:	48 89 c6             	mov    %rax,%rsi
    c143:	48 89 df             	mov    %rbx,%rdi
    c146:	e8 b5 91 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    c14b:	bf 28 00 00 00       	mov    $0x28,%edi
    c150:	e8 5b 8f ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c155:	48 89 c3             	mov    %rax,%rbx
    c158:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c15c:	48 89 c6             	mov    %rax,%rsi
    c15f:	48 89 df             	mov    %rbx,%rdi
    c162:	e8 1d c4 ff ff       	call   8584 <_ZN2vk18FragmentationErrorC1EPKc>
    c167:	48 8d 05 ac f3 ff ff 	lea    -0xc54(%rip),%rax        # b51a <_ZN2vk18FragmentationErrorD1Ev>
    c16e:	48 89 c2             	mov    %rax,%rdx
    c171:	48 8d 05 28 ca 00 00 	lea    0xca28(%rip),%rax        # 18ba0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c178:	48 89 c6             	mov    %rax,%rsi
    c17b:	48 89 df             	mov    %rbx,%rdi
    c17e:	e8 7d 91 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    c183:	bf 28 00 00 00       	mov    $0x28,%edi
    c188:	e8 23 8f ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c18d:	48 89 c3             	mov    %rax,%rbx
    c190:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c194:	48 89 c6             	mov    %rax,%rsi
    c197:	48 89 df             	mov    %rbx,%rdi
    c19a:	e8 b7 c4 ff ff       	call   8656 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    c19f:	48 8d 05 04 f3 ff ff 	lea    -0xcfc(%rip),%rax        # b4aa <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    c1a6:	48 89 c2             	mov    %rax,%rdx
    c1a9:	48 8d 05 d8 c9 00 00 	lea    0xc9d8(%rip),%rax        # 18b88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c1b0:	48 89 c6             	mov    %rax,%rsi
    c1b3:	48 89 df             	mov    %rbx,%rdi
    c1b6:	e8 45 91 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    c1bb:	bf 28 00 00 00       	mov    $0x28,%edi
    c1c0:	e8 eb 8e ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c1c5:	48 89 c3             	mov    %rax,%rbx
    c1c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c1cc:	48 89 c6             	mov    %rax,%rsi
    c1cf:	48 89 df             	mov    %rbx,%rdi
    c1d2:	e8 51 c5 ff ff       	call   8728 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    c1d7:	48 8d 05 5c f2 ff ff 	lea    -0xda4(%rip),%rax        # b43a <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    c1de:	48 89 c2             	mov    %rax,%rdx
    c1e1:	48 8d 05 88 c9 00 00 	lea    0xc988(%rip),%rax        # 18b70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c1e8:	48 89 c6             	mov    %rax,%rsi
    c1eb:	48 89 df             	mov    %rbx,%rdi
    c1ee:	e8 0d 91 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    c1f3:	bf 28 00 00 00       	mov    $0x28,%edi
    c1f8:	e8 b3 8e ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c1fd:	48 89 c3             	mov    %rax,%rbx
    c200:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c204:	48 89 c6             	mov    %rax,%rsi
    c207:	48 89 df             	mov    %rbx,%rdi
    c20a:	e8 eb c5 ff ff       	call   87fa <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    c20f:	48 8d 05 b4 f1 ff ff 	lea    -0xe4c(%rip),%rax        # b3ca <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    c216:	48 89 c2             	mov    %rax,%rdx
    c219:	48 8d 05 38 c9 00 00 	lea    0xc938(%rip),%rax        # 18b58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c220:	48 89 c6             	mov    %rax,%rsi
    c223:	48 89 df             	mov    %rbx,%rdi
    c226:	e8 d5 90 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    c22b:	bf 28 00 00 00       	mov    $0x28,%edi
    c230:	e8 7b 8e ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c235:	48 89 c3             	mov    %rax,%rbx
    c238:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c23c:	48 89 c6             	mov    %rax,%rsi
    c23f:	48 89 df             	mov    %rbx,%rdi
    c242:	e8 85 c6 ff ff       	call   88cc <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    c247:	48 8d 05 0c f1 ff ff 	lea    -0xef4(%rip),%rax        # b35a <_ZN2vk17OutOfDateKHRErrorD1Ev>
    c24e:	48 89 c2             	mov    %rax,%rdx
    c251:	48 8d 05 e8 c8 00 00 	lea    0xc8e8(%rip),%rax        # 18b40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c258:	48 89 c6             	mov    %rax,%rsi
    c25b:	48 89 df             	mov    %rbx,%rdi
    c25e:	e8 9d 90 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    c263:	bf 28 00 00 00       	mov    $0x28,%edi
    c268:	e8 43 8e ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c26d:	48 89 c3             	mov    %rax,%rbx
    c270:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c274:	48 89 c6             	mov    %rax,%rsi
    c277:	48 89 df             	mov    %rbx,%rdi
    c27a:	e8 1f c7 ff ff       	call   899e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    c27f:	48 8d 05 64 f0 ff ff 	lea    -0xf9c(%rip),%rax        # b2ea <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    c286:	48 89 c2             	mov    %rax,%rdx
    c289:	48 8d 05 98 c8 00 00 	lea    0xc898(%rip),%rax        # 18b28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c290:	48 89 c6             	mov    %rax,%rsi
    c293:	48 89 df             	mov    %rbx,%rdi
    c296:	e8 65 90 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    c29b:	bf 28 00 00 00       	mov    $0x28,%edi
    c2a0:	e8 0b 8e ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c2a5:	48 89 c3             	mov    %rax,%rbx
    c2a8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c2ac:	48 89 c6             	mov    %rax,%rsi
    c2af:	48 89 df             	mov    %rbx,%rdi
    c2b2:	e8 b9 c7 ff ff       	call   8a70 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    c2b7:	48 8d 05 bc ef ff ff 	lea    -0x1044(%rip),%rax        # b27a <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    c2be:	48 89 c2             	mov    %rax,%rdx
    c2c1:	48 8d 05 48 c8 00 00 	lea    0xc848(%rip),%rax        # 18b10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c2c8:	48 89 c6             	mov    %rax,%rsi
    c2cb:	48 89 df             	mov    %rbx,%rdi
    c2ce:	e8 2d 90 ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    c2d3:	bf 28 00 00 00       	mov    $0x28,%edi
    c2d8:	e8 d3 8d ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c2dd:	48 89 c3             	mov    %rax,%rbx
    c2e0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c2e4:	48 89 c6             	mov    %rax,%rsi
    c2e7:	48 89 df             	mov    %rbx,%rdi
    c2ea:	e8 53 c8 ff ff       	call   8b42 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    c2ef:	48 8d 05 14 ef ff ff 	lea    -0x10ec(%rip),%rax        # b20a <_ZN2vk20InvalidShaderNVErrorD1Ev>
    c2f6:	48 89 c2             	mov    %rax,%rdx
    c2f9:	48 8d 05 f8 c7 00 00 	lea    0xc7f8(%rip),%rax        # 18af8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c300:	48 89 c6             	mov    %rax,%rsi
    c303:	48 89 df             	mov    %rbx,%rdi
    c306:	e8 f5 8f ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    c30b:	bf 28 00 00 00       	mov    $0x28,%edi
    c310:	e8 9b 8d ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c315:	48 89 c3             	mov    %rax,%rbx
    c318:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c31c:	48 89 c6             	mov    %rax,%rsi
    c31f:	48 89 df             	mov    %rbx,%rdi
    c322:	e8 ed c8 ff ff       	call   8c14 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    c327:	48 8d 05 6c ee ff ff 	lea    -0x1194(%rip),%rax        # b19a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    c32e:	48 89 c2             	mov    %rax,%rdx
    c331:	48 8d 05 a8 c7 00 00 	lea    0xc7a8(%rip),%rax        # 18ae0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c338:	48 89 c6             	mov    %rax,%rsi
    c33b:	48 89 df             	mov    %rbx,%rdi
    c33e:	e8 bd 8f ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    c343:	bf 28 00 00 00       	mov    $0x28,%edi
    c348:	e8 63 8d ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c34d:	48 89 c3             	mov    %rax,%rbx
    c350:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c354:	48 89 c6             	mov    %rax,%rsi
    c357:	48 89 df             	mov    %rbx,%rdi
    c35a:	e8 87 c9 ff ff       	call   8ce6 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    c35f:	48 8d 05 c4 ed ff ff 	lea    -0x123c(%rip),%rax        # b12a <_ZN2vk20NotPermittedKHRErrorD1Ev>
    c366:	48 89 c2             	mov    %rax,%rdx
    c369:	48 8d 05 58 c7 00 00 	lea    0xc758(%rip),%rax        # 18ac8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c370:	48 89 c6             	mov    %rax,%rsi
    c373:	48 89 df             	mov    %rbx,%rdi
    c376:	e8 85 8f ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    c37b:	bf 28 00 00 00       	mov    $0x28,%edi
    c380:	e8 2b 8d ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c385:	48 89 c3             	mov    %rax,%rbx
    c388:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c38c:	48 89 c6             	mov    %rax,%rsi
    c38f:	48 89 df             	mov    %rbx,%rdi
    c392:	e8 21 ca ff ff       	call   8db8 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    c397:	48 8d 05 1c ed ff ff 	lea    -0x12e4(%rip),%rax        # b0ba <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    c39e:	48 89 c2             	mov    %rax,%rdx
    c3a1:	48 8d 05 08 c7 00 00 	lea    0xc708(%rip),%rax        # 18ab0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c3a8:	48 89 c6             	mov    %rax,%rsi
    c3ab:	48 89 df             	mov    %rbx,%rdi
    c3ae:	e8 4d 8f ff ff       	call   5300 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    c3b3:	bf 28 00 00 00       	mov    $0x28,%edi
    c3b8:	e8 f3 8c ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c3bd:	48 89 c3             	mov    %rax,%rbx
    c3c0:	8b 45 cc             	mov    -0x34(%rbp),%eax
    c3c3:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    c3c6:	0f b6 05 2b cf 00 00 	movzbl 0xcf2b(%rip),%eax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    c3cd:	84 c0                	test   %al,%al
    c3cf:	0f 94 c0             	sete   %al
    c3d2:	84 c0                	test   %al,%al
    c3d4:	74 4a                	je     c420 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    c3d6:	48 8d 05 1b cf 00 00 	lea    0xcf1b(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    c3dd:	48 89 c7             	mov    %rax,%rdi
    c3e0:	e8 5b 8f ff ff       	call   5340 <__cxa_guard_acquire@plt>
    c3e5:	85 c0                	test   %eax,%eax
    c3e7:	0f 95 c0             	setne  %al
    c3ea:	84 c0                	test   %al,%al
    c3ec:	74 32                	je     c420 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    c3ee:	48 8d 05 b3 cd 00 00 	lea    0xcdb3(%rip),%rax        # 191a8 <__dso_handle>
    c3f5:	48 89 c2             	mov    %rax,%rdx
    c3f8:	48 8d 05 b1 cd 00 00 	lea    0xcdb1(%rip),%rax        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    c3ff:	48 89 c6             	mov    %rax,%rsi
    c402:	48 8d 05 11 f8 ff ff 	lea    -0x7ef(%rip),%rax        # bc1a <_ZN2vk17ErrorCategoryImplD1Ev>
    c409:	48 89 c7             	mov    %rax,%rdi
    c40c:	e8 7f 8d ff ff       	call   5190 <__cxa_atexit@plt>
    c411:	48 8d 05 e0 ce 00 00 	lea    0xcee0(%rip),%rax        # 192f8 <_ZGVZN2vk13errorCategoryEvE8instance>
    c418:	48 89 c7             	mov    %rax,%rdi
    c41b:	e8 b0 8c ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    c420:	48 8d 15 89 cd 00 00 	lea    0xcd89(%rip),%rdx        # 191b0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    c427:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    c42a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c42e:	89 ce                	mov    %ecx,%esi
    c430:	48 89 c7             	mov    %rax,%rdi
    c433:	e8 40 9e ff ff       	call   6278 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    c438:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c43c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    c440:	48 89 c6             	mov    %rax,%rsi
    c443:	48 89 d7             	mov    %rdx,%rdi
    c446:	89 f1                	mov    %esi,%ecx
    c448:	48 89 d0             	mov    %rdx,%rax
    c44b:	89 ce                	mov    %ecx,%esi
    c44d:	48 89 c2             	mov    %rax,%rdx
    c450:	48 89 df             	mov    %rbx,%rdi
    c453:	e8 28 b3 ff ff       	call   7780 <_ZN2vk11SystemErrorC1ESt10error_code>
    c458:	48 8d 05 57 b4 ff ff 	lea    -0x4ba9(%rip),%rax        # 78b6 <_ZN2vk11SystemErrorD1Ev>
    c45f:	48 89 c2             	mov    %rax,%rdx
    c462:	48 8d 05 b7 c8 00 00 	lea    0xc8b7(%rip),%rax        # 18d20 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    c469:	48 89 c6             	mov    %rax,%rsi
    c46c:	48 89 df             	mov    %rbx,%rdi
    c46f:	e8 8c 8e ff ff       	call   5300 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    c474:	49 89 c4             	mov    %rax,%r12
    c477:	48 89 df             	mov    %rbx,%rdi
    c47a:	e8 91 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c47f:	4c 89 e0             	mov    %r12,%rax
    c482:	48 89 c7             	mov    %rax,%rdi
    c485:	e8 96 8e ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    c48a:	49 89 c4             	mov    %rax,%r12
    c48d:	48 89 df             	mov    %rbx,%rdi
    c490:	e8 7b 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c495:	4c 89 e0             	mov    %r12,%rax
    c498:	48 89 c7             	mov    %rax,%rdi
    c49b:	e8 80 8e ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    c4a0:	49 89 c4             	mov    %rax,%r12
    c4a3:	48 89 df             	mov    %rbx,%rdi
    c4a6:	e8 65 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c4ab:	4c 89 e0             	mov    %r12,%rax
    c4ae:	48 89 c7             	mov    %rax,%rdi
    c4b1:	e8 6a 8e ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    c4b6:	49 89 c4             	mov    %rax,%r12
    c4b9:	48 89 df             	mov    %rbx,%rdi
    c4bc:	e8 4f 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c4c1:	4c 89 e0             	mov    %r12,%rax
    c4c4:	48 89 c7             	mov    %rax,%rdi
    c4c7:	e8 54 8e ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    c4cc:	49 89 c4             	mov    %rax,%r12
    c4cf:	48 89 df             	mov    %rbx,%rdi
    c4d2:	e8 39 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c4d7:	4c 89 e0             	mov    %r12,%rax
    c4da:	48 89 c7             	mov    %rax,%rdi
    c4dd:	e8 3e 8e ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    c4e2:	49 89 c4             	mov    %rax,%r12
    c4e5:	48 89 df             	mov    %rbx,%rdi
    c4e8:	e8 23 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c4ed:	4c 89 e0             	mov    %r12,%rax
    c4f0:	48 89 c7             	mov    %rax,%rdi
    c4f3:	e8 28 8e ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    c4f8:	49 89 c4             	mov    %rax,%r12
    c4fb:	48 89 df             	mov    %rbx,%rdi
    c4fe:	e8 0d 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c503:	4c 89 e0             	mov    %r12,%rax
    c506:	48 89 c7             	mov    %rax,%rdi
    c509:	e8 12 8e ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    c50e:	49 89 c4             	mov    %rax,%r12
    c511:	48 89 df             	mov    %rbx,%rdi
    c514:	e8 f7 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c519:	4c 89 e0             	mov    %r12,%rax
    c51c:	48 89 c7             	mov    %rax,%rdi
    c51f:	e8 fc 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    c524:	49 89 c4             	mov    %rax,%r12
    c527:	48 89 df             	mov    %rbx,%rdi
    c52a:	e8 e1 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c52f:	4c 89 e0             	mov    %r12,%rax
    c532:	48 89 c7             	mov    %rax,%rdi
    c535:	e8 e6 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    c53a:	49 89 c4             	mov    %rax,%r12
    c53d:	48 89 df             	mov    %rbx,%rdi
    c540:	e8 cb 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c545:	4c 89 e0             	mov    %r12,%rax
    c548:	48 89 c7             	mov    %rax,%rdi
    c54b:	e8 d0 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    c550:	49 89 c4             	mov    %rax,%r12
    c553:	48 89 df             	mov    %rbx,%rdi
    c556:	e8 b5 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c55b:	4c 89 e0             	mov    %r12,%rax
    c55e:	48 89 c7             	mov    %rax,%rdi
    c561:	e8 ba 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    c566:	49 89 c4             	mov    %rax,%r12
    c569:	48 89 df             	mov    %rbx,%rdi
    c56c:	e8 9f 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c571:	4c 89 e0             	mov    %r12,%rax
    c574:	48 89 c7             	mov    %rax,%rdi
    c577:	e8 a4 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    c57c:	49 89 c4             	mov    %rax,%r12
    c57f:	48 89 df             	mov    %rbx,%rdi
    c582:	e8 89 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c587:	4c 89 e0             	mov    %r12,%rax
    c58a:	48 89 c7             	mov    %rax,%rdi
    c58d:	e8 8e 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    c592:	49 89 c4             	mov    %rax,%r12
    c595:	48 89 df             	mov    %rbx,%rdi
    c598:	e8 73 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c59d:	4c 89 e0             	mov    %r12,%rax
    c5a0:	48 89 c7             	mov    %rax,%rdi
    c5a3:	e8 78 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    c5a8:	49 89 c4             	mov    %rax,%r12
    c5ab:	48 89 df             	mov    %rbx,%rdi
    c5ae:	e8 5d 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c5b3:	4c 89 e0             	mov    %r12,%rax
    c5b6:	48 89 c7             	mov    %rax,%rdi
    c5b9:	e8 62 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    c5be:	49 89 c4             	mov    %rax,%r12
    c5c1:	48 89 df             	mov    %rbx,%rdi
    c5c4:	e8 47 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c5c9:	4c 89 e0             	mov    %r12,%rax
    c5cc:	48 89 c7             	mov    %rax,%rdi
    c5cf:	e8 4c 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    c5d4:	49 89 c4             	mov    %rax,%r12
    c5d7:	48 89 df             	mov    %rbx,%rdi
    c5da:	e8 31 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c5df:	4c 89 e0             	mov    %r12,%rax
    c5e2:	48 89 c7             	mov    %rax,%rdi
    c5e5:	e8 36 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    c5ea:	49 89 c4             	mov    %rax,%r12
    c5ed:	48 89 df             	mov    %rbx,%rdi
    c5f0:	e8 1b 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c5f5:	4c 89 e0             	mov    %r12,%rax
    c5f8:	48 89 c7             	mov    %rax,%rdi
    c5fb:	e8 20 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    c600:	49 89 c4             	mov    %rax,%r12
    c603:	48 89 df             	mov    %rbx,%rdi
    c606:	e8 05 8b ff ff       	call   5110 <__cxa_free_exception@plt>
    c60b:	4c 89 e0             	mov    %r12,%rax
    c60e:	48 89 c7             	mov    %rax,%rdi
    c611:	e8 0a 8d ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    c616:	49 89 c4             	mov    %rax,%r12
    c619:	48 89 df             	mov    %rbx,%rdi
    c61c:	e8 ef 8a ff ff       	call   5110 <__cxa_free_exception@plt>
    c621:	4c 89 e0             	mov    %r12,%rax
    c624:	48 89 c7             	mov    %rax,%rdi
    c627:	e8 f4 8c ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    c62c:	49 89 c4             	mov    %rax,%r12
    c62f:	48 89 df             	mov    %rbx,%rdi
    c632:	e8 d9 8a ff ff       	call   5110 <__cxa_free_exception@plt>
    c637:	4c 89 e0             	mov    %r12,%rax
    c63a:	48 89 c7             	mov    %rax,%rdi
    c63d:	e8 de 8c ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    c642:	49 89 c4             	mov    %rax,%r12
    c645:	48 89 df             	mov    %rbx,%rdi
    c648:	e8 c3 8a ff ff       	call   5110 <__cxa_free_exception@plt>
    c64d:	4c 89 e0             	mov    %r12,%rax
    c650:	48 89 c7             	mov    %rax,%rdi
    c653:	e8 c8 8c ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    c658:	49 89 c4             	mov    %rax,%r12
    c65b:	48 89 df             	mov    %rbx,%rdi
    c65e:	e8 ad 8a ff ff       	call   5110 <__cxa_free_exception@plt>
    c663:	4c 89 e0             	mov    %r12,%rax
    c666:	48 89 c7             	mov    %rax,%rdi
    c669:	e8 b2 8c ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    c66e:	49 89 c4             	mov    %rax,%r12
    c671:	48 89 df             	mov    %rbx,%rdi
    c674:	e8 97 8a ff ff       	call   5110 <__cxa_free_exception@plt>
    c679:	4c 89 e0             	mov    %r12,%rax
    c67c:	48 89 c7             	mov    %rax,%rdi
    c67f:	e8 9c 8c ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    c684:	49 89 c4             	mov    %rax,%r12
    c687:	48 89 df             	mov    %rbx,%rdi
    c68a:	e8 81 8a ff ff       	call   5110 <__cxa_free_exception@plt>
    c68f:	4c 89 e0             	mov    %r12,%rax
    c692:	48 89 c7             	mov    %rax,%rdi
    c695:	e8 86 8c ff ff       	call   5320 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    c69a:	49 89 c4             	mov    %rax,%r12
    c69d:	48 89 df             	mov    %rbx,%rdi
    c6a0:	e8 6b 8a ff ff       	call   5110 <__cxa_free_exception@plt>
    c6a5:	4c 89 e0             	mov    %r12,%rax
    c6a8:	48 89 c7             	mov    %rax,%rdi
    c6ab:	e8 70 8c ff ff       	call   5320 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    c6b0:	49 89 c4             	mov    %rax,%r12
    c6b3:	48 89 df             	mov    %rbx,%rdi
    c6b6:	e8 55 8a ff ff       	call   5110 <__cxa_free_exception@plt>
    c6bb:	4c 89 e0             	mov    %r12,%rax
    c6be:	48 89 c7             	mov    %rax,%rdi
    c6c1:	e8 5a 8c ff ff       	call   5320 <_Unwind_Resume@plt>

000000000000c6c6 <_ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    c6c6:	55                   	push   %rbp
    c6c7:	48 89 e5             	mov    %rsp,%rbp
    c6ca:	48 83 ec 20          	sub    $0x20,%rsp
    c6ce:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c6d1:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c6d4:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    c6d8:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    c6dc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c6df:	83 f8 01             	cmp    $0x1,%eax
    c6e2:	7e 3c                	jle    c720 <_ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    c6e4:	be 0a 00 00 00       	mov    $0xa,%esi
    c6e9:	48 8d 05 f0 ca 00 00 	lea    0xcaf0(%rip),%rax        # 191e0 <_ZSt4cerr@GLIBCXX_3.4>
    c6f0:	48 89 c7             	mov    %rax,%rdi
    c6f3:	e8 48 8b ff ff       	call   5240 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    c6f8:	48 89 c2             	mov    %rax,%rdx
    c6fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c6ff:	48 8b 40 28          	mov    0x28(%rax),%rax
    c703:	48 89 c6             	mov    %rax,%rsi
    c706:	48 89 d7             	mov    %rdx,%rdi
    c709:	e8 c2 8a ff ff       	call   51d0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c70e:	48 8b 15 83 c8 00 00 	mov    0xc883(%rip),%rdx        # 18f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    c715:	48 89 d6             	mov    %rdx,%rsi
    c718:	48 89 c7             	mov    %rax,%rdi
    c71b:	e8 f0 8a ff ff       	call   5210 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    c720:	b8 00 00 00 00       	mov    $0x0,%eax
}
    c725:	c9                   	leave
    c726:	c3                   	ret

000000000000c727 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE>:

vk::raii::Instance makeInstance(const vk::raii::Context &context) {
    c727:	55                   	push   %rbp
    c728:	48 89 e5             	mov    %rsp,%rbp
    c72b:	41 55                	push   %r13
    c72d:	41 54                	push   %r12
    c72f:	53                   	push   %rbx
    c730:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
    c737:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
    c73e:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
  vk::ApplicationInfo applicationInfo{
    c745:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
    c74c:	00 00 00 
    c74f:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    c756:	00 00 00 00 
    c75a:	48 8d 05 f8 61 00 00 	lea    0x61f8(%rip),%rax        # 12959 <_ZNSt8__detailL19__atomic_spin_countE+0xd5d>
    c761:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    c768:	c7 85 78 ff ff ff 00 	movl   $0x400000,-0x88(%rbp)
    c76f:	00 40 00 
    c772:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    c779:	00 
    c77a:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    c781:	c7 45 8c 00 30 40 00 	movl   $0x403000,-0x74(%rbp)
      .applicationVersion{VK_MAKE_VERSION(1, 0, 0)},
      .apiVersion{VK_API_VERSION_1_3},
  };

  // Required extensions
  uint32_t requiredExtensionCount = 0;
    c788:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    c78f:	00 00 00 
  auto ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    c792:	48 8d 85 5c ff ff ff 	lea    -0xa4(%rbp),%rax
    c799:	48 89 c7             	mov    %rax,%rdi
    c79c:	e8 8f 89 ff ff       	call   5130 <glfwGetRequiredInstanceExtensions@plt>
    c7a1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    c7a5:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    c7ab:	89 c3                	mov    %eax,%ebx
    c7ad:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    c7b1:	48 89 c7             	mov    %rax,%rdi
    c7b4:	e8 dd 19 00 00       	call   e196 <_ZNSaIPKcEC1Ev>
    c7b9:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    c7bd:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    c7c4:	48 89 de             	mov    %rbx,%rsi
    c7c7:	48 89 c7             	mov    %rax,%rdi
    c7ca:	e8 d7 1f 00 00       	call   e7a6 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    c7cf:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    c7d3:	48 89 c7             	mov    %rax,%rdi
    c7d6:	e8 99 1d 00 00       	call   e574 <_ZNSaIPKcED1Ev>
  for (size_t i = 0; i < requiredExtensionCount; ++i) {
    c7db:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    c7e2:	00 
    c7e3:	eb 34                	jmp    c819 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0xf2>
    requiredExtensions[i] = ppRequiredExtensions[i];
    c7e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c7e9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c7f0:	00 
    c7f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c7f5:	48 01 d0             	add    %rdx,%rax
    c7f8:	48 8b 18             	mov    (%rax),%rbx
    c7fb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c7ff:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    c806:	48 89 d6             	mov    %rdx,%rsi
    c809:	48 89 c7             	mov    %rax,%rdi
    c80c:	e8 4f 20 00 00       	call   e860 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    c811:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < requiredExtensionCount; ++i) {
    c814:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    c819:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    c81f:	89 c0                	mov    %eax,%eax
    c821:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    c825:	72 be                	jb     c7e5 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0xbe>
  }

  // Requested layers
  std::vector<const char *> requestedLayers = {
      "VK_LAYER_MANGOHUD_overlay",
  };
    c827:	48 8d 05 3e 61 00 00 	lea    0x613e(%rip),%rax        # 1296c <_ZNSt8__detailL19__atomic_spin_countE+0xd70>
    c82e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c832:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    c836:	49 89 c4             	mov    %rax,%r12
    c839:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    c83f:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    c843:	48 89 c7             	mov    %rax,%rdi
    c846:	e8 4b 19 00 00       	call   e196 <_ZNSaIPKcEC1Ev>
    c84b:	48 8d 55 af          	lea    -0x51(%rbp),%rdx
    c84f:	4c 89 e6             	mov    %r12,%rsi
    c852:	4c 89 ef             	mov    %r13,%rdi
    c855:	4c 89 e1             	mov    %r12,%rcx
    c858:	4c 89 eb             	mov    %r13,%rbx
    c85b:	48 89 df             	mov    %rbx,%rdi
    c85e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    c865:	48 89 d1             	mov    %rdx,%rcx
    c868:	48 89 fa             	mov    %rdi,%rdx
    c86b:	48 89 c7             	mov    %rax,%rdi
    c86e:	e8 4b 19 00 00       	call   e1be <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    c873:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    c877:	48 89 c7             	mov    %rax,%rdi
    c87a:	e8 f5 1c 00 00       	call   e574 <_ZNSaIPKcED1Ev>

  // Enable validation layers if the application is running in debug mode
  vk::DebugUtilsMessengerCreateInfoEXT *pDebugInfo = nullptr;
    c87f:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    c886:	00 
  vk::DebugUtilsMessengerCreateInfoEXT debugInfo{};
    c887:	c7 85 f0 fe ff ff 04 	movl   $0x3b9cbe04,-0x110(%rbp)
    c88e:	be 9c 3b 
    c891:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    c898:	00 00 00 00 
    c89c:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%rbp)
    c8a3:	00 00 00 
    c8a6:	c7 85 04 ff ff ff 00 	movl   $0x0,-0xfc(%rbp)
    c8ad:	00 00 00 
    c8b0:	c7 85 08 ff ff ff 00 	movl   $0x0,-0xf8(%rbp)
    c8b7:	00 00 00 
    c8ba:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
    c8c1:	00 00 00 00 
    c8c5:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
    c8cc:	00 00 00 00 
  if constexpr (debugMode) {
    requiredExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    c8d0:	48 8d 05 af 60 00 00 	lea    0x60af(%rip),%rax        # 12986 <_ZNSt8__detailL19__atomic_spin_countE+0xd8a>
    c8d7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    c8db:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    c8df:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    c8e6:	48 89 d6             	mov    %rdx,%rsi
    c8e9:	48 89 c7             	mov    %rax,%rdi
    c8ec:	e8 93 20 00 00       	call   e984 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>
    requestedLayers.push_back(validationLayerName);
    c8f1:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    c8f8:	48 8d 15 d9 c0 00 00 	lea    0xc0d9(%rip),%rdx        # 189d8 <_ZN4rtvcL19validationLayerNameE>
    c8ff:	48 89 d6             	mov    %rdx,%rsi
    c902:	48 89 c7             	mov    %rax,%rdi
    c905:	e8 ac 20 00 00       	call   e9b6 <_ZNSt6vectorIPKcSaIS1_EE9push_backERKS1_>
            vk::DebugUtilsMessageTypeFlagBitsEXT::eGeneral |
            vk::DebugUtilsMessageTypeFlagBitsEXT::eValidation |
            vk::DebugUtilsMessageTypeFlagBitsEXT::ePerformance |
            vk::DebugUtilsMessageTypeFlagBitsEXT::eDeviceAddressBinding,
        .pfnUserCallback = debugCallback,
    };
    c90a:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    c90e:	48 89 c7             	mov    %rax,%rdi
    c911:	e8 24 1d 00 00       	call   e63a <_ZN2vk5FlagsINS_36DebugUtilsMessengerCreateFlagBitsEXTEEC1Ev>
    debugInfo = {
    c916:	c7 85 f0 fe ff ff 04 	movl   $0x3b9cbe04,-0x110(%rbp)
    c91d:	be 9c 3b 
    c920:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    c927:	00 00 00 00 
    c92b:	8b 45 bc             	mov    -0x44(%rbp),%eax
    c92e:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
    c934:	c7 85 04 ff ff ff 11 	movl   $0x1111,-0xfc(%rbp)
    c93b:	11 00 00 
    c93e:	c7 85 08 ff ff ff 0f 	movl   $0xf,-0xf8(%rbp)
    c945:	00 00 00 
    c948:	48 8d 05 77 fd ff ff 	lea    -0x289(%rip),%rax        # c6c6 <_ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    c94f:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    c956:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
    c95d:	00 00 00 00 
    pDebugInfo = &debugInfo;
    c961:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    c968:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  }

  vk::InstanceCreateInfo instanceInfo{
    c96c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c970:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    c977:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
    c97e:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
    c985:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    c98c:	c7 85 b0 fe ff ff 01 	movl   $0x1,-0x150(%rbp)
    c993:	00 00 00 
      .pApplicationInfo{&applicationInfo},
      .enabledLayerCount{static_cast<uint32_t>(requestedLayers.size())},
      .ppEnabledLayerNames{requestedLayers.data()},
      .enabledExtensionCount{static_cast<uint32_t>(requiredExtensions.size())},
      .ppEnabledExtensionNames{requiredExtensions.data()},
  };
    c996:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c99a:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    c9a1:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    c9a8:	48 83 c0 10          	add    $0x10,%rax
    c9ac:	48 89 c7             	mov    %rax,%rdi
    c9af:	e8 e4 1c 00 00       	call   e698 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1Ev>
    c9b4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    c9bb:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
      .enabledLayerCount{static_cast<uint32_t>(requestedLayers.size())},
    c9c2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    c9c9:	48 89 c7             	mov    %rax,%rdi
    c9cc:	e8 7f 1c 00 00       	call   e650 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  };
    c9d1:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
      .ppEnabledLayerNames{requestedLayers.data()},
    c9d7:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    c9de:	48 89 c7             	mov    %rax,%rdi
    c9e1:	e8 8e 1c 00 00       	call   e674 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
  };
    c9e6:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
      .enabledExtensionCount{static_cast<uint32_t>(requiredExtensions.size())},
    c9ed:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    c9f4:	48 89 c7             	mov    %rax,%rdi
    c9f7:	e8 54 1c 00 00       	call   e650 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  };
    c9fc:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%rbp)
      .ppEnabledExtensionNames{requiredExtensions.data()},
    ca02:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ca09:	48 89 c7             	mov    %rax,%rdi
    ca0c:	e8 63 1c 00 00       	call   e674 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
  };
    ca11:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  return {context, instanceInfo};
    ca18:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ca1c:	be 00 00 00 00       	mov    $0x0,%esi
    ca21:	48 89 c7             	mov    %rax,%rdi
    ca24:	e8 1b 20 00 00       	call   ea44 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
    ca29:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    ca2d:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
    ca34:	48 8b b5 a0 fe ff ff 	mov    -0x160(%rbp),%rsi
    ca3b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    ca42:	48 89 c7             	mov    %rax,%rdi
    ca45:	e8 da 14 00 00       	call   df24 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>
}
    ca4a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ca51:	48 89 c7             	mov    %rax,%rdi
    ca54:	e8 c3 1d 00 00       	call   e81c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ca59:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ca60:	48 89 c7             	mov    %rax,%rdi
    ca63:	e8 b4 1d 00 00       	call   e81c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
  return {context, instanceInfo};
    ca68:	eb 57                	jmp    cac1 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0x39a>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    ca6a:	48 89 c3             	mov    %rax,%rbx
    ca6d:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    ca71:	48 89 c7             	mov    %rax,%rdi
    ca74:	e8 fb 1a 00 00       	call   e574 <_ZNSaIPKcED1Ev>
    ca79:	48 89 d8             	mov    %rbx,%rax
    ca7c:	48 89 c7             	mov    %rax,%rdi
    ca7f:	e8 9c 88 ff ff       	call   5320 <_Unwind_Resume@plt>
  };
    ca84:	48 89 c3             	mov    %rax,%rbx
    ca87:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    ca8b:	48 89 c7             	mov    %rax,%rdi
    ca8e:	e8 e1 1a 00 00       	call   e574 <_ZNSaIPKcED1Ev>
    ca93:	eb 12                	jmp    caa7 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0x380>
}
    ca95:	48 89 c3             	mov    %rax,%rbx
    ca98:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ca9f:	48 89 c7             	mov    %rax,%rdi
    caa2:	e8 75 1d 00 00       	call   e81c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    caa7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    caae:	48 89 c7             	mov    %rax,%rdi
    cab1:	e8 66 1d 00 00       	call   e81c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    cab6:	48 89 d8             	mov    %rbx,%rax
    cab9:	48 89 c7             	mov    %rax,%rdi
    cabc:	e8 5f 88 ff ff       	call   5320 <_Unwind_Resume@plt>
    cac1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    cac8:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
    cacf:	5b                   	pop    %rbx
    cad0:	41 5c                	pop    %r12
    cad2:	41 5d                	pop    %r13
    cad4:	5d                   	pop    %rbp
    cad5:	c3                   	ret

000000000000cad6 <_ZN4rtvc18makeDebugMessengerERKN2vk4raii8InstanceE>:

vk::raii::DebugUtilsMessengerEXT
makeDebugMessenger(const vk::raii::Instance &instance) {
    cad6:	55                   	push   %rbp
    cad7:	48 89 e5             	mov    %rsp,%rbp
    cada:	48 83 ec 50          	sub    $0x50,%rsp
    cade:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    cae2:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  if constexpr (debugMode) {
    vk::DebugUtilsMessengerCreateInfoEXT debugInfo{
    cae6:	c7 45 c0 04 be 9c 3b 	movl   $0x3b9cbe04,-0x40(%rbp)
    caed:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    caf4:	00 
    caf5:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    cafc:	c7 45 d4 11 11 00 00 	movl   $0x1111,-0x2c(%rbp)
    cb03:	c7 45 d8 0f 00 00 00 	movl   $0xf,-0x28(%rbp)
    cb0a:	48 8d 05 b5 fb ff ff 	lea    -0x44b(%rip),%rax        # c6c6 <_ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    cb11:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    cb15:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    cb1c:	00 
            vk::DebugUtilsMessageTypeFlagBitsEXT::eValidation |
            vk::DebugUtilsMessageTypeFlagBitsEXT::ePerformance |
            vk::DebugUtilsMessageTypeFlagBitsEXT::eDeviceAddressBinding,
        .pfnUserCallback = debugCallback,
    };
    return {instance, debugInfo};
    cb1d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb21:	be 00 00 00 00       	mov    $0x0,%esi
    cb26:	48 89 c7             	mov    %rax,%rdi
    cb29:	e8 16 1f 00 00       	call   ea44 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
    cb2e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    cb32:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    cb36:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    cb3a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cb3e:	48 89 c7             	mov    %rax,%rdi
    cb41:	e8 3a 15 00 00       	call   e080 <_ZN2vk4raii22DebugUtilsMessengerEXTC1ERKNS0_8InstanceERKNS_32DebugUtilsMessengerCreateInfoEXTENS_8OptionalIKNS_19AllocationCallbacksEEE>
  }
  return {VK_NULL_HANDLE};
}
    cb46:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cb4a:	c9                   	leave
    cb4b:	c3                   	ret

000000000000cb4c <_Z41__static_initialization_and_destruction_0ii>:

} /* namespace rtvc */
    cb4c:	55                   	push   %rbp
    cb4d:	48 89 e5             	mov    %rsp,%rbp
    cb50:	48 83 ec 10          	sub    $0x10,%rsp
    cb54:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cb57:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cb5a:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cb5e:	75 3b                	jne    cb9b <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cb60:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cb67:	75 32                	jne    cb9b <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cb69:	48 8d 05 90 c7 00 00 	lea    0xc790(%rip),%rax        # 19300 <_ZStL8__ioinit>
    cb70:	48 89 c7             	mov    %rax,%rdi
    cb73:	e8 48 87 ff ff       	call   52c0 <_ZNSt8ios_base4InitC1Ev@plt>
    cb78:	48 8d 05 29 c6 00 00 	lea    0xc629(%rip),%rax        # 191a8 <__dso_handle>
    cb7f:	48 89 c2             	mov    %rax,%rdx
    cb82:	48 8d 05 77 c7 00 00 	lea    0xc777(%rip),%rax        # 19300 <_ZStL8__ioinit>
    cb89:	48 89 c6             	mov    %rax,%rsi
    cb8c:	48 8b 05 35 c4 00 00 	mov    0xc435(%rip),%rax        # 18fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cb93:	48 89 c7             	mov    %rax,%rdi
    cb96:	e8 f5 85 ff ff       	call   5190 <__cxa_atexit@plt>
    cb9b:	90                   	nop
    cb9c:	c9                   	leave
    cb9d:	c3                   	ret

000000000000cb9e <_GLOBAL__sub_I__ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    cb9e:	55                   	push   %rbp
    cb9f:	48 89 e5             	mov    %rsp,%rbp
    cba2:	be ff ff 00 00       	mov    $0xffff,%esi
    cba7:	bf 01 00 00 00       	mov    $0x1,%edi
    cbac:	e8 9b ff ff ff       	call   cb4c <_Z41__static_initialization_and_destruction_0ii>
    cbb1:	5d                   	pop    %rbp
    cbb2:	c3                   	ret

000000000000cbb3 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    cbb3:	55                   	push   %rbp
    cbb4:	48 89 e5             	mov    %rsp,%rbp
    cbb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbbf:	5d                   	pop    %rbp
    cbc0:	c3                   	ret
    cbc1:	90                   	nop

000000000000cbc2 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_>:
      InstanceDispatcher( PFN_vkGetInstanceProcAddr getProcAddr, VkInstance instance ) : vkGetInstanceProcAddr( getProcAddr )
    cbc2:	55                   	push   %rbp
    cbc3:	48 89 e5             	mov    %rsp,%rbp
    cbc6:	48 83 ec 20          	sub    $0x20,%rsp
    cbca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cbd2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    cbd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbda:	48 89 c7             	mov    %rax,%rdi
    cbdd:	e8 2a 99 ff ff       	call   650c <_ZN2vk18DispatchLoaderBaseC1Ev>
    cbe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbe6:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    cbed:	00 
    cbee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbf2:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    cbf9:	00 
    cbfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbfe:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    cc05:	00 
    cc06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc0a:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    cc11:	00 
    cc12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc16:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cc1d:	00 
    cc1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc22:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    cc29:	00 
    cc2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc2e:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
    cc35:	00 
    cc36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc3a:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    cc41:	00 
    cc42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cc4a:	48 89 50 50          	mov    %rdx,0x50(%rax)
    cc4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc52:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
    cc59:	00 
    cc5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc5e:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    cc65:	00 
    cc66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc6a:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
    cc71:	00 
    cc72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc76:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
    cc7d:	00 
    cc7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc82:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
    cc89:	00 
    cc8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc8e:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
    cc95:	00 00 00 00 
    cc99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc9d:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)
    cca4:	00 00 00 00 
    cca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccac:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
    ccb3:	00 00 00 00 
    ccb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccbb:	48 c7 80 98 00 00 00 	movq   $0x0,0x98(%rax)
    ccc2:	00 00 00 00 
    ccc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccca:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
    ccd1:	00 00 00 00 
    ccd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccd9:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
    cce0:	00 00 00 00 
    cce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cce8:	48 c7 80 b0 00 00 00 	movq   $0x0,0xb0(%rax)
    ccef:	00 00 00 00 
    ccf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccf7:	48 c7 80 b8 00 00 00 	movq   $0x0,0xb8(%rax)
    ccfe:	00 00 00 00 
    cd02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd06:	48 c7 80 c0 00 00 00 	movq   $0x0,0xc0(%rax)
    cd0d:	00 00 00 00 
    cd11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd15:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)
    cd1c:	00 00 00 00 
    cd20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd24:	48 c7 80 d0 00 00 00 	movq   $0x0,0xd0(%rax)
    cd2b:	00 00 00 00 
    cd2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd33:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
    cd3a:	00 00 00 00 
    cd3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd42:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
    cd49:	00 00 00 00 
    cd4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd51:	48 c7 80 e8 00 00 00 	movq   $0x0,0xe8(%rax)
    cd58:	00 00 00 00 
    cd5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd60:	48 c7 80 f0 00 00 00 	movq   $0x0,0xf0(%rax)
    cd67:	00 00 00 00 
    cd6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd6f:	48 c7 80 f8 00 00 00 	movq   $0x0,0xf8(%rax)
    cd76:	00 00 00 00 
    cd7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd7e:	48 c7 80 00 01 00 00 	movq   $0x0,0x100(%rax)
    cd85:	00 00 00 00 
    cd89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd8d:	48 c7 80 08 01 00 00 	movq   $0x0,0x108(%rax)
    cd94:	00 00 00 00 
    cd98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd9c:	48 c7 80 10 01 00 00 	movq   $0x0,0x110(%rax)
    cda3:	00 00 00 00 
    cda7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdab:	48 c7 80 18 01 00 00 	movq   $0x0,0x118(%rax)
    cdb2:	00 00 00 00 
    cdb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdba:	48 c7 80 20 01 00 00 	movq   $0x0,0x120(%rax)
    cdc1:	00 00 00 00 
    cdc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdc9:	48 c7 80 28 01 00 00 	movq   $0x0,0x128(%rax)
    cdd0:	00 00 00 00 
    cdd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdd8:	48 c7 80 30 01 00 00 	movq   $0x0,0x130(%rax)
    cddf:	00 00 00 00 
    cde3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cde7:	48 c7 80 38 01 00 00 	movq   $0x0,0x138(%rax)
    cdee:	00 00 00 00 
    cdf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdf6:	48 c7 80 40 01 00 00 	movq   $0x0,0x140(%rax)
    cdfd:	00 00 00 00 
    ce01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce05:	48 c7 80 48 01 00 00 	movq   $0x0,0x148(%rax)
    ce0c:	00 00 00 00 
    ce10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce14:	48 c7 80 50 01 00 00 	movq   $0x0,0x150(%rax)
    ce1b:	00 00 00 00 
    ce1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce23:	48 c7 80 58 01 00 00 	movq   $0x0,0x158(%rax)
    ce2a:	00 00 00 00 
    ce2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce32:	48 c7 80 60 01 00 00 	movq   $0x0,0x160(%rax)
    ce39:	00 00 00 00 
    ce3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce41:	48 c7 80 68 01 00 00 	movq   $0x0,0x168(%rax)
    ce48:	00 00 00 00 
    ce4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce50:	48 c7 80 70 01 00 00 	movq   $0x0,0x170(%rax)
    ce57:	00 00 00 00 
    ce5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce5f:	48 c7 80 78 01 00 00 	movq   $0x0,0x178(%rax)
    ce66:	00 00 00 00 
    ce6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce6e:	48 c7 80 80 01 00 00 	movq   $0x0,0x180(%rax)
    ce75:	00 00 00 00 
    ce79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce7d:	48 c7 80 88 01 00 00 	movq   $0x0,0x188(%rax)
    ce84:	00 00 00 00 
    ce88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce8c:	48 c7 80 90 01 00 00 	movq   $0x0,0x190(%rax)
    ce93:	00 00 00 00 
    ce97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce9b:	48 c7 80 98 01 00 00 	movq   $0x0,0x198(%rax)
    cea2:	00 00 00 00 
    cea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceaa:	48 c7 80 a0 01 00 00 	movq   $0x0,0x1a0(%rax)
    ceb1:	00 00 00 00 
    ceb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceb9:	48 c7 80 a8 01 00 00 	movq   $0x0,0x1a8(%rax)
    cec0:	00 00 00 00 
    cec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cec8:	48 c7 80 b0 01 00 00 	movq   $0x0,0x1b0(%rax)
    cecf:	00 00 00 00 
    ced3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ced7:	48 c7 80 b8 01 00 00 	movq   $0x0,0x1b8(%rax)
    cede:	00 00 00 00 
    cee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cee6:	48 c7 80 c0 01 00 00 	movq   $0x0,0x1c0(%rax)
    ceed:	00 00 00 00 
    cef1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cef5:	48 c7 80 c8 01 00 00 	movq   $0x0,0x1c8(%rax)
    cefc:	00 00 00 00 
    cf00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf04:	48 c7 80 d0 01 00 00 	movq   $0x0,0x1d0(%rax)
    cf0b:	00 00 00 00 
    cf0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf13:	48 c7 80 d8 01 00 00 	movq   $0x0,0x1d8(%rax)
    cf1a:	00 00 00 00 
    cf1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf22:	48 c7 80 e0 01 00 00 	movq   $0x0,0x1e0(%rax)
    cf29:	00 00 00 00 
    cf2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf31:	48 c7 80 e8 01 00 00 	movq   $0x0,0x1e8(%rax)
    cf38:	00 00 00 00 
    cf3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf40:	48 c7 80 f0 01 00 00 	movq   $0x0,0x1f0(%rax)
    cf47:	00 00 00 00 
    cf4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf4f:	48 c7 80 f8 01 00 00 	movq   $0x0,0x1f8(%rax)
    cf56:	00 00 00 00 
    cf5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf5e:	48 c7 80 00 02 00 00 	movq   $0x0,0x200(%rax)
    cf65:	00 00 00 00 
    cf69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf6d:	48 c7 80 08 02 00 00 	movq   $0x0,0x208(%rax)
    cf74:	00 00 00 00 
    cf78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf7c:	48 c7 80 10 02 00 00 	movq   $0x0,0x210(%rax)
    cf83:	00 00 00 00 
    cf87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf8b:	48 c7 80 18 02 00 00 	movq   $0x0,0x218(%rax)
    cf92:	00 00 00 00 
    cf96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf9a:	48 c7 80 20 02 00 00 	movq   $0x0,0x220(%rax)
    cfa1:	00 00 00 00 
    cfa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfa9:	48 c7 80 28 02 00 00 	movq   $0x0,0x228(%rax)
    cfb0:	00 00 00 00 
    cfb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfb8:	48 c7 80 30 02 00 00 	movq   $0x0,0x230(%rax)
    cfbf:	00 00 00 00 
    cfc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfc7:	48 c7 80 38 02 00 00 	movq   $0x0,0x238(%rax)
    cfce:	00 00 00 00 
    cfd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfd6:	48 c7 80 40 02 00 00 	movq   $0x0,0x240(%rax)
    cfdd:	00 00 00 00 
    cfe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfe5:	48 c7 80 48 02 00 00 	movq   $0x0,0x248(%rax)
    cfec:	00 00 00 00 
    cff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cff4:	48 c7 80 50 02 00 00 	movq   $0x0,0x250(%rax)
    cffb:	00 00 00 00 
    cfff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d003:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
    d00a:	00 00 00 00 
    d00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d012:	48 c7 80 60 02 00 00 	movq   $0x0,0x260(%rax)
    d019:	00 00 00 00 
    d01d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d021:	48 c7 80 68 02 00 00 	movq   $0x0,0x268(%rax)
    d028:	00 00 00 00 
    d02c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d030:	48 c7 80 70 02 00 00 	movq   $0x0,0x270(%rax)
    d037:	00 00 00 00 
    d03b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d03f:	48 c7 80 78 02 00 00 	movq   $0x0,0x278(%rax)
    d046:	00 00 00 00 
    d04a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d04e:	48 c7 80 80 02 00 00 	movq   $0x0,0x280(%rax)
    d055:	00 00 00 00 
    d059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d05d:	48 c7 80 88 02 00 00 	movq   $0x0,0x288(%rax)
    d064:	00 00 00 00 
    d068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d06c:	48 c7 80 90 02 00 00 	movq   $0x0,0x290(%rax)
    d073:	00 00 00 00 
    d077:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d07b:	48 c7 80 98 02 00 00 	movq   $0x0,0x298(%rax)
    d082:	00 00 00 00 
    d086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d08a:	48 c7 80 a0 02 00 00 	movq   $0x0,0x2a0(%rax)
    d091:	00 00 00 00 
    d095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d099:	48 c7 80 a8 02 00 00 	movq   $0x0,0x2a8(%rax)
    d0a0:	00 00 00 00 
    d0a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0a8:	48 c7 80 b0 02 00 00 	movq   $0x0,0x2b0(%rax)
    d0af:	00 00 00 00 
    d0b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0b7:	48 c7 80 b8 02 00 00 	movq   $0x0,0x2b8(%rax)
    d0be:	00 00 00 00 
    d0c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0c6:	48 c7 80 c0 02 00 00 	movq   $0x0,0x2c0(%rax)
    d0cd:	00 00 00 00 
    d0d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0d5:	48 c7 80 c8 02 00 00 	movq   $0x0,0x2c8(%rax)
    d0dc:	00 00 00 00 
    d0e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e4:	48 c7 80 d0 02 00 00 	movq   $0x0,0x2d0(%rax)
    d0eb:	00 00 00 00 
    d0ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0f3:	48 c7 80 d8 02 00 00 	movq   $0x0,0x2d8(%rax)
    d0fa:	00 00 00 00 
    d0fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d102:	48 c7 80 e0 02 00 00 	movq   $0x0,0x2e0(%rax)
    d109:	00 00 00 00 
    d10d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d111:	48 c7 80 e8 02 00 00 	movq   $0x0,0x2e8(%rax)
    d118:	00 00 00 00 
    d11c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d120:	48 c7 80 f0 02 00 00 	movq   $0x0,0x2f0(%rax)
    d127:	00 00 00 00 
    d12b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d12f:	48 c7 80 f8 02 00 00 	movq   $0x0,0x2f8(%rax)
    d136:	00 00 00 00 
    d13a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d13e:	48 c7 80 00 03 00 00 	movq   $0x0,0x300(%rax)
    d145:	00 00 00 00 
    d149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d14d:	48 c7 80 08 03 00 00 	movq   $0x0,0x308(%rax)
    d154:	00 00 00 00 
    d158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d15c:	48 c7 80 10 03 00 00 	movq   $0x0,0x310(%rax)
    d163:	00 00 00 00 
    d167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d16b:	48 c7 80 18 03 00 00 	movq   $0x0,0x318(%rax)
    d172:	00 00 00 00 
    d176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d17a:	48 c7 80 20 03 00 00 	movq   $0x0,0x320(%rax)
    d181:	00 00 00 00 
    d185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d189:	48 c7 80 28 03 00 00 	movq   $0x0,0x328(%rax)
    d190:	00 00 00 00 
    d194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d198:	48 c7 80 30 03 00 00 	movq   $0x0,0x330(%rax)
    d19f:	00 00 00 00 
    d1a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1a7:	48 c7 80 38 03 00 00 	movq   $0x0,0x338(%rax)
    d1ae:	00 00 00 00 
    d1b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1b6:	48 c7 80 40 03 00 00 	movq   $0x0,0x340(%rax)
    d1bd:	00 00 00 00 
        vkDestroyInstance           = PFN_vkDestroyInstance( vkGetInstanceProcAddr( instance, "vkDestroyInstance" ) );
    d1c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1c5:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d1c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1cd:	48 8d 0d 2c 4a 00 00 	lea    0x4a2c(%rip),%rcx        # 11c00 <_ZNSt8__detailL19__atomic_spin_countE+0x4>
    d1d4:	48 89 ce             	mov    %rcx,%rsi
    d1d7:	48 89 c7             	mov    %rax,%rdi
    d1da:	ff d2                	call   *%rdx
    d1dc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d1e0:	48 89 42 10          	mov    %rax,0x10(%rdx)
        vkEnumeratePhysicalDevices  = PFN_vkEnumeratePhysicalDevices( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDevices" ) );
    d1e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e8:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d1ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1f0:	48 8d 0d 1b 4a 00 00 	lea    0x4a1b(%rip),%rcx        # 11c12 <_ZNSt8__detailL19__atomic_spin_countE+0x16>
    d1f7:	48 89 ce             	mov    %rcx,%rsi
    d1fa:	48 89 c7             	mov    %rax,%rdi
    d1fd:	ff d2                	call   *%rdx
    d1ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d203:	48 89 42 18          	mov    %rax,0x18(%rdx)
        vkGetPhysicalDeviceFeatures = PFN_vkGetPhysicalDeviceFeatures( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures" ) );
    d207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d20b:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d20f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d213:	48 8d 0d 13 4a 00 00 	lea    0x4a13(%rip),%rcx        # 11c2d <_ZNSt8__detailL19__atomic_spin_countE+0x31>
    d21a:	48 89 ce             	mov    %rcx,%rsi
    d21d:	48 89 c7             	mov    %rax,%rdi
    d220:	ff d2                	call   *%rdx
    d222:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d226:	48 89 42 20          	mov    %rax,0x20(%rdx)
          PFN_vkGetPhysicalDeviceFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties" ) );
    d22a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d22e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d236:	48 8d 0d 13 4a 00 00 	lea    0x4a13(%rip),%rcx        # 11c50 <_ZNSt8__detailL19__atomic_spin_countE+0x54>
    d23d:	48 89 ce             	mov    %rcx,%rsi
    d240:	48 89 c7             	mov    %rax,%rdi
    d243:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties =
    d245:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d249:	48 89 42 28          	mov    %rax,0x28(%rdx)
          PFN_vkGetPhysicalDeviceImageFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties" ) );
    d24d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d251:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d255:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d259:	48 8d 0d 18 4a 00 00 	lea    0x4a18(%rip),%rcx        # 11c78 <_ZNSt8__detailL19__atomic_spin_countE+0x7c>
    d260:	48 89 ce             	mov    %rcx,%rsi
    d263:	48 89 c7             	mov    %rax,%rdi
    d266:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties =
    d268:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d26c:	48 89 42 30          	mov    %rax,0x30(%rdx)
        vkGetPhysicalDeviceProperties = PFN_vkGetPhysicalDeviceProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties" ) );
    d270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d274:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d278:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d27c:	48 8d 0d 1e 4a 00 00 	lea    0x4a1e(%rip),%rcx        # 11ca1 <_ZNSt8__detailL19__atomic_spin_countE+0xa5>
    d283:	48 89 ce             	mov    %rcx,%rsi
    d286:	48 89 c7             	mov    %rax,%rdi
    d289:	ff d2                	call   *%rdx
    d28b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d28f:	48 89 42 38          	mov    %rax,0x38(%rdx)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties" ) );
    d293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d297:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d29b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d29f:	48 8d 0d 1a 4a 00 00 	lea    0x4a1a(%rip),%rcx        # 11cc0 <_ZNSt8__detailL19__atomic_spin_countE+0xc4>
    d2a6:	48 89 ce             	mov    %rcx,%rsi
    d2a9:	48 89 c7             	mov    %rax,%rdi
    d2ac:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties =
    d2ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d2b2:	48 89 42 40          	mov    %rax,0x40(%rdx)
          PFN_vkGetPhysicalDeviceMemoryProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties" ) );
    d2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2ba:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d2be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2c2:	48 8d 0d 27 4a 00 00 	lea    0x4a27(%rip),%rcx        # 11cf0 <_ZNSt8__detailL19__atomic_spin_countE+0xf4>
    d2c9:	48 89 ce             	mov    %rcx,%rsi
    d2cc:	48 89 c7             	mov    %rax,%rdi
    d2cf:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties =
    d2d1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d2d5:	48 89 42 48          	mov    %rax,0x48(%rdx)
        vkCreateDevice = PFN_vkCreateDevice( vkGetInstanceProcAddr( instance, "vkCreateDevice" ) );
    d2d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2dd:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d2e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2e5:	48 8d 0d 28 4a 00 00 	lea    0x4a28(%rip),%rcx        # 11d14 <_ZNSt8__detailL19__atomic_spin_countE+0x118>
    d2ec:	48 89 ce             	mov    %rcx,%rsi
    d2ef:	48 89 c7             	mov    %rax,%rdi
    d2f2:	ff d2                	call   *%rdx
    d2f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d2f8:	48 89 42 58          	mov    %rax,0x58(%rdx)
          PFN_vkEnumerateDeviceExtensionProperties( vkGetInstanceProcAddr( instance, "vkEnumerateDeviceExtensionProperties" ) );
    d2fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d300:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d304:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d308:	48 8d 0d 19 4a 00 00 	lea    0x4a19(%rip),%rcx        # 11d28 <_ZNSt8__detailL19__atomic_spin_countE+0x12c>
    d30f:	48 89 ce             	mov    %rcx,%rsi
    d312:	48 89 c7             	mov    %rax,%rdi
    d315:	ff d2                	call   *%rdx
        vkEnumerateDeviceExtensionProperties =
    d317:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d31b:	48 89 42 60          	mov    %rax,0x60(%rdx)
        vkEnumerateDeviceLayerProperties = PFN_vkEnumerateDeviceLayerProperties( vkGetInstanceProcAddr( instance, "vkEnumerateDeviceLayerProperties" ) );
    d31f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d323:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d32b:	48 8d 0d 1e 4a 00 00 	lea    0x4a1e(%rip),%rcx        # 11d50 <_ZNSt8__detailL19__atomic_spin_countE+0x154>
    d332:	48 89 ce             	mov    %rcx,%rsi
    d335:	48 89 c7             	mov    %rax,%rdi
    d338:	ff d2                	call   *%rdx
    d33a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d33e:	48 89 42 68          	mov    %rax,0x68(%rdx)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties" ) );
    d342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d346:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d34a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d34e:	48 8d 0d 23 4a 00 00 	lea    0x4a23(%rip),%rcx        # 11d78 <_ZNSt8__detailL19__atomic_spin_countE+0x17c>
    d355:	48 89 ce             	mov    %rcx,%rsi
    d358:	48 89 c7             	mov    %rax,%rdi
    d35b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties =
    d35d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d361:	48 89 42 70          	mov    %rax,0x70(%rdx)
        vkEnumeratePhysicalDeviceGroups = PFN_vkEnumeratePhysicalDeviceGroups( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceGroups" ) );
    d365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d369:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d36d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d371:	48 8d 0d 30 4a 00 00 	lea    0x4a30(%rip),%rcx        # 11da8 <_ZNSt8__detailL19__atomic_spin_countE+0x1ac>
    d378:	48 89 ce             	mov    %rcx,%rsi
    d37b:	48 89 c7             	mov    %rax,%rdi
    d37e:	ff d2                	call   *%rdx
    d380:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d384:	48 89 42 78          	mov    %rax,0x78(%rdx)
        vkGetPhysicalDeviceFeatures2    = PFN_vkGetPhysicalDeviceFeatures2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures2" ) );
    d388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d38c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d390:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d394:	48 8d 0d 2d 4a 00 00 	lea    0x4a2d(%rip),%rcx        # 11dc8 <_ZNSt8__detailL19__atomic_spin_countE+0x1cc>
    d39b:	48 89 ce             	mov    %rcx,%rsi
    d39e:	48 89 c7             	mov    %rax,%rdi
    d3a1:	ff d2                	call   *%rdx
    d3a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d3a7:	48 89 82 80 00 00 00 	mov    %rax,0x80(%rdx)
        vkGetPhysicalDeviceProperties2  = PFN_vkGetPhysicalDeviceProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties2" ) );
    d3ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3b2:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d3b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3ba:	48 8d 0d 27 4a 00 00 	lea    0x4a27(%rip),%rcx        # 11de8 <_ZNSt8__detailL19__atomic_spin_countE+0x1ec>
    d3c1:	48 89 ce             	mov    %rcx,%rsi
    d3c4:	48 89 c7             	mov    %rax,%rdi
    d3c7:	ff d2                	call   *%rdx
    d3c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d3cd:	48 89 82 88 00 00 00 	mov    %rax,0x88(%rdx)
          PFN_vkGetPhysicalDeviceFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties2" ) );
    d3d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3d8:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d3dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3e0:	48 8d 0d 21 4a 00 00 	lea    0x4a21(%rip),%rcx        # 11e08 <_ZNSt8__detailL19__atomic_spin_countE+0x20c>
    d3e7:	48 89 ce             	mov    %rcx,%rsi
    d3ea:	48 89 c7             	mov    %rax,%rdi
    d3ed:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties2 =
    d3ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d3f3:	48 89 82 90 00 00 00 	mov    %rax,0x90(%rdx)
          PFN_vkGetPhysicalDeviceImageFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties2" ) );
    d3fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3fe:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d402:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d406:	48 8d 0d 23 4a 00 00 	lea    0x4a23(%rip),%rcx        # 11e30 <_ZNSt8__detailL19__atomic_spin_countE+0x234>
    d40d:	48 89 ce             	mov    %rcx,%rsi
    d410:	48 89 c7             	mov    %rax,%rdi
    d413:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties2 =
    d415:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d419:	48 89 82 98 00 00 00 	mov    %rax,0x98(%rdx)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties2" ) );
    d420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d424:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d428:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d42c:	48 8d 0d 2d 4a 00 00 	lea    0x4a2d(%rip),%rcx        # 11e60 <_ZNSt8__detailL19__atomic_spin_countE+0x264>
    d433:	48 89 ce             	mov    %rcx,%rsi
    d436:	48 89 c7             	mov    %rax,%rdi
    d439:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties2 =
    d43b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d43f:	48 89 82 a0 00 00 00 	mov    %rax,0xa0(%rdx)
          PFN_vkGetPhysicalDeviceMemoryProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties2" ) );
    d446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d44a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d44e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d452:	48 8d 0d 37 4a 00 00 	lea    0x4a37(%rip),%rcx        # 11e90 <_ZNSt8__detailL19__atomic_spin_countE+0x294>
    d459:	48 89 ce             	mov    %rcx,%rsi
    d45c:	48 89 c7             	mov    %rax,%rdi
    d45f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties2 =
    d461:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d465:	48 89 82 a8 00 00 00 	mov    %rax,0xa8(%rdx)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties2" ) );
    d46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d470:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d474:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d478:	48 8d 0d 39 4a 00 00 	lea    0x4a39(%rip),%rcx        # 11eb8 <_ZNSt8__detailL19__atomic_spin_countE+0x2bc>
    d47f:	48 89 ce             	mov    %rcx,%rsi
    d482:	48 89 c7             	mov    %rax,%rdi
    d485:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties2 =
    d487:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d48b:	48 89 82 b0 00 00 00 	mov    %rax,0xb0(%rdx)
          PFN_vkGetPhysicalDeviceExternalBufferProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalBufferProperties" ) );
    d492:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d496:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d49a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d49e:	48 8d 0d 43 4a 00 00 	lea    0x4a43(%rip),%rcx        # 11ee8 <_ZNSt8__detailL19__atomic_spin_countE+0x2ec>
    d4a5:	48 89 ce             	mov    %rcx,%rsi
    d4a8:	48 89 c7             	mov    %rax,%rdi
    d4ab:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalBufferProperties =
    d4ad:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d4b1:	48 89 82 b8 00 00 00 	mov    %rax,0xb8(%rdx)
          PFN_vkGetPhysicalDeviceExternalFenceProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalFenceProperties" ) );
    d4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4bc:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d4c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4c4:	48 8d 0d 4d 4a 00 00 	lea    0x4a4d(%rip),%rcx        # 11f18 <_ZNSt8__detailL19__atomic_spin_countE+0x31c>
    d4cb:	48 89 ce             	mov    %rcx,%rsi
    d4ce:	48 89 c7             	mov    %rax,%rdi
    d4d1:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalFenceProperties =
    d4d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d4d7:	48 89 82 c0 00 00 00 	mov    %rax,0xc0(%rdx)
          PFN_vkGetPhysicalDeviceExternalSemaphoreProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalSemaphoreProperties" ) );
    d4de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4e2:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d4e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4ea:	48 8d 0d 57 4a 00 00 	lea    0x4a57(%rip),%rcx        # 11f48 <_ZNSt8__detailL19__atomic_spin_countE+0x34c>
    d4f1:	48 89 ce             	mov    %rcx,%rsi
    d4f4:	48 89 c7             	mov    %rax,%rdi
    d4f7:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalSemaphoreProperties =
    d4f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d4fd:	48 89 82 c8 00 00 00 	mov    %rax,0xc8(%rdx)
        vkGetPhysicalDeviceToolProperties = PFN_vkGetPhysicalDeviceToolProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceToolProperties" ) );
    d504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d508:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d50c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d510:	48 8d 0d 61 4a 00 00 	lea    0x4a61(%rip),%rcx        # 11f78 <_ZNSt8__detailL19__atomic_spin_countE+0x37c>
    d517:	48 89 ce             	mov    %rcx,%rsi
    d51a:	48 89 c7             	mov    %rax,%rdi
    d51d:	ff d2                	call   *%rdx
    d51f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d523:	48 89 82 d0 00 00 00 	mov    %rax,0xd0(%rdx)
        vkAcquireDrmDisplayEXT = PFN_vkAcquireDrmDisplayEXT( vkGetInstanceProcAddr( instance, "vkAcquireDrmDisplayEXT" ) );
    d52a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d52e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d532:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d536:	48 8d 0d 5d 4a 00 00 	lea    0x4a5d(%rip),%rcx        # 11f9a <_ZNSt8__detailL19__atomic_spin_countE+0x39e>
    d53d:	48 89 ce             	mov    %rcx,%rsi
    d540:	48 89 c7             	mov    %rax,%rdi
    d543:	ff d2                	call   *%rdx
    d545:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d549:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)
        vkGetDrmDisplayEXT     = PFN_vkGetDrmDisplayEXT( vkGetInstanceProcAddr( instance, "vkGetDrmDisplayEXT" ) );
    d550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d554:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d558:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d55c:	48 8d 0d 4e 4a 00 00 	lea    0x4a4e(%rip),%rcx        # 11fb1 <_ZNSt8__detailL19__atomic_spin_countE+0x3b5>
    d563:	48 89 ce             	mov    %rcx,%rsi
    d566:	48 89 c7             	mov    %rax,%rdi
    d569:	ff d2                	call   *%rdx
    d56b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d56f:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)
          PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT" ) );
    d576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d57a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d57e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d582:	48 8d 0d 3f 4a 00 00 	lea    0x4a3f(%rip),%rcx        # 11fc8 <_ZNSt8__detailL19__atomic_spin_countE+0x3cc>
    d589:	48 89 ce             	mov    %rcx,%rsi
    d58c:	48 89 c7             	mov    %rax,%rdi
    d58f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceCalibrateableTimeDomainsEXT =
    d591:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d595:	48 89 82 f8 00 00 00 	mov    %rax,0xf8(%rdx)
        vkCreateDebugReportCallbackEXT  = PFN_vkCreateDebugReportCallbackEXT( vkGetInstanceProcAddr( instance, "vkCreateDebugReportCallbackEXT" ) );
    d59c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5a0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d5a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5a8:	48 8d 0d 49 4a 00 00 	lea    0x4a49(%rip),%rcx        # 11ff8 <_ZNSt8__detailL19__atomic_spin_countE+0x3fc>
    d5af:	48 89 ce             	mov    %rcx,%rsi
    d5b2:	48 89 c7             	mov    %rax,%rdi
    d5b5:	ff d2                	call   *%rdx
    d5b7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d5bb:	48 89 82 00 01 00 00 	mov    %rax,0x100(%rdx)
        vkDestroyDebugReportCallbackEXT = PFN_vkDestroyDebugReportCallbackEXT( vkGetInstanceProcAddr( instance, "vkDestroyDebugReportCallbackEXT" ) );
    d5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5c6:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d5ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5ce:	48 8d 0d 43 4a 00 00 	lea    0x4a43(%rip),%rcx        # 12018 <_ZNSt8__detailL19__atomic_spin_countE+0x41c>
    d5d5:	48 89 ce             	mov    %rcx,%rsi
    d5d8:	48 89 c7             	mov    %rax,%rdi
    d5db:	ff d2                	call   *%rdx
    d5dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d5e1:	48 89 82 08 01 00 00 	mov    %rax,0x108(%rdx)
        vkDebugReportMessageEXT         = PFN_vkDebugReportMessageEXT( vkGetInstanceProcAddr( instance, "vkDebugReportMessageEXT" ) );
    d5e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5ec:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d5f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5f4:	48 8d 0d 3d 4a 00 00 	lea    0x4a3d(%rip),%rcx        # 12038 <_ZNSt8__detailL19__atomic_spin_countE+0x43c>
    d5fb:	48 89 ce             	mov    %rcx,%rsi
    d5fe:	48 89 c7             	mov    %rax,%rdi
    d601:	ff d2                	call   *%rdx
    d603:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d607:	48 89 82 10 01 00 00 	mov    %rax,0x110(%rdx)
        vkCreateDebugUtilsMessengerEXT  = PFN_vkCreateDebugUtilsMessengerEXT( vkGetInstanceProcAddr( instance, "vkCreateDebugUtilsMessengerEXT" ) );
    d60e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d612:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d616:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d61a:	48 8d 0d 2f 4a 00 00 	lea    0x4a2f(%rip),%rcx        # 12050 <_ZNSt8__detailL19__atomic_spin_countE+0x454>
    d621:	48 89 ce             	mov    %rcx,%rsi
    d624:	48 89 c7             	mov    %rax,%rdi
    d627:	ff d2                	call   *%rdx
    d629:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d62d:	48 89 82 18 01 00 00 	mov    %rax,0x118(%rdx)
        vkDestroyDebugUtilsMessengerEXT = PFN_vkDestroyDebugUtilsMessengerEXT( vkGetInstanceProcAddr( instance, "vkDestroyDebugUtilsMessengerEXT" ) );
    d634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d638:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d63c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d640:	48 8d 0d 29 4a 00 00 	lea    0x4a29(%rip),%rcx        # 12070 <_ZNSt8__detailL19__atomic_spin_countE+0x474>
    d647:	48 89 ce             	mov    %rcx,%rsi
    d64a:	48 89 c7             	mov    %rax,%rdi
    d64d:	ff d2                	call   *%rdx
    d64f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d653:	48 89 82 20 01 00 00 	mov    %rax,0x120(%rdx)
        vkSubmitDebugUtilsMessageEXT    = PFN_vkSubmitDebugUtilsMessageEXT( vkGetInstanceProcAddr( instance, "vkSubmitDebugUtilsMessageEXT" ) );
    d65a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d65e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d662:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d666:	48 8d 0d 23 4a 00 00 	lea    0x4a23(%rip),%rcx        # 12090 <_ZNSt8__detailL19__atomic_spin_countE+0x494>
    d66d:	48 89 ce             	mov    %rcx,%rsi
    d670:	48 89 c7             	mov    %rax,%rdi
    d673:	ff d2                	call   *%rdx
    d675:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d679:	48 89 82 28 01 00 00 	mov    %rax,0x128(%rdx)
        vkReleaseDisplayEXT = PFN_vkReleaseDisplayEXT( vkGetInstanceProcAddr( instance, "vkReleaseDisplayEXT" ) );
    d680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d684:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d688:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d68c:	48 8d 0d 1a 4a 00 00 	lea    0x4a1a(%rip),%rcx        # 120ad <_ZNSt8__detailL19__atomic_spin_countE+0x4b1>
    d693:	48 89 ce             	mov    %rcx,%rsi
    d696:	48 89 c7             	mov    %rax,%rdi
    d699:	ff d2                	call   *%rdx
    d69b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d69f:	48 89 82 30 01 00 00 	mov    %rax,0x130(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilities2EXT" ) );
    d6a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6aa:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d6ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6b2:	48 8d 0d 0f 4a 00 00 	lea    0x4a0f(%rip),%rcx        # 120c8 <_ZNSt8__detailL19__atomic_spin_countE+0x4cc>
    d6b9:	48 89 ce             	mov    %rcx,%rsi
    d6bc:	48 89 c7             	mov    %rax,%rdi
    d6bf:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilities2EXT =
    d6c1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d6c5:	48 89 82 48 01 00 00 	mov    %rax,0x148(%rdx)
        vkCreateHeadlessSurfaceEXT = PFN_vkCreateHeadlessSurfaceEXT( vkGetInstanceProcAddr( instance, "vkCreateHeadlessSurfaceEXT" ) );
    d6cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6d0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d6d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6d8:	48 8d 0d 14 4a 00 00 	lea    0x4a14(%rip),%rcx        # 120f3 <_ZNSt8__detailL19__atomic_spin_countE+0x4f7>
    d6df:	48 89 ce             	mov    %rcx,%rsi
    d6e2:	48 89 c7             	mov    %rax,%rdi
    d6e5:	ff d2                	call   *%rdx
    d6e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d6eb:	48 89 82 58 01 00 00 	mov    %rax,0x158(%rdx)
          PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMultisamplePropertiesEXT" ) );
    d6f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6f6:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d6fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6fe:	48 8d 0d 0b 4a 00 00 	lea    0x4a0b(%rip),%rcx        # 12110 <_ZNSt8__detailL19__atomic_spin_countE+0x514>
    d705:	48 89 ce             	mov    %rcx,%rsi
    d708:	48 89 c7             	mov    %rax,%rdi
    d70b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMultisamplePropertiesEXT =
    d70d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d711:	48 89 82 68 01 00 00 	mov    %rax,0x168(%rdx)
          PFN_vkGetPhysicalDeviceToolPropertiesEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceToolPropertiesEXT" ) );
    d718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d71c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d720:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d724:	48 8d 0d 15 4a 00 00 	lea    0x4a15(%rip),%rcx        # 12140 <_ZNSt8__detailL19__atomic_spin_countE+0x544>
    d72b:	48 89 ce             	mov    %rcx,%rsi
    d72e:	48 89 c7             	mov    %rax,%rdi
    d731:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceToolPropertiesEXT =
    d733:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d737:	48 89 82 70 01 00 00 	mov    %rax,0x170(%rdx)
        if ( !vkGetPhysicalDeviceToolProperties )
    d73e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d742:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    d749:	48 85 c0             	test   %rax,%rax
    d74c:	75 16                	jne    d764 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xba2>
          vkGetPhysicalDeviceToolProperties = vkGetPhysicalDeviceToolPropertiesEXT;
    d74e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d752:	48 8b 90 70 01 00 00 	mov    0x170(%rax),%rdx
    d759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d75d:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
          PFN_vkGetPhysicalDevicePresentRectanglesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDevicePresentRectanglesKHR" ) );
    d764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d768:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d76c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d770:	48 8d 0d f1 49 00 00 	lea    0x49f1(%rip),%rcx        # 12168 <_ZNSt8__detailL19__atomic_spin_countE+0x56c>
    d777:	48 89 ce             	mov    %rcx,%rsi
    d77a:	48 89 c7             	mov    %rax,%rdi
    d77d:	ff d2                	call   *%rdx
        vkGetPhysicalDevicePresentRectanglesKHR =
    d77f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d783:	48 89 82 90 01 00 00 	mov    %rax,0x190(%rdx)
        vkEnumeratePhysicalDeviceGroupsKHR = PFN_vkEnumeratePhysicalDeviceGroupsKHR( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceGroupsKHR" ) );
    d78a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d78e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d792:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d796:	48 8d 0d f3 49 00 00 	lea    0x49f3(%rip),%rcx        # 12190 <_ZNSt8__detailL19__atomic_spin_countE+0x594>
    d79d:	48 89 ce             	mov    %rcx,%rsi
    d7a0:	48 89 c7             	mov    %rax,%rdi
    d7a3:	ff d2                	call   *%rdx
    d7a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d7a9:	48 89 82 98 01 00 00 	mov    %rax,0x198(%rdx)
        if ( !vkEnumeratePhysicalDeviceGroups )
    d7b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7b4:	48 8b 40 78          	mov    0x78(%rax),%rax
    d7b8:	48 85 c0             	test   %rax,%rax
    d7bb:	75 13                	jne    d7d0 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xc0e>
          vkEnumeratePhysicalDeviceGroups = vkEnumeratePhysicalDeviceGroupsKHR;
    d7bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7c1:	48 8b 90 98 01 00 00 	mov    0x198(%rax),%rdx
    d7c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7cc:	48 89 50 78          	mov    %rdx,0x78(%rax)
          PFN_vkGetPhysicalDeviceDisplayPropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPropertiesKHR" ) );
    d7d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7d4:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d7d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d7dc:	48 8d 0d d5 49 00 00 	lea    0x49d5(%rip),%rcx        # 121b8 <_ZNSt8__detailL19__atomic_spin_countE+0x5bc>
    d7e3:	48 89 ce             	mov    %rcx,%rsi
    d7e6:	48 89 c7             	mov    %rax,%rdi
    d7e9:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPropertiesKHR =
    d7eb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d7ef:	48 89 82 a0 01 00 00 	mov    %rax,0x1a0(%rdx)
          PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR" ) );
    d7f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7fa:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d7fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d802:	48 8d 0d d7 49 00 00 	lea    0x49d7(%rip),%rcx        # 121e0 <_ZNSt8__detailL19__atomic_spin_countE+0x5e4>
    d809:	48 89 ce             	mov    %rcx,%rsi
    d80c:	48 89 c7             	mov    %rax,%rdi
    d80f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPlanePropertiesKHR =
    d811:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d815:	48 89 82 a8 01 00 00 	mov    %rax,0x1a8(%rdx)
          PFN_vkGetDisplayPlaneSupportedDisplaysKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneSupportedDisplaysKHR" ) );
    d81c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d820:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d824:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d828:	48 8d 0d e1 49 00 00 	lea    0x49e1(%rip),%rcx        # 12210 <_ZNSt8__detailL19__atomic_spin_countE+0x614>
    d82f:	48 89 ce             	mov    %rcx,%rsi
    d832:	48 89 c7             	mov    %rax,%rdi
    d835:	ff d2                	call   *%rdx
        vkGetDisplayPlaneSupportedDisplaysKHR =
    d837:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d83b:	48 89 82 b0 01 00 00 	mov    %rax,0x1b0(%rdx)
        vkGetDisplayModePropertiesKHR    = PFN_vkGetDisplayModePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayModePropertiesKHR" ) );
    d842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d846:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d84a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d84e:	48 8d 0d e1 49 00 00 	lea    0x49e1(%rip),%rcx        # 12236 <_ZNSt8__detailL19__atomic_spin_countE+0x63a>
    d855:	48 89 ce             	mov    %rcx,%rsi
    d858:	48 89 c7             	mov    %rax,%rdi
    d85b:	ff d2                	call   *%rdx
    d85d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d861:	48 89 82 b8 01 00 00 	mov    %rax,0x1b8(%rdx)
        vkCreateDisplayModeKHR           = PFN_vkCreateDisplayModeKHR( vkGetInstanceProcAddr( instance, "vkCreateDisplayModeKHR" ) );
    d868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d86c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d870:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d874:	48 8d 0d d9 49 00 00 	lea    0x49d9(%rip),%rcx        # 12254 <_ZNSt8__detailL19__atomic_spin_countE+0x658>
    d87b:	48 89 ce             	mov    %rcx,%rsi
    d87e:	48 89 c7             	mov    %rax,%rdi
    d881:	ff d2                	call   *%rdx
    d883:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d887:	48 89 82 c0 01 00 00 	mov    %rax,0x1c0(%rdx)
        vkGetDisplayPlaneCapabilitiesKHR = PFN_vkGetDisplayPlaneCapabilitiesKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneCapabilitiesKHR" ) );
    d88e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d892:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d896:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d89a:	48 8d 0d cf 49 00 00 	lea    0x49cf(%rip),%rcx        # 12270 <_ZNSt8__detailL19__atomic_spin_countE+0x674>
    d8a1:	48 89 ce             	mov    %rcx,%rsi
    d8a4:	48 89 c7             	mov    %rax,%rdi
    d8a7:	ff d2                	call   *%rdx
    d8a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d8ad:	48 89 82 c8 01 00 00 	mov    %rax,0x1c8(%rdx)
        vkCreateDisplayPlaneSurfaceKHR   = PFN_vkCreateDisplayPlaneSurfaceKHR( vkGetInstanceProcAddr( instance, "vkCreateDisplayPlaneSurfaceKHR" ) );
    d8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8b8:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d8bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d8c0:	48 8d 0d d1 49 00 00 	lea    0x49d1(%rip),%rcx        # 12298 <_ZNSt8__detailL19__atomic_spin_countE+0x69c>
    d8c7:	48 89 ce             	mov    %rcx,%rsi
    d8ca:	48 89 c7             	mov    %rax,%rdi
    d8cd:	ff d2                	call   *%rdx
    d8cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d8d3:	48 89 82 d0 01 00 00 	mov    %rax,0x1d0(%rdx)
          PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalFencePropertiesKHR" ) );
    d8da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8de:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d8e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d8e6:	48 8d 0d cb 49 00 00 	lea    0x49cb(%rip),%rcx        # 122b8 <_ZNSt8__detailL19__atomic_spin_countE+0x6bc>
    d8ed:	48 89 ce             	mov    %rcx,%rsi
    d8f0:	48 89 c7             	mov    %rax,%rdi
    d8f3:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalFencePropertiesKHR =
    d8f5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d8f9:	48 89 82 d8 01 00 00 	mov    %rax,0x1d8(%rdx)
        if ( !vkGetPhysicalDeviceExternalFenceProperties )
    d900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d904:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    d90b:	48 85 c0             	test   %rax,%rax
    d90e:	75 16                	jne    d926 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xd64>
          vkGetPhysicalDeviceExternalFenceProperties = vkGetPhysicalDeviceExternalFencePropertiesKHR;
    d910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d914:	48 8b 90 d8 01 00 00 	mov    0x1d8(%rax),%rdx
    d91b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d91f:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)
          PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalBufferPropertiesKHR" ) );
    d926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d92a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d92e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d932:	48 8d 0d af 49 00 00 	lea    0x49af(%rip),%rcx        # 122e8 <_ZNSt8__detailL19__atomic_spin_countE+0x6ec>
    d939:	48 89 ce             	mov    %rcx,%rsi
    d93c:	48 89 c7             	mov    %rax,%rdi
    d93f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalBufferPropertiesKHR =
    d941:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d945:	48 89 82 e0 01 00 00 	mov    %rax,0x1e0(%rdx)
        if ( !vkGetPhysicalDeviceExternalBufferProperties )
    d94c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d950:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
    d957:	48 85 c0             	test   %rax,%rax
    d95a:	75 16                	jne    d972 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xdb0>
          vkGetPhysicalDeviceExternalBufferProperties = vkGetPhysicalDeviceExternalBufferPropertiesKHR;
    d95c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d960:	48 8b 90 e0 01 00 00 	mov    0x1e0(%rax),%rdx
    d967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d96b:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
          PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR" ) );
    d972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d976:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d97a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d97e:	48 8d 0d 93 49 00 00 	lea    0x4993(%rip),%rcx        # 12318 <_ZNSt8__detailL19__atomic_spin_countE+0x71c>
    d985:	48 89 ce             	mov    %rcx,%rsi
    d988:	48 89 c7             	mov    %rax,%rdi
    d98b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalSemaphorePropertiesKHR =
    d98d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d991:	48 89 82 e8 01 00 00 	mov    %rax,0x1e8(%rdx)
        if ( !vkGetPhysicalDeviceExternalSemaphoreProperties )
    d998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d99c:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
    d9a3:	48 85 c0             	test   %rax,%rax
    d9a6:	75 16                	jne    d9be <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xdfc>
          vkGetPhysicalDeviceExternalSemaphoreProperties = vkGetPhysicalDeviceExternalSemaphorePropertiesKHR;
    d9a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9ac:	48 8b 90 e8 01 00 00 	mov    0x1e8(%rax),%rdx
    d9b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b7:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
          PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFragmentShadingRatesKHR" ) );
    d9be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9c2:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d9c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9ca:	48 8d 0d 7f 49 00 00 	lea    0x497f(%rip),%rcx        # 12350 <_ZNSt8__detailL19__atomic_spin_countE+0x754>
    d9d1:	48 89 ce             	mov    %rcx,%rsi
    d9d4:	48 89 c7             	mov    %rax,%rdi
    d9d7:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFragmentShadingRatesKHR =
    d9d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d9dd:	48 89 82 f0 01 00 00 	mov    %rax,0x1f0(%rdx)
          PFN_vkGetPhysicalDeviceDisplayProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayProperties2KHR" ) );
    d9e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9e8:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d9ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9f0:	48 8d 0d 89 49 00 00 	lea    0x4989(%rip),%rcx        # 12380 <_ZNSt8__detailL19__atomic_spin_countE+0x784>
    d9f7:	48 89 ce             	mov    %rcx,%rsi
    d9fa:	48 89 c7             	mov    %rax,%rdi
    d9fd:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayProperties2KHR =
    d9ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    da03:	48 89 82 f8 01 00 00 	mov    %rax,0x1f8(%rdx)
          PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPlaneProperties2KHR" ) );
    da0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da0e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    da12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da16:	48 8d 0d 93 49 00 00 	lea    0x4993(%rip),%rcx        # 123b0 <_ZNSt8__detailL19__atomic_spin_countE+0x7b4>
    da1d:	48 89 ce             	mov    %rcx,%rsi
    da20:	48 89 c7             	mov    %rax,%rdi
    da23:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPlaneProperties2KHR =
    da25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    da29:	48 89 82 00 02 00 00 	mov    %rax,0x200(%rdx)
        vkGetDisplayModeProperties2KHR    = PFN_vkGetDisplayModeProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetDisplayModeProperties2KHR" ) );
    da30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da34:	48 8b 50 50          	mov    0x50(%rax),%rdx
    da38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da3c:	48 8d 0d 9d 49 00 00 	lea    0x499d(%rip),%rcx        # 123e0 <_ZNSt8__detailL19__atomic_spin_countE+0x7e4>
    da43:	48 89 ce             	mov    %rcx,%rsi
    da46:	48 89 c7             	mov    %rax,%rdi
    da49:	ff d2                	call   *%rdx
    da4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    da4f:	48 89 82 08 02 00 00 	mov    %rax,0x208(%rdx)
        vkGetDisplayPlaneCapabilities2KHR = PFN_vkGetDisplayPlaneCapabilities2KHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneCapabilities2KHR" ) );
    da56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da5a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    da5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da62:	48 8d 0d 97 49 00 00 	lea    0x4997(%rip),%rcx        # 12400 <_ZNSt8__detailL19__atomic_spin_countE+0x804>
    da69:	48 89 ce             	mov    %rcx,%rsi
    da6c:	48 89 c7             	mov    %rax,%rdi
    da6f:	ff d2                	call   *%rdx
    da71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    da75:	48 89 82 10 02 00 00 	mov    %rax,0x210(%rdx)
        vkGetPhysicalDeviceFeatures2KHR = PFN_vkGetPhysicalDeviceFeatures2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures2KHR" ) );
    da7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da80:	48 8b 50 50          	mov    0x50(%rax),%rdx
    da84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da88:	48 8d 0d 99 49 00 00 	lea    0x4999(%rip),%rcx        # 12428 <_ZNSt8__detailL19__atomic_spin_countE+0x82c>
    da8f:	48 89 ce             	mov    %rcx,%rsi
    da92:	48 89 c7             	mov    %rax,%rdi
    da95:	ff d2                	call   *%rdx
    da97:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    da9b:	48 89 82 18 02 00 00 	mov    %rax,0x218(%rdx)
        if ( !vkGetPhysicalDeviceFeatures2 )
    daa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daa6:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    daad:	48 85 c0             	test   %rax,%rax
    dab0:	75 16                	jne    dac8 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf06>
          vkGetPhysicalDeviceFeatures2 = vkGetPhysicalDeviceFeatures2KHR;
    dab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dab6:	48 8b 90 18 02 00 00 	mov    0x218(%rax),%rdx
    dabd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dac1:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
        vkGetPhysicalDeviceProperties2KHR = PFN_vkGetPhysicalDeviceProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties2KHR" ) );
    dac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dacc:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dad0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dad4:	48 8d 0d 6d 49 00 00 	lea    0x496d(%rip),%rcx        # 12448 <_ZNSt8__detailL19__atomic_spin_countE+0x84c>
    dadb:	48 89 ce             	mov    %rcx,%rsi
    dade:	48 89 c7             	mov    %rax,%rdi
    dae1:	ff d2                	call   *%rdx
    dae3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dae7:	48 89 82 20 02 00 00 	mov    %rax,0x220(%rdx)
        if ( !vkGetPhysicalDeviceProperties2 )
    daee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daf2:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    daf9:	48 85 c0             	test   %rax,%rax
    dafc:	75 16                	jne    db14 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf52>
          vkGetPhysicalDeviceProperties2 = vkGetPhysicalDeviceProperties2KHR;
    dafe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db02:	48 8b 90 20 02 00 00 	mov    0x220(%rax),%rdx
    db09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db0d:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
          PFN_vkGetPhysicalDeviceFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties2KHR" ) );
    db14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db18:	48 8b 50 50          	mov    0x50(%rax),%rdx
    db1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db20:	48 8d 0d 49 49 00 00 	lea    0x4949(%rip),%rcx        # 12470 <_ZNSt8__detailL19__atomic_spin_countE+0x874>
    db27:	48 89 ce             	mov    %rcx,%rsi
    db2a:	48 89 c7             	mov    %rax,%rdi
    db2d:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties2KHR =
    db2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    db33:	48 89 82 28 02 00 00 	mov    %rax,0x228(%rdx)
        if ( !vkGetPhysicalDeviceFormatProperties2 )
    db3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db3e:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    db45:	48 85 c0             	test   %rax,%rax
    db48:	75 16                	jne    db60 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf9e>
          vkGetPhysicalDeviceFormatProperties2 = vkGetPhysicalDeviceFormatProperties2KHR;
    db4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db4e:	48 8b 90 28 02 00 00 	mov    0x228(%rax),%rdx
    db55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db59:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
          PFN_vkGetPhysicalDeviceImageFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties2KHR" ) );
    db60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db64:	48 8b 50 50          	mov    0x50(%rax),%rdx
    db68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db6c:	48 8d 0d 25 49 00 00 	lea    0x4925(%rip),%rcx        # 12498 <_ZNSt8__detailL19__atomic_spin_countE+0x89c>
    db73:	48 89 ce             	mov    %rcx,%rsi
    db76:	48 89 c7             	mov    %rax,%rdi
    db79:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties2KHR =
    db7b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    db7f:	48 89 82 30 02 00 00 	mov    %rax,0x230(%rdx)
        if ( !vkGetPhysicalDeviceImageFormatProperties2 )
    db86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db8a:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    db91:	48 85 c0             	test   %rax,%rax
    db94:	75 16                	jne    dbac <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xfea>
          vkGetPhysicalDeviceImageFormatProperties2 = vkGetPhysicalDeviceImageFormatProperties2KHR;
    db96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db9a:	48 8b 90 30 02 00 00 	mov    0x230(%rax),%rdx
    dba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dba5:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties2KHR" ) );
    dbac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbb0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dbb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbb8:	48 8d 0d 09 49 00 00 	lea    0x4909(%rip),%rcx        # 124c8 <_ZNSt8__detailL19__atomic_spin_countE+0x8cc>
    dbbf:	48 89 ce             	mov    %rcx,%rsi
    dbc2:	48 89 c7             	mov    %rax,%rdi
    dbc5:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties2KHR =
    dbc7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dbcb:	48 89 82 38 02 00 00 	mov    %rax,0x238(%rdx)
        if ( !vkGetPhysicalDeviceQueueFamilyProperties2 )
    dbd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbd6:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
    dbdd:	48 85 c0             	test   %rax,%rax
    dbe0:	75 16                	jne    dbf8 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x1036>
          vkGetPhysicalDeviceQueueFamilyProperties2 = vkGetPhysicalDeviceQueueFamilyProperties2KHR;
    dbe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbe6:	48 8b 90 38 02 00 00 	mov    0x238(%rax),%rdx
    dbed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbf1:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
          PFN_vkGetPhysicalDeviceMemoryProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties2KHR" ) );
    dbf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbfc:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dc00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc04:	48 8d 0d ed 48 00 00 	lea    0x48ed(%rip),%rcx        # 124f8 <_ZNSt8__detailL19__atomic_spin_countE+0x8fc>
    dc0b:	48 89 ce             	mov    %rcx,%rsi
    dc0e:	48 89 c7             	mov    %rax,%rdi
    dc11:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties2KHR =
    dc13:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc17:	48 89 82 40 02 00 00 	mov    %rax,0x240(%rdx)
        if ( !vkGetPhysicalDeviceMemoryProperties2 )
    dc1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc22:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
    dc29:	48 85 c0             	test   %rax,%rax
    dc2c:	75 16                	jne    dc44 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x1082>
          vkGetPhysicalDeviceMemoryProperties2 = vkGetPhysicalDeviceMemoryProperties2KHR;
    dc2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc32:	48 8b 90 40 02 00 00 	mov    0x240(%rax),%rdx
    dc39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc3d:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties2KHR" ) );
    dc44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc48:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dc4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc50:	48 8d 0d c9 48 00 00 	lea    0x48c9(%rip),%rcx        # 12520 <_ZNSt8__detailL19__atomic_spin_countE+0x924>
    dc57:	48 89 ce             	mov    %rcx,%rsi
    dc5a:	48 89 c7             	mov    %rax,%rdi
    dc5d:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties2KHR =
    dc5f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc63:	48 89 82 48 02 00 00 	mov    %rax,0x248(%rdx)
        if ( !vkGetPhysicalDeviceSparseImageFormatProperties2 )
    dc6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc6e:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
    dc75:	48 85 c0             	test   %rax,%rax
    dc78:	75 16                	jne    dc90 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x10ce>
          vkGetPhysicalDeviceSparseImageFormatProperties2 = vkGetPhysicalDeviceSparseImageFormatProperties2KHR;
    dc7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc7e:	48 8b 90 48 02 00 00 	mov    0x248(%rax),%rdx
    dc85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc89:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)
          PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilities2KHR" ) );
    dc90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc94:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dc98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc9c:	48 8d 0d b5 48 00 00 	lea    0x48b5(%rip),%rcx        # 12558 <_ZNSt8__detailL19__atomic_spin_countE+0x95c>
    dca3:	48 89 ce             	mov    %rcx,%rsi
    dca6:	48 89 c7             	mov    %rax,%rdi
    dca9:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilities2KHR =
    dcab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dcaf:	48 89 82 50 02 00 00 	mov    %rax,0x250(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceFormats2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceFormats2KHR" ) );
    dcb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcba:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dcbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dcc2:	48 8d 0d bf 48 00 00 	lea    0x48bf(%rip),%rcx        # 12588 <_ZNSt8__detailL19__atomic_spin_countE+0x98c>
    dcc9:	48 89 ce             	mov    %rcx,%rsi
    dccc:	48 89 c7             	mov    %rax,%rdi
    dccf:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceFormats2KHR =
    dcd1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dcd5:	48 89 82 58 02 00 00 	mov    %rax,0x258(%rdx)
          vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR" ) );
    dcdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dce0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dce4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dce8:	48 8d 0d c1 48 00 00 	lea    0x48c1(%rip),%rcx        # 125b0 <_ZNSt8__detailL19__atomic_spin_countE+0x9b4>
    dcef:	48 89 ce             	mov    %rcx,%rsi
    dcf2:	48 89 c7             	mov    %rax,%rdi
    dcf5:	ff d2                	call   *%rdx
        vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(
    dcf7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dcfb:	48 89 82 60 02 00 00 	mov    %rax,0x260(%rdx)
          vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR" ) );
    dd02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd06:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dd0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd0e:	48 8d 0d db 48 00 00 	lea    0x48db(%rip),%rcx        # 125f0 <_ZNSt8__detailL19__atomic_spin_countE+0x9f4>
    dd15:	48 89 ce             	mov    %rcx,%rsi
    dd18:	48 89 c7             	mov    %rax,%rdi
    dd1b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(
    dd1d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dd21:	48 89 82 68 02 00 00 	mov    %rax,0x268(%rdx)
        vkDestroySurfaceKHR = PFN_vkDestroySurfaceKHR( vkGetInstanceProcAddr( instance, "vkDestroySurfaceKHR" ) );
    dd28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd2c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dd30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd34:	48 8d 0d ed 48 00 00 	lea    0x48ed(%rip),%rcx        # 12628 <_ZNSt8__detailL19__atomic_spin_countE+0xa2c>
    dd3b:	48 89 ce             	mov    %rcx,%rsi
    dd3e:	48 89 c7             	mov    %rax,%rdi
    dd41:	ff d2                	call   *%rdx
    dd43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dd47:	48 89 82 70 02 00 00 	mov    %rax,0x270(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceSupportKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceSupportKHR" ) );
    dd4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd52:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dd56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd5a:	48 8d 0d df 48 00 00 	lea    0x48df(%rip),%rcx        # 12640 <_ZNSt8__detailL19__atomic_spin_countE+0xa44>
    dd61:	48 89 ce             	mov    %rcx,%rsi
    dd64:	48 89 c7             	mov    %rax,%rdi
    dd67:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceSupportKHR =
    dd69:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dd6d:	48 89 82 78 02 00 00 	mov    %rax,0x278(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR" ) );
    dd74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd78:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dd7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd80:	48 8d 0d e1 48 00 00 	lea    0x48e1(%rip),%rcx        # 12668 <_ZNSt8__detailL19__atomic_spin_countE+0xa6c>
    dd87:	48 89 ce             	mov    %rcx,%rsi
    dd8a:	48 89 c7             	mov    %rax,%rdi
    dd8d:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilitiesKHR =
    dd8f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dd93:	48 89 82 80 02 00 00 	mov    %rax,0x280(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceFormatsKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceFormatsKHR" ) );
    dd9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd9e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    dda2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dda6:	48 8d 0d eb 48 00 00 	lea    0x48eb(%rip),%rcx        # 12698 <_ZNSt8__detailL19__atomic_spin_countE+0xa9c>
    ddad:	48 89 ce             	mov    %rcx,%rsi
    ddb0:	48 89 c7             	mov    %rax,%rdi
    ddb3:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceFormatsKHR =
    ddb5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ddb9:	48 89 82 88 02 00 00 	mov    %rax,0x288(%rdx)
          PFN_vkGetPhysicalDeviceSurfacePresentModesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfacePresentModesKHR" ) );
    ddc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddc4:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ddc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ddcc:	48 8d 0d ed 48 00 00 	lea    0x48ed(%rip),%rcx        # 126c0 <_ZNSt8__detailL19__atomic_spin_countE+0xac4>
    ddd3:	48 89 ce             	mov    %rcx,%rsi
    ddd6:	48 89 c7             	mov    %rax,%rdi
    ddd9:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfacePresentModesKHR =
    dddb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dddf:	48 89 82 90 02 00 00 	mov    %rax,0x290(%rdx)
          PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV" ) );
    dde6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddea:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ddee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ddf2:	48 8d 0d f7 48 00 00 	lea    0x48f7(%rip),%rcx        # 126f0 <_ZNSt8__detailL19__atomic_spin_countE+0xaf4>
    ddf9:	48 89 ce             	mov    %rcx,%rsi
    ddfc:	48 89 c7             	mov    %rax,%rdi
    ddff:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceCooperativeMatrixPropertiesNV =
    de01:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de05:	48 89 82 10 03 00 00 	mov    %rax,0x310(%rdx)
          vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV" ) );
    de0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de10:	48 8b 50 50          	mov    0x50(%rax),%rdx
    de14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de18:	48 8d 0d 09 49 00 00 	lea    0x4909(%rip),%rcx        # 12728 <_ZNSt8__detailL19__atomic_spin_countE+0xb2c>
    de1f:	48 89 ce             	mov    %rcx,%rsi
    de22:	48 89 c7             	mov    %rax,%rdi
    de25:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(
    de27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de2b:	48 89 82 18 03 00 00 	mov    %rax,0x318(%rdx)
          PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV" ) );
    de32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de36:	48 8b 50 50          	mov    0x50(%rax),%rdx
    de3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de3e:	48 8d 0d 2b 49 00 00 	lea    0x492b(%rip),%rcx        # 12770 <_ZNSt8__detailL19__atomic_spin_countE+0xb74>
    de45:	48 89 ce             	mov    %rcx,%rsi
    de48:	48 89 c7             	mov    %rax,%rdi
    de4b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalImageFormatPropertiesNV =
    de4d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de51:	48 89 82 20 03 00 00 	mov    %rax,0x320(%rdx)
          PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceOpticalFlowImageFormatsNV" ) );
    de58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de5c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    de60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de64:	48 8d 0d 3d 49 00 00 	lea    0x493d(%rip),%rcx        # 127a8 <_ZNSt8__detailL19__atomic_spin_countE+0xbac>
    de6b:	48 89 ce             	mov    %rcx,%rsi
    de6e:	48 89 c7             	mov    %rax,%rdi
    de71:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceOpticalFlowImageFormatsNV =
    de73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de77:	48 89 82 28 03 00 00 	mov    %rax,0x328(%rdx)
        vkGetDeviceProcAddr = PFN_vkGetDeviceProcAddr( vkGetInstanceProcAddr( instance, "vkGetDeviceProcAddr" ) );
    de7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de82:	48 8b 50 50          	mov    0x50(%rax),%rdx
    de86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de8a:	48 8d 0d 44 49 00 00 	lea    0x4944(%rip),%rcx        # 127d5 <_ZNSt8__detailL19__atomic_spin_countE+0xbd9>
    de91:	48 89 ce             	mov    %rcx,%rsi
    de94:	48 89 c7             	mov    %rax,%rdi
    de97:	ff d2                	call   *%rdx
    de99:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de9d:	48 89 82 40 03 00 00 	mov    %rax,0x340(%rdx)
      }
    dea4:	90                   	nop
    dea5:	c9                   	leave
    dea6:	c3                   	ret
    dea7:	90                   	nop

000000000000dea8 <_ZNK2vk4raii7Context13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher const * getDispatcher() const
    dea8:	55                   	push   %rbp
    dea9:	48 89 e5             	mov    %rsp,%rbp
    deac:	48 83 ec 10          	sub    $0x10,%rsp
    deb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    deb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deb8:	48 83 c0 08          	add    $0x8,%rax
    debc:	48 89 c7             	mov    %rax,%rdi
    debf:	e8 ea 07 00 00       	call   e6ae <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEptEv>
    dec4:	48 89 c7             	mov    %rax,%rdi
    dec7:	e8 f6 85 ff ff       	call   64c2 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    decc:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    ded2:	74 28                	je     defc <_ZNK2vk4raii7Context13getDispatcherEv+0x54>
    ded4:	48 8d 05 15 49 00 00 	lea    0x4915(%rip),%rax        # 127f0 <_ZNSt8__detailL19__atomic_spin_countE+0xbf4>
    dedb:	48 89 c1             	mov    %rax,%rcx
    dede:	ba b1 09 00 00       	mov    $0x9b1,%edx
    dee3:	48 8d 05 56 49 00 00 	lea    0x4956(%rip),%rax        # 12840 <_ZNSt8__detailL19__atomic_spin_countE+0xc44>
    deea:	48 89 c6             	mov    %rax,%rsi
    deed:	48 8d 05 74 49 00 00 	lea    0x4974(%rip),%rax        # 12868 <_ZNSt8__detailL19__atomic_spin_countE+0xc6c>
    def4:	48 89 c7             	mov    %rax,%rdi
    def7:	e8 e4 71 ff ff       	call   50e0 <__assert_fail@plt>
        return &*m_dispatcher;
    defc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df00:	48 83 c0 08          	add    $0x8,%rax
    df04:	48 89 c7             	mov    %rax,%rdi
    df07:	e8 bc 07 00 00       	call   e6c8 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv>
      }
    df0c:	c9                   	leave
    df0d:	c3                   	ret

000000000000df0e <_ZN2vk8InstanceC1Ev>:
    VULKAN_HPP_CONSTEXPR Instance() = default;
    df0e:	55                   	push   %rbp
    df0f:	48 89 e5             	mov    %rsp,%rbp
    df12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df1a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    df21:	90                   	nop
    df22:	5d                   	pop    %rbp
    df23:	c3                   	ret

000000000000df24 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>:
      Instance( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Context const &                context,
    df24:	55                   	push   %rbp
    df25:	48 89 e5             	mov    %rsp,%rbp
    df28:	41 55                	push   %r13
    df2a:	41 54                	push   %r12
    df2c:	53                   	push   %rbx
    df2d:	48 83 ec 48          	sub    $0x48,%rsp
    df31:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    df35:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    df39:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    df3d:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
        : m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
    df41:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    df45:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    df4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    df50:	48 89 c7             	mov    %rax,%rdi
    df53:	e8 b6 ff ff ff       	call   df0e <_ZN2vk8InstanceC1Ev>
    df58:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    df5c:	48 89 c7             	mov    %rax,%rdi
    df5f:	e8 a6 07 00 00       	call   e70a <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
    df64:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    df68:	48 89 42 08          	mov    %rax,0x8(%rdx)
    df6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    df70:	48 83 c0 10          	add    $0x10,%rax
    df74:	48 89 c7             	mov    %rax,%rdi
    df77:	e8 d8 07 00 00       	call   e754 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1IS4_vEEv>
          static_cast<VULKAN_HPP_NAMESPACE::Result>( context.getDispatcher()->vkCreateInstance( reinterpret_cast<const VkInstanceCreateInfo *>( &createInfo ),
    df7c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    df80:	48 89 c7             	mov    %rax,%rdi
    df83:	e8 20 ff ff ff       	call   dea8 <_ZNK2vk4raii7Context13getDispatcherEv>
    df88:	4c 8b 40 18          	mov    0x18(%rax),%r8
                                                                                                reinterpret_cast<VkInstance *>( &m_instance ) ) );
    df8c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
                                                                                                reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ),
    df90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    df94:	48 8b 48 08          	mov    0x8(%rax),%rcx
          static_cast<VULKAN_HPP_NAMESPACE::Result>( context.getDispatcher()->vkCreateInstance( reinterpret_cast<const VkInstanceCreateInfo *>( &createInfo ),
    df98:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    df9c:	48 89 ce             	mov    %rcx,%rsi
    df9f:	48 89 c7             	mov    %rax,%rdi
    dfa2:	41 ff d0             	call   *%r8
    dfa5:	89 45 dc             	mov    %eax,-0x24(%rbp)
        if ( result != VULKAN_HPP_NAMESPACE::Result::eSuccess )
    dfa8:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    dfac:	74 14                	je     dfc2 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x9e>
          throwResultException( result, "vkCreateInstance" );
    dfae:	8b 45 dc             	mov    -0x24(%rbp),%eax
    dfb1:	48 8d 15 e8 48 00 00 	lea    0x48e8(%rip),%rdx        # 128a0 <_ZNSt8__detailL19__atomic_spin_countE+0xca4>
    dfb8:	48 89 d6             	mov    %rdx,%rsi
    dfbb:	89 c7                	mov    %eax,%edi
    dfbd:	e8 ad dc ff ff       	call   bc6f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    dfc2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dfc6:	48 8d 58 10          	lea    0x10(%rax),%rbx
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
    dfca:	bf 48 03 00 00       	mov    $0x348,%edi
    dfcf:	e8 0c 72 ff ff       	call   51e0 <_Znwm@plt>
    dfd4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    dfd8:	41 bd 01 00 00 00    	mov    $0x1,%r13d
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
    dfde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dfe2:	48 89 c7             	mov    %rax,%rdi
    dfe5:	e8 06 af ff ff       	call   8ef0 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    dfea:	49 89 c4             	mov    %rax,%r12
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    dfed:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dff1:	48 89 c7             	mov    %rax,%rdi
    dff4:	e8 af fe ff ff       	call   dea8 <_ZNK2vk4raii7Context13getDispatcherEv>
    dff9:	48 8b 40 10          	mov    0x10(%rax),%rax
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
    dffd:	4c 89 e2             	mov    %r12,%rdx
    e000:	48 89 c6             	mov    %rax,%rsi
    e003:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    e007:	e8 b6 eb ff ff       	call   cbc2 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    e00c:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    e010:	48 89 df             	mov    %rbx,%rdi
    e013:	e8 0e bc ff ff       	call   9c26 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
      }
    e018:	eb 36                	jmp    e050 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x12c>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    e01a:	48 89 c3             	mov    %rax,%rbx
    e01d:	45 84 ed             	test   %r13b,%r13b
    e020:	74 13                	je     e035 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x111>
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
    e022:	be 48 03 00 00       	mov    $0x348,%esi
    e027:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    e02b:	e8 c0 71 ff ff       	call   51f0 <_ZdlPvm@plt>
    e030:	eb 03                	jmp    e035 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x111>
      }
    e032:	48 89 c3             	mov    %rax,%rbx
    e035:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e039:	48 83 c0 10          	add    $0x10,%rax
    e03d:	48 89 c7             	mov    %rax,%rdi
    e040:	e8 7d bb ff ff       	call   9bc2 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>
    e045:	48 89 d8             	mov    %rbx,%rax
    e048:	48 89 c7             	mov    %rax,%rdi
    e04b:	e8 d0 72 ff ff       	call   5320 <_Unwind_Resume@plt>
    e050:	48 83 c4 48          	add    $0x48,%rsp
    e054:	5b                   	pop    %rbx
    e055:	41 5c                	pop    %r12
    e057:	41 5d                	pop    %r13
    e059:	5d                   	pop    %rbp
    e05a:	c3                   	ret
    e05b:	90                   	nop

000000000000e05c <_ZNK2vk4raii8InstancedeEv>:
      VULKAN_HPP_NAMESPACE::Instance const & operator*() const VULKAN_HPP_NOEXCEPT
    e05c:	55                   	push   %rbp
    e05d:	48 89 e5             	mov    %rsp,%rbp
    e060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        return m_instance;
    e064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e068:	5d                   	pop    %rbp
    e069:	c3                   	ret

000000000000e06a <_ZN2vk22DebugUtilsMessengerEXTC1Ev>:
    VULKAN_HPP_CONSTEXPR         DebugUtilsMessengerEXT() = default;
    e06a:	55                   	push   %rbp
    e06b:	48 89 e5             	mov    %rsp,%rbp
    e06e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e076:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e07d:	90                   	nop
    e07e:	5d                   	pop    %rbp
    e07f:	c3                   	ret

000000000000e080 <_ZN2vk4raii22DebugUtilsMessengerEXTC1ERKNS0_8InstanceERKNS_32DebugUtilsMessengerCreateInfoEXTENS_8OptionalIKNS_19AllocationCallbacksEEE>:
      DebugUtilsMessengerEXT( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Instance const &               instance,
    e080:	55                   	push   %rbp
    e081:	48 89 e5             	mov    %rsp,%rbp
    e084:	41 55                	push   %r13
    e086:	41 54                	push   %r12
    e088:	53                   	push   %rbx
    e089:	48 83 ec 38          	sub    $0x38,%rsp
    e08d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e091:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e095:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    e099:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
        : m_instance( *instance )
    e09d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e0a1:	48 89 c7             	mov    %rax,%rdi
    e0a4:	e8 b3 ff ff ff       	call   e05c <_ZNK2vk4raii8InstancedeEv>
    e0a9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e0ad:	48 8b 00             	mov    (%rax),%rax
    e0b0:	48 89 02             	mov    %rax,(%rdx)
        , m_dispatcher( instance.getDispatcher() )
    e0b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e0b7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e0be:	00 
    e0bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e0c3:	48 83 c0 08          	add    $0x8,%rax
    e0c7:	48 89 c7             	mov    %rax,%rdi
    e0ca:	e8 9b ff ff ff       	call   e06a <_ZN2vk22DebugUtilsMessengerEXTC1Ev>
        , m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
    e0cf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e0d3:	48 89 c7             	mov    %rax,%rdi
    e0d6:	e8 2f 06 00 00       	call   e70a <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
    e0db:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e0df:	48 89 42 10          	mov    %rax,0x10(%rdx)
        , m_dispatcher( instance.getDispatcher() )
    e0e3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e0e7:	48 89 c7             	mov    %rax,%rdi
    e0ea:	e8 77 b1 ff ff       	call   9266 <_ZNK2vk4raii8Instance13getDispatcherEv>
    e0ef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e0f3:	48 89 42 18          	mov    %rax,0x18(%rdx)
          instance.getDispatcher()->vkCreateDebugUtilsMessengerEXT( static_cast<VkInstance>( *instance ),
    e0f7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e0fb:	48 89 c7             	mov    %rax,%rdi
    e0fe:	e8 63 b1 ff ff       	call   9266 <_ZNK2vk4raii8Instance13getDispatcherEv>
    e103:	4c 8b a0 18 01 00 00 	mov    0x118(%rax),%r12
                                                                    reinterpret_cast<VkDebugUtilsMessengerEXT *>( &m_messenger ) ) );
    e10a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e10e:	4c 8d 68 08          	lea    0x8(%rax),%r13
                                                                    reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ),
    e112:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e116:	48 8b 58 10          	mov    0x10(%rax),%rbx
          instance.getDispatcher()->vkCreateDebugUtilsMessengerEXT( static_cast<VkInstance>( *instance ),
    e11a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e11e:	48 89 c7             	mov    %rax,%rdi
    e121:	e8 36 ff ff ff       	call   e05c <_ZNK2vk4raii8InstancedeEv>
    e126:	48 89 c7             	mov    %rax,%rdi
    e129:	e8 c2 ad ff ff       	call   8ef0 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    e12e:	48 89 c7             	mov    %rax,%rdi
    e131:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e135:	4c 89 e9             	mov    %r13,%rcx
    e138:	48 89 da             	mov    %rbx,%rdx
    e13b:	48 89 c6             	mov    %rax,%rsi
    e13e:	41 ff d4             	call   *%r12
    e141:	89 45 dc             	mov    %eax,-0x24(%rbp)
        if ( result != VULKAN_HPP_NAMESPACE::Result::eSuccess )
    e144:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    e148:	74 14                	je     e15e <_ZN2vk4raii22DebugUtilsMessengerEXTC1ERKNS0_8InstanceERKNS_32DebugUtilsMessengerCreateInfoEXTENS_8OptionalIKNS_19AllocationCallbacksEEE+0xde>
          throwResultException( result, "vkCreateDebugUtilsMessengerEXT" );
    e14a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e14d:	48 8d 15 fc 3e 00 00 	lea    0x3efc(%rip),%rdx        # 12050 <_ZNSt8__detailL19__atomic_spin_countE+0x454>
    e154:	48 89 d6             	mov    %rdx,%rsi
    e157:	89 c7                	mov    %eax,%edi
    e159:	e8 11 db ff ff       	call   bc6f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
      }
    e15e:	90                   	nop
    e15f:	48 83 c4 38          	add    $0x38,%rsp
    e163:	5b                   	pop    %rbx
    e164:	41 5c                	pop    %r12
    e166:	41 5d                	pop    %r13
    e168:	5d                   	pop    %rbp
    e169:	c3                   	ret

000000000000e16a <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    e16a:	55                   	push   %rbp
    e16b:	48 89 e5             	mov    %rsp,%rbp
    e16e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e172:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    e176:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e17a:	48 8b 10             	mov    (%rax),%rdx
    e17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e181:	48 8b 00             	mov    (%rax),%rax
    e184:	48 39 c2             	cmp    %rax,%rdx
    e187:	73 06                	jae    e18f <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    e189:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e18d:	eb 04                	jmp    e193 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    e18f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    e193:	5d                   	pop    %rbp
    e194:	c3                   	ret
    e195:	90                   	nop

000000000000e196 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    e196:	55                   	push   %rbp
    e197:	48 89 e5             	mov    %rsp,%rbp
    e19a:	48 83 ec 10          	sub    $0x10,%rsp
    e19e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e1a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1a6:	48 89 c7             	mov    %rax,%rdi
    e1a9:	e8 04 00 00 00       	call   e1b2 <_ZNSt15__new_allocatorIPKcEC2Ev>
    e1ae:	90                   	nop
    e1af:	c9                   	leave
    e1b0:	c3                   	ret
    e1b1:	90                   	nop

000000000000e1b2 <_ZNSt15__new_allocatorIPKcEC2Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e1b2:	55                   	push   %rbp
    e1b3:	48 89 e5             	mov    %rsp,%rbp
    e1b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e1ba:	90                   	nop
    e1bb:	5d                   	pop    %rbp
    e1bc:	c3                   	ret
    e1bd:	90                   	nop

000000000000e1be <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    e1be:	55                   	push   %rbp
    e1bf:	48 89 e5             	mov    %rsp,%rbp
    e1c2:	53                   	push   %rbx
    e1c3:	48 83 ec 38          	sub    $0x38,%rsp
    e1c7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e1cb:	48 89 f0             	mov    %rsi,%rax
    e1ce:	48 89 d6             	mov    %rdx,%rsi
    e1d1:	48 89 f2             	mov    %rsi,%rdx
    e1d4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    e1d8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e1dc:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    e1e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1e4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e1e8:	48 89 d6             	mov    %rdx,%rsi
    e1eb:	48 89 c7             	mov    %rax,%rdi
    e1ee:	e8 6f 00 00 00       	call   e262 <_ZNSt12_Vector_baseIPKcSaIS1_EEC2ERKS2_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    e1f3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e1f7:	48 89 c7             	mov    %rax,%rdi
    e1fa:	e8 57 01 00 00       	call   e356 <_ZNKSt16initializer_listIPKcE3endEv>
    e1ff:	48 89 c3             	mov    %rax,%rbx
    e202:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e206:	48 89 c7             	mov    %rax,%rdi
    e209:	e8 36 01 00 00       	call   e344 <_ZNKSt16initializer_listIPKcE5beginEv>
    e20e:	48 89 c1             	mov    %rax,%rcx
    e211:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e215:	48 89 da             	mov    %rbx,%rdx
    e218:	48 89 ce             	mov    %rcx,%rsi
    e21b:	48 89 c7             	mov    %rax,%rdi
    e21e:	e8 ad 01 00 00       	call   e3d0 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    e223:	eb 1a                	jmp    e23f <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    e225:	48 89 c3             	mov    %rax,%rbx
    e228:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e22c:	48 89 c7             	mov    %rax,%rdi
    e22f:	e8 4c 06 00 00       	call   e880 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    e234:	48 89 d8             	mov    %rbx,%rax
    e237:	48 89 c7             	mov    %rax,%rdi
    e23a:	e8 e1 70 ff ff       	call   5320 <_Unwind_Resume@plt>
    e23f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e243:	c9                   	leave
    e244:	c3                   	ret
    e245:	90                   	nop

000000000000e246 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    e246:	55                   	push   %rbp
    e247:	48 89 e5             	mov    %rsp,%rbp
    e24a:	48 83 ec 10          	sub    $0x10,%rsp
    e24e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e256:	48 89 c7             	mov    %rax,%rdi
    e259:	e8 0a 03 00 00       	call   e568 <_ZNSaIPKcED2Ev>
    e25e:	90                   	nop
    e25f:	c9                   	leave
    e260:	c3                   	ret
    e261:	90                   	nop

000000000000e262 <_ZNSt12_Vector_baseIPKcSaIS1_EEC2ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    e262:	55                   	push   %rbp
    e263:	48 89 e5             	mov    %rsp,%rbp
    e266:	48 83 ec 10          	sub    $0x10,%rsp
    e26a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e26e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    e272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e276:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e27a:	48 89 d6             	mov    %rdx,%rsi
    e27d:	48 89 c7             	mov    %rax,%rdi
    e280:	e8 03 00 00 00       	call   e288 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    e285:	90                   	nop
    e286:	c9                   	leave
    e287:	c3                   	ret

000000000000e288 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    e288:	55                   	push   %rbp
    e289:	48 89 e5             	mov    %rsp,%rbp
    e28c:	48 83 ec 10          	sub    $0x10,%rsp
    e290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e294:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    e298:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e29c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2a0:	48 89 d6             	mov    %rdx,%rsi
    e2a3:	48 89 c7             	mov    %rax,%rdi
    e2a6:	e8 0f 00 00 00       	call   e2ba <_ZNSaIPKcEC2ERKS1_>
    e2ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2af:	48 89 c7             	mov    %rax,%rdi
    e2b2:	e8 5f 00 00 00       	call   e316 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC2Ev>
	{ }
    e2b7:	90                   	nop
    e2b8:	c9                   	leave
    e2b9:	c3                   	ret

000000000000e2ba <_ZNSaIPKcEC2ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    e2ba:	55                   	push   %rbp
    e2bb:	48 89 e5             	mov    %rsp,%rbp
    e2be:	48 83 ec 10          	sub    $0x10,%rsp
    e2c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    e2ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2d2:	48 89 d6             	mov    %rdx,%rsi
    e2d5:	48 89 c7             	mov    %rax,%rdi
    e2d8:	e8 29 00 00 00       	call   e306 <_ZNSt15__new_allocatorIPKcEC2ERKS2_>
    e2dd:	90                   	nop
    e2de:	c9                   	leave
    e2df:	c3                   	ret

000000000000e2e0 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    e2e0:	55                   	push   %rbp
    e2e1:	48 89 e5             	mov    %rsp,%rbp
    e2e4:	48 83 ec 10          	sub    $0x10,%rsp
    e2e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    e2f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2f8:	48 89 d6             	mov    %rdx,%rsi
    e2fb:	48 89 c7             	mov    %rax,%rdi
    e2fe:	e8 03 00 00 00       	call   e306 <_ZNSt15__new_allocatorIPKcEC2ERKS2_>
    e303:	90                   	nop
    e304:	c9                   	leave
    e305:	c3                   	ret

000000000000e306 <_ZNSt15__new_allocatorIPKcEC2ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    e306:	55                   	push   %rbp
    e307:	48 89 e5             	mov    %rsp,%rbp
    e30a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e30e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e312:	90                   	nop
    e313:	5d                   	pop    %rbp
    e314:	c3                   	ret
    e315:	90                   	nop

000000000000e316 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC2Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    e316:	55                   	push   %rbp
    e317:	48 89 e5             	mov    %rsp,%rbp
    e31a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    e31e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e322:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e32d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e334:	00 
    e335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e339:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    e340:	00 
	{ }
    e341:	90                   	nop
    e342:	5d                   	pop    %rbp
    e343:	c3                   	ret

000000000000e344 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    e344:	55                   	push   %rbp
    e345:	48 89 e5             	mov    %rsp,%rbp
    e348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e34c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e350:	48 8b 00             	mov    (%rax),%rax
    e353:	5d                   	pop    %rbp
    e354:	c3                   	ret
    e355:	90                   	nop

000000000000e356 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    e356:	55                   	push   %rbp
    e357:	48 89 e5             	mov    %rsp,%rbp
    e35a:	53                   	push   %rbx
    e35b:	48 83 ec 18          	sub    $0x18,%rsp
    e35f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e363:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e367:	48 89 c7             	mov    %rax,%rdi
    e36a:	e8 d5 ff ff ff       	call   e344 <_ZNKSt16initializer_listIPKcE5beginEv>
    e36f:	48 89 c3             	mov    %rax,%rbx
    e372:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e376:	48 89 c7             	mov    %rax,%rdi
    e379:	e8 0e 00 00 00       	call   e38c <_ZNKSt16initializer_listIPKcE4sizeEv>
    e37e:	48 c1 e0 03          	shl    $0x3,%rax
    e382:	48 01 d8             	add    %rbx,%rax
    e385:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e389:	c9                   	leave
    e38a:	c3                   	ret
    e38b:	90                   	nop

000000000000e38c <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    e38c:	55                   	push   %rbp
    e38d:	48 89 e5             	mov    %rsp,%rbp
    e390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e398:	48 8b 40 08          	mov    0x8(%rax),%rax
    e39c:	5d                   	pop    %rbp
    e39d:	c3                   	ret

000000000000e39e <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    e39e:	55                   	push   %rbp
    e39f:	48 89 e5             	mov    %rsp,%rbp
    e3a2:	48 83 ec 10          	sub    $0x10,%rsp
    e3a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e3aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    e3ae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e3b2:	48 89 c7             	mov    %rax,%rdi
    e3b5:	e8 c5 00 00 00       	call   e47f <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    e3ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e3c2:	48 89 d6             	mov    %rdx,%rsi
    e3c5:	48 89 c7             	mov    %rax,%rdi
    e3c8:	e8 bd 00 00 00       	call   e48a <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    e3cd:	c9                   	leave
    e3ce:	c3                   	ret
    e3cf:	90                   	nop

000000000000e3d0 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    e3d0:	55                   	push   %rbp
    e3d1:	48 89 e5             	mov    %rsp,%rbp
    e3d4:	53                   	push   %rbx
    e3d5:	48 83 ec 38          	sub    $0x38,%rsp
    e3d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e3dd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e3e1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    e3e5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e3e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e3ed:	48 89 d6             	mov    %rdx,%rsi
    e3f0:	48 89 c7             	mov    %rax,%rdi
    e3f3:	e8 a6 ff ff ff       	call   e39e <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    e3f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    e3fc:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e400:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e404:	48 89 c7             	mov    %rax,%rdi
    e407:	e8 98 00 00 00       	call   e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e40c:	48 89 c2             	mov    %rax,%rdx
    e40f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e413:	48 89 d6             	mov    %rdx,%rsi
    e416:	48 89 c7             	mov    %rax,%rdi
    e419:	e8 94 00 00 00       	call   e4b2 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    e41e:	48 89 c6             	mov    %rax,%rsi
    e421:	48 89 df             	mov    %rbx,%rdi
    e424:	e8 57 01 00 00       	call   e580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    e429:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e42d:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    e430:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e434:	48 8b 00             	mov    (%rax),%rax
    e437:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e43b:	48 c1 e2 03          	shl    $0x3,%rdx
    e43f:	48 01 c2             	add    %rax,%rdx
    e442:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e446:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    e44a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e44e:	48 89 c7             	mov    %rax,%rdi
    e451:	e8 4e 00 00 00       	call   e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e456:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    e459:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e45d:	48 8b 10             	mov    (%rax),%rdx
    e460:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    e464:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e468:	48 89 c7             	mov    %rax,%rdi
    e46b:	e8 5d 04 00 00       	call   e8cd <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    e470:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e474:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    e478:	90                   	nop
    e479:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e47d:	c9                   	leave
    e47e:	c3                   	ret

000000000000e47f <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    e47f:	55                   	push   %rbp
    e480:	48 89 e5             	mov    %rsp,%rbp
    e483:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    e487:	90                   	nop
    e488:	5d                   	pop    %rbp
    e489:	c3                   	ret

000000000000e48a <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    e48a:	55                   	push   %rbp
    e48b:	48 89 e5             	mov    %rsp,%rbp
    e48e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e492:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    e496:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e49a:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    e49e:	48 c1 f8 03          	sar    $0x3,%rax
    }
    e4a2:	5d                   	pop    %rbp
    e4a3:	c3                   	ret

000000000000e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e4a4:	55                   	push   %rbp
    e4a5:	48 89 e5             	mov    %rsp,%rbp
    e4a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e4ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4b0:	5d                   	pop    %rbp
    e4b1:	c3                   	ret

000000000000e4b2 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    e4b2:	55                   	push   %rbp
    e4b3:	48 89 e5             	mov    %rsp,%rbp
    e4b6:	53                   	push   %rbx
    e4b7:	48 83 ec 28          	sub    $0x28,%rsp
    e4bb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e4bf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    e4c3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e4c7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e4cb:	48 89 d6             	mov    %rdx,%rsi
    e4ce:	48 89 c7             	mov    %rax,%rdi
    e4d1:	e8 0a fe ff ff       	call   e2e0 <_ZNSaIPKcEC1ERKS1_>
    e4d6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e4da:	48 89 c7             	mov    %rax,%rdi
    e4dd:	e8 44 00 00 00       	call   e526 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    e4e2:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e4e6:	0f 92 c3             	setb   %bl
    e4e9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e4ed:	48 89 c7             	mov    %rax,%rdi
    e4f0:	e8 7f 00 00 00       	call   e574 <_ZNSaIPKcED1Ev>
    e4f5:	84 db                	test   %bl,%bl
    e4f7:	74 0f                	je     e508 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    e4f9:	48 8d 05 28 44 00 00 	lea    0x4428(%rip),%rax        # 12928 <_ZNSt8__detailL19__atomic_spin_countE+0xd2c>
    e500:	48 89 c7             	mov    %rax,%rdi
    e503:	e8 b8 6b ff ff       	call   50c0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    e508:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    e50c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e510:	c9                   	leave
    e511:	c3                   	ret

000000000000e512 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e512:	55                   	push   %rbp
    e513:	48 89 e5             	mov    %rsp,%rbp
    e516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
    e51a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e521:	ff ff 1f 
      }
    e524:	5d                   	pop    %rbp
    e525:	c3                   	ret

000000000000e526 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    e526:	55                   	push   %rbp
    e527:	48 89 e5             	mov    %rsp,%rbp
    e52a:	48 83 ec 20          	sub    $0x20,%rsp
    e52e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    e532:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    e539:	ff ff 0f 
    e53c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    e540:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e544:	48 89 c7             	mov    %rax,%rdi
    e547:	e8 c6 ff ff ff       	call   e512 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    e54c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    e550:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    e554:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e558:	48 89 d6             	mov    %rdx,%rsi
    e55b:	48 89 c7             	mov    %rax,%rdi
    e55e:	e8 07 fc ff ff       	call   e16a <_ZSt3minImERKT_S2_S2_>
    e563:	48 8b 00             	mov    (%rax),%rax
      }
    e566:	c9                   	leave
    e567:	c3                   	ret

000000000000e568 <_ZNSaIPKcED2Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    e568:	55                   	push   %rbp
    e569:	48 89 e5             	mov    %rsp,%rbp
    e56c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e570:	90                   	nop
    e571:	5d                   	pop    %rbp
    e572:	c3                   	ret
    e573:	90                   	nop

000000000000e574 <_ZNSaIPKcED1Ev>:
    e574:	55                   	push   %rbp
    e575:	48 89 e5             	mov    %rsp,%rbp
    e578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e57c:	90                   	nop
    e57d:	5d                   	pop    %rbp
    e57e:	c3                   	ret
    e57f:	90                   	nop

000000000000e580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e580:	55                   	push   %rbp
    e581:	48 89 e5             	mov    %rsp,%rbp
    e584:	48 83 ec 10          	sub    $0x10,%rsp
    e588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e58c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e590:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e595:	74 15                	je     e5ac <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    e597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e59b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e59f:	48 89 d6             	mov    %rdx,%rsi
    e5a2:	48 89 c7             	mov    %rax,%rdi
    e5a5:	e8 09 00 00 00       	call   e5b3 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    e5aa:	eb 05                	jmp    e5b1 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    e5ac:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    e5b1:	c9                   	leave
    e5b2:	c3                   	ret

000000000000e5b3 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    e5b3:	55                   	push   %rbp
    e5b4:	48 89 e5             	mov    %rsp,%rbp
    e5b7:	48 83 ec 20          	sub    $0x20,%rsp
    e5bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e5bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e5c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e5cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e5cf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
    e5d3:	e8 36 7b ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    e5d8:	84 c0                	test   %al,%al
    e5da:	74 43                	je     e61f <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m+0x6c>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
    e5dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e5e0:	b9 00 00 00 00       	mov    $0x0,%ecx
    e5e5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e5ec:	00 
    e5ed:	48 c1 e8 3d          	shr    $0x3d,%rax
    e5f1:	48 85 c0             	test   %rax,%rax
    e5f4:	74 05                	je     e5fb <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m+0x48>
    e5f6:	b9 01 00 00 00       	mov    $0x1,%ecx
    e5fb:	48 89 d0             	mov    %rdx,%rax
    e5fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e602:	48 89 c8             	mov    %rcx,%rax
    e605:	83 e0 01             	and    $0x1,%eax
    e608:	84 c0                	test   %al,%al
    e60a:	74 05                	je     e611 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m+0x5e>
	      std::__throw_bad_array_new_length();
    e60c:	e8 2f 6b ff ff       	call   5140 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
    e611:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e615:	48 89 c7             	mov    %rax,%rdi
    e618:	e8 c3 6b ff ff       	call   51e0 <_Znwm@plt>
    e61d:	eb 19                	jmp    e638 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m+0x85>
	return __allocator_base<_Tp>::allocate(__n, 0);
    e61f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e627:	ba 00 00 00 00       	mov    $0x0,%edx
    e62c:	48 89 ce             	mov    %rcx,%rsi
    e62f:	48 89 c7             	mov    %rax,%rdi
    e632:	e8 eb 02 00 00       	call   e922 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    e637:	90                   	nop
      { return __a.allocate(__n); }
    e638:	c9                   	leave
    e639:	c3                   	ret

000000000000e63a <_ZN2vk5FlagsINS_36DebugUtilsMessengerCreateFlagBitsEXTEEC1Ev>:
    VULKAN_HPP_CONSTEXPR Flags() VULKAN_HPP_NOEXCEPT : m_mask( 0 ) {}
    e63a:	55                   	push   %rbp
    e63b:	48 89 e5             	mov    %rsp,%rbp
    e63e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e646:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e64c:	90                   	nop
    e64d:	5d                   	pop    %rbp
    e64e:	c3                   	ret
    e64f:	90                   	nop

000000000000e650 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e650:	55                   	push   %rbp
    e651:	48 89 e5             	mov    %rsp,%rbp
    e654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    e658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e65c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e664:	48 8b 00             	mov    (%rax),%rax
    e667:	48 29 c2             	sub    %rax,%rdx
    e66a:	48 89 d0             	mov    %rdx,%rax
    e66d:	48 c1 f8 03          	sar    $0x3,%rax
    e671:	5d                   	pop    %rbp
    e672:	c3                   	ret
    e673:	90                   	nop

000000000000e674 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    e674:	55                   	push   %rbp
    e675:	48 89 e5             	mov    %rsp,%rbp
    e678:	48 83 ec 10          	sub    $0x10,%rsp
    e67c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    e680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e684:	48 8b 10             	mov    (%rax),%rdx
    e687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e68b:	48 89 d6             	mov    %rdx,%rsi
    e68e:	48 89 c7             	mov    %rax,%rdi
    e691:	e8 9c 03 00 00       	call   ea32 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    e696:	c9                   	leave
    e697:	c3                   	ret

000000000000e698 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1Ev>:
    e698:	55                   	push   %rbp
    e699:	48 89 e5             	mov    %rsp,%rbp
    e69c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6a4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e6aa:	90                   	nop
    e6ab:	5d                   	pop    %rbp
    e6ac:	c3                   	ret
    e6ad:	90                   	nop

000000000000e6ae <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEptEv>:
      operator->() const noexcept
    e6ae:	55                   	push   %rbp
    e6af:	48 89 e5             	mov    %rsp,%rbp
    e6b2:	48 83 ec 10          	sub    $0x10,%rsp
    e6b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    e6ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6be:	48 89 c7             	mov    %rax,%rdi
    e6c1:	e8 98 03 00 00       	call   ea5e <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
      }
    e6c6:	c9                   	leave
    e6c7:	c3                   	ret

000000000000e6c8 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    e6c8:	55                   	push   %rbp
    e6c9:	48 89 e5             	mov    %rsp,%rbp
    e6cc:	48 83 ec 10          	sub    $0x10,%rsp
    e6d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    e6d4:	e8 35 7a ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    e6d9:	84 c0                	test   %al,%al
    e6db:	74 18                	je     e6f5 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    e6dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6e1:	48 89 c7             	mov    %rax,%rdi
    e6e4:	e8 75 03 00 00       	call   ea5e <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
    e6e9:	48 85 c0             	test   %rax,%rax
    e6ec:	75 07                	jne    e6f5 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    e6ee:	b8 01 00 00 00       	mov    $0x1,%eax
    e6f3:	eb 05                	jmp    e6fa <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x32>
    e6f5:	b8 00 00 00 00       	mov    $0x0,%eax
    e6fa:	84 c0                	test   %al,%al
	return *get();
    e6fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e700:	48 89 c7             	mov    %rax,%rdi
    e703:	e8 56 03 00 00       	call   ea5e <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
      }
    e708:	c9                   	leave
    e709:	c3                   	ret

000000000000e70a <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>:
    operator RefType *() const VULKAN_HPP_NOEXCEPT
    e70a:	55                   	push   %rbp
    e70b:	48 89 e5             	mov    %rsp,%rbp
    e70e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return m_ptr;
    e712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e716:	48 8b 00             	mov    (%rax),%rax
    }
    e719:	5d                   	pop    %rbp
    e71a:	c3                   	ret
    e71b:	90                   	nop

000000000000e71c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1Ev>:
      __uniq_ptr_impl() = default;
    e71c:	55                   	push   %rbp
    e71d:	48 89 e5             	mov    %rsp,%rbp
    e720:	48 83 ec 10          	sub    $0x10,%rsp
    e724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e72c:	48 89 c7             	mov    %rax,%rdi
    e72f:	e8 44 03 00 00       	call   ea78 <_ZNSt5tupleIJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>
    e734:	90                   	nop
    e735:	c9                   	leave
    e736:	c3                   	ret
    e737:	90                   	nop

000000000000e738 <_ZNSt15__uniq_ptr_dataIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    e738:	55                   	push   %rbp
    e739:	48 89 e5             	mov    %rsp,%rbp
    e73c:	48 83 ec 10          	sub    $0x10,%rsp
    e740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e748:	48 89 c7             	mov    %rax,%rdi
    e74b:	e8 cc ff ff ff       	call   e71c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1Ev>
    e750:	90                   	nop
    e751:	c9                   	leave
    e752:	c3                   	ret
    e753:	90                   	nop

000000000000e754 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1IS4_vEEv>:
	constexpr unique_ptr() noexcept
    e754:	55                   	push   %rbp
    e755:	48 89 e5             	mov    %rsp,%rbp
    e758:	48 83 ec 10          	sub    $0x10,%rsp
    e75c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    e760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e764:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e76b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e76f:	48 89 c7             	mov    %rax,%rdi
    e772:	e8 c1 ff ff ff       	call   e738 <_ZNSt15__uniq_ptr_dataIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEv>
	{ }
    e777:	90                   	nop
    e778:	c9                   	leave
    e779:	c3                   	ret

000000000000e77a <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    e77a:	55                   	push   %rbp
    e77b:	48 89 e5             	mov    %rsp,%rbp
    e77e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e782:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    e786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e78a:	48 8b 10             	mov    (%rax),%rdx
    e78d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e791:	48 8b 00             	mov    (%rax),%rax
    e794:	48 39 c2             	cmp    %rax,%rdx
    e797:	73 06                	jae    e79f <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    e799:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e79d:	eb 04                	jmp    e7a3 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    e79f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    e7a3:	5d                   	pop    %rbp
    e7a4:	c3                   	ret
    e7a5:	90                   	nop

000000000000e7a6 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    e7a6:	55                   	push   %rbp
    e7a7:	48 89 e5             	mov    %rsp,%rbp
    e7aa:	53                   	push   %rbx
    e7ab:	48 83 ec 28          	sub    $0x28,%rsp
    e7af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e7b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e7b7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    e7bb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e7bf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e7c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e7c7:	48 89 d6             	mov    %rdx,%rsi
    e7ca:	48 89 c7             	mov    %rax,%rdi
    e7cd:	e8 e0 fc ff ff       	call   e4b2 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    e7d2:	48 89 c1             	mov    %rax,%rcx
    e7d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e7d9:	48 89 c2             	mov    %rax,%rdx
    e7dc:	48 89 ce             	mov    %rcx,%rsi
    e7df:	48 89 df             	mov    %rbx,%rdi
    e7e2:	e8 ad 02 00 00       	call   ea94 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    e7e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e7eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7ef:	48 89 d6             	mov    %rdx,%rsi
    e7f2:	48 89 c7             	mov    %rax,%rdi
    e7f5:	e8 f8 02 00 00       	call   eaf2 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    e7fa:	eb 1a                	jmp    e816 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    e7fc:	48 89 c3             	mov    %rax,%rbx
    e7ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e803:	48 89 c7             	mov    %rax,%rdi
    e806:	e8 75 00 00 00       	call   e880 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    e80b:	48 89 d8             	mov    %rbx,%rax
    e80e:	48 89 c7             	mov    %rax,%rdi
    e811:	e8 0a 6b ff ff       	call   5320 <_Unwind_Resume@plt>
    e816:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e81a:	c9                   	leave
    e81b:	c3                   	ret

000000000000e81c <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    e81c:	55                   	push   %rbp
    e81d:	48 89 e5             	mov    %rsp,%rbp
    e820:	48 83 ec 10          	sub    $0x10,%rsp
    e824:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    e828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e82c:	48 89 c7             	mov    %rax,%rdi
    e82f:	e8 70 fc ff ff       	call   e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e834:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    e837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e83b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e83f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e843:	48 8b 00             	mov    (%rax),%rax
    e846:	48 89 ce             	mov    %rcx,%rsi
    e849:	48 89 c7             	mov    %rax,%rdi
    e84c:	e8 e1 02 00 00       	call   eb32 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    e851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e855:	48 89 c7             	mov    %rax,%rdi
    e858:	e8 23 00 00 00       	call   e880 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    e85d:	90                   	nop
    e85e:	c9                   	leave
    e85f:	c3                   	ret

000000000000e860 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    e860:	55                   	push   %rbp
    e861:	48 89 e5             	mov    %rsp,%rbp
    e864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e868:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    e86c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e870:	48 8b 00             	mov    (%rax),%rax
    e873:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e877:	48 c1 e2 03          	shl    $0x3,%rdx
    e87b:	48 01 d0             	add    %rdx,%rax
      }
    e87e:	5d                   	pop    %rbp
    e87f:	c3                   	ret

000000000000e880 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    e880:	55                   	push   %rbp
    e881:	48 89 e5             	mov    %rsp,%rbp
    e884:	48 83 ec 10          	sub    $0x10,%rsp
    e888:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    e88c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e890:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e894:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e898:	48 8b 00             	mov    (%rax),%rax
    e89b:	48 29 c2             	sub    %rax,%rdx
    e89e:	48 89 d0             	mov    %rdx,%rax
    e8a1:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    e8a5:	48 89 c2             	mov    %rax,%rdx
    e8a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8ac:	48 8b 08             	mov    (%rax),%rcx
    e8af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8b3:	48 89 ce             	mov    %rcx,%rsi
    e8b6:	48 89 c7             	mov    %rax,%rdi
    e8b9:	e8 9e 02 00 00       	call   eb5c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    e8be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8c2:	48 89 c7             	mov    %rax,%rdi
    e8c5:	e8 7c f9 ff ff       	call   e246 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    e8ca:	90                   	nop
    e8cb:	c9                   	leave
    e8cc:	c3                   	ret

000000000000e8cd <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    e8cd:	55                   	push   %rbp
    e8ce:	48 89 e5             	mov    %rsp,%rbp
    e8d1:	48 83 ec 20          	sub    $0x20,%rsp
    e8d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e8dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e8e1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
			   _ForwardIterator __result, allocator<_Tp>&)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
    e8e5:	e8 41 78 ff ff       	call   612b <_ZSt21is_constant_evaluatedv>
    e8ea:	84 c0                	test   %al,%al
    e8ec:	74 19                	je     e907 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E+0x3a>
	return std::__do_uninit_copy(__first, __last, __result);
    e8ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e8f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e8f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8fa:	48 89 ce             	mov    %rcx,%rsi
    e8fd:	48 89 c7             	mov    %rax,%rdi
    e900:	e8 8c 02 00 00       	call   eb91 <_ZSt16__do_uninit_copyIPKPKcPS1_ET0_T_S6_S5_>
    e905:	eb 18                	jmp    e91f <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E+0x52>
#endif
      return std::uninitialized_copy(__first, __last, __result);
    e907:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e90b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e90f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e913:	48 89 ce             	mov    %rcx,%rsi
    e916:	48 89 c7             	mov    %rax,%rdi
    e919:	e8 c9 02 00 00       	call   ebe7 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    e91e:	90                   	nop
    }
    e91f:	c9                   	leave
    e920:	c3                   	ret
    e921:	90                   	nop

000000000000e922 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e922:	55                   	push   %rbp
    e923:	48 89 e5             	mov    %rsp,%rbp
    e926:	48 83 ec 20          	sub    $0x20,%rsp
    e92a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e92e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e932:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e93a:	48 89 c7             	mov    %rax,%rdi
    e93d:	e8 da 02 00 00       	call   ec1c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    e942:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e946:	0f 92 c0             	setb   %al
    e949:	0f b6 c0             	movzbl %al,%eax
    e94c:	48 85 c0             	test   %rax,%rax
    e94f:	0f 95 c0             	setne  %al
    e952:	84 c0                	test   %al,%al
    e954:	74 1a                	je     e970 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e956:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e95d:	ff ff 1f 
    e960:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e964:	73 05                	jae    e96b <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e966:	e8 d5 67 ff ff       	call   5140 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e96b:	e8 00 67 ff ff       	call   5070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e970:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e974:	48 c1 e0 03          	shl    $0x3,%rax
    e978:	48 89 c7             	mov    %rax,%rdi
    e97b:	e8 60 68 ff ff       	call   51e0 <_Znwm@plt>
    e980:	90                   	nop
      }
    e981:	c9                   	leave
    e982:	c3                   	ret
    e983:	90                   	nop

000000000000e984 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
    e984:	55                   	push   %rbp
    e985:	48 89 e5             	mov    %rsp,%rbp
    e988:	48 83 ec 10          	sub    $0x10,%rsp
    e98c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e990:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    e994:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e998:	48 89 c7             	mov    %rax,%rdi
    e99b:	e8 90 02 00 00       	call   ec30 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    e9a0:	48 89 c2             	mov    %rax,%rdx
    e9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9a7:	48 89 d6             	mov    %rdx,%rsi
    e9aa:	48 89 c7             	mov    %rax,%rdi
    e9ad:	e8 8c 02 00 00       	call   ec3e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    e9b2:	90                   	nop
    e9b3:	c9                   	leave
    e9b4:	c3                   	ret
    e9b5:	90                   	nop

000000000000e9b6 <_ZNSt6vectorIPKcSaIS1_EE9push_backERKS1_>:
      push_back(const value_type& __x)
    e9b6:	55                   	push   %rbp
    e9b7:	48 89 e5             	mov    %rsp,%rbp
    e9ba:	48 83 ec 10          	sub    $0x10,%rsp
    e9be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e9c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    e9c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9ca:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e9ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9d2:	48 8b 40 10          	mov    0x10(%rax),%rax
    e9d6:	48 39 c2             	cmp    %rax,%rdx
    e9d9:	74 31                	je     ea0c <_ZNSt6vectorIPKcSaIS1_EE9push_backERKS1_+0x56>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    e9db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9df:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e9e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9e7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e9eb:	48 89 ce             	mov    %rcx,%rsi
    e9ee:	48 89 c7             	mov    %rax,%rdi
    e9f1:	e8 ec 02 00 00       	call   ece2 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    e9f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9fa:	48 8b 40 08          	mov    0x8(%rax),%rax
    e9fe:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ea02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea06:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    ea0a:	eb 22                	jmp    ea2e <_ZNSt6vectorIPKcSaIS1_EE9push_backERKS1_+0x78>
	  _M_realloc_insert(end(), __x);
    ea0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea10:	48 89 c7             	mov    %rax,%rdi
    ea13:	e8 00 03 00 00       	call   ed18 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    ea18:	48 89 c1             	mov    %rax,%rcx
    ea1b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ea1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea23:	48 89 ce             	mov    %rcx,%rsi
    ea26:	48 89 c7             	mov    %rax,%rdi
    ea29:	e8 44 04 00 00       	call   ee72 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
      }
    ea2e:	90                   	nop
    ea2f:	c9                   	leave
    ea30:	c3                   	ret
    ea31:	90                   	nop

000000000000ea32 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ea32:	55                   	push   %rbp
    ea33:	48 89 e5             	mov    %rsp,%rbp
    ea36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ea3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea42:	5d                   	pop    %rbp
    ea43:	c3                   	ret

000000000000ea44 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>:
    Optional( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    ea44:	55                   	push   %rbp
    ea45:	48 89 e5             	mov    %rsp,%rbp
    ea48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      m_ptr = nullptr;
    ea50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    ea5b:	90                   	nop
    ea5c:	5d                   	pop    %rbp
    ea5d:	c3                   	ret

000000000000ea5e <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>:
      get() const noexcept
    ea5e:	55                   	push   %rbp
    ea5f:	48 89 e5             	mov    %rsp,%rbp
    ea62:	48 83 ec 10          	sub    $0x10,%rsp
    ea66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    ea6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea6e:	48 89 c7             	mov    %rax,%rdi
    ea71:	e8 8e 05 00 00       	call   f004 <_ZNKSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    ea76:	c9                   	leave
    ea77:	c3                   	ret

000000000000ea78 <_ZNSt5tupleIJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>:
	tuple()
    ea78:	55                   	push   %rbp
    ea79:	48 89 e5             	mov    %rsp,%rbp
    ea7c:	48 83 ec 10          	sub    $0x10,%rsp
    ea80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    ea84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea88:	48 89 c7             	mov    %rax,%rdi
    ea8b:	e8 92 05 00 00       	call   f022 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1Ev>
    ea90:	90                   	nop
    ea91:	c9                   	leave
    ea92:	c3                   	ret
    ea93:	90                   	nop

000000000000ea94 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    ea94:	55                   	push   %rbp
    ea95:	48 89 e5             	mov    %rsp,%rbp
    ea98:	53                   	push   %rbx
    ea99:	48 83 ec 28          	sub    $0x28,%rsp
    ea9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eaa1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    eaa5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    eaa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eaad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    eab1:	48 89 d6             	mov    %rdx,%rsi
    eab4:	48 89 c7             	mov    %rax,%rdi
    eab7:	e8 cc f7 ff ff       	call   e288 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    eabc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    eac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eac4:	48 89 d6             	mov    %rdx,%rsi
    eac7:	48 89 c7             	mov    %rax,%rdi
    eaca:	e8 7b 05 00 00       	call   f04a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    eacf:	eb 1a                	jmp    eaeb <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    ead1:	48 89 c3             	mov    %rax,%rbx
    ead4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ead8:	48 89 c7             	mov    %rax,%rdi
    eadb:	e8 66 f7 ff ff       	call   e246 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    eae0:	48 89 d8             	mov    %rbx,%rax
    eae3:	48 89 c7             	mov    %rax,%rdi
    eae6:	e8 35 68 ff ff       	call   5320 <_Unwind_Resume@plt>
    eaeb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    eaef:	c9                   	leave
    eaf0:	c3                   	ret
    eaf1:	90                   	nop

000000000000eaf2 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    eaf2:	55                   	push   %rbp
    eaf3:	48 89 e5             	mov    %rsp,%rbp
    eaf6:	48 83 ec 10          	sub    $0x10,%rsp
    eafa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eafe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    eb02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb06:	48 89 c7             	mov    %rax,%rdi
    eb09:	e8 96 f9 ff ff       	call   e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    eb0e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    eb11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb15:	48 8b 00             	mov    (%rax),%rax
    eb18:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eb1c:	48 89 ce             	mov    %rcx,%rsi
    eb1f:	48 89 c7             	mov    %rax,%rdi
    eb22:	e8 79 05 00 00       	call   f0a0 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    eb27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eb2b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    eb2f:	90                   	nop
    eb30:	c9                   	leave
    eb31:	c3                   	ret

000000000000eb32 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    eb32:	55                   	push   %rbp
    eb33:	48 89 e5             	mov    %rsp,%rbp
    eb36:	48 83 ec 20          	sub    $0x20,%rsp
    eb3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb42:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    eb46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eb4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb4e:	48 89 d6             	mov    %rdx,%rsi
    eb51:	48 89 c7             	mov    %rax,%rdi
    eb54:	e8 70 05 00 00       	call   f0c9 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    eb59:	90                   	nop
    eb5a:	c9                   	leave
    eb5b:	c3                   	ret

000000000000eb5c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    eb5c:	55                   	push   %rbp
    eb5d:	48 89 e5             	mov    %rsp,%rbp
    eb60:	48 83 ec 20          	sub    $0x20,%rsp
    eb64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    eb70:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eb75:	74 17                	je     eb8e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    eb77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb7f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eb83:	48 89 ce             	mov    %rcx,%rsi
    eb86:	48 89 c7             	mov    %rax,%rdi
    eb89:	e8 7e 05 00 00       	call   f10c <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    eb8e:	90                   	nop
    eb8f:	c9                   	leave
    eb90:	c3                   	ret

000000000000eb91 <_ZSt16__do_uninit_copyIPKPKcPS1_ET0_T_S6_S5_>:
    __do_uninit_copy(_InputIterator __first, _InputIterator __last,
    eb91:	55                   	push   %rbp
    eb92:	48 89 e5             	mov    %rsp,%rbp
    eb95:	48 83 ec 30          	sub    $0x30,%rsp
    eb99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eb9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    eba1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      _ForwardIterator __cur = __result;
    eba5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eba9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  for (; __first != __last; ++__first, (void)++__cur)
    ebad:	eb 28                	jmp    ebd7 <_ZSt16__do_uninit_copyIPKPKcPS1_ET0_T_S6_S5_+0x46>
	    std::_Construct(std::__addressof(*__cur), *__first);
    ebaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebb3:	48 89 c7             	mov    %rax,%rdi
    ebb6:	e8 af 05 00 00       	call   f16a <_ZSt11__addressofIPKcEPT_RS2_>
    ebbb:	48 89 c2             	mov    %rax,%rdx
    ebbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ebc2:	48 89 c6             	mov    %rax,%rsi
    ebc5:	48 89 d7             	mov    %rdx,%rdi
    ebc8:	e8 ab 05 00 00       	call   f178 <_ZSt10_ConstructIPKcJRKS1_EEvPT_DpOT0_>
	  for (; __first != __last; ++__first, (void)++__cur)
    ebcd:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    ebd2:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    ebd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ebdb:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    ebdf:	75 ce                	jne    ebaf <_ZSt16__do_uninit_copyIPKPKcPS1_ET0_T_S6_S5_+0x1e>
	  return __cur;
    ebe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    ebe5:	c9                   	leave
    ebe6:	c3                   	ret

000000000000ebe7 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    ebe7:	55                   	push   %rbp
    ebe8:	48 89 e5             	mov    %rsp,%rbp
    ebeb:	48 83 ec 30          	sub    $0x30,%rsp
    ebef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ebf3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ebf7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    ebfb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    ebff:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    ec03:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ec07:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ec0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec0f:	48 89 ce             	mov    %rcx,%rsi
    ec12:	48 89 c7             	mov    %rax,%rdi
    ec15:	e8 c4 05 00 00       	call   f1de <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    ec1a:	c9                   	leave
    ec1b:	c3                   	ret

000000000000ec1c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ec1c:	55                   	push   %rbp
    ec1d:	48 89 e5             	mov    %rsp,%rbp
    ec20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ec24:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ec2b:	ff ff 0f 
      }
    ec2e:	5d                   	pop    %rbp
    ec2f:	c3                   	ret

000000000000ec30 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
    ec30:	55                   	push   %rbp
    ec31:	48 89 e5             	mov    %rsp,%rbp
    ec34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    ec38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec3c:	5d                   	pop    %rbp
    ec3d:	c3                   	ret

000000000000ec3e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    ec3e:	55                   	push   %rbp
    ec3f:	48 89 e5             	mov    %rsp,%rbp
    ec42:	53                   	push   %rbx
    ec43:	48 83 ec 18          	sub    $0x18,%rsp
    ec47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ec4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    ec4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec53:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ec57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec5b:	48 8b 40 10          	mov    0x10(%rax),%rax
    ec5f:	48 39 c2             	cmp    %rax,%rdx
    ec62:	74 3c                	je     eca0 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    ec64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ec68:	48 89 c7             	mov    %rax,%rdi
    ec6b:	e8 9b 05 00 00       	call   f20b <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    ec70:	48 89 c2             	mov    %rax,%rdx
    ec73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec77:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ec7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec7f:	48 89 ce             	mov    %rcx,%rsi
    ec82:	48 89 c7             	mov    %rax,%rdi
    ec85:	e8 8f 05 00 00       	call   f219 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    ec8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec8e:	48 8b 40 08          	mov    0x8(%rax),%rax
    ec92:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ec96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec9a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ec9e:	eb 30                	jmp    ecd0 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    eca0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eca4:	48 89 c7             	mov    %rax,%rdi
    eca7:	e8 5f 05 00 00       	call   f20b <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    ecac:	48 89 c3             	mov    %rax,%rbx
    ecaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecb3:	48 89 c7             	mov    %rax,%rdi
    ecb6:	e8 5d 00 00 00       	call   ed18 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    ecbb:	48 89 c1             	mov    %rax,%rcx
    ecbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecc2:	48 89 da             	mov    %rbx,%rdx
    ecc5:	48 89 ce             	mov    %rcx,%rsi
    ecc8:	48 89 c7             	mov    %rax,%rdi
    eccb:	e8 7e 05 00 00       	call   f24e <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    ecd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecd4:	48 89 c7             	mov    %rax,%rdi
    ecd7:	e8 04 07 00 00       	call   f3e0 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    ecdc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ece0:	c9                   	leave
    ece1:	c3                   	ret

000000000000ece2 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    ece2:	55                   	push   %rbp
    ece3:	48 89 e5             	mov    %rsp,%rbp
    ece6:	48 83 ec 20          	sub    $0x20,%rsp
    ecea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ecf2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    ecf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecfa:	48 89 c7             	mov    %rax,%rdi
    ecfd:	e8 1d 07 00 00       	call   f41f <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    ed02:	48 89 c2             	mov    %rax,%rdx
    ed05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed09:	48 89 d6             	mov    %rdx,%rsi
    ed0c:	48 89 c7             	mov    %rax,%rdi
    ed0f:	e8 19 07 00 00       	call   f42d <_ZSt12construct_atIPKcJRKS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS5_DpOS6_>
	}
    ed14:	90                   	nop
    ed15:	c9                   	leave
    ed16:	c3                   	ret
    ed17:	90                   	nop

000000000000ed18 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ed18:	55                   	push   %rbp
    ed19:	48 89 e5             	mov    %rsp,%rbp
    ed1c:	48 83 ec 20          	sub    $0x20,%rsp
    ed20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ed24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed28:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ed2c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ed30:	48 89 d6             	mov    %rdx,%rsi
    ed33:	48 89 c7             	mov    %rax,%rdi
    ed36:	e8 33 07 00 00       	call   f46e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    ed3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed3f:	c9                   	leave
    ed40:	c3                   	ret
    ed41:	90                   	nop

000000000000ed42 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    ed42:	55                   	push   %rbp
    ed43:	48 89 e5             	mov    %rsp,%rbp
    ed46:	53                   	push   %rbx
    ed47:	48 83 ec 38          	sub    $0x38,%rsp
    ed4b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ed4f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ed53:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    ed57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed5b:	48 89 c7             	mov    %rax,%rdi
    ed5e:	e8 29 07 00 00       	call   f48c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    ed63:	48 89 c3             	mov    %rax,%rbx
    ed66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed6a:	48 89 c7             	mov    %rax,%rdi
    ed6d:	e8 de f8 ff ff       	call   e650 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ed72:	48 29 c3             	sub    %rax,%rbx
    ed75:	48 89 da             	mov    %rbx,%rdx
    ed78:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ed7c:	48 39 c2             	cmp    %rax,%rdx
    ed7f:	0f 92 c0             	setb   %al
    ed82:	84 c0                	test   %al,%al
    ed84:	74 0c                	je     ed92 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    ed86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ed8a:	48 89 c7             	mov    %rax,%rdi
    ed8d:	e8 2e 63 ff ff       	call   50c0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    ed92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed96:	48 89 c7             	mov    %rax,%rdi
    ed99:	e8 b2 f8 ff ff       	call   e650 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ed9e:	48 89 c3             	mov    %rax,%rbx
    eda1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eda5:	48 89 c7             	mov    %rax,%rdi
    eda8:	e8 a3 f8 ff ff       	call   e650 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    edad:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    edb1:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    edb5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    edb9:	48 89 d6             	mov    %rdx,%rsi
    edbc:	48 89 c7             	mov    %rax,%rdi
    edbf:	e8 b6 f9 ff ff       	call   e77a <_ZSt3maxImERKT_S2_S2_>
    edc4:	48 8b 00             	mov    (%rax),%rax
    edc7:	48 01 d8             	add    %rbx,%rax
    edca:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    edce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edd2:	48 89 c7             	mov    %rax,%rdi
    edd5:	e8 76 f8 ff ff       	call   e650 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    edda:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    edde:	72 12                	jb     edf2 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    ede0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ede4:	48 89 c7             	mov    %rax,%rdi
    ede7:	e8 a0 06 00 00       	call   f48c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    edec:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    edf0:	73 0e                	jae    ee00 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    edf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edf6:	48 89 c7             	mov    %rax,%rdi
    edf9:	e8 8e 06 00 00       	call   f48c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    edfe:	eb 04                	jmp    ee04 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    ee00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    ee04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ee08:	c9                   	leave
    ee09:	c3                   	ret

000000000000ee0a <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    ee0a:	55                   	push   %rbp
    ee0b:	48 89 e5             	mov    %rsp,%rbp
    ee0e:	53                   	push   %rbx
    ee0f:	48 83 ec 18          	sub    $0x18,%rsp
    ee13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ee17:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    ee1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee1f:	48 89 c7             	mov    %rax,%rdi
    ee22:	e8 87 06 00 00       	call   f4ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ee27:	48 8b 18             	mov    (%rax),%rbx
    ee2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ee2e:	48 89 c7             	mov    %rax,%rdi
    ee31:	e8 78 06 00 00       	call   f4ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ee36:	48 8b 00             	mov    (%rax),%rax
    ee39:	48 89 da             	mov    %rbx,%rdx
    ee3c:	48 29 c2             	sub    %rax,%rdx
    ee3f:	48 89 d0             	mov    %rdx,%rax
    ee42:	48 c1 f8 03          	sar    $0x3,%rax
    ee46:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ee4a:	c9                   	leave
    ee4b:	c3                   	ret

000000000000ee4c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    ee4c:	55                   	push   %rbp
    ee4d:	48 89 e5             	mov    %rsp,%rbp
    ee50:	48 83 ec 20          	sub    $0x20,%rsp
    ee54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    ee58:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee5c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ee60:	48 89 d6             	mov    %rdx,%rsi
    ee63:	48 89 c7             	mov    %rax,%rdi
    ee66:	e8 03 06 00 00       	call   f46e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    ee6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee6f:	c9                   	leave
    ee70:	c3                   	ret
    ee71:	90                   	nop

000000000000ee72 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    ee72:	55                   	push   %rbp
    ee73:	48 89 e5             	mov    %rsp,%rbp
    ee76:	53                   	push   %rbx
    ee77:	48 83 ec 68          	sub    $0x68,%rsp
    ee7b:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    ee7f:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    ee83:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    ee87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ee8b:	48 8d 15 8d 3b 00 00 	lea    0x3b8d(%rip),%rdx        # 12a1f <_ZNSt8__detailL19__atomic_spin_countE+0xe23>
    ee92:	be 01 00 00 00       	mov    $0x1,%esi
    ee97:	48 89 c7             	mov    %rax,%rdi
    ee9a:	e8 a3 fe ff ff       	call   ed42 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    ee9f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    eea3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eea7:	48 8b 00             	mov    (%rax),%rax
    eeaa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    eeae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eeb2:	48 8b 40 08          	mov    0x8(%rax),%rax
    eeb6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    eeba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eebe:	48 89 c7             	mov    %rax,%rdi
    eec1:	e8 86 ff ff ff       	call   ee4c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    eec6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    eeca:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    eece:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eed2:	48 89 d6             	mov    %rdx,%rsi
    eed5:	48 89 c7             	mov    %rax,%rdi
    eed8:	e8 2d ff ff ff       	call   ee0a <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    eedd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    eee1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eee5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eee9:	48 89 d6             	mov    %rdx,%rsi
    eeec:	48 89 c7             	mov    %rax,%rdi
    eeef:	e8 8c f6 ff ff       	call   e580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    eef4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    eef8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eefc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    ef00:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ef04:	48 89 c7             	mov    %rax,%rdi
    ef07:	e8 13 05 00 00       	call   f41f <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    ef0c:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    ef0f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ef13:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    ef1a:	00 
	  _Alloc_traits::construct(this->_M_impl,
    ef1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef1f:	48 01 c1             	add    %rax,%rcx
    ef22:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ef26:	48 89 ce             	mov    %rcx,%rsi
    ef29:	48 89 c7             	mov    %rax,%rdi
    ef2c:	e8 b1 fd ff ff       	call   ece2 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    ef31:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    ef38:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    ef39:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ef3d:	48 89 c7             	mov    %rax,%rdi
    ef40:	e8 5f f5 ff ff       	call   e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    ef45:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    ef48:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ef4c:	48 89 c7             	mov    %rax,%rdi
    ef4f:	e8 5a 05 00 00       	call   f4ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ef54:	48 8b 30             	mov    (%rax),%rsi
    ef57:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ef5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ef5f:	48 89 d9             	mov    %rbx,%rcx
    ef62:	48 89 c7             	mov    %rax,%rdi
    ef65:	e8 52 05 00 00       	call   f4bc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    ef6a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    ef6e:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    ef73:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ef77:	48 89 c7             	mov    %rax,%rdi
    ef7a:	e8 25 f5 ff ff       	call   e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    ef7f:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    ef82:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ef86:	48 89 c7             	mov    %rax,%rdi
    ef89:	e8 20 05 00 00       	call   f4ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ef8e:	48 8b 00             	mov    (%rax),%rax
    ef91:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ef95:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    ef99:	48 89 d9             	mov    %rbx,%rcx
    ef9c:	48 89 c7             	mov    %rax,%rdi
    ef9f:	e8 18 05 00 00       	call   f4bc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    efa4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    efa8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    efac:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    efb0:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    efb4:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    efb8:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    efbc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    efc0:	48 89 ce             	mov    %rcx,%rsi
    efc3:	48 89 c7             	mov    %rax,%rdi
    efc6:	e8 91 fb ff ff       	call   eb5c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    efcb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    efcf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    efd3:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    efd6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    efda:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    efde:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    efe2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    efe6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    efed:	00 
    efee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eff2:	48 01 c2             	add    %rax,%rdx
    eff5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eff9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    effd:	90                   	nop
    effe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f002:	c9                   	leave
    f003:	c3                   	ret

000000000000f004 <_ZNKSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    f004:	55                   	push   %rbp
    f005:	48 89 e5             	mov    %rsp,%rbp
    f008:	48 83 ec 10          	sub    $0x10,%rsp
    f00c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f014:	48 89 c7             	mov    %rax,%rdi
    f017:	e8 f1 04 00 00       	call   f50d <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>
    f01c:	48 8b 00             	mov    (%rax),%rax
    f01f:	c9                   	leave
    f020:	c3                   	ret
    f021:	90                   	nop

000000000000f022 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1Ev>:
      constexpr _Tuple_impl()
    f022:	55                   	push   %rbp
    f023:	48 89 e5             	mov    %rsp,%rbp
    f026:	48 83 ec 10          	sub    $0x10,%rsp
    f02a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    f02e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f032:	48 89 c7             	mov    %rax,%rdi
    f035:	e8 ee 04 00 00       	call   f528 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEEC1Ev>
    f03a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f03e:	48 89 c7             	mov    %rax,%rdi
    f041:	e8 fe 04 00 00       	call   f544 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EEC1Ev>
    f046:	90                   	nop
    f047:	c9                   	leave
    f048:	c3                   	ret
    f049:	90                   	nop

000000000000f04a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    f04a:	55                   	push   %rbp
    f04b:	48 89 e5             	mov    %rsp,%rbp
    f04e:	48 83 ec 10          	sub    $0x10,%rsp
    f052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f056:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    f05a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f05e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f062:	48 89 d6             	mov    %rdx,%rsi
    f065:	48 89 c7             	mov    %rax,%rdi
    f068:	e8 13 f5 ff ff       	call   e580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    f06d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f071:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    f074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f078:	48 8b 10             	mov    (%rax),%rdx
    f07b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f07f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    f083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f087:	48 8b 00             	mov    (%rax),%rax
    f08a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f08e:	48 c1 e2 03          	shl    $0x3,%rdx
    f092:	48 01 c2             	add    %rax,%rdx
    f095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f099:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    f09d:	90                   	nop
    f09e:	c9                   	leave
    f09f:	c3                   	ret

000000000000f0a0 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    f0a0:	55                   	push   %rbp
    f0a1:	48 89 e5             	mov    %rsp,%rbp
    f0a4:	48 83 ec 20          	sub    $0x20,%rsp
    f0a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f0b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    f0b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f0b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0bc:	48 89 d6             	mov    %rdx,%rsi
    f0bf:	48 89 c7             	mov    %rax,%rdi
    f0c2:	e8 93 04 00 00       	call   f55a <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    f0c7:	c9                   	leave
    f0c8:	c3                   	ret

000000000000f0c9 <_ZSt8_DestroyIPPKcEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    f0c9:	55                   	push   %rbp
    f0ca:	48 89 e5             	mov    %rsp,%rbp
    f0cd:	48 83 ec 10          	sub    $0x10,%rsp
    f0d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      // A deleted destructor is trivial, this ensures we reject such types:
      static_assert(is_destructible<_Value_type>::value,
		    "value type is destructible");
#endif
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
    f0d9:	e8 30 70 ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    f0de:	84 c0                	test   %al,%al
    f0e0:	74 15                	je     f0f7 <_ZSt8_DestroyIPPKcEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
    f0e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f0e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0ea:	48 89 d6             	mov    %rdx,%rsi
    f0ed:	48 89 c7             	mov    %rax,%rdi
    f0f0:	e8 8e 04 00 00       	call   f583 <_ZNSt12_Destroy_auxILb0EE9__destroyIPPKcEEvT_S5_>
    f0f5:	eb 13                	jmp    f10a <_ZSt8_DestroyIPPKcEvT_S3_+0x41>
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    f0f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f0fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0ff:	48 89 d6             	mov    %rdx,%rsi
    f102:	48 89 c7             	mov    %rax,%rdi
    f105:	e8 b2 04 00 00       	call   f5bc <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    f10a:	c9                   	leave
    f10b:	c3                   	ret

000000000000f10c <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    f10c:	55                   	push   %rbp
    f10d:	48 89 e5             	mov    %rsp,%rbp
    f110:	48 83 ec 40          	sub    $0x40,%rsp
    f114:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f118:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f11c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    f120:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f124:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f128:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f12c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f130:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f134:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
    f138:	e8 d1 6f ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    f13d:	84 c0                	test   %al,%al
    f13f:	74 0e                	je     f14f <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
    f141:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f145:	48 89 c7             	mov    %rax,%rdi
    f148:	e8 63 60 ff ff       	call   51b0 <_ZdlPv@plt>
	    return;
    f14d:	eb 18                	jmp    f167 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
    f14f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f153:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f157:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f15b:	48 89 ce             	mov    %rcx,%rsi
    f15e:	48 89 c7             	mov    %rax,%rdi
    f161:	e8 5e 06 00 00       	call   f7c4 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
    f166:	90                   	nop
    f167:	90                   	nop
    f168:	c9                   	leave
    f169:	c3                   	ret

000000000000f16a <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    f16a:	55                   	push   %rbp
    f16b:	48 89 e5             	mov    %rsp,%rbp
    f16e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    f172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f176:	5d                   	pop    %rbp
    f177:	c3                   	ret

000000000000f178 <_ZSt10_ConstructIPKcJRKS1_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    f178:	55                   	push   %rbp
    f179:	48 89 e5             	mov    %rsp,%rbp
    f17c:	53                   	push   %rbx
    f17d:	48 83 ec 18          	sub    $0x18,%rsp
    f181:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f185:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      if (std::__is_constant_evaluated())
    f189:	e8 80 6f ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    f18e:	84 c0                	test   %al,%al
    f190:	74 20                	je     f1b2 <_ZSt10_ConstructIPKcJRKS1_EEvPT_DpOT0_+0x3a>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    f192:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f196:	48 89 c7             	mov    %rax,%rdi
    f199:	e8 81 02 00 00       	call   f41f <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    f19e:	48 89 c2             	mov    %rax,%rdx
    f1a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f1a5:	48 89 d6             	mov    %rdx,%rsi
    f1a8:	48 89 c7             	mov    %rax,%rdi
    f1ab:	e8 7d 02 00 00       	call   f42d <_ZSt12construct_atIPKcJRKS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS5_DpOS6_>
	  return;
    f1b0:	eb 26                	jmp    f1d8 <_ZSt10_ConstructIPKcJRKS1_EEvPT_DpOT0_+0x60>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    f1b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f1b6:	48 89 c6             	mov    %rax,%rsi
    f1b9:	bf 08 00 00 00       	mov    $0x8,%edi
    f1be:	e8 56 6f ff ff       	call   6119 <_ZnwmPv>
    f1c3:	48 89 c3             	mov    %rax,%rbx
    f1c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f1ca:	48 89 c7             	mov    %rax,%rdi
    f1cd:	e8 4d 02 00 00       	call   f41f <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    f1d2:	48 8b 00             	mov    (%rax),%rax
    f1d5:	48 89 03             	mov    %rax,(%rbx)
    }
    f1d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f1dc:	c9                   	leave
    f1dd:	c3                   	ret

000000000000f1de <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    f1de:	55                   	push   %rbp
    f1df:	48 89 e5             	mov    %rsp,%rbp
    f1e2:	48 83 ec 20          	sub    $0x20,%rsp
    f1e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    f1f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f1f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f1fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1fe:	48 89 ce             	mov    %rcx,%rsi
    f201:	48 89 c7             	mov    %rax,%rdi
    f204:	e8 c2 03 00 00       	call   f5cb <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    f209:	c9                   	leave
    f20a:	c3                   	ret

000000000000f20b <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f20b:	55                   	push   %rbp
    f20c:	48 89 e5             	mov    %rsp,%rbp
    f20f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f217:	5d                   	pop    %rbp
    f218:	c3                   	ret

000000000000f219 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    f219:	55                   	push   %rbp
    f21a:	48 89 e5             	mov    %rsp,%rbp
    f21d:	48 83 ec 20          	sub    $0x20,%rsp
    f221:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f225:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f229:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    f22d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f231:	48 89 c7             	mov    %rax,%rdi
    f234:	e8 d2 ff ff ff       	call   f20b <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    f239:	48 89 c2             	mov    %rax,%rdx
    f23c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f240:	48 89 d6             	mov    %rdx,%rsi
    f243:	48 89 c7             	mov    %rax,%rdi
    f246:	e8 cb 03 00 00       	call   f616 <_ZSt12construct_atIPKcJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	}
    f24b:	90                   	nop
    f24c:	c9                   	leave
    f24d:	c3                   	ret

000000000000f24e <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
    f24e:	55                   	push   %rbp
    f24f:	48 89 e5             	mov    %rsp,%rbp
    f252:	53                   	push   %rbx
    f253:	48 83 ec 68          	sub    $0x68,%rsp
    f257:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    f25b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    f25f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    f263:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f267:	48 8d 15 b1 37 00 00 	lea    0x37b1(%rip),%rdx        # 12a1f <_ZNSt8__detailL19__atomic_spin_countE+0xe23>
    f26e:	be 01 00 00 00       	mov    $0x1,%esi
    f273:	48 89 c7             	mov    %rax,%rdi
    f276:	e8 c7 fa ff ff       	call   ed42 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    f27b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    f27f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f283:	48 8b 00             	mov    (%rax),%rax
    f286:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    f28a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f28e:	48 8b 40 08          	mov    0x8(%rax),%rax
    f292:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    f296:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f29a:	48 89 c7             	mov    %rax,%rdi
    f29d:	e8 aa fb ff ff       	call   ee4c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f2a2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f2a6:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    f2aa:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f2ae:	48 89 d6             	mov    %rdx,%rsi
    f2b1:	48 89 c7             	mov    %rax,%rdi
    f2b4:	e8 51 fb ff ff       	call   ee0a <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    f2b9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    f2bd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f2c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f2c5:	48 89 d6             	mov    %rdx,%rsi
    f2c8:	48 89 c7             	mov    %rax,%rdi
    f2cb:	e8 b0 f2 ff ff       	call   e580 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    f2d0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    f2d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2d8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    f2dc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f2e0:	48 89 c7             	mov    %rax,%rdi
    f2e3:	e8 23 ff ff ff       	call   f20b <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    f2e8:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    f2eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f2ef:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    f2f6:	00 
	  _Alloc_traits::construct(this->_M_impl,
    f2f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2fb:	48 01 c1             	add    %rax,%rcx
    f2fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f302:	48 89 ce             	mov    %rcx,%rsi
    f305:	48 89 c7             	mov    %rax,%rdi
    f308:	e8 0c ff ff ff       	call   f219 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
    f30d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    f314:	00 
					 __new_start, _M_get_Tp_allocator());
    f315:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f319:	48 89 c7             	mov    %rax,%rdi
    f31c:	e8 83 f1 ff ff       	call   e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    f321:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    f324:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f328:	48 89 c7             	mov    %rax,%rdi
    f32b:	e8 7e 01 00 00       	call   f4ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    f330:	48 8b 30             	mov    (%rax),%rsi
    f333:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f337:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f33b:	48 89 d9             	mov    %rbx,%rcx
    f33e:	48 89 c7             	mov    %rax,%rdi
    f341:	e8 76 01 00 00       	call   f4bc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    f346:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    f34a:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    f34f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f353:	48 89 c7             	mov    %rax,%rdi
    f356:	e8 49 f1 ff ff       	call   e4a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    f35b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    f35e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f362:	48 89 c7             	mov    %rax,%rdi
    f365:	e8 44 01 00 00       	call   f4ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    f36a:	48 8b 00             	mov    (%rax),%rax
    f36d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f371:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    f375:	48 89 d9             	mov    %rbx,%rcx
    f378:	48 89 c7             	mov    %rax,%rdi
    f37b:	e8 3c 01 00 00       	call   f4bc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    f380:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    f384:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    f388:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    f38c:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    f390:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    f394:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    f398:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    f39c:	48 89 ce             	mov    %rcx,%rsi
    f39f:	48 89 c7             	mov    %rax,%rdi
    f3a2:	e8 b5 f7 ff ff       	call   eb5c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    f3a7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f3ab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f3af:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    f3b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f3b6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f3ba:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    f3be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3c2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f3c9:	00 
    f3ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f3ce:	48 01 c2             	add    %rax,%rdx
    f3d1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f3d5:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    f3d9:	90                   	nop
    f3da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f3de:	c9                   	leave
    f3df:	c3                   	ret

000000000000f3e0 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    f3e0:	55                   	push   %rbp
    f3e1:	48 89 e5             	mov    %rsp,%rbp
    f3e4:	48 83 ec 20          	sub    $0x20,%rsp
    f3e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    f3ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3f0:	48 89 c7             	mov    %rax,%rdi
    f3f3:	e8 20 f9 ff ff       	call   ed18 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f3f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f3fc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f400:	be 01 00 00 00       	mov    $0x1,%esi
    f405:	48 89 c7             	mov    %rax,%rdi
    f408:	e8 49 02 00 00       	call   f656 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    f40d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f411:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f415:	48 89 c7             	mov    %rax,%rdi
    f418:	e8 7b 02 00 00       	call   f698 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    f41d:	c9                   	leave
    f41e:	c3                   	ret

000000000000f41f <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f41f:	55                   	push   %rbp
    f420:	48 89 e5             	mov    %rsp,%rbp
    f423:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f42b:	5d                   	pop    %rbp
    f42c:	c3                   	ret

000000000000f42d <_ZSt12construct_atIPKcJRKS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS5_DpOS6_>:
    construct_at(_Tp* __location, _Args&&... __args)
    f42d:	55                   	push   %rbp
    f42e:	48 89 e5             	mov    %rsp,%rbp
    f431:	53                   	push   %rbx
    f432:	48 83 ec 18          	sub    $0x18,%rsp
    f436:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f43a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    f43e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f442:	48 89 c6             	mov    %rax,%rsi
    f445:	bf 08 00 00 00       	mov    $0x8,%edi
    f44a:	e8 ca 6c ff ff       	call   6119 <_ZnwmPv>
    f44f:	48 89 c3             	mov    %rax,%rbx
    f452:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f456:	48 89 c7             	mov    %rax,%rdi
    f459:	e8 c1 ff ff ff       	call   f41f <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    f45e:	48 8b 00             	mov    (%rax),%rax
    f461:	48 89 03             	mov    %rax,(%rbx)
    f464:	48 89 d8             	mov    %rbx,%rax
    f467:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f46b:	c9                   	leave
    f46c:	c3                   	ret
    f46d:	90                   	nop

000000000000f46e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f46e:	55                   	push   %rbp
    f46f:	48 89 e5             	mov    %rsp,%rbp
    f472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f476:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f47a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f47e:	48 8b 10             	mov    (%rax),%rdx
    f481:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f485:	48 89 10             	mov    %rdx,(%rax)
    f488:	90                   	nop
    f489:	5d                   	pop    %rbp
    f48a:	c3                   	ret
    f48b:	90                   	nop

000000000000f48c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    f48c:	55                   	push   %rbp
    f48d:	48 89 e5             	mov    %rsp,%rbp
    f490:	48 83 ec 10          	sub    $0x10,%rsp
    f494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    f498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f49c:	48 89 c7             	mov    %rax,%rdi
    f49f:	e8 06 02 00 00       	call   f6aa <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    f4a4:	48 89 c7             	mov    %rax,%rdi
    f4a7:	e8 7a f0 ff ff       	call   e526 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    f4ac:	c9                   	leave
    f4ad:	c3                   	ret

000000000000f4ae <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    f4ae:	55                   	push   %rbp
    f4af:	48 89 e5             	mov    %rsp,%rbp
    f4b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    f4b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4ba:	5d                   	pop    %rbp
    f4bb:	c3                   	ret

000000000000f4bc <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    f4bc:	55                   	push   %rbp
    f4bd:	48 89 e5             	mov    %rsp,%rbp
    f4c0:	48 83 ec 20          	sub    $0x20,%rsp
    f4c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f4cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    f4d0:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    f4d4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    f4d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f4dc:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    f4e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4e4:	48 89 c7             	mov    %rax,%rdi
    f4e7:	e8 cc 01 00 00       	call   f6b8 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    f4ec:	c9                   	leave
    f4ed:	c3                   	ret

000000000000f4ee <_ZNSt16allocator_traitsISaIPKcEE7destroyIS1_EEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    f4ee:	55                   	push   %rbp
    f4ef:	48 89 e5             	mov    %rsp,%rbp
    f4f2:	48 83 ec 10          	sub    $0x10,%rsp
    f4f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
    f4fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f502:	48 89 c7             	mov    %rax,%rdi
    f505:	e8 11 02 00 00       	call   f71b <_ZSt10destroy_atIPKcEvPT_>
	}
    f50a:	90                   	nop
    f50b:	c9                   	leave
    f50c:	c3                   	ret

000000000000f50d <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>:
    get(const tuple<_Elements...>& __t) noexcept
    f50d:	55                   	push   %rbp
    f50e:	48 89 e5             	mov    %rsp,%rbp
    f511:	48 83 ec 10          	sub    $0x10,%rsp
    f515:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    f519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f51d:	48 89 c7             	mov    %rax,%rdi
    f520:	e8 01 02 00 00       	call   f726 <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>
    f525:	c9                   	leave
    f526:	c3                   	ret
    f527:	90                   	nop

000000000000f528 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEEC1Ev>:
      _Tuple_impl()
    f528:	55                   	push   %rbp
    f529:	48 89 e5             	mov    %rsp,%rbp
    f52c:	48 83 ec 10          	sub    $0x10,%rsp
    f530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    f534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f538:	48 89 c7             	mov    %rax,%rdi
    f53b:	e8 00 02 00 00       	call   f740 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EEC1Ev>
    f540:	90                   	nop
    f541:	c9                   	leave
    f542:	c3                   	ret
    f543:	90                   	nop

000000000000f544 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EEC1Ev>:
      constexpr _Head_base()
    f544:	55                   	push   %rbp
    f545:	48 89 e5             	mov    %rsp,%rbp
    f548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    f54c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f550:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f557:	90                   	nop
    f558:	5d                   	pop    %rbp
    f559:	c3                   	ret

000000000000f55a <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    f55a:	55                   	push   %rbp
    f55b:	48 89 e5             	mov    %rsp,%rbp
    f55e:	48 83 ec 20          	sub    $0x20,%rsp
    f562:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f566:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    f56a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    f56e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f572:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f576:	48 89 d6             	mov    %rdx,%rsi
    f579:	48 89 c7             	mov    %rax,%rdi
    f57c:	e8 ca 01 00 00       	call   f74b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    f581:	c9                   	leave
    f582:	c3                   	ret

000000000000f583 <_ZNSt12_Destroy_auxILb0EE9__destroyIPPKcEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    f583:	55                   	push   %rbp
    f584:	48 89 e5             	mov    %rsp,%rbp
    f587:	48 83 ec 10          	sub    $0x10,%rsp
    f58b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f58f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    f593:	eb 19                	jmp    f5ae <_ZNSt12_Destroy_auxILb0EE9__destroyIPPKcEEvT_S5_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    f595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f599:	48 89 c7             	mov    %rax,%rdi
    f59c:	e8 c9 fb ff ff       	call   f16a <_ZSt11__addressofIPKcEPT_RS2_>
    f5a1:	48 89 c7             	mov    %rax,%rdi
    f5a4:	e8 ff 01 00 00       	call   f7a8 <_ZSt8_DestroyIPKcEvPT_>
	  for (; __first != __last; ++__first)
    f5a9:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    f5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5b2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f5b6:	75 dd                	jne    f595 <_ZNSt12_Destroy_auxILb0EE9__destroyIPPKcEEvT_S5_+0x12>
	}
    f5b8:	90                   	nop
    f5b9:	90                   	nop
    f5ba:	c9                   	leave
    f5bb:	c3                   	ret

000000000000f5bc <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    f5bc:	55                   	push   %rbp
    f5bd:	48 89 e5             	mov    %rsp,%rbp
    f5c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f5c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f5c8:	90                   	nop
    f5c9:	5d                   	pop    %rbp
    f5ca:	c3                   	ret

000000000000f5cb <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    f5cb:	55                   	push   %rbp
    f5cc:	48 89 e5             	mov    %rsp,%rbp
    f5cf:	53                   	push   %rbx
    f5d0:	48 83 ec 28          	sub    $0x28,%rsp
    f5d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f5d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f5dc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    f5e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f5e4:	48 89 c7             	mov    %rax,%rdi
    f5e7:	e8 09 02 00 00       	call   f7f5 <_ZSt12__miter_baseIPKPKcET_S4_>
    f5ec:	48 89 c3             	mov    %rax,%rbx
    f5ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f5f3:	48 89 c7             	mov    %rax,%rdi
    f5f6:	e8 fa 01 00 00       	call   f7f5 <_ZSt12__miter_baseIPKPKcET_S4_>
    f5fb:	48 89 c1             	mov    %rax,%rcx
    f5fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f602:	48 89 c2             	mov    %rax,%rdx
    f605:	48 89 de             	mov    %rbx,%rsi
    f608:	48 89 cf             	mov    %rcx,%rdi
    f60b:	e8 f3 01 00 00       	call   f803 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    f610:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f614:	c9                   	leave
    f615:	c3                   	ret

000000000000f616 <_ZSt12construct_atIPKcJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
    f616:	55                   	push   %rbp
    f617:	48 89 e5             	mov    %rsp,%rbp
    f61a:	53                   	push   %rbx
    f61b:	48 83 ec 18          	sub    $0x18,%rsp
    f61f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f623:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    f627:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f62b:	48 89 c6             	mov    %rax,%rsi
    f62e:	bf 08 00 00 00       	mov    $0x8,%edi
    f633:	e8 e1 6a ff ff       	call   6119 <_ZnwmPv>
    f638:	48 89 c3             	mov    %rax,%rbx
    f63b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f63f:	48 89 c7             	mov    %rax,%rdi
    f642:	e8 c4 fb ff ff       	call   f20b <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    f647:	48 8b 00             	mov    (%rax),%rax
    f64a:	48 89 03             	mov    %rax,(%rbx)
    f64d:	48 89 d8             	mov    %rbx,%rax
    f650:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f654:	c9                   	leave
    f655:	c3                   	ret

000000000000f656 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    f656:	55                   	push   %rbp
    f657:	48 89 e5             	mov    %rsp,%rbp
    f65a:	48 83 ec 20          	sub    $0x20,%rsp
    f65e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f662:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    f666:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f66a:	48 8b 00             	mov    (%rax),%rax
    f66d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f671:	48 c1 e2 03          	shl    $0x3,%rdx
    f675:	48 f7 da             	neg    %rdx
    f678:	48 01 d0             	add    %rdx,%rax
    f67b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f67f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    f683:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f687:	48 89 d6             	mov    %rdx,%rsi
    f68a:	48 89 c7             	mov    %rax,%rdi
    f68d:	e8 dc fd ff ff       	call   f46e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    f692:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f696:	c9                   	leave
    f697:	c3                   	ret

000000000000f698 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    f698:	55                   	push   %rbp
    f699:	48 89 e5             	mov    %rsp,%rbp
    f69c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    f6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6a4:	48 8b 00             	mov    (%rax),%rax
    f6a7:	5d                   	pop    %rbp
    f6a8:	c3                   	ret
    f6a9:	90                   	nop

000000000000f6aa <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    f6aa:	55                   	push   %rbp
    f6ab:	48 89 e5             	mov    %rsp,%rbp
    f6ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f6b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6b6:	5d                   	pop    %rbp
    f6b7:	c3                   	ret

000000000000f6b8 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    f6b8:	55                   	push   %rbp
    f6b9:	48 89 e5             	mov    %rsp,%rbp
    f6bc:	41 54                	push   %r12
    f6be:	53                   	push   %rbx
    f6bf:	48 83 ec 20          	sub    $0x20,%rsp
    f6c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f6c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f6cb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f6cf:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    f6d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f6d7:	48 89 c7             	mov    %rax,%rdi
    f6da:	e8 8e 01 00 00       	call   f86d <_ZSt12__niter_baseIPPKcET_S3_>
    f6df:	49 89 c4             	mov    %rax,%r12
    f6e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f6e6:	48 89 c7             	mov    %rax,%rdi
    f6e9:	e8 7f 01 00 00       	call   f86d <_ZSt12__niter_baseIPPKcET_S3_>
    f6ee:	48 89 c3             	mov    %rax,%rbx
    f6f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f6f5:	48 89 c7             	mov    %rax,%rdi
    f6f8:	e8 70 01 00 00       	call   f86d <_ZSt12__niter_baseIPPKcET_S3_>
    f6fd:	48 89 c7             	mov    %rax,%rdi
    f700:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f704:	48 89 c1             	mov    %rax,%rcx
    f707:	4c 89 e2             	mov    %r12,%rdx
    f70a:	48 89 de             	mov    %rbx,%rsi
    f70d:	e8 87 01 00 00       	call   f899 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    f712:	48 83 c4 20          	add    $0x20,%rsp
    f716:	5b                   	pop    %rbx
    f717:	41 5c                	pop    %r12
    f719:	5d                   	pop    %rbp
    f71a:	c3                   	ret

000000000000f71b <_ZSt10destroy_atIPKcEvPT_>:
    destroy_at(_Tp* __location)
    f71b:	55                   	push   %rbp
    f71c:	48 89 e5             	mov    %rsp,%rbp
    f71f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
    f723:	90                   	nop
    f724:	5d                   	pop    %rbp
    f725:	c3                   	ret

000000000000f726 <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    f726:	55                   	push   %rbp
    f727:	48 89 e5             	mov    %rsp,%rbp
    f72a:	48 83 ec 10          	sub    $0x10,%rsp
    f72e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    f732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f736:	48 89 c7             	mov    %rax,%rdi
    f739:	e8 03 02 00 00       	call   f941 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>
    f73e:	c9                   	leave
    f73f:	c3                   	ret

000000000000f740 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EEC1Ev>:
      constexpr _Head_base()
    f740:	55                   	push   %rbp
    f741:	48 89 e5             	mov    %rsp,%rbp
    f744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    f748:	90                   	nop
    f749:	5d                   	pop    %rbp
    f74a:	c3                   	ret

000000000000f74b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    f74b:	55                   	push   %rbp
    f74c:	48 89 e5             	mov    %rsp,%rbp
    f74f:	48 83 ec 20          	sub    $0x20,%rsp
    f753:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f757:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    f75b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    f760:	74 40                	je     f7a2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    f762:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f766:	48 89 c7             	mov    %rax,%rdi
    f769:	e8 fc f9 ff ff       	call   f16a <_ZSt11__addressofIPKcEPT_RS2_>
    f76e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    f772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f776:	48 89 c7             	mov    %rax,%rdi
    f779:	e8 dd 01 00 00       	call   f95b <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    f77e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    f783:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f787:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    f78b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f78f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f793:	48 89 ce             	mov    %rcx,%rsi
    f796:	48 89 c7             	mov    %rax,%rdi
    f799:	e8 fa 01 00 00       	call   f998 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    f79e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    f7a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    f7a6:	c9                   	leave
    f7a7:	c3                   	ret

000000000000f7a8 <_ZSt8_DestroyIPKcEvPT_>:
    _Destroy(_Tp* __pointer)
    f7a8:	55                   	push   %rbp
    f7a9:	48 89 e5             	mov    %rsp,%rbp
    f7ac:	48 83 ec 10          	sub    $0x10,%rsp
    f7b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
    f7b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7b8:	48 89 c7             	mov    %rax,%rdi
    f7bb:	e8 5b ff ff ff       	call   f71b <_ZSt10destroy_atIPKcEvPT_>
    }
    f7c0:	90                   	nop
    f7c1:	c9                   	leave
    f7c2:	c3                   	ret
    f7c3:	90                   	nop

000000000000f7c4 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    f7c4:	55                   	push   %rbp
    f7c5:	48 89 e5             	mov    %rsp,%rbp
    f7c8:	48 83 ec 20          	sub    $0x20,%rsp
    f7cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f7d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f7d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    f7d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f7e3:	00 
    f7e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f7e8:	48 89 d6             	mov    %rdx,%rsi
    f7eb:	48 89 c7             	mov    %rax,%rdi
    f7ee:	e8 fd 59 ff ff       	call   51f0 <_ZdlPvm@plt>
      }
    f7f3:	c9                   	leave
    f7f4:	c3                   	ret

000000000000f7f5 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    f7f5:	55                   	push   %rbp
    f7f6:	48 89 e5             	mov    %rsp,%rbp
    f7f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f7fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f801:	5d                   	pop    %rbp
    f802:	c3                   	ret

000000000000f803 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    f803:	55                   	push   %rbp
    f804:	48 89 e5             	mov    %rsp,%rbp
    f807:	41 54                	push   %r12
    f809:	53                   	push   %rbx
    f80a:	48 83 ec 20          	sub    $0x20,%rsp
    f80e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f812:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f816:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    f81a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f81e:	48 89 c7             	mov    %rax,%rdi
    f821:	e8 47 00 00 00       	call   f86d <_ZSt12__niter_baseIPPKcET_S3_>
    f826:	49 89 c4             	mov    %rax,%r12
    f829:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f82d:	48 89 c7             	mov    %rax,%rdi
    f830:	e8 a7 01 00 00       	call   f9dc <_ZSt12__niter_baseIPKPKcET_S4_>
    f835:	48 89 c3             	mov    %rax,%rbx
    f838:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f83c:	48 89 c7             	mov    %rax,%rdi
    f83f:	e8 98 01 00 00       	call   f9dc <_ZSt12__niter_baseIPKPKcET_S4_>
    f844:	4c 89 e2             	mov    %r12,%rdx
    f847:	48 89 de             	mov    %rbx,%rsi
    f84a:	48 89 c7             	mov    %rax,%rdi
    f84d:	e8 98 01 00 00       	call   f9ea <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    f852:	48 89 c2             	mov    %rax,%rdx
    f855:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f859:	48 89 d6             	mov    %rdx,%rsi
    f85c:	48 89 c7             	mov    %rax,%rdi
    f85f:	e8 b3 01 00 00       	call   fa17 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    f864:	48 83 c4 20          	add    $0x20,%rsp
    f868:	5b                   	pop    %rbx
    f869:	41 5c                	pop    %r12
    f86b:	5d                   	pop    %rbp
    f86c:	c3                   	ret

000000000000f86d <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    f86d:	55                   	push   %rbp
    f86e:	48 89 e5             	mov    %rsp,%rbp
    f871:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f879:	5d                   	pop    %rbp
    f87a:	c3                   	ret
    f87b:	90                   	nop

000000000000f87c <_ZN9__gnu_cxx17__normal_iteratorIPPKcvEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f87c:	55                   	push   %rbp
    f87d:	48 89 e5             	mov    %rsp,%rbp
    f880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f884:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f888:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f88c:	48 8b 10             	mov    (%rax),%rdx
    f88f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f893:	48 89 10             	mov    %rdx,(%rax)
    f896:	90                   	nop
    f897:	5d                   	pop    %rbp
    f898:	c3                   	ret

000000000000f899 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    f899:	55                   	push   %rbp
    f89a:	48 89 e5             	mov    %rsp,%rbp
    f89d:	48 83 ec 30          	sub    $0x30,%rsp
    f8a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f8a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f8a9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f8ad:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    f8b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f8b5:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f8b9:	48 c1 f8 03          	sar    $0x3,%rax
    f8bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    f8c1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f8c6:	7e 68                	jle    f930 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x97>
	  if (std::is_constant_evaluated())
    f8c8:	e8 5e 68 ff ff       	call   612b <_ZSt21is_constant_evaluatedv>
    f8cd:	84 c0                	test   %al,%al
    f8cf:	74 40                	je     f911 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x78>
	      __gnu_cxx::__normal_iterator<_Tp*, void> __out(__result);
    f8d1:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    f8d5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f8d9:	48 89 d6             	mov    %rdx,%rsi
    f8dc:	48 89 c7             	mov    %rax,%rdi
    f8df:	e8 98 ff ff ff       	call   f87c <_ZN9__gnu_cxx17__normal_iteratorIPPKcvEC1ERKS3_>
	      __out = std::__relocate_a_1(__first, __last, __out, __alloc);
    f8e4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f8e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f8ec:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    f8f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8f4:	48 89 c7             	mov    %rax,%rdi
    f8f7:	e8 2d 01 00 00       	call   fa29 <_ZSt14__relocate_a_1IPPKcN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_>
    f8fc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	      return __out.base();
    f900:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f904:	48 89 c7             	mov    %rax,%rdi
    f907:	e8 9e 01 00 00       	call   faaa <_ZNK9__gnu_cxx17__normal_iteratorIPPKcvE4baseEv>
    f90c:	48 8b 00             	mov    (%rax),%rax
    f90f:	eb 2e                	jmp    f93f <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0xa6>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    f911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f915:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f91c:	00 
    f91d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f921:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f925:	48 89 ce             	mov    %rcx,%rsi
    f928:	48 89 c7             	mov    %rax,%rdi
    f92b:	e8 b0 59 ff ff       	call   52e0 <memmove@plt>
      return __result + __count;
    f930:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f934:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f938:	48 c1 e2 03          	shl    $0x3,%rdx
    f93c:	48 01 d0             	add    %rdx,%rax
    }
    f93f:	c9                   	leave
    f940:	c3                   	ret

000000000000f941 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    f941:	55                   	push   %rbp
    f942:	48 89 e5             	mov    %rsp,%rbp
    f945:	48 83 ec 10          	sub    $0x10,%rsp
    f949:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f94d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f951:	48 89 c7             	mov    %rax,%rdi
    f954:	e8 5f 01 00 00       	call   fab8 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERKS4_>
    f959:	c9                   	leave
    f95a:	c3                   	ret

000000000000f95b <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    f95b:	55                   	push   %rbp
    f95c:	48 89 e5             	mov    %rsp,%rbp
    f95f:	48 83 ec 10          	sub    $0x10,%rsp
    f963:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
    f967:	e8 a2 67 ff ff       	call   610e <_ZSt23__is_constant_evaluatedv>
    f96c:	84 c0                	test   %al,%al
    f96e:	74 0e                	je     f97e <_ZSt10_ConstructIPKcJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
    f970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f974:	48 89 c7             	mov    %rax,%rdi
    f977:	e8 4a 01 00 00       	call   fac6 <_ZSt12construct_atIPKcJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
    f97c:	eb 18                	jmp    f996 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_+0x3b>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    f97e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f982:	48 89 c6             	mov    %rax,%rsi
    f985:	bf 08 00 00 00       	mov    $0x8,%edi
    f98a:	e8 8a 67 ff ff       	call   6119 <_ZnwmPv>
    f98f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    f996:	c9                   	leave
    f997:	c3                   	ret

000000000000f998 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    f998:	55                   	push   %rbp
    f999:	48 89 e5             	mov    %rsp,%rbp
    f99c:	48 83 ec 20          	sub    $0x20,%rsp
    f9a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f9a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    f9ac:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f9b0:	48 89 c7             	mov    %rax,%rdi
    f9b3:	e8 34 01 00 00       	call   faec <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    f9b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f9bc:	48 89 c7             	mov    %rax,%rdi
    f9bf:	e8 ef d1 ff ff       	call   cbb3 <_ZSt17__size_to_integerm>
    f9c4:	48 89 c1             	mov    %rax,%rcx
    f9c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f9cf:	48 89 ce             	mov    %rcx,%rsi
    f9d2:	48 89 c7             	mov    %rax,%rdi
    f9d5:	e8 1d 01 00 00       	call   faf7 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    f9da:	c9                   	leave
    f9db:	c3                   	ret

000000000000f9dc <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    f9dc:	55                   	push   %rbp
    f9dd:	48 89 e5             	mov    %rsp,%rbp
    f9e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f9e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9e8:	5d                   	pop    %rbp
    f9e9:	c3                   	ret

000000000000f9ea <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    f9ea:	55                   	push   %rbp
    f9eb:	48 89 e5             	mov    %rsp,%rbp
    f9ee:	48 83 ec 20          	sub    $0x20,%rsp
    f9f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f9fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    f9fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fa02:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fa06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa0a:	48 89 ce             	mov    %rcx,%rsi
    fa0d:	48 89 c7             	mov    %rax,%rdi
    fa10:	e8 3f 01 00 00       	call   fb54 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    fa15:	c9                   	leave
    fa16:	c3                   	ret

000000000000fa17 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    fa17:	55                   	push   %rbp
    fa18:	48 89 e5             	mov    %rsp,%rbp
    fa1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    fa23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa27:	5d                   	pop    %rbp
    fa28:	c3                   	ret

000000000000fa29 <_ZSt14__relocate_a_1IPPKcN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
    fa29:	55                   	push   %rbp
    fa2a:	48 89 e5             	mov    %rsp,%rbp
    fa2d:	53                   	push   %rbx
    fa2e:	48 83 ec 38          	sub    $0x38,%rsp
    fa32:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fa36:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fa3a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    fa3e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
    fa42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fa46:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
    fa4a:	eb 49                	jmp    fa95 <_ZSt14__relocate_a_1IPPKcN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_+0x6c>
	std::__relocate_object_a(std::__addressof(*__cur),
    fa4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa50:	48 89 c7             	mov    %rax,%rdi
    fa53:	e8 12 f7 ff ff       	call   f16a <_ZSt11__addressofIPKcEPT_RS2_>
    fa58:	48 89 c3             	mov    %rax,%rbx
    fa5b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    fa5f:	48 89 c7             	mov    %rax,%rdi
    fa62:	e8 5d 01 00 00       	call   fbc4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcvEdeEv>
    fa67:	48 89 c7             	mov    %rax,%rdi
    fa6a:	e8 fb f6 ff ff       	call   f16a <_ZSt11__addressofIPKcEPT_RS2_>
    fa6f:	48 89 c1             	mov    %rax,%rcx
    fa72:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fa76:	48 89 c2             	mov    %rax,%rdx
    fa79:	48 89 de             	mov    %rbx,%rsi
    fa7c:	48 89 cf             	mov    %rcx,%rdi
    fa7f:	e8 51 01 00 00       	call   fbd5 <_ZSt19__relocate_object_aIPKcS1_SaIS1_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
    fa84:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    fa89:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    fa8d:	48 89 c7             	mov    %rax,%rdi
    fa90:	e8 0f 01 00 00       	call   fba4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcvEppEv>
    fa95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa99:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    fa9d:	75 ad                	jne    fa4c <_ZSt14__relocate_a_1IPPKcN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_+0x23>
      return __cur;
    fa9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    faa3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    faa7:	c9                   	leave
    faa8:	c3                   	ret
    faa9:	90                   	nop

000000000000faaa <_ZNK9__gnu_cxx17__normal_iteratorIPPKcvE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    faaa:	55                   	push   %rbp
    faab:	48 89 e5             	mov    %rsp,%rbp
    faae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    fab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fab6:	5d                   	pop    %rbp
    fab7:	c3                   	ret

000000000000fab8 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERKS4_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    fab8:	55                   	push   %rbp
    fab9:	48 89 e5             	mov    %rsp,%rbp
    fabc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fac4:	5d                   	pop    %rbp
    fac5:	c3                   	ret

000000000000fac6 <_ZSt12construct_atIPKcJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
    fac6:	55                   	push   %rbp
    fac7:	48 89 e5             	mov    %rsp,%rbp
    faca:	48 83 ec 10          	sub    $0x10,%rsp
    face:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    fad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fad6:	48 89 c6             	mov    %rax,%rsi
    fad9:	bf 08 00 00 00       	mov    $0x8,%edi
    fade:	e8 36 66 ff ff       	call   6119 <_ZnwmPv>
    fae3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    faea:	c9                   	leave
    faeb:	c3                   	ret

000000000000faec <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    faec:	55                   	push   %rbp
    faed:	48 89 e5             	mov    %rsp,%rbp
    faf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    faf4:	90                   	nop
    faf5:	5d                   	pop    %rbp
    faf6:	c3                   	ret

000000000000faf7 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    faf7:	55                   	push   %rbp
    faf8:	48 89 e5             	mov    %rsp,%rbp
    fafb:	48 83 ec 20          	sub    $0x20,%rsp
    faff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb03:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb07:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    fb0b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    fb10:	75 06                	jne    fb18 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    fb12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb16:	eb 3a                	jmp    fb52 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    fb18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb1c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fb23:	00 
    fb24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb28:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fb2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb34:	48 89 ce             	mov    %rcx,%rsi
    fb37:	48 89 c7             	mov    %rax,%rdi
    fb3a:	e8 ed 00 00 00       	call   fc2c <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    fb3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb43:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fb4a:	00 
    fb4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb4f:	48 01 d0             	add    %rdx,%rax
    }
    fb52:	c9                   	leave
    fb53:	c3                   	ret

000000000000fb54 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    fb54:	55                   	push   %rbp
    fb55:	48 89 e5             	mov    %rsp,%rbp
    fb58:	48 83 ec 20          	sub    $0x20,%rsp
    fb5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (std::is_constant_evaluated())
    fb68:	e8 be 65 ff ff       	call   612b <_ZSt21is_constant_evaluatedv>
    fb6d:	84 c0                	test   %al,%al
    fb6f:	74 19                	je     fb8a <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_+0x36>
	  __copy_m(__first, __last, __result);
    fb71:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb75:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fb79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb7d:	48 89 ce             	mov    %rcx,%rsi
    fb80:	48 89 c7             	mov    %rax,%rdi
    fb83:	e8 d2 00 00 00       	call   fc5a <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKPKcPS4_EET0_T_S9_S8_>
    fb88:	eb 18                	jmp    fba2 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_+0x4e>
			      _Category>::__copy_m(__first, __last, __result);
    fb8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb8e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fb92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb96:	48 89 ce             	mov    %rcx,%rsi
    fb99:	48 89 c7             	mov    %rax,%rdi
    fb9c:	e8 05 01 00 00       	call   fca6 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    fba1:	90                   	nop
    }
    fba2:	c9                   	leave
    fba3:	c3                   	ret

000000000000fba4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcvEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    fba4:	55                   	push   %rbp
    fba5:	48 89 e5             	mov    %rsp,%rbp
    fba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    fbac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbb0:	48 8b 00             	mov    (%rax),%rax
    fbb3:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fbb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbbb:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    fbbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    fbc2:	5d                   	pop    %rbp
    fbc3:	c3                   	ret

000000000000fbc4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcvEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    fbc4:	55                   	push   %rbp
    fbc5:	48 89 e5             	mov    %rsp,%rbp
    fbc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    fbcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbd0:	48 8b 00             	mov    (%rax),%rax
    fbd3:	5d                   	pop    %rbp
    fbd4:	c3                   	ret

000000000000fbd5 <_ZSt19__relocate_object_aIPKcS1_SaIS1_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
    fbd5:	55                   	push   %rbp
    fbd6:	48 89 e5             	mov    %rsp,%rbp
    fbd9:	48 83 ec 20          	sub    $0x20,%rsp
    fbdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbe1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fbe5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
    fbe9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbed:	48 89 c7             	mov    %rax,%rdi
    fbf0:	e8 3b f0 ff ff       	call   ec30 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    fbf5:	48 89 c2             	mov    %rax,%rdx
    fbf8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    fbfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc00:	48 89 ce             	mov    %rcx,%rsi
    fc03:	48 89 c7             	mov    %rax,%rdi
    fc06:	e8 0e f6 ff ff       	call   f219 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
    fc0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc0f:	48 89 c7             	mov    %rax,%rdi
    fc12:	e8 53 f5 ff ff       	call   f16a <_ZSt11__addressofIPKcEPT_RS2_>
    fc17:	48 89 c2             	mov    %rax,%rdx
    fc1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc1e:	48 89 d6             	mov    %rdx,%rsi
    fc21:	48 89 c7             	mov    %rax,%rdi
    fc24:	e8 c5 f8 ff ff       	call   f4ee <_ZNSt16allocator_traitsISaIPKcEE7destroyIS1_EEvRS2_PT_>
    }
    fc29:	90                   	nop
    fc2a:	c9                   	leave
    fc2b:	c3                   	ret

000000000000fc2c <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    fc2c:	55                   	push   %rbp
    fc2d:	48 89 e5             	mov    %rsp,%rbp
    fc30:	48 83 ec 20          	sub    $0x20,%rsp
    fc34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fc38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fc3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    fc40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fc44:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fc48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc4c:	48 89 ce             	mov    %rcx,%rsi
    fc4f:	48 89 c7             	mov    %rax,%rdi
    fc52:	e8 ae 00 00 00       	call   fd05 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    fc57:	90                   	nop
    fc58:	c9                   	leave
    fc59:	c3                   	ret

000000000000fc5a <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKPKcPS4_EET0_T_S9_S8_>:
	__copy_m(_II __first, _II __last, _OI __result)
    fc5a:	55                   	push   %rbp
    fc5b:	48 89 e5             	mov    %rsp,%rbp
    fc5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fc62:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fc66:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    fc6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fc6e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    fc72:	48 c1 f8 03          	sar    $0x3,%rax
    fc76:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fc7a:	eb 1d                	jmp    fc99 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKPKcPS4_EET0_T_S9_S8_+0x3f>
	      *__result = *__first;
    fc7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc80:	48 8b 10             	mov    (%rax),%rdx
    fc83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fc87:	48 89 10             	mov    %rdx,(%rax)
	      ++__first;
    fc8a:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      ++__result;
    fc8f:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
	  for(_Distance __n = __last - __first; __n > 0; --__n)
    fc94:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
    fc99:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    fc9e:	7f dc                	jg     fc7c <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKPKcPS4_EET0_T_S9_S8_+0x22>
	  return __result;
    fca0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
	}
    fca4:	5d                   	pop    %rbp
    fca5:	c3                   	ret

000000000000fca6 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    fca6:	55                   	push   %rbp
    fca7:	48 89 e5             	mov    %rsp,%rbp
    fcaa:	48 83 ec 30          	sub    $0x30,%rsp
    fcae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fcb2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fcb6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    fcba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fcbe:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    fcc2:	48 c1 f8 03          	sar    $0x3,%rax
    fcc6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    fcca:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    fccf:	74 1f                	je     fcf0 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    fcd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fcd5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fcdc:	00 
    fcdd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    fce1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fce5:	48 89 ce             	mov    %rcx,%rsi
    fce8:	48 89 c7             	mov    %rax,%rdi
    fceb:	e8 f0 55 ff ff       	call   52e0 <memmove@plt>
	  return __result + _Num;
    fcf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fcf4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fcfb:	00 
    fcfc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fd00:	48 01 d0             	add    %rdx,%rax
	}
    fd03:	c9                   	leave
    fd04:	c3                   	ret

000000000000fd05 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    fd05:	55                   	push   %rbp
    fd06:	48 89 e5             	mov    %rsp,%rbp
    fd09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fd11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    fd15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fd19:	48 8b 00             	mov    (%rax),%rax
    fd1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    fd20:	eb 10                	jmp    fd32 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    fd22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fd2a:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    fd2d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    fd32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd36:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    fd3a:	75 e6                	jne    fd22 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    fd3c:	90                   	nop
    fd3d:	90                   	nop
    fd3e:	5d                   	pop    %rbp
    fd3f:	c3                   	ret

Disassembly of section .fini:

000000000000fd40 <_fini>:
    fd40:	48 83 ec 08          	sub    $0x8,%rsp
    fd44:	48 83 c4 08          	add    $0x8,%rsp
    fd48:	c3                   	ret
