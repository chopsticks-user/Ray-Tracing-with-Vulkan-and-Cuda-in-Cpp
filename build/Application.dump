
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	48 83 ec 08          	sub    $0x8,%rsp
    2004:	48 8b 05 b5 bf 00 00 	mov    0xbfb5(%rip),%rax        # dfc0 <__gmon_start__@Base>
    200b:	48 85 c0             	test   %rax,%rax
    200e:	74 02                	je     2012 <_init+0x12>
    2010:	ff d0                	call   *%rax
    2012:	48 83 c4 08          	add    $0x8,%rsp
    2016:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <glfwDestroyWindow@plt-0x10>:
    2020:	ff 35 ca bf 00 00    	push   0xbfca(%rip)        # dff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 cc bf 00 00    	jmp    *0xbfcc(%rip)        # dff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002030 <glfwDestroyWindow@plt>:
    2030:	ff 25 ca bf 00 00    	jmp    *0xbfca(%rip)        # e000 <glfwDestroyWindow@Base>
    2036:	68 00 00 00 00       	push   $0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002040 <_ZSt17__throw_bad_allocv@plt>:
    2040:	ff 25 c2 bf 00 00    	jmp    *0xbfc2(%rip)        # e008 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    2046:	68 01 00 00 00       	push   $0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002050 <_ZNSt13runtime_errorC1EPKc@plt>:
    2050:	ff 25 ba bf 00 00    	jmp    *0xbfba(%rip)        # e010 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    2056:	68 02 00 00 00       	push   $0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002060 <vkGetPhysicalDeviceProperties@plt>:
    2060:	ff 25 b2 bf 00 00    	jmp    *0xbfb2(%rip)        # e018 <vkGetPhysicalDeviceProperties@Base>
    2066:	68 03 00 00 00       	push   $0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002070 <__cxa_begin_catch@plt>:
    2070:	ff 25 aa bf 00 00    	jmp    *0xbfaa(%rip)        # e020 <__cxa_begin_catch@CXXABI_1.3>
    2076:	68 04 00 00 00       	push   $0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002080 <strlen@plt>:
    2080:	ff 25 a2 bf 00 00    	jmp    *0xbfa2(%rip)        # e028 <strlen@GLIBC_2.2.5>
    2086:	68 05 00 00 00       	push   $0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002090 <memcmp@plt>:
    2090:	ff 25 9a bf 00 00    	jmp    *0xbf9a(%rip)        # e030 <memcmp@GLIBC_2.2.5>
    2096:	68 06 00 00 00       	push   $0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020a0 <__cxa_allocate_exception@plt>:
    20a0:	ff 25 92 bf 00 00    	jmp    *0xbf92(%rip)        # e038 <__cxa_allocate_exception@CXXABI_1.3>
    20a6:	68 07 00 00 00       	push   $0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020b0 <_ZSt20__throw_length_errorPKc@plt>:
    20b0:	ff 25 8a bf 00 00    	jmp    *0xbf8a(%rip)        # e040 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    20b6:	68 08 00 00 00       	push   $0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020c0 <vkEnumeratePhysicalDevices@plt>:
    20c0:	ff 25 82 bf 00 00    	jmp    *0xbf82(%rip)        # e048 <vkEnumeratePhysicalDevices@Base>
    20c6:	68 09 00 00 00       	push   $0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020d0 <__cxa_free_exception@plt>:
    20d0:	ff 25 7a bf 00 00    	jmp    *0xbf7a(%rip)        # e050 <__cxa_free_exception@CXXABI_1.3>
    20d6:	68 0a 00 00 00       	push   $0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020e0 <glfwGetRequiredInstanceExtensions@plt>:
    20e0:	ff 25 72 bf 00 00    	jmp    *0xbf72(%rip)        # e058 <glfwGetRequiredInstanceExtensions@Base>
    20e6:	68 0b 00 00 00       	push   $0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020f0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    20f0:	ff 25 6a bf 00 00    	jmp    *0xbf6a(%rip)        # e060 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    20f6:	68 0c 00 00 00       	push   $0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002100 <vkDestroyDevice@plt>:
    2100:	ff 25 62 bf 00 00    	jmp    *0xbf62(%rip)        # e068 <vkDestroyDevice@Base>
    2106:	68 0d 00 00 00       	push   $0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002110 <vkEnumerateInstanceExtensionProperties@plt>:
    2110:	ff 25 5a bf 00 00    	jmp    *0xbf5a(%rip)        # e070 <vkEnumerateInstanceExtensionProperties@Base>
    2116:	68 0e 00 00 00       	push   $0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002120 <glfwWindowHint@plt>:
    2120:	ff 25 52 bf 00 00    	jmp    *0xbf52(%rip)        # e078 <glfwWindowHint@Base>
    2126:	68 0f 00 00 00       	push   $0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002130 <__cxa_atexit@plt>:
    2130:	ff 25 4a bf 00 00    	jmp    *0xbf4a(%rip)        # e080 <__cxa_atexit@GLIBC_2.2.5>
    2136:	68 10 00 00 00       	push   $0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002140 <vkGetPhysicalDeviceProperties2@plt>:
    2140:	ff 25 42 bf 00 00    	jmp    *0xbf42(%rip)        # e088 <vkGetPhysicalDeviceProperties2@Base>
    2146:	68 11 00 00 00       	push   $0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002150 <vkGetInstanceProcAddr@plt>:
    2150:	ff 25 3a bf 00 00    	jmp    *0xbf3a(%rip)        # e090 <vkGetInstanceProcAddr@Base>
    2156:	68 12 00 00 00       	push   $0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002160 <glfwPollEvents@plt>:
    2160:	ff 25 32 bf 00 00    	jmp    *0xbf32(%rip)        # e098 <glfwPollEvents@Base>
    2166:	68 13 00 00 00       	push   $0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002170 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    2170:	ff 25 2a bf 00 00    	jmp    *0xbf2a(%rip)        # e0a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    2176:	68 14 00 00 00       	push   $0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002180 <_Znwm@plt>:
    2180:	ff 25 22 bf 00 00    	jmp    *0xbf22(%rip)        # e0a8 <_Znwm@GLIBCXX_3.4>
    2186:	68 15 00 00 00       	push   $0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002190 <_ZdlPvm@plt>:
    2190:	ff 25 1a bf 00 00    	jmp    *0xbf1a(%rip)        # e0b0 <_ZdlPvm@CXXABI_1.3.9>
    2196:	68 16 00 00 00       	push   $0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021a0 <vkDestroyInstance@plt>:
    21a0:	ff 25 12 bf 00 00    	jmp    *0xbf12(%rip)        # e0b8 <vkDestroyInstance@Base>
    21a6:	68 17 00 00 00       	push   $0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021b0 <glfwTerminate@plt>:
    21b0:	ff 25 0a bf 00 00    	jmp    *0xbf0a(%rip)        # e0c0 <glfwTerminate@Base>
    21b6:	68 18 00 00 00       	push   $0x18
    21bb:	e9 60 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021c0 <_ZNSolsEPFRSoS_E@plt>:
    21c0:	ff 25 02 bf 00 00    	jmp    *0xbf02(%rip)        # e0c8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    21c6:	68 19 00 00 00       	push   $0x19
    21cb:	e9 50 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021d0 <vkEnumerateInstanceLayerProperties@plt>:
    21d0:	ff 25 fa be 00 00    	jmp    *0xbefa(%rip)        # e0d0 <vkEnumerateInstanceLayerProperties@Base>
    21d6:	68 1a 00 00 00       	push   $0x1a
    21db:	e9 40 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021e0 <glfwInit@plt>:
    21e0:	ff 25 f2 be 00 00    	jmp    *0xbef2(%rip)        # e0d8 <glfwInit@Base>
    21e6:	68 1b 00 00 00       	push   $0x1b
    21eb:	e9 30 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    21f0:	ff 25 ea be 00 00    	jmp    *0xbeea(%rip)        # e0e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    21f6:	68 1c 00 00 00       	push   $0x1c
    21fb:	e9 20 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002200 <vkCreateInstance@plt>:
    2200:	ff 25 e2 be 00 00    	jmp    *0xbee2(%rip)        # e0e8 <vkCreateInstance@Base>
    2206:	68 1d 00 00 00       	push   $0x1d
    220b:	e9 10 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002210 <vkEnumerateDeviceExtensionProperties@plt>:
    2210:	ff 25 da be 00 00    	jmp    *0xbeda(%rip)        # e0f0 <vkEnumerateDeviceExtensionProperties@Base>
    2216:	68 1e 00 00 00       	push   $0x1e
    221b:	e9 00 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002220 <vkCreateDevice@plt>:
    2220:	ff 25 d2 be 00 00    	jmp    *0xbed2(%rip)        # e0f8 <vkCreateDevice@Base>
    2226:	68 1f 00 00 00       	push   $0x1f
    222b:	e9 f0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002230 <_ZNSt8ios_base4InitC1Ev@plt>:
    2230:	ff 25 ca be 00 00    	jmp    *0xbeca(%rip)        # e100 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    2236:	68 20 00 00 00       	push   $0x20
    223b:	e9 e0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002240 <glfwCreateWindow@plt>:
    2240:	ff 25 c2 be 00 00    	jmp    *0xbec2(%rip)        # e108 <glfwCreateWindow@Base>
    2246:	68 21 00 00 00       	push   $0x21
    224b:	e9 d0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002250 <memmove@plt>:
    2250:	ff 25 ba be 00 00    	jmp    *0xbeba(%rip)        # e110 <memmove@GLIBC_2.2.5>
    2256:	68 22 00 00 00       	push   $0x22
    225b:	e9 c0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002260 <__cxa_end_catch@plt>:
    2260:	ff 25 b2 be 00 00    	jmp    *0xbeb2(%rip)        # e118 <__cxa_end_catch@CXXABI_1.3>
    2266:	68 23 00 00 00       	push   $0x23
    226b:	e9 b0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002270 <__cxa_throw@plt>:
    2270:	ff 25 aa be 00 00    	jmp    *0xbeaa(%rip)        # e120 <__cxa_throw@CXXABI_1.3>
    2276:	68 24 00 00 00       	push   $0x24
    227b:	e9 a0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002280 <_Unwind_Resume@plt>:
    2280:	ff 25 a2 be 00 00    	jmp    *0xbea2(%rip)        # e128 <_Unwind_Resume@GCC_3.0>
    2286:	68 25 00 00 00       	push   $0x25
    228b:	e9 90 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002290 <glfwWindowShouldClose@plt>:
    2290:	ff 25 9a be 00 00    	jmp    *0xbe9a(%rip)        # e130 <glfwWindowShouldClose@Base>
    2296:	68 26 00 00 00       	push   $0x26
    229b:	e9 80 fd ff ff       	jmp    2020 <_init+0x20>

Disassembly of section .plt.got:

00000000000022a0 <__cxa_finalize@plt>:
    22a0:	ff 25 f2 bc 00 00    	jmp    *0xbcf2(%rip)        # df98 <__cxa_finalize@GLIBC_2.2.5>
    22a6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000022b0 <_start>:
    22b0:	31 ed                	xor    %ebp,%ebp
    22b2:	49 89 d1             	mov    %rdx,%r9
    22b5:	5e                   	pop    %rsi
    22b6:	48 89 e2             	mov    %rsp,%rdx
    22b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    22bd:	50                   	push   %rax
    22be:	54                   	push   %rsp
    22bf:	45 31 c0             	xor    %r8d,%r8d
    22c2:	31 c9                	xor    %ecx,%ecx
    22c4:	48 8d 3d 24 01 00 00 	lea    0x124(%rip),%rdi        # 23ef <main>
    22cb:	ff 15 d7 bc 00 00    	call   *0xbcd7(%rip)        # dfa8 <__libc_start_main@GLIBC_2.34>
    22d1:	f4                   	hlt
    22d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d9:	00 00 00 
    22dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000022e0 <deregister_tm_clones>:
    22e0:	48 8d 3d 71 be 00 00 	lea    0xbe71(%rip),%rdi        # e158 <__TMC_END__>
    22e7:	48 8d 05 6a be 00 00 	lea    0xbe6a(%rip),%rax        # e158 <__TMC_END__>
    22ee:	48 39 f8             	cmp    %rdi,%rax
    22f1:	74 15                	je     2308 <deregister_tm_clones+0x28>
    22f3:	48 8b 05 be bc 00 00 	mov    0xbcbe(%rip),%rax        # dfb8 <_ITM_deregisterTMCloneTable@Base>
    22fa:	48 85 c0             	test   %rax,%rax
    22fd:	74 09                	je     2308 <deregister_tm_clones+0x28>
    22ff:	ff e0                	jmp    *%rax
    2301:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2308:	c3                   	ret
    2309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002310 <register_tm_clones>:
    2310:	48 8d 3d 41 be 00 00 	lea    0xbe41(%rip),%rdi        # e158 <__TMC_END__>
    2317:	48 8d 35 3a be 00 00 	lea    0xbe3a(%rip),%rsi        # e158 <__TMC_END__>
    231e:	48 29 fe             	sub    %rdi,%rsi
    2321:	48 89 f0             	mov    %rsi,%rax
    2324:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2328:	48 c1 f8 03          	sar    $0x3,%rax
    232c:	48 01 c6             	add    %rax,%rsi
    232f:	48 d1 fe             	sar    %rsi
    2332:	74 14                	je     2348 <register_tm_clones+0x38>
    2334:	48 8b 05 8d bc 00 00 	mov    0xbc8d(%rip),%rax        # dfc8 <_ITM_registerTMCloneTable@Base>
    233b:	48 85 c0             	test   %rax,%rax
    233e:	74 08                	je     2348 <register_tm_clones+0x38>
    2340:	ff e0                	jmp    *%rax
    2342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2348:	c3                   	ret
    2349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002350 <__do_global_dtors_aux>:
    2350:	f3 0f 1e fa          	endbr64
    2354:	80 3d 15 bf 00 00 00 	cmpb   $0x0,0xbf15(%rip)        # e270 <completed.0>
    235b:	75 2b                	jne    2388 <__do_global_dtors_aux+0x38>
    235d:	55                   	push   %rbp
    235e:	48 83 3d 32 bc 00 00 	cmpq   $0x0,0xbc32(%rip)        # df98 <__cxa_finalize@GLIBC_2.2.5>
    2365:	00 
    2366:	48 89 e5             	mov    %rsp,%rbp
    2369:	74 0c                	je     2377 <__do_global_dtors_aux+0x27>
    236b:	48 8b 3d ce bd 00 00 	mov    0xbdce(%rip),%rdi        # e140 <__dso_handle>
    2372:	e8 29 ff ff ff       	call   22a0 <__cxa_finalize@plt>
    2377:	e8 64 ff ff ff       	call   22e0 <deregister_tm_clones>
    237c:	c6 05 ed be 00 00 01 	movb   $0x1,0xbeed(%rip)        # e270 <completed.0>
    2383:	5d                   	pop    %rbp
    2384:	c3                   	ret
    2385:	0f 1f 00             	nopl   (%rax)
    2388:	c3                   	ret
    2389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002390 <frame_dummy>:
    2390:	f3 0f 1e fa          	endbr64
    2394:	e9 77 ff ff ff       	jmp    2310 <register_tm_clones>

0000000000002399 <_Z14protected_mainv>:
#include <vkh.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    2399:	55                   	push   %rbp
    239a:	48 89 e5             	mov    %rsp,%rbp
    239d:	53                   	push   %rbx
    239e:	48 83 ec 28          	sub    $0x28,%rsp
  VulkanApp app;
    23a2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    23a6:	48 89 c7             	mov    %rax,%rdi
    23a9:	e8 76 3e 00 00       	call   6224 <_ZN9VulkanAppC1Ev>
  app.run();
    23ae:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    23b2:	48 89 c7             	mov    %rax,%rdi
    23b5:	e8 02 3f 00 00       	call   62bc <_ZN9VulkanApp3runEv>
  return EXIT_SUCCESS;
    23ba:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    23bf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    23c3:	48 89 c7             	mov    %rax,%rdi
    23c6:	e8 99 3e 00 00       	call   6264 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    23cb:	89 d8                	mov    %ebx,%eax
    23cd:	eb 1a                	jmp    23e9 <_Z14protected_mainv+0x50>
}
    23cf:	48 89 c3             	mov    %rax,%rbx
    23d2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    23d6:	48 89 c7             	mov    %rax,%rdi
    23d9:	e8 86 3e 00 00       	call   6264 <_ZN9VulkanAppD1Ev>
    23de:	48 89 d8             	mov    %rbx,%rax
    23e1:	48 89 c7             	mov    %rax,%rdi
    23e4:	e8 97 fe ff ff       	call   2280 <_Unwind_Resume@plt>
    23e9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    23ed:	c9                   	leave
    23ee:	c3                   	ret

00000000000023ef <main>:

int main() {
    23ef:	55                   	push   %rbp
    23f0:	48 89 e5             	mov    %rsp,%rbp
    23f3:	53                   	push   %rbx
    23f4:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    23f8:	e8 9c ff ff ff       	call   2399 <_Z14protected_mainv>
    23fd:	e9 aa 00 00 00       	jmp    24ac <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    2402:	b8 01 00 00 00       	mov    $0x1,%eax
    2407:	e9 a0 00 00 00       	jmp    24ac <main+0xbd>
  } catch (const std::exception &e) {
    240c:	48 83 fa 01          	cmp    $0x1,%rdx
    2410:	75 49                	jne    245b <main+0x6c>
    2412:	48 89 c7             	mov    %rax,%rdi
    2415:	e8 56 fc ff ff       	call   2070 <__cxa_begin_catch@plt>
    241a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    241e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2422:	48 8b 00             	mov    (%rax),%rax
    2425:	48 83 c0 10          	add    $0x10,%rax
    2429:	48 8b 10             	mov    (%rax),%rdx
    242c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2430:	48 89 c7             	mov    %rax,%rdi
    2433:	ff d2                	call   *%rdx
    2435:	48 89 c6             	mov    %rax,%rsi
    2438:	48 8d 05 21 bd 00 00 	lea    0xbd21(%rip),%rax        # e160 <_ZSt4cerr@GLIBCXX_3.4>
    243f:	48 89 c7             	mov    %rax,%rdi
    2442:	e8 29 fd ff ff       	call   2170 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    2447:	be 0a 00 00 00       	mov    $0xa,%esi
    244c:	48 89 c7             	mov    %rax,%rdi
    244f:	e8 9c fd ff ff       	call   21f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    2454:	e8 07 fe ff ff       	call   2260 <__cxa_end_catch@plt>
    2459:	eb a7                	jmp    2402 <main+0x13>
    245b:	48 89 c7             	mov    %rax,%rdi
    245e:	e8 0d fc ff ff       	call   2070 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    2463:	48 8d 05 76 51 00 00 	lea    0x5176(%rip),%rax        # 75e0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    246a:	48 89 c6             	mov    %rax,%rsi
    246d:	48 8d 05 ec bc 00 00 	lea    0xbcec(%rip),%rax        # e160 <_ZSt4cerr@GLIBCXX_3.4>
    2474:	48 89 c7             	mov    %rax,%rdi
    2477:	e8 f4 fc ff ff       	call   2170 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    247c:	e8 df fd ff ff       	call   2260 <__cxa_end_catch@plt>
    2481:	e9 7c ff ff ff       	jmp    2402 <main+0x13>
  } catch (...) {
    2486:	48 89 c3             	mov    %rax,%rbx
    2489:	e8 d2 fd ff ff       	call   2260 <__cxa_end_catch@plt>
    248e:	48 89 d8             	mov    %rbx,%rax
    2491:	48 89 c7             	mov    %rax,%rdi
    2494:	e8 e7 fd ff ff       	call   2280 <_Unwind_Resume@plt>
  }
    2499:	48 89 c3             	mov    %rax,%rbx
    249c:	e8 bf fd ff ff       	call   2260 <__cxa_end_catch@plt>
    24a1:	48 89 d8             	mov    %rbx,%rax
    24a4:	48 89 c7             	mov    %rax,%rdi
    24a7:	e8 d4 fd ff ff       	call   2280 <_Unwind_Resume@plt>
    24ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    24b0:	c9                   	leave
    24b1:	c3                   	ret

00000000000024b2 <_Z41__static_initialization_and_destruction_0ii>:
    24b2:	55                   	push   %rbp
    24b3:	48 89 e5             	mov    %rsp,%rbp
    24b6:	48 83 ec 10          	sub    $0x10,%rsp
    24ba:	89 7d fc             	mov    %edi,-0x4(%rbp)
    24bd:	89 75 f8             	mov    %esi,-0x8(%rbp)
    24c0:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    24c4:	75 3b                	jne    2501 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    24c6:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    24cd:	75 32                	jne    2501 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    24cf:	48 8d 05 9b bd 00 00 	lea    0xbd9b(%rip),%rax        # e271 <_ZStL8__ioinit>
    24d6:	48 89 c7             	mov    %rax,%rdi
    24d9:	e8 52 fd ff ff       	call   2230 <_ZNSt8ios_base4InitC1Ev@plt>
    24de:	48 8d 05 5b bc 00 00 	lea    0xbc5b(%rip),%rax        # e140 <__dso_handle>
    24e5:	48 89 c2             	mov    %rax,%rdx
    24e8:	48 8d 05 82 bd 00 00 	lea    0xbd82(%rip),%rax        # e271 <_ZStL8__ioinit>
    24ef:	48 89 c6             	mov    %rax,%rsi
    24f2:	48 8b 05 d7 ba 00 00 	mov    0xbad7(%rip),%rax        # dfd0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    24f9:	48 89 c7             	mov    %rax,%rdi
    24fc:	e8 2f fc ff ff       	call   2130 <__cxa_atexit@plt>
    2501:	90                   	nop
    2502:	c9                   	leave
    2503:	c3                   	ret

0000000000002504 <_GLOBAL__sub_I__Z14protected_mainv>:
    2504:	55                   	push   %rbp
    2505:	48 89 e5             	mov    %rsp,%rbp
    2508:	be ff ff 00 00       	mov    $0xffff,%esi
    250d:	bf 01 00 00 00       	mov    $0x1,%edi
    2512:	e8 9b ff ff ff       	call   24b2 <_Z41__static_initialization_and_destruction_0ii>
    2517:	5d                   	pop    %rbp
    2518:	c3                   	ret

0000000000002519 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    2519:	55                   	push   %rbp
    251a:	48 89 e5             	mov    %rsp,%rbp
    251d:	48 83 ec 20          	sub    $0x20,%rsp
    2521:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2524:	89 75 f8             	mov    %esi,-0x8(%rbp)
    2527:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    252b:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    252f:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    2533:	be 00 00 00 00       	mov    $0x0,%esi
    2538:	bf 01 20 02 00       	mov    $0x22001,%edi
    253d:	e8 de fb ff ff       	call   2120 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    2542:	be 00 00 00 00       	mov    $0x0,%esi
    2547:	bf 03 00 02 00       	mov    $0x20003,%edi
    254c:	e8 cf fb ff ff       	call   2120 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    2551:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2555:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2559:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    255d:	8b 75 f8             	mov    -0x8(%rbp),%esi
    2560:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2563:	49 89 f8             	mov    %rdi,%r8
    2566:	89 c7                	mov    %eax,%edi
    2568:	e8 d3 fc ff ff       	call   2240 <glfwCreateWindow@plt>
}
    256d:	c9                   	leave
    256e:	c3                   	ret

000000000000256f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    256f:	55                   	push   %rbp
    2570:	48 89 e5             	mov    %rsp,%rbp
    2573:	41 54                	push   %r12
    2575:	53                   	push   %rbx
    2576:	48 83 ec 20          	sub    $0x20,%rsp
    257a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    257e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    2582:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2586:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    258a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    258e:	48 89 ce             	mov    %rcx,%rsi
    2591:	48 89 c7             	mov    %rax,%rdi
    2594:	e8 67 fc ff ff       	call   2200 <vkCreateInstance@plt>
    2599:	85 c0                	test   %eax,%eax
    259b:	0f 95 c0             	setne  %al
    259e:	84 c0                	test   %al,%al
    25a0:	74 3b                	je     25dd <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    25a2:	bf 10 00 00 00       	mov    $0x10,%edi
    25a7:	e8 f4 fa ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    25ac:	48 89 c3             	mov    %rax,%rbx
    25af:	48 8d 05 1a 56 00 00 	lea    0x561a(%rip),%rax        # 7bd0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    25b6:	48 89 c6             	mov    %rax,%rsi
    25b9:	48 89 df             	mov    %rbx,%rdi
    25bc:	e8 8f fa ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    25c1:	48 8b 05 e8 b9 00 00 	mov    0xb9e8(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    25c8:	48 89 c2             	mov    %rax,%rdx
    25cb:	48 8d 05 8e b7 00 00 	lea    0xb78e(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    25d2:	48 89 c6             	mov    %rax,%rsi
    25d5:	48 89 df             	mov    %rbx,%rdi
    25d8:	e8 93 fc ff ff       	call   2270 <__cxa_throw@plt>
  }
  return instance;
    25dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    25e1:	eb 16                	jmp    25f9 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    25e3:	49 89 c4             	mov    %rax,%r12
    25e6:	48 89 df             	mov    %rbx,%rdi
    25e9:	e8 e2 fa ff ff       	call   20d0 <__cxa_free_exception@plt>
    25ee:	4c 89 e0             	mov    %r12,%rax
    25f1:	48 89 c7             	mov    %rax,%rdi
    25f4:	e8 87 fc ff ff       	call   2280 <_Unwind_Resume@plt>
}
    25f9:	48 83 c4 20          	add    $0x20,%rsp
    25fd:	5b                   	pop    %rbx
    25fe:	41 5c                	pop    %r12
    2600:	5d                   	pop    %rbp
    2601:	c3                   	ret

0000000000002602 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    2602:	55                   	push   %rbp
    2603:	48 89 e5             	mov    %rsp,%rbp
    2606:	41 54                	push   %r12
    2608:	53                   	push   %rbx
    2609:	48 83 ec 30          	sub    $0x30,%rsp
    260d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2611:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2615:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    2619:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    261d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2621:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    2625:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2629:	48 89 c7             	mov    %rax,%rdi
    262c:	e8 ef fb ff ff       	call   2220 <vkCreateDevice@plt>
    2631:	85 c0                	test   %eax,%eax
    2633:	0f 95 c0             	setne  %al
    2636:	84 c0                	test   %al,%al
    2638:	74 3b                	je     2675 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    263a:	bf 10 00 00 00       	mov    $0x10,%edi
    263f:	e8 5c fa ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    2644:	48 89 c3             	mov    %rax,%rbx
    2647:	48 8d 05 a2 55 00 00 	lea    0x55a2(%rip),%rax        # 7bf0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    264e:	48 89 c6             	mov    %rax,%rsi
    2651:	48 89 df             	mov    %rbx,%rdi
    2654:	e8 f7 f9 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    2659:	48 8b 05 50 b9 00 00 	mov    0xb950(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2660:	48 89 c2             	mov    %rax,%rdx
    2663:	48 8d 05 f6 b6 00 00 	lea    0xb6f6(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    266a:	48 89 c6             	mov    %rax,%rsi
    266d:	48 89 df             	mov    %rbx,%rdi
    2670:	e8 fb fb ff ff       	call   2270 <__cxa_throw@plt>
  }
  return device;
    2675:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2679:	eb 16                	jmp    2691 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    267b:	49 89 c4             	mov    %rax,%r12
    267e:	48 89 df             	mov    %rbx,%rdi
    2681:	e8 4a fa ff ff       	call   20d0 <__cxa_free_exception@plt>
    2686:	4c 89 e0             	mov    %r12,%rax
    2689:	48 89 c7             	mov    %rax,%rdi
    268c:	e8 ef fb ff ff       	call   2280 <_Unwind_Resume@plt>
}
    2691:	48 83 c4 30          	add    $0x30,%rsp
    2695:	5b                   	pop    %rbx
    2696:	41 5c                	pop    %r12
    2698:	5d                   	pop    %rbp
    2699:	c3                   	ret

000000000000269a <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    269a:	55                   	push   %rbp
    269b:	48 89 e5             	mov    %rsp,%rbp
    269e:	48 83 ec 10          	sub    $0x10,%rsp
    26a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    26a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26aa:	48 89 c7             	mov    %rax,%rdi
    26ad:	e8 7e f9 ff ff       	call   2030 <glfwDestroyWindow@plt>
    26b2:	90                   	nop
    26b3:	c9                   	leave
    26b4:	c3                   	ret

00000000000026b5 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    26b5:	55                   	push   %rbp
    26b6:	48 89 e5             	mov    %rsp,%rbp
    26b9:	48 83 ec 10          	sub    $0x10,%rsp
    26bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    26c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    26c5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    26c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26cd:	48 89 d6             	mov    %rdx,%rsi
    26d0:	48 89 c7             	mov    %rax,%rdi
    26d3:	e8 c8 fa ff ff       	call   21a0 <vkDestroyInstance@plt>
}
    26d8:	90                   	nop
    26d9:	c9                   	leave
    26da:	c3                   	ret

00000000000026db <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    26db:	55                   	push   %rbp
    26dc:	48 89 e5             	mov    %rsp,%rbp
    26df:	48 83 ec 10          	sub    $0x10,%rsp
    26e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    26e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    26eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    26ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26f3:	48 89 d6             	mov    %rdx,%rsi
    26f6:	48 89 c7             	mov    %rax,%rdi
    26f9:	e8 02 fa ff ff       	call   2100 <vkDestroyDevice@plt>
}
    26fe:	90                   	nop
    26ff:	c9                   	leave
    2700:	c3                   	ret

0000000000002701 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    2701:	55                   	push   %rbp
    2702:	48 89 e5             	mov    %rsp,%rbp
    2705:	41 54                	push   %r12
    2707:	53                   	push   %rbx
    2708:	48 83 ec 20          	sub    $0x20,%rsp
    270c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2710:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2714:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2718:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    271c:	ba 00 00 00 00       	mov    $0x0,%edx
    2721:	48 89 ce             	mov    %rcx,%rsi
    2724:	48 89 c7             	mov    %rax,%rdi
    2727:	e8 e4 f9 ff ff       	call   2110 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    272c:	85 c0                	test   %eax,%eax
    272e:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2731:	84 c0                	test   %al,%al
    2733:	74 3b                	je     2770 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    2735:	bf 10 00 00 00       	mov    $0x10,%edi
    273a:	e8 61 f9 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    273f:	48 89 c3             	mov    %rax,%rbx
    2742:	48 8d 05 7f 60 00 00 	lea    0x607f(%rip),%rax        # 87c8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2749:	48 89 c6             	mov    %rax,%rsi
    274c:	48 89 df             	mov    %rbx,%rdi
    274f:	e8 fc f8 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    2754:	48 8b 05 55 b8 00 00 	mov    0xb855(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    275b:	48 89 c2             	mov    %rax,%rdx
    275e:	48 8d 05 fb b5 00 00 	lea    0xb5fb(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2765:	48 89 c6             	mov    %rax,%rsi
    2768:	48 89 df             	mov    %rbx,%rdi
    276b:	e8 00 fb ff ff       	call   2270 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    2770:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2773:	89 c3                	mov    %eax,%ebx
    2775:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2779:	48 89 c7             	mov    %rax,%rdi
    277c:	e8 77 06 00 00       	call   2df8 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    2781:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2785:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2789:	48 89 de             	mov    %rbx,%rsi
    278c:	48 89 c7             	mov    %rax,%rdi
    278f:	e8 9c 06 00 00       	call   2e30 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    2794:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2798:	48 89 c7             	mov    %rax,%rdi
    279b:	e8 74 06 00 00       	call   2e14 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    27a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    27a4:	48 89 c7             	mov    %rax,%rdi
    27a7:	e8 3e 07 00 00       	call   2eea <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    27ac:	48 89 c2             	mov    %rax,%rdx
    27af:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    27b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    27b7:	48 89 ce             	mov    %rcx,%rsi
    27ba:	48 89 c7             	mov    %rax,%rdi
    27bd:	e8 4e f9 ff ff       	call   2110 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    27c2:	85 c0                	test   %eax,%eax
    27c4:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    27c7:	84 c0                	test   %al,%al
    27c9:	0f 84 95 00 00 00    	je     2864 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    27cf:	bf 10 00 00 00       	mov    $0x10,%edi
    27d4:	e8 c7 f8 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    27d9:	48 89 c3             	mov    %rax,%rbx
    27dc:	48 8d 05 e5 5f 00 00 	lea    0x5fe5(%rip),%rax        # 87c8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    27e3:	48 89 c6             	mov    %rax,%rsi
    27e6:	48 89 df             	mov    %rbx,%rdi
    27e9:	e8 62 f8 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    27ee:	48 8b 05 bb b7 00 00 	mov    0xb7bb(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    27f5:	48 89 c2             	mov    %rax,%rdx
    27f8:	48 8d 05 61 b5 00 00 	lea    0xb561(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    27ff:	48 89 c6             	mov    %rax,%rsi
    2802:	48 89 df             	mov    %rbx,%rdi
    2805:	e8 66 fa ff ff       	call   2270 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    280a:	49 89 c4             	mov    %rax,%r12
    280d:	48 89 df             	mov    %rbx,%rdi
    2810:	e8 bb f8 ff ff       	call   20d0 <__cxa_free_exception@plt>
    2815:	4c 89 e0             	mov    %r12,%rax
    2818:	48 89 c7             	mov    %rax,%rdi
    281b:	e8 60 fa ff ff       	call   2280 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    2820:	48 89 c3             	mov    %rax,%rbx
    2823:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2827:	48 89 c7             	mov    %rax,%rdi
    282a:	e8 e5 05 00 00       	call   2e14 <_ZNSaI21VkExtensionPropertiesED1Ev>
    282f:	48 89 d8             	mov    %rbx,%rax
    2832:	48 89 c7             	mov    %rax,%rdi
    2835:	e8 46 fa ff ff       	call   2280 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    283a:	49 89 c4             	mov    %rax,%r12
    283d:	48 89 df             	mov    %rbx,%rdi
    2840:	e8 8b f8 ff ff       	call   20d0 <__cxa_free_exception@plt>
    2845:	4c 89 e3             	mov    %r12,%rbx
    2848:	eb 03                	jmp    284d <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    284a:	48 89 c3             	mov    %rax,%rbx
    284d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2851:	48 89 c7             	mov    %rax,%rdi
    2854:	e8 4d 06 00 00       	call   2ea6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2859:	48 89 d8             	mov    %rbx,%rax
    285c:	48 89 c7             	mov    %rax,%rdi
    285f:	e8 1c fa ff ff       	call   2280 <_Unwind_Resume@plt>
  return instanceExtensions;
    2864:	90                   	nop
}
    2865:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2869:	48 83 c4 20          	add    $0x20,%rsp
    286d:	5b                   	pop    %rbx
    286e:	41 5c                	pop    %r12
    2870:	5d                   	pop    %rbp
    2871:	c3                   	ret

0000000000002872 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    2872:	55                   	push   %rbp
    2873:	48 89 e5             	mov    %rsp,%rbp
    2876:	41 54                	push   %r12
    2878:	53                   	push   %rbx
    2879:	48 83 ec 30          	sub    $0x30,%rsp
    287d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2881:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2885:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    2889:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    288d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2891:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2895:	b9 00 00 00 00       	mov    $0x0,%ecx
    289a:	48 89 c7             	mov    %rax,%rdi
    289d:	e8 6e f9 ff ff       	call   2210 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    28a2:	85 c0                	test   %eax,%eax
    28a4:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    28a7:	84 c0                	test   %al,%al
    28a9:	74 3b                	je     28e6 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    28ab:	bf 10 00 00 00       	mov    $0x10,%edi
    28b0:	e8 eb f7 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    28b5:	48 89 c3             	mov    %rax,%rbx
    28b8:	48 8d 05 31 5f 00 00 	lea    0x5f31(%rip),%rax        # 87f0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    28bf:	48 89 c6             	mov    %rax,%rsi
    28c2:	48 89 df             	mov    %rbx,%rdi
    28c5:	e8 86 f7 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    28ca:	48 8b 05 df b6 00 00 	mov    0xb6df(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    28d1:	48 89 c2             	mov    %rax,%rdx
    28d4:	48 8d 05 85 b4 00 00 	lea    0xb485(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    28db:	48 89 c6             	mov    %rax,%rsi
    28de:	48 89 df             	mov    %rbx,%rdi
    28e1:	e8 8a f9 ff ff       	call   2270 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    28e6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    28e9:	89 c3                	mov    %eax,%ebx
    28eb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    28ef:	48 89 c7             	mov    %rax,%rdi
    28f2:	e8 01 05 00 00       	call   2df8 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    28f7:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    28fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    28ff:	48 89 de             	mov    %rbx,%rsi
    2902:	48 89 c7             	mov    %rax,%rdi
    2905:	e8 26 05 00 00       	call   2e30 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    290a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    290e:	48 89 c7             	mov    %rax,%rdi
    2911:	e8 fe 04 00 00       	call   2e14 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    2916:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    291a:	48 89 c7             	mov    %rax,%rdi
    291d:	e8 c8 05 00 00       	call   2eea <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    2922:	48 89 c1             	mov    %rax,%rcx
    2925:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2929:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    292d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2931:	48 89 c7             	mov    %rax,%rdi
    2934:	e8 d7 f8 ff ff       	call   2210 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    2939:	85 c0                	test   %eax,%eax
    293b:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    293e:	84 c0                	test   %al,%al
    2940:	0f 84 95 00 00 00    	je     29db <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    2946:	bf 10 00 00 00       	mov    $0x10,%edi
    294b:	e8 50 f7 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    2950:	48 89 c3             	mov    %rax,%rbx
    2953:	48 8d 05 96 5e 00 00 	lea    0x5e96(%rip),%rax        # 87f0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    295a:	48 89 c6             	mov    %rax,%rsi
    295d:	48 89 df             	mov    %rbx,%rdi
    2960:	e8 eb f6 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    2965:	48 8b 05 44 b6 00 00 	mov    0xb644(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    296c:	48 89 c2             	mov    %rax,%rdx
    296f:	48 8d 05 ea b3 00 00 	lea    0xb3ea(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2976:	48 89 c6             	mov    %rax,%rsi
    2979:	48 89 df             	mov    %rbx,%rdi
    297c:	e8 ef f8 ff ff       	call   2270 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2981:	49 89 c4             	mov    %rax,%r12
    2984:	48 89 df             	mov    %rbx,%rdi
    2987:	e8 44 f7 ff ff       	call   20d0 <__cxa_free_exception@plt>
    298c:	4c 89 e0             	mov    %r12,%rax
    298f:	48 89 c7             	mov    %rax,%rdi
    2992:	e8 e9 f8 ff ff       	call   2280 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2997:	48 89 c3             	mov    %rax,%rbx
    299a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    299e:	48 89 c7             	mov    %rax,%rdi
    29a1:	e8 6e 04 00 00       	call   2e14 <_ZNSaI21VkExtensionPropertiesED1Ev>
    29a6:	48 89 d8             	mov    %rbx,%rax
    29a9:	48 89 c7             	mov    %rax,%rdi
    29ac:	e8 cf f8 ff ff       	call   2280 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    29b1:	49 89 c4             	mov    %rax,%r12
    29b4:	48 89 df             	mov    %rbx,%rdi
    29b7:	e8 14 f7 ff ff       	call   20d0 <__cxa_free_exception@plt>
    29bc:	4c 89 e3             	mov    %r12,%rbx
    29bf:	eb 03                	jmp    29c4 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    29c1:	48 89 c3             	mov    %rax,%rbx
    29c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29c8:	48 89 c7             	mov    %rax,%rdi
    29cb:	e8 d6 04 00 00       	call   2ea6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    29d0:	48 89 d8             	mov    %rbx,%rax
    29d3:	48 89 c7             	mov    %rax,%rdi
    29d6:	e8 a5 f8 ff ff       	call   2280 <_Unwind_Resume@plt>
  return deviceExtensions;
    29db:	90                   	nop
}
    29dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29e0:	48 83 c4 30          	add    $0x30,%rsp
    29e4:	5b                   	pop    %rbx
    29e5:	41 5c                	pop    %r12
    29e7:	5d                   	pop    %rbp
    29e8:	c3                   	ret

00000000000029e9 <_ZN3vkh36getRequiredInstanceExtensionNameListEb>:

std::vector<const char *>
getRequiredInstanceExtensionNameList(bool enableValidationLayers) {
    29e9:	55                   	push   %rbp
    29ea:	48 89 e5             	mov    %rsp,%rbp
    29ed:	53                   	push   %rbx
    29ee:	48 83 ec 38          	sub    $0x38,%rsp
    29f2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    29f6:	89 f0                	mov    %esi,%eax
    29f8:	88 45 c4             	mov    %al,-0x3c(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    29fb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    29ff:	48 89 c7             	mov    %rax,%rdi
    2a02:	e8 d9 f6 ff ff       	call   20e0 <glfwGetRequiredInstanceExtensions@plt>
    2a07:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    2a0b:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2a0e:	89 c3                	mov    %eax,%ebx
    2a10:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2a14:	48 89 c7             	mov    %rax,%rdi
    2a17:	e8 4a 05 00 00       	call   2f66 <_ZNSaIPKcEC1Ev>
    2a1c:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    2a20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a24:	48 89 de             	mov    %rbx,%rsi
    2a27:	48 89 c7             	mov    %rax,%rdi
    2a2a:	e8 6f 05 00 00       	call   2f9e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    2a2f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2a33:	48 89 c7             	mov    %rax,%rdi
    2a36:	e8 47 05 00 00       	call   2f82 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2a3b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2a42:	eb 2e                	jmp    2a72 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x89>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    2a44:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2a47:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2a4e:	00 
    2a4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2a53:	48 01 d0             	add    %rdx,%rax
    2a56:	48 8b 18             	mov    (%rax),%rbx
    2a59:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2a5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a60:	48 89 d6             	mov    %rdx,%rsi
    2a63:	48 89 c7             	mov    %rax,%rdi
    2a66:	e8 ed 05 00 00       	call   3058 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    2a6b:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2a6e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2a72:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2a75:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    2a78:	72 ca                	jb     2a44 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x5b>
  }
  if (enableValidationLayers) {
    2a7a:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
    2a7e:	74 54                	je     2ad4 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
    requiredInstanceExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    2a80:	48 8d 05 8e 5d 00 00 	lea    0x5d8e(%rip),%rax        # 8815 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x55>
    2a87:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2a8b:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    2a8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a93:	48 89 d6             	mov    %rdx,%rsi
    2a96:	48 89 c7             	mov    %rax,%rdi
    2a99:	e8 da 05 00 00       	call   3078 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>
  }
  return requiredInstanceExtensions;
    2a9e:	eb 34                	jmp    2ad4 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    2aa0:	48 89 c3             	mov    %rax,%rbx
    2aa3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2aa7:	48 89 c7             	mov    %rax,%rdi
    2aaa:	e8 d3 04 00 00       	call   2f82 <_ZNSaIPKcED1Ev>
    2aaf:	48 89 d8             	mov    %rbx,%rax
    2ab2:	48 89 c7             	mov    %rax,%rdi
    2ab5:	e8 c6 f7 ff ff       	call   2280 <_Unwind_Resume@plt>
}
    2aba:	48 89 c3             	mov    %rax,%rbx
    2abd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ac1:	48 89 c7             	mov    %rax,%rdi
    2ac4:	e8 4b 05 00 00       	call   3014 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    2ac9:	48 89 d8             	mov    %rbx,%rax
    2acc:	48 89 c7             	mov    %rax,%rdi
    2acf:	e8 ac f7 ff ff       	call   2280 <_Unwind_Resume@plt>
  return requiredInstanceExtensions;
    2ad4:	90                   	nop
}
    2ad5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ad9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2add:	c9                   	leave
    2ade:	c3                   	ret

0000000000002adf <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    2adf:	55                   	push   %rbp
    2ae0:	48 89 e5             	mov    %rsp,%rbp
    2ae3:	53                   	push   %rbx
    2ae4:	48 83 ec 28          	sub    $0x28,%rsp
    2ae8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    2aec:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2af0:	be 00 00 00 00       	mov    $0x0,%esi
    2af5:	48 89 c7             	mov    %rax,%rdi
    2af8:	e8 d3 f6 ff ff       	call   21d0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    2afd:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2b00:	89 c3                	mov    %eax,%ebx
    2b02:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b06:	48 89 c7             	mov    %rax,%rdi
    2b09:	e8 ea 05 00 00       	call   30f8 <_ZNSaI17VkLayerPropertiesEC1Ev>
    2b0e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2b12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b16:	48 89 de             	mov    %rbx,%rsi
    2b19:	48 89 c7             	mov    %rax,%rdi
    2b1c:	e8 0f 06 00 00       	call   3130 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    2b21:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b25:	48 89 c7             	mov    %rax,%rdi
    2b28:	e8 e7 05 00 00       	call   3114 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    2b2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b31:	48 89 c7             	mov    %rax,%rdi
    2b34:	e8 b1 06 00 00       	call   31ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    2b39:	48 89 c2             	mov    %rax,%rdx
    2b3c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2b40:	48 89 d6             	mov    %rdx,%rsi
    2b43:	48 89 c7             	mov    %rax,%rdi
    2b46:	e8 85 f6 ff ff       	call   21d0 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    2b4b:	eb 34                	jmp    2b81 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    2b4d:	48 89 c3             	mov    %rax,%rbx
    2b50:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b54:	48 89 c7             	mov    %rax,%rdi
    2b57:	e8 b8 05 00 00       	call   3114 <_ZNSaI17VkLayerPropertiesED1Ev>
    2b5c:	48 89 d8             	mov    %rbx,%rax
    2b5f:	48 89 c7             	mov    %rax,%rdi
    2b62:	e8 19 f7 ff ff       	call   2280 <_Unwind_Resume@plt>
}
    2b67:	48 89 c3             	mov    %rax,%rbx
    2b6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b6e:	48 89 c7             	mov    %rax,%rdi
    2b71:	e8 30 06 00 00       	call   31a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    2b76:	48 89 d8             	mov    %rbx,%rax
    2b79:	48 89 c7             	mov    %rax,%rdi
    2b7c:	e8 ff f6 ff ff       	call   2280 <_Unwind_Resume@plt>
    2b81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b85:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2b89:	c9                   	leave
    2b8a:	c3                   	ret

0000000000002b8b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    2b8b:	55                   	push   %rbp
    2b8c:	48 89 e5             	mov    %rsp,%rbp
    2b8f:	41 54                	push   %r12
    2b91:	53                   	push   %rbx
    2b92:	48 83 ec 20          	sub    $0x20,%rsp
    2b96:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2b9a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    2b9e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2ba2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2ba6:	ba 00 00 00 00       	mov    $0x0,%edx
    2bab:	48 89 ce             	mov    %rcx,%rsi
    2bae:	48 89 c7             	mov    %rax,%rdi
    2bb1:	e8 0a f5 ff ff       	call   20c0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    2bb6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2bb9:	85 c0                	test   %eax,%eax
    2bbb:	75 3b                	jne    2bf8 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    2bbd:	bf 10 00 00 00       	mov    $0x10,%edi
    2bc2:	e8 d9 f4 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    2bc7:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    2bca:	48 8d 05 57 5c 00 00 	lea    0x5c57(%rip),%rax        # 8828 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    2bd1:	48 89 c6             	mov    %rax,%rsi
    2bd4:	48 89 df             	mov    %rbx,%rdi
    2bd7:	e8 74 f4 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    2bdc:	48 8b 05 cd b3 00 00 	mov    0xb3cd(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2be3:	48 89 c2             	mov    %rax,%rdx
    2be6:	48 8d 05 73 b1 00 00 	lea    0xb173(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2bed:	48 89 c6             	mov    %rax,%rsi
    2bf0:	48 89 df             	mov    %rbx,%rdi
    2bf3:	e8 78 f6 ff ff       	call   2270 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2bf8:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2bfb:	89 c3                	mov    %eax,%ebx
    2bfd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2c01:	48 89 c7             	mov    %rax,%rdi
    2c04:	e8 5d 06 00 00       	call   3266 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    2c09:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c11:	48 89 de             	mov    %rbx,%rsi
    2c14:	48 89 c7             	mov    %rax,%rdi
    2c17:	e8 82 06 00 00       	call   329e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    2c1c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2c20:	48 89 c7             	mov    %rax,%rdi
    2c23:	e8 5a 06 00 00       	call   3282 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2c28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c2c:	48 89 c7             	mov    %rax,%rdi
    2c2f:	e8 24 07 00 00       	call   3358 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    2c34:	48 89 c2             	mov    %rax,%rdx
    2c37:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2c3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2c3f:	48 89 ce             	mov    %rcx,%rsi
    2c42:	48 89 c7             	mov    %rax,%rdi
    2c45:	e8 76 f4 ff ff       	call   20c0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    2c4a:	85 c0                	test   %eax,%eax
    2c4c:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2c4f:	84 c0                	test   %al,%al
    2c51:	0f 84 95 00 00 00    	je     2cec <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    2c57:	bf 10 00 00 00       	mov    $0x10,%edi
    2c5c:	e8 3f f4 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    2c61:	48 89 c3             	mov    %rax,%rbx
    2c64:	48 8d 05 f5 5b 00 00 	lea    0x5bf5(%rip),%rax        # 8860 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xa0>
    2c6b:	48 89 c6             	mov    %rax,%rsi
    2c6e:	48 89 df             	mov    %rbx,%rdi
    2c71:	e8 da f3 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    2c76:	48 8b 05 33 b3 00 00 	mov    0xb333(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2c7d:	48 89 c2             	mov    %rax,%rdx
    2c80:	48 8d 05 d9 b0 00 00 	lea    0xb0d9(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2c87:	48 89 c6             	mov    %rax,%rsi
    2c8a:	48 89 df             	mov    %rbx,%rdi
    2c8d:	e8 de f5 ff ff       	call   2270 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    2c92:	49 89 c4             	mov    %rax,%r12
    2c95:	48 89 df             	mov    %rbx,%rdi
    2c98:	e8 33 f4 ff ff       	call   20d0 <__cxa_free_exception@plt>
    2c9d:	4c 89 e0             	mov    %r12,%rax
    2ca0:	48 89 c7             	mov    %rax,%rdi
    2ca3:	e8 d8 f5 ff ff       	call   2280 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2ca8:	48 89 c3             	mov    %rax,%rbx
    2cab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2caf:	48 89 c7             	mov    %rax,%rdi
    2cb2:	e8 cb 05 00 00       	call   3282 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    2cb7:	48 89 d8             	mov    %rbx,%rax
    2cba:	48 89 c7             	mov    %rax,%rdi
    2cbd:	e8 be f5 ff ff       	call   2280 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    2cc2:	49 89 c4             	mov    %rax,%r12
    2cc5:	48 89 df             	mov    %rbx,%rdi
    2cc8:	e8 03 f4 ff ff       	call   20d0 <__cxa_free_exception@plt>
    2ccd:	4c 89 e3             	mov    %r12,%rbx
    2cd0:	eb 03                	jmp    2cd5 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    2cd2:	48 89 c3             	mov    %rax,%rbx
    2cd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cd9:	48 89 c7             	mov    %rax,%rdi
    2cdc:	e8 33 06 00 00       	call   3314 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    2ce1:	48 89 d8             	mov    %rbx,%rax
    2ce4:	48 89 c7             	mov    %rax,%rdi
    2ce7:	e8 94 f5 ff ff       	call   2280 <_Unwind_Resume@plt>
  return physicalDevices;
    2cec:	90                   	nop
}
    2ced:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cf1:	48 83 c4 20          	add    $0x20,%rsp
    2cf5:	5b                   	pop    %rbx
    2cf6:	41 5c                	pop    %r12
    2cf8:	5d                   	pop    %rbp
    2cf9:	c3                   	ret

0000000000002cfa <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    2cfa:	55                   	push   %rbp
    2cfb:	48 89 e5             	mov    %rsp,%rbp
    2cfe:	48 83 ec 10          	sub    $0x10,%rsp
    2d02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2d06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    2d0a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2d0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d12:	48 89 d6             	mov    %rdx,%rsi
    2d15:	48 89 c7             	mov    %rax,%rdi
    2d18:	e8 43 f3 ff ff       	call   2060 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    2d1d:	90                   	nop
}
    2d1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d22:	c9                   	leave
    2d23:	c3                   	ret

0000000000002d24 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    2d24:	55                   	push   %rbp
    2d25:	48 89 e5             	mov    %rsp,%rbp
    2d28:	48 83 ec 20          	sub    $0x20,%rsp
    2d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2d30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2d34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    2d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d3c:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    2d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d46:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2d4a:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    2d4e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2d52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d56:	48 89 d6             	mov    %rdx,%rsi
    2d59:	48 89 c7             	mov    %rax,%rdi
    2d5c:	e8 df f3 ff ff       	call   2140 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    2d61:	90                   	nop
}
    2d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d66:	c9                   	leave
    2d67:	c3                   	ret

0000000000002d68 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    2d68:	55                   	push   %rbp
    2d69:	48 89 e5             	mov    %rsp,%rbp
    2d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2d70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2d74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d78:	5d                   	pop    %rbp
    2d79:	c3                   	ret

0000000000002d7a <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    2d7a:	55                   	push   %rbp
    2d7b:	48 89 e5             	mov    %rsp,%rbp
    2d7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d86:	5d                   	pop    %rbp
    2d87:	c3                   	ret

0000000000002d88 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    2d88:	55                   	push   %rbp
    2d89:	48 89 e5             	mov    %rsp,%rbp
    2d8c:	48 83 ec 10          	sub    $0x10,%rsp
    2d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2d94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d98:	48 89 c7             	mov    %rax,%rdi
    2d9b:	e8 74 00 00 00       	call   2e14 <_ZNSaI21VkExtensionPropertiesED1Ev>
    2da0:	90                   	nop
    2da1:	c9                   	leave
    2da2:	c3                   	ret
    2da3:	90                   	nop

0000000000002da4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    2da4:	55                   	push   %rbp
    2da5:	48 89 e5             	mov    %rsp,%rbp
    2da8:	48 83 ec 10          	sub    $0x10,%rsp
    2dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2db4:	48 89 c7             	mov    %rax,%rdi
    2db7:	e8 c6 01 00 00       	call   2f82 <_ZNSaIPKcED1Ev>
    2dbc:	90                   	nop
    2dbd:	c9                   	leave
    2dbe:	c3                   	ret
    2dbf:	90                   	nop

0000000000002dc0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
    2dc0:	55                   	push   %rbp
    2dc1:	48 89 e5             	mov    %rsp,%rbp
    2dc4:	48 83 ec 10          	sub    $0x10,%rsp
    2dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2dd0:	48 89 c7             	mov    %rax,%rdi
    2dd3:	e8 3c 03 00 00       	call   3114 <_ZNSaI17VkLayerPropertiesED1Ev>
    2dd8:	90                   	nop
    2dd9:	c9                   	leave
    2dda:	c3                   	ret
    2ddb:	90                   	nop

0000000000002ddc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    2ddc:	55                   	push   %rbp
    2ddd:	48 89 e5             	mov    %rsp,%rbp
    2de0:	48 83 ec 10          	sub    $0x10,%rsp
    2de4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2de8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2dec:	48 89 c7             	mov    %rax,%rdi
    2def:	e8 8e 04 00 00       	call   3282 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    2df4:	90                   	nop
    2df5:	c9                   	leave
    2df6:	c3                   	ret
    2df7:	90                   	nop

0000000000002df8 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    2df8:	55                   	push   %rbp
    2df9:	48 89 e5             	mov    %rsp,%rbp
    2dfc:	48 83 ec 10          	sub    $0x10,%rsp
    2e00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e08:	48 89 c7             	mov    %rax,%rdi
    2e0b:	e8 ba 05 00 00       	call   33ca <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    2e10:	90                   	nop
    2e11:	c9                   	leave
    2e12:	c3                   	ret
    2e13:	90                   	nop

0000000000002e14 <_ZNSaI21VkExtensionPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    2e14:	55                   	push   %rbp
    2e15:	48 89 e5             	mov    %rsp,%rbp
    2e18:	48 83 ec 10          	sub    $0x10,%rsp
    2e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e24:	48 89 c7             	mov    %rax,%rdi
    2e27:	e8 aa 05 00 00       	call   33d6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    2e2c:	90                   	nop
    2e2d:	c9                   	leave
    2e2e:	c3                   	ret
    2e2f:	90                   	nop

0000000000002e30 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    2e30:	55                   	push   %rbp
    2e31:	48 89 e5             	mov    %rsp,%rbp
    2e34:	53                   	push   %rbx
    2e35:	48 83 ec 28          	sub    $0x28,%rsp
    2e39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2e3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2e41:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    2e45:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    2e49:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2e4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2e51:	48 89 d6             	mov    %rdx,%rsi
    2e54:	48 89 c7             	mov    %rax,%rdi
    2e57:	e8 85 05 00 00       	call   33e1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    2e5c:	48 89 c1             	mov    %rax,%rcx
    2e5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e63:	48 89 c2             	mov    %rax,%rdx
    2e66:	48 89 ce             	mov    %rcx,%rsi
    2e69:	48 89 df             	mov    %rbx,%rdi
    2e6c:	e8 d1 05 00 00       	call   3442 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    2e71:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e79:	48 89 d6             	mov    %rdx,%rsi
    2e7c:	48 89 c7             	mov    %rax,%rdi
    2e7f:	e8 1c 06 00 00       	call   34a0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    2e84:	eb 1a                	jmp    2ea0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    2e86:	48 89 c3             	mov    %rax,%rbx
    2e89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e8d:	48 89 c7             	mov    %rax,%rdi
    2e90:	e8 79 00 00 00       	call   2f0e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    2e95:	48 89 d8             	mov    %rbx,%rax
    2e98:	48 89 c7             	mov    %rax,%rdi
    2e9b:	e8 e0 f3 ff ff       	call   2280 <_Unwind_Resume@plt>
    2ea0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2ea4:	c9                   	leave
    2ea5:	c3                   	ret

0000000000002ea6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    2ea6:	55                   	push   %rbp
    2ea7:	48 89 e5             	mov    %rsp,%rbp
    2eaa:	48 83 ec 10          	sub    $0x10,%rsp
    2eae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    2eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2eb6:	48 89 c7             	mov    %rax,%rdi
    2eb9:	e8 22 06 00 00       	call   34e0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    2ebe:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    2ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ec5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    2ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ecd:	48 8b 00             	mov    (%rax),%rax
    2ed0:	48 89 ce             	mov    %rcx,%rsi
    2ed3:	48 89 c7             	mov    %rax,%rdi
    2ed6:	e8 13 06 00 00       	call   34ee <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    2edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2edf:	48 89 c7             	mov    %rax,%rdi
    2ee2:	e8 27 00 00 00       	call   2f0e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    2ee7:	90                   	nop
    2ee8:	c9                   	leave
    2ee9:	c3                   	ret

0000000000002eea <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    2eea:	55                   	push   %rbp
    2eeb:	48 89 e5             	mov    %rsp,%rbp
    2eee:	48 83 ec 10          	sub    $0x10,%rsp
    2ef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    2ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2efa:	48 8b 10             	mov    (%rax),%rdx
    2efd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f01:	48 89 d6             	mov    %rdx,%rsi
    2f04:	48 89 c7             	mov    %rax,%rdi
    2f07:	e8 0c 06 00 00       	call   3518 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    2f0c:	c9                   	leave
    2f0d:	c3                   	ret

0000000000002f0e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    2f0e:	55                   	push   %rbp
    2f0f:	48 89 e5             	mov    %rsp,%rbp
    2f12:	48 83 ec 10          	sub    $0x10,%rsp
    2f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    2f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f1e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    2f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f26:	48 8b 00             	mov    (%rax),%rax
    2f29:	48 29 c2             	sub    %rax,%rdx
    2f2c:	48 c1 fa 02          	sar    $0x2,%rdx
    2f30:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    2f37:	fc c0 0f 
    2f3a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    2f3e:	48 89 c2             	mov    %rax,%rdx
    2f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f45:	48 8b 08             	mov    (%rax),%rcx
    2f48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f4c:	48 89 ce             	mov    %rcx,%rsi
    2f4f:	48 89 c7             	mov    %rax,%rdi
    2f52:	e8 f9 05 00 00       	call   3550 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    2f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f5b:	48 89 c7             	mov    %rax,%rdi
    2f5e:	e8 25 fe ff ff       	call   2d88 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    2f63:	90                   	nop
    2f64:	c9                   	leave
    2f65:	c3                   	ret

0000000000002f66 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    2f66:	55                   	push   %rbp
    2f67:	48 89 e5             	mov    %rsp,%rbp
    2f6a:	48 83 ec 10          	sub    $0x10,%rsp
    2f6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f76:	48 89 c7             	mov    %rax,%rdi
    2f79:	e8 08 06 00 00       	call   3586 <_ZNSt15__new_allocatorIPKcEC1Ev>
    2f7e:	90                   	nop
    2f7f:	c9                   	leave
    2f80:	c3                   	ret
    2f81:	90                   	nop

0000000000002f82 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    2f82:	55                   	push   %rbp
    2f83:	48 89 e5             	mov    %rsp,%rbp
    2f86:	48 83 ec 10          	sub    $0x10,%rsp
    2f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f92:	48 89 c7             	mov    %rax,%rdi
    2f95:	e8 f8 05 00 00       	call   3592 <_ZNSt15__new_allocatorIPKcED1Ev>
    2f9a:	90                   	nop
    2f9b:	c9                   	leave
    2f9c:	c3                   	ret
    2f9d:	90                   	nop

0000000000002f9e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    2f9e:	55                   	push   %rbp
    2f9f:	48 89 e5             	mov    %rsp,%rbp
    2fa2:	53                   	push   %rbx
    2fa3:	48 83 ec 28          	sub    $0x28,%rsp
    2fa7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2fab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2faf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    2fb3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    2fb7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2fbb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2fbf:	48 89 d6             	mov    %rdx,%rsi
    2fc2:	48 89 c7             	mov    %rax,%rdi
    2fc5:	e8 d3 05 00 00       	call   359d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    2fca:	48 89 c1             	mov    %rax,%rcx
    2fcd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2fd1:	48 89 c2             	mov    %rax,%rdx
    2fd4:	48 89 ce             	mov    %rcx,%rsi
    2fd7:	48 89 df             	mov    %rbx,%rdi
    2fda:	e8 1f 06 00 00       	call   35fe <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    2fdf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2fe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2fe7:	48 89 d6             	mov    %rdx,%rsi
    2fea:	48 89 c7             	mov    %rax,%rdi
    2fed:	e8 6a 06 00 00       	call   365c <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    2ff2:	eb 1a                	jmp    300e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    2ff4:	48 89 c3             	mov    %rax,%rbx
    2ff7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ffb:	48 89 c7             	mov    %rax,%rdi
    2ffe:	e8 a7 00 00 00       	call   30aa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    3003:	48 89 d8             	mov    %rbx,%rax
    3006:	48 89 c7             	mov    %rax,%rdi
    3009:	e8 72 f2 ff ff       	call   2280 <_Unwind_Resume@plt>
    300e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3012:	c9                   	leave
    3013:	c3                   	ret

0000000000003014 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3014:	55                   	push   %rbp
    3015:	48 89 e5             	mov    %rsp,%rbp
    3018:	48 83 ec 10          	sub    $0x10,%rsp
    301c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3024:	48 89 c7             	mov    %rax,%rdi
    3027:	e8 70 06 00 00       	call   369c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    302c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    302f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3033:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    303b:	48 8b 00             	mov    (%rax),%rax
    303e:	48 89 ce             	mov    %rcx,%rsi
    3041:	48 89 c7             	mov    %rax,%rdi
    3044:	e8 61 06 00 00       	call   36aa <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    3049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    304d:	48 89 c7             	mov    %rax,%rdi
    3050:	e8 55 00 00 00       	call   30aa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    3055:	90                   	nop
    3056:	c9                   	leave
    3057:	c3                   	ret

0000000000003058 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    3058:	55                   	push   %rbp
    3059:	48 89 e5             	mov    %rsp,%rbp
    305c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3060:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    3064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3068:	48 8b 00             	mov    (%rax),%rax
    306b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    306f:	48 c1 e2 03          	shl    $0x3,%rdx
    3073:	48 01 d0             	add    %rdx,%rax
      }
    3076:	5d                   	pop    %rbp
    3077:	c3                   	ret

0000000000003078 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      }

#if __cplusplus >= 201103L
      _GLIBCXX20_CONSTEXPR
      void
      push_back(value_type&& __x)
    3078:	55                   	push   %rbp
    3079:	48 89 e5             	mov    %rsp,%rbp
    307c:	48 83 ec 10          	sub    $0x10,%rsp
    3080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3084:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    3088:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    308c:	48 89 c7             	mov    %rax,%rdi
    308f:	e8 40 06 00 00       	call   36d4 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    3094:	48 89 c2             	mov    %rax,%rdx
    3097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    309b:	48 89 d6             	mov    %rdx,%rsi
    309e:	48 89 c7             	mov    %rax,%rdi
    30a1:	e8 3c 06 00 00       	call   36e2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    30a6:	90                   	nop
    30a7:	c9                   	leave
    30a8:	c3                   	ret
    30a9:	90                   	nop

00000000000030aa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    30aa:	55                   	push   %rbp
    30ab:	48 89 e5             	mov    %rsp,%rbp
    30ae:	48 83 ec 10          	sub    $0x10,%rsp
    30b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    30b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30ba:	48 8b 50 10          	mov    0x10(%rax),%rdx
    30be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30c2:	48 8b 00             	mov    (%rax),%rax
    30c5:	48 29 c2             	sub    %rax,%rdx
    30c8:	48 89 d0             	mov    %rdx,%rax
    30cb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    30cf:	48 89 c2             	mov    %rax,%rdx
    30d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30d6:	48 8b 08             	mov    (%rax),%rcx
    30d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30dd:	48 89 ce             	mov    %rcx,%rsi
    30e0:	48 89 c7             	mov    %rax,%rdi
    30e3:	e8 c4 06 00 00       	call   37ac <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    30e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30ec:	48 89 c7             	mov    %rax,%rdi
    30ef:	e8 b0 fc ff ff       	call   2da4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    30f4:	90                   	nop
    30f5:	c9                   	leave
    30f6:	c3                   	ret
    30f7:	90                   	nop

00000000000030f8 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    30f8:	55                   	push   %rbp
    30f9:	48 89 e5             	mov    %rsp,%rbp
    30fc:	48 83 ec 10          	sub    $0x10,%rsp
    3100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3108:	48 89 c7             	mov    %rax,%rdi
    310b:	e8 d2 06 00 00       	call   37e2 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    3110:	90                   	nop
    3111:	c9                   	leave
    3112:	c3                   	ret
    3113:	90                   	nop

0000000000003114 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    3114:	55                   	push   %rbp
    3115:	48 89 e5             	mov    %rsp,%rbp
    3118:	48 83 ec 10          	sub    $0x10,%rsp
    311c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3124:	48 89 c7             	mov    %rax,%rdi
    3127:	e8 c2 06 00 00       	call   37ee <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    312c:	90                   	nop
    312d:	c9                   	leave
    312e:	c3                   	ret
    312f:	90                   	nop

0000000000003130 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3130:	55                   	push   %rbp
    3131:	48 89 e5             	mov    %rsp,%rbp
    3134:	53                   	push   %rbx
    3135:	48 83 ec 28          	sub    $0x28,%rsp
    3139:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    313d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3141:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    3145:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3149:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    314d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3151:	48 89 d6             	mov    %rdx,%rsi
    3154:	48 89 c7             	mov    %rax,%rdi
    3157:	e8 9d 06 00 00       	call   37f9 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    315c:	48 89 c1             	mov    %rax,%rcx
    315f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3163:	48 89 c2             	mov    %rax,%rdx
    3166:	48 89 ce             	mov    %rcx,%rsi
    3169:	48 89 df             	mov    %rbx,%rdi
    316c:	e8 e9 06 00 00       	call   385a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    3171:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3179:	48 89 d6             	mov    %rdx,%rsi
    317c:	48 89 c7             	mov    %rax,%rdi
    317f:	e8 34 07 00 00       	call   38b8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    3184:	eb 1a                	jmp    31a0 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    3186:	48 89 c3             	mov    %rax,%rbx
    3189:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    318d:	48 89 c7             	mov    %rax,%rdi
    3190:	e8 79 00 00 00       	call   320e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    3195:	48 89 d8             	mov    %rbx,%rax
    3198:	48 89 c7             	mov    %rax,%rdi
    319b:	e8 e0 f0 ff ff       	call   2280 <_Unwind_Resume@plt>
    31a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    31a4:	c9                   	leave
    31a5:	c3                   	ret

00000000000031a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    31a6:	55                   	push   %rbp
    31a7:	48 89 e5             	mov    %rsp,%rbp
    31aa:	48 83 ec 10          	sub    $0x10,%rsp
    31ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    31b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31b6:	48 89 c7             	mov    %rax,%rdi
    31b9:	e8 3a 07 00 00       	call   38f8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    31be:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    31c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31c5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    31c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31cd:	48 8b 00             	mov    (%rax),%rax
    31d0:	48 89 ce             	mov    %rcx,%rsi
    31d3:	48 89 c7             	mov    %rax,%rdi
    31d6:	e8 2b 07 00 00       	call   3906 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    31db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31df:	48 89 c7             	mov    %rax,%rdi
    31e2:	e8 27 00 00 00       	call   320e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    31e7:	90                   	nop
    31e8:	c9                   	leave
    31e9:	c3                   	ret

00000000000031ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    31ea:	55                   	push   %rbp
    31eb:	48 89 e5             	mov    %rsp,%rbp
    31ee:	48 83 ec 10          	sub    $0x10,%rsp
    31f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    31f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31fa:	48 8b 10             	mov    (%rax),%rdx
    31fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3201:	48 89 d6             	mov    %rdx,%rsi
    3204:	48 89 c7             	mov    %rax,%rdi
    3207:	e8 24 07 00 00       	call   3930 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    320c:	c9                   	leave
    320d:	c3                   	ret

000000000000320e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    320e:	55                   	push   %rbp
    320f:	48 89 e5             	mov    %rsp,%rbp
    3212:	48 83 ec 10          	sub    $0x10,%rsp
    3216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    321a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    321e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3226:	48 8b 00             	mov    (%rax),%rax
    3229:	48 29 c2             	sub    %rax,%rdx
    322c:	48 c1 fa 03          	sar    $0x3,%rdx
    3230:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    3237:	fc c0 0f 
    323a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    323e:	48 89 c2             	mov    %rax,%rdx
    3241:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3245:	48 8b 08             	mov    (%rax),%rcx
    3248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    324c:	48 89 ce             	mov    %rcx,%rsi
    324f:	48 89 c7             	mov    %rax,%rdi
    3252:	e8 11 07 00 00       	call   3968 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    3257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    325b:	48 89 c7             	mov    %rax,%rdi
    325e:	e8 5d fb ff ff       	call   2dc0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    3263:	90                   	nop
    3264:	c9                   	leave
    3265:	c3                   	ret

0000000000003266 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    3266:	55                   	push   %rbp
    3267:	48 89 e5             	mov    %rsp,%rbp
    326a:	48 83 ec 10          	sub    $0x10,%rsp
    326e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3276:	48 89 c7             	mov    %rax,%rdi
    3279:	e8 20 07 00 00       	call   399e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    327e:	90                   	nop
    327f:	c9                   	leave
    3280:	c3                   	ret
    3281:	90                   	nop

0000000000003282 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    3282:	55                   	push   %rbp
    3283:	48 89 e5             	mov    %rsp,%rbp
    3286:	48 83 ec 10          	sub    $0x10,%rsp
    328a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    328e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3292:	48 89 c7             	mov    %rax,%rdi
    3295:	e8 10 07 00 00       	call   39aa <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    329a:	90                   	nop
    329b:	c9                   	leave
    329c:	c3                   	ret
    329d:	90                   	nop

000000000000329e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    329e:	55                   	push   %rbp
    329f:	48 89 e5             	mov    %rsp,%rbp
    32a2:	53                   	push   %rbx
    32a3:	48 83 ec 28          	sub    $0x28,%rsp
    32a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    32ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    32af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    32b3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    32b7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    32bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    32bf:	48 89 d6             	mov    %rdx,%rsi
    32c2:	48 89 c7             	mov    %rax,%rdi
    32c5:	e8 eb 06 00 00       	call   39b5 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    32ca:	48 89 c1             	mov    %rax,%rcx
    32cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    32d1:	48 89 c2             	mov    %rax,%rdx
    32d4:	48 89 ce             	mov    %rcx,%rsi
    32d7:	48 89 df             	mov    %rbx,%rdi
    32da:	e8 37 07 00 00       	call   3a16 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    32df:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    32e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32e7:	48 89 d6             	mov    %rdx,%rsi
    32ea:	48 89 c7             	mov    %rax,%rdi
    32ed:	e8 82 07 00 00       	call   3a74 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    32f2:	eb 1a                	jmp    330e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    32f4:	48 89 c3             	mov    %rax,%rbx
    32f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32fb:	48 89 c7             	mov    %rax,%rdi
    32fe:	e8 79 00 00 00       	call   337c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    3303:	48 89 d8             	mov    %rbx,%rax
    3306:	48 89 c7             	mov    %rax,%rdi
    3309:	e8 72 ef ff ff       	call   2280 <_Unwind_Resume@plt>
    330e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3312:	c9                   	leave
    3313:	c3                   	ret

0000000000003314 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3314:	55                   	push   %rbp
    3315:	48 89 e5             	mov    %rsp,%rbp
    3318:	48 83 ec 10          	sub    $0x10,%rsp
    331c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3324:	48 89 c7             	mov    %rax,%rdi
    3327:	e8 88 07 00 00       	call   3ab4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    332c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    332f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3333:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    333b:	48 8b 00             	mov    (%rax),%rax
    333e:	48 89 ce             	mov    %rcx,%rsi
    3341:	48 89 c7             	mov    %rax,%rdi
    3344:	e8 79 07 00 00       	call   3ac2 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    3349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    334d:	48 89 c7             	mov    %rax,%rdi
    3350:	e8 27 00 00 00       	call   337c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    3355:	90                   	nop
    3356:	c9                   	leave
    3357:	c3                   	ret

0000000000003358 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    3358:	55                   	push   %rbp
    3359:	48 89 e5             	mov    %rsp,%rbp
    335c:	48 83 ec 10          	sub    $0x10,%rsp
    3360:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    3364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3368:	48 8b 10             	mov    (%rax),%rdx
    336b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    336f:	48 89 d6             	mov    %rdx,%rsi
    3372:	48 89 c7             	mov    %rax,%rdi
    3375:	e8 72 07 00 00       	call   3aec <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    337a:	c9                   	leave
    337b:	c3                   	ret

000000000000337c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    337c:	55                   	push   %rbp
    337d:	48 89 e5             	mov    %rsp,%rbp
    3380:	48 83 ec 10          	sub    $0x10,%rsp
    3384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    338c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3394:	48 8b 00             	mov    (%rax),%rax
    3397:	48 29 c2             	sub    %rax,%rdx
    339a:	48 89 d0             	mov    %rdx,%rax
    339d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    33a1:	48 89 c2             	mov    %rax,%rdx
    33a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33a8:	48 8b 08             	mov    (%rax),%rcx
    33ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33af:	48 89 ce             	mov    %rcx,%rsi
    33b2:	48 89 c7             	mov    %rax,%rdi
    33b5:	e8 6a 07 00 00       	call   3b24 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    33ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33be:	48 89 c7             	mov    %rax,%rdi
    33c1:	e8 16 fa ff ff       	call   2ddc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    33c6:	90                   	nop
    33c7:	c9                   	leave
    33c8:	c3                   	ret
    33c9:	90                   	nop

00000000000033ca <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    33ca:	55                   	push   %rbp
    33cb:	48 89 e5             	mov    %rsp,%rbp
    33ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33d2:	90                   	nop
    33d3:	5d                   	pop    %rbp
    33d4:	c3                   	ret
    33d5:	90                   	nop

00000000000033d6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    33d6:	55                   	push   %rbp
    33d7:	48 89 e5             	mov    %rsp,%rbp
    33da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33de:	90                   	nop
    33df:	5d                   	pop    %rbp
    33e0:	c3                   	ret

00000000000033e1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    33e1:	55                   	push   %rbp
    33e2:	48 89 e5             	mov    %rsp,%rbp
    33e5:	53                   	push   %rbx
    33e6:	48 83 ec 28          	sub    $0x28,%rsp
    33ea:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    33ee:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    33f2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    33f6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    33fa:	48 89 d6             	mov    %rdx,%rsi
    33fd:	48 89 c7             	mov    %rax,%rdi
    3400:	e8 25 01 00 00       	call   352a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    3405:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3409:	48 89 c7             	mov    %rax,%rdi
    340c:	e8 48 07 00 00       	call   3b59 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3411:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3415:	0f 92 c3             	setb   %bl
    3418:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    341c:	48 89 c7             	mov    %rax,%rdi
    341f:	e8 f0 f9 ff ff       	call   2e14 <_ZNSaI21VkExtensionPropertiesED1Ev>
    3424:	84 db                	test   %bl,%bl
    3426:	74 0f                	je     3437 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    3428:	48 8d 05 59 54 00 00 	lea    0x5459(%rip),%rax        # 8888 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    342f:	48 89 c7             	mov    %rax,%rdi
    3432:	e8 79 ec ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    3437:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    343b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    343f:	c9                   	leave
    3440:	c3                   	ret
    3441:	90                   	nop

0000000000003442 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3442:	55                   	push   %rbp
    3443:	48 89 e5             	mov    %rsp,%rbp
    3446:	53                   	push   %rbx
    3447:	48 83 ec 28          	sub    $0x28,%rsp
    344b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    344f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3453:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3457:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    345b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    345f:	48 89 d6             	mov    %rdx,%rsi
    3462:	48 89 c7             	mov    %rax,%rdi
    3465:	e8 32 07 00 00       	call   3b9c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    346a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    346e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3472:	48 89 d6             	mov    %rdx,%rsi
    3475:	48 89 c7             	mov    %rax,%rdi
    3478:	e8 51 07 00 00       	call   3bce <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    347d:	eb 1a                	jmp    3499 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    347f:	48 89 c3             	mov    %rax,%rbx
    3482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3486:	48 89 c7             	mov    %rax,%rdi
    3489:	e8 fa f8 ff ff       	call   2d88 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    348e:	48 89 d8             	mov    %rbx,%rax
    3491:	48 89 c7             	mov    %rax,%rdi
    3494:	e8 e7 ed ff ff       	call   2280 <_Unwind_Resume@plt>
    3499:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    349d:	c9                   	leave
    349e:	c3                   	ret
    349f:	90                   	nop

00000000000034a0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    34a0:	55                   	push   %rbp
    34a1:	48 89 e5             	mov    %rsp,%rbp
    34a4:	48 83 ec 10          	sub    $0x10,%rsp
    34a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    34ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    34b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34b4:	48 89 c7             	mov    %rax,%rdi
    34b7:	e8 24 00 00 00       	call   34e0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    34bc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    34bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34c3:	48 8b 00             	mov    (%rax),%rax
    34c6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    34ca:	48 89 ce             	mov    %rcx,%rsi
    34cd:	48 89 c7             	mov    %rax,%rdi
    34d0:	e8 5a 07 00 00       	call   3c2f <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    34d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    34d9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    34dd:	90                   	nop
    34de:	c9                   	leave
    34df:	c3                   	ret

00000000000034e0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    34e0:	55                   	push   %rbp
    34e1:	48 89 e5             	mov    %rsp,%rbp
    34e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    34e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34ec:	5d                   	pop    %rbp
    34ed:	c3                   	ret

00000000000034ee <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    34ee:	55                   	push   %rbp
    34ef:	48 89 e5             	mov    %rsp,%rbp
    34f2:	48 83 ec 20          	sub    $0x20,%rsp
    34f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    34fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    34fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    3502:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    350a:	48 89 d6             	mov    %rdx,%rsi
    350d:	48 89 c7             	mov    %rax,%rdi
    3510:	e8 43 07 00 00       	call   3c58 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    3515:	90                   	nop
    3516:	c9                   	leave
    3517:	c3                   	ret

0000000000003518 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3518:	55                   	push   %rbp
    3519:	48 89 e5             	mov    %rsp,%rbp
    351c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3520:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3524:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3528:	5d                   	pop    %rbp
    3529:	c3                   	ret

000000000000352a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    352a:	55                   	push   %rbp
    352b:	48 89 e5             	mov    %rsp,%rbp
    352e:	48 83 ec 10          	sub    $0x10,%rsp
    3532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3536:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    353a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    353e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3542:	48 89 d6             	mov    %rdx,%rsi
    3545:	48 89 c7             	mov    %rax,%rdi
    3548:	e8 31 07 00 00       	call   3c7e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    354d:	90                   	nop
    354e:	c9                   	leave
    354f:	c3                   	ret

0000000000003550 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    3550:	55                   	push   %rbp
    3551:	48 89 e5             	mov    %rsp,%rbp
    3554:	48 83 ec 20          	sub    $0x20,%rsp
    3558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    355c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3560:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3564:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3569:	74 17                	je     3582 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    356b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    356f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3573:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3577:	48 89 ce             	mov    %rcx,%rsi
    357a:	48 89 c7             	mov    %rax,%rdi
    357d:	e8 0b 07 00 00       	call   3c8d <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    3582:	90                   	nop
    3583:	c9                   	leave
    3584:	c3                   	ret
    3585:	90                   	nop

0000000000003586 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3586:	55                   	push   %rbp
    3587:	48 89 e5             	mov    %rsp,%rbp
    358a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    358e:	90                   	nop
    358f:	5d                   	pop    %rbp
    3590:	c3                   	ret
    3591:	90                   	nop

0000000000003592 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3592:	55                   	push   %rbp
    3593:	48 89 e5             	mov    %rsp,%rbp
    3596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    359a:	90                   	nop
    359b:	5d                   	pop    %rbp
    359c:	c3                   	ret

000000000000359d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    359d:	55                   	push   %rbp
    359e:	48 89 e5             	mov    %rsp,%rbp
    35a1:	53                   	push   %rbx
    35a2:	48 83 ec 28          	sub    $0x28,%rsp
    35a6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    35aa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    35ae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    35b2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    35b6:	48 89 d6             	mov    %rdx,%rsi
    35b9:	48 89 c7             	mov    %rax,%rdi
    35bc:	e8 c5 01 00 00       	call   3786 <_ZNSaIPKcEC1ERKS1_>
    35c1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    35c5:	48 89 c7             	mov    %rax,%rdi
    35c8:	e8 ee 06 00 00       	call   3cbb <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    35cd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    35d1:	0f 92 c3             	setb   %bl
    35d4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    35d8:	48 89 c7             	mov    %rax,%rdi
    35db:	e8 a2 f9 ff ff       	call   2f82 <_ZNSaIPKcED1Ev>
    35e0:	84 db                	test   %bl,%bl
    35e2:	74 0f                	je     35f3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    35e4:	48 8d 05 9d 52 00 00 	lea    0x529d(%rip),%rax        # 8888 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    35eb:	48 89 c7             	mov    %rax,%rdi
    35ee:	e8 bd ea ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    35f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    35f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    35fb:	c9                   	leave
    35fc:	c3                   	ret
    35fd:	90                   	nop

00000000000035fe <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    35fe:	55                   	push   %rbp
    35ff:	48 89 e5             	mov    %rsp,%rbp
    3602:	53                   	push   %rbx
    3603:	48 83 ec 28          	sub    $0x28,%rsp
    3607:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    360b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    360f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3617:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    361b:	48 89 d6             	mov    %rdx,%rsi
    361e:	48 89 c7             	mov    %rax,%rdi
    3621:	e8 d8 06 00 00       	call   3cfe <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    3626:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    362a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    362e:	48 89 d6             	mov    %rdx,%rsi
    3631:	48 89 c7             	mov    %rax,%rdi
    3634:	e8 f7 06 00 00       	call   3d30 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    3639:	eb 1a                	jmp    3655 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    363b:	48 89 c3             	mov    %rax,%rbx
    363e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3642:	48 89 c7             	mov    %rax,%rdi
    3645:	e8 5a f7 ff ff       	call   2da4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    364a:	48 89 d8             	mov    %rbx,%rax
    364d:	48 89 c7             	mov    %rax,%rdi
    3650:	e8 2b ec ff ff       	call   2280 <_Unwind_Resume@plt>
    3655:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3659:	c9                   	leave
    365a:	c3                   	ret
    365b:	90                   	nop

000000000000365c <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    365c:	55                   	push   %rbp
    365d:	48 89 e5             	mov    %rsp,%rbp
    3660:	48 83 ec 10          	sub    $0x10,%rsp
    3664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3668:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    366c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3670:	48 89 c7             	mov    %rax,%rdi
    3673:	e8 24 00 00 00       	call   369c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3678:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    367b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    367f:	48 8b 00             	mov    (%rax),%rax
    3682:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3686:	48 89 ce             	mov    %rcx,%rsi
    3689:	48 89 c7             	mov    %rax,%rdi
    368c:	e8 f5 06 00 00       	call   3d86 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3691:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3695:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3699:	90                   	nop
    369a:	c9                   	leave
    369b:	c3                   	ret

000000000000369c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    369c:	55                   	push   %rbp
    369d:	48 89 e5             	mov    %rsp,%rbp
    36a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    36a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36a8:	5d                   	pop    %rbp
    36a9:	c3                   	ret

00000000000036aa <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    36aa:	55                   	push   %rbp
    36ab:	48 89 e5             	mov    %rsp,%rbp
    36ae:	48 83 ec 20          	sub    $0x20,%rsp
    36b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    36ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    36be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    36c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36c6:	48 89 d6             	mov    %rdx,%rsi
    36c9:	48 89 c7             	mov    %rax,%rdi
    36cc:	e8 de 06 00 00       	call   3daf <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    36d1:	90                   	nop
    36d2:	c9                   	leave
    36d3:	c3                   	ret

00000000000036d4 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    36d4:	55                   	push   %rbp
    36d5:	48 89 e5             	mov    %rsp,%rbp
    36d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    36dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36e0:	5d                   	pop    %rbp
    36e1:	c3                   	ret

00000000000036e2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    36e2:	55                   	push   %rbp
    36e3:	48 89 e5             	mov    %rsp,%rbp
    36e6:	53                   	push   %rbx
    36e7:	48 83 ec 18          	sub    $0x18,%rsp
    36eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    36ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    36f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36f7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    36fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36ff:	48 8b 40 10          	mov    0x10(%rax),%rax
    3703:	48 39 c2             	cmp    %rax,%rdx
    3706:	74 3c                	je     3744 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    3708:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    370c:	48 89 c7             	mov    %rax,%rdi
    370f:	e8 c1 06 00 00       	call   3dd5 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    3714:	48 89 c2             	mov    %rax,%rdx
    3717:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    371b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    371f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3723:	48 89 ce             	mov    %rcx,%rsi
    3726:	48 89 c7             	mov    %rax,%rdi
    3729:	e8 b5 06 00 00       	call   3de3 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    372e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3732:	48 8b 40 08          	mov    0x8(%rax),%rax
    3736:	48 8d 50 08          	lea    0x8(%rax),%rdx
    373a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    373e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3742:	eb 30                	jmp    3774 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    3744:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3748:	48 89 c7             	mov    %rax,%rdi
    374b:	e8 85 06 00 00       	call   3dd5 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    3750:	48 89 c3             	mov    %rax,%rbx
    3753:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3757:	48 89 c7             	mov    %rax,%rdi
    375a:	e8 bd 06 00 00       	call   3e1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    375f:	48 89 c1             	mov    %rax,%rcx
    3762:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3766:	48 89 da             	mov    %rbx,%rdx
    3769:	48 89 ce             	mov    %rcx,%rsi
    376c:	48 89 c7             	mov    %rax,%rdi
    376f:	e8 d2 06 00 00       	call   3e46 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    3774:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3778:	48 89 c7             	mov    %rax,%rdi
    377b:	e8 58 08 00 00       	call   3fd8 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    3780:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3784:	c9                   	leave
    3785:	c3                   	ret

0000000000003786 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3786:	55                   	push   %rbp
    3787:	48 89 e5             	mov    %rsp,%rbp
    378a:	48 83 ec 10          	sub    $0x10,%rsp
    378e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3792:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3796:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    379a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    379e:	48 89 d6             	mov    %rdx,%rsi
    37a1:	48 89 c7             	mov    %rax,%rdi
    37a4:	e8 6f 08 00 00       	call   4018 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    37a9:	90                   	nop
    37aa:	c9                   	leave
    37ab:	c3                   	ret

00000000000037ac <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    37ac:	55                   	push   %rbp
    37ad:	48 89 e5             	mov    %rsp,%rbp
    37b0:	48 83 ec 20          	sub    $0x20,%rsp
    37b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    37bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    37c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    37c5:	74 17                	je     37de <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    37c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    37cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    37d3:	48 89 ce             	mov    %rcx,%rsi
    37d6:	48 89 c7             	mov    %rax,%rdi
    37d9:	e8 49 08 00 00       	call   4027 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    37de:	90                   	nop
    37df:	c9                   	leave
    37e0:	c3                   	ret
    37e1:	90                   	nop

00000000000037e2 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    37e2:	55                   	push   %rbp
    37e3:	48 89 e5             	mov    %rsp,%rbp
    37e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37ea:	90                   	nop
    37eb:	5d                   	pop    %rbp
    37ec:	c3                   	ret
    37ed:	90                   	nop

00000000000037ee <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    37ee:	55                   	push   %rbp
    37ef:	48 89 e5             	mov    %rsp,%rbp
    37f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37f6:	90                   	nop
    37f7:	5d                   	pop    %rbp
    37f8:	c3                   	ret

00000000000037f9 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    37f9:	55                   	push   %rbp
    37fa:	48 89 e5             	mov    %rsp,%rbp
    37fd:	53                   	push   %rbx
    37fe:	48 83 ec 28          	sub    $0x28,%rsp
    3802:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3806:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    380a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    380e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3812:	48 89 d6             	mov    %rdx,%rsi
    3815:	48 89 c7             	mov    %rax,%rdi
    3818:	e8 25 01 00 00       	call   3942 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    381d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3821:	48 89 c7             	mov    %rax,%rdi
    3824:	e8 2c 08 00 00       	call   4055 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3829:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    382d:	0f 92 c3             	setb   %bl
    3830:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3834:	48 89 c7             	mov    %rax,%rdi
    3837:	e8 d8 f8 ff ff       	call   3114 <_ZNSaI17VkLayerPropertiesED1Ev>
    383c:	84 db                	test   %bl,%bl
    383e:	74 0f                	je     384f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    3840:	48 8d 05 41 50 00 00 	lea    0x5041(%rip),%rax        # 8888 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3847:	48 89 c7             	mov    %rax,%rdi
    384a:	e8 61 e8 ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    384f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3853:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3857:	c9                   	leave
    3858:	c3                   	ret
    3859:	90                   	nop

000000000000385a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    385a:	55                   	push   %rbp
    385b:	48 89 e5             	mov    %rsp,%rbp
    385e:	53                   	push   %rbx
    385f:	48 83 ec 28          	sub    $0x28,%rsp
    3863:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3867:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    386b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    386f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3873:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3877:	48 89 d6             	mov    %rdx,%rsi
    387a:	48 89 c7             	mov    %rax,%rdi
    387d:	e8 16 08 00 00       	call   4098 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    3882:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3886:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    388a:	48 89 d6             	mov    %rdx,%rsi
    388d:	48 89 c7             	mov    %rax,%rdi
    3890:	e8 35 08 00 00       	call   40ca <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    3895:	eb 1a                	jmp    38b1 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    3897:	48 89 c3             	mov    %rax,%rbx
    389a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    389e:	48 89 c7             	mov    %rax,%rdi
    38a1:	e8 1a f5 ff ff       	call   2dc0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    38a6:	48 89 d8             	mov    %rbx,%rax
    38a9:	48 89 c7             	mov    %rax,%rdi
    38ac:	e8 cf e9 ff ff       	call   2280 <_Unwind_Resume@plt>
    38b1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    38b5:	c9                   	leave
    38b6:	c3                   	ret
    38b7:	90                   	nop

00000000000038b8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    38b8:	55                   	push   %rbp
    38b9:	48 89 e5             	mov    %rsp,%rbp
    38bc:	48 83 ec 10          	sub    $0x10,%rsp
    38c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    38c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38cc:	48 89 c7             	mov    %rax,%rdi
    38cf:	e8 24 00 00 00       	call   38f8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    38d4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    38d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38db:	48 8b 00             	mov    (%rax),%rax
    38de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    38e2:	48 89 ce             	mov    %rcx,%rsi
    38e5:	48 89 c7             	mov    %rax,%rdi
    38e8:	e8 3e 08 00 00       	call   412b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    38ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    38f1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    38f5:	90                   	nop
    38f6:	c9                   	leave
    38f7:	c3                   	ret

00000000000038f8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    38f8:	55                   	push   %rbp
    38f9:	48 89 e5             	mov    %rsp,%rbp
    38fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3904:	5d                   	pop    %rbp
    3905:	c3                   	ret

0000000000003906 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3906:	55                   	push   %rbp
    3907:	48 89 e5             	mov    %rsp,%rbp
    390a:	48 83 ec 20          	sub    $0x20,%rsp
    390e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3912:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3916:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    391a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    391e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3922:	48 89 d6             	mov    %rdx,%rsi
    3925:	48 89 c7             	mov    %rax,%rdi
    3928:	e8 27 08 00 00       	call   4154 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    392d:	90                   	nop
    392e:	c9                   	leave
    392f:	c3                   	ret

0000000000003930 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3930:	55                   	push   %rbp
    3931:	48 89 e5             	mov    %rsp,%rbp
    3934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3938:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    393c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3940:	5d                   	pop    %rbp
    3941:	c3                   	ret

0000000000003942 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3942:	55                   	push   %rbp
    3943:	48 89 e5             	mov    %rsp,%rbp
    3946:	48 83 ec 10          	sub    $0x10,%rsp
    394a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    394e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3952:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    395a:	48 89 d6             	mov    %rdx,%rsi
    395d:	48 89 c7             	mov    %rax,%rdi
    3960:	e8 15 08 00 00       	call   417a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    3965:	90                   	nop
    3966:	c9                   	leave
    3967:	c3                   	ret

0000000000003968 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    3968:	55                   	push   %rbp
    3969:	48 89 e5             	mov    %rsp,%rbp
    396c:	48 83 ec 20          	sub    $0x20,%rsp
    3970:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3974:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3978:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    397c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3981:	74 17                	je     399a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3983:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3987:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    398b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    398f:	48 89 ce             	mov    %rcx,%rsi
    3992:	48 89 c7             	mov    %rax,%rdi
    3995:	e8 ef 07 00 00       	call   4189 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    399a:	90                   	nop
    399b:	c9                   	leave
    399c:	c3                   	ret
    399d:	90                   	nop

000000000000399e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    399e:	55                   	push   %rbp
    399f:	48 89 e5             	mov    %rsp,%rbp
    39a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39a6:	90                   	nop
    39a7:	5d                   	pop    %rbp
    39a8:	c3                   	ret
    39a9:	90                   	nop

00000000000039aa <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    39aa:	55                   	push   %rbp
    39ab:	48 89 e5             	mov    %rsp,%rbp
    39ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39b2:	90                   	nop
    39b3:	5d                   	pop    %rbp
    39b4:	c3                   	ret

00000000000039b5 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    39b5:	55                   	push   %rbp
    39b6:	48 89 e5             	mov    %rsp,%rbp
    39b9:	53                   	push   %rbx
    39ba:	48 83 ec 28          	sub    $0x28,%rsp
    39be:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    39c2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    39c6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    39ca:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    39ce:	48 89 d6             	mov    %rdx,%rsi
    39d1:	48 89 c7             	mov    %rax,%rdi
    39d4:	e8 25 01 00 00       	call   3afe <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    39d9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    39dd:	48 89 c7             	mov    %rax,%rdi
    39e0:	e8 d2 07 00 00       	call   41b7 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    39e5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    39e9:	0f 92 c3             	setb   %bl
    39ec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    39f0:	48 89 c7             	mov    %rax,%rdi
    39f3:	e8 8a f8 ff ff       	call   3282 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    39f8:	84 db                	test   %bl,%bl
    39fa:	74 0f                	je     3a0b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    39fc:	48 8d 05 85 4e 00 00 	lea    0x4e85(%rip),%rax        # 8888 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3a03:	48 89 c7             	mov    %rax,%rdi
    3a06:	e8 a5 e6 ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3a0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3a0f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3a13:	c9                   	leave
    3a14:	c3                   	ret
    3a15:	90                   	nop

0000000000003a16 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3a16:	55                   	push   %rbp
    3a17:	48 89 e5             	mov    %rsp,%rbp
    3a1a:	53                   	push   %rbx
    3a1b:	48 83 ec 28          	sub    $0x28,%rsp
    3a1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3a23:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3a27:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3a2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a2f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3a33:	48 89 d6             	mov    %rdx,%rsi
    3a36:	48 89 c7             	mov    %rax,%rdi
    3a39:	e8 bc 07 00 00       	call   41fa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    3a3e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3a42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a46:	48 89 d6             	mov    %rdx,%rsi
    3a49:	48 89 c7             	mov    %rax,%rdi
    3a4c:	e8 db 07 00 00       	call   422c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    3a51:	eb 1a                	jmp    3a6d <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    3a53:	48 89 c3             	mov    %rax,%rbx
    3a56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a5a:	48 89 c7             	mov    %rax,%rdi
    3a5d:	e8 7a f3 ff ff       	call   2ddc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    3a62:	48 89 d8             	mov    %rbx,%rax
    3a65:	48 89 c7             	mov    %rax,%rdi
    3a68:	e8 13 e8 ff ff       	call   2280 <_Unwind_Resume@plt>
    3a6d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3a71:	c9                   	leave
    3a72:	c3                   	ret
    3a73:	90                   	nop

0000000000003a74 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3a74:	55                   	push   %rbp
    3a75:	48 89 e5             	mov    %rsp,%rbp
    3a78:	48 83 ec 10          	sub    $0x10,%rsp
    3a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3a84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a88:	48 89 c7             	mov    %rax,%rdi
    3a8b:	e8 24 00 00 00       	call   3ab4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3a90:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a97:	48 8b 00             	mov    (%rax),%rax
    3a9a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3a9e:	48 89 ce             	mov    %rcx,%rsi
    3aa1:	48 89 c7             	mov    %rax,%rdi
    3aa4:	e8 d9 07 00 00       	call   4282 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3aa9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3aad:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3ab1:	90                   	nop
    3ab2:	c9                   	leave
    3ab3:	c3                   	ret

0000000000003ab4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3ab4:	55                   	push   %rbp
    3ab5:	48 89 e5             	mov    %rsp,%rbp
    3ab8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ac0:	5d                   	pop    %rbp
    3ac1:	c3                   	ret

0000000000003ac2 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3ac2:	55                   	push   %rbp
    3ac3:	48 89 e5             	mov    %rsp,%rbp
    3ac6:	48 83 ec 20          	sub    $0x20,%rsp
    3aca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ace:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3ad2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3ad6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ade:	48 89 d6             	mov    %rdx,%rsi
    3ae1:	48 89 c7             	mov    %rax,%rdi
    3ae4:	e8 c2 07 00 00       	call   42ab <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    3ae9:	90                   	nop
    3aea:	c9                   	leave
    3aeb:	c3                   	ret

0000000000003aec <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3aec:	55                   	push   %rbp
    3aed:	48 89 e5             	mov    %rsp,%rbp
    3af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3af4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3af8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3afc:	5d                   	pop    %rbp
    3afd:	c3                   	ret

0000000000003afe <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3afe:	55                   	push   %rbp
    3aff:	48 89 e5             	mov    %rsp,%rbp
    3b02:	48 83 ec 10          	sub    $0x10,%rsp
    3b06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3b0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b16:	48 89 d6             	mov    %rdx,%rsi
    3b19:	48 89 c7             	mov    %rax,%rdi
    3b1c:	e8 b1 07 00 00       	call   42d2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    3b21:	90                   	nop
    3b22:	c9                   	leave
    3b23:	c3                   	ret

0000000000003b24 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    3b24:	55                   	push   %rbp
    3b25:	48 89 e5             	mov    %rsp,%rbp
    3b28:	48 83 ec 20          	sub    $0x20,%rsp
    3b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3b34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3b38:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3b3d:	74 17                	je     3b56 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3b3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3b47:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3b4b:	48 89 ce             	mov    %rcx,%rsi
    3b4e:	48 89 c7             	mov    %rax,%rdi
    3b51:	e8 8b 07 00 00       	call   42e1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    3b56:	90                   	nop
    3b57:	c9                   	leave
    3b58:	c3                   	ret

0000000000003b59 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    3b59:	55                   	push   %rbp
    3b5a:	48 89 e5             	mov    %rsp,%rbp
    3b5d:	48 83 ec 20          	sub    $0x20,%rsp
    3b61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    3b65:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    3b6c:	07 7e 00 
    3b6f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    3b73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b77:	48 89 c7             	mov    %rax,%rdi
    3b7a:	e8 90 07 00 00       	call   430f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    3b7f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    3b83:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    3b87:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3b8b:	48 89 d6             	mov    %rdx,%rsi
    3b8e:	48 89 c7             	mov    %rax,%rdi
    3b91:	e8 93 07 00 00       	call   4329 <_ZSt3minImERKT_S2_S2_>
    3b96:	48 8b 00             	mov    (%rax),%rax
      }
    3b99:	c9                   	leave
    3b9a:	c3                   	ret
    3b9b:	90                   	nop

0000000000003b9c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    3b9c:	55                   	push   %rbp
    3b9d:	48 89 e5             	mov    %rsp,%rbp
    3ba0:	48 83 ec 10          	sub    $0x10,%rsp
    3ba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ba8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    3bac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bb4:	48 89 d6             	mov    %rdx,%rsi
    3bb7:	48 89 c7             	mov    %rax,%rdi
    3bba:	e8 6b f9 ff ff       	call   352a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    3bbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bc3:	48 89 c7             	mov    %rax,%rdi
    3bc6:	e8 89 07 00 00       	call   4354 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    3bcb:	90                   	nop
    3bcc:	c9                   	leave
    3bcd:	c3                   	ret

0000000000003bce <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    3bce:	55                   	push   %rbp
    3bcf:	48 89 e5             	mov    %rsp,%rbp
    3bd2:	48 83 ec 10          	sub    $0x10,%rsp
    3bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    3bde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3be6:	48 89 d6             	mov    %rdx,%rsi
    3be9:	48 89 c7             	mov    %rax,%rdi
    3bec:	e8 91 07 00 00       	call   4382 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    3bf1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3bf5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    3bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bfc:	48 8b 10             	mov    (%rax),%rdx
    3bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c03:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    3c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c0b:	48 8b 08             	mov    (%rax),%rcx
    3c0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c12:	48 89 d0             	mov    %rdx,%rax
    3c15:	48 c1 e0 06          	shl    $0x6,%rax
    3c19:	48 01 d0             	add    %rdx,%rax
    3c1c:	48 c1 e0 02          	shl    $0x2,%rax
    3c20:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    3c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c28:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    3c2c:	90                   	nop
    3c2d:	c9                   	leave
    3c2e:	c3                   	ret

0000000000003c2f <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    3c2f:	55                   	push   %rbp
    3c30:	48 89 e5             	mov    %rsp,%rbp
    3c33:	48 83 ec 20          	sub    $0x20,%rsp
    3c37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c3f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    3c43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c4b:	48 89 d6             	mov    %rdx,%rsi
    3c4e:	48 89 c7             	mov    %rax,%rdi
    3c51:	e8 5f 07 00 00       	call   43b5 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    3c56:	c9                   	leave
    3c57:	c3                   	ret

0000000000003c58 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    3c58:	55                   	push   %rbp
    3c59:	48 89 e5             	mov    %rsp,%rbp
    3c5c:	48 83 ec 10          	sub    $0x10,%rsp
    3c60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    3c68:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c70:	48 89 d6             	mov    %rdx,%rsi
    3c73:	48 89 c7             	mov    %rax,%rdi
    3c76:	e8 63 07 00 00       	call   43de <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    3c7b:	90                   	nop
    3c7c:	c9                   	leave
    3c7d:	c3                   	ret

0000000000003c7e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    3c7e:	55                   	push   %rbp
    3c7f:	48 89 e5             	mov    %rsp,%rbp
    3c82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c8a:	90                   	nop
    3c8b:	5d                   	pop    %rbp
    3c8c:	c3                   	ret

0000000000003c8d <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    3c8d:	55                   	push   %rbp
    3c8e:	48 89 e5             	mov    %rsp,%rbp
    3c91:	48 83 ec 20          	sub    $0x20,%rsp
    3c95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c9d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    3ca1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ca5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3ca9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cad:	48 89 ce             	mov    %rcx,%rsi
    3cb0:	48 89 c7             	mov    %rax,%rdi
    3cb3:	e8 36 07 00 00       	call   43ee <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    3cb8:	90                   	nop
    3cb9:	c9                   	leave
    3cba:	c3                   	ret

0000000000003cbb <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    3cbb:	55                   	push   %rbp
    3cbc:	48 89 e5             	mov    %rsp,%rbp
    3cbf:	48 83 ec 20          	sub    $0x20,%rsp
    3cc3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    3cc7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    3cce:	ff ff 0f 
    3cd1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    3cd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3cd9:	48 89 c7             	mov    %rax,%rdi
    3cdc:	e8 47 07 00 00       	call   4428 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    3ce1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    3ce5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    3ce9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3ced:	48 89 d6             	mov    %rdx,%rsi
    3cf0:	48 89 c7             	mov    %rax,%rdi
    3cf3:	e8 31 06 00 00       	call   4329 <_ZSt3minImERKT_S2_S2_>
    3cf8:	48 8b 00             	mov    (%rax),%rax
      }
    3cfb:	c9                   	leave
    3cfc:	c3                   	ret
    3cfd:	90                   	nop

0000000000003cfe <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    3cfe:	55                   	push   %rbp
    3cff:	48 89 e5             	mov    %rsp,%rbp
    3d02:	48 83 ec 10          	sub    $0x10,%rsp
    3d06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    3d0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d16:	48 89 d6             	mov    %rdx,%rsi
    3d19:	48 89 c7             	mov    %rax,%rdi
    3d1c:	e8 65 fa ff ff       	call   3786 <_ZNSaIPKcEC1ERKS1_>
    3d21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d25:	48 89 c7             	mov    %rax,%rdi
    3d28:	e8 15 07 00 00       	call   4442 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    3d2d:	90                   	nop
    3d2e:	c9                   	leave
    3d2f:	c3                   	ret

0000000000003d30 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    3d30:	55                   	push   %rbp
    3d31:	48 89 e5             	mov    %rsp,%rbp
    3d34:	48 83 ec 10          	sub    $0x10,%rsp
    3d38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    3d40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d48:	48 89 d6             	mov    %rdx,%rsi
    3d4b:	48 89 c7             	mov    %rax,%rdi
    3d4e:	e8 1d 07 00 00       	call   4470 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    3d53:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d57:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    3d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d5e:	48 8b 10             	mov    (%rax),%rdx
    3d61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d65:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    3d69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d6d:	48 8b 00             	mov    (%rax),%rax
    3d70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d74:	48 c1 e2 03          	shl    $0x3,%rdx
    3d78:	48 01 c2             	add    %rax,%rdx
    3d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d7f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    3d83:	90                   	nop
    3d84:	c9                   	leave
    3d85:	c3                   	ret

0000000000003d86 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    3d86:	55                   	push   %rbp
    3d87:	48 89 e5             	mov    %rsp,%rbp
    3d8a:	48 83 ec 20          	sub    $0x20,%rsp
    3d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3d96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    3d9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3da2:	48 89 d6             	mov    %rdx,%rsi
    3da5:	48 89 c7             	mov    %rax,%rdi
    3da8:	e8 f6 06 00 00       	call   44a3 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    3dad:	c9                   	leave
    3dae:	c3                   	ret

0000000000003daf <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    3daf:	55                   	push   %rbp
    3db0:	48 89 e5             	mov    %rsp,%rbp
    3db3:	48 83 ec 10          	sub    $0x10,%rsp
    3db7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dbb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    3dbf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3dc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dc7:	48 89 d6             	mov    %rdx,%rsi
    3dca:	48 89 c7             	mov    %rax,%rdi
    3dcd:	e8 fa 06 00 00       	call   44cc <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    3dd2:	90                   	nop
    3dd3:	c9                   	leave
    3dd4:	c3                   	ret

0000000000003dd5 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    3dd5:	55                   	push   %rbp
    3dd6:	48 89 e5             	mov    %rsp,%rbp
    3dd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    3ddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3de1:	5d                   	pop    %rbp
    3de2:	c3                   	ret

0000000000003de3 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    3de3:	55                   	push   %rbp
    3de4:	48 89 e5             	mov    %rsp,%rbp
    3de7:	48 83 ec 20          	sub    $0x20,%rsp
    3deb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3def:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3df3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    3df7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3dfb:	48 89 c7             	mov    %rax,%rdi
    3dfe:	e8 d2 ff ff ff       	call   3dd5 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    3e03:	48 89 c2             	mov    %rax,%rdx
    3e06:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e0e:	48 89 ce             	mov    %rcx,%rsi
    3e11:	48 89 c7             	mov    %rax,%rdi
    3e14:	e8 c3 06 00 00       	call   44dc <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
    3e19:	90                   	nop
    3e1a:	c9                   	leave
    3e1b:	c3                   	ret

0000000000003e1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    3e1c:	55                   	push   %rbp
    3e1d:	48 89 e5             	mov    %rsp,%rbp
    3e20:	48 83 ec 20          	sub    $0x20,%rsp
    3e24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    3e28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e2c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    3e30:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3e34:	48 89 d6             	mov    %rdx,%rsi
    3e37:	48 89 c7             	mov    %rax,%rdi
    3e3a:	e8 df 06 00 00       	call   451e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    3e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e43:	c9                   	leave
    3e44:	c3                   	ret
    3e45:	90                   	nop

0000000000003e46 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    3e46:	55                   	push   %rbp
    3e47:	48 89 e5             	mov    %rsp,%rbp
    3e4a:	53                   	push   %rbx
    3e4b:	48 83 ec 68          	sub    $0x68,%rsp
    3e4f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    3e53:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    3e57:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    3e5b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3e5f:	48 8d 15 53 4a 00 00 	lea    0x4a53(%rip),%rdx        # 88b9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xf9>
    3e66:	be 01 00 00 00       	mov    $0x1,%esi
    3e6b:	48 89 c7             	mov    %rax,%rdi
    3e6e:	e8 c9 06 00 00       	call   453c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    3e73:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    3e77:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3e7b:	48 8b 00             	mov    (%rax),%rax
    3e7e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    3e82:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3e86:	48 8b 40 08          	mov    0x8(%rax),%rax
    3e8a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    3e8e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3e92:	48 89 c7             	mov    %rax,%rdi
    3e95:	e8 6a 07 00 00       	call   4604 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    3e9a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3e9e:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    3ea2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    3ea6:	48 89 d6             	mov    %rdx,%rsi
    3ea9:	48 89 c7             	mov    %rax,%rdi
    3eac:	e8 78 07 00 00       	call   4629 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    3eb1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    3eb5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3eb9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ebd:	48 89 d6             	mov    %rdx,%rsi
    3ec0:	48 89 c7             	mov    %rax,%rdi
    3ec3:	e8 a8 05 00 00       	call   4470 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    3ec8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    3ecc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3ed0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    3ed4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3ed8:	48 89 c7             	mov    %rax,%rdi
    3edb:	e8 f5 fe ff ff       	call   3dd5 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    3ee0:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    3ee3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3ee7:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    3eee:	00 
	  _Alloc_traits::construct(this->_M_impl,
    3eef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3ef3:	48 01 c1             	add    %rax,%rcx
    3ef6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3efa:	48 89 ce             	mov    %rcx,%rsi
    3efd:	48 89 c7             	mov    %rax,%rdi
    3f00:	e8 de fe ff ff       	call   3de3 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    3f05:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    3f0c:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    3f0d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f11:	48 89 c7             	mov    %rax,%rdi
    3f14:	e8 83 f7 ff ff       	call   369c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3f19:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    3f1c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    3f20:	48 89 c7             	mov    %rax,%rdi
    3f23:	e8 76 07 00 00       	call   469e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    3f28:	48 8b 30             	mov    (%rax),%rsi
    3f2b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3f2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f33:	48 89 d9             	mov    %rbx,%rcx
    3f36:	48 89 c7             	mov    %rax,%rdi
    3f39:	e8 2d 07 00 00       	call   466b <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    3f3e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    3f42:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    3f47:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f4b:	48 89 c7             	mov    %rax,%rdi
    3f4e:	e8 49 f7 ff ff       	call   369c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3f53:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    3f56:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    3f5a:	48 89 c7             	mov    %rax,%rdi
    3f5d:	e8 3c 07 00 00       	call   469e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    3f62:	48 8b 00             	mov    (%rax),%rax
    3f65:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    3f69:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    3f6d:	48 89 d9             	mov    %rbx,%rcx
    3f70:	48 89 c7             	mov    %rax,%rdi
    3f73:	e8 f3 06 00 00       	call   466b <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    3f78:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    3f7c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    3f80:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    3f84:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    3f88:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    3f8c:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    3f90:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3f94:	48 89 ce             	mov    %rcx,%rsi
    3f97:	48 89 c7             	mov    %rax,%rdi
    3f9a:	e8 0d f8 ff ff       	call   37ac <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    3f9f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3fa3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3fa7:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    3faa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3fae:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    3fb2:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    3fb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3fba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3fc1:	00 
    3fc2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3fc6:	48 01 c2             	add    %rax,%rdx
    3fc9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3fcd:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    3fd1:	90                   	nop
    3fd2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3fd6:	c9                   	leave
    3fd7:	c3                   	ret

0000000000003fd8 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    3fd8:	55                   	push   %rbp
    3fd9:	48 89 e5             	mov    %rsp,%rbp
    3fdc:	48 83 ec 20          	sub    $0x20,%rsp
    3fe0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    3fe4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3fe8:	48 89 c7             	mov    %rax,%rdi
    3feb:	e8 2c fe ff ff       	call   3e1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    3ff0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3ff4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3ff8:	be 01 00 00 00       	mov    $0x1,%esi
    3ffd:	48 89 c7             	mov    %rax,%rdi
    4000:	e8 a7 06 00 00       	call   46ac <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    4005:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4009:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    400d:	48 89 c7             	mov    %rax,%rdi
    4010:	e8 d9 06 00 00       	call   46ee <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    4015:	c9                   	leave
    4016:	c3                   	ret
    4017:	90                   	nop

0000000000004018 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    4018:	55                   	push   %rbp
    4019:	48 89 e5             	mov    %rsp,%rbp
    401c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4020:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4024:	90                   	nop
    4025:	5d                   	pop    %rbp
    4026:	c3                   	ret

0000000000004027 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4027:	55                   	push   %rbp
    4028:	48 89 e5             	mov    %rsp,%rbp
    402b:	48 83 ec 20          	sub    $0x20,%rsp
    402f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4033:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4037:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    403b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    403f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4047:	48 89 ce             	mov    %rcx,%rsi
    404a:	48 89 c7             	mov    %rax,%rdi
    404d:	e8 ae 06 00 00       	call   4700 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    4052:	90                   	nop
    4053:	c9                   	leave
    4054:	c3                   	ret

0000000000004055 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    4055:	55                   	push   %rbp
    4056:	48 89 e5             	mov    %rsp,%rbp
    4059:	48 83 ec 20          	sub    $0x20,%rsp
    405d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4061:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    4068:	03 3f 00 
    406b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    406f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4073:	48 89 c7             	mov    %rax,%rdi
    4076:	e8 b6 06 00 00       	call   4731 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    407b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    407f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4083:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4087:	48 89 d6             	mov    %rdx,%rsi
    408a:	48 89 c7             	mov    %rax,%rdi
    408d:	e8 97 02 00 00       	call   4329 <_ZSt3minImERKT_S2_S2_>
    4092:	48 8b 00             	mov    (%rax),%rax
      }
    4095:	c9                   	leave
    4096:	c3                   	ret
    4097:	90                   	nop

0000000000004098 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    4098:	55                   	push   %rbp
    4099:	48 89 e5             	mov    %rsp,%rbp
    409c:	48 83 ec 10          	sub    $0x10,%rsp
    40a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    40a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    40ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40b0:	48 89 d6             	mov    %rdx,%rsi
    40b3:	48 89 c7             	mov    %rax,%rdi
    40b6:	e8 87 f8 ff ff       	call   3942 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    40bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40bf:	48 89 c7             	mov    %rax,%rdi
    40c2:	e8 85 06 00 00       	call   474c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    40c7:	90                   	nop
    40c8:	c9                   	leave
    40c9:	c3                   	ret

00000000000040ca <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    40ca:	55                   	push   %rbp
    40cb:	48 89 e5             	mov    %rsp,%rbp
    40ce:	48 83 ec 10          	sub    $0x10,%rsp
    40d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    40da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    40de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40e2:	48 89 d6             	mov    %rdx,%rsi
    40e5:	48 89 c7             	mov    %rax,%rdi
    40e8:	e8 8d 06 00 00       	call   477a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    40ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    40f1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    40f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40f8:	48 8b 10             	mov    (%rax),%rdx
    40fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40ff:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4107:	48 8b 08             	mov    (%rax),%rcx
    410a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    410e:	48 89 d0             	mov    %rdx,%rax
    4111:	48 c1 e0 06          	shl    $0x6,%rax
    4115:	48 01 d0             	add    %rdx,%rax
    4118:	48 c1 e0 03          	shl    $0x3,%rax
    411c:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4124:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    4128:	90                   	nop
    4129:	c9                   	leave
    412a:	c3                   	ret

000000000000412b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    412b:	55                   	push   %rbp
    412c:	48 89 e5             	mov    %rsp,%rbp
    412f:	48 83 ec 20          	sub    $0x20,%rsp
    4133:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4137:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    413b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    413f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4147:	48 89 d6             	mov    %rdx,%rsi
    414a:	48 89 c7             	mov    %rax,%rdi
    414d:	e8 5b 06 00 00       	call   47ad <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    4152:	c9                   	leave
    4153:	c3                   	ret

0000000000004154 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    4154:	55                   	push   %rbp
    4155:	48 89 e5             	mov    %rsp,%rbp
    4158:	48 83 ec 10          	sub    $0x10,%rsp
    415c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4160:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    4164:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    416c:	48 89 d6             	mov    %rdx,%rsi
    416f:	48 89 c7             	mov    %rax,%rdi
    4172:	e8 5f 06 00 00       	call   47d6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    4177:	90                   	nop
    4178:	c9                   	leave
    4179:	c3                   	ret

000000000000417a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
    417a:	55                   	push   %rbp
    417b:	48 89 e5             	mov    %rsp,%rbp
    417e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4182:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4186:	90                   	nop
    4187:	5d                   	pop    %rbp
    4188:	c3                   	ret

0000000000004189 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4189:	55                   	push   %rbp
    418a:	48 89 e5             	mov    %rsp,%rbp
    418d:	48 83 ec 20          	sub    $0x20,%rsp
    4191:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4195:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4199:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    419d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    41a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    41a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41a9:	48 89 ce             	mov    %rcx,%rsi
    41ac:	48 89 c7             	mov    %rax,%rdi
    41af:	e8 32 06 00 00       	call   47e6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    41b4:	90                   	nop
    41b5:	c9                   	leave
    41b6:	c3                   	ret

00000000000041b7 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    41b7:	55                   	push   %rbp
    41b8:	48 89 e5             	mov    %rsp,%rbp
    41bb:	48 83 ec 20          	sub    $0x20,%rsp
    41bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    41c3:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    41ca:	ff ff 0f 
    41cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    41d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41d5:	48 89 c7             	mov    %rax,%rdi
    41d8:	e8 43 06 00 00       	call   4820 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    41dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    41e1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    41e5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    41e9:	48 89 d6             	mov    %rdx,%rsi
    41ec:	48 89 c7             	mov    %rax,%rdi
    41ef:	e8 35 01 00 00       	call   4329 <_ZSt3minImERKT_S2_S2_>
    41f4:	48 8b 00             	mov    (%rax),%rax
      }
    41f7:	c9                   	leave
    41f8:	c3                   	ret
    41f9:	90                   	nop

00000000000041fa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    41fa:	55                   	push   %rbp
    41fb:	48 89 e5             	mov    %rsp,%rbp
    41fe:	48 83 ec 10          	sub    $0x10,%rsp
    4202:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4206:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    420a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    420e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4212:	48 89 d6             	mov    %rdx,%rsi
    4215:	48 89 c7             	mov    %rax,%rdi
    4218:	e8 e1 f8 ff ff       	call   3afe <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    421d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4221:	48 89 c7             	mov    %rax,%rdi
    4224:	e8 11 06 00 00       	call   483a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    4229:	90                   	nop
    422a:	c9                   	leave
    422b:	c3                   	ret

000000000000422c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    422c:	55                   	push   %rbp
    422d:	48 89 e5             	mov    %rsp,%rbp
    4230:	48 83 ec 10          	sub    $0x10,%rsp
    4234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4238:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    423c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4244:	48 89 d6             	mov    %rdx,%rsi
    4247:	48 89 c7             	mov    %rax,%rdi
    424a:	e8 19 06 00 00       	call   4868 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    424f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4253:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    4256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    425a:	48 8b 10             	mov    (%rax),%rdx
    425d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4261:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4269:	48 8b 00             	mov    (%rax),%rax
    426c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4270:	48 c1 e2 03          	shl    $0x3,%rdx
    4274:	48 01 c2             	add    %rax,%rdx
    4277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    427b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    427f:	90                   	nop
    4280:	c9                   	leave
    4281:	c3                   	ret

0000000000004282 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4282:	55                   	push   %rbp
    4283:	48 89 e5             	mov    %rsp,%rbp
    4286:	48 83 ec 20          	sub    $0x20,%rsp
    428a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    428e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4292:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    4296:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    429a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    429e:	48 89 d6             	mov    %rdx,%rsi
    42a1:	48 89 c7             	mov    %rax,%rdi
    42a4:	e8 f2 05 00 00       	call   489b <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    42a9:	c9                   	leave
    42aa:	c3                   	ret

00000000000042ab <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    42ab:	55                   	push   %rbp
    42ac:	48 89 e5             	mov    %rsp,%rbp
    42af:	48 83 ec 10          	sub    $0x10,%rsp
    42b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    42bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    42bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42c3:	48 89 d6             	mov    %rdx,%rsi
    42c6:	48 89 c7             	mov    %rax,%rdi
    42c9:	e8 f6 05 00 00       	call   48c4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    42ce:	90                   	nop
    42cf:	c9                   	leave
    42d0:	c3                   	ret
    42d1:	90                   	nop

00000000000042d2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    42d2:	55                   	push   %rbp
    42d3:	48 89 e5             	mov    %rsp,%rbp
    42d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    42de:	90                   	nop
    42df:	5d                   	pop    %rbp
    42e0:	c3                   	ret

00000000000042e1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    42e1:	55                   	push   %rbp
    42e2:	48 89 e5             	mov    %rsp,%rbp
    42e5:	48 83 ec 20          	sub    $0x20,%rsp
    42e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    42f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    42f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    42f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    42fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4301:	48 89 ce             	mov    %rcx,%rsi
    4304:	48 89 c7             	mov    %rax,%rdi
    4307:	e8 c8 05 00 00       	call   48d4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    430c:	90                   	nop
    430d:	c9                   	leave
    430e:	c3                   	ret

000000000000430f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    430f:	55                   	push   %rbp
    4310:	48 89 e5             	mov    %rsp,%rbp
    4313:	48 83 ec 10          	sub    $0x10,%rsp
    4317:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    431b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    431f:	48 89 c7             	mov    %rax,%rdi
    4322:	e8 df 05 00 00       	call   4906 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    4327:	c9                   	leave
    4328:	c3                   	ret

0000000000004329 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    4329:	55                   	push   %rbp
    432a:	48 89 e5             	mov    %rsp,%rbp
    432d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4331:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    4335:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4339:	48 8b 10             	mov    (%rax),%rdx
    433c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4340:	48 8b 00             	mov    (%rax),%rax
    4343:	48 39 c2             	cmp    %rax,%rdx
    4346:	73 06                	jae    434e <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    4348:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    434c:	eb 04                	jmp    4352 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    434e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4352:	5d                   	pop    %rbp
    4353:	c3                   	ret

0000000000004354 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4354:	55                   	push   %rbp
    4355:	48 89 e5             	mov    %rsp,%rbp
    4358:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    435c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4360:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4367:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    436b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4372:	00 
    4373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4377:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    437e:	00 
	{ }
    437f:	90                   	nop
    4380:	5d                   	pop    %rbp
    4381:	c3                   	ret

0000000000004382 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4382:	55                   	push   %rbp
    4383:	48 89 e5             	mov    %rsp,%rbp
    4386:	48 83 ec 10          	sub    $0x10,%rsp
    438a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    438e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4392:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4397:	74 15                	je     43ae <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    4399:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    439d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    43a1:	48 89 d6             	mov    %rdx,%rsi
    43a4:	48 89 c7             	mov    %rax,%rdi
    43a7:	e8 74 05 00 00       	call   4920 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    43ac:	eb 05                	jmp    43b3 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    43ae:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    43b3:	c9                   	leave
    43b4:	c3                   	ret

00000000000043b5 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    43b5:	55                   	push   %rbp
    43b6:	48 89 e5             	mov    %rsp,%rbp
    43b9:	48 83 ec 20          	sub    $0x20,%rsp
    43bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    43c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    43c5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    43c9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    43cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    43d1:	48 89 d6             	mov    %rdx,%rsi
    43d4:	48 89 c7             	mov    %rax,%rdi
    43d7:	e8 6e 05 00 00       	call   494a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    43dc:	c9                   	leave
    43dd:	c3                   	ret

00000000000043de <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    43de:	55                   	push   %rbp
    43df:	48 89 e5             	mov    %rsp,%rbp
    43e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43ea:	90                   	nop
    43eb:	5d                   	pop    %rbp
    43ec:	c3                   	ret
    43ed:	90                   	nop

00000000000043ee <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    43ee:	55                   	push   %rbp
    43ef:	48 89 e5             	mov    %rsp,%rbp
    43f2:	48 83 ec 20          	sub    $0x20,%rsp
    43f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4402:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4406:	48 89 d0             	mov    %rdx,%rax
    4409:	48 c1 e0 06          	shl    $0x6,%rax
    440d:	48 01 d0             	add    %rdx,%rax
    4410:	48 c1 e0 02          	shl    $0x2,%rax
    4414:	48 89 c2             	mov    %rax,%rdx
    4417:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    441b:	48 89 d6             	mov    %rdx,%rsi
    441e:	48 89 c7             	mov    %rax,%rdi
    4421:	e8 6a dd ff ff       	call   2190 <_ZdlPvm@plt>
      }
    4426:	c9                   	leave
    4427:	c3                   	ret

0000000000004428 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4428:	55                   	push   %rbp
    4429:	48 89 e5             	mov    %rsp,%rbp
    442c:	48 83 ec 10          	sub    $0x10,%rsp
    4430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4438:	48 89 c7             	mov    %rax,%rdi
    443b:	e8 6a 05 00 00       	call   49aa <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    4440:	c9                   	leave
    4441:	c3                   	ret

0000000000004442 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4442:	55                   	push   %rbp
    4443:	48 89 e5             	mov    %rsp,%rbp
    4446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    444a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    444e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4459:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4460:	00 
    4461:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4465:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    446c:	00 
	{ }
    446d:	90                   	nop
    446e:	5d                   	pop    %rbp
    446f:	c3                   	ret

0000000000004470 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4470:	55                   	push   %rbp
    4471:	48 89 e5             	mov    %rsp,%rbp
    4474:	48 83 ec 10          	sub    $0x10,%rsp
    4478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    447c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4480:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4485:	74 15                	je     449c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    4487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    448b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    448f:	48 89 d6             	mov    %rdx,%rsi
    4492:	48 89 c7             	mov    %rax,%rdi
    4495:	e8 2a 05 00 00       	call   49c4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    449a:	eb 05                	jmp    44a1 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    449c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    44a1:	c9                   	leave
    44a2:	c3                   	ret

00000000000044a3 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    44a3:	55                   	push   %rbp
    44a4:	48 89 e5             	mov    %rsp,%rbp
    44a7:	48 83 ec 20          	sub    $0x20,%rsp
    44ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    44af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    44b3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    44b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    44bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44bf:	48 89 d6             	mov    %rdx,%rsi
    44c2:	48 89 c7             	mov    %rax,%rdi
    44c5:	e8 24 05 00 00       	call   49ee <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    44ca:	c9                   	leave
    44cb:	c3                   	ret

00000000000044cc <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    44cc:	55                   	push   %rbp
    44cd:	48 89 e5             	mov    %rsp,%rbp
    44d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44d8:	90                   	nop
    44d9:	5d                   	pop    %rbp
    44da:	c3                   	ret
    44db:	90                   	nop

00000000000044dc <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    44dc:	55                   	push   %rbp
    44dd:	48 89 e5             	mov    %rsp,%rbp
    44e0:	53                   	push   %rbx
    44e1:	48 83 ec 28          	sub    $0x28,%rsp
    44e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    44e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    44ed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    44f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    44f5:	48 89 c6             	mov    %rax,%rsi
    44f8:	bf 08 00 00 00       	mov    $0x8,%edi
    44fd:	e8 66 e8 ff ff       	call   2d68 <_ZnwmPv>
    4502:	48 89 c3             	mov    %rax,%rbx
    4505:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4509:	48 89 c7             	mov    %rax,%rdi
    450c:	e8 c4 f8 ff ff       	call   3dd5 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4511:	48 8b 00             	mov    (%rax),%rax
    4514:	48 89 03             	mov    %rax,(%rbx)
    4517:	90                   	nop
    4518:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    451c:	c9                   	leave
    451d:	c3                   	ret

000000000000451e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:

      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
      : _M_current(_Iterator()) { }

      explicit _GLIBCXX20_CONSTEXPR
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    451e:	55                   	push   %rbp
    451f:	48 89 e5             	mov    %rsp,%rbp
    4522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    452a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    452e:	48 8b 10             	mov    (%rax),%rdx
    4531:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4535:	48 89 10             	mov    %rdx,(%rax)
    4538:	90                   	nop
    4539:	5d                   	pop    %rbp
    453a:	c3                   	ret
    453b:	90                   	nop

000000000000453c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    453c:	55                   	push   %rbp
    453d:	48 89 e5             	mov    %rsp,%rbp
    4540:	53                   	push   %rbx
    4541:	48 83 ec 38          	sub    $0x38,%rsp
    4545:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4549:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    454d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    4551:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4555:	48 89 c7             	mov    %rax,%rdi
    4558:	e8 ef 04 00 00       	call   4a4c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    455d:	48 89 c3             	mov    %rax,%rbx
    4560:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4564:	48 89 c7             	mov    %rax,%rdi
    4567:	e8 02 05 00 00       	call   4a6e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    456c:	48 29 c3             	sub    %rax,%rbx
    456f:	48 89 da             	mov    %rbx,%rdx
    4572:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4576:	48 39 c2             	cmp    %rax,%rdx
    4579:	0f 92 c0             	setb   %al
    457c:	84 c0                	test   %al,%al
    457e:	74 0c                	je     458c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    4580:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4584:	48 89 c7             	mov    %rax,%rdi
    4587:	e8 24 db ff ff       	call   20b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    458c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4590:	48 89 c7             	mov    %rax,%rdi
    4593:	e8 d6 04 00 00       	call   4a6e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4598:	48 89 c3             	mov    %rax,%rbx
    459b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    459f:	48 89 c7             	mov    %rax,%rdi
    45a2:	e8 c7 04 00 00       	call   4a6e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    45a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    45ab:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    45af:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    45b3:	48 89 d6             	mov    %rdx,%rsi
    45b6:	48 89 c7             	mov    %rax,%rdi
    45b9:	e8 d3 04 00 00       	call   4a91 <_ZSt3maxImERKT_S2_S2_>
    45be:	48 8b 00             	mov    (%rax),%rax
    45c1:	48 01 d8             	add    %rbx,%rax
    45c4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    45c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    45cc:	48 89 c7             	mov    %rax,%rdi
    45cf:	e8 9a 04 00 00       	call   4a6e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    45d4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    45d8:	72 12                	jb     45ec <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    45da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    45de:	48 89 c7             	mov    %rax,%rdi
    45e1:	e8 66 04 00 00       	call   4a4c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    45e6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    45ea:	73 0e                	jae    45fa <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    45ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    45f0:	48 89 c7             	mov    %rax,%rdi
    45f3:	e8 54 04 00 00       	call   4a4c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    45f8:	eb 04                	jmp    45fe <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    45fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    45fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4602:	c9                   	leave
    4603:	c3                   	ret

0000000000004604 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4604:	55                   	push   %rbp
    4605:	48 89 e5             	mov    %rsp,%rbp
    4608:	48 83 ec 20          	sub    $0x20,%rsp
    460c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4610:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4614:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4618:	48 89 d6             	mov    %rdx,%rsi
    461b:	48 89 c7             	mov    %rax,%rdi
    461e:	e8 fb fe ff ff       	call   451e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4627:	c9                   	leave
    4628:	c3                   	ret

0000000000004629 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    4629:	55                   	push   %rbp
    462a:	48 89 e5             	mov    %rsp,%rbp
    462d:	53                   	push   %rbx
    462e:	48 83 ec 18          	sub    $0x18,%rsp
    4632:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4636:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    463a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    463e:	48 89 c7             	mov    %rax,%rdi
    4641:	e8 58 00 00 00       	call   469e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4646:	48 8b 18             	mov    (%rax),%rbx
    4649:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    464d:	48 89 c7             	mov    %rax,%rdi
    4650:	e8 49 00 00 00       	call   469e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4655:	48 8b 00             	mov    (%rax),%rax
    4658:	48 89 da             	mov    %rbx,%rdx
    465b:	48 29 c2             	sub    %rax,%rdx
    465e:	48 89 d0             	mov    %rdx,%rax
    4661:	48 c1 f8 03          	sar    $0x3,%rax
    4665:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4669:	c9                   	leave
    466a:	c3                   	ret

000000000000466b <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    466b:	55                   	push   %rbp
    466c:	48 89 e5             	mov    %rsp,%rbp
    466f:	48 83 ec 20          	sub    $0x20,%rsp
    4673:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4677:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    467b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    467f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    4683:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4687:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    468b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    468f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4693:	48 89 c7             	mov    %rax,%rdi
    4696:	e8 21 04 00 00       	call   4abc <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    469b:	c9                   	leave
    469c:	c3                   	ret
    469d:	90                   	nop

000000000000469e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    469e:	55                   	push   %rbp
    469f:	48 89 e5             	mov    %rsp,%rbp
    46a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    46a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46aa:	5d                   	pop    %rbp
    46ab:	c3                   	ret

00000000000046ac <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    46ac:	55                   	push   %rbp
    46ad:	48 89 e5             	mov    %rsp,%rbp
    46b0:	48 83 ec 20          	sub    $0x20,%rsp
    46b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    46b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    46bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46c0:	48 8b 00             	mov    (%rax),%rax
    46c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    46c7:	48 c1 e2 03          	shl    $0x3,%rdx
    46cb:	48 f7 da             	neg    %rdx
    46ce:	48 01 d0             	add    %rdx,%rax
    46d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    46d5:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    46d9:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    46dd:	48 89 d6             	mov    %rdx,%rsi
    46e0:	48 89 c7             	mov    %rax,%rdi
    46e3:	e8 36 fe ff ff       	call   451e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    46e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    46ec:	c9                   	leave
    46ed:	c3                   	ret

00000000000046ee <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    46ee:	55                   	push   %rbp
    46ef:	48 89 e5             	mov    %rsp,%rbp
    46f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    46f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46fa:	48 8b 00             	mov    (%rax),%rax
    46fd:	5d                   	pop    %rbp
    46fe:	c3                   	ret
    46ff:	90                   	nop

0000000000004700 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4700:	55                   	push   %rbp
    4701:	48 89 e5             	mov    %rsp,%rbp
    4704:	48 83 ec 20          	sub    $0x20,%rsp
    4708:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    470c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4710:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4718:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    471f:	00 
    4720:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4724:	48 89 d6             	mov    %rdx,%rsi
    4727:	48 89 c7             	mov    %rax,%rdi
    472a:	e8 61 da ff ff       	call   2190 <_ZdlPvm@plt>
      }
    472f:	c9                   	leave
    4730:	c3                   	ret

0000000000004731 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4731:	55                   	push   %rbp
    4732:	48 89 e5             	mov    %rsp,%rbp
    4735:	48 83 ec 10          	sub    $0x10,%rsp
    4739:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    473d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4741:	48 89 c7             	mov    %rax,%rdi
    4744:	e8 d7 03 00 00       	call   4b20 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    4749:	c9                   	leave
    474a:	c3                   	ret
    474b:	90                   	nop

000000000000474c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    474c:	55                   	push   %rbp
    474d:	48 89 e5             	mov    %rsp,%rbp
    4750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4758:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    475f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4763:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    476a:	00 
    476b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    476f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4776:	00 
	{ }
    4777:	90                   	nop
    4778:	5d                   	pop    %rbp
    4779:	c3                   	ret

000000000000477a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    477a:	55                   	push   %rbp
    477b:	48 89 e5             	mov    %rsp,%rbp
    477e:	48 83 ec 10          	sub    $0x10,%rsp
    4782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4786:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    478a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    478f:	74 15                	je     47a6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    4791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4795:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4799:	48 89 d6             	mov    %rdx,%rsi
    479c:	48 89 c7             	mov    %rax,%rdi
    479f:	e8 96 03 00 00       	call   4b3a <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    47a4:	eb 05                	jmp    47ab <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    47a6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    47ab:	c9                   	leave
    47ac:	c3                   	ret

00000000000047ad <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    47ad:	55                   	push   %rbp
    47ae:	48 89 e5             	mov    %rsp,%rbp
    47b1:	48 83 ec 20          	sub    $0x20,%rsp
    47b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    47b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    47bd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    47c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    47c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    47c9:	48 89 d6             	mov    %rdx,%rsi
    47cc:	48 89 c7             	mov    %rax,%rdi
    47cf:	e8 90 03 00 00       	call   4b64 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    47d4:	c9                   	leave
    47d5:	c3                   	ret

00000000000047d6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
    47d6:	55                   	push   %rbp
    47d7:	48 89 e5             	mov    %rsp,%rbp
    47da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    47e2:	90                   	nop
    47e3:	5d                   	pop    %rbp
    47e4:	c3                   	ret
    47e5:	90                   	nop

00000000000047e6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    47e6:	55                   	push   %rbp
    47e7:	48 89 e5             	mov    %rsp,%rbp
    47ea:	48 83 ec 20          	sub    $0x20,%rsp
    47ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    47f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    47fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    47fe:	48 89 d0             	mov    %rdx,%rax
    4801:	48 c1 e0 06          	shl    $0x6,%rax
    4805:	48 01 d0             	add    %rdx,%rax
    4808:	48 c1 e0 03          	shl    $0x3,%rax
    480c:	48 89 c2             	mov    %rax,%rdx
    480f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4813:	48 89 d6             	mov    %rdx,%rsi
    4816:	48 89 c7             	mov    %rax,%rdi
    4819:	e8 72 d9 ff ff       	call   2190 <_ZdlPvm@plt>
      }
    481e:	c9                   	leave
    481f:	c3                   	ret

0000000000004820 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4820:	55                   	push   %rbp
    4821:	48 89 e5             	mov    %rsp,%rbp
    4824:	48 83 ec 10          	sub    $0x10,%rsp
    4828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    482c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4830:	48 89 c7             	mov    %rax,%rdi
    4833:	e8 8c 03 00 00       	call   4bc4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    4838:	c9                   	leave
    4839:	c3                   	ret

000000000000483a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    483a:	55                   	push   %rbp
    483b:	48 89 e5             	mov    %rsp,%rbp
    483e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4846:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    484d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4851:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4858:	00 
    4859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    485d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4864:	00 
	{ }
    4865:	90                   	nop
    4866:	5d                   	pop    %rbp
    4867:	c3                   	ret

0000000000004868 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4868:	55                   	push   %rbp
    4869:	48 89 e5             	mov    %rsp,%rbp
    486c:	48 83 ec 10          	sub    $0x10,%rsp
    4870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4874:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4878:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    487d:	74 15                	je     4894 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    487f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4883:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4887:	48 89 d6             	mov    %rdx,%rsi
    488a:	48 89 c7             	mov    %rax,%rdi
    488d:	e8 4c 03 00 00       	call   4bde <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    4892:	eb 05                	jmp    4899 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    4894:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4899:	c9                   	leave
    489a:	c3                   	ret

000000000000489b <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    489b:	55                   	push   %rbp
    489c:	48 89 e5             	mov    %rsp,%rbp
    489f:	48 83 ec 20          	sub    $0x20,%rsp
    48a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    48a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    48ab:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    48af:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    48b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    48b7:	48 89 d6             	mov    %rdx,%rsi
    48ba:	48 89 c7             	mov    %rax,%rdi
    48bd:	e8 46 03 00 00       	call   4c08 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    48c2:	c9                   	leave
    48c3:	c3                   	ret

00000000000048c4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    48c4:	55                   	push   %rbp
    48c5:	48 89 e5             	mov    %rsp,%rbp
    48c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    48d0:	90                   	nop
    48d1:	5d                   	pop    %rbp
    48d2:	c3                   	ret
    48d3:	90                   	nop

00000000000048d4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    48d4:	55                   	push   %rbp
    48d5:	48 89 e5             	mov    %rsp,%rbp
    48d8:	48 83 ec 20          	sub    $0x20,%rsp
    48dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    48e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    48e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    48ec:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    48f3:	00 
    48f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    48f8:	48 89 d6             	mov    %rdx,%rsi
    48fb:	48 89 c7             	mov    %rax,%rdi
    48fe:	e8 8d d8 ff ff       	call   2190 <_ZdlPvm@plt>
      }
    4903:	c9                   	leave
    4904:	c3                   	ret
    4905:	90                   	nop

0000000000004906 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    4906:	55                   	push   %rbp
    4907:	48 89 e5             	mov    %rsp,%rbp
    490a:	48 83 ec 10          	sub    $0x10,%rsp
    490e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    4912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4916:	48 89 c7             	mov    %rax,%rdi
    4919:	e8 48 03 00 00       	call   4c66 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    491e:	c9                   	leave
    491f:	c3                   	ret

0000000000004920 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    4920:	55                   	push   %rbp
    4921:	48 89 e5             	mov    %rsp,%rbp
    4924:	48 83 ec 10          	sub    $0x10,%rsp
    4928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    492c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    4930:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4938:	ba 00 00 00 00       	mov    $0x0,%edx
    493d:	48 89 ce             	mov    %rcx,%rsi
    4940:	48 89 c7             	mov    %rax,%rdi
    4943:	e8 32 03 00 00       	call   4c7a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    4948:	c9                   	leave
    4949:	c3                   	ret

000000000000494a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    494a:	55                   	push   %rbp
    494b:	48 89 e5             	mov    %rsp,%rbp
    494e:	48 83 ec 20          	sub    $0x20,%rsp
    4952:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4956:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    495a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    495f:	74 43                	je     49a4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    4961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4965:	48 89 c7             	mov    %rax,%rdi
    4968:	e8 78 03 00 00       	call   4ce5 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    496d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    4971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4975:	48 89 c7             	mov    %rax,%rdi
    4978:	e8 76 03 00 00       	call   4cf3 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    497d:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    4984:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    4985:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4989:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    498d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4995:	48 89 ce             	mov    %rcx,%rsi
    4998:	48 89 c7             	mov    %rax,%rdi
    499b:	e8 ad 03 00 00       	call   4d4d <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    49a0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    49a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    49a8:	c9                   	leave
    49a9:	c3                   	ret

00000000000049aa <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    49aa:	55                   	push   %rbp
    49ab:	48 89 e5             	mov    %rsp,%rbp
    49ae:	48 83 ec 10          	sub    $0x10,%rsp
    49b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    49b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49ba:	48 89 c7             	mov    %rax,%rdi
    49bd:	e8 d0 03 00 00       	call   4d92 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    49c2:	c9                   	leave
    49c3:	c3                   	ret

00000000000049c4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    49c4:	55                   	push   %rbp
    49c5:	48 89 e5             	mov    %rsp,%rbp
    49c8:	48 83 ec 10          	sub    $0x10,%rsp
    49cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    49d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    49d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49dc:	ba 00 00 00 00       	mov    $0x0,%edx
    49e1:	48 89 ce             	mov    %rcx,%rsi
    49e4:	48 89 c7             	mov    %rax,%rdi
    49e7:	e8 ba 03 00 00       	call   4da6 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    49ec:	c9                   	leave
    49ed:	c3                   	ret

00000000000049ee <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    49ee:	55                   	push   %rbp
    49ef:	48 89 e5             	mov    %rsp,%rbp
    49f2:	48 83 ec 20          	sub    $0x20,%rsp
    49f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    49fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    49fe:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    4a03:	74 40                	je     4a45 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    4a05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a09:	48 89 c7             	mov    %rax,%rdi
    4a0c:	e8 f6 03 00 00       	call   4e07 <_ZSt11__addressofIPKcEPT_RS2_>
    4a11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    4a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a19:	48 89 c7             	mov    %rax,%rdi
    4a1c:	e8 f4 03 00 00       	call   4e15 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    4a21:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    4a26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a2a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    4a2e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4a32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a36:	48 89 ce             	mov    %rcx,%rsi
    4a39:	48 89 c7             	mov    %rax,%rdi
    4a3c:	e8 fb 03 00 00       	call   4e3c <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    4a41:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    4a45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    4a49:	c9                   	leave
    4a4a:	c3                   	ret
    4a4b:	90                   	nop

0000000000004a4c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    4a4c:	55                   	push   %rbp
    4a4d:	48 89 e5             	mov    %rsp,%rbp
    4a50:	48 83 ec 10          	sub    $0x10,%rsp
    4a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    4a58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a5c:	48 89 c7             	mov    %rax,%rdi
    4a5f:	e8 1c 04 00 00       	call   4e80 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    4a64:	48 89 c7             	mov    %rax,%rdi
    4a67:	e8 4f f2 ff ff       	call   3cbb <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    4a6c:	c9                   	leave
    4a6d:	c3                   	ret

0000000000004a6e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    4a6e:	55                   	push   %rbp
    4a6f:	48 89 e5             	mov    %rsp,%rbp
    4a72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a7a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a82:	48 8b 00             	mov    (%rax),%rax
    4a85:	48 29 c2             	sub    %rax,%rdx
    4a88:	48 89 d0             	mov    %rdx,%rax
    4a8b:	48 c1 f8 03          	sar    $0x3,%rax
    4a8f:	5d                   	pop    %rbp
    4a90:	c3                   	ret

0000000000004a91 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    4a91:	55                   	push   %rbp
    4a92:	48 89 e5             	mov    %rsp,%rbp
    4a95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    4a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa1:	48 8b 10             	mov    (%rax),%rdx
    4aa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4aa8:	48 8b 00             	mov    (%rax),%rax
    4aab:	48 39 c2             	cmp    %rax,%rdx
    4aae:	73 06                	jae    4ab6 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    4ab0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ab4:	eb 04                	jmp    4aba <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    4ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4aba:	5d                   	pop    %rbp
    4abb:	c3                   	ret

0000000000004abc <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    4abc:	55                   	push   %rbp
    4abd:	48 89 e5             	mov    %rsp,%rbp
    4ac0:	41 54                	push   %r12
    4ac2:	53                   	push   %rbx
    4ac3:	48 83 ec 20          	sub    $0x20,%rsp
    4ac7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4acb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4acf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    4ad3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    4ad7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4adb:	48 89 c7             	mov    %rax,%rdi
    4ade:	e8 ab 03 00 00       	call   4e8e <_ZSt12__niter_baseIPPKcET_S3_>
    4ae3:	49 89 c4             	mov    %rax,%r12
    4ae6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4aea:	48 89 c7             	mov    %rax,%rdi
    4aed:	e8 9c 03 00 00       	call   4e8e <_ZSt12__niter_baseIPPKcET_S3_>
    4af2:	48 89 c3             	mov    %rax,%rbx
    4af5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4af9:	48 89 c7             	mov    %rax,%rdi
    4afc:	e8 8d 03 00 00       	call   4e8e <_ZSt12__niter_baseIPPKcET_S3_>
    4b01:	48 89 c7             	mov    %rax,%rdi
    4b04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b08:	48 89 c1             	mov    %rax,%rcx
    4b0b:	4c 89 e2             	mov    %r12,%rdx
    4b0e:	48 89 de             	mov    %rbx,%rsi
    4b11:	e8 86 03 00 00       	call   4e9c <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    4b16:	48 83 c4 20          	add    $0x20,%rsp
    4b1a:	5b                   	pop    %rbx
    4b1b:	41 5c                	pop    %r12
    4b1d:	5d                   	pop    %rbp
    4b1e:	c3                   	ret
    4b1f:	90                   	nop

0000000000004b20 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    4b20:	55                   	push   %rbp
    4b21:	48 89 e5             	mov    %rsp,%rbp
    4b24:	48 83 ec 10          	sub    $0x10,%rsp
    4b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    4b2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b30:	48 89 c7             	mov    %rax,%rdi
    4b33:	e8 c8 03 00 00       	call   4f00 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    4b38:	c9                   	leave
    4b39:	c3                   	ret

0000000000004b3a <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    4b3a:	55                   	push   %rbp
    4b3b:	48 89 e5             	mov    %rsp,%rbp
    4b3e:	48 83 ec 10          	sub    $0x10,%rsp
    4b42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    4b4a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b52:	ba 00 00 00 00       	mov    $0x0,%edx
    4b57:	48 89 ce             	mov    %rcx,%rsi
    4b5a:	48 89 c7             	mov    %rax,%rdi
    4b5d:	e8 b2 03 00 00       	call   4f14 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    4b62:	c9                   	leave
    4b63:	c3                   	ret

0000000000004b64 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    4b64:	55                   	push   %rbp
    4b65:	48 89 e5             	mov    %rsp,%rbp
    4b68:	48 83 ec 20          	sub    $0x20,%rsp
    4b6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4b70:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    4b74:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    4b79:	74 43                	je     4bbe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    4b7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b7f:	48 89 c7             	mov    %rax,%rdi
    4b82:	e8 f8 03 00 00       	call   4f7f <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    4b87:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    4b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b8f:	48 89 c7             	mov    %rax,%rdi
    4b92:	e8 f6 03 00 00       	call   4f8d <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    4b97:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    4b9e:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    4b9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ba3:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    4ba7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4bab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4baf:	48 89 ce             	mov    %rcx,%rsi
    4bb2:	48 89 c7             	mov    %rax,%rdi
    4bb5:	e8 2d 04 00 00       	call   4fe7 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    4bba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    4bbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    4bc2:	c9                   	leave
    4bc3:	c3                   	ret

0000000000004bc4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    4bc4:	55                   	push   %rbp
    4bc5:	48 89 e5             	mov    %rsp,%rbp
    4bc8:	48 83 ec 10          	sub    $0x10,%rsp
    4bcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    4bd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd4:	48 89 c7             	mov    %rax,%rdi
    4bd7:	e8 50 04 00 00       	call   502c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    4bdc:	c9                   	leave
    4bdd:	c3                   	ret

0000000000004bde <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    4bde:	55                   	push   %rbp
    4bdf:	48 89 e5             	mov    %rsp,%rbp
    4be2:	48 83 ec 10          	sub    $0x10,%rsp
    4be6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    4bee:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bf6:	ba 00 00 00 00       	mov    $0x0,%edx
    4bfb:	48 89 ce             	mov    %rcx,%rsi
    4bfe:	48 89 c7             	mov    %rax,%rdi
    4c01:	e8 3a 04 00 00       	call   5040 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    4c06:	c9                   	leave
    4c07:	c3                   	ret

0000000000004c08 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    4c08:	55                   	push   %rbp
    4c09:	48 89 e5             	mov    %rsp,%rbp
    4c0c:	48 83 ec 20          	sub    $0x20,%rsp
    4c10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c14:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    4c18:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    4c1d:	74 40                	je     4c5f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    4c1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c23:	48 89 c7             	mov    %rax,%rdi
    4c26:	e8 76 04 00 00       	call   50a1 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    4c2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    4c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c33:	48 89 c7             	mov    %rax,%rdi
    4c36:	e8 74 04 00 00       	call   50af <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    4c3b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    4c40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4c44:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    4c48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4c4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c50:	48 89 ce             	mov    %rcx,%rsi
    4c53:	48 89 c7             	mov    %rax,%rdi
    4c56:	e8 7b 04 00 00       	call   50d6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    4c5b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    4c5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    4c63:	c9                   	leave
    4c64:	c3                   	ret
    4c65:	90                   	nop

0000000000004c66 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    4c66:	55                   	push   %rbp
    4c67:	48 89 e5             	mov    %rsp,%rbp
    4c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    4c6e:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    4c75:	07 7e 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    4c78:	5d                   	pop    %rbp
    4c79:	c3                   	ret

0000000000004c7a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    4c7a:	55                   	push   %rbp
    4c7b:	48 89 e5             	mov    %rsp,%rbp
    4c7e:	48 83 ec 20          	sub    $0x20,%rsp
    4c82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4c8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    4c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c92:	48 89 c7             	mov    %rax,%rdi
    4c95:	e8 cc ff ff ff       	call   4c66 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    4c9a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4c9e:	0f 92 c0             	setb   %al
    4ca1:	0f b6 c0             	movzbl %al,%eax
    4ca4:	48 85 c0             	test   %rax,%rax
    4ca7:	0f 95 c0             	setne  %al
    4caa:	84 c0                	test   %al,%al
    4cac:	74 1a                	je     4cc8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    4cae:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    4cb5:	0f fc 00 
    4cb8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4cbc:	73 05                	jae    4cc3 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    4cbe:	e8 2d d4 ff ff       	call   20f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    4cc3:	e8 78 d3 ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4cc8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4ccc:	48 89 d0             	mov    %rdx,%rax
    4ccf:	48 c1 e0 06          	shl    $0x6,%rax
    4cd3:	48 01 d0             	add    %rdx,%rax
    4cd6:	48 c1 e0 02          	shl    $0x2,%rax
    4cda:	48 89 c7             	mov    %rax,%rdi
    4cdd:	e8 9e d4 ff ff       	call   2180 <_Znwm@plt>
    4ce2:	90                   	nop
      }
    4ce3:	c9                   	leave
    4ce4:	c3                   	ret

0000000000004ce5 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    4ce5:	55                   	push   %rbp
    4ce6:	48 89 e5             	mov    %rsp,%rbp
    4ce9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    4ced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cf1:	5d                   	pop    %rbp
    4cf2:	c3                   	ret

0000000000004cf3 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    4cf3:	55                   	push   %rbp
    4cf4:	48 89 e5             	mov    %rsp,%rbp
    4cf7:	48 83 ec 10          	sub    $0x10,%rsp
    4cfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    4cff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d03:	48 89 c6             	mov    %rax,%rsi
    4d06:	bf 04 01 00 00       	mov    $0x104,%edi
    4d0b:	e8 58 e0 ff ff       	call   2d68 <_ZnwmPv>
    4d10:	b9 04 01 00 00       	mov    $0x104,%ecx
    4d15:	be 00 00 00 00       	mov    $0x0,%esi
    4d1a:	48 89 30             	mov    %rsi,(%rax)
    4d1d:	89 ca                	mov    %ecx,%edx
    4d1f:	48 01 c2             	add    %rax,%rdx
    4d22:	48 83 c2 08          	add    $0x8,%rdx
    4d26:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4d2a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4d2e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    4d32:	48 29 d0             	sub    %rdx,%rax
    4d35:	01 c1                	add    %eax,%ecx
    4d37:	83 e1 f8             	and    $0xfffffff8,%ecx
    4d3a:	89 c8                	mov    %ecx,%eax
    4d3c:	c1 e8 03             	shr    $0x3,%eax
    4d3f:	89 c1                	mov    %eax,%ecx
    4d41:	48 89 d7             	mov    %rdx,%rdi
    4d44:	48 89 f0             	mov    %rsi,%rax
    4d47:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    4d4a:	90                   	nop
    4d4b:	c9                   	leave
    4d4c:	c3                   	ret

0000000000004d4d <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    4d4d:	55                   	push   %rbp
    4d4e:	48 89 e5             	mov    %rsp,%rbp
    4d51:	48 83 ec 20          	sub    $0x20,%rsp
    4d55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4d5d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    4d61:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4d65:	48 89 c7             	mov    %rax,%rdi
    4d68:	e8 ad 03 00 00       	call   511a <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    4d6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d71:	48 89 c7             	mov    %rax,%rdi
    4d74:	e8 01 e0 ff ff       	call   2d7a <_ZSt17__size_to_integerm>
    4d79:	48 89 c1             	mov    %rax,%rcx
    4d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d80:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4d84:	48 89 ce             	mov    %rcx,%rsi
    4d87:	48 89 c7             	mov    %rax,%rdi
    4d8a:	e8 96 03 00 00       	call   5125 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    4d8f:	c9                   	leave
    4d90:	c3                   	ret
    4d91:	90                   	nop

0000000000004d92 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    4d92:	55                   	push   %rbp
    4d93:	48 89 e5             	mov    %rsp,%rbp
    4d96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    4d9a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    4da1:	ff ff 0f 
      }
    4da4:	5d                   	pop    %rbp
    4da5:	c3                   	ret

0000000000004da6 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    4da6:	55                   	push   %rbp
    4da7:	48 89 e5             	mov    %rsp,%rbp
    4daa:	48 83 ec 20          	sub    $0x20,%rsp
    4dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4db2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4db6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    4dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dbe:	48 89 c7             	mov    %rax,%rdi
    4dc1:	e8 cc ff ff ff       	call   4d92 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    4dc6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4dca:	0f 92 c0             	setb   %al
    4dcd:	0f b6 c0             	movzbl %al,%eax
    4dd0:	48 85 c0             	test   %rax,%rax
    4dd3:	0f 95 c0             	setne  %al
    4dd6:	84 c0                	test   %al,%al
    4dd8:	74 1a                	je     4df4 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    4dda:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    4de1:	ff ff 1f 
    4de4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4de8:	73 05                	jae    4def <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    4dea:	e8 01 d3 ff ff       	call   20f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    4def:	e8 4c d2 ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4df4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4df8:	48 c1 e0 03          	shl    $0x3,%rax
    4dfc:	48 89 c7             	mov    %rax,%rdi
    4dff:	e8 7c d3 ff ff       	call   2180 <_Znwm@plt>
    4e04:	90                   	nop
      }
    4e05:	c9                   	leave
    4e06:	c3                   	ret

0000000000004e07 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    4e07:	55                   	push   %rbp
    4e08:	48 89 e5             	mov    %rsp,%rbp
    4e0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    4e0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e13:	5d                   	pop    %rbp
    4e14:	c3                   	ret

0000000000004e15 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    4e15:	55                   	push   %rbp
    4e16:	48 89 e5             	mov    %rsp,%rbp
    4e19:	48 83 ec 10          	sub    $0x10,%rsp
    4e1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    4e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e25:	48 89 c6             	mov    %rax,%rsi
    4e28:	bf 08 00 00 00       	mov    $0x8,%edi
    4e2d:	e8 36 df ff ff       	call   2d68 <_ZnwmPv>
    4e32:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    4e39:	90                   	nop
    4e3a:	c9                   	leave
    4e3b:	c3                   	ret

0000000000004e3c <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    4e3c:	55                   	push   %rbp
    4e3d:	48 89 e5             	mov    %rsp,%rbp
    4e40:	48 83 ec 20          	sub    $0x20,%rsp
    4e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    4e50:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4e54:	48 89 c7             	mov    %rax,%rdi
    4e57:	e8 38 03 00 00       	call   5194 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    4e5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e60:	48 89 c7             	mov    %rax,%rdi
    4e63:	e8 12 df ff ff       	call   2d7a <_ZSt17__size_to_integerm>
    4e68:	48 89 c1             	mov    %rax,%rcx
    4e6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4e73:	48 89 ce             	mov    %rcx,%rsi
    4e76:	48 89 c7             	mov    %rax,%rdi
    4e79:	e8 21 03 00 00       	call   519f <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    4e7e:	c9                   	leave
    4e7f:	c3                   	ret

0000000000004e80 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    4e80:	55                   	push   %rbp
    4e81:	48 89 e5             	mov    %rsp,%rbp
    4e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    4e88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e8c:	5d                   	pop    %rbp
    4e8d:	c3                   	ret

0000000000004e8e <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    4e8e:	55                   	push   %rbp
    4e8f:	48 89 e5             	mov    %rsp,%rbp
    4e92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    4e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e9a:	5d                   	pop    %rbp
    4e9b:	c3                   	ret

0000000000004e9c <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    4e9c:	55                   	push   %rbp
    4e9d:	48 89 e5             	mov    %rsp,%rbp
    4ea0:	48 83 ec 30          	sub    $0x30,%rsp
    4ea4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ea8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4eac:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    4eb0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    4eb4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4eb8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    4ebc:	48 c1 f8 03          	sar    $0x3,%rax
    4ec0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    4ec4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4ec9:	7e 1f                	jle    4eea <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    4ecb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ecf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4ed6:	00 
    4ed7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    4edb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4edf:	48 89 ce             	mov    %rcx,%rsi
    4ee2:	48 89 c7             	mov    %rax,%rdi
    4ee5:	e8 66 d3 ff ff       	call   2250 <memmove@plt>
      return __result + __count;
    4eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4ef5:	00 
    4ef6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4efa:	48 01 d0             	add    %rdx,%rax
    }
    4efd:	c9                   	leave
    4efe:	c3                   	ret
    4eff:	90                   	nop

0000000000004f00 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    4f00:	55                   	push   %rbp
    4f01:	48 89 e5             	mov    %rsp,%rbp
    4f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    4f08:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    4f0f:	03 3f 00 
      }
    4f12:	5d                   	pop    %rbp
    4f13:	c3                   	ret

0000000000004f14 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    4f14:	55                   	push   %rbp
    4f15:	48 89 e5             	mov    %rsp,%rbp
    4f18:	48 83 ec 20          	sub    $0x20,%rsp
    4f1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4f24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    4f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f2c:	48 89 c7             	mov    %rax,%rdi
    4f2f:	e8 cc ff ff ff       	call   4f00 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    4f34:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4f38:	0f 92 c0             	setb   %al
    4f3b:	0f b6 c0             	movzbl %al,%eax
    4f3e:	48 85 c0             	test   %rax,%rax
    4f41:	0f 95 c0             	setne  %al
    4f44:	84 c0                	test   %al,%al
    4f46:	74 1a                	je     4f62 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    4f48:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    4f4f:	07 7e 00 
    4f52:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4f56:	73 05                	jae    4f5d <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    4f58:	e8 93 d1 ff ff       	call   20f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    4f5d:	e8 de d0 ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4f62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4f66:	48 89 d0             	mov    %rdx,%rax
    4f69:	48 c1 e0 06          	shl    $0x6,%rax
    4f6d:	48 01 d0             	add    %rdx,%rax
    4f70:	48 c1 e0 03          	shl    $0x3,%rax
    4f74:	48 89 c7             	mov    %rax,%rdi
    4f77:	e8 04 d2 ff ff       	call   2180 <_Znwm@plt>
    4f7c:	90                   	nop
      }
    4f7d:	c9                   	leave
    4f7e:	c3                   	ret

0000000000004f7f <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    4f7f:	55                   	push   %rbp
    4f80:	48 89 e5             	mov    %rsp,%rbp
    4f83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    4f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f8b:	5d                   	pop    %rbp
    4f8c:	c3                   	ret

0000000000004f8d <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    4f8d:	55                   	push   %rbp
    4f8e:	48 89 e5             	mov    %rsp,%rbp
    4f91:	48 83 ec 10          	sub    $0x10,%rsp
    4f95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    4f99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f9d:	48 89 c6             	mov    %rax,%rsi
    4fa0:	bf 08 02 00 00       	mov    $0x208,%edi
    4fa5:	e8 be dd ff ff       	call   2d68 <_ZnwmPv>
    4faa:	b9 08 02 00 00       	mov    $0x208,%ecx
    4faf:	be 00 00 00 00       	mov    $0x0,%esi
    4fb4:	48 89 30             	mov    %rsi,(%rax)
    4fb7:	89 ca                	mov    %ecx,%edx
    4fb9:	48 01 c2             	add    %rax,%rdx
    4fbc:	48 83 c2 08          	add    $0x8,%rdx
    4fc0:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4fc4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4fc8:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    4fcc:	48 29 d0             	sub    %rdx,%rax
    4fcf:	01 c1                	add    %eax,%ecx
    4fd1:	83 e1 f8             	and    $0xfffffff8,%ecx
    4fd4:	89 c8                	mov    %ecx,%eax
    4fd6:	c1 e8 03             	shr    $0x3,%eax
    4fd9:	89 c1                	mov    %eax,%ecx
    4fdb:	48 89 d7             	mov    %rdx,%rdi
    4fde:	48 89 f0             	mov    %rsi,%rax
    4fe1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    4fe4:	90                   	nop
    4fe5:	c9                   	leave
    4fe6:	c3                   	ret

0000000000004fe7 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    4fe7:	55                   	push   %rbp
    4fe8:	48 89 e5             	mov    %rsp,%rbp
    4feb:	48 83 ec 20          	sub    $0x20,%rsp
    4fef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ff3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4ff7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    4ffb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4fff:	48 89 c7             	mov    %rax,%rdi
    5002:	e8 f5 01 00 00       	call   51fc <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5007:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    500b:	48 89 c7             	mov    %rax,%rdi
    500e:	e8 67 dd ff ff       	call   2d7a <_ZSt17__size_to_integerm>
    5013:	48 89 c1             	mov    %rax,%rcx
    5016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    501a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    501e:	48 89 ce             	mov    %rcx,%rsi
    5021:	48 89 c7             	mov    %rax,%rdi
    5024:	e8 de 01 00 00       	call   5207 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    5029:	c9                   	leave
    502a:	c3                   	ret
    502b:	90                   	nop

000000000000502c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    502c:	55                   	push   %rbp
    502d:	48 89 e5             	mov    %rsp,%rbp
    5030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5034:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    503b:	ff ff 0f 
      }
    503e:	5d                   	pop    %rbp
    503f:	c3                   	ret

0000000000005040 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5040:	55                   	push   %rbp
    5041:	48 89 e5             	mov    %rsp,%rbp
    5044:	48 83 ec 20          	sub    $0x20,%rsp
    5048:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    504c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5050:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5058:	48 89 c7             	mov    %rax,%rdi
    505b:	e8 cc ff ff ff       	call   502c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    5060:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5064:	0f 92 c0             	setb   %al
    5067:	0f b6 c0             	movzbl %al,%eax
    506a:	48 85 c0             	test   %rax,%rax
    506d:	0f 95 c0             	setne  %al
    5070:	84 c0                	test   %al,%al
    5072:	74 1a                	je     508e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5074:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    507b:	ff ff 1f 
    507e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5082:	73 05                	jae    5089 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5084:	e8 67 d0 ff ff       	call   20f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5089:	e8 b2 cf ff ff       	call   2040 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    508e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5092:	48 c1 e0 03          	shl    $0x3,%rax
    5096:	48 89 c7             	mov    %rax,%rdi
    5099:	e8 e2 d0 ff ff       	call   2180 <_Znwm@plt>
    509e:	90                   	nop
      }
    509f:	c9                   	leave
    50a0:	c3                   	ret

00000000000050a1 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    50a1:	55                   	push   %rbp
    50a2:	48 89 e5             	mov    %rsp,%rbp
    50a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    50a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ad:	5d                   	pop    %rbp
    50ae:	c3                   	ret

00000000000050af <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    50af:	55                   	push   %rbp
    50b0:	48 89 e5             	mov    %rsp,%rbp
    50b3:	48 83 ec 10          	sub    $0x10,%rsp
    50b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    50bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50bf:	48 89 c6             	mov    %rax,%rsi
    50c2:	bf 08 00 00 00       	mov    $0x8,%edi
    50c7:	e8 9c dc ff ff       	call   2d68 <_ZnwmPv>
    50cc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    50d3:	90                   	nop
    50d4:	c9                   	leave
    50d5:	c3                   	ret

00000000000050d6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    50d6:	55                   	push   %rbp
    50d7:	48 89 e5             	mov    %rsp,%rbp
    50da:	48 83 ec 20          	sub    $0x20,%rsp
    50de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    50e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    50ea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    50ee:	48 89 c7             	mov    %rax,%rdi
    50f1:	e8 80 01 00 00       	call   5276 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    50f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50fa:	48 89 c7             	mov    %rax,%rdi
    50fd:	e8 78 dc ff ff       	call   2d7a <_ZSt17__size_to_integerm>
    5102:	48 89 c1             	mov    %rax,%rcx
    5105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5109:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    510d:	48 89 ce             	mov    %rcx,%rsi
    5110:	48 89 c7             	mov    %rax,%rdi
    5113:	e8 69 01 00 00       	call   5281 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    5118:	c9                   	leave
    5119:	c3                   	ret

000000000000511a <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    511a:	55                   	push   %rbp
    511b:	48 89 e5             	mov    %rsp,%rbp
    511e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5122:	90                   	nop
    5123:	5d                   	pop    %rbp
    5124:	c3                   	ret

0000000000005125 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5125:	55                   	push   %rbp
    5126:	48 89 e5             	mov    %rsp,%rbp
    5129:	48 83 ec 20          	sub    $0x20,%rsp
    512d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5131:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5135:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5139:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    513e:	75 06                	jne    5146 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5144:	eb 4c                	jmp    5192 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    5146:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    514a:	48 89 d0             	mov    %rdx,%rax
    514d:	48 c1 e0 06          	shl    $0x6,%rax
    5151:	48 01 d0             	add    %rdx,%rax
    5154:	48 c1 e0 02          	shl    $0x2,%rax
    5158:	48 89 c2             	mov    %rax,%rdx
    515b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    515f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5163:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    516b:	48 89 ce             	mov    %rcx,%rsi
    516e:	48 89 c7             	mov    %rax,%rdi
    5171:	e8 68 01 00 00       	call   52de <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    5176:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    517a:	48 89 d0             	mov    %rdx,%rax
    517d:	48 c1 e0 06          	shl    $0x6,%rax
    5181:	48 01 d0             	add    %rdx,%rax
    5184:	48 c1 e0 02          	shl    $0x2,%rax
    5188:	48 89 c2             	mov    %rax,%rdx
    518b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    518f:	48 01 d0             	add    %rdx,%rax
    }
    5192:	c9                   	leave
    5193:	c3                   	ret

0000000000005194 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5194:	55                   	push   %rbp
    5195:	48 89 e5             	mov    %rsp,%rbp
    5198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    519c:	90                   	nop
    519d:	5d                   	pop    %rbp
    519e:	c3                   	ret

000000000000519f <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    519f:	55                   	push   %rbp
    51a0:	48 89 e5             	mov    %rsp,%rbp
    51a3:	48 83 ec 20          	sub    $0x20,%rsp
    51a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    51af:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    51b3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    51b8:	75 06                	jne    51c0 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    51ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51be:	eb 3a                	jmp    51fa <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    51c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    51c4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    51cb:	00 
    51cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51d0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    51d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    51d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51dc:	48 89 ce             	mov    %rcx,%rsi
    51df:	48 89 c7             	mov    %rax,%rdi
    51e2:	e8 25 01 00 00       	call   530c <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    51e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    51eb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    51f2:	00 
    51f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51f7:	48 01 d0             	add    %rdx,%rax
    }
    51fa:	c9                   	leave
    51fb:	c3                   	ret

00000000000051fc <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    51fc:	55                   	push   %rbp
    51fd:	48 89 e5             	mov    %rsp,%rbp
    5200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5204:	90                   	nop
    5205:	5d                   	pop    %rbp
    5206:	c3                   	ret

0000000000005207 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5207:	55                   	push   %rbp
    5208:	48 89 e5             	mov    %rsp,%rbp
    520b:	48 83 ec 20          	sub    $0x20,%rsp
    520f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5213:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5217:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    521b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5220:	75 06                	jne    5228 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5226:	eb 4c                	jmp    5274 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    5228:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    522c:	48 89 d0             	mov    %rdx,%rax
    522f:	48 c1 e0 06          	shl    $0x6,%rax
    5233:	48 01 d0             	add    %rdx,%rax
    5236:	48 c1 e0 03          	shl    $0x3,%rax
    523a:	48 89 c2             	mov    %rax,%rdx
    523d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5241:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5245:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5249:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    524d:	48 89 ce             	mov    %rcx,%rsi
    5250:	48 89 c7             	mov    %rax,%rdi
    5253:	e8 e2 00 00 00       	call   533a <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    5258:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    525c:	48 89 d0             	mov    %rdx,%rax
    525f:	48 c1 e0 06          	shl    $0x6,%rax
    5263:	48 01 d0             	add    %rdx,%rax
    5266:	48 c1 e0 03          	shl    $0x3,%rax
    526a:	48 89 c2             	mov    %rax,%rdx
    526d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5271:	48 01 d0             	add    %rdx,%rax
    }
    5274:	c9                   	leave
    5275:	c3                   	ret

0000000000005276 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5276:	55                   	push   %rbp
    5277:	48 89 e5             	mov    %rsp,%rbp
    527a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    527e:	90                   	nop
    527f:	5d                   	pop    %rbp
    5280:	c3                   	ret

0000000000005281 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5281:	55                   	push   %rbp
    5282:	48 89 e5             	mov    %rsp,%rbp
    5285:	48 83 ec 20          	sub    $0x20,%rsp
    5289:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    528d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5291:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5295:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    529a:	75 06                	jne    52a2 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    529c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a0:	eb 3a                	jmp    52dc <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    52a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52a6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    52ad:	00 
    52ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52b2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    52b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52be:	48 89 ce             	mov    %rcx,%rsi
    52c1:	48 89 c7             	mov    %rax,%rdi
    52c4:	e8 9f 00 00 00       	call   5368 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    52c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52cd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    52d4:	00 
    52d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52d9:	48 01 d0             	add    %rdx,%rax
    }
    52dc:	c9                   	leave
    52dd:	c3                   	ret

00000000000052de <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    52de:	55                   	push   %rbp
    52df:	48 89 e5             	mov    %rsp,%rbp
    52e2:	48 83 ec 20          	sub    $0x20,%rsp
    52e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    52f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    52fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52fe:	48 89 ce             	mov    %rcx,%rsi
    5301:	48 89 c7             	mov    %rax,%rdi
    5304:	e8 8d 00 00 00       	call   5396 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    5309:	90                   	nop
    530a:	c9                   	leave
    530b:	c3                   	ret

000000000000530c <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    530c:	55                   	push   %rbp
    530d:	48 89 e5             	mov    %rsp,%rbp
    5310:	48 83 ec 20          	sub    $0x20,%rsp
    5314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5318:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    531c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5320:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5324:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    532c:	48 89 ce             	mov    %rcx,%rsi
    532f:	48 89 c7             	mov    %rax,%rdi
    5332:	e8 d7 00 00 00       	call   540e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5337:	90                   	nop
    5338:	c9                   	leave
    5339:	c3                   	ret

000000000000533a <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    533a:	55                   	push   %rbp
    533b:	48 89 e5             	mov    %rsp,%rbp
    533e:	48 83 ec 20          	sub    $0x20,%rsp
    5342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5346:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    534a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    534e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5352:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    535a:	48 89 ce             	mov    %rcx,%rsi
    535d:	48 89 c7             	mov    %rax,%rdi
    5360:	e8 e4 00 00 00       	call   5449 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    5365:	90                   	nop
    5366:	c9                   	leave
    5367:	c3                   	ret

0000000000005368 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5368:	55                   	push   %rbp
    5369:	48 89 e5             	mov    %rsp,%rbp
    536c:	48 83 ec 20          	sub    $0x20,%rsp
    5370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5374:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5378:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    537c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5380:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5388:	48 89 ce             	mov    %rcx,%rsi
    538b:	48 89 c7             	mov    %rax,%rdi
    538e:	e8 2e 01 00 00       	call   54c1 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5393:	90                   	nop
    5394:	c9                   	leave
    5395:	c3                   	ret

0000000000005396 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5396:	55                   	push   %rbp
    5397:	48 89 e5             	mov    %rsp,%rbp
    539a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    539e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    53a6:	eb 58                	jmp    5400 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    53a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    53b0:	b9 04 01 00 00       	mov    $0x104,%ecx
    53b5:	48 8b 32             	mov    (%rdx),%rsi
    53b8:	48 89 30             	mov    %rsi,(%rax)
    53bb:	89 ce                	mov    %ecx,%esi
    53bd:	48 01 c6             	add    %rax,%rsi
    53c0:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    53c4:	89 ce                	mov    %ecx,%esi
    53c6:	48 01 d6             	add    %rdx,%rsi
    53c9:	48 83 c6 08          	add    $0x8,%rsi
    53cd:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    53d1:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    53d5:	48 8d 78 08          	lea    0x8(%rax),%rdi
    53d9:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    53dd:	48 29 f8             	sub    %rdi,%rax
    53e0:	48 29 c2             	sub    %rax,%rdx
    53e3:	01 c1                	add    %eax,%ecx
    53e5:	83 e1 f8             	and    $0xfffffff8,%ecx
    53e8:	89 c8                	mov    %ecx,%eax
    53ea:	c1 e8 03             	shr    $0x3,%eax
    53ed:	89 c0                	mov    %eax,%eax
    53ef:	48 89 d6             	mov    %rdx,%rsi
    53f2:	48 89 c1             	mov    %rax,%rcx
    53f5:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    53f8:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    53ff:	00 
    5400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5404:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5408:	75 9e                	jne    53a8 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    540a:	90                   	nop
    540b:	90                   	nop
    540c:	5d                   	pop    %rbp
    540d:	c3                   	ret

000000000000540e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    540e:	55                   	push   %rbp
    540f:	48 89 e5             	mov    %rsp,%rbp
    5412:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5416:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    541a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    541e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5422:	48 8b 00             	mov    (%rax),%rax
    5425:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5429:	eb 10                	jmp    543b <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    542b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    542f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5433:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5436:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    543b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    543f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5443:	75 e6                	jne    542b <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5445:	90                   	nop
    5446:	90                   	nop
    5447:	5d                   	pop    %rbp
    5448:	c3                   	ret

0000000000005449 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5449:	55                   	push   %rbp
    544a:	48 89 e5             	mov    %rsp,%rbp
    544d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5451:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5455:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    5459:	eb 58                	jmp    54b3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    545b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    545f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5463:	b9 08 02 00 00       	mov    $0x208,%ecx
    5468:	48 8b 32             	mov    (%rdx),%rsi
    546b:	48 89 30             	mov    %rsi,(%rax)
    546e:	89 ce                	mov    %ecx,%esi
    5470:	48 01 c6             	add    %rax,%rsi
    5473:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    5477:	89 ce                	mov    %ecx,%esi
    5479:	48 01 d6             	add    %rdx,%rsi
    547c:	48 83 c6 08          	add    $0x8,%rsi
    5480:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    5484:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    5488:	48 8d 78 08          	lea    0x8(%rax),%rdi
    548c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5490:	48 29 f8             	sub    %rdi,%rax
    5493:	48 29 c2             	sub    %rax,%rdx
    5496:	01 c1                	add    %eax,%ecx
    5498:	83 e1 f8             	and    $0xfffffff8,%ecx
    549b:	89 c8                	mov    %ecx,%eax
    549d:	c1 e8 03             	shr    $0x3,%eax
    54a0:	89 c0                	mov    %eax,%eax
    54a2:	48 89 d6             	mov    %rdx,%rsi
    54a5:	48 89 c1             	mov    %rax,%rcx
    54a8:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    54ab:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    54b2:	00 
    54b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54b7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54bb:	75 9e                	jne    545b <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    54bd:	90                   	nop
    54be:	90                   	nop
    54bf:	5d                   	pop    %rbp
    54c0:	c3                   	ret

00000000000054c1 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    54c1:	55                   	push   %rbp
    54c2:	48 89 e5             	mov    %rsp,%rbp
    54c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    54c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    54cd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    54d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54d5:	48 8b 00             	mov    (%rax),%rax
    54d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    54dc:	eb 10                	jmp    54ee <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    54de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54e2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    54e6:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    54e9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    54ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54f2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    54f6:	75 e6                	jne    54de <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    54f8:	90                   	nop
    54f9:	90                   	nop
    54fa:	5d                   	pop    %rbp
    54fb:	c3                   	ret

00000000000054fc <_ZN3vkh19makeApplicationInfoEPKc>:
#include "make_info.hpp"

namespace vkh {
VkApplicationInfo makeApplicationInfo(const char *pApplicationName) {
    54fc:	55                   	push   %rbp
    54fd:	48 89 e5             	mov    %rsp,%rbp
    5500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5504:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    5508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    550c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5510:	0f 11 00             	movups %xmm0,(%rax)
    5513:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5517:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    551b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    551f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    5525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5529:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    552d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    5531:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5535:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    553c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5540:	48 8d 15 69 39 00 00 	lea    0x3969(%rip),%rdx        # 8eb0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    5547:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    554b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    554f:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    5556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    555a:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    5561:	90                   	nop
}
    5562:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5566:	5d                   	pop    %rbp
    5567:	c3                   	ret

0000000000005568 <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>:

VkInstanceCreateInfo makeInstanceCreateInfo(
    const VkApplicationInfo *appInfo, uint32_t enabledExtensionCount,
    const char *const *ppEnabledExtensionNames, uint32_t enabledLayerCount,
    const char *const *ppEnabledLayerNames, const void *pNext) {
    5568:	55                   	push   %rbp
    5569:	48 89 e5             	mov    %rsp,%rbp
    556c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5570:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5574:	89 55 ec             	mov    %edx,-0x14(%rbp)
    5577:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    557b:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
    557f:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkInstanceCreateInfo createInfo{};
    5583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5587:	66 0f ef c0          	pxor   %xmm0,%xmm0
    558b:	0f 11 00             	movups %xmm0,(%rax)
    558e:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5592:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    5596:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    559a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    559e:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    55a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a8:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    55ac:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    55b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    55b8:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    55bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55c0:	8b 55 e8             	mov    -0x18(%rbp),%edx
    55c3:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    55c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    55ce:	48 89 50 28          	mov    %rdx,0x28(%rax)
  createInfo.enabledExtensionCount = enabledExtensionCount;
    55d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    55d9:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    55dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55e0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    55e4:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    55e8:	90                   	nop
}
    55e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ed:	5d                   	pop    %rbp
    55ee:	c3                   	ret

00000000000055ef <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfojPKPKcPK24VkPhysicalDeviceFeaturesjS6_PKv>:
    uint32_t queueCreateInfoCount,
    const VkDeviceQueueCreateInfo *pQueueCreateInfos,
    uint32_t enabledExtensionCount, const char *const *ppEnabledExtensionNames,
    const VkPhysicalDeviceFeatures *pEnabledFeatures,
    uint32_t enabledLayerCount, const char *const *ppEnabledLayerNames,
    const void *pNext) {
    55ef:	55                   	push   %rbp
    55f0:	48 89 e5             	mov    %rsp,%rbp
    55f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55f7:	89 75 f4             	mov    %esi,-0xc(%rbp)
    55fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    55fe:	89 4d f0             	mov    %ecx,-0x10(%rbp)
    5601:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
    5605:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkDeviceCreateInfo deviceCreateInfo{};
    5609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    560d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5611:	0f 11 00             	movups %xmm0,(%rax)
    5614:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5618:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    561c:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    5620:	66 0f d6 40 40       	movq   %xmm0,0x40(%rax)
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    5625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5629:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  deviceCreateInfo.pNext = pNext;
    562f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5633:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    5637:	48 89 50 08          	mov    %rdx,0x8(%rax)
  deviceCreateInfo.queueCreateInfoCount = queueCreateInfoCount;
    563b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    563f:	8b 55 f4             	mov    -0xc(%rbp),%edx
    5642:	89 50 14             	mov    %edx,0x14(%rax)
  deviceCreateInfo.pQueueCreateInfos = pQueueCreateInfos;
    5645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5649:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    564d:	48 89 50 18          	mov    %rdx,0x18(%rax)
  deviceCreateInfo.enabledExtensionCount = enabledExtensionCount;
    5651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5655:	8b 55 f0             	mov    -0x10(%rbp),%edx
    5658:	89 50 30             	mov    %edx,0x30(%rax)
  deviceCreateInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    565b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    565f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5663:	48 89 50 38          	mov    %rdx,0x38(%rax)
  deviceCreateInfo.pEnabledFeatures = pEnabledFeatures;
    5667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    566b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    566f:	48 89 50 40          	mov    %rdx,0x40(%rax)
  deviceCreateInfo.enabledLayerCount = enabledLayerCount;
    5673:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5677:	8b 55 10             	mov    0x10(%rbp),%edx
    567a:	89 50 20             	mov    %edx,0x20(%rax)
  deviceCreateInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    567d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5681:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    5685:	48 89 50 28          	mov    %rdx,0x28(%rax)
  return deviceCreateInfo;
    5689:	90                   	nop
}
    568a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    568e:	5d                   	pop    %rbp
    568f:	c3                   	ret

0000000000005690 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    5690:	55                   	push   %rbp
    5691:	48 89 e5             	mov    %rsp,%rbp
    5694:	53                   	push   %rbx
    5695:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    5699:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    569d:	be 00 00 00 00       	mov    $0x0,%esi
    56a2:	48 89 c7             	mov    %rax,%rdi
    56a5:	e8 26 cb ff ff       	call   21d0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    56aa:	8b 45 c8             	mov    -0x38(%rbp),%eax
    56ad:	89 c3                	mov    %eax,%ebx
    56af:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    56b3:	48 89 c7             	mov    %rax,%rdi
    56b6:	e8 3d da ff ff       	call   30f8 <_ZNSaI17VkLayerPropertiesEC1Ev>
    56bb:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    56bf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    56c3:	48 89 de             	mov    %rbx,%rsi
    56c6:	48 89 c7             	mov    %rax,%rdi
    56c9:	e8 62 da ff ff       	call   3130 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    56ce:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    56d2:	48 89 c7             	mov    %rax,%rdi
    56d5:	e8 3a da ff ff       	call   3114 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    56da:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    56de:	48 89 c7             	mov    %rax,%rdi
    56e1:	e8 04 db ff ff       	call   31ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    56e6:	48 89 c2             	mov    %rax,%rdx
    56e9:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    56ed:	48 89 d6             	mov    %rdx,%rsi
    56f0:	48 89 c7             	mov    %rax,%rdi
    56f3:	e8 d8 ca ff ff       	call   21d0 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    56f8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    56fc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5700:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5704:	48 89 c7             	mov    %rax,%rdi
    5707:	e8 06 05 00 00       	call   5c12 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    570c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5710:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5714:	48 89 c7             	mov    %rax,%rdi
    5717:	e8 1c 05 00 00       	call   5c38 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    571c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5720:	eb 5b                	jmp    577d <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    5722:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    5726:	48 89 c7             	mov    %rax,%rdi
    5729:	e8 92 05 00 00       	call   5cc0 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    572e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    5732:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5736:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    573a:	48 89 d6             	mov    %rdx,%rsi
    573d:	48 89 c7             	mov    %rax,%rdi
    5740:	e8 33 04 00 00       	call   5b78 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    5745:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5749:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    574d:	48 8b 3d ec 85 00 00 	mov    0x85ec(%rip),%rdi        # dd40 <_ZN3vkh19validationLayerNameE>
    5754:	48 8b 35 ed 85 00 00 	mov    0x85ed(%rip),%rsi        # dd48 <_ZN3vkh19validationLayerNameE+0x8>
    575b:	48 89 d1             	mov    %rdx,%rcx
    575e:	48 89 c2             	mov    %rax,%rdx
    5761:	e8 7d 05 00 00       	call   5ce3 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    5766:	84 c0                	test   %al,%al
    5768:	74 07                	je     5771 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    576a:	bb 01 00 00 00       	mov    $0x1,%ebx
    576f:	eb 28                	jmp    5799 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    5771:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    5775:	48 89 c7             	mov    %rax,%rdi
    5778:	e8 1f 05 00 00       	call   5c9c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    577d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    5781:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    5785:	48 89 d6             	mov    %rdx,%rsi
    5788:	48 89 c7             	mov    %rax,%rdi
    578b:	e8 d1 04 00 00       	call   5c61 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    5790:	84 c0                	test   %al,%al
    5792:	75 8e                	jne    5722 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    5794:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    5799:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    579d:	48 89 c7             	mov    %rax,%rdi
    57a0:	e8 01 da ff ff       	call   31a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    57a5:	89 d8                	mov    %ebx,%eax
    57a7:	eb 34                	jmp    57dd <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    57a9:	48 89 c3             	mov    %rax,%rbx
    57ac:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    57b0:	48 89 c7             	mov    %rax,%rdi
    57b3:	e8 5c d9 ff ff       	call   3114 <_ZNSaI17VkLayerPropertiesED1Ev>
    57b8:	48 89 d8             	mov    %rbx,%rax
    57bb:	48 89 c7             	mov    %rax,%rdi
    57be:	e8 bd ca ff ff       	call   2280 <_Unwind_Resume@plt>
}
    57c3:	48 89 c3             	mov    %rax,%rbx
    57c6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    57ca:	48 89 c7             	mov    %rax,%rdi
    57cd:	e8 d4 d9 ff ff       	call   31a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    57d2:	48 89 d8             	mov    %rbx,%rax
    57d5:	48 89 c7             	mov    %rax,%rdi
    57d8:	e8 a3 ca ff ff       	call   2280 <_Unwind_Resume@plt>
    57dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    57e1:	c9                   	leave
    57e2:	c3                   	ret

00000000000057e3 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    57e3:	55                   	push   %rbp
    57e4:	48 89 e5             	mov    %rsp,%rbp
    57e7:	48 83 ec 20          	sub    $0x20,%rsp
    57eb:	89 7d fc             	mov    %edi,-0x4(%rbp)
    57ee:	89 75 f8             	mov    %esi,-0x8(%rbp)
    57f1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    57f5:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    57f9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    57fc:	83 f8 01             	cmp    $0x1,%eax
    57ff:	7e 39                	jle    583a <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x57>
    std::cerr << pCallbackData->pMessage << '\n' << std::endl;
    5801:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5805:	48 8b 40 28          	mov    0x28(%rax),%rax
    5809:	48 89 c6             	mov    %rax,%rsi
    580c:	48 8d 05 4d 89 00 00 	lea    0x894d(%rip),%rax        # e160 <_ZSt4cerr@GLIBCXX_3.4>
    5813:	48 89 c7             	mov    %rax,%rdi
    5816:	e8 55 c9 ff ff       	call   2170 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    581b:	be 0a 00 00 00       	mov    $0xa,%esi
    5820:	48 89 c7             	mov    %rax,%rdi
    5823:	e8 c8 c9 ff ff       	call   21f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    5828:	48 8b 15 71 87 00 00 	mov    0x8771(%rip),%rdx        # dfa0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    582f:	48 89 d6             	mov    %rdx,%rsi
    5832:	48 89 c7             	mov    %rax,%rdi
    5835:	e8 86 c9 ff ff       	call   21c0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    583a:	b8 00 00 00 00       	mov    $0x0,%eax
}
    583f:	c9                   	leave
    5840:	c3                   	ret

0000000000005841 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    5841:	55                   	push   %rbp
    5842:	48 89 e5             	mov    %rsp,%rbp
    5845:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    5849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    584d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5851:	0f 11 00             	movups %xmm0,(%rax)
    5854:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5858:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    585c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5860:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    5866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    586a:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    5871:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5875:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    587c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5880:	48 8d 15 5c ff ff ff 	lea    -0xa4(%rip),%rdx        # 57e3 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    5887:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    588b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    588f:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    5896:	00 
}
    5897:	90                   	nop
    5898:	5d                   	pop    %rbp
    5899:	c3                   	ret

000000000000589a <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    589a:	55                   	push   %rbp
    589b:	48 89 e5             	mov    %rsp,%rbp
    589e:	48 83 ec 30          	sub    $0x30,%rsp
    58a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    58a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    58aa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    58ae:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    58b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58b6:	48 8d 15 fb 3b 00 00 	lea    0x3bfb(%rip),%rdx        # 94b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    58bd:	48 89 d6             	mov    %rdx,%rsi
    58c0:	48 89 c7             	mov    %rax,%rdi
    58c3:	e8 88 c8 ff ff       	call   2150 <vkGetInstanceProcAddr@plt>
    58c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    58cc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    58d1:	75 07                	jne    58da <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    58d3:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    58d8:	eb 1b                	jmp    58f5 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    58da:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    58de:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    58e2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    58e6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    58ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58ee:	48 89 c7             	mov    %rax,%rdi
    58f1:	41 ff d0             	call   *%r8
    58f4:	90                   	nop
}
    58f5:	c9                   	leave
    58f6:	c3                   	ret

00000000000058f7 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    58f7:	55                   	push   %rbp
    58f8:	48 89 e5             	mov    %rsp,%rbp
    58fb:	41 54                	push   %r12
    58fd:	53                   	push   %rbx
    58fe:	48 83 ec 50          	sub    $0x50,%rsp
    5902:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    5906:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    590a:	48 89 c7             	mov    %rax,%rdi
    590d:	e8 2f ff ff ff       	call   5841 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    5912:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    5919:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    591a:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    591e:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5922:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5926:	48 89 d1             	mov    %rdx,%rcx
    5929:	ba 00 00 00 00       	mov    $0x0,%edx
    592e:	48 89 c7             	mov    %rax,%rdi
    5931:	e8 64 ff ff ff       	call   589a <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    5936:	85 c0                	test   %eax,%eax
    5938:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    593b:	84 c0                	test   %al,%al
    593d:	74 3b                	je     597a <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    593f:	bf 10 00 00 00       	mov    $0x10,%edi
    5944:	e8 57 c7 ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    5949:	48 89 c3             	mov    %rax,%rbx
    594c:	48 8d 05 85 3b 00 00 	lea    0x3b85(%rip),%rax        # 94d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    5953:	48 89 c6             	mov    %rax,%rsi
    5956:	48 89 df             	mov    %rbx,%rdi
    5959:	e8 f2 c6 ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    595e:	48 8b 05 4b 86 00 00 	mov    0x864b(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5965:	48 89 c2             	mov    %rax,%rdx
    5968:	48 8d 05 f1 83 00 00 	lea    0x83f1(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    596f:	48 89 c6             	mov    %rax,%rsi
    5972:	48 89 df             	mov    %rbx,%rdi
    5975:	e8 f6 c8 ff ff       	call   2270 <__cxa_throw@plt>
  }
  return debugMessenger;
    597a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    597e:	eb 16                	jmp    5996 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    5980:	49 89 c4             	mov    %rax,%r12
    5983:	48 89 df             	mov    %rbx,%rdi
    5986:	e8 45 c7 ff ff       	call   20d0 <__cxa_free_exception@plt>
    598b:	4c 89 e0             	mov    %r12,%rax
    598e:	48 89 c7             	mov    %rax,%rdi
    5991:	e8 ea c8 ff ff       	call   2280 <_Unwind_Resume@plt>
}
    5996:	48 83 c4 50          	add    $0x50,%rsp
    599a:	5b                   	pop    %rbx
    599b:	41 5c                	pop    %r12
    599d:	5d                   	pop    %rbp
    599e:	c3                   	ret

000000000000599f <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    599f:	55                   	push   %rbp
    59a0:	48 89 e5             	mov    %rsp,%rbp
    59a3:	48 83 ec 30          	sub    $0x30,%rsp
    59a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    59ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    59af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    59b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59b7:	48 8d 15 3a 3b 00 00 	lea    0x3b3a(%rip),%rdx        # 94f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    59be:	48 89 d6             	mov    %rdx,%rsi
    59c1:	48 89 c7             	mov    %rax,%rdi
    59c4:	e8 87 c7 ff ff       	call   2150 <vkGetInstanceProcAddr@plt>
    59c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    59cd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    59d2:	74 19                	je     59ed <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    59d4:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    59d8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    59dc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    59e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59e4:	48 89 ce             	mov    %rcx,%rsi
    59e7:	48 89 c7             	mov    %rax,%rdi
    59ea:	41 ff d0             	call   *%r8
  }
}
    59ed:	90                   	nop
    59ee:	c9                   	leave
    59ef:	c3                   	ret

00000000000059f0 <_Z41__static_initialization_and_destruction_0ii>:

    59f0:	55                   	push   %rbp
    59f1:	48 89 e5             	mov    %rsp,%rbp
    59f4:	48 83 ec 10          	sub    $0x10,%rsp
    59f8:	89 7d fc             	mov    %edi,-0x4(%rbp)
    59fb:	89 75 f8             	mov    %esi,-0x8(%rbp)
    59fe:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    5a02:	75 3b                	jne    5a3f <_Z41__static_initialization_and_destruction_0ii+0x4f>
    5a04:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    5a0b:	75 32                	jne    5a3f <_Z41__static_initialization_and_destruction_0ii+0x4f>
    5a0d:	48 8d 05 5e 88 00 00 	lea    0x885e(%rip),%rax        # e272 <_ZStL8__ioinit>
    5a14:	48 89 c7             	mov    %rax,%rdi
    5a17:	e8 14 c8 ff ff       	call   2230 <_ZNSt8ios_base4InitC1Ev@plt>
    5a1c:	48 8d 05 1d 87 00 00 	lea    0x871d(%rip),%rax        # e140 <__dso_handle>
    5a23:	48 89 c2             	mov    %rax,%rdx
    5a26:	48 8d 05 45 88 00 00 	lea    0x8845(%rip),%rax        # e272 <_ZStL8__ioinit>
    5a2d:	48 89 c6             	mov    %rax,%rsi
    5a30:	48 8b 05 99 85 00 00 	mov    0x8599(%rip),%rax        # dfd0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    5a37:	48 89 c7             	mov    %rax,%rdi
    5a3a:	e8 f1 c6 ff ff       	call   2130 <__cxa_atexit@plt>
    5a3f:	90                   	nop
    5a40:	c9                   	leave
    5a41:	c3                   	ret

0000000000005a42 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    5a42:	55                   	push   %rbp
    5a43:	48 89 e5             	mov    %rsp,%rbp
    5a46:	be ff ff 00 00       	mov    $0xffff,%esi
    5a4b:	bf 01 00 00 00       	mov    $0x1,%edi
    5a50:	e8 9b ff ff ff       	call   59f0 <_Z41__static_initialization_and_destruction_0ii>
    5a55:	5d                   	pop    %rbp
    5a56:	c3                   	ret

0000000000005a57 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    5a57:	55                   	push   %rbp
    5a58:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    5a5b:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    5a60:	5d                   	pop    %rbp
    5a61:	c3                   	ret

0000000000005a62 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      static _GLIBCXX_CONSTEXPR bool
      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { return __c1 == __c2; }

      static _GLIBCXX_CONSTEXPR bool
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    5a62:	55                   	push   %rbp
    5a63:	48 89 e5             	mov    %rsp,%rbp
    5a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	// LWG 467.
	return (static_cast<unsigned char>(__c1)
    5a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a72:	0f b6 00             	movzbl (%rax),%eax
    5a75:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    5a77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a7b:	0f b6 00             	movzbl (%rax),%eax
    5a7e:	38 c2                	cmp    %al,%dl
    5a80:	0f 92 c0             	setb   %al
      }
    5a83:	5d                   	pop    %rbp
    5a84:	c3                   	ret

0000000000005a85 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:

      static _GLIBCXX17_CONSTEXPR int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    5a85:	55                   	push   %rbp
    5a86:	48 89 e5             	mov    %rsp,%rbp
    5a89:	48 83 ec 30          	sub    $0x30,%rsp
    5a8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5a91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5a95:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      {
	if (__n == 0)
    5a99:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    5a9e:	75 0a                	jne    5aaa <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    5aa0:	b8 00 00 00 00       	mov    $0x0,%eax
    5aa5:	e9 99 00 00 00       	jmp    5b43 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    5aaa:	e8 a8 ff ff ff       	call   5a57 <_ZSt23__is_constant_evaluatedv>
    5aaf:	84 c0                	test   %al,%al
    5ab1:	74 78                	je     5b2b <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	  {
	    for (size_t __i = 0; __i < __n; ++__i)
    5ab3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    5aba:	00 
    5abb:	eb 5d                	jmp    5b1a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    5abd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5ac1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ac5:	48 01 c2             	add    %rax,%rdx
    5ac8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ad0:	48 01 c8             	add    %rcx,%rax
    5ad3:	48 89 d6             	mov    %rdx,%rsi
    5ad6:	48 89 c7             	mov    %rax,%rdi
    5ad9:	e8 84 ff ff ff       	call   5a62 <_ZNSt11char_traitsIcE2ltERKcS2_>
    5ade:	84 c0                	test   %al,%al
    5ae0:	74 07                	je     5ae9 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    5ae2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5ae7:	eb 5a                	jmp    5b43 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    5ae9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5aed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5af1:	48 01 c2             	add    %rax,%rdx
    5af4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5afc:	48 01 c8             	add    %rcx,%rax
    5aff:	48 89 d6             	mov    %rdx,%rsi
    5b02:	48 89 c7             	mov    %rax,%rdi
    5b05:	e8 58 ff ff ff       	call   5a62 <_ZNSt11char_traitsIcE2ltERKcS2_>
    5b0a:	84 c0                	test   %al,%al
    5b0c:	74 07                	je     5b15 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    5b0e:	b8 01 00 00 00       	mov    $0x1,%eax
    5b13:	eb 2e                	jmp    5b43 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    5b15:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    5b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b1e:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5b22:	72 99                	jb     5abd <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    5b24:	b8 00 00 00 00       	mov    $0x0,%eax
    5b29:	eb 18                	jmp    5b43 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	  }
#endif
	return __builtin_memcmp(__s1, __s2, __n);
    5b2b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b2f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5b33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b37:	48 89 ce             	mov    %rcx,%rsi
    5b3a:	48 89 c7             	mov    %rax,%rdi
    5b3d:	e8 4e c5 ff ff       	call   2090 <memcmp@plt>
    5b42:	90                   	nop
      }
    5b43:	c9                   	leave
    5b44:	c3                   	ret

0000000000005b45 <_ZNSt11char_traitsIcE6lengthEPKc>:

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    5b45:	55                   	push   %rbp
    5b46:	48 89 e5             	mov    %rsp,%rbp
    5b49:	48 83 ec 10          	sub    $0x10,%rsp
    5b4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    5b51:	e8 01 ff ff ff       	call   5a57 <_ZSt23__is_constant_evaluatedv>
    5b56:	84 c0                	test   %al,%al
    5b58:	74 0e                	je     5b68 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    5b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b5e:	48 89 c7             	mov    %rax,%rdi
    5b61:	e8 44 00 00 00       	call   5baa <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    5b66:	eb 0d                	jmp    5b75 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    5b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b6c:	48 89 c7             	mov    %rax,%rdi
    5b6f:	e8 0c c5 ff ff       	call   2080 <strlen@plt>
    5b74:	90                   	nop
      }
    5b75:	c9                   	leave
    5b76:	c3                   	ret
    5b77:	90                   	nop

0000000000005b78 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    5b78:	55                   	push   %rbp
    5b79:	48 89 e5             	mov    %rsp,%rbp
    5b7c:	48 83 ec 10          	sub    $0x10,%rsp
    5b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    5b88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b8c:	48 89 c7             	mov    %rax,%rdi
    5b8f:	e8 b1 ff ff ff       	call   5b45 <_ZNSt11char_traitsIcE6lengthEPKc>
    5b94:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5b98:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    5b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b9f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ba3:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    5ba7:	90                   	nop
    5ba8:	c9                   	leave
    5ba9:	c3                   	ret

0000000000005baa <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    5baa:	55                   	push   %rbp
    5bab:	48 89 e5             	mov    %rsp,%rbp
    5bae:	48 83 ec 20          	sub    $0x20,%rsp
    5bb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    5bb6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    5bbd:	00 
      while (!eq(__p[__i], char_type()))
    5bbe:	eb 05                	jmp    5bc5 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    5bc0:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    5bc5:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    5bc9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bd1:	48 01 c2             	add    %rax,%rdx
    5bd4:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    5bd8:	48 89 c6             	mov    %rax,%rsi
    5bdb:	48 89 d7             	mov    %rdx,%rdi
    5bde:	e8 0d 00 00 00       	call   5bf0 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    5be3:	83 f0 01             	xor    $0x1,%eax
    5be6:	84 c0                	test   %al,%al
    5be8:	75 d6                	jne    5bc0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    5bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5bee:	c9                   	leave
    5bef:	c3                   	ret

0000000000005bf0 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    5bf0:	55                   	push   %rbp
    5bf1:	48 89 e5             	mov    %rsp,%rbp
    5bf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    5bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c00:	0f b6 10             	movzbl (%rax),%edx
    5c03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c07:	0f b6 00             	movzbl (%rax),%eax
    5c0a:	38 c2                	cmp    %al,%dl
    5c0c:	0f 94 c0             	sete   %al
    5c0f:	5d                   	pop    %rbp
    5c10:	c3                   	ret
    5c11:	90                   	nop

0000000000005c12 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    5c12:	55                   	push   %rbp
    5c13:	48 89 e5             	mov    %rsp,%rbp
    5c16:	48 83 ec 20          	sub    $0x20,%rsp
    5c1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    5c1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5c22:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5c26:	48 89 d6             	mov    %rdx,%rsi
    5c29:	48 89 c7             	mov    %rax,%rdi
    5c2c:	e8 27 01 00 00       	call   5d58 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5c31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c35:	c9                   	leave
    5c36:	c3                   	ret
    5c37:	90                   	nop

0000000000005c38 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    5c38:	55                   	push   %rbp
    5c39:	48 89 e5             	mov    %rsp,%rbp
    5c3c:	48 83 ec 20          	sub    $0x20,%rsp
    5c40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    5c44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c48:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5c4c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5c50:	48 89 d6             	mov    %rdx,%rsi
    5c53:	48 89 c7             	mov    %rax,%rdi
    5c56:	e8 fd 00 00 00       	call   5d58 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c5f:	c9                   	leave
    5c60:	c3                   	ret

0000000000005c61 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5c61:	55                   	push   %rbp
    5c62:	48 89 e5             	mov    %rsp,%rbp
    5c65:	53                   	push   %rbx
    5c66:	48 83 ec 18          	sub    $0x18,%rsp
    5c6a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c6e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    5c72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c76:	48 89 c7             	mov    %rax,%rdi
    5c79:	e8 f8 00 00 00       	call   5d76 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    5c7e:	48 8b 18             	mov    (%rax),%rbx
    5c81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5c85:	48 89 c7             	mov    %rax,%rdi
    5c88:	e8 e9 00 00 00       	call   5d76 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    5c8d:	48 8b 00             	mov    (%rax),%rax
    5c90:	48 39 c3             	cmp    %rax,%rbx
    5c93:	0f 95 c0             	setne  %al
    5c96:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c9a:	c9                   	leave
    5c9b:	c3                   	ret

0000000000005c9c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    5c9c:	55                   	push   %rbp
    5c9d:	48 89 e5             	mov    %rsp,%rbp
    5ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    5ca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ca8:	48 8b 00             	mov    (%rax),%rax
    5cab:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    5cb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cb6:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    5cb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5cbd:	5d                   	pop    %rbp
    5cbe:	c3                   	ret
    5cbf:	90                   	nop

0000000000005cc0 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    5cc0:	55                   	push   %rbp
    5cc1:	48 89 e5             	mov    %rsp,%rbp
    5cc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    5cc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ccc:	48 8b 00             	mov    (%rax),%rax
    5ccf:	5d                   	pop    %rbp
    5cd0:	c3                   	ret
    5cd1:	90                   	nop

0000000000005cd2 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    5cd2:	55                   	push   %rbp
    5cd3:	48 89 e5             	mov    %rsp,%rbp
    5cd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    5cda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cde:	48 8b 00             	mov    (%rax),%rax
    5ce1:	5d                   	pop    %rbp
    5ce2:	c3                   	ret

0000000000005ce3 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    5ce3:	55                   	push   %rbp
    5ce4:	48 89 e5             	mov    %rsp,%rbp
    5ce7:	53                   	push   %rbx
    5ce8:	48 83 ec 28          	sub    $0x28,%rsp
    5cec:	48 89 f0             	mov    %rsi,%rax
    5cef:	49 89 f8             	mov    %rdi,%r8
    5cf2:	4c 89 c6             	mov    %r8,%rsi
    5cf5:	4c 89 cf             	mov    %r9,%rdi
    5cf8:	48 89 c7             	mov    %rax,%rdi
    5cfb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5cff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5d03:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    5d07:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    5d0b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5d0f:	48 89 c7             	mov    %rax,%rdi
    5d12:	e8 bb ff ff ff       	call   5cd2 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    5d17:	48 89 c3             	mov    %rax,%rbx
    5d1a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5d1e:	48 89 c7             	mov    %rax,%rdi
    5d21:	e8 ac ff ff ff       	call   5cd2 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    5d26:	48 39 c3             	cmp    %rax,%rbx
    5d29:	75 22                	jne    5d4d <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    5d2b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5d2f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5d33:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5d37:	48 89 ce             	mov    %rcx,%rsi
    5d3a:	48 89 c7             	mov    %rax,%rdi
    5d3d:	e8 42 00 00 00       	call   5d84 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    5d42:	85 c0                	test   %eax,%eax
    5d44:	75 07                	jne    5d4d <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    5d46:	b8 01 00 00 00       	mov    $0x1,%eax
    5d4b:	eb 05                	jmp    5d52 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    5d4d:	b8 00 00 00 00       	mov    $0x0,%eax
    5d52:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5d56:	c9                   	leave
    5d57:	c3                   	ret

0000000000005d58 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5d58:	55                   	push   %rbp
    5d59:	48 89 e5             	mov    %rsp,%rbp
    5d5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5d64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d68:	48 8b 10             	mov    (%rax),%rdx
    5d6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d6f:	48 89 10             	mov    %rdx,(%rax)
    5d72:	90                   	nop
    5d73:	5d                   	pop    %rbp
    5d74:	c3                   	ret
    5d75:	90                   	nop

0000000000005d76 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5d76:	55                   	push   %rbp
    5d77:	48 89 e5             	mov    %rsp,%rbp
    5d7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d82:	5d                   	pop    %rbp
    5d83:	c3                   	ret

0000000000005d84 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    5d84:	55                   	push   %rbp
    5d85:	48 89 e5             	mov    %rsp,%rbp
    5d88:	48 83 ec 30          	sub    $0x30,%rsp
    5d8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5d90:	48 89 d1             	mov    %rdx,%rcx
    5d93:	48 89 f0             	mov    %rsi,%rax
    5d96:	48 89 fa             	mov    %rdi,%rdx
    5d99:	48 89 ca             	mov    %rcx,%rdx
    5d9c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5da0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    5da4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5da8:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    5dac:	48 89 d6             	mov    %rdx,%rsi
    5daf:	48 89 c7             	mov    %rax,%rdi
    5db2:	e8 72 e5 ff ff       	call   4329 <_ZSt3minImERKT_S2_S2_>
    5db7:	48 8b 00             	mov    (%rax),%rax
    5dba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    5dbe:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    5dc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dc6:	48 8b 40 08          	mov    0x8(%rax),%rax
    5dca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5dce:	48 89 ce             	mov    %rcx,%rsi
    5dd1:	48 89 c7             	mov    %rax,%rdi
    5dd4:	e8 ac fc ff ff       	call   5a85 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    5dd9:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    5ddc:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    5de0:	75 19                	jne    5dfb <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    5de2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5de6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dea:	48 8b 00             	mov    (%rax),%rax
    5ded:	48 89 d6             	mov    %rdx,%rsi
    5df0:	48 89 c7             	mov    %rax,%rdi
    5df3:	e8 08 00 00 00       	call   5e00 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    5df8:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    5dfb:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    5dfe:	c9                   	leave
    5dff:	c3                   	ret

0000000000005e00 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    5e00:	55                   	push   %rbp
    5e01:	48 89 e5             	mov    %rsp,%rbp
    5e04:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5e08:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    5e0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e10:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    5e14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    5e18:	b8 00 00 00 80       	mov    $0x80000000,%eax
    5e1d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    5e21:	7c 07                	jl     5e2a <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    5e23:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    5e28:	eb 1b                	jmp    5e45 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    5e2a:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    5e31:	ff ff ff 
    5e34:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    5e38:	7f 07                	jg     5e41 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    5e3a:	b8 00 00 00 80       	mov    $0x80000000,%eax
    5e3f:	eb 04                	jmp    5e45 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    5e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5e45:	5d                   	pop    %rbp
    5e46:	c3                   	ret
    5e47:	90                   	nop

0000000000005e48 <_ZN9VulkanApp12createWindowEv>:
#include "vkh.hpp"

void VulkanApp::createWindow() {
    5e48:	55                   	push   %rbp
    5e49:	48 89 e5             	mov    %rsp,%rbp
    5e4c:	48 83 ec 10          	sub    $0x10,%rsp
    5e50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    5e54:	e8 87 c3 ff ff       	call   21e0 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    5e59:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    5e5f:	b9 00 00 00 00       	mov    $0x0,%ecx
    5e64:	48 8d 05 bd 3c 00 00 	lea    0x3cbd(%rip),%rax        # 9b28 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    5e6b:	48 89 c2             	mov    %rax,%rdx
    5e6e:	be 58 02 00 00       	mov    $0x258,%esi
    5e73:	bf 20 03 00 00       	mov    $0x320,%edi
    5e78:	e8 9c c6 ff ff       	call   2519 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    5e7d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5e81:	48 89 02             	mov    %rax,(%rdx)
}
    5e84:	90                   	nop
    5e85:	c9                   	leave
    5e86:	c3                   	ret
    5e87:	90                   	nop

0000000000005e88 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    5e88:	55                   	push   %rbp
    5e89:	48 89 e5             	mov    %rsp,%rbp
    5e8c:	41 55                	push   %r13
    5e8e:	41 54                	push   %r12
    5e90:	53                   	push   %rbx
    5e91:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
    5e98:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
  auto appInfo = vkh::makeApplicationInfo();
    5e9f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    5ea3:	48 8d 15 7e 3c 00 00 	lea    0x3c7e(%rip),%rdx        # 9b28 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    5eaa:	48 89 d6             	mov    %rdx,%rsi
    5ead:	48 89 c7             	mov    %rax,%rdi
    5eb0:	e8 47 f6 ff ff       	call   54fc <_ZN3vkh19makeApplicationInfoEPKc>
  const std::vector<const char *> layers = {"VK_LAYER_KHRONOS_validation"};
    5eb5:	48 8d 05 7f 3c 00 00 	lea    0x3c7f(%rip),%rax        # 9b3b <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x1b>
    5ebc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5ec0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5ec4:	49 89 c4             	mov    %rax,%r12
    5ec7:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    5ecd:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5ed1:	48 89 c7             	mov    %rax,%rdi
    5ed4:	e8 8d d0 ff ff       	call   2f66 <_ZNSaIPKcEC1Ev>
    5ed9:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    5edd:	4c 89 e6             	mov    %r12,%rsi
    5ee0:	4c 89 ef             	mov    %r13,%rdi
    5ee3:	4c 89 e1             	mov    %r12,%rcx
    5ee6:	4c 89 eb             	mov    %r13,%rbx
    5ee9:	48 89 df             	mov    %rbx,%rdi
    5eec:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5ef0:	48 89 d1             	mov    %rdx,%rcx
    5ef3:	48 89 fa             	mov    %rdi,%rdx
    5ef6:	48 89 c7             	mov    %rax,%rdi
    5ef9:	e8 54 04 00 00       	call   6352 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    5efe:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5f02:	48 89 c7             	mov    %rax,%rdi
    5f05:	e8 78 d0 ff ff       	call   2f82 <_ZNSaIPKcED1Ev>
  auto extensions = vkh::getRequiredInstanceExtensionNameList(true);
    5f0a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5f11:	be 01 00 00 00       	mov    $0x1,%esi
    5f16:	48 89 c7             	mov    %rax,%rdi
    5f19:	e8 cb ca ff ff       	call   29e9 <_ZN3vkh36getRequiredInstanceExtensionNameListEb>
  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    5f1e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5f22:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
    5f29:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    5f30:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    5f37:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    5f3e:	48 89 c7             	mov    %rax,%rdi
    5f41:	e8 fb f8 ff ff       	call   5841 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  auto createInfo = vkh::makeInstanceCreateInfo(
    5f46:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5f4a:	48 89 c7             	mov    %rax,%rdi
    5f4d:	e8 ac 04 00 00       	call   63fe <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    5f52:	49 89 c4             	mov    %rax,%r12
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
      static_cast<uint32_t>(layers.size()), layers.data(),
    5f55:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5f59:	48 89 c7             	mov    %rax,%rdi
    5f5c:	e8 0d eb ff ff       	call   4a6e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    5f61:	41 89 c5             	mov    %eax,%r13d
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
    5f64:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5f6b:	48 89 c7             	mov    %rax,%rdi
    5f6e:	e8 67 04 00 00       	call   63da <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    5f73:	48 89 c3             	mov    %rax,%rbx
    5f76:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5f7d:	48 89 c7             	mov    %rax,%rdi
    5f80:	e8 e9 ea ff ff       	call   4a6e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    5f85:	89 c7                	mov    %eax,%edi
    5f87:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    5f8e:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    5f92:	48 83 ec 08          	sub    $0x8,%rsp
    5f96:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    5f9d:	52                   	push   %rdx
    5f9e:	4d 89 e1             	mov    %r12,%r9
    5fa1:	45 89 e8             	mov    %r13d,%r8d
    5fa4:	48 89 d9             	mov    %rbx,%rcx
    5fa7:	89 fa                	mov    %edi,%edx
    5fa9:	48 89 c7             	mov    %rax,%rdi
    5fac:	e8 b7 f5 ff ff       	call   5568 <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>
    5fb1:	48 83 c4 10          	add    $0x10,%rsp
      (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo);
  instance = vkh::createInstance(&createInfo);
    5fb5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    5fbc:	be 00 00 00 00       	mov    $0x0,%esi
    5fc1:	48 89 c7             	mov    %rax,%rdi
    5fc4:	e8 a6 c5 ff ff       	call   256f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    5fc9:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    5fd0:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    5fd4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5fdb:	48 89 c7             	mov    %rax,%rdi
    5fde:	e8 31 d0 ff ff       	call   3014 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    5fe3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5fe7:	48 89 c7             	mov    %rax,%rdi
    5fea:	e8 25 d0 ff ff       	call   3014 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    5fef:	eb 48                	jmp    6039 <_ZN9VulkanApp14createInstanceEv+0x1b1>
  const std::vector<const char *> layers = {"VK_LAYER_KHRONOS_validation"};
    5ff1:	48 89 c3             	mov    %rax,%rbx
    5ff4:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5ff8:	48 89 c7             	mov    %rax,%rdi
    5ffb:	e8 82 cf ff ff       	call   2f82 <_ZNSaIPKcED1Ev>
    6000:	48 89 d8             	mov    %rbx,%rax
    6003:	48 89 c7             	mov    %rax,%rdi
    6006:	e8 75 c2 ff ff       	call   2280 <_Unwind_Resume@plt>
}
    600b:	48 89 c3             	mov    %rax,%rbx
    600e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    6015:	48 89 c7             	mov    %rax,%rdi
    6018:	e8 f7 cf ff ff       	call   3014 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    601d:	eb 03                	jmp    6022 <_ZN9VulkanApp14createInstanceEv+0x19a>
    601f:	48 89 c3             	mov    %rax,%rbx
    6022:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6026:	48 89 c7             	mov    %rax,%rdi
    6029:	e8 e6 cf ff ff       	call   3014 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    602e:	48 89 d8             	mov    %rbx,%rax
    6031:	48 89 c7             	mov    %rax,%rdi
    6034:	e8 47 c2 ff ff       	call   2280 <_Unwind_Resume@plt>
    6039:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    603d:	5b                   	pop    %rbx
    603e:	41 5c                	pop    %r12
    6040:	41 5d                	pop    %r13
    6042:	5d                   	pop    %rbp
    6043:	c3                   	ret

0000000000006044 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    6044:	55                   	push   %rbp
    6045:	48 89 e5             	mov    %rsp,%rbp
    6048:	48 83 ec 10          	sub    $0x10,%rsp
    604c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  debugMessenger = vkh::createDebugMessenger(instance);
    6050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6054:	48 8b 40 08          	mov    0x8(%rax),%rax
    6058:	48 89 c7             	mov    %rax,%rdi
    605b:	e8 97 f8 ff ff       	call   58f7 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    6060:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6064:	48 89 42 10          	mov    %rax,0x10(%rdx)
}
    6068:	90                   	nop
    6069:	c9                   	leave
    606a:	c3                   	ret
    606b:	90                   	nop

000000000000606c <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    606c:	55                   	push   %rbp
    606d:	48 89 e5             	mov    %rsp,%rbp
    6070:	41 54                	push   %r12
    6072:	53                   	push   %rbx
    6073:	48 81 ec e0 03 00 00 	sub    $0x3e0,%rsp
    607a:	48 89 bd 18 fc ff ff 	mov    %rdi,-0x3e8(%rbp)

  /* Select a suitable physical device */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    6081:	48 8b 85 18 fc ff ff 	mov    -0x3e8(%rbp),%rax
    6088:	48 8b 50 08          	mov    0x8(%rax),%rdx
    608c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6090:	48 89 d6             	mov    %rdx,%rsi
    6093:	48 89 c7             	mov    %rax,%rdi
    6096:	e8 f0 ca ff ff       	call   2b8b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    609b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    60a2:	00 
  for (const auto &physicalDevice : physicalDeviceList) {
    60a3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    60a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    60ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    60af:	48 89 c7             	mov    %rax,%rdi
    60b2:	e8 6b 03 00 00       	call   6422 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    60b7:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    60be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    60c2:	48 89 c7             	mov    %rax,%rdi
    60c5:	e8 7e 03 00 00       	call   6448 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    60ca:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    60d1:	eb 53                	jmp    6126 <_ZN9VulkanApp12createDeviceEv+0xba>
    60d3:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
    60da:	48 89 c7             	mov    %rax,%rdi
    60dd:	e8 ea 03 00 00       	call   64cc <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    60e2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    auto physDevPropList = vkh::getPhysicalDevicePropertyList(physicalDevice);
    60e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60ea:	48 8b 10             	mov    (%rax),%rdx
    60ed:	48 8d 85 20 fc ff ff 	lea    -0x3e0(%rbp),%rax
    60f4:	48 89 d6             	mov    %rdx,%rsi
    60f7:	48 89 c7             	mov    %rax,%rdi
    60fa:	e8 fb cb ff ff       	call   2cfa <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
    if (physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) {
    60ff:	8b 85 30 fc ff ff    	mov    -0x3d0(%rbp),%eax
    6105:	83 f8 02             	cmp    $0x2,%eax
    6108:	75 0d                	jne    6117 <_ZN9VulkanApp12createDeviceEv+0xab>
      selectedPhysDev = physicalDevice;
    610a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    610e:	48 8b 00             	mov    (%rax),%rax
    6111:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6115:	eb 2c                	jmp    6143 <_ZN9VulkanApp12createDeviceEv+0xd7>
  for (const auto &physicalDevice : physicalDeviceList) {
    6117:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
    611e:	48 89 c7             	mov    %rax,%rdi
    6121:	e8 86 03 00 00       	call   64ac <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    6126:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    612d:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
    6134:	48 89 d6             	mov    %rdx,%rsi
    6137:	48 89 c7             	mov    %rax,%rdi
    613a:	e8 32 03 00 00       	call   6471 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    613f:	84 c0                	test   %al,%al
    6141:	75 90                	jne    60d3 <_ZN9VulkanApp12createDeviceEv+0x67>
      break;
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    6143:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6148:	75 3b                	jne    6185 <_ZN9VulkanApp12createDeviceEv+0x119>
    throw std::runtime_error("Failed to select a physical device.");
    614a:	bf 10 00 00 00       	mov    $0x10,%edi
    614f:	e8 4c bf ff ff       	call   20a0 <__cxa_allocate_exception@plt>
    6154:	48 89 c3             	mov    %rax,%rbx
    6157:	48 8d 05 fa 39 00 00 	lea    0x39fa(%rip),%rax        # 9b58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x38>
    615e:	48 89 c6             	mov    %rax,%rsi
    6161:	48 89 df             	mov    %rbx,%rdi
    6164:	e8 e7 be ff ff       	call   2050 <_ZNSt13runtime_errorC1EPKc@plt>
    6169:	48 8b 05 40 7e 00 00 	mov    0x7e40(%rip),%rax        # dfb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6170:	48 89 c2             	mov    %rax,%rdx
    6173:	48 8d 05 e6 7b 00 00 	lea    0x7be6(%rip),%rax        # dd60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    617a:	48 89 c6             	mov    %rax,%rsi
    617d:	48 89 df             	mov    %rbx,%rdi
    6180:	e8 eb c0 ff ff       	call   2270 <__cxa_throw@plt>
  }

  /* Setup the selected device's createInfo */
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(0, nullptr);
    6185:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    618c:	48 83 ec 08          	sub    $0x8,%rsp
    6190:	6a 00                	push   $0x0
    6192:	6a 00                	push   $0x0
    6194:	6a 00                	push   $0x0
    6196:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    619c:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    61a2:	b9 00 00 00 00       	mov    $0x0,%ecx
    61a7:	ba 00 00 00 00       	mov    $0x0,%edx
    61ac:	be 00 00 00 00       	mov    $0x0,%esi
    61b1:	48 89 c7             	mov    %rax,%rdi
    61b4:	e8 36 f4 ff ff       	call   55ef <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfojPKPKcPK24VkPhysicalDeviceFeaturesjS6_PKv>
    61b9:	48 83 c4 20          	add    $0x20,%rsp

  /* Create the logical device */
  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    61bd:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    61c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61c8:	ba 00 00 00 00       	mov    $0x0,%edx
    61cd:	48 89 ce             	mov    %rcx,%rsi
    61d0:	48 89 c7             	mov    %rax,%rdi
    61d3:	e8 2a c4 ff ff       	call   2602 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    61d8:	48 8b 95 18 fc ff ff 	mov    -0x3e8(%rbp),%rdx
    61df:	48 89 42 18          	mov    %rax,0x18(%rdx)
}
    61e3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    61e7:	48 89 c7             	mov    %rax,%rdi
    61ea:	e8 25 d1 ff ff       	call   3314 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    61ef:	eb 2a                	jmp    621b <_ZN9VulkanApp12createDeviceEv+0x1af>
    throw std::runtime_error("Failed to select a physical device.");
    61f1:	49 89 c4             	mov    %rax,%r12
    61f4:	48 89 df             	mov    %rbx,%rdi
    61f7:	e8 d4 be ff ff       	call   20d0 <__cxa_free_exception@plt>
    61fc:	4c 89 e3             	mov    %r12,%rbx
    61ff:	eb 03                	jmp    6204 <_ZN9VulkanApp12createDeviceEv+0x198>
}
    6201:	48 89 c3             	mov    %rax,%rbx
    6204:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6208:	48 89 c7             	mov    %rax,%rdi
    620b:	e8 04 d1 ff ff       	call   3314 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    6210:	48 89 d8             	mov    %rbx,%rax
    6213:	48 89 c7             	mov    %rax,%rdi
    6216:	e8 65 c0 ff ff       	call   2280 <_Unwind_Resume@plt>
    621b:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
    621f:	5b                   	pop    %rbx
    6220:	41 5c                	pop    %r12
    6222:	5d                   	pop    %rbp
    6223:	c3                   	ret

0000000000006224 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    6224:	55                   	push   %rbp
    6225:	48 89 e5             	mov    %rsp,%rbp
    6228:	48 83 ec 10          	sub    $0x10,%rsp
    622c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createWindow();
    6230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6234:	48 89 c7             	mov    %rax,%rdi
    6237:	e8 0c fc ff ff       	call   5e48 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    623c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6240:	48 89 c7             	mov    %rax,%rdi
    6243:	e8 40 fc ff ff       	call   5e88 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    6248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    624c:	48 89 c7             	mov    %rax,%rdi
    624f:	e8 f0 fd ff ff       	call   6044 <_ZN9VulkanApp20createDebugMessengerEv>
  createDevice();
    6254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6258:	48 89 c7             	mov    %rax,%rdi
    625b:	e8 0c fe ff ff       	call   606c <_ZN9VulkanApp12createDeviceEv>
}
    6260:	90                   	nop
    6261:	c9                   	leave
    6262:	c3                   	ret
    6263:	90                   	nop

0000000000006264 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    6264:	55                   	push   %rbp
    6265:	48 89 e5             	mov    %rsp,%rbp
    6268:	48 83 ec 10          	sub    $0x10,%rsp
    626c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    6270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6274:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    627c:	48 8b 40 08          	mov    0x8(%rax),%rax
    6280:	ba 00 00 00 00       	mov    $0x0,%edx
    6285:	48 89 ce             	mov    %rcx,%rsi
    6288:	48 89 c7             	mov    %rax,%rdi
    628b:	e8 0f f7 ff ff       	call   599f <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    6290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6294:	48 8b 40 08          	mov    0x8(%rax),%rax
    6298:	be 00 00 00 00       	mov    $0x0,%esi
    629d:	48 89 c7             	mov    %rax,%rdi
    62a0:	e8 10 c4 ff ff       	call   26b5 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  glfwDestroyWindow(window);
    62a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62a9:	48 8b 00             	mov    (%rax),%rax
    62ac:	48 89 c7             	mov    %rax,%rdi
    62af:	e8 7c bd ff ff       	call   2030 <glfwDestroyWindow@plt>
  glfwTerminate();
    62b4:	e8 f7 be ff ff       	call   21b0 <glfwTerminate@plt>
}
    62b9:	90                   	nop
    62ba:	c9                   	leave
    62bb:	c3                   	ret

00000000000062bc <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    62bc:	55                   	push   %rbp
    62bd:	48 89 e5             	mov    %rsp,%rbp
    62c0:	48 83 ec 10          	sub    $0x10,%rsp
    62c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(window)) {
    62c8:	eb 05                	jmp    62cf <_ZN9VulkanApp3runEv+0x13>
    glfwPollEvents();
    62ca:	e8 91 be ff ff       	call   2160 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(window)) {
    62cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d3:	48 8b 00             	mov    (%rax),%rax
    62d6:	48 89 c7             	mov    %rax,%rdi
    62d9:	e8 b2 bf ff ff       	call   2290 <glfwWindowShouldClose@plt>
    62de:	85 c0                	test   %eax,%eax
    62e0:	0f 94 c0             	sete   %al
    62e3:	84 c0                	test   %al,%al
    62e5:	75 e3                	jne    62ca <_ZN9VulkanApp3runEv+0xe>
  }
    62e7:	90                   	nop
    62e8:	90                   	nop
    62e9:	c9                   	leave
    62ea:	c3                   	ret

00000000000062eb <_Z41__static_initialization_and_destruction_0ii>:
    62eb:	55                   	push   %rbp
    62ec:	48 89 e5             	mov    %rsp,%rbp
    62ef:	48 83 ec 10          	sub    $0x10,%rsp
    62f3:	89 7d fc             	mov    %edi,-0x4(%rbp)
    62f6:	89 75 f8             	mov    %esi,-0x8(%rbp)
    62f9:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    62fd:	75 3b                	jne    633a <_Z41__static_initialization_and_destruction_0ii+0x4f>
    62ff:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    6306:	75 32                	jne    633a <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6308:	48 8d 05 64 7f 00 00 	lea    0x7f64(%rip),%rax        # e273 <_ZStL8__ioinit>
    630f:	48 89 c7             	mov    %rax,%rdi
    6312:	e8 19 bf ff ff       	call   2230 <_ZNSt8ios_base4InitC1Ev@plt>
    6317:	48 8d 05 22 7e 00 00 	lea    0x7e22(%rip),%rax        # e140 <__dso_handle>
    631e:	48 89 c2             	mov    %rax,%rdx
    6321:	48 8d 05 4b 7f 00 00 	lea    0x7f4b(%rip),%rax        # e273 <_ZStL8__ioinit>
    6328:	48 89 c6             	mov    %rax,%rsi
    632b:	48 8b 05 9e 7c 00 00 	mov    0x7c9e(%rip),%rax        # dfd0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    6332:	48 89 c7             	mov    %rax,%rdi
    6335:	e8 f6 bd ff ff       	call   2130 <__cxa_atexit@plt>
    633a:	90                   	nop
    633b:	c9                   	leave
    633c:	c3                   	ret

000000000000633d <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    633d:	55                   	push   %rbp
    633e:	48 89 e5             	mov    %rsp,%rbp
    6341:	be ff ff 00 00       	mov    $0xffff,%esi
    6346:	bf 01 00 00 00       	mov    $0x1,%edi
    634b:	e8 9b ff ff ff       	call   62eb <_Z41__static_initialization_and_destruction_0ii>
    6350:	5d                   	pop    %rbp
    6351:	c3                   	ret

0000000000006352 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    6352:	55                   	push   %rbp
    6353:	48 89 e5             	mov    %rsp,%rbp
    6356:	53                   	push   %rbx
    6357:	48 83 ec 38          	sub    $0x38,%rsp
    635b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    635f:	48 89 f0             	mov    %rsi,%rax
    6362:	48 89 d6             	mov    %rdx,%rsi
    6365:	48 89 f2             	mov    %rsi,%rdx
    6368:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    636c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    6370:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    6374:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6378:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    637c:	48 89 d6             	mov    %rdx,%rsi
    637f:	48 89 c7             	mov    %rax,%rdi
    6382:	e8 57 01 00 00       	call   64de <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    6387:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    638b:	48 89 c7             	mov    %rax,%rdi
    638e:	e8 83 01 00 00       	call   6516 <_ZNKSt16initializer_listIPKcE3endEv>
    6393:	48 89 c3             	mov    %rax,%rbx
    6396:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    639a:	48 89 c7             	mov    %rax,%rdi
    639d:	e8 62 01 00 00       	call   6504 <_ZNKSt16initializer_listIPKcE5beginEv>
    63a2:	48 89 c1             	mov    %rax,%rcx
    63a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63a9:	48 89 da             	mov    %rbx,%rdx
    63ac:	48 89 ce             	mov    %rcx,%rsi
    63af:	48 89 c7             	mov    %rax,%rdi
    63b2:	e8 c5 01 00 00       	call   657c <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    63b7:	eb 1a                	jmp    63d3 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    63b9:	48 89 c3             	mov    %rax,%rbx
    63bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63c0:	48 89 c7             	mov    %rax,%rdi
    63c3:	e8 e2 cc ff ff       	call   30aa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    63c8:	48 89 d8             	mov    %rbx,%rax
    63cb:	48 89 c7             	mov    %rax,%rdi
    63ce:	e8 ad be ff ff       	call   2280 <_Unwind_Resume@plt>
    63d3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63d7:	c9                   	leave
    63d8:	c3                   	ret
    63d9:	90                   	nop

00000000000063da <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    63da:	55                   	push   %rbp
    63db:	48 89 e5             	mov    %rsp,%rbp
    63de:	48 83 ec 10          	sub    $0x10,%rsp
    63e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    63e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ea:	48 8b 10             	mov    (%rax),%rdx
    63ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63f1:	48 89 d6             	mov    %rdx,%rsi
    63f4:	48 89 c7             	mov    %rax,%rdi
    63f7:	e8 30 02 00 00       	call   662c <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    63fc:	c9                   	leave
    63fd:	c3                   	ret

00000000000063fe <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    63fe:	55                   	push   %rbp
    63ff:	48 89 e5             	mov    %rsp,%rbp
    6402:	48 83 ec 10          	sub    $0x10,%rsp
    6406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    640a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    640e:	48 8b 10             	mov    (%rax),%rdx
    6411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6415:	48 89 d6             	mov    %rdx,%rsi
    6418:	48 89 c7             	mov    %rax,%rdi
    641b:	e8 0c 02 00 00       	call   662c <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    6420:	c9                   	leave
    6421:	c3                   	ret

0000000000006422 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6422:	55                   	push   %rbp
    6423:	48 89 e5             	mov    %rsp,%rbp
    6426:	48 83 ec 20          	sub    $0x20,%rsp
    642a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    642e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6432:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6436:	48 89 d6             	mov    %rdx,%rsi
    6439:	48 89 c7             	mov    %rax,%rdi
    643c:	e8 fd 01 00 00       	call   663e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6445:	c9                   	leave
    6446:	c3                   	ret
    6447:	90                   	nop

0000000000006448 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6448:	55                   	push   %rbp
    6449:	48 89 e5             	mov    %rsp,%rbp
    644c:	48 83 ec 20          	sub    $0x20,%rsp
    6450:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6458:	48 8d 50 08          	lea    0x8(%rax),%rdx
    645c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6460:	48 89 d6             	mov    %rdx,%rsi
    6463:	48 89 c7             	mov    %rax,%rdi
    6466:	e8 d3 01 00 00       	call   663e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    646b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646f:	c9                   	leave
    6470:	c3                   	ret

0000000000006471 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    6471:	55                   	push   %rbp
    6472:	48 89 e5             	mov    %rsp,%rbp
    6475:	53                   	push   %rbx
    6476:	48 83 ec 18          	sub    $0x18,%rsp
    647a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    647e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    6482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6486:	48 89 c7             	mov    %rax,%rdi
    6489:	e8 ce 01 00 00       	call   665c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    648e:	48 8b 18             	mov    (%rax),%rbx
    6491:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6495:	48 89 c7             	mov    %rax,%rdi
    6498:	e8 bf 01 00 00       	call   665c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    649d:	48 8b 00             	mov    (%rax),%rax
    64a0:	48 39 c3             	cmp    %rax,%rbx
    64a3:	0f 95 c0             	setne  %al
    64a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    64aa:	c9                   	leave
    64ab:	c3                   	ret

00000000000064ac <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    64ac:	55                   	push   %rbp
    64ad:	48 89 e5             	mov    %rsp,%rbp
    64b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    64b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b8:	48 8b 00             	mov    (%rax),%rax
    64bb:	48 8d 50 08          	lea    0x8(%rax),%rdx
    64bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64c3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    64c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    64ca:	5d                   	pop    %rbp
    64cb:	c3                   	ret

00000000000064cc <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    64cc:	55                   	push   %rbp
    64cd:	48 89 e5             	mov    %rsp,%rbp
    64d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    64d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d8:	48 8b 00             	mov    (%rax),%rax
    64db:	5d                   	pop    %rbp
    64dc:	c3                   	ret
    64dd:	90                   	nop

00000000000064de <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    64de:	55                   	push   %rbp
    64df:	48 89 e5             	mov    %rsp,%rbp
    64e2:	48 83 ec 10          	sub    $0x10,%rsp
    64e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    64ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64f6:	48 89 d6             	mov    %rdx,%rsi
    64f9:	48 89 c7             	mov    %rax,%rdi
    64fc:	e8 fd d7 ff ff       	call   3cfe <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    6501:	90                   	nop
    6502:	c9                   	leave
    6503:	c3                   	ret

0000000000006504 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    6504:	55                   	push   %rbp
    6505:	48 89 e5             	mov    %rsp,%rbp
    6508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    650c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6510:	48 8b 00             	mov    (%rax),%rax
    6513:	5d                   	pop    %rbp
    6514:	c3                   	ret
    6515:	90                   	nop

0000000000006516 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    6516:	55                   	push   %rbp
    6517:	48 89 e5             	mov    %rsp,%rbp
    651a:	53                   	push   %rbx
    651b:	48 83 ec 18          	sub    $0x18,%rsp
    651f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6523:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6527:	48 89 c7             	mov    %rax,%rdi
    652a:	e8 d5 ff ff ff       	call   6504 <_ZNKSt16initializer_listIPKcE5beginEv>
    652f:	48 89 c3             	mov    %rax,%rbx
    6532:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6536:	48 89 c7             	mov    %rax,%rdi
    6539:	e8 2c 01 00 00       	call   666a <_ZNKSt16initializer_listIPKcE4sizeEv>
    653e:	48 c1 e0 03          	shl    $0x3,%rax
    6542:	48 01 d8             	add    %rbx,%rax
    6545:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6549:	c9                   	leave
    654a:	c3                   	ret

000000000000654b <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    654b:	55                   	push   %rbp
    654c:	48 89 e5             	mov    %rsp,%rbp
    654f:	48 83 ec 10          	sub    $0x10,%rsp
    6553:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6557:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    655b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    655f:	48 89 c7             	mov    %rax,%rdi
    6562:	e8 15 01 00 00       	call   667c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    6567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    656b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    656f:	48 89 d6             	mov    %rdx,%rsi
    6572:	48 89 c7             	mov    %rax,%rdi
    6575:	e8 0d 01 00 00       	call   6687 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    657a:	c9                   	leave
    657b:	c3                   	ret

000000000000657c <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    657c:	55                   	push   %rbp
    657d:	48 89 e5             	mov    %rsp,%rbp
    6580:	53                   	push   %rbx
    6581:	48 83 ec 38          	sub    $0x38,%rsp
    6585:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6589:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    658d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    6591:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6595:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6599:	48 89 d6             	mov    %rdx,%rsi
    659c:	48 89 c7             	mov    %rax,%rdi
    659f:	e8 a7 ff ff ff       	call   654b <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    65a4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    65a8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    65ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65b0:	48 89 c7             	mov    %rax,%rdi
    65b3:	e8 e4 d0 ff ff       	call   369c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    65b8:	48 89 c2             	mov    %rax,%rdx
    65bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65bf:	48 89 d6             	mov    %rdx,%rsi
    65c2:	48 89 c7             	mov    %rax,%rdi
    65c5:	e8 d3 cf ff ff       	call   359d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    65ca:	48 89 c6             	mov    %rax,%rsi
    65cd:	48 89 df             	mov    %rbx,%rdi
    65d0:	e8 9b de ff ff       	call   4470 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    65d5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    65d9:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    65dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65e0:	48 8b 00             	mov    (%rax),%rax
    65e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65e7:	48 c1 e2 03          	shl    $0x3,%rdx
    65eb:	48 01 c2             	add    %rax,%rdx
    65ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65f2:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    65f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65fa:	48 89 c7             	mov    %rax,%rdi
    65fd:	e8 9a d0 ff ff       	call   369c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    6602:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    6605:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6609:	48 8b 10             	mov    (%rax),%rdx
    660c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6610:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6614:	48 89 c7             	mov    %rax,%rdi
    6617:	e8 85 00 00 00       	call   66a1 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    661c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6620:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    6624:	90                   	nop
    6625:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6629:	c9                   	leave
    662a:	c3                   	ret
    662b:	90                   	nop

000000000000662c <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    662c:	55                   	push   %rbp
    662d:	48 89 e5             	mov    %rsp,%rbp
    6630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6634:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    6638:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    663c:	5d                   	pop    %rbp
    663d:	c3                   	ret

000000000000663e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    663e:	55                   	push   %rbp
    663f:	48 89 e5             	mov    %rsp,%rbp
    6642:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6646:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    664a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    664e:	48 8b 10             	mov    (%rax),%rdx
    6651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6655:	48 89 10             	mov    %rdx,(%rax)
    6658:	90                   	nop
    6659:	5d                   	pop    %rbp
    665a:	c3                   	ret
    665b:	90                   	nop

000000000000665c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    665c:	55                   	push   %rbp
    665d:	48 89 e5             	mov    %rsp,%rbp
    6660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6668:	5d                   	pop    %rbp
    6669:	c3                   	ret

000000000000666a <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    666a:	55                   	push   %rbp
    666b:	48 89 e5             	mov    %rsp,%rbp
    666e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6676:	48 8b 40 08          	mov    0x8(%rax),%rax
    667a:	5d                   	pop    %rbp
    667b:	c3                   	ret

000000000000667c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    667c:	55                   	push   %rbp
    667d:	48 89 e5             	mov    %rsp,%rbp
    6680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6684:	90                   	nop
    6685:	5d                   	pop    %rbp
    6686:	c3                   	ret

0000000000006687 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    6687:	55                   	push   %rbp
    6688:	48 89 e5             	mov    %rsp,%rbp
    668b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    668f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    6693:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6697:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    669b:	48 c1 f8 03          	sar    $0x3,%rax
    }
    669f:	5d                   	pop    %rbp
    66a0:	c3                   	ret

00000000000066a1 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    66a1:	55                   	push   %rbp
    66a2:	48 89 e5             	mov    %rsp,%rbp
    66a5:	48 83 ec 20          	sub    $0x20,%rsp
    66a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66b1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    66b5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    66b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    66c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c5:	48 89 ce             	mov    %rcx,%rsi
    66c8:	48 89 c7             	mov    %rax,%rdi
    66cb:	e8 02 00 00 00       	call   66d2 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    66d0:	c9                   	leave
    66d1:	c3                   	ret

00000000000066d2 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    66d2:	55                   	push   %rbp
    66d3:	48 89 e5             	mov    %rsp,%rbp
    66d6:	48 83 ec 30          	sub    $0x30,%rsp
    66da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    66de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    66e2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    66e6:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    66ea:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    66ee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    66f2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    66f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66fa:	48 89 ce             	mov    %rcx,%rsi
    66fd:	48 89 c7             	mov    %rax,%rdi
    6700:	e8 02 00 00 00       	call   6707 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    6705:	c9                   	leave
    6706:	c3                   	ret

0000000000006707 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    6707:	55                   	push   %rbp
    6708:	48 89 e5             	mov    %rsp,%rbp
    670b:	48 83 ec 20          	sub    $0x20,%rsp
    670f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6713:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6717:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    671b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    671f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6723:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6727:	48 89 ce             	mov    %rcx,%rsi
    672a:	48 89 c7             	mov    %rax,%rdi
    672d:	e8 02 00 00 00       	call   6734 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    6732:	c9                   	leave
    6733:	c3                   	ret

0000000000006734 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    6734:	55                   	push   %rbp
    6735:	48 89 e5             	mov    %rsp,%rbp
    6738:	53                   	push   %rbx
    6739:	48 83 ec 28          	sub    $0x28,%rsp
    673d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6741:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6745:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    6749:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    674d:	48 89 c7             	mov    %rax,%rdi
    6750:	e8 2a 00 00 00       	call   677f <_ZSt12__miter_baseIPKPKcET_S4_>
    6755:	48 89 c3             	mov    %rax,%rbx
    6758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    675c:	48 89 c7             	mov    %rax,%rdi
    675f:	e8 1b 00 00 00       	call   677f <_ZSt12__miter_baseIPKPKcET_S4_>
    6764:	48 89 c1             	mov    %rax,%rcx
    6767:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    676b:	48 89 c2             	mov    %rax,%rdx
    676e:	48 89 de             	mov    %rbx,%rsi
    6771:	48 89 cf             	mov    %rcx,%rdi
    6774:	e8 14 00 00 00       	call   678d <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    6779:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    677d:	c9                   	leave
    677e:	c3                   	ret

000000000000677f <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    677f:	55                   	push   %rbp
    6780:	48 89 e5             	mov    %rsp,%rbp
    6783:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    678b:	5d                   	pop    %rbp
    678c:	c3                   	ret

000000000000678d <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    678d:	55                   	push   %rbp
    678e:	48 89 e5             	mov    %rsp,%rbp
    6791:	41 54                	push   %r12
    6793:	53                   	push   %rbx
    6794:	48 83 ec 20          	sub    $0x20,%rsp
    6798:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    679c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    67a0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    67a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67a8:	48 89 c7             	mov    %rax,%rdi
    67ab:	e8 de e6 ff ff       	call   4e8e <_ZSt12__niter_baseIPPKcET_S3_>
    67b0:	49 89 c4             	mov    %rax,%r12
    67b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    67b7:	48 89 c7             	mov    %rax,%rdi
    67ba:	e8 38 00 00 00       	call   67f7 <_ZSt12__niter_baseIPKPKcET_S4_>
    67bf:	48 89 c3             	mov    %rax,%rbx
    67c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67c6:	48 89 c7             	mov    %rax,%rdi
    67c9:	e8 29 00 00 00       	call   67f7 <_ZSt12__niter_baseIPKPKcET_S4_>
    67ce:	4c 89 e2             	mov    %r12,%rdx
    67d1:	48 89 de             	mov    %rbx,%rsi
    67d4:	48 89 c7             	mov    %rax,%rdi
    67d7:	e8 29 00 00 00       	call   6805 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    67dc:	48 89 c2             	mov    %rax,%rdx
    67df:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    67e3:	48 89 d6             	mov    %rdx,%rsi
    67e6:	48 89 c7             	mov    %rax,%rdi
    67e9:	e8 44 00 00 00       	call   6832 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    67ee:	48 83 c4 20          	add    $0x20,%rsp
    67f2:	5b                   	pop    %rbx
    67f3:	41 5c                	pop    %r12
    67f5:	5d                   	pop    %rbp
    67f6:	c3                   	ret

00000000000067f7 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    67f7:	55                   	push   %rbp
    67f8:	48 89 e5             	mov    %rsp,%rbp
    67fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    67ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6803:	5d                   	pop    %rbp
    6804:	c3                   	ret

0000000000006805 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    6805:	55                   	push   %rbp
    6806:	48 89 e5             	mov    %rsp,%rbp
    6809:	48 83 ec 20          	sub    $0x20,%rsp
    680d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6811:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6815:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    6819:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    681d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6821:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6825:	48 89 ce             	mov    %rcx,%rsi
    6828:	48 89 c7             	mov    %rax,%rdi
    682b:	e8 14 00 00 00       	call   6844 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    6830:	c9                   	leave
    6831:	c3                   	ret

0000000000006832 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    6832:	55                   	push   %rbp
    6833:	48 89 e5             	mov    %rsp,%rbp
    6836:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    683a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    683e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6842:	5d                   	pop    %rbp
    6843:	c3                   	ret

0000000000006844 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6844:	55                   	push   %rbp
    6845:	48 89 e5             	mov    %rsp,%rbp
    6848:	48 83 ec 20          	sub    $0x20,%rsp
    684c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6850:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6854:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6858:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    685c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6864:	48 89 ce             	mov    %rcx,%rsi
    6867:	48 89 c7             	mov    %rax,%rdi
    686a:	e8 02 00 00 00       	call   6871 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    686f:	c9                   	leave
    6870:	c3                   	ret

0000000000006871 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    6871:	55                   	push   %rbp
    6872:	48 89 e5             	mov    %rsp,%rbp
    6875:	48 83 ec 30          	sub    $0x30,%rsp
    6879:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    687d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6881:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    6885:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6889:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    688d:	48 c1 f8 03          	sar    $0x3,%rax
    6891:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    6895:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    689a:	74 1f                	je     68bb <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    689c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68a0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    68a7:	00 
    68a8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    68ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    68b0:	48 89 ce             	mov    %rcx,%rsi
    68b3:	48 89 c7             	mov    %rax,%rdi
    68b6:	e8 95 b9 ff ff       	call   2250 <memmove@plt>
	  return __result + _Num;
    68bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68bf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    68c6:	00 
    68c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    68cb:	48 01 d0             	add    %rdx,%rax
	}
    68ce:	c9                   	leave
    68cf:	c3                   	ret

Disassembly of section .fini:

00000000000068d0 <_fini>:
    68d0:	48 83 ec 08          	sub    $0x8,%rsp
    68d4:	48 83 c4 08          	add    $0x8,%rsp
    68d8:	c3                   	ret
